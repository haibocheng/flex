<?xml version="1.0"?>
<apiPackage id="mx.controls"><apiName>mx.controls</apiName><apiDetail/><apiClassifier id="mx.controls:FileSystemDataGrid"><apiName>FileSystemDataGrid</apiName><shortdesc>
  Элемент управления FileSystemDataGrid позволяет отображать содержимое одного каталога файловой системы в формате сетки данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="EmbeddedFile" inherit="no" name="fileIcon" owner="mx.controls:FileSystemDataGrid" playerVersion="AIR1.1" type="Class">
<description>
  Определяет значок, указывающий файл. Значок по умолчанию расположен в файле Assets.swf. В MXML для установки значений этого свойства используются следующий синтаксис: <codeph>fileIcon="@Embed(source='fileIcon.jpg');"</codeph>.
 
  </description>
<default>TreeNodeIcon
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="directoryIcon" owner="mx.controls:FileSystemDataGrid" playerVersion="AIR1.1" type="Class">
<description>
  Определяет значок, указывающий каталог. Значок по умолчанию расположен в файле Assets.swf. В MXML для установки значений этого свойства используется следующий синтаксис: <codeph>directoryIcon="@Embed(source='directoryIcon.jpg');"</codeph>.
 
  </description>
<default>TreeNodeIcon
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:FileSystemDataGrid&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:FileSystemDataGrid
    <strong>Properties</strong>
    dateFormatString=""
    directory="<i>null</i>"
    enumerationMode="directoriesFirst"
    extensions="<i>null</i>"
    filterFunction="<i>null</i>"
    nameCompareFunction="<i>null</i>"
    selectedPath="<i>null</i>"
    selectedPaths="<i>null</i>"
    showExtensions="true"
    showHidden="false"
    showIcons="true"
 
    <strong>Styles</strong>
    directoryIcon="<i>TreeNodeIcon</i>"
    fileIcon="<i>TreeNodeIcon</i>"
 
    <strong>Events</strong>
    directoryChange="<i>No default</i>"
    directoryChanging="<i>No default</i>"
    fileChoose="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:DataGrid</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления FileSystemDataGrid позволяет отображать содержимое одного каталога файловой системы в формате сетки данных.
 
  <p>Информация, отображаемая для каждого элемента, включает его имя (с необязательным общим значком), тип, размер, дату создания и дату изменения. Для отображения этой информации элемент управления FileSystemDataGrid автоматически создает следующие пять столбцов (экземпляров DataGridColumn): <codeph>nameColumn</codeph>, <codeph>typeColumn</codeph>, <codeph>sizeColumn</codeph>, <codeph>creationDateColumn</codeph> и <codeph>modificationDateColumn</codeph>, а также устанавливает в качестве значения свойства <codeph>columns</codeph> массив, состоящий из этих пяти экземпляров. Каждый экземпляр столбца автоматически конфигурируется с соответствующими функциями <codeph>labelFunction</codeph>, <codeph>sortCompareFunction</codeph> и т.д. Если использовать все пять столбцов не требуется, или необходимо изменить их порядок, следует сбросить свойство <codeph>columns</codeph>. При необходимости настройки столбца, например, путем изменения его функции <codeph>labelFunction</codeph> следует просто переназначить это свойство для соответствующего объекта столбца.</p>
 
  <p>Для изменения отображаемых данных вместо использования свойства <codeph>dataProvider</codeph> можно настроить свойство <codeph>directory</codeph>. Затем элемент управления автоматически заполняет свойство <codeph>dataProvider</codeph> путем перечисления содержимого этого каталога. Выполнять непосредственную настройку свойства <codeph>dataProvider</codeph> не требуется.</p>
 
  <p>Следует установить в качестве значения свойства <codeph>directory</codeph> экземпляр файла, как показано в следующем примере:</p>
  <pre>&lt;mx:FileSystemDataGrid directory="{File.desktopDirectory}"/></pre>
 
  <p>Можно настроить свойство <codeph>enumerationMode</codeph> для определения необходимости отображения файлов, подкаталогов или того и другого. Существует три способа отображения файлов и подкаталогов: первоочередной вывод каталогов, файлов или смешанный вывод.</p>
 
  <p>Можно настроить свойство <codeph>extensions</codeph> для фильтрации отображаемых элементов таким образом, что на экране появляются только файлы с указанными расширениями. Свойство <codeph>showHidden</codeph> определяет необходимость отображения элементом управления файлов и подкаталогов, которые, как правило, скрыты в операционной системе. Можно определить дополнительную функцию <codeph>filterFunction</codeph> для выполнения пользовательской фильтрации, и функцию <codeph>nameCompareFunction</codeph> для выполнения пользовательской сортировки.</p>
 
  <p>Поскольку AIR не поддерживает уведомления файловой системы, автоматическое обновление этого элемента управления в случае создания, удаления, перемещения или переименования файла или подкаталога не выполняется; иными словами, на экране может отображаться устаревшее представление файловой системы. Однако с помощью вызова метода <codeph>refresh()</codeph> можно повторно перечислить текущий <codeph>directory</codeph>. Это осуществляется, например, в случае выполнения файловой операции, результатом которой является отображение устаревшего представления элемента управления, либо в случае деактивации и повторной активации приложения пользователем.</p>
 
  <p>Свойство <codeph>showIcons</codeph> можно использовать для отображения или скрытия значков, а свойство <codeph>showExtensions</codeph> – для отображения или скрытия расширения файла.</p>
 
  <p>Этот элемент управления предоставляет два метода, <codeph>findItem()</codeph> и <codeph>findIndex()</codeph>, которые можно использовать для выполнения поиска среди отображаемых файлов и подкаталогов только элементов с указанным <codeph>nativePath</codeph>.</p>
 
  <p>Два свойства, <codeph>selectedPath</codeph> и <codeph>selectedPaths</codeph>, функционируют аналогично свойствам <codeph>selectedItem</codeph> и <codeph>selectedItems</codeph> или <codeph>selectedIndex</codeph> и <codeph>selectedIndices</codeph>, однако указанные два свойства позволяют указывать вариант выбора посредством строк <codeph>nativePath</codeph>. Эти свойства рекомендуется использовать при необходимости отображения каталога с определенными предварительно выбранными элементами, поскольку в этом случае еще не существует элементов «Файл», создаваемых элементом управления при перечислении каталога, с неизвестными индексами.</p>
 
  <p>Этот элемент управления позволяет пользователю переходить к другим каталогам с использованием мыши или клавиатуры. Пользователь может осуществить попытку изменения каталога путем двойного щелчка по подкаталогу, нажатия клавиши ENTER или Ctrl-«Стрелка вниз» после выбора подкаталога; путем нажатия Ctrl-«Стрелка вверх», если элемент управления не отображает каталог COMPUTER; путем нажатия Ctrl-«Стрелка влево», если существует «предыдущий» каталог для возврата; либо путем нажатия Ctrl-«Стрелка вправо» при наличии «следующего» каталога, в который требуется перейти. Если пользователь пытается изменить отображаемый каталог, элемент управления передает допускающее отмену событие <codeph>directoryChanging</codeph>. Если это событие не отменяется путем вызова метода<codeph>event.preventDefault()</codeph>, элемент управления отображает содержимое нового каталога, и свойство <codeph>directory</codeph> изменяется. При каждом изменении <codeph>directory</codeph> по любой причине элемент управления передает событие <codeph>directoryChange</codeph> с целью уведомления пользователя.</p>
 
  <p>Поддержка элементов управления «Вверх» и «Вниз» осуществляется при помощи свойств <codeph>canNavigateUp</codeph> и <codeph>canNavigateDown</codeph> и методов <codeph>navigateUp()</codeph> и <codeph>navigateDown()</codeph> FileSystemList. Кроме того, существует метод <codeph>navigateTo()</codeph>, позволяющий осуществлять переход к произвольному каталогу.</p>
 
  <p>В целях упрощения поддержки элементов управления «Назад» и «Вперед» элемент управления отслеживает каталоги, в которые переходил пользователь. Для получения дополнительной информации см. описание свойств <codeph>backHistory</codeph>, <codeph>forwardHistory</codeph>, <codeph>canNavigateBack</codeph> и <codeph>canNavigateForward</codeph>, а также методов <codeph>navigateBack()</codeph> и <codeph>navigateForward()</codeph>.</p>
 
  <p>Примечание. Значки, отображаемые для каждого элемента, являются общими для файлов и каталогов, их использование определяется при помощи стилей <codeph>fileIcon</codeph> и <codeph>directoryIcon</codeph>. Элементы управления Flex на основе списка в настоящее время обеспечивают отображение только вложенных значков, динамическое считывание значков не поддерживаются. Таким образом, значки файловой системы, отображаемые в операционной системе, не отображаются в FileSystemDataGrid даже в том случае, если они доступны в AIR при помощи свойства <codeph>icon</codeph> объекта File.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.filesystem.File.xml"><linktext>flash.filesystem.File</linktext></link></related-links><adobeApiEvent id="mx.controls:FileSystemDataGrid_mx.events.FileEvent.FILE_CHOOSE_fileChoose"><apiName>fileChoose</apiName><shortdesc>
  Передается при выборе пользователем какого-либо файла путем двойного щелчка по нему или путем выделения файла с последующим нажатием клавиши Enter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.FILE_CHOOSE</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе пользователем какого-либо файла путем двойного щелчка по нему или путем выделения файла с последующим нажатием клавиши Enter.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FileSystemDataGrid_mx.events.FileEvent.DIRECTORY_OPENING_directoryChanging"><apiName>directoryChanging</apiName><shortdesc>
  Передается при попытке пользователя изменить каталог, отображаемый этим элементом управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_OPENING</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при попытке пользователя изменить каталог, отображаемый этим элементом управления.
 
  <p>Пользователь может осуществить попытку изменения каталога путем двойного щелчка по подкаталогу, нажатия клавиши ENTER или Ctrl-Down после выбора подкаталога; путем нажатия Ctrl-Up, если элемент управления не отображает каталог COMPUTER; путем нажатия Ctrl-Left, если в журнале существует «предыдущий» каталог для возврата; либо путем нажатия Ctrl-Right при наличии в журнале «следующего» каталога, в который требуется перейти.</p>
 
  <p>Это событие допускает отмену. При вызове метода <codeph>event.preventDefault()</codeph> каталог не изменяется.</p>
 
  <p>Если свойство <codeph>directory</codeph> изменилось, и <codeph>dataProvider</codeph> содержит экземпляры файлов для элементов в новом каталоге, то передается событие <codeph>directoryChange</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FileSystemDataGrid_mx.events.FileEvent.DIRECTORY_CHANGE_directoryChange"><apiName>directoryChange</apiName><shortdesc>
  Это событие передается при изменении каталога, отображаемого элементом управления, по любой причине.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при изменении каталога, отображаемого элементом управления, по любой причине.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:FileSystemDataGrid:FileSystemDataGrid"><apiName>FileSystemDataGrid</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:FileSystemDataGrid:clear"><apiName>clear</apiName><shortdesc conref="mx.controls.FileSystemList#clear()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.controls.FileSystemList#clear()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:findIndex"><apiName>findIndex</apiName><shortdesc conref="mx.controls.FileSystemList#findIndex()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/><apiDesc>Отсчитываемый от нуля индекс или <codeph>-1</codeph>, если не найден файл с указанным путем.
     
      </apiDesc></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.FileSystemList#findIndex()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:findItem"><apiName>findItem</apiName><shortdesc conref="mx.controls.FileSystemList#findItem()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.filesystem:File"/><apiDesc>Экземпляр файла, если таковой найден, с указанной строкой <codeph>nativePath</codeph>; либо <codeph>null</codeph>, если экземпляр не обнаружен.
      
      </apiDesc></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.FileSystemList#findItem()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:navigateBack"><apiName>navigateBack</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве backHistory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Индекс в массиве <codeph>backHistory</codeph> для выполнения навигации. По умолчанию используется значение 0, указывающее на ближайший предыдущий каталог.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве <codeph>backHistory</codeph>.
     
      <p>Если массив <codeph>backHistory</codeph> пуст, или указан индекс, не принадлежащий этому массиву, какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Журнал остается без изменений. Однако текущий индекс в нем изменяется, что оказывает влияние на свойства <codeph>backHistory</codeph> и <codeph>forwardHistory</codeph>. После возвращения этим методом каких-либо значений эти свойства получают новые значения.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления FileSystemHistoryButton в целях создания кнопки «Назад»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Back"
          enabled="{fileSystemViewer.canNavigateBack}"
          dataProvider="{fileSystemViewer.backHistory}"
          click="fileSystemViewer.navigateBack();"
          itemClick="fileSystemViewer.navigateBack(event.index);"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/backHistory"><linktext>backHistory</linktext></link><link href="mx.controls.xml#FileSystemDataGrid/canNavigateBack"><linktext>canNavigateBack</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:navigateDown"><apiName>navigateDown</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого выбранного подкаталога.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого выбранного подкаталога.
     
      <p>Если подкаталог не выбран, какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления «Кнопка» в целях создания кнопки «Открыть»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Open"
          enabled="{fileSystemViewer.canNavigateDown}"
          click="fileSystemViewer.navigateDown();"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/canNavigateDown"><linktext>canNavigateDown</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:navigateForward"><apiName>navigateForward</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве forwardHistory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Индекс в массиве <codeph>forwardHistory</codeph> для выполнения навигации. По умолчанию используется значение 0, указывающее на ближайший последующий каталог.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве <codeph>forwardHistory</codeph>.
     
      <p>Если массив <codeph>forwardHistory</codeph> пуст, или указан индекс, не принадлежащий этому массиву, какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Журнал остается без изменений. Однако текущий индекс в нем изменяется, что оказывает влияние на свойства <codeph>backHistory</codeph> и <codeph>forwardHistory</codeph>. После возвращения этим методом каких-либо значений эти свойства получают новые значения.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления FileSystemHistoryButton для создания кнопки «Вперед»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Forward"
          enabled="{fileSystemViewer.canNavigateForward}"
          dataProvider="{fileSystemViewer.forwardHistory}"
          click="fileSystemViewer.navigateForward();"
          itemClick="fileSystemViewer.navigateForward(event.index);"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/canNavigateForward"><linktext>canNavigateForward</linktext></link><link href="mx.controls.xml#FileSystemDataGrid/forwardHistory"><linktext>forwardHistory</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:navigateTo"><apiName>navigateTo</apiName><shortdesc conref="mx.controls.FileSystemList#navigateTo()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>directory</apiItemName><apiType value="flash.filesystem:File"/><apiDesc>Объект файла, представляющий файл или каталог.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.FileSystemList#navigateTo()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:navigateUp"><apiName>navigateUp</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого следующего каталога в иерархии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого следующего каталога в иерархии.
     
      <p>Если этот элемент управления в настоящее время отображает корневые каталоги (например, C: и D: в Microsoft Windows), какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления Button в целях создания кнопки «Вверх»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Up"
          enabled="{fileSystemViewer.canNavigateUp}"
          click="fileSystemViewer.navigateUp();"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/canNavigateUp"><linktext>canNavigateUp</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemDataGrid:refresh"><apiName>refresh</apiName><shortdesc conref="mx.controls.FileSystemList#refresh()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.controls.FileSystemList#refresh()">
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:FileSystemDataGrid:COMPUTER"><apiName>COMPUTER</apiName><shortdesc conref="mx.controls.FileSystemList#COMPUTER">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="flash.filesystem:File"/></apiValueDef><apiDesc conref="mx.controls.FileSystemList#COMPUTER">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:creationDateColumn"><apiName>creationDateColumn</apiName><shortdesc>
      Элемент DataGridColumn представляет столбец Created.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.dataGridClasses:DataGridColumn"/></apiValueDef><apiDesc>
      Элемент DataGridColumn представляет столбец Created. Этот столбец автоматически создается элементом управления FileSystemDataGrid.
     
      <p>Для настройки этого столбца можно установить значения свойств, например, <codeph>creationDateColumn.width</codeph>. Для полного удаления этого столбца или изменения порядка столбцов следует задать в качестве значений свойства <codeph>columns</codeph> определенный массив, например, <codeph>[nameColumn, modificationDateColumn, sizeColumn]</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:modificationDateColumn"><apiName>modificationDateColumn</apiName><shortdesc>
      Элемент DataGridColumn представляет столбец Modified.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.dataGridClasses:DataGridColumn"/></apiValueDef><apiDesc>
      Элемент DataGridColumn представляет столбец Modified. Этот столбец автоматически создается элементом управления FileSystemDataGrid.
     
      <p>Для настройки этого столбца можно установить значения свойств, например, <codeph>modificationDateColumn.width</codeph>. Для полного удаления этого столбца или изменения порядка столбцов следует задать в качестве значений свойства <codeph>columns</codeph> определенный массив, например, <codeph>[nameColumn, modificationDateColumn, sizeColumn]</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:nameColumn"><apiName>nameColumn</apiName><shortdesc>
      Элемент DataGridColumn представляет столбец Name.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.dataGridClasses:DataGridColumn"/></apiValueDef><apiDesc>
      Элемент DataGridColumn представляет столбец Name. Этот столбец автоматически создается элементом управления FileSystemDataGrid.
     
      <p>Для настройки этого столбца можно установить значения свойств, например,<codeph>nameColumn.width</codeph>. Для полного удаления этого столбца или изменения порядка столбцов следует задать в качестве значений свойства <codeph>columns</codeph> определенный массив, например, <codeph>[nameColumn, modificationDateColumn, sizeColumn]</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:sizeColumn"><apiName>sizeColumn</apiName><shortdesc>
      Элемент DataGridColumn представляет столбец Size.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.dataGridClasses:DataGridColumn"/></apiValueDef><apiDesc>
      Элемент DataGridColumn представляет столбец Size. Этот столбец автоматически создается элементом управления FileSystemDataGrid.
     
      <p>Для настройки этого столбца можно установить значения свойств, например, <codeph>sizeColumn.width</codeph>. Для полного удаления этого столбца или изменения порядка столбцов следует задать в качестве значений свойства <codeph>columns</codeph> определенный массив, например, <codeph>[nameColumn, modificationDateColumn, sizeColumn]</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:typeColumn"><apiName>typeColumn</apiName><shortdesc>
      Элемент DataGridColumn представляет столбец Type.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="mx.controls.dataGridClasses:DataGridColumn"/></apiValueDef><apiDesc>
      Элемент DataGridColumn представляет столбец Type. Этот столбец автоматически создается элементом управления FileSystemDataGrid.
     
      <p>Для настройки этого столбца можно установить значения свойств, например, <codeph>typeColumn.width</codeph>. Для полного удаления этого столбца или изменения порядка столбцов следует задать в качестве значений свойства <codeph>columns</codeph> определенный массив, например, <codeph>[nameColumn, modificationDateColumn, sizeColumn]</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:backHistory:get"><apiName>backHistory</apiName><shortdesc>
      Массив объектов File представляет каталоги, в которые может вернуться пользователь.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/><apiDefaultValue>[]
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив объектов File представляет каталоги, в которые может вернуться пользователь.
     
      <p>Первый элемент этого массива представляет собой ближайший предыдущий каталог в журнале. Последним элементом массива является самый последний каталог в журнале.</p>
     
      <p>Этот массив может содержать элемент <codeph>null</codeph>, представляющий несуществующий каталог, содержимым которого являются корневые каталоги, например, C:\ и D:\ в Microsoft Windows.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton в целях реализации кнопки «Назад»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Back"
         enabled="{fileSystemViewer.canNavigateBack}"
         dataProvider="{fileSystemViewer.backHistory}"
         click="fileSystemViewer.navigateBack();"
         itemClick="fileSystemViewer.navigateBack(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/canNavigateBack"><linktext>canNavigateBack</linktext></link><link href="mx.controls.xml#FileSystemDataGrid/navigateBack()"><linktext>navigateBack()</linktext></link><link href="mx.controls.xml#FileSystemHistoryButton"><linktext>mx.controls.FileSystemHistoryButton</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:canNavigateBack:get"><apiName>canNavigateBack</apiName><shortdesc>
      Флаг, имеющий значение true, если в журнале существует, по крайней мере, один каталог, к которому может вернуться пользователь.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph>, если в журнале существует, по крайней мере, один каталог, к которому может вернуться пользователь.
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton в целях реализации кнопки «Назад»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Back"
          enabled="{fileSystemViewer.canNavigateBack}"
          dataProvider="{fileSystemViewer.backHistory}"
          click="fileSystemViewer.navigateBack();"
          itemClick="fileSystemViewer.navigateBack(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/backHistory"><linktext>backHistory</linktext></link><link href="mx.controls.xml#FileSystemDataGrid/navigateBack()"><linktext>navigateBack()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:canNavigateDown:get"><apiName>canNavigateDown</apiName><shortdesc>
      Флаг, имеющий значение true, если для перемещения к выбранному каталогу пользователь может перейти на один уровень вниз.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph>, если для перемещения к выбранному каталогу пользователь может перейти на один уровень вниз. Этот флаг имеет значение <codeph>false</codeph> при отсутствии выбранного элемента или в случае, если выбранным элементом является файл, а не каталог.
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления «Кнопка»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Open"
          enabled="{fileSystemViewer.canNavigateDown}"
          click="fileSystemViewer.navigateDown();"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/navigateDown()"><linktext>navigateDown()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:canNavigateForward:get"><apiName>canNavigateForward</apiName><shortdesc>
      Флаг, имеющий значение true при наличии в журнале, по крайней мере, одного каталога, к которому можно перейти.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph> при наличии в журнале, по крайней мере, одного каталога, к которому можно перейти.
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton для реализации кнопки «Вперед»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Forward"
          enabled="{fileSystemViewer.canNavigateForward}"
          dataProvider="{fileSystemViewer.forwardHistory}"
          click="fileSystemViewer.navigateForward();"
          itemClick="fileSystemViewer.navigateForward(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/forwardHistory"><linktext>forwardHistory</linktext></link><link href="mx.controls.xml#FileSystemDataGrid/navigateForward()"><linktext>navigateForward()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:canNavigateUp:get"><apiName>canNavigateUp</apiName><shortdesc>
      Флаг, имеющий значение true, если пользователь может перейти на один уровень вверх в вышестоящий каталог.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph>, если пользователь может перейти на один уровень вверх в вышестоящий каталог. Этот флаг имеет значение <codeph>false</codeph> только в том случае, если данный элемент управления отображает корневые каталоги, например, C:\ и D:\ в Microsoft Windows. (В этом случае свойство <codeph>directory</codeph> имеет значение <codeph>COMPUTER</codeph>.)
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления «Кнопка»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Up"
          enabled="{fileSystemViewer.canNavigateUp}"
          click="fileSystemViewer.navigateUp();"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/navigateUp()"><linktext>navigateUp()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:dateFormatString:get"><apiName>dateFormatString</apiName><shortdesc>
      Строка, определяющая способ форматирования дат в столбцах Created и Modified.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Строка, определяющая способ форматирования дат в столбцах Created и Modified. Установка этого свойства позволяет настроить <codeph>formatString</codeph> внутреннего DateFormatter, создаваемого данным элементом управления.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.formatters.xml#DateFormatter/formatString"><linktext>mx.formatters.DateFormatter.formatString</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:directory:get"><apiName>directory</apiName><shortdesc conref="mx.controls.FileSystemList#directory">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/></apiValueDef><apiDesc conref="mx.controls.FileSystemList#directory">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:enumerationMode:get"><apiName>enumerationMode</apiName><shortdesc conref="mx.controls.FileSystemList#enumerationMode">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>FileSystemEnumerationMode.DIRECTORIES_FIRST
     
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#enumerationMode">
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemEnumerationMode"><linktext>mx.controls.FileSystemEnumerationMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:extensions:get"><apiName>extensions</apiName><shortdesc conref="mx.controls.FileSystemList#extensions">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#extensions">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:filterFunction:get"><apiName>filterFunction</apiName><shortdesc conref="mx.controls.FileSystemList#filterFunction">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#filterFunction">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:forwardHistory:get"><apiName>forwardHistory</apiName><shortdesc>
      Массив каталогов представляет объекты File, к которым можно перейти.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/><apiDefaultValue>[]
     
     </apiDefaultValue></apiValueDef><apiDesc>
      Массив каталогов представляет объекты File, к которым можно перейти.
     
      <p>Первый элемент этого массива представляет собой ближайший следующий каталог в журнале. Последним элементом массива является самый последний каталог в журнале, к которому можно перейти.</p>
     
      <p>Этот массив может содержать элемент <codeph>null</codeph>, представляющий несуществующий каталог, содержимым которого являются корневые каталоги, например, C:\ и D:\ в Microsoft Windows.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton для реализации кнопки «Вперед»:</p>
     
      <pre>
      &lt;mx:FileSystemDataGrid id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Forward"
          enabled="{fileSystemViewer.canNavigateForward}"
          dataProvider="{fileSystemViewer.forwardHistory}"
          click="fileSystemViewer.navigateForward();"
          itemClick="fileSystemViewer.navigateForward(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemHistoryButton"><linktext>mx.controls.FileSystemHistoryButton</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:nameCompareFunction:get"><apiName>nameCompareFunction</apiName><shortdesc conref="mx.controls.FileSystemList#nameCompareFunction">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#nameCompareFunction">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:selectedPath:get"><apiName>selectedPath</apiName><shortdesc conref="mx.controls.FileSystemList#selectedPath">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#selectedPath">
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedIndex"><linktext>mx.controls.listClasses.ListBase.selectedIndex</linktext></link><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedItem"><linktext>mx.controls.listClasses.ListBase.selectedItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:selectedPaths:get"><apiName>selectedPaths</apiName><shortdesc conref="mx.controls.FileSystemList#selectedPaths">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
     
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#selectedPaths">
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedIndex"><linktext>mx.controls.listClasses.ListBase.selectedIndex</linktext></link><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedItem"><linktext>mx.controls.listClasses.ListBase.selectedItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemDataGrid:showExtensions:get"><apiName>showExtensions</apiName><shortdesc conref="mx.controls.FileSystemList#showExtensions">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.controls.FileSystemList#showExtensions">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:showHidden:get"><apiName>showHidden</apiName><shortdesc conref="mx.controls.FileSystemList#showHidden">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.controls.FileSystemList#showHidden">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:showIcons:get"><apiName>showIcons</apiName><shortdesc conref="mx.controls.FileSystemList#showIcons">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.controls.FileSystemList#showIcons">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemDataGrid:sizeDisplayMode:get"><apiName>sizeDisplayMode</apiName><shortdesc>
      Строка, определяющая способ отображения в столбце Size размеров файлов: в байтах или в виде чисел, являющихся результатом округления до ближайшего значения в килобайтах, где килобайт равен 1024 байта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Строка, определяющая способ отображения в столбце Size размеров файлов: в байтах или в виде чисел, являющихся результатом округления до ближайшего значения в килобайтах, где килобайт равен 1024 байта. Возможные значения определены в классе FileSystemSizeDisplayMode.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemSizeDisplayMode"><linktext>mx.controls.FileSystemSizeDisplayMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:FileSystemTree"><apiName>FileSystemTree</apiName><shortdesc>
  Элемент управления The FileSystemTree отображает содержимое каталога файловой системы в виде дерева.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:FileSystemTree&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:FileSystemTree
    <strong>Properties</strong>
    directory="<i>null</i>"
    enumerationMode="directoriesFirst"
    extensions="<i>null</i>"
    filterFunction="<i>null</i>"
    nameCompareFunction="<i>null</i>"
    openPaths="<i>null</i>"
    selectedPath="<i>null</i>"
    selectedPaths="<i>null</i>"
    showExtensions="true"
    showHidden="false"
    showIcons="true"
 
    <strong>Events</strong>
    directoryChange="<i>No default</i>"
    directoryClosing="<i>No default</i>"
    directoryOpening="<i>No default</i>"
    fileChoose="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Tree</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления The FileSystemTree отображает содержимое каталога файловой системы в виде дерева.
 
  <p>Указывается каталог, содержимое которого отображается в результате установки свойства <codeph> directory</codeph> для экземпляра класса flash.filesystem.File. (Экземпляры файла могут представлять каталоги и файлы.) При каждом изменении свойства по любой причине элемент управления передает событие <codeph>directoryChange</codeph> для уведомления пользователя.</p>
 
  <p>Можно настроить свойство <codeph>enumerationMode</codeph> для указания необходимости отображения файлов, подкаталогов или и того, и другого. Существует три способа отображения файлов и подкаталогов в каждом узле дерева: первоочередной вывод каталогов, файлов или смешанный вывод.</p>
 
  <p>Можно установить свойство <codeph>extensions</codeph> для фильтрации списка таким образом, чтобы отображались только файлы с указанными расширениями. (Расширения в каталогах игнорируются.) Можно также указать дополнительную собственную функцию фильтрации, установив свойство <codeph>filterFunction</codeph>.</p>
 
  <p>Свойство <codeph>showExtensions</codeph> можно использовать для отображения или скрытия расширений файлов, а свойство <codeph>showIcons</codeph> – для отображения или скрытия значков.</p>
 
  <p>Можно выполнить пользовательскую сортировку в каждом узле дерева с помощью настройки свойства <codeph>nameCompareFunction</codeph> для функции, которая сравнивает два имени файлов или каталогов.</p>
 
  <p>При двойном щелчке закрытого узла каталога или при щелчке значка раскрытия этот элемент управления передает событие <codeph>directoryOpening</codeph>. При двойном щелчке открытого узла каталога или при щелчке значка раскрытия этот элемент управления передает событие <codeph>directoryClosing</codeph>. Обработчик может отменить любое событие с помощью вызова <codeph>event.preventDefault()</codeph>. В этом случае открытие узла не выполняется.</p>
 
  <p>При двойном щелчке узла файла этот элемент управления передает событие <codeph>select</codeph>.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.filesystem.File.xml"><linktext>flash.filesystem.File</linktext></link></related-links><adobeApiEvent id="mx.controls:FileSystemTree_mx.events.FileEvent.FILE_CHOOSE_fileChoose"><apiName>fileChoose</apiName><shortdesc>
  Передается при выборе пользователем какого-либо файла путем двойного щелчка по нему или путем выделения файла с последующим нажатием клавиши Enter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.FILE_CHOOSE</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе пользователем какого-либо файла путем двойного щелчка по нему или путем выделения файла с последующим нажатием клавиши Enter.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FileSystemTree_mx.events.FileEvent.DIRECTORY_OPENING_directoryOpening"><apiName>directoryOpening</apiName><shortdesc>
  Передается, если пользователь открывает закрытый узел каталога с помощью мыши или клавиатуры.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_OPENING</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, если пользователь открывает закрытый узел каталога с помощью мыши или клавиатуры.
 
  <p>Это событие может быть отменено. При вызове <codeph>event.preventDefault()</codeph> этот элемент управления продолжает отображать текущий каталог, а не подкаталог, по которому был произведен двойной щелчок.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FileSystemTree_mx.events.FileEvent.DIRECTORY_CLOSING_directoryClosing"><apiName>directoryClosing</apiName><shortdesc>
  Передается в том случае, когда пользователь закрывает открытый узел каталога с помощью мыши или клавиатуры.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_CLOSING</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается в том случае, когда пользователь закрывает открытый узел каталога с помощью мыши или клавиатуры.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FileSystemTree_mx.events.FileEvent.DIRECTORY_CHANGE_directoryChange"><apiName>directoryChange</apiName><shortdesc>
  Передается при изменении свойства directory по любым причинам.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства <codeph>directory</codeph> по любым причинам.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:FileSystemTree:FileSystemTree"><apiName>FileSystemTree</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:FileSystemTree:clear"><apiName>clear</apiName><shortdesc>
      Очищает список.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Очищает список.
     
      <p>Этот метод устанавливает свойство <codeph>dataProvider</codeph> равным <codeph>null</codeph>, но не изменяет свойство <codeph>directory</codeph>. Для повторного заполнения списка можно вызвать <codeph>refresh</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemTree:closeSubdirectory"><apiName>closeSubdirectory</apiName><shortdesc>
      Закрывает подкаталог, указанный с помощью пути встроенной файловой системы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Закрывает подкаталог, указанный с помощью пути встроенной файловой системы.
     
      <p>Если свойство <codeph>nativePath</codeph> не указывает каталог, который отображается внутри этого элемента управления, то этот метод не выполняет никаких действий.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemTree:findIndex"><apiName>findIndex</apiName><shortdesc conref="mx.controls.FileSystemList#findIndex()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/><apiDesc>Отсчитываемый от нуля индекс или <codeph>-1</codeph>, если не найден файл с указанным путем.
     
      </apiDesc></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.FileSystemList#findIndex()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemTree:findItem"><apiName>findItem</apiName><shortdesc conref="mx.controls.FileSystemList#findItem()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.filesystem:File"/><apiDesc>Экземпляр файла, если таковой найден, с указанной строкой <codeph>nativePath</codeph>; либо <codeph>null</codeph>, если экземпляр не обнаружен.
      
      </apiDesc></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.FileSystemList#findItem()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemTree:openSubdirectory"><apiName>openSubdirectory</apiName><shortdesc>
      Открывает подкаталог, указанный с помощью пути встроенной файловой системы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Открывает подкаталог, указанный с помощью пути встроенной файловой системы.
     
      <p>Этот метод автоматически открывает все промежуточные каталоги, обращение к которым необходимо для доступа к указанному каталогу.</p>
     
      <p>Если в свойстве <codeph>nativePath</codeph> не указан существующий каталог файловой системы или этот каталог не содержится в каталоге, отображаемом в данном элементе управления, то данный метод не выполняет никаких действий.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemTree:refresh"><apiName>refresh</apiName><shortdesc>
      Выполняет повторное перечисление текущего каталога, который отображается в этом элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Выполняет повторное перечисление текущего каталога, который отображается в этом элементе управления.
     
      <p>После возврата данного метода свойство <codeph>directory</codeph> будет содержать экземпляр File для того же каталога, что и раньше. Свойство <codeph>dataProvider</codeph> временно становится равным <codeph>null</codeph> до момента повторного перечисления каталога. После перечисления свойство <codeph>dataProvider</codeph> будет содержать объект ArrayCollection экземпляров File для содержимого каталога.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:FileSystemTree:COMPUTER"><apiName>COMPUTER</apiName><shortdesc conref="mx.controls.FileSystemList#COMPUTER">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="flash.filesystem:File"/></apiValueDef><apiDesc conref="mx.controls.FileSystemList#COMPUTER">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:directory:get"><apiName>directory</apiName><shortdesc>
      Каталог, содержимое которого отображается в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/><apiDefaultValue>COMPUTER
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Каталог, содержимое которого отображается в элементе управления.
     
      <p>Если это свойство устанавливается равным объекту File, который представляет существующий каталог, то свойство <codeph>dataProvider</codeph> немедленно становится равным <codeph>null</codeph>. После того как LayoutManager проводит повторную проверку элемента управления, сам элемент управления выполняет синхронное перечисление содержимого каталога и заполняет свойство <codeph>dataProvider</codeph> коллекцией ArrayCollection, которая состоит из объектов File для файлов и подкаталогов данного каталога.</p>
     
      <p>Если свойство приравнивается объекту File, который не представляет существующий каталог, то возникает ошибка. Если свойство приравнивается значению <codeph>COMPUTER</codeph>, то выполняется синхронное отображение корневых каталогов, например C: и D: в системе Windows.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:enumerationMode:get"><apiName>enumerationMode</apiName><shortdesc conref="mx.controls.FileSystemList#enumerationMode">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>FileSystemEnumerationMode.DIRECTORIES_FIRST
     
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#enumerationMode">
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemEnumerationMode"><linktext>mx.controls.FileSystemEnumerationMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemTree:extensions:get"><apiName>extensions</apiName><shortdesc conref="mx.controls.FileSystemList#extensions">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#extensions">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:filterFunction:get"><apiName>filterFunction</apiName><shortdesc conref="mx.controls.FileSystemList#filterFunction">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#filterFunction">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:nameCompareFunction:get"><apiName>nameCompareFunction</apiName><shortdesc conref="mx.controls.FileSystemList#nameCompareFunction">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#nameCompareFunction">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:openPaths:get"><apiName>openPaths</apiName><shortdesc>
      Массив Array, состоящий из строк nativePath для элементов File, которые представляют открытые подкаталоги.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив Array, состоящий из строк <codeph>nativePath</codeph> для элементов File, которые представляют открытые подкаталоги. Массив пуст, если не открыто ни одного подкаталога.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:selectedPath:get"><apiName>selectedPath</apiName><shortdesc conref="mx.controls.FileSystemList#selectedPath">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#selectedPath">
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedIndex"><linktext>mx.controls.listClasses.ListBase.selectedIndex</linktext></link><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedItem"><linktext>mx.controls.listClasses.ListBase.selectedItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemTree:selectedPaths:get"><apiName>selectedPaths</apiName><shortdesc conref="mx.controls.FileSystemList#selectedPaths">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
     
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#selectedPaths">
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedIndex"><linktext>mx.controls.listClasses.ListBase.selectedIndex</linktext></link><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedItem"><linktext>mx.controls.listClasses.ListBase.selectedItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemTree:showExtensions:get"><apiName>showExtensions</apiName><shortdesc conref="mx.controls.FileSystemList#showExtensions">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#showExtensions">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:showHidden:get"><apiName>showHidden</apiName><shortdesc conref="mx.controls.FileSystemList#showHidden">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#showHidden">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemTree:showIcons:get"><apiName>showIcons</apiName><shortdesc conref="mx.controls.FileSystemList#showIcons">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.FileSystemList#showIcons">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:FileSystemList"><apiName>FileSystemList</apiName><shortdesc>
  Элемент управления FileSystemList позволяет отображать содержимое одного каталога файловой системы в формате списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="EmbeddedFile" inherit="no" name="fileIcon" owner="mx.controls:FileSystemList" playerVersion="AIR1.1" type="Class">
<description>
  Определяет значок, указывающий файл. Значок по умолчанию расположен в файле Assets.swf. В MXML для установки значений этого свойства используются следующий синтаксис: <codeph>fileIcon="@Embed(source='fileIcon.jpg');"</codeph>.
 
  </description>
<default>TreeNodeIcon
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="directoryIcon" owner="mx.controls:FileSystemList" playerVersion="AIR1.1" type="Class">
<description>
  Определяет значок, указывающий каталог. Значок по умолчанию расположен в файле Assets.swf. В MXML для установки значений этого свойства используются следующий синтаксис: <codeph>directoryIcon="@Embed(source='directoryIcon.jpg');"</codeph>.
 
  </description>
<default>TreeNodeIcon
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:FileSystemList&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:FileSystemList
    <strong>Properties</strong>
    directory="<i>null</i>"
    enumerationMode="directoriesFirst"
    extensions="<i>null</i>"
    filterFunction="<i>null</i>"
    nameCompareFunction="<i>null</i>"
    selectedPath="<i>null</i>"
    selectedPaths="<i>null</i>"
    showExtensions="true"
    showHidden="false"
    showIcons="true"
 
    <strong>Styles</strong>
    directoryIcon="<i>TreeNodeIcon</i>"
    fileIcon="<i>TreeNodeIcon</i>"
 
    <strong>Events</strong>
    directoryChange="<i>No default</i>"
    directoryChanging="<i>No default</i>"
    fileChoose="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:List</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления FileSystemList позволяет отображать содержимое одного каталога файловой системы в формате списка.
 
  <p>Для изменения отображаемых данных вместо использования свойства <codeph>dataProvider</codeph> можно настроить свойство <codeph>directory</codeph>. Затем элемент управления автоматически заполняет свойство <codeph>dataProvider</codeph> путем перечисления содержимого этого каталога. Выполнять непосредственную настройку свойства <codeph>dataProvider</codeph> не требуется.</p>
 
  <p>Следует установить в качестве значения свойства <codeph>directory</codeph> экземпляр файла, как показано в следующем примере: </p>
  <pre>
    &lt;mx:FileSystemList directory="{File.desktopDirectory}"/></pre>
 
  <p>Можно настроить свойство <codeph>enumerationMode</codeph> для определения необходимости отображения файлов, подкаталогов или того и другого. Существует три способа отображения файлов и подкаталогов: первоочередной вывод каталогов, файлов или смешанный вывод.</p>
 
  <p>Можно настроить свойство <codeph>extensions</codeph> для фильтрации отображаемых элементов таким образом, что на экране появляются только файлы с указанными расширениями. Свойство <codeph>showHidden</codeph> определяет необходимость отображения элементом управления файлов и подкаталогов, которые обычно скрыты операционной системой. Можно определить дополнительную функцию <codeph>filterFunction</codeph> для выполнения пользовательской фильтрации, и функцию <codeph>nameCompareFunction</codeph> для выполнения пользовательской сортировки.</p>
 
  <p>Поскольку AIR не поддерживает уведомления файловой системы, автоматическое обновление этого элемента управления в случае создания, удаления, перемещения или переименования файла или подкаталога не выполняется; иными словами, на экране может отображаться устаревшее представление файловой системы. Однако с помощью вызова метода <codeph>refresh()</codeph> можно повторно перечислить текущий <codeph>directory</codeph>. Это осуществляется, например, в случае выполнения файловой операции, результатом которой является отображение устаревшего представления элемента управления, либо в случае деактивации и повторной активации приложения пользователем.</p>
 
  <p>Свойство <codeph>showIcons</codeph> можно использовать для отображения или скрытия значков, а свойство <codeph>showExtensions</codeph> – для отображения или скрытия расширения файла.</p>
 
  <p>Этот элемент управления предоставляет два метода, <codeph>findItem()</codeph> и <codeph>findIndex()</codeph>, которые можно использовать для выполнения поиска среди отображаемых файлов и подкаталогов только элементов с указанным <codeph>nativePath</codeph>.</p>
 
  <p>Два свойства, <codeph>selectedPath</codeph> и <codeph>selectedPaths</codeph>, функционируют аналогично свойствам <codeph>selectedItem</codeph> и <codeph>selectedItems</codeph> или <codeph>selectedIndex</codeph> и <codeph>selectedIndices</codeph>, однако указанные два свойства позволяют указывать вариант выбора посредством строк <codeph>nativePath</codeph>. Эти свойства рекомендуется использовать при необходимости отображения каталога с определенными предварительно выбранными элементами, поскольку в этом случае еще не существует элементов «Файл», создаваемых элементом управления при перечислении каталога, с неизвестными индексами.</p>
 
  <p>Этот элемент управления позволяет пользователю переходить к другим каталогам с использованием мыши или клавиатуры. Пользователь может осуществить попытку изменения каталога путем двойного щелчка по подкаталогу, нажатия клавиши ENTER или Ctrl-«Стрелка вниз» после выбора подкаталога; путем нажатия Ctrl-«Стрелка вверх», если элемент управления не отображает каталог COMPUTER; путем нажатия Ctrl-«Стрелка влево», если существует «предыдущий» каталог для возврата; либо путем нажатия Ctrl-«Стрелка вправо» при наличии «следующего» каталога, в который требуется перейти. Если пользователь пытается изменить отображаемый каталог, элемент управления передает допускающее отмену событие <codeph>directoryChanging</codeph>. Если это событие не отменяется путем вызова метода<codeph>event.preventDefault()</codeph>, элемент управления отображает содержимое нового каталога, и свойство <codeph>directory</codeph> изменяется. При каждом изменении <codeph>directory</codeph> по любой причине элемент управления передает событие <codeph>directoryChange</codeph> с целью уведомления пользователя.</p>
 
  <p>Поддержка элементов управления «Вверх» и «Вниз» осуществляется при помощи свойств <codeph>canNavigateUp</codeph> и <codeph>canNavigateDown</codeph> и методов <codeph>navigateUp()</codeph> и <codeph>navigateDown()</codeph> FileSystemList. Кроме того, существует метод <codeph>navigateTo()</codeph>, позволяющий осуществлять переход к произвольному каталогу.</p>
 
  <p>В целях упрощения поддержки элементов управления «Назад» и «Вперед» элемент управления отслеживает каталоги, в которые переходил пользователь. Для получения дополнительной информации см. описание свойств <codeph>backHistory</codeph>, <codeph>forwardHistory</codeph>, <codeph>canNavigateBack</codeph> и <codeph>canNavigateForward</codeph>, а также методов <codeph>navigateBack()</codeph> и <codeph>navigateForward()</codeph>.</p>
 
  <p>Примечание. Значки, отображаемые для каждого элемента, являются общими для файлов и каталогов, их использование определяется при помощи стилей <codeph>fileIcon</codeph> и <codeph>directoryIcon</codeph>. Элементы управления Flex на основе списка в настоящее время обеспечивают отображение только вложенных значков, динамическое считывание значков не поддерживаются. Таким образом, значки файловой системы, отображаемые в операционной системе, не отображаются в элементе FileSystemList даже в том случае, если они доступны в AIR при помощи свойства объекта File <codeph>icon</codeph>.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.filesystem.File.xml"><linktext>flash.filesystem.File</linktext></link></related-links><adobeApiEvent id="mx.controls:FileSystemList_mx.events.FileEvent.FILE_CHOOSE_fileChoose"><apiName>fileChoose</apiName><shortdesc>
  Передается при выборе пользователем какого-либо файла путем двойного щелчка по нему или путем выделения файла с последующим нажатием клавиши Enter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.FILE_CHOOSE</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе пользователем какого-либо файла путем двойного щелчка по нему или путем выделения файла с последующим нажатием клавиши Enter.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FileSystemList_mx.events.FileEvent.DIRECTORY_OPENING_directoryChanging"><apiName>directoryChanging</apiName><shortdesc>
  Передается при попытке пользователя изменить каталог, отображаемый этим элементом управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_OPENING</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при попытке пользователя изменить каталог, отображаемый этим элементом управления.
 
  <p>Пользователь может осуществить попытку изменения каталога путем двойного щелчка по подкаталогу, нажатия клавиши ENTER или Ctrl-Down после выбора подкаталога; путем нажатия Ctrl-Up, если элемент управления не отображает каталог COMPUTER; путем нажатия Ctrl-Left, если в журнале существует «предыдущий» каталог для возврата; либо путем нажатия Ctrl-Right при наличии в журнале «следующего» каталога, в который требуется перейти.</p>
 
  <p>Это событие допускает отмену. При вызове метода <codeph>event.preventDefault()</codeph> каталог не изменяется.</p>
 
  <p>Если свойство <codeph>directory</codeph> изменилось, и <codeph>dataProvider</codeph> содержит экземпляры файлов для элементов в новом каталоге, то передается событие <codeph>directoryChange</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FileSystemList_mx.events.FileEvent.DIRECTORY_CHANGE_directoryChange"><apiName>directoryChange</apiName><shortdesc>
  Передается при изменении по любым причинам каталога, отображаемого данным элементом управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении по любым причинам каталога, отображаемого данным элементом управления.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:FileSystemList:FileSystemList"><apiName>FileSystemList</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:FileSystemList:clear"><apiName>clear</apiName><shortdesc>
      Сбрасывает этот элемент управления, после чего он не будет отображать ни одного элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Сбрасывает этот элемент управления, после чего он не будет отображать ни одного элемента.
     
      <p>Этот метод устанавливает свойство <codeph>dataProvider</codeph> равным <codeph>null</codeph>, но не изменяет свойство <codeph>directory</codeph>. Для повторного заполнения элемента управления можно вызвать <codeph>refresh</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemList:findIndex"><apiName>findIndex</apiName><shortdesc>
      Возвращает индекс элемента File с указанным путем встроенной файловой системы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Отсчитываемый от нуля индекс или <codeph>-1</codeph>, если не найден файл с указанным путем.
     
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает индекс элемента File с указанным путем встроенной файловой системы.
     
      <p>В поиск не включаются элементы, присутствующие в коллекции элемента управления, но не отображающиеся после фильтрации.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.filesystem.xml#File/nativePath"><linktext>flash.filesystem.File.nativePath</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemList:findItem"><apiName>findItem</apiName><shortdesc>
      Выполняет поиск по экземплярам File, отображаемым в данный момент в этом элементе, и возвращает элемент с указанным свойством nativePath.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Экземпляр файла, если таковой найден, с указанной строкой <codeph>nativePath</codeph>; либо <codeph>null</codeph>, если экземпляр не обнаружен.
      
      </apiDesc><apiType value="flash.filesystem:File"/></apiReturn><apiParam><apiItemName>nativePath</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая <codeph>nativePath</codeph> элемента «Файл».
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Выполняет поиск по экземплярам File, отображаемым в данный момент в этом элементе, и возвращает элемент с указанным свойством <codeph>nativePath</codeph>.
     
      <p>В поиск не включаются экземпляры файлов, присутствующие в коллекции элемента управления, но не отображающиеся после фильтрации.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemList:navigateBack"><apiName>navigateBack</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве backHistory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Индекс в массиве <codeph>backHistory</codeph> для выполнения навигации. По умолчанию используется значение 0, указывающее на ближайший предыдущий каталог.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве <codeph>backHistory</codeph>.
     
      <p>Если массив <codeph>backHistory</codeph> пуст, или указан индекс, не принадлежащий этому массиву, какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Журнал остается без изменений. Однако текущий индекс в нем изменяется, что оказывает влияние на свойства <codeph>backHistory</codeph> и <codeph>forwardHistory</codeph>. После возвращения этим методом каких-либо значений эти свойства получают новые значения.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления FileSystemHistoryButton в целях создания кнопки «Назад»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Back"
          enabled="{fileSystemViewer.canNavigateBack}"
          dataProvider="{fileSystemViewer.backHistory}"
          click="fileSystemViewer.navigateBack();"
          itemClick="fileSystemViewer.navigateBack(event.index);"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemList/backHistory"><linktext>backHistory</linktext></link><link href="mx.controls.xml#FileSystemList/canNavigateBack"><linktext>canNavigateBack</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemList:navigateDown"><apiName>navigateDown</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого выбранного подкаталога.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого выбранного подкаталога.
     
      <p>Если подкаталог не выбран, какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления «Кнопка» в целях создания кнопки «Открыть»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Open"
          enabled="{fileSystemViewer.canNavigateDown}"
          click="fileSystemViewer.navigateDown();"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemList/canNavigateDown"><linktext>canNavigateDown</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemList:navigateForward"><apiName>navigateForward</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве forwardHistory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Индекс в массиве <codeph>forwardHistory</codeph> для выполнения навигации. По умолчанию используется значение 0, указывающее на ближайший последующий каталог.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого предыдущего каталога в массиве <codeph>forwardHistory</codeph>.
     
      <p>Если массив <codeph>forwardHistory</codeph> пуст, или указан индекс, не принадлежащий этому массиву, какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Журнал остается без изменений. Однако текущий индекс в нем изменяется, что оказывает влияние на свойства <codeph>backHistory</codeph> и <codeph>forwardHistory</codeph>. После возвращения этим методом каких-либо значений эти свойства получают новые значения.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления FileSystemHistoryButton для создания кнопки «Вперед»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Forward"
          enabled="{fileSystemViewer.canNavigateForward}"
          dataProvider="{fileSystemViewer.forwardHistory}"
          click="fileSystemViewer.navigateForward();"
          itemClick="fileSystemViewer.navigateForward(event.index);"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemList/canNavigateForward"><linktext>canNavigateForward</linktext></link><link href="mx.controls.xml#FileSystemList/forwardHistory"><linktext>forwardHistory</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemList:navigateTo"><apiName>navigateTo</apiName><shortdesc>
      Изменяет этот элемент управления для отображения содержимого указанного каталога.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>directory</apiItemName><apiType value="flash.filesystem:File"/><apiDesc>Объект файла, представляющий файл или каталог.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Изменяет этот элемент управления для отображения содержимого указанного каталога.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FileSystemList:navigateUp"><apiName>navigateUp</apiName><shortdesc>
      Изменяет этот элемент управления в целях отображения содержимого следующего каталога в иерархии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Изменяет этот элемент управления в целях отображения содержимого следующего каталога в иерархии.
     
      <p>Если этот элемент управления в настоящее время отображает корневые каталоги (например, C: и D: в Microsoft Windows), какие-либо действия посредством этого метода не выполняются.</p>
     
      <p>При возвращении этим методом какого-либо значения свойство <codeph>directory</codeph> содержит экземпляр файла для нового каталога. Свойство <codeph>dataProvider</codeph> имеет значение <codeph>null</codeph> до тех пор, пока не перечислен новый каталог. После его перечисления свойство <codeph>dataProvider</codeph> содержит ArrayCollection экземпляров файла для содержимого нового каталога.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого метода в сочетании с элементом управления Button для создания кнопки «Вверх»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Up"
          enabled="{fileSystemViewer.canNavigateUp}"
          click="fileSystemViewer.navigateUp();"/></pre>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#FileSystemList/canNavigateUp"><linktext>canNavigateUp</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FileSystemList:refresh"><apiName>refresh</apiName><shortdesc>
      Выполняет повторное перечисление текущего каталога, который отображается в этом элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Выполняет повторное перечисление текущего каталога, который отображается в этом элементе управления.
     
      <p>Поскольку AIR не поддерживает уведомления файловой системы, автоматическое обновление этого элемента управления в случае создания, удаления, перемещения или переименования файла или подкаталога не выполняется; иными словами, на экране может отображаться устаревшее представление файловой системы. В то же время вызов метода <codeph>refresh()</codeph> позволяет выполнить повторное перечисление текущего каталога <codeph>directory</codeph>, что обеспечивает актуальность данных. Это осуществляется, например, в случае выполнения файловой операции, результатом которой является отображение устаревшего представления элемента управления, либо в случае деактивации и повторной активации приложения пользователем.</p>
     
      <p>Этот метод сохраняет все выбранные элементы (если они еще существуют) и положение прокрутки (если первый видимый элемент еще существует).</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:FileSystemList:COMPUTER"><apiName>COMPUTER</apiName><shortdesc>
      Константа, которая может использоваться в качестве значения для свойства directory, представляющего псевдо-каталог верхнего уровня под именем «Компьютер».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="flash.filesystem:File"/></apiValueDef><apiDesc>
      Константа, которая может использоваться в качестве значения для свойства <codeph>directory</codeph>, представляющего псевдо-каталог верхнего уровня под именем «Компьютер». Этот псевдо-каталог содержит корневые каталоги (например, C:\ и D:\ в Windows или / в Macintosh).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemList:backHistory:get"><apiName>backHistory</apiName><shortdesc>
      Массив объектов File представляет каталоги, в которые может вернуться пользователь.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/><apiDefaultValue>[]
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив объектов File представляет каталоги, в которые может вернуться пользователь.
     
      <p>Первый элемент этого массива представляет собой ближайший предыдущий каталог в журнале. Последним элементом массива является самый последний каталог в журнале.</p>
     
      <p>Этот массив может содержать элемент <codeph>null</codeph>, представляющий несуществующий каталог, содержимым которого являются корневые каталоги, например, C:\ и D:\ в Microsoft Windows.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton в целях реализации кнопки «Назад»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Back"
          enabled="{fileSystemViewer.canNavigateBack}"
          dataProvider="{fileSystemViewer.backHistory}"
          click="fileSystemViewer.navigateBack();"
          itemClick="fileSystemViewer.navigateBack(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemList/canNavigateBack"><linktext>canNavigateBack</linktext></link><link href="mx.controls.xml#FileSystemList/navigateBack()"><linktext>navigateBack()</linktext></link><link href="mx.controls.xml#FileSystemHistoryButton"><linktext>mx.controls.FileSystemHistoryButton</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:canNavigateBack:get"><apiName>canNavigateBack</apiName><shortdesc>
      Флаг, имеющий значение true, если в журнале существует, по крайней мере, один каталог, к которому может вернуться пользователь.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph>, если в журнале существует, по крайней мере, один каталог, к которому может вернуться пользователь.
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton в целях реализации кнопки «Назад»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Back"
          enabled="{fileSystemViewer.canNavigateBack}"
          dataProvider="{fileSystemViewer.backHistory}"
          click="fileSystemViewer.navigateBack();"
          itemClick="fileSystemViewer.navigateBack(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemList/backHistory"><linktext>backHistory</linktext></link><link href="mx.controls.xml#FileSystemList/navigateBack()"><linktext>navigateBack()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:canNavigateDown:get"><apiName>canNavigateDown</apiName><shortdesc>
      Флаг, имеющий значение true, если для перемещения к выбранному каталогу пользователь может перейти на один уровень вниз.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph>, если для перемещения к выбранному каталогу пользователь может перейти на один уровень вниз. Этот флаг имеет значение <codeph>false</codeph> при отсутствии выбранного элемента или в случае, если выбранным элементом является файл, а не каталог.
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления «Кнопка»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Open"
          enabled="{fileSystemViewer.canNavigateDown}"
          click="fileSystemViewer.navigateDown();"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemList/navigateDown()"><linktext>navigateDown()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:canNavigateForward:get"><apiName>canNavigateForward</apiName><shortdesc>
      Флаг, имеющий значение true при наличии в журнале, по крайней мере, одного каталога, к которому можно перейти.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph> при наличии в журнале, по крайней мере, одного каталога, к которому можно перейти.
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton для реализации кнопки «Вперед»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Forward"
          enabled="{fileSystemViewer.canNavigateForward}"
          dataProvider="{fileSystemViewer.forwardHistory}"
          click="fileSystemViewer.navigateForward();"
          itemClick="fileSystemViewer.navigateForward(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemList/forwardHistory"><linktext>forwardHistory</linktext></link><link href="mx.controls.xml#FileSystemList/navigateForward()"><linktext>navigateForward()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:canNavigateUp:get"><apiName>canNavigateUp</apiName><shortdesc>
      Флаг, имеющий значение true, если пользователь может перейти на один уровень вверх в вышестоящий каталог.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, имеющий значение <codeph>true</codeph>, если пользователь может перейти на один уровень вверх в вышестоящий каталог. Этот флаг имеет значение <codeph>false</codeph> только в том случае, если данный элемент управления отображает корневые каталоги, например, C:\ и D:\ в Microsoft Windows. (В этом случае свойство <codeph>directory</codeph> имеет значение <codeph>COMPUTER</codeph>.)
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления «Кнопка»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:Button label="Up"
          enabled="{fileSystemViewer.canNavigateUp}"
          click="fileSystemViewer.navigateUp();"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemList/navigateUp()"><linktext>navigateUp()</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:directory:get"><apiName>directory</apiName><shortdesc>
      Каталог, содержимое которого отображается в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/><apiDefaultValue>COMPUTER
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Каталог, содержимое которого отображается в элементе управления.
     
      <p>Если это свойство устанавливается равным объекту File, который представляет существующий каталог, то свойство <codeph>dataProvider</codeph> сразу становится равным <codeph>null</codeph>. После повторной проверки с помощью LayoutManager этот элемент управления перечисляет содержимое каталога и заполняет свойство <codeph>dataProvider</codeph> данными ArrayCollection результирующих объектов File для файлов и подкаталогов данного каталога.</p>
     
      <p>Если свойство приравнивается объекту File, который не представляет существующий каталог, то возникает ошибка. Если свойство приравнивается значению <codeph>COMPUTER</codeph>, то выполняется синхронное отображение корневых каталогов, например C: и D: в системе Windows.</p>
     
      <p>Установка этого свойства отменяет выбор всех ранее выбранных элементов и приводит к возврату элементом управления положения прокрутки в левый верхний угол.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemList:enumerationMode:get"><apiName>enumerationMode</apiName><shortdesc>
      Строка, определяющая отображение этим элементом управления файлов и/или подкаталогов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>FileSystemEnumerationMode.DIRECTORIES_FIRST
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Строка, определяющая отображение этим элементом управления файлов и/или подкаталогов. В случае отображения и файлов, и подкаталогов оно также указывает, отображаются ли подкаталоги до, после или совместно с файлами. Возможные значения определены в классе FileSystemEnumerationMode.
     
      <p>Это свойство определяет подкаталоги и файлы, отображаемые в элементе управления, а также порядок их появления. Но оно не определяет экземпляры файлов в свойстве <codeph>dataProvider</codeph>; они определяются путем изменения функции фильтрации, применяемой к <codeph>dataProvider</codeph>. Его установка не приводит к повторному перечислению текущего<codeph>directory</codeph>.</p>
     
      <p>Установка этого свойства отменяет выбор всех выбранных элементов и приводит к возврату элементом управления положения прокрутки в левый верхний угол.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemEnumerationMode"><linktext>mx.controls.FileSystemEnumerationMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:extensions:get"><apiName>extensions</apiName><shortdesc>
      Массив расширений, определяющий файлы, отображаемые в этом элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив расширений, определяющий файлы, отображаемые в этом элементе управления. Например, если это свойство имеет значение <codeph>[.htm, .html]</codeph>, то далее будут отображаться только файлы с такими расширениями.
     
      <p>Значения расширений обрабатываются без учета регистра, и предшествующая расширению точка является необязательной. Например, <codeph>.HTML</codeph> эквивалентно <codeph>html</codeph>.</p>
     
      <p>Каталоги не подчиняются фильтрации по расширениям, даже если в их именах содержатся точки.</p>
     
      <p>Файлы, отображаемые в элементе управления, также определяются свойствами <codeph>enumerationMode</codeph> и <codeph>filterFunction</codeph>. Например, несмотря на то, что это свойство имеет значение <codeph>[".htm", ".html"]</codeph>, файл с расширением .html не будет отображен, если свойство <codeph>enumerationMode</codeph> имеет значение <codeph>FileSystemEnumerationMode.DIRECTORIES_ONLY</codeph> или если <codeph>filterFunction</codeph> возвращает для файла значение <codeph>false</codeph>.</p>
     
      <p>Если это свойство имеет значение <codeph>null</codeph>, фильтрация по расширениям не выполняется, и отображаются все файлы. Если это свойство является пустым массивом, то все расширения отфильтровываются, и файлы с расширениями не отображаются.</p>
     
      <p>Это свойство определяет файлы, отображаемые в элементе управления. Но оно не определяет экземпляры файлов в свойстве <codeph>dataProvider</codeph>; они определяются путем изменения функции фильтрации, применяемой к <codeph>dataProvider</codeph>. Его установка не приводит к повторному перечислению текущего<codeph>directory</codeph>.</p>
     
      <p>Установка этого свойства отменяет выбор всех выбранных элементов и приводит к возврату элементом управления положения прокрутки в левый верхний угол.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemList:filterFunction:get"><apiName>filterFunction</apiName><shortdesc>
      Функция обратного вызова, позволяющая выполнить дополнительную фильтрацию после применения свойств enumerationMode и extensions для определения отображаемых и скрытых файлов и подкаталогов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Функция обратного вызова, позволяющая выполнить дополнительную фильтрацию после применения свойств <codeph>enumerationMode</codeph> и <codeph>extensions</codeph> для определения отображаемых и скрытых файлов и подкаталогов.
     
      <p>Эта функция должна иметь следующую подпись:</p>
     
      <pre>function myFilterFunction(file:File):Boolean</pre>
     
      Эта функция должна возвращать значение <codeph>true</codeph> для отображения указанного файла или подкаталога и значение <codeph>false</codeph> для его скрытия.
     
      <p>Для обеспечения передачи в эту функцию всех перечисленных файлов и подкаталогов свойство <codeph>enumerationMode</codeph> не должно иметь значение <codeph>FileSystemEnumerationMode.FILES_ONLY</codeph> или <codeph>FileSystemEnumerationMode.DIRECTORIES_ONLY</codeph>, а свойство <codeph>extensions</codeph> должно иметь значение <codeph>null</codeph>. В противном случае значения этих свойств приведут к выполнению предварительной фильтрации до вызова функции фильтрации.</p>
     
      <p>Это свойство определяет подкаталоги и файлы, отображаемые в элементе управления Но оно не определяет экземпляры файлов в свойстве <codeph>dataProvider</codeph>; они определяются путем изменения функции фильтрации, применяемой к <codeph>dataProvider</codeph>. Его установка не приводит к повторному перечислению текущего<codeph>directory</codeph>.</p>
     
      <p>Установка этого свойства отменяет выбор всех выбранных элементов и приводит к возврату элементом управления положения прокрутки в левый верхний угол.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemList:forwardHistory:get"><apiName>forwardHistory</apiName><shortdesc>
      Массив каталогов представляет объекты File, к которым можно перейти.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/><apiDefaultValue>[]
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив каталогов представляет объекты File, к которым можно перейти.
     
      <p>Первый элемент этого массива представляет собой ближайший следующий каталог в журнале. Последним элементом массива является самый последний каталог в журнале, к которому можно перейти.</p>
     
      <p>Этот массив может содержать специальный объект File <codeph>COMPUTER</codeph>, представляющий несуществующий каталог, содержимым которого являются корневые каталоги, например, C:\ и D:\ в Microsoft Windows.</p>
     
      <p>Следующий пример иллюстрирует способ использования этого свойства в сочетании с элементом управления FileSystemHistoryButton для реализации кнопки «Вперед»:</p>
     
      <pre>
      &lt;mx:FileSystemList id="fileSystemViewer" directory="{File.desktopDirectory}"/>
      &lt;mx:FileSystemHistoryButton label="Forward"
          enabled="{fileSystemViewer.canNavigateForward}"
          dataProvider="{fileSystemViewer.forwardHistory}"
          click="fileSystemViewer.navigateForward();"
          itemClick="fileSystemViewer.navigateForward(event.index);"/></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FileSystemList/canNavigateForward"><linktext>canNavigateForward</linktext></link><link href="mx.controls.xml#FileSystemList/navigateForward()"><linktext>navigateForward()</linktext></link><link href="mx.controls.xml#FileSystemHistoryButton"><linktext>mx.controls.FileSystemHistoryButton</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:nameCompareFunction:get"><apiName>nameCompareFunction</apiName><shortdesc>
      Функция обратного вызова, позволяющая влиять на сравнение имен файлов и подкаталогов для определения порядка сортировки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Функция обратного вызова, позволяющая влиять на сравнение имен файлов и подкаталогов для определения порядка сортировки.
     
      <p>Эта функция должна иметь следующую подпись:</p>
     
      <pre>function myNameCompareFunction(name1:String, name2:String):int</pre>
     
      <p>Возвращает <codeph>-1</codeph>, если <codeph>name1</codeph> следует перед <codeph>name2</codeph>, <codeph>1</codeph>, если <codeph>name1</codeph> следует после <codeph>name2</codeph>, и <codeph>0</codeph>, если имена одинаковы.</p>
     
      <p>Если это свойство не установлено, элемент управления выполняет сравнение двух указанных имен с учетом регистра и языкового стандарта. Сначала для каждого имени вызывается строковый метод <codeph>toLocaleLowerCase()</codeph>, затем выполняется сравнение имен с помощью операторов <codeph>&lt;</codeph> и <codeph>></codeph>.</p>
     
      <p>Если для свойства <codeph>enumerationMode</codeph> установлено значение <codeph>FileSystemEnumerationMode.FILES_FIRST</codeph> или <codeph>FileSystemEnumerationMode.DIRECTORIES_FIRST</codeph>, то этот метод выполняет сравнение имен только внутри отдельных групп файлов и каталогов.</p>
     
      <p>Это свойство определяет порядок отображения в элементе управления подкаталогов и файлов. Но оно не определяет экземпляры файлов в свойстве <codeph>dataProvider</codeph>; они определяются путем изменения способа сортировки, применяемого к <codeph>dataProvider</codeph>. Его установка не приводит к повторному перечислению текущего<codeph>directory</codeph>.</p>
     
      <p>Установка этого свойства отменяет выбор всех выбранных элементов и приводит к возврату элементом управления положения прокрутки в левый верхний угол.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemList:selectedPath:get"><apiName>selectedPath</apiName><shortdesc>
      Свойство nativePath файлового элемента, представляющее выбранный подкаталог или файл, или имеющее значение null, если элемент не выбран.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Свойство <codeph>nativePath</codeph> файлового элемента, представляющее выбранный подкаталог или файл, или имеющее значение <codeph>null</codeph>, если элемент не выбран.
     
      <p>При выборе нескольких элементов это свойство представляет первый путь в массиве <codeph>selectedPaths</codeph>.</p>
     
      <p>Установка этого свойства влияет на свойства <codeph>selectedPaths</codeph>, <codeph>selectedItem</codeph>, <codeph>selectedItems</codeph>, <codeph>selectedIndex</codeph> и <codeph>selectedIndices</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedIndex"><linktext>mx.controls.listClasses.ListBase.selectedIndex</linktext></link><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedItem"><linktext>mx.controls.listClasses.ListBase.selectedItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:selectedPaths:get"><apiName>selectedPaths</apiName><shortdesc>
      Массив строк nativePath для файловых элементов, представляющий выбранные подкаталоги и файлы.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив строк <codeph>nativePath</codeph> для файловых элементов, представляющий выбранные подкаталоги и файлы. Массив пуст, если элементы не выбраны.
     
      <p>Установка этого свойства влияет на свойства <codeph>selectedPaths</codeph>, <codeph>selectedItem</codeph>, <codeph>selectedItems</codeph>, <codeph>selectedIndex</codeph> и <codeph>selectedIndices</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedIndex"><linktext>mx.controls.listClasses.ListBase.selectedIndex</linktext></link><link href="" invalidHref="mx.controls.listClasses.xml#ListBase/selectedItem"><linktext>mx.controls.listClasses.ListBase.selectedItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:FileSystemList:showExtensions:get"><apiName>showExtensions</apiName><shortdesc>
      Флаг, определяющий возможность отображения расширений в именах файлов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, определяющий возможность отображения расширений в именах файлов. У этого свойства значение <codeph>true</codeph> устанавливается для отображения расширений файлов, а значение <codeph>false</codeph> для их скрытия. Расширения в именах каталогов отображаются всегда.
     
      <p>Установка этого свойства не определяет отображаемые элементы и порядок их появления. Она также не влияет на выбор элементов и положение прокрутки.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemList:showHidden:get"><apiName>showHidden</apiName><shortdesc>
      Флаг, указывающий возможность отображения скрытых файлов и каталогов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий возможность отображения скрытых файлов и каталогов. У этого свойства значение <codeph>true</codeph> устанавливается для отображения скрытых файлов, а значение <codeph>false</codeph> для их скрытия.
     
      <p>Установка этого свойства отменяет выбор всех выбранных элементов и приводит к возврату элементом управления положения прокрутки в левый верхний угол.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemList:showIcons:get"><apiName>showIcons</apiName><shortdesc>
      Флаг, указывающий возможность отображения значков перед именами файлов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий возможность отображения значков перед именами файлов. У этого свойства значение <codeph>true</codeph> устанавливается для отображения значков, а значение <codeph>false</codeph> для их скрытия.
     
      <p>Для изменения значков по умолчанию можно установить стили <codeph>directoryIcon</codeph> и <codeph>fileIcon</codeph>. Этот элемент управления не может отобразить фактический значок, устанавливаемый для файла операционной системой, поскольку Apollo M2 не поддерживает такую функцию.</p>
     
      <p>Установка этого свойства не определяет отображаемые элементы и порядок их появления. Она также не влияет на выбор элементов и положение прокрутки.</p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:FileSystemSizeDisplayMode"><apiName>FileSystemSizeDisplayMode</apiName><shortdesc>
  Класс FileSystemSizeDisplayMode определяет значения констант для свойства sizeDisplayMode класса FileSystemDataGrid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс FileSystemSizeDisplayMode определяет значения констант для свойства <codeph>sizeDisplayMode</codeph> класса FileSystemDataGrid.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#FileSystemDataGrid/enumerationMode"><linktext>mx.controls.FileSystemDataGrid.enumerationMode</linktext></link></related-links><apiValue id="mx.controls:FileSystemSizeDisplayMode:BYTES"><apiName>BYTES</apiName><shortdesc>
      Определяет необходимость отображения размера файлов в байтах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bytes</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Определяет необходимость отображения размера файлов в байтах.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemSizeDisplayMode:KILOBYTES"><apiName>KILOBYTES</apiName><shortdesc>
      Определяет необходимость отображения размера файлов в килобайтах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>kilobytes</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Определяет необходимость отображения размера файлов в килобайтах.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HTML"><apiName>HTML</apiName><shortdesc>
  Элемент управления ToolTip позволяет отображать содержимое HTML в приложении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:HTML" playerVersion="AIR1.1" type="Number">
<description>
  Число пикселей между верхней границей этого элемента управления и верхним краем его области содержимого HTML.
 
  </description>
<default>0
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:HTML" playerVersion="AIR1.1" type="Number">
<description>
  Количество пикселей между правой границей элемента управления и правым краем его области содержимого HTML.
 
  </description>
<default>0
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:HTML" playerVersion="AIR1.1" type="Number">
<description>
  Количество пикселей между левой границей элемента управления и левым краем его области содержимого HTML.
 
  </description>
<default>0
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:HTML" playerVersion="AIR1.1" type="Number">
<description>
  Число пикселей между нижней границей элемента управления и нижним краем его области содержимого HTML.
 
  </description>
<default>0
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:HTML&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:HTML
    <strong>Properties</strong>
    data="<i>null</i>"
    historyPosition="0"
    htmlHost="<i>null</i>"
    htmlLoaderFactory="mx.core.ClassFactory"
    htmlText=""
    listData="<i>null</i>"
    location=""
    paintsDefaultBackground="false"
    runtimeApplicationDomain="<i>null</i>"
    userAgent="<i>null</i>"
 
    <strong>Styles</strong>
    paddingBottom="0"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="0"
 
    <strong>Events</strong>
    complete="<i>No default</i>"
    htmlDOMInitialize="<i>No default</i>"
    htmlRender="<i>No default</i>"
    locationChange="<i>No default</i>"
    uncaughtScriptException="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:ScrollControlBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ToolTip позволяет отображать содержимое HTML в приложении.
 
  <p>Свойство <codeph>location</codeph> используется для указания URL-адреса страницы HTML, содержимое которой отображается в элементе управления, либо можно настроить свойство <codeph>htmlText</codeph> для определения строки, содержащей отформатированный текст HTML, визуализация которого осуществляется в элементе управления.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="../../flash/html/HTMLLoader.html"><linktext>HTMLLoader</linktext></link></related-links><adobeApiEvent id="mx.controls:HTML_flash.events.HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION_uncaughtScriptException"><apiName>uncaughtScriptException</apiName><shortdesc>
  Передается в случае неперехваченного исключения JavaScript.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION</apiEventType><adobeApiEventClassifier>flash.events.HTMLUncaughtScriptExceptionEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается в случае неперехваченного исключения JavaScript.
 
  <p>Передача события всегда выполняется асинхронно. Обработчик события для этого события может выполнить вызов любого метода, либо получить доступ к любому свойству этого элемента управления или его внутреннего <codeph>htmlLoader</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:HTML_flash.events.Event.LOCATION_CHANGE_locationChange"><apiName>locationChange</apiName><shortdesc>
  Передается при изменении свойства location.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.LOCATION_CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства <codeph>location</codeph>.
 
  <p>Передача события всегда выполняется асинхронно. Обработчик события для этого события может выполнить вызов любого метода, либо получить доступ к любому свойству этого элемента управления или его внутреннего <codeph>htmlLoader</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:HTML_flash.events.Event.HTML_RENDER_htmlRender"><apiName>htmlRender</apiName><shortdesc>
  Передается при первоначальной визуализации содержимого HTML этого элемента управления, а также при каждом повторном выполнении визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_RENDER</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при первоначальной визуализации содержимого HTML этого элемента управления, а также при каждом повторном выполнении визуализации.
 
  <p>Поскольку элемент управления HTML может выполнять передачу многих из этих событий, важно избежать значительного увеличения объема обработки, выполняемой обработчиком <codeph>render</codeph>, которое могло бы оказать отрицательное воздействие на производительность.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:HTML_flash.events.Event.HTML_DOM_INITIALIZE_htmlDOMInitialize"><apiName>htmlDOMInitialize</apiName><shortdesc>
  Передается после инициализации HTML DOM в результате выполнения операции загрузки при настройке свойства location или htmlText.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_DOM_INITIALIZE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается после инициализации HTML DOM в результате выполнения операции загрузки при настройке свойства <codeph>location</codeph> или <codeph>htmlText</codeph>.
 
  <p>В момент передачи этого события какие-либо методы JavaScript еще не выполнены. Объекты <codeph>domWindow</codeph>и <codeph>domWindow.document</codeph> уже существуют, однако другие объекты DOM могут еще не существовать. Это событие можно использовать для настройки свойства объектов <codeph>domWindow</codeph> и <codeph>domWindow.document</codeph> для методов JavaScript с целью последующего получения доступа к этим методам.</p>
 
  <p>Обработчик для этого события не должен устанавливать каких-либо свойств или выполнять вызов каких-либо методов, инициирующих другую операцию загрузки или воздействующих на URL-адрес для текущей операции загрузки; в противном случае возникает исключение ActionScript или JavaScript.</p>
 
  </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="mx.controls.location.xml"><linktext>location</linktext></link><link href="" invalidHref="mx.controls.htmlText.xml"><linktext>htmlText</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.controls:HTML_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  Передается после выполнения последней операции загрузки, инициированной при завершении установки свойств location или htmlText.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается после выполнения последней операции загрузки, инициированной при завершении установки свойств <codeph>location</codeph> или <codeph>htmlText</codeph>.
 
  <p>Передача этого события всегда выполняется асинхронно и инициируется после передачи события JavaScript <codeph>load</codeph> в HTML DOM.</p>
 
  <p>Обработчик события для этого события может выполнить вызов любого метода, либо получить доступ к любому свойству этого элемента управления или его внутреннего <codeph>htmlLoader</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="mx.controls.location.xml"><linktext>location</linktext></link><link href="" invalidHref="mx.controls.htmlText.xml"><linktext>htmlText</linktext></link></related-links></adobeApiEvent><apiConstructor id="mx.controls:HTML:HTML"><apiName>HTML</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:HTML:cancelLoad"><apiName>cancelLoad</apiName><shortdesc>
      Отменяет любую выполняющуюся операцию загрузки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Отменяет любую выполняющуюся операцию загрузки.
     
      <p>Этот метод не приводит к выполнению каких-либо действий в случае его вызова перед созданием внутреннего HTMLLoader этого компонента (свойство <codeph>htmlLoader</codeph>).</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:HTML:getHistoryAt"><apiName>getHistoryAt</apiName><shortdesc>
      Возвращает HTMLHistoryItem в указанной позиции в журнале этого элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект HTMLHistoryItem для записи журнала в заданной позиции.
     
      </apiDesc><apiType value="flash.html:HTMLHistoryItem"/></apiReturn><apiParam><apiItemName>position</apiItemName><apiType value="int"/><apiDesc>Позиция в журнале.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает HTMLHistoryItem в указанной позиции в журнале этого элемента управления.
     
      <p>Этот метод возвращает значение <codeph>null</codeph>, если он вызывается перед созданием внутреннего HTMLLoader этого элемента (свойство <codeph>htmlLoader</codeph>).</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.controls.historyPosition.xml"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:HTML:historyBack"><apiName>historyBack</apiName><shortdesc>
      Обеспечивает выполнение возврата в журнале этого элемента управления (по возможности).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обеспечивает выполнение возврата в журнале этого элемента управления (по возможности).
     
      <p>Вызов этого метода объекта HTMLLoader аналогичен вызову метода <codeph>back()</codeph> свойства <codeph>window.history</codeph> в сценарии JavaScript в содержимом HTML.</p>
     
      <p>Этот метод не приводит к выполнению каких-либо действий в случае его вызова перед созданием внутреннего HTMLLoader этого компонента (свойство <codeph>htmlLoader</codeph>).</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#HTML/historyPosition"><linktext>historyPosition</linktext></link><link href="mx.controls.xml#HTML/historyForward()"><linktext>historyForward()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:HTML:historyForward"><apiName>historyForward</apiName><shortdesc>
      Обеспечивает выполнение перехода вперед в журнале этого элемента управления (по возможности).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обеспечивает выполнение перехода вперед в журнале этого элемента управления (по возможности).
     
      <p>Вызов этого метода объекта HTMLLoader аналогичен вызову метода <codeph>forward()</codeph> свойства <codeph>window.history</codeph> в сценарии JavaScript в содержимом HTML.</p>
     
      <p>Эта функция не приводит к возникновению ошибок.</p>
     
      <p>Этот метод не приводит к выполнению каких-либо действий в случае его вызова перед созданием внутреннего HTMLLoader этого компонента (свойство <codeph>htmlLoader</codeph>).</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#HTML/historyPosition"><linktext>historyPosition</linktext></link><link href="mx.controls.xml#HTML/historyBack()"><linktext>historyBack()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:HTML:historyGo"><apiName>historyGo</apiName><shortdesc>
      Обеспечивает переход на указанное количество шагов в журнале этого элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>steps</apiItemName><apiType value="int"/><apiDesc>Число шагов в журнале, на которое необходимо выполнить переход вперед (положительное число) или назад (отрицательное число).
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает переход на указанное количество шагов в журнале этого элемента управления.
     
      <p>Этот метод обеспечивает переход, если количество шагов является положительным, и переход назад, если количество шагов является отрицательным. Переход на нулевое количество шагов эквивалентен выполнению вызова метода <codeph>reload()</codeph>.</p>
     
      <p>Вызов этого метода эквивалентен вызову метода <codeph>go()</codeph> свойства <codeph>window.history</codeph> в сценарии JavaScript в содержимом HTML.</p>
     
      <p>Этот метод не приводит к выполнению каких-либо действий в случае его вызова перед созданием внутреннего HTMLLoader этого компонента (свойство <codeph>htmlLoader</codeph>).</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:HTML:reload"><apiName>reload</apiName><shortdesc>
      Повторно загружает содержимое HTML из текущего местоположения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Повторно загружает содержимое HTML из текущего <codeph>местоположения</codeph>.
     
      <p>Этот метод не приводит к выполнению каких-либо действий в случае его вызова перед созданием внутреннего HTMLLoader этого компонента (свойство <codeph>htmlLoader</codeph>).</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:HTML:htmlLoader"><apiName>htmlLoader</apiName><shortdesc>
      Внутренний объект HTMLLoader, обеспечивающий визуализацию содержимого HTML для этого элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.html:HTMLLoader"/></apiValueDef><apiDesc>
      Внутренний объект HTMLLoader, обеспечивающий визуализацию содержимого HTML для этого элемента управления.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
      Высота содержимого HTML (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Высота содержимого HTML (в пикселях).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
      Ширина содержимого HTML (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина содержимого HTML (в пикселях).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:data:get"><apiName>data</apiName><shortdesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>При использовании элемента управления в качестве средства визуализации или редактора вставных элементов Flex автоматически записывает текущее значение элемента в свойство <codeph>text</codeph> данного элемента управления.</p>
     
      <p>Установить это свойство в MXML невозможно.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:HTML:domWindow:get"><apiName>domWindow</apiName><shortdesc>
      Объект JavaScript window для корневого фрейма HTML DOM в пределах этого элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект JavaScript <codeph>window</codeph> для корневого фрейма HTML DOM в пределах этого элемента управления.
     
      <p>Это свойство имеет значение <codeph>null</codeph> до момента передачи события <codeph>htmlDOMInitialize</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:historyLength:get"><apiName>historyLength</apiName><shortdesc>
      Полная длина списка журнала, включая предыдущие и последующие записи.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Полная длина списка журнала, включая предыдущие и последующие записи. Это свойство имеет то же самое значение, что и свойство JavaScript <codeph>window.history.length</codeph> содержимого HTML.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#HTML/historyPosition"><linktext>historyPosition</linktext></link></related-links></apiValue><apiValue id="mx.controls:HTML:historyPosition:get"><apiName>historyPosition</apiName><shortdesc>
      Текущее положение в журнале.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текущее положение в журнале.
     
      <p>Журнал соответствует объекту <codeph>window.history</codeph> содержимого HTML. Записи, расположенные перед текущим положением, называются предыдущим списком; записи после текущего положения называются последующим списком. При попытке настроить положение после конечных записей задается положение в конце списка.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:htmlHost:get"><apiName>htmlHost</apiName><shortdesc>
      Объект HTMLHost используется при обработке изменений для определенных элементов пользовательского интерфейса в содержимом HTML, например, свойства window.document.title.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.html:HTMLHost"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект HTMLHost используется при обработке изменений для определенных элементов пользовательского интерфейса в содержимом HTML, например, свойства <codeph>window.document.title</codeph>.
     
      <p>В целях отмены поведения по умолчанию для HTMLLoader необходимо создать подкласс класса HTMLHost, отменить его функции элемента, предназначенные для обработки различных изменений пользовательского интерфейса в содержимом HTML, а затем настроить это свойство для экземпляра подкласса.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:htmlLoaderFactory:get"><apiName>htmlLoaderFactory</apiName><shortdesc>
      IFactory, создающий экземпляр, производный от HTMLLoader, для использования в качестве htmlLoader.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFactory"/></apiValueDef><apiDesc>
      IFactory, создающий экземпляр, производный от HTMLLoader, для использования в качестве htmlLoader.
     
      <p>По умолчанию для HTMLLoader используется значение IFactory.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Указывает строку, отформатированную на основе HTML, для отображения элементом управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает строку, отформатированную на основе HTML, для отображения элементом управления.
     
      <p>Настройка этого свойства имеет побочный эффект, который заключается в установке для свойства <codeph>location</codeph> значения <codeph>null</codeph> и наоборот.</p>
     
      <p>Содержимое, загруженное с помощью метода <codeph>loadString()</codeph>, помещается в защищенную изолированную среду приложения. Если приложение AIR включает элемент управления HTML, расположенный в изолированной среде приложения, и в элемент управления непосредственно добавляется удаленный код HTML путем настройки свойства <codeph>htmlText</codeph>, то любой сценарий, содержащийся в тексте HTML, выполняется в изолированной среде приложения.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#HTML/location"><linktext>location</linktext></link></related-links></apiValue><apiValue id="mx.controls:HTML:listData:get"><apiName>listData</apiName><shortdesc>
      При использовании компонента в качестве средства визуализации вставных элементов или редактора вставных элементов Flex инициализирует свойство компонента listData соответствующими данными из элемента управления List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.controls.listClasses:BaseListData"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      При использовании компонента в качестве средства визуализации или редактора вставных элементов Flex инициализирует свойство компонента <codeph>listData</codeph> с соответствующими данными из элемента управления List. Затем компонент может использовать свойство <codeph>listData</codeph> для инициализации свойства <codeph>data</codeph> средства визуализации или редактора вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.controls.listClasses.IDropInListItemRenderer.xml"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:HTML:loaded:get"><apiName>loaded</apiName><shortdesc>
      Флаг, указывающий на соответствие события load JavaScript предыдущей операции загрузки в HTML DOM в этом элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий на соответствие события <codeph>load</codeph> JavaScript предыдущей операции загрузки в HTML DOM в этом элементе управления.
     
      <p>Это свойство имеет значение <codeph>true</codeph> перед передачей события <codeph>complete.</codeph></p>
     
      <p>Установка для этого свойства значения <codeph>true</codeph> может оказаться невозможной. Причины аналогичны тем, по которым невозможна передача события <codeph>complete</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:location:get"><apiName>location</apiName><shortdesc>
      URL-адрес страницы HTML, отображаемой этим элементом управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      URL-адрес страницы HTML, отображаемой этим элементом управления.
     
      <p>Настройка этого свойства имеет побочный эффект, который заключается в установке для свойства <codeph>htmlText</codeph> значения <codeph>null</codeph> и наоборот.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#HTML/htmlText"><linktext>htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:HTML:paintsDefaultBackground:get"><apiName>paintsDefaultBackground</apiName><shortdesc>
      Определяет наличие по умолчанию непрозрачного белого фона в содержимом HTML этого элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет наличие по умолчанию непрозрачного белого фона в содержимом HTML этого элемента управления.
     
      <p>Если это свойство имеет значение <codeph>false</codeph>, то содержимое HTML(при его наличии) отображается с использованием фона, указанного для этого элемента управления Flex.</p>
     
      <p>Однако если какой-либо элемент HTML имеет собственный цвет непрозрачного фона (например, определяемый стилем style="background-color:gray"), то соответствующий элемент отображается с использованием этого фона.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:pdfCapability:get"><apiName>pdfCapability</apiName><shortdesc>
      Тип поддержки PDF в пользовательской системе, определенный как целочисленное кодовое значение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Тип поддержки PDF в пользовательской системе, определенный как целочисленное кодовое значение.
     
      <p>Содержимое PDF будет отображаться в объекте HTML только в том случае, если для этого свойства задано значение <codeph>PDFCapability.STATUS_OK</codeph>. Класс PDFCapability определяет константы для возможных значений свойства <codeph>pdfCapability</codeph>, как показано ниже:</p>
     
      <adobetable class="innertable">
        
        
        
        
        
      <tgroup cols="2"><thead><row><entry>Константа PDFCapability</entry><entry>Значение</entry></row></thead><tbody><row>
         <entry><codeph>STATUS_OK</codeph></entry>
         <entry>Необходимая версия (8.1 или более поздняя) приложения Acrobat Reader обнаружена, и содержимое PDF можно загрузить в объект HTML.
           <p><i>Примечание.</i> Если в системе Windows в настоящее время запущено приложение Acrobat или Acrobat Reader версии 7.x или более поздней, эта версия используется даже в том случае, если установлена более поздняя версия, поддерживающая загрузку содержимого PDF, загруженного в объект HTML. Таким образом, если для свойства <codeph>pdfCapability</codeph> задано значение <codeph>PDFCapability.STATUS_OK</codeph>, при попытке приложения AIR загрузить содержимое PDF в объект HTML в более ранней версии Acrobat или Reader отображается предупреждение, однако в среде выполнения AIR сообщение об ошибке не появляется. Если конечные пользователи сталкиваются с такой ситуацией, можно рассмотреть необходимость создания инструкций относительно закрытия Acrobat при использовании данного приложения. Целесообразно предусмотреть возможность отображения этих инструкций, если загрузка содержимого PDF не может быть выполнена в пределах определенного временного интервала.</p></entry>
        </row><row>
         <entry><codeph>ERROR_INSTALLED_READER_NOT_FOUND</codeph></entry>
         <entry>Версия Acrobat Reader не обнаружена. Объекту HTML не удается отобразить содержимое PDF.</entry>
        </row><row>
         <entry><codeph>ERROR_INSTALLED_READER_TOO_OLD</codeph></entry>
         <entry>Приложение Acrobat Reader обнаружено, но версия является слишком старой. Объекту HTML не удается отобразить содержимое PDF.</entry>
        </row><row>
         <entry><codeph>ERROR_PREFERED_READER_TOO_OLD</codeph></entry>
         <entry>Необходимая версия (8.1 или более поздняя) приложения Acrobat Reader обнаружена, но версия этого приложения, настроенная для обработки содержимого PDF, является более ранней, чем 8.1. Объекту HTML не удается отобразить содержимое PDF.</entry>
        </row></tbody></tgroup></adobetable>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:runtimeApplicationDomain:get"><apiName>runtimeApplicationDomain</apiName><shortdesc>
      ApplicationDomain, используемый для создания сценария window.runtime HTML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.system:ApplicationDomain"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ApplicationDomain, используемый для создания сценария <codeph>window.runtime</codeph> HTML.
     
      <p>Если это свойство имеет значение <codeph>null</codeph>, или если оно определяет ApplicationDomain из домена безопасности, отличного от содержимого HTML, то на странице HTML используется <codeph>ApplicationDomain</codeph> по умолчанию для домена страницы.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:HTML:userAgent:get"><apiName>userAgent</apiName><shortdesc>
      Строка агента пользователя, которую необходимо использовать в запросах содержимого из данного элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Строка агента пользователя, которую необходимо использовать в запросах содержимого из данного элемента управления.
     
      <p>Можно настроить строку агента пользователя по умолчанию, используемую всеми элементами управления HTML в домене приложения, путем определения свойства <codeph>URLRequestDefaults.userAgent</codeph>. Если для свойства <codeph>userAgent</codeph> объекта значение не задано (или в качестве значения используется <codeph>null</codeph>), то строке агента пользователя назначается значение <codeph>URLRequestDefaults.userAgent</codeph>.</p>
     
      <p>Если ни для свойства <codeph>userAgent</codeph> этого элемента управления, ни для <codeph>URLRequestDefaults.userAgent</codeph> не задано какое-либо значение, в качестве строки агента пользователя используется значение по умолчанию. Это значение по умолчанию зависит от конечной операционной системы (Mac OS или Windows), языка и версии (см. следующие два примера):</p>
     
      <pre>
      "Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) AdobeAIR/1.0"
      "Mozilla/5.0 (Windows; U; en) AppleWebKit/420+ (KHTML, like Gecko) AdobeAIR/1.0"
      </pre>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.net.xml#URLRequest/userAgent"><linktext>flash.net.URLRequest.userAgent</linktext></link><link href="" invalidHref="flash.net.xml#URLRequestDefaults/userAgent"><linktext>flash.net.URLRequestDefaults.userAgent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:FlexNativeMenu"><apiName>FlexNativeMenu</apiName><shortdesc>
  Компонент FlexNativeMenu предоставляет оболочку для класса NativeMenu AIR.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.1"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  <p>The <code>&lt;mx:FlexNativeMenu&gt</code> tag supports the following tag attributes:</p>
 
  <pre>
  &lt;mx:FlexNativeMenu
    <b>Properties</b>
    dataDescriptor="<i>mx.controls.treeClasses.DefaultDataDescriptor</i>"
    dataProvider="<i>undefined</i>"
    keyEquivalentField="keyEquivalent"
    keyEquivalentFunction="<i>undefined</i>"
    keyEquivalentModifiersFunction="<i>undefined</i>"
    labelField="label"
    labelFunction="<i>undefined</i>"
    mnemonicIndexField="mnemonicIndex"
    mnemonicIndexFunction="<i>undefined</i>"
    showRoot="true"
 
    <b>Events</b>
    itemClick="<i>No default</i>"
    menuShow="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:ILayoutManagerClient</apiBaseInterface><apiBaseInterface>mx.controls:IFlexContextMenu</apiBaseInterface><apiBaseInterface>mx.automation:IAutomationObject</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Компонент FlexNativeMenu предоставляет оболочку для класса NativeMenu AIR. Компонент FlexNativeMenu предоставляет способ определения собственных меню операционной системы (например, меню окон, приложений и контекстных меню) с использованием технологий, знакомых разработчикам Flex и совместимых с другими компонентами меню Flex, например, с помощью применения MXML и поставщиков данных для указания структуры меню. Однако в отличие от компонентов меню Flex, меню, определенные при помощи компонента FlexNativeMenu, в большинстве операционных систем отображаются в качестве составной части приложения AIR, а не в качестве визуальных компонентов, создаваемых программой Flex.
 
  <p>Как и в случае с другими компонентами меню Flex для определения структуры меню, представляемой компонентом FlexNativeMenu, создается поставщик данных, например, иерархия XML или массив объектов, содержащий данные, которые будут использоваться для определения меню. Для определения метода интерпретации данных поставщика данных можно установить несколько свойств, например, свойство <codeph>labelField</codeph>, указывающее поле данных, используемое для метки элемента меню, свойство <codeph>keyEquivalentField</codeph>, указывающее поле, которое позволяет определить сочетание клавиш, эквивалентное элементу меню, и свойство <codeph>mnemonicIndexField</codeph>, позволяющее указать поле, определяющее позицию индекса символа в метке, используемого в качестве горячих клавиш элемента меню.</p>
 
  <p>С помощью поставщика данных элементов FlexNativeMenu можно указать несколько атрибутов, определяющих способ отображения элемента и его поведение, представленных в примере для следующего поставщика данных XML:</p>
  <pre>
   &lt;mx:XML format="e4x" id="myMenuData">
     &lt;root>
        &lt;menuitem label="MenuItem A">
            &lt;menuitem label="SubMenuItem A-1" enabled="False"/>
            &lt;menuitem label="SubMenuItem A-2"/>
        &lt;/menuitem>
        &lt;menuitem label="MenuItem B" type="check" toggled="true"/>
        &lt;menuitem label="MenuItem C" type="check" toggled="false"/>
        &lt;menuitem type="separator"/>
        &lt;menuitem label="MenuItem D">
            &lt;menuitem label="SubMenuItem D-1"/>
            &lt;menuitem label="SubMenuItem D-2"/>
            &lt;menuitem label="SubMenuItem D-3"/>
        &lt;/menuitem>
    &lt;/root>
 &lt;/mx:XML></pre>
 
  <p>В следующей таблице приведены атрибуты, которые можно указать, типы их данных, их назначение, а также способ их отображения поставщиком данных при использовании класса DefaultDataDescriptor в меню для анализа поставщика данных:</p>
 
  <adobetable class="innertable">
  
  
  
  
  
  
  
  
  
  
  
  
  
 <tgroup cols="3"><thead><row><entry>Атрибут</entry><entry>Тип</entry><entry>Описание</entry></row></thead><tbody><row>
    <entry><codeph>altKey</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, должна ли клавиша Alt являться частью сочетания клавиш для элемента.</entry>
  </row><row>
    <entry><codeph>cmdKey</codeph></entry>
    <entry>Логическое значение</entry>
    <entry><b>Примечание.</b> Обработка этого атрибута осуществляется, начиная с версии Flex 3.2. Вместо этого используйте <codeph>commandKey</codeph>. Указывает, должна ли клавиша Command являться частью сочетания клавиш для элемента.</entry>
  </row><row>
    <entry><codeph>commandKey</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, должна ли клавиша Command являться частью сочетания клавиш для элемента.</entry>
  </row><row>
    <entry><codeph>controlKey</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, должна ли клавиша Ctrl являться частью сочетания клавиш для элемента.</entry>
  </row><row>
    <entry><codeph>ctrlKey</codeph></entry>
    <entry>Логическое значение</entry>
    <entry><b>Примечание.</b> Обработка этого атрибута осуществляется, начиная с версии Flex 3.2. Вместо этого используйте <codeph>controlKey</codeph>. Указывает, должна ли клавиша Ctrl являться частью сочетания клавиш для элемента.</entry>
  </row><row>
    <entry><codeph>включено</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, может ли пункт меню быть выбран пользователем (<codeph>true</codeph>) или нет (<codeph>false</codeph>). Если значение не указано, элемент обрабатывается так, как если бы имел значение <codeph>true</codeph>. При применении дескриптора данных по умолчанию для указания этой характеристики поставщиками данных должен использоваться атрибут XML <codeph>enabled</codeph> или поле объекта.</entry>
  </row><row>
    <entry><codeph>keyEquivalent</codeph></entry>
    <entry>Строка</entry>
    <entry>Указывает символ на клавиатуре, при нажатии которого событие инициируется таким же образом, как если бы был выбран пункт меню. Свойство меню <codeph>keyEquivalentField</codeph> или <codeph>keyEquivalentFunction</codeph> определяет имя поля в составе данных, указывающего эквивалентную клавишу или функцию для определения эквивалентных клавиш. (Если поставщик данных имеет формат XML E4X, для присвоения эквивалентных клавиш необходимо задать одно из этих свойств.)</entry>
  </row><row>
    <entry><codeph>label</codeph></entry>
    <entry>Строка</entry>
    <entry>Задает текст, отображаемый в элементе управления. Этот элемент используется для всех типов пунктов меню, за исключением <codeph>separator</codeph>. Свойство меню <codeph>labelField</codeph> или <codeph>labelFunction</codeph> определяет имя поля в составе данных, указывающего метку или функцию для определения меток. (Если поставщик данных имеет формат XML E4X, для отображения метки необходимо задать одно из этих свойств.) Если поставщиком данных является массив из строк, в качестве метки используется строковое значение.</entry>
  </row><row>
    <entry><codeph>mnemonicIndex</codeph></entry>
    <entry>Целое</entry>
    <entry>Указывает позицию индекса для символа в метке, используемого в качестве горячей клавиши для элемента меню. Свойство меню <codeph>mnemonicIndexField</codeph> или <codeph>mnemonicIndexFunction</codeph> определяет имя поля в составе данных, указывающее мнемонический индекс или функцию для определения мнемонического индекса. (Если поставщик данных имеет формат XML E4X, для определения мнемонического индекса в данных необходимо задать одно из этих свойств.) В качестве альтернативы, для указания на то, что символ, входящий в состав метки, является горячей клавишей элемента меню, необходимо добавить знак подчеркивания слева от этого символа.</entry>
  </row><row>
    <entry><codeph>shiftKey</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, должна ли клавиша Shift являться частью сочетания клавиш для элемента.</entry>
  </row><row>
    <entry><codeph>toggled</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, был ли установлен флажок. Если значение не указано, элемент обрабатывается так, как если бы было установлено значение <codeph>false</codeph> и элемент не был выбран. При использовании дескриптора данных по умолчанию для указания этой характеристики в поставщиках данных необходимо применять атрибут XML <codeph>toggled</codeph> или поле объекта.</entry>
  </row><row>
    <entry><codeph>type</codeph></entry>
    <entry>Строка</entry>
    <entry>Указывает тип пункта меню. Допустимыми значениями являются <codeph>separator</codeph> и <codeph>check</codeph>. Все другие значения или узлы без указания типа обрабатываются как обычные пункты меню. При использовании дескриптора данных по умолчанию для указания этой характеристики в поставщиках данных необходимо применять атрибут XML <codeph>type</codeph> или поле объекта.</entry>
  </row></tbody></tgroup></adobetable>
 
  <p>Для создания меню окна установите FlexNativeMenu в качестве свойства <codeph>menu</codeph> экземпляра Window или WindowedApplication, в котором должно появляться меню. Для создания меню приложения установите FlexNativeMenu в качестве свойства <codeph>menu</codeph> приложения WindowedApplication. В целях присвоения объекта FlexNativeMenu в качестве контекстного меню для части пользовательского интерфейса вызовите метод <codeph>setContextMenu()</codeph> для экземпляра FlexNativeMenu, передав объект пользовательского интерфейса в качестве аргумента. Вызовите метод <codeph>display()</codeph> компонента FlexNativeMenu для отображения меню в качестве всплывающего меню в любой области одного из окон приложения.</p>
 
  <p>Для обнаружения времени инициирования команд элементов меню зарегистрируйте прослушиватель для события <codeph>itemClick</codeph>. Также можно зарегистрировать прослушиватель для события <codeph>menuShow</codeph>, определяющего открытие любого меню или подменю.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.NativeMenu.xml"><linktext>flash.display.NativeMenu</linktext></link><link href="mx.events.xml#FlexNativeMenuEvent"><linktext>mx.events.FlexNativeMenuEvent</linktext></link></related-links><adobeApiEvent id="mx.controls:FlexNativeMenu_mx.events.FlexNativeMenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается при выборе пункта меню.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexNativeMenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.FlexNativeMenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе пункта меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:FlexNativeMenu_mx.events.FlexNativeMenuEvent.MENU_SHOW_menuShow"><apiName>menuShow</apiName><shortdesc>
  Передается перед отображением меню или подменю.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexNativeMenuEvent.MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events.FlexNativeMenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается перед отображением меню или подменю.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:FlexNativeMenu:FlexNativeMenu"><apiName>FlexNativeMenu</apiName><shortdesc>
      Конструктор.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:FlexNativeMenu:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      Обрабатывает свойства, установленные в компоненте.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обрабатывает свойства, установленные в компоненте.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="mx.core.xml#UIComponent/commitProperties()"><linktext>mx.core.UIComponent.commitProperties()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:createAutomationIDPart"><apiName>createAutomationIDPart</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="mx.automation:IAutomationObject"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:createAutomationIDPartWithRequiredProperties"><apiName>createAutomationIDPartWithRequiredProperties</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>child</apiItemName><apiType value="mx.automation:IAutomationObject"/></apiParam><apiParam><apiItemName>properties</apiItemName><apiType value="Array"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:display"><apiName>display</apiName><shortdesc>
      Добавляет раскрывающееся меню в заданном местоположении.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="flash.display:Stage"/><apiDesc>Объект Stage, на котором будет отображаться данное меню. 
     
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="int"/><apiDesc>Число пикселей по горизонтали относительно начала рабочей области, на котором будет отображаться данное меню. 
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/><apiDesc>Число пикселей по вертикали относительно начала рабочей области, на котором будет отображаться данное меню. 
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      Добавляет раскрывающееся меню в заданном местоположении. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:getAutomationChildAt"><apiName>getAutomationChildAt</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="mx.automation:IAutomationObject"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:getAutomationChildren"><apiName>getAutomationChildren</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:invalidateProperties"><apiName>invalidateProperties</apiName><shortdesc conref="mx.core.UIComponent#invalidateProperties()">
      </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc conref="mx.core.UIComponent#invalidateProperties()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:protected:itemToKeyEquivalent"><apiName>itemToKeyEquivalent</apiName><shortdesc>
      Возвращает эквивалентную клавишу для заданного объекта данных на основе свойств keyEquivalentField и keyEquivalentFunction.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Эквивалентная клавиша на основе данных.
     </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Объект, который должен быть отображен.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает эквивалентную клавишу для заданного объекта данных на основе свойств <codeph>keyEquivalentField</codeph> и <codeph>keyEquivalentFunction</codeph>. Если метод не позволяет преобразовать параметр в строку, возвращается пустая строка.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:protected:itemToKeyEquivalentModifiers"><apiName>itemToKeyEquivalentModifiers</apiName><shortdesc>
      Возвращает модификаторы эквивалентных клавиш для заданного объекта данных на основе свойства keyEquivalentModifiersFunction.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Массив модификаторов эквивалентных клавиш на основе данных
     </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Объект, который должен быть отображен.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает модификаторы эквивалентных клавиш для заданного объекта данных на основе свойства <codeph>keyEquivalentModifiersFunction</codeph>. Если с помощью метода не удается преобразовать параметр в массив модификаторов, возвращается пустой массив.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:protected:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Возвращает строку, которая должна использоваться в качестве метки элемента меню для заданного объекта данных на основе свойств labelField и labelFunction.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Строка, отображаемая в зависимости от данных.
     </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Объект, который должен быть отображен.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает строку, которая должна использоваться в качестве метки элемента меню для заданного объекта данных на основе свойств <codeph>labelField</codeph> и <codeph>labelFunction</codeph>. Если метод не позволяет преобразовать параметр в строку, возвращается одиночный знак пробела.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:protected:itemToMnemonicIndex"><apiName>itemToMnemonicIndex</apiName><shortdesc>
      Возвращает мнемонический индекс для заданного объекта данных на основе свойств mnemonicIndexField и mnemonicIndexFunction.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Мнемонический индекс на основе данных.
     </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Объект, который должен быть отображен.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает мнемонический индекс для заданного объекта данных на основе свойств <codeph>mnemonicIndexField</codeph> и <codeph>mnemonicIndexFunction</codeph>. Если с помощью метода не удается преобразовать параметр в целое число, возвращается значение -1.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:protected:parseLabelToMnemonicIndex"><apiName>parseLabelToMnemonicIndex</apiName><shortdesc>
      Обеспечивает извлечение мнемонического индекса из метки на основе наличия символа подчеркивания.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
      Обеспечивает извлечение мнемонического индекса из метки на основе наличия символа подчеркивания. Обеспечивает нахождение первого символа подчеркивания, если таковой существует, и его использование в качестве индекса.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:protected:parseLabelToString"><apiName>parseLabelToString</apiName><shortdesc>
      Определяет фактическую метку, которая должна использоваться для элемента NativeMenuItem путем удаления символов подчеркивания и преобразования уцелевших символов подчеркивания, если таковые существуют.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
      Определяет фактическую метку, которая должна использоваться для элемента NativeMenuItem путем удаления символов подчеркивания и преобразования уцелевших символов подчеркивания, если таковые существуют.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:replayAutomatableEvent"><apiName>replayAutomatableEvent</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:resolveAutomationIDPart"><apiName>resolveAutomationIDPart</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>criteria</apiItemName><apiType value="Object"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:setContextMenu"><apiName>setContextMenu</apiName><shortdesc>
      Устанавливает контекстное меню элемента InteractiveObject для основного собственного меню.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/></apiParam></apiOperationDef><apiDesc>
      Устанавливает контекстное меню элемента InteractiveObject для основного собственного меню.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:unsetContextMenu"><apiName>unsetContextMenu</apiName><shortdesc>
      Обеспечивает сброс контекстного меню элемента InteractiveObject, установленного для основного собственного меню.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/></apiParam></apiOperationDef><apiDesc>
      Обеспечивает сброс контекстного меню элемента InteractiveObject, установленного для основного собственного меню.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:validateDisplayList"><apiName>validateDisplayList</apiName><shortdesc>
      </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:validateNow"><apiName>validateNow</apiName><shortdesc>
      Проверяет и обновляет свойства и макет этого объекта, а также перерисовывает его в случае необходимости.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Проверяет и обновляет свойства и макет этого объекта, а также перерисовывает его в случае необходимости.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:validateProperties"><apiName>validateProperties</apiName><shortdesc>
      </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:FlexNativeMenu:validateSize"><apiName>validateSize</apiName><shortdesc>
      </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recursive</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:FlexNativeMenu:automationDelegate:get"><apiName>automationDelegate</apiName><shortdesc>
      Объект-делегат, выполняющий обработку функций, связанных с автоматизацией.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Объект-делегат, выполняющий обработку функций, связанных с автоматизацией.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:automationEnabled:get"><apiName>automationEnabled</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:automationName:get"><apiName>automationName</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:automationOwner:get"><apiName>automationOwner</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.display:DisplayObjectContainer"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:automationParent:get"><apiName>automationParent</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.display:DisplayObjectContainer"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:automationTabularData:get"><apiName>automationTabularData</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:automationValue:get"><apiName>automationValue</apiName><shortdesc conref="mx.automation.IAutomationObject#automationValue">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="mx.automation.IAutomationObject#automationValue">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:automationVisible:get"><apiName>automationVisible</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Объект, обеспечивающий доступ к данным и управление ими в поставщике данных.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.controls.menuClasses:IMenuDataDescriptor"/></apiValueDef><apiDesc>
      Объект, обеспечивающий доступ к данным и управление ими в поставщике данных. Элемент управления FlexNativeMenu выполняет делегирование в дескриптор данных для получения информации о его данных. Затем эти данные используются для анализа и перемещения источника данных. Дескриптор данных, определенный для FlexNativeMenu, используется во всех нижестоящих меню и подменю.
     
      <p>При указании этого свойства в качестве атрибута в MXML необходимо использовать ссылку на дескриптор данных, а не на имя строки дескриптора. Для установки свойства применяйте следующий формат:</p>
     
     <pre>&lt;mx:FlexNativeMenu id="flexNativeMenu" dataDescriptor="{new MyCustomDataDescriptor()}"/></pre>
     
      <p>В качестве альтернативы, в MXML свойство может быть указано в качестве вложенного подтега, как представлено в примере:</p>
     
      <pre>&lt;mx:FlexNativeMenu>
      &lt;mx:dataDescriptor>
         &lt;myCustomDataDescriptor>
      &lt;/mx:dataDescriptor>
      ...</pre>
     
      <p>Значением по умолчанию является внутренний экземпляр класса DefaultDataDescriptor.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Иерархия объектов, используемых для определения структуры пунктов меню в NativeMenu.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"undefined"
     </apiDefaultValue></apiValueDef><apiDesc>
      Иерархия объектов, используемых для определения структуры пунктов меню в NativeMenu. Отдельные объекты данных, определяющие элементы меню, и элементы с нижестоящими элементами становятся меню и подменю.
     
      <p>Обработка исходного объекта данных элементом управления FlexNativeMenu осуществляется следующим образом:</p>
     
      <ul>
        <li>Строка, содержащая допустимый текст XML, преобразуется в объект XML.</li>
        <li>XMLNode преобразуется в объект XML.</li>
        <li>XMLList преобразуется в XMLListCollection.</li>
        <li>Любой объект, реализующий интерфейс ICollectionView, приводится к ICollectionView.</li>
        <li>Массив преобразуется в ArrayCollection.</li>
        <li>Объект другого типа включается в массив, причем объект становится единственной записью.</li>
      </ul>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:hasRoot:get"><apiName>hasRoot</apiName><shortdesc conref="mx.controls.Menu#hasRoot">
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.controls.Menu#hasRoot">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:initialized:get"><apiName>initialized</apiName><shortdesc conref="mx.core.UIComponent#initialized">
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.core.UIComponent#initialized">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:keyEquivalentField:get"><apiName>keyEquivalentField</apiName><shortdesc>
      Имя поля в поставщике данных, определяющее эквивалентную клавишу для каждого элемента меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"keyEquivalent"
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в поставщике данных, определяющее эквивалентную клавишу для каждого элемента меню. Набор значений определяется в классе Keyboard, в константах <codeph>KEYNAME_XXXX</codeph>. Например, обратитесь к списку значений управляющего символа, например, Home, Insert и т.д.
     
      <p>Установка свойства <codeph>keyEquivalentFunction</codeph> приведет к игнорированию данного свойства.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.ui.Keyboard.xml"><linktext>flash.ui.Keyboard</linktext></link></related-links></apiValue><apiValue id="mx.controls:FlexNativeMenu:keyEquivalentFunction:get"><apiName>keyEquivalentFunction</apiName><shortdesc>
      Функция, определяющая эквивалентные клавиши для каждого элемента меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>"undefined"
      </apiDefaultValue></apiValueDef><apiDesc>
      Функция, определяющая эквивалентные клавиши для каждого элемента меню. Если это свойство опускается, в программе Flex используется содержимое поля или атрибута, определенное при помощи свойства <codeph>keyEquivalentField</codeph>. При указании данного свойства игнорируются все значения свойства <codeph>keyEquivalentField</codeph>.
     
      <p>Свойство <codeph>keyEquivalentFunction</codeph> подходит для обработки форматирования, локализации и независимости платформы.</p>
     
      <p>Функция эквивалента клавиши должна принимать отдельный аргумент, являющийся элементом поставщика данных, и возвращать строку.</p>
     
      <pre><codeph>myKeyEquivalentFunction(item:Object):String</codeph></pre>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.ui.Keyboard.xml"><linktext>flash.ui.Keyboard</linktext></link></related-links></apiValue><apiValue id="mx.controls:FlexNativeMenu:keyEquivalentModifiersFunction:get"><apiName>keyEquivalentModifiersFunction</apiName><shortdesc>
      Функция, определяющая модификаторы эквивалентных клавиш для каждого пункта меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>"undefined"
     </apiDefaultValue></apiValueDef><apiDesc>
      Функция, определяющая модификаторы эквивалентных клавиш для каждого пункта меню. Если это свойство опускается, в программе Flex применяется собственная функция по умолчанию, позволяющая определить массив модификаторов путем поиска данных в поставщике данных со следующими (логическими) полями: <codeph>altKey</codeph>, <codeph>commandKey</codeph>, <codeph>controlKey</codeph> и <codeph>shiftKey</codeph>.
     
      <p>Свойство <codeph>keyEquivalentModifiersFunction</codeph> подходит для обработки форматирования, локализации и независимости платформы.</p>
     
      <p>Функция модификаторов эквивалентных клавиш должна принимать отдельный аргумент, являющийся элементом поставщика данных, и возвращать массив имен модифицирующих клавиш.</p>
     
      <pre><codeph>myKeyEquivalentModifiersFunction(item:Object):Array</codeph></pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:labelField:get"><apiName>labelField</apiName><shortdesc>
      Имя поля в поставщике данных, определяющего текст, который должен отображаться для каждого элемента меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
     </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в поставщике данных, определяющего текст, который должен отображаться для каждого элемента меню. Если поставщиком данных является массив строк, каждое строковое значение используется в качестве метки. Если поставщиком данных является объект XML E4X, необходимо явным образом установить это свойство. Например, если каждый элемент XML объекта XML E4X включает атрибут «метка», содержащий текст, который должен отображаться для каждого элемента меню, установите значение <codeph>@label</codeph> для свойства labelField.
     
      <p>Для указания символа, который должен использоваться в качестве мнемонического индекса, в метке необходимо добавить знак подчеркивания перед ним. Например, значение метки <codeph>C_ut</codeph> устанавливает мнемонический индекс 1. С этой целью используется только первый символ подчеркивания. Для отображения точного символа подчеркивания в метке этого можно избежать путем установки двойного подчеркивания. Например, установка значения метки <codeph>C__u_t</codeph> приведет к созданию пункта меню с меткой C_ut и мнемоническим индексом 3 (символ t). Если поле, определенное в свойстве <codeph>mnemonicIndexField</codeph>, существует и имеет значение, отличное от нуля, это значение имеет приоритет над любым значением мнемонического индекса, указанного с помощью знаков подчеркивания.</p>
     
      <p>Установка свойства <codeph>labelFunction</codeph> приводит к игнорированию этого свойства.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Функция, определяющая текст, который должен отображаться для каждого пункта меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>"undefined"
     </apiDefaultValue></apiValueDef><apiDesc>
      Функция, определяющая текст, который должен отображаться для каждого пункта меню. Функция метки должна обеспечивать поиск соответствующего поля или полей в поставщике данных и возвращение отображаемой строки.
     
      <p>Если это свойство опускается, в программе Flex применяется содержимое поля или атрибута, определенное с помощью свойства <codeph>labelField</codeph>. Установка данного свойства приводит к игнорированию любого значения свойства <codeph>labelField.</codeph></p>
     
      <p>Свойство <codeph>labelFunction</codeph> может быть полезным при обработке форматирования, локализации и автономности платформы.</p>
     
      <p>Функция метки должна принимать отдельный аргумент, являющийся элементом поставщика данных, и возвращать строку.</p>
     
      <pre><codeph>myLabelFunction(item:Object):String</codeph></pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:mnemonicIndexField:get"><apiName>mnemonicIndexField</apiName><shortdesc>
      Имя поля в поставщике данных, определяющее мнемонический индекс для каждого пункта меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"mnemonicIndex"
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в поставщике данных, определяющее мнемонический индекс для каждого пункта меню.
     
      <p>Если поле, определенное с помощью этого свойства, содержит положительное число, этот мнемонический индекс имеет приоритет над любым индексом, указанным с использованием символа подчеркивания.</p>
     
      <p>Установка свойства <codeph>mnemonicIndexFunction</codeph> приводит к игнорированию этого свойства.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FlexNativeMenu/labelField"><linktext>labelField</linktext></link></related-links></apiValue><apiValue id="mx.controls:FlexNativeMenu:mnemonicIndexFunction:get"><apiName>mnemonicIndexFunction</apiName><shortdesc>
      Функция, определяющая мнемонический индекс для каждого элемента меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>"undefined"
     </apiDefaultValue></apiValueDef><apiDesc>
      Функция, определяющая мнемонический индекс для каждого элемента меню.
     
      <p>Если это свойство опускается, в программе Flex используется содержимое поля или атрибута, указанного в свойстве <codeph>mnemonicIndexField</codeph>. Указание этого свойства приводит к игнорированию любого значения свойства <codeph>mnemonicIndexField</codeph>.</p>
     
      <p>Если это свойство определено и для элемента данных функция возвращает положительное число, возвращаемый мнемонический индекс имеет приоритет над любым индексом, определенным с помощью подчеркивания в метке.</p>
     
      <p>Свойство <codeph>mnemonicIndexFunction</codeph> подходит для обработки форматирования, локализации и независимости платформы.</p>
     
      <p>Функция мнемонического индекса должна принимать отдельный аргумент, являющийся элементом поставщика данных, и возвращать целое число.</p>
     
      <pre><codeph>myMnemonicIndexFunction(item:Object):int</codeph></pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:nativeMenu:get"><apiName>nativeMenu</apiName><shortdesc>
       Возвращает элемент flash.display.NativeMenu, управляемый этим объектом, или null, если такой элемент отсутствует.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:NativeMenu"/></apiValueDef><apiDesc>
       Возвращает элемент flash.display.NativeMenu, управляемый этим объектом, или null, если такой элемент отсутствует. Любые изменения, вносимые непосредственно в экземпляр NativeMenu, могут быть потеряны при внесении изменений в меню или основного поставщика данных.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:nestLevel:get"><apiName>nestLevel</apiName><shortdesc conref="mx.core.UIComponent#nestLevel">
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc conref="mx.core.UIComponent#nestLevel">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:numAutomationChildren:get"><apiName>numAutomationChildren</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:processedDescriptors:get"><apiName>processedDescriptors</apiName><shortdesc conref="mx.core.UIComponent#processedDescriptors">
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.core.UIComponent#processedDescriptors">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:showInAutomationHierarchy:get"><apiName>showInAutomationHierarchy</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FlexNativeMenu:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Логический флаг, указывающий, отобразить ли корневой узел поставщика данных.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Логический флаг, указывающий, отобразить ли корневой узел поставщика данных.
     
      <p>Если поставщик данных имеет корневой узел и свойство <codeph>showRoot</codeph> имеет значение <codeph>false</codeph>, элементы меню верхнего уровня, отображаемые при помощи элемента управления FlexNativeMenu, соответствуют непосредственным нижестоящим элементам корневого узла.</p>
     
      <p>Этот флаг не влияет на источник без корневого узла, например, на объекты списка или массива.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#FlexNativeMenu/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:FlexNativeMenu:updateCompletePendingFlag:get"><apiName>updateCompletePendingFlag</apiName><shortdesc>
      Флаг, определяющий, прошел ли объект все три фазы проверки макета (при условии, что все они требовались).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, определяющий, прошел ли объект все три фазы проверки макета (при условии, что все они требовались).
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:FileSystemHistoryButton"><apiName>FileSystemHistoryButton</apiName><shortdesc>
  Элемент управления FileSystemHistoryButton определяет отдельный элемент управления с двумя кнопками: основной кнопкой слева и дополнительной кнопкой справа.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:FileSystemHistoryButton&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:FileSystemHistoryButton
    <strong>Properties</strong>
    dataProvider="<i>undefined</i>"
 
    <strong>Events</strong>
    itemClick="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:PopUpButton</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления FileSystemHistoryButton определяет отдельный элемент управления с двумя кнопками: основной кнопкой слева и дополнительной кнопкой справа.
 
  <p>На основной кнопке может располагаться текстовая метка, значок или оба элемента. Если пользователь нажимает основную кнопку, элемент также передает событие <codeph>click</codeph>.</p>
 
  <p>Нажатие дополнительной (правой) кнопки раскрывает меню, которое можно заполнить с помощью свойства <codeph>dataProvider</codeph>. Когда пользователь выбирает элемент из раскрывающегося меню, элемент управления передает событие <codeph>itemClick</codeph>.</p>
 
  <p>Как правило, используется два FileSystemHistoryButtons с FileSystemList или FileSystemDataGrid для реализации элементов управления Back или Forward, которые позволяет пользователю перемещаться вперед или назад по истории навигации FileSystemList или FileSystemDataGrid. Для заполнения свойства <codeph>dataProvider</codeph> элемента управления FileSystemHistoryButton используйте привязку данных и установите ее свойство <codeph>dataProvider</codeph> на свойство <codeph>backHistory</codeph> или <codeph>forwardHistory</codeph> элемента управления FileSystemList или FileSystemDataGrid. Для включения или выключения этой функции необходимо выполнить привязку свойства <codeph>enabled</codeph> к свойству <codeph>canNavigateBack</codeph> или <codeph>canNavigateForward</codeph> элемента управления FileSystemList or FileSystemDataGrid. При использовании привязки данных для установки этих свойств Flex автоматически обновляет их, когда пользователь выполняет перемещение в рамках элемента управления FileSystemList или FileSystemDataGrid.</p>
 
  <p>При использовании кнопки перемещение не выполняется отдельно. Следует выполнить запись прослушивателей события, реагирующих на события <codeph>click</codeph> и <codeph>itemClick</codeph> с целью активации кнопки. Как правило, код вызывает метод <codeph>navigateBack()</codeph> или <codeph>navigateForward()</codeph> элемента управления FileSystemList или FileSystemDataGrid для перемещения элемента управления. Для события <codeph>click</codeph> передача аргумента для этих методов не требуется. Для события <codeph>itemClick</codeph> следует выполнить передачу <codeph>event.index</codeph>.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#FileSystemList"><linktext>mx.controls.FileSystemList</linktext></link><link href="mx.controls.xml#FileSystemDataGrid"><linktext>mx.controls.FileSystemDataGrid</linktext></link></related-links><adobeApiEvent id="mx.controls:FileSystemHistoryButton_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается, когда пользователь выбирает элемент из всплывающего меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь выбирает элемент из всплывающего меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:FileSystemHistoryButton:FileSystemHistoryButton"><apiName>FileSystemHistoryButton</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:FileSystemHistoryButton:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Поставщик данных для элемента управления FileSystemHistoryButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Поставщик данных для элемента управления FileSystemHistoryButton. Должен являться коллекцией объектов File, содержащей местоположения каталогов – как правило, cвойство <codeph>backHistory</codeph> или <codeph>forwardHistory</codeph> элемента управления FileSystemList or FileSystemDataGrid.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:FileSystemComboBox"><apiName>FileSystemComboBox</apiName><shortdesc>
  Элемент управления FileSystemComboBox определяет элемент управления ComboBox для перемещения вверх по цепочке предшествующих каталогов из указанного каталога в файловой системе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="editableUpSkin"/><Exclude kind="style" name="editableOverSkin"/><Exclude kind="style" name="editableDownSkin"/><Exclude kind="style" name="editableDisabledSkin"/><Exclude kind="property" name="editable"/><styles><style format="EmbeddedFile" inherit="no" name="directoryIcon" owner="mx.controls:FileSystemComboBox" playerVersion="AIR1.1" type="Class">
<description>
  Определяет значок, указывающий каталог. Значок по умолчанию расположен в файле Assets.swf. В MXML для установки значений этого свойства используются следующий синтаксис: <codeph>directoryIcon="@Embed(source='directoryIcon.jpg');"</codeph>.
 
  </description>
<default>TreeNodeIcon
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="computerIcon" owner="mx.controls:FileSystemComboBox" playerVersion="AIR1.1" type="Class">
<description>
  Определяет значок, указывающий корневые каталоги компьютера. Значение по умолчанию отсутствует. В MXML для установки значений этого свойства используются следующий синтаксис: <codeph>computerIcon="@Embed(source='computerIcon.jpg');"</codeph>.
 
  </description>
<default>null
  
  </default>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:FileSystemComboBox&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:FileSystemComboBox
    <strong>Properties</strong>
    directory="<i>null</i>"
    indent="8"
    showIcons="true"
 
    <strong>Styles</strong>
    computerIcon="<i>null</i>"
    directoryIcon="<i>TreeNodeIcon</i>"
 
    <strong>Events</strong>
    directoryChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ComboBox</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления FileSystemComboBox определяет элемент управления ComboBox для перемещения вверх по цепочке предшествующих каталогов из указанного каталога в файловой системе. Этот элемент управления часто используется в сочетании с элементами управления FileSystemList и FileSystemTree для изменения текущего каталога, отображаемого этими элементами управления.
 
  <p>В отличие от стандартного элемента управления ComboBox, для заполнения свойства <codeph>dataProvider</codeph> элемента управления FileSystemComboBox следует настроить свойство <codeph>directory</codeph>. Затем этот элемент управления автоматически устанавливает в качестве значений свойства <codeph>dataProvider</codeph> массив ArrayCollection объектов File, который включает все каталоги, предшествующие указанному каталогу, начиная с файла <codeph>COMPUTER</codeph> и заканчивая указанным каталогом.</p>
 
  <p>При выборе записи в раскрывающемся списке этот элемент управления передает событие <codeph>change</codeph>. После передачи этого события поставщик данных и, следовательно, раскрывающийся список, содержат каталоги, предшествующие выбранному каталогу.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.filesystem.File.xml"><linktext>flash.filesystem.File</linktext></link><link href="mx.controls.xml#FileSystemList"><linktext>mx.controls.FileSystemList</linktext></link><link href="mx.controls.xml#FileSystemTree"><linktext>mx.controls.FileSystemTree</linktext></link></related-links><adobeApiEvent id="mx.controls:FileSystemComboBox_mx.events.FileEvent.DIRECTORY_CHANGE_directoryChange"><apiName>directoryChange</apiName><shortdesc>
  Это событие передается при изменении каталога, отображаемого элементом управления, по любой причине.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FileEvent.DIRECTORY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FileEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при изменении каталога, отображаемого элементом управления, по любой причине.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:FileSystemComboBox:FileSystemComboBox"><apiName>FileSystemComboBox</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:FileSystemComboBox:COMPUTER"><apiName>COMPUTER</apiName><shortdesc>
      Константа, которая может использоваться в качестве значения для свойства directory, представляющего псевдо-каталог верхнего уровня под именем «Компьютер».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="flash.filesystem:File"/></apiValueDef><apiDesc>
      Константа, которая может использоваться в качестве значения для свойства <codeph>directory</codeph>, представляющего псевдо-каталог верхнего уровня под именем «Компьютер». Этот псевдо-каталог содержит корневые каталоги (например, C:\ и D:\ в Windows или / в Macintosh).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemComboBox:directory:get"><apiName>directory</apiName><shortdesc>
      Объект File представляет каталог, предшественники которого должны отображаться в этом элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.filesystem:File"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект File представляет каталог, предшественники которого должны отображаться в этом элементе управления. Элемент управления отображает каждый предшествующий каталог как отдельную запись в раскрывающемся списке.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemComboBox:indent:get"><apiName>indent</apiName><shortdesc>
      Число пикселей, определяющее отступ перед каждой записью в раскрывающемся списке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>8
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Число пикселей, определяющее отступ перед каждой записью в раскрывающемся списке.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemComboBox:showIcons:get"><apiName>showIcons</apiName><shortdesc>
      Флаг, определяющий необходимость отображения значков перед именами каталогов в раскрывающемся списке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, определяющий необходимость отображения значков перед именами каталогов в раскрывающемся списке.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:FileSystemEnumerationMode"><apiName>FileSystemEnumerationMode</apiName><shortdesc>
  Класс FileSystemEnumerationMode определяет постоянные значения для свойства enumerationMode классов FileSystemList, FileSystemDataGrid и FileSystemTree.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс FileSystemEnumerationMode определяет постоянные значения для свойства <codeph>enumerationMode</codeph> классов FileSystemList, FileSystemDataGrid и FileSystemTree.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#FileSystemList/enumerationMode"><linktext>mx.controls.FileSystemList.enumerationMode</linktext></link><link href="mx.controls.xml#FileSystemDataGrid/enumerationMode"><linktext>mx.controls.FileSystemDataGrid.enumerationMode</linktext></link><link href="mx.controls.xml#FileSystemTree/enumerationMode"><linktext>mx.controls.FileSystemTree.enumerationMode</linktext></link></related-links><apiValue id="mx.controls:FileSystemEnumerationMode:DIRECTORIES_FIRST"><apiName>DIRECTORIES_FIRST</apiName><shortdesc>
      Определяет необходимость отображения каталогов, затем файлов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>directoriesFirst</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Определяет необходимость отображения каталогов, затем файлов.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemEnumerationMode:DIRECTORIES_ONLY"><apiName>DIRECTORIES_ONLY</apiName><shortdesc>
      Определяет необходимость отображения каталогов, но не файлов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>directoriesOnly</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Определяет необходимость отображения каталогов, но не файлов.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemEnumerationMode:FILES_AND_DIRECTORIES"><apiName>FILES_AND_DIRECTORIES</apiName><shortdesc>
      Определяет необходимость отображения и файлов, и каталогов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>filesAndDirectories</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Определяет необходимость отображения и файлов, и каталогов.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemEnumerationMode:FILES_FIRST"><apiName>FILES_FIRST</apiName><shortdesc>
      Определяет необходимость отображения сначала файлов, а затем каталогов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>filesFirst</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Определяет необходимость отображения сначала файлов, а затем каталогов.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:FileSystemEnumerationMode:FILES_ONLY"><apiName>FILES_ONLY</apiName><shortdesc>
      Определяет необходимость отображения файлов, но не каталогов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>filesOnly</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Определяет необходимость отображения файлов, но не каталогов.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>