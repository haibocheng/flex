<?xml version="1.0"?>
<apiPackage id="spark.skins.spark"><apiName>spark.skins.spark</apiName><apiDetail/><apiClassifier id="spark.skins.spark:SparkChromeWindowedApplicationSkin"><apiName>SparkChromeWindowedApplicationSkin</apiName><shortdesc>Класс тем оформления для компонента Spark WindowedApplication.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Класс тем оформления для компонента Spark WindowedApplication. Этот класс определяет хром Flex, который используется для границ, строки состояния, кнопки захвата, строки заголовка и кнопок строки заголовка.
      
      <p>Для определения внешнего вида контейнеров WindowedApplication и Window можно использовать либо системный хром (класс FlexChromSkin), либо класс WindowedApplicationSkin. Для использования класса FlexChromSkin с контейнером WindowedApplication следует установить для свойства <codeph>systemChrome</codeph> значение none в файле .xml приложения и задать в качестве стиля <codeph>skinClass</codeph> spark.skins.spark.FlexChromSkin. Для использования класса FlexChromSkin с контейнером Window следует установить для свойства <codeph>Window.systemChrome</codeph> значение none и задать в качестве стиля <codeph>skinClass</codeph> spark.skins.spark.FlexChromSkin.</p>
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#WindowedApplication"><linktext>spark.components.WindowedApplication</linktext></link></related-links><apiConstructor id="spark.skins.spark:SparkChromeWindowedApplicationSkin:SparkChromeWindowedApplicationSkin"><apiName>SparkChromeWindowedApplicationSkin</apiName><shortdesc>Конструктор.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Конструктор.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>Определяет цвет фона темы оформления.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>Определяет цвет фона темы оформления.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:borderBgFill"><apiName>borderBgFill</apiName><shortdesc>Определяет цвет фона границы.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc>Определяет цвет фона границы.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc>Определяет контейнер группы, в котором нижестоящие элементы содержимого помещаются в вышестоящие или размещаются в них.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc>Определяет контейнер группы, в котором нижестоящие элементы содержимого помещаются в вышестоящие или размещаются в них.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:gripper"><apiName>gripper</apiName><shortdesc>Определяет элемент управления Button для кнопки захвата.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Button"/></apiValueDef><apiDesc>Определяет элемент управления Button для кнопки захвата. По умолчанию для определения темы оформления кнопки захвата используется класс windowChrome.GripperSkin.
            
        </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.windowChrome.xml#GripperSkin"><linktext>spark.skins.spark.windowChrome.GripperSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc>
        Компонент хоста этой темы оформления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
        Компонент хоста этой темы оформления.
       
       </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:statusBar"><apiName>statusBar</apiName><shortdesc>Определяет контейнер группы для строки состояния.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc>Определяет контейнер группы для строки состояния.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:statusText"><apiName>statusText</apiName><shortdesc>Определяет элемент управления Label для текста в строке состояния.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Label"/></apiValueDef><apiDesc>Определяет элемент управления Label для текста в строке состояния.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:titleBar"><apiName>titleBar</apiName><shortdesc>Определяет контейнер TitleBar для строки заголовка, кнопок и значка.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.windowClasses:TitleBar</apiValueClassifier></apiValueDef><apiDesc>Определяет контейнер TitleBar для строки заголовка, кнопок и значка.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:titleBarBackgroundRect"><apiName>titleBarBackgroundRect</apiName><shortdesc>Определяет цвет фона строки заголовка.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>Определяет цвет фона строки заголовка.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:WindowedApplicationSkin"><apiName>WindowedApplicationSkin</apiName><shortdesc>Класс тем оформления для контейнеров Spark WindowedApplication и Window.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Класс тем оформления для контейнеров Spark WindowedApplication и Window. Этот класс определяет только рамку и строку состояния, но не оказывает влияния на кнопку захвата, строку заголовка или кнопки строки заголовка.
      
      <p>Для определения внешнего вида контейнеров WindowedApplication и Window можно использовать либо системный хром (класс FlexChromSkin), либо класс WindowedApplicationSkin. Для использования класса WindowedApplicationSkin с контейнером WindowedApplication следует установить для <codeph>systemChrome</codeph> значение none в файле .xml приложения, а также установить spark.skins.spark.WindowedApplicationSkin в качестве стиля <codeph>skinClass</codeph>. Для использования класса WindowedApplicationSkin с контейнером Window следует установить для свойства <codeph>Window.systemChrome</codeph> значение none и задать spark.skins.spark.WindowedApplicationSkin в качестве стиля <codeph>skinClass</codeph>.</p>
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#WindowedApplication"><linktext>spark.components.WindowedApplication</linktext></link></related-links><apiConstructor id="spark.skins.spark:WindowedApplicationSkin:WindowedApplicationSkin"><apiName>WindowedApplicationSkin</apiName><shortdesc>Конструктор.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Конструктор.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:WindowedApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>Определяет цвет фона темы оформления.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>Определяет цвет фона темы оформления.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc>Определяет контейнер группы, в котором нижестоящие элементы содержимого помещаются в вышестоящие или размещаются в них.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc>Определяет контейнер группы, в котором нижестоящие элементы содержимого помещаются в вышестоящие или размещаются в них.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc>
        Компонент хоста этой темы оформления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
        Компонент хоста этой темы оформления.
       
       </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:statusBar"><apiName>statusBar</apiName><shortdesc>Определяет контейнер группы для строки состояния.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc>Определяет контейнер группы для строки состояния.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:statusText"><apiName>statusText</apiName><shortdesc>Определяет элемент управления Label для текста в строке состояния.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Label"/></apiValueDef><apiDesc>Определяет элемент управления Label для текста в строке состояния.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>