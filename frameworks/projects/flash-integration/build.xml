<?xml version="1.0"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2007 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<project name="flash-integration" default="main" basedir=".">

	<property name="FLEX_HOME" location="${basedir}/../../.."/>

	<property file="${FLEX_HOME}/build.properties"/>

	<target name="main" depends="clean,compile" description="Clean build of flash-integration.swc"/>

	<target name="clean">
		<delete failonerror="false">
			<fileset file="${basedir}/bundles.properties"/>
            <fileset dir="${FLEX_HOME}/frameworks/libs">
				<include name="flash-integration.swc"/>
				<include name="flash-integration.swc.incr"/>
			</fileset>
			<fileset dir="${basedir}/libs">
                <include name="flash-integration.swc"/>
				<include name="flash-integration.swc.incr"/>
                <!-- TODO (rfrishbe): can remove the latter 2 files at some point in future -->
                <include name="FlexComponentBase.swc"/>
				<include name="FlexComponentBase.swc.incr"/>
			</fileset>
		</delete>
	</target>

	<target name="compile" description="Compiles flash-integration.swc">
		<echo message="Compiling frameworks/projects/flash-integration/libs/flash-integration.swc"/>
		<!-- Load the <compc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>
		<!--
			Link in the classes (and their dependencies) for the MXML tags
			listed in manifest.xml.
			Compile against framework source, and link it into flash-integration.swc
			(only a few interfaces will be linked in).
			Don't put any resources into the SWC.
			Write a bundle list of referenced resource bundles
			into the file bundles.properties in this directory.
			(This should be an empty list.)
		-->
		<compc fork="true"
			   output="${FLEX_HOME}/frameworks/libs/flash-integration.swc"
			   resource-bundle-list="${basedir}/bundles.properties">
			<jvmarg line="${compc.jvm.args}"/>
            <!-- doesn't matter what we put in here as long as it links in the classes.
                Flash Authoring ignores this and the namespace it's mapped too...
                it just needs to be linked through a manifest file -->
            <namespace uri="http://www.adobe.com/someNonSensicalURI" manifest="${basedir}/manifest.xml"/>
			<include-namespaces uri="http://www.adobe.com/someNonSensicalURI"/>
			<source-path path-element="${basedir}/src"/>
			<source-path path-element="${FLEX_HOME}/frameworks/projects/framework/src"/>
			<library-path/>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs">
                <include name="player/${global.playerglobal.version}/playerglobal.swc"/>
				<include name="textLayout.swc"/>
			</external-library-path>
			<locale/>
			<accessible>true</accessible>
			<compute-digest>false</compute-digest>
		</compc>
        
        <!-- need to copy the file produced over so that the MXI 
             can refer to the flash-integration.swc -->
        <copy todir="${basedir}/libs">
			<fileset dir="${FLEX_HOME}/frameworks/libs">
				<include name="flash-integration.swc"/>
			</fileset>
		</copy>
	</target>


	<target name="doc" depends="clean-temp-docs" description="updates flash-integration.swc with asdoc xml">
		<!-- Load the <asdoc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>

	    <condition property="asdoc.jvm.args" value="-Xmx384m">
	        <os family="windows"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="mac"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="unix"/>
	    </condition>

		<!-- Call asdoc to generate dita xml files -->
		<asdoc output="${FLEX_HOME}/tempDoc" lenient="true" failonerror="true" keep-xml="true" skip-xsl="true" fork="true">
		    <compiler.source-path path-element="${basedir}/src"/>
 			<!-- doesn't matter what we put in here as long as it links in the classes.
					Flash Authoring ignores this and the namespace it's mapped too...
				it just needs to be linked through a manifest file -->
			<namespace uri="http://www.adobe.com/someNonSensicalURI" manifest="${basedir}/manifest.xml"/>
			<doc-namespaces uri="http://www.adobe.com/someNonSensicalURI"/>
		    <external-library-path dir="${FLEX_HOME}/frameworks/libs/player/10">
		    	<include name="playerglobal.swc" />
		    </external-library-path>
		    <external-library-path dir="${FLEX_HOME}/frameworks/libs">
		    	<include name="framework.swc" />
		    	<include name="textLayout.swc" />
		    </external-library-path>

		    <library-path/>

		    <jvmarg line="${asdoc.jvm.args}"/>
		</asdoc>

		<!-- updates FlexComponentBase.swc with asdoc xml -->
		<zip destfile="${basedir}/libs/flash-integration.swc" update="true">
		    <zipfileset dir="${FLEX_HOME}/tempDoc/tempdita" prefix="docs">
			    <include name="*.*"/>
				<exclude name="ASDoc_Config.xml"/>
				<exclude name="overviews.xml"/>
		    </zipfileset>
		</zip>
	</target>

	<target name="clean-temp-docs">
		<delete dir="${FLEX_HOME}/tempDoc" failonerror="false" includeEmptyDirs="true"/>
	</target>

</project>
