<?xml version="1.0" encoding="utf-8"?>
<!-- Simple example to demonstrate NumberFormatter. -->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/halo">

    <fx:Script>
        <![CDATA[
            import mx.events.ValidationResultEvent;

            private var vResult:ValidationResultEvent;

            // Event handler to validate and format input.
            private function Format():void {
                vResult = numVal.validate();
                if (vResult.type == ValidationResultEvent.VALID) {
                    formattedNumber.text = numberFormatter.format(inputVal.text);
                } else {
                    formattedNumber.text = "";
                }
            }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <mx:NumberFormatter id="numberFormatter" precision="4" 
                useThousandsSeparator="true" useNegativeSign="true"/>

        <mx:NumberValidator id="numVal" source="{inputVal}" property="text" 
                allowNegative="true" domain="real"/>
    </fx:Declarations>

    <s:Panel title="NumberFormatter Example"
            width="75%" height="75%"
            horizontalCenter="0" verticalCenter="0">
        <mx:Form left="10" right="10" top="10" bottom="10">
            <mx:FormItem label="Enter number:">
                <s:TextInput id="inputVal" text="" width="50%"/>
            </mx:FormItem>
            <mx:FormItem label="Formatted number (precision=4): ">
                <s:TextInput id="formattedNumber" editable="false" width="50%"/>
            </mx:FormItem>
            <mx:FormItem>
                <s:Button label="Validate and Format" click="Format();"/>
            </mx:FormItem>
        </mx:Form>
    </s:Panel>

</s:Application>
