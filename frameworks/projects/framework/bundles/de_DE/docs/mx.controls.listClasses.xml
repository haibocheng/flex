<?xml version="1.0"?>
<apiPackage id="mx.controls.listClasses"><apiName>mx.controls.listClasses</apiName><apiDetail/><apiClassifier id="mx.controls.listClasses:IDropInListItemRenderer"><apiName>IDropInListItemRenderer</apiName><shortdesc>
  Die Schnittstelle für Renderer, in denen Elemente abgelegt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die Schnittstelle für Renderer, in denen Elemente abgelegt werden können. In den meisten IListItemRenderer-Objekten können keine Elemente abgelegt werden. Diese Objekte erwarten, dass ein bestimmtes Feld des Datenprovider-Elements verwendet wird. Sie können beispielsweise die „lastName“-Eigenschaft des Elements einer <codeph>text</codeph>-Eigenschaft eines Labels zuweisen. Dies lässt sich mit Datenbindungsfunktionen leicht programmieren, hat aber die negative Folge, dass der Renderer nicht in einer anderen Spalte einer DataGrid- oder List-Klasse mit anderen Feldern verwendet werden kann. Mit der IDropInListItemRenderer-Schnittstelle kann ein anderer Renderer wiederverwendet werden. Die Listenklassen übergeben mehr Informationen an den Renderer, damit er ermitteln kann, welches Feld zur Laufzeit verwendet werden soll.
 
  <p>Komponenten, die als Renderer oder Editoren verwendet werden sollen, in denen Elemente abgelegt werden können, müssen die IDropInListItemRenderer-Schnittstelle implementieren. Viele Flex-Komponenten implementieren diese Schnittstelle und können daher in einer Spalte oder Liste als Renderer oder Editoren verwendet werden, in denen Elemente abgelegt werden können.</p>
 
  <p>Renderer oder Editoren, in denen Elemente abgelegt werden können, müssen auch die IDataRenderer-Schnittstelle implementieren, um die <codeph>data</codeph>-Eigenschaft zu definieren.</p> 
 
  <p>Wenn eine Komponente als Renderer oder Editor verwendet wird, in dem Elemente abgelegt werden können, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den geeigneten Daten aus dem List-Steuerelement. Die Komponente kann die <codeph>listData</codeph>-Eigenschaft verwenden, um die <codeph>data</codeph>-Eigenschaft des Renderers oder Editors, in dem Elemente abgelegt werden können, zu initialisieren.</p>
 
  <p>Die <codeph>listData</codeph>-Eigenschaft ist vom Typ BaseListData, wobei die BaseListData-Klasse vier Unterklassen hat: DataGridListData, ListData, TreeListData und MenuListData. Welchen Datentyp der Wert der <codeph>listData</codeph>-Eigenschaft letztlich hat, hängt von dem Steuerelement ab, das den Renderer oder Editor, in dem Elemente abgelegt werden können, verwendet. Bei einem DataGrid-Steuerelement hat der Wert den Datentyp DataGridListData, bei einem List-Steuerelement den Datentyp ListData, bei einem Tree-Steuerelement den Datentyp TreeListData und bei einem Menu-Steuerelement den Datentyp MenuListData.</p>
 
  <p>Das folgende Beispiel zeigt die Set-Methode für die <codeph>data</codeph>-Eigenschaft beim NumericStepper-Steuerelement, das die <codeph>value</codeph>-Eigenschaft des NumericStepper-Steuerelements basierend auf dem Wert der <codeph>listData</codeph>-Eigenschaft initialisiert:</p>
 
  <pre>
    public function set data(value:Object):void
    {
      _data = value;
    
      this.value = _listData ? parseFloat(_listData.label) : Number(_data);
    
      dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));
    }
  </pre>
 
  <p>Im obigen Beispiel ignoriert das NumericStepper-Steuerelement die <codeph>data</codeph>-Eigenschaft beim Einstellen der <codeph>value</codeph>-Eigenschaft des NumericStepper-Steuerelements und verwendet stattdessen die <codeph>listData</codeph>-Eigenschaft.</p>
 
  <p>Um die IDropInListItemRenderer-Schnittstelle zu implementieren, definieren Sie eine Set- und Get-Methode zur Implementierung der <codeph>listData</codeph>-Eigenschaft. Die Set-Methode schreibt normalerweise den Wert der <codeph>listData</codeph>-Eigenschaft in eine interne Variable. Die Listenklasse weist diese Eigenschaft immer zu und legt dann das Datenprovider-Element in der <codeph>data</codeph>-Eigenschaft fest.</p>
 
  <p>Beachten Sie, dass die Set-Methode für die <codeph>listData</codeph>-Eigenschaft kein Ereignis auslöst. Dies ist deshalb der Fall, weil die Listenklassen immer erst <codeph>listData</codeph> und dann die <codeph>data</codeph>-Eigenschaft festlegen. Das Festlegen der <codeph>data</codeph>-Eigenschaft löst auch das <codeph>dataChange</codeph>-Ereignis aus. Sie legen <codeph>listData</codeph> nie für sich selbst fest, weshalb diese Eigenschaft auch kein eigenes Ereignis auslösen muss. </p>
 
  <p>Die <codeph>data</codeph>-Set-Methode kann die <codeph>invalidateProperties()</codeph>-Methode aufrufen, wenn sie etwas auslöst, das eine Selbstaktualisierung des Steuerelements erforderlich macht. Der Entwickler der Komponente muss nun dafür sorgen, dass eine <codeph>commitProperties()</codeph>-Methode programmiert wird, um zu ermitteln, ob <codeph>listData</codeph> verändert wurde, und die entsprechenden Folgeschritte auszulösen. </p>
 
  <p>Die Get-Methode gibt den aktuellen Wert der internen Variablen zurück, wie dem folgenden Beispiel entnommen werden kann:</p>
  
  <pre>
    // Internal variable for the property value.
    private var _listData:BaseListData;
    
    // Make the listData property bindable.
    [Bindable("dataChange")]
    
    // Define the getter method.
    public function get listData():BaseListData
    {
      return _listData;
    }
    
    // Define the setter method,
    public function set listData(value:BaseListData):void
    {
      _listData = value;
    }
  </pre>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#BaseListData"><linktext>mx.controls.listClasses.BaseListData</linktext></link><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links><apiValue id="mx.controls.listClasses:IDropInListItemRenderer:mx.controls.listClasses:IDropInListItemRenderer:listData:get"><apiName>listData</apiName><shortdesc>
      Implementiert die listData-Eigenschaft unter Verwendung von Get- und Set-Methoden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      Implementiert die <codeph>listData</codeph>-Eigenschaft unter Verwendung von Get- und Set-Methoden. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:BaseListData"><apiName>BaseListData</apiName><shortdesc>
  Die BaseListData-Klasse definiert den Datentyp der listData-Eigenschaft, die von Renderern oder Editoren, in denen Elemente abgelegt werden können, implementiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die BaseListData-Klasse definiert den Datentyp der <codeph>listData</codeph>-Eigenschaft, die von Renderern oder Editoren, in denen Elemente abgelegt werden können, implementiert wird. Alle Renderer oder Editoren, in denen Elemente abgelegt werden können, müssen die IDropInListItemRenderer-Schnittstelle, mit der die <codeph>listData</codeph>-Eigenschaft definiert wird, implementieren.
 
  <p>Die <codeph>listData</codeph>-Eigenschaft ist vom Typ BaseListData, wobei die BaseListData-Klasse drei Unterklassen hat: DataGridListData, ListData und TreeListData. Welchen Datentyp der Wert der <codeph>listData</codeph>-Eigenschaft letztlich hat, hängt von dem Steuerelement ab, das den Renderer oder Editor, in dem Elemente abgelegt werden können, verwendet. Bei einem DataGrid-Steuerelement hat der Wert den Typ DataGridListData, bei einem List-Steuerelement den Typ ListData und bei einem Tree-Steuerelement den Typ TreeListData.</p>
 
  <p>Wenn die Klasse als Renderer oder Editor verwendet wird, in dem Elemente abgelegt werden können, legt Flex die <codeph>listData</codeph>-Eigenschaft auf eine von BaseListData abgeleitete Klasse fest, die die berechneten Informationen über das Element in dem Datenprovider mit den Daten für das Element enthält.</p>
 
  <p>Obwohl die Eigenschaften dieser Klasse änderbar sind, sollten Sie sie unverändert beibehalten. Sie werden durch die List-Klasse initialisiert und von einem Renderer oder Editor für Elemente gelesen. Eine Veränderung dieser Werte kann zu unerwarteten Ergebnissen führen.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:BaseListData:BaseListData"><apiName>BaseListData</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>Die Textdarstellung der Elementdaten.
     
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Ein eindeutiger Bezeichner.
     
      </apiDesc></apiParam><apiParam><apiItemName>owner</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiDesc>Ein Verweis auf das Listensteuerelement.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Indexposition der Zeile in den aktuell sichtbaren Zeilen des Steuerelements.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Indexposition der Spalte in den aktuell sichtbaren Spalten des Steuerelements.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:BaseListData:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      Die Indexposition der Spalte im List-basierten Steuerelement relativ zu den aktuell sichtbaren Spalten des Steuerelements, wobei die erste Spalte die Indexposition 1 hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition der Spalte im List-basierten Steuerelement relativ zu den aktuell sichtbaren Spalten des Steuerelements, wobei die erste Spalte die Indexposition 1 hat. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:label"><apiName>label</apiName><shortdesc>
      Die Textdarstellung der Elementdaten, basierend auf der itemToLabel()-Methode der Listenklasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die Textdarstellung der Elementdaten, basierend auf der <codeph>itemToLabel()</codeph>-Methode der List-Klasse.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:owner"><apiName>owner</apiName><shortdesc>
      Ein Verweis auf das Listenobjekt, das Eigentümer dieses Elements ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
      Ein Verweis auf das Listenobjekt, das Eigentümer dieses Elements ist. Dies muss eine aus ListBase abgeleitete Klasse sein. Diese Eigenschaft ist als IUIComponent-Typ festgelegt, damit ablegbare Elemente wie Label und TextInput keine Abhängigkeiten zu List und allen ihren Abhängigkeiten haben müssen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Die Indexposition der Zeile des DataGrid-, List- oder Tree-Steuerelements in Bezug auf die aktuell sichtbaren Zeilen des Steuerelements, wobei die erste Zeile die Indexposition 1 hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition der Zeile des DataGrid-, List- oder Tree-Steuerelements in Bezug auf die aktuell sichtbaren Zeilen des Steuerelements, wobei die erste Zeile die Indexposition 1 hat. Beispiel: Sie können auf ein Element im Steuerelement klicken und <codeph>rowIndex</codeph> wird auf 3 eingestellt. Danach rollen Sie das Steuerelement ab, um die Position der Zeile in den sichtbaren Zeilen des Steuerelements zu ändern, und klicken auf dieselbe Zeile wie vorher. Der <codeph>rowIndex</codeph> enthält jetzt einen anderen Wert, der der neuen Indexposition der Zeile in den aktuelle sichtbaren Zeilen entspricht.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:uid:get"><apiName>uid</apiName><shortdesc>
      Der eindeutige Bezeichner für dieses Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Der eindeutige Bezeichner für dieses Element.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:TileBase"><apiName>TileBase</apiName><shortdesc>
  Die TileBase-Klasse ist die Basisklasse für Steuerelemente, die Datenelemente in einer Sequenz von Zeilen und Spalten anzeigen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:ListBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die TileBase-Klasse ist die Basisklasse für Steuerelemente, die Datenelemente in einer Sequenz von Zeilen und Spalten anzeigen. Von TileBase abgeleitete Klassen ignorieren die Eigenschaften <codeph>variableRowHeight</codeph> und <codeph>wordWrap</codeph>, die von ihrer übergeordneten Klasse geerbt werden. Alle Element in einer TileList haben identische Höhen und Breiten.
 
  <p>Diese Klasse wird nicht direkt in Anwendungen verwendet.</p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.controls.listClasses:TileBase:TileBase"><apiName>TileBase</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:TileBase:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      Wird von der updateDisplayList()-Methode aufgerufen, um die Größe und Position von listContent anzupassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Die Breite von listContent vor der Anwendung einer externen Skalierung.
      
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Die Höhe von listContent vor der Anwendung einer externen Skalierung.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird von der <codeph>updateDisplayList()</codeph>-Methode aufgerufen, um die Größe und Position von listContent anzupassen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:createItemRenderer"><apiName>createItemRenderer</apiName><shortdesc>
      Ruft den geeigneten Renderer ab und verwendet den Standardrenderer, wenn keiner festgelegt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Der Elementrenderer.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die Datenstruktur des Renderers.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft den geeigneten Renderer ab und verwendet den Standardrenderer, wenn keiner festgelegt ist.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:drawTileBackground"><apiName>drawTileBackground</apiName><shortdesc>
      Zeichnet den Hintergrund für ein einzelnes Musterelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Das Hintergrund-Sprite.
     
      
      </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Das Sprite, das die einzelnen Musterelement-Hintergründe enthält.
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Zeile, die das Musterelement enthält.
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Spalte, die das Musterelement enthält.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die Breite des Hintergrunds.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die Höhe des Hintergrunds.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die Füllfarbe des Hintergrunds.
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer für das Musterelement.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Hintergrund für ein einzelnes Musterelement. Übernimmt ein Sprite-Objekt, wendet die Dimensionen und die Farbe des Hintergrunds an und gibt das Sprite mit den angewendeten Werten zurück.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:drawTileBackgrounds"><apiName>drawTileBackgrounds</apiName><shortdesc>
      Zeichnet eventuell vorhandene Hintergründe hinter allen Musterelementen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeichnet eventuell vorhandene Hintergründe hinter allen Musterelementen. Diese Implementierung erstellt ein Sprite namens „tileBGs“, wenn es noch nicht existiert, fügt es hinten an z-order in <codeph>listContent</codeph> an und ruft <codeph>drawTileBackground()</codeph> für jedes sichtbare Musterelement auf.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Erstellt eine neue ListData-Instanz und füllt die Felder auf Basis des Eingabedatenproviderelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein neu konstruiertes ListData-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das für das Füllen von ListData verwendete Datenproviderelement.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID des Elements.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements im Datenprovider.
      </apiDesc></apiParam><apiParam><apiItemName>columnNum</apiItemName><apiType value="int"/><apiDesc>Der columnIndex, der mit diesem Element verknüpft ist. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine neue ListData-Instanz und füllt die Felder auf Basis des Eingabedatenproviderelements. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:scrollHorizontally"><apiName>scrollHorizontally</apiName><shortdesc>
      
      Passt die Renderer an die Änderungen in der Bildlaufposition an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Die neue Bildlaufposition.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Die Änderung der Position. Dieser Wert ist immer eine positive Zahl.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn die Bildlaufposition kleiner wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Passt die Renderer an die Änderungen in der Bildlaufposition an.
     
      <p>Die Listenklassen versuchen, den Bildlauf zu optimieren, wenn die Bildlaufposition um einen Wert verändert wird, der niedriger ist als die Anzahl sichtbarer Zeilen. In dieser Situation bleiben einige Zeilen unverändert und müssen nur bewegt werden, andere Zeilen werden entfernt und neue Zeilen werden hinzugefügt. Wenn die Bildlaufposition zu stark verändert wird, werden alle alten Zeilen entfernt und neue Zeilen hinzugefügt, indem die <codeph>makeRowsAndColumns()</codeph>-Methode für den gesamten sichtbaren Bereich aufgerufen wird.</p>
     
      <p>In ListBase nicht implementiert, weil die Standardliste nur eine Spalte hat und daher keinen horizontalen Bildlauf benötigt.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:TileBase:protected:measuringObjects"><apiName>measuringObjects</apiName><shortdesc>
      Cache zum Messen von Objekten nach Factory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Cache zum Messen von Objekten nach Factory.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBase:direction:get"><apiName>direction</apiName><shortdesc>
      Die Richtung, in die dieses Steuerelement seine untergeordneten Objekte auslegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Richtung, in die dieses Steuerelement seine untergeordneten Objekte auslegt. Mögliche Werte sind <codeph>TileBaseDirection.HORIZONTAL</codeph> und <codeph>TileBaseDirection.VERTICAL</codeph>. Der Standardwert ist <codeph>TileBaseDirection.HORIZONTAL</codeph>.
     
      <p>Wenn der Wert <codeph>TileBaseDirection.HORIZONTAL</codeph> ist, werden die Musterelemente entlang der ersten Zeile angeordnet, bis die Anzahl der sichtbaren Spalten oder maxColumns erreicht wird. Danach wird eine neue Zeile gestartet. Wenn mehrere Zeilen erstellt als gleichzeitig angezeigt werden können, zeigt das Steuerelement eine vertikale Bildlaufleiste. Das Gegenteil gilt, wenn der Wert <codeph>TileBaseDirection.VERTICAL</codeph> ist.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBase:maxColumns:get"><apiName>maxColumns</apiName><shortdesc>
      Die maximale Anzahl von Spalten, die ein Steuerelement haben kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Die maximale Anzahl von Spalten, die ein Steuerelement haben kann. Wenn 0, dann ist die Anzahl der Spalten nicht begrenzt. Der Wert wird ignoriert, wenn die Richtung <codeph>TileBaseDirection.VERTICAL</codeph> ist, weil das Steuerelement so viele Spalten hat wie es benötigt, um alle Daten anzuzeigen.
     
      <p>Der Standardwert ist 0 (keine Begrenzung).</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBase:maxRows:get"><apiName>maxRows</apiName><shortdesc>
      Die maximale Anzahl von Zeilen, die ein Steuerelement haben kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Die maximale Anzahl von Zeilen, die ein Steuerelement haben kann. Wenn 0, ist die Anzahl der Zeilen nicht begrenzt. Der Wert wird ignoriert, wenn die Richtung <codeph>TileBaseDirection.HORIZONTAL</codeph> ist, weil das Steuerelement so viele Zeilen hat wie es benötigt, um alle Daten anzuzeigen.
     
      <p>Der Standardwert ist 0 (keine Begrenzung).</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListRowInfo"><apiName>ListRowInfo</apiName><shortdesc>
  Wird von listenbasierten Klassen verwendet, um Informationen über ihre IListItemRenderer zu speichern .</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Wird von listenbasierten Klassen verwendet, um Informationen über ihre IListItemRenderer zu speichern .
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/rowInfo"><linktext>mx.controls.listClasses.ListBase.rowInfo</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListRowInfo:ListRowInfo"><apiName>ListRowInfo</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Der y-Positionswert für die Zeile.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die Höhe der Zeile einschließlich Rändern.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Der eindeutige Bezeichner des Elements im Datenprovider
	 
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Das Element im Datenprovider.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListRowInfo:data"><apiName>data</apiName><shortdesc>
	  Das Element im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Das Element im Datenprovider. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:height"><apiName>height</apiName><shortdesc>
	  Die Höhe der Zeile einschließlich Rändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Die Höhe der Zeile einschließlich Rändern.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:itemOldY"><apiName>itemOldY</apiName><shortdesc>
	  Der letzte Y-Wert für den Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der letzte Y-Wert für den Renderer. Verwendet in den Öffnen/Schließen-Effekten des Tree-Objekts.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:oldY"><apiName>oldY</apiName><shortdesc>
	  Der letzte Y-Wert für die Zeile.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der letzte Y-Wert für die Zeile. Verwendet in den Öffnen/Schließen-Effekten des Tree-Objekts.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:uid"><apiName>uid</apiName><shortdesc>
	  Der eindeutige Bezeichner des Elements im Datenprovider
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Der eindeutige Bezeichner des Elements im Datenprovider
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:y"><apiName>y</apiName><shortdesc>
	  Der y-Positionswert für die Zeile.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Der y-Positionswert für die Zeile.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListData"><apiName>ListData</apiName><shortdesc>
  Die ListData-Klasse definiert den Datentyp der listData-Eigenschaft, die über Renderer oder Editoren, in denen Elemente abgelegt werden können, für das List-Steuerelement implementiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:BaseListData</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ListData-Klasse definiert den Datentyp der <codeph>listData</codeph>-Eigenschaft, die über Renderer oder Editoren, in denen Elemente abgelegt werden können, für das List-Steuerelement implementiert wird. Alle Renderer oder Editoren, in denen Elemente abgelegt werden können, müssen die IDropInListItemRenderer-Schnittstelle, mit der die <codeph>listData</codeph>-Eigenschaft definiert wird, implementieren.
 
  <p>Obwohl die Eigenschaften dieser Klasse änderbar sind, sollten Sie sie unverändert beibehalten. Sie werden durch die List-Klasse initialisiert und von einem Renderer oder Editor für Elemente gelesen. Eine Veränderung dieser Werte kann zu unerwarteten Ergebnissen führen.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListData:ListData"><apiName>ListData</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>text</apiItemName><apiType value="String"/><apiDesc>Textdarstellung der Daten des Elements.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiDesc>Ein Klassen- oder String-Objekt, das das Symbol für das Element im List-Steuerelement darstellt.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>labelField</apiItemName><apiType value="String"/><apiDesc>Der Name des Felds des Datenproviders, der die Label-Daten der List-Komponente enthält.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Ein eindeutiger Bezeichner für das Element.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>owner</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiDesc>Ein Verweis auf das List-Steuerelement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Indexposition des Elements im Datenprovider für das List-Steuerelement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Indexposition der Spalte in den aktuell sichtbaren Spalten des Steuerelements.
	 
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListData:icon"><apiName>icon</apiName><shortdesc>
	  Eine Klasse, die das Symbol für das Element im List-Steuerelement anzeigt, das aus der itemToIcon()-Methode der List-Klasse berechnet wird
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Class"/></apiValueDef><apiDesc>
	  Eine Klasse, die das Symbol für das Element im List-Steuerelement anzeigt, das aus der <codeph>itemToIcon()</codeph>-Methode der List-Klasse berechnet wird
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListData:labelField"><apiName>labelField</apiName><shortdesc>
	  Der Wert der labelField-Eigenschaft in der List-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Der Wert der <codeph>labelField</codeph>-Eigenschaft in der List-Klasse. Dies ist der Wert, der normalerweise verwendet wird, um zu berechnen, welche Eigenschaft aus dem Element im Datenprovider für den Text im Elementrenderer herangezogen werden soll. Der Wert wird aber auch von DateField und anderen Komponenten verwendet, um anzuzeigen, welches Feld aus dem Datenprovider-Element genommen werden soll, das eine Date- oder eine andere Nicht-Text-Eigenschaft enthält.
	 
	  <p>Beispiel: Wenn ein Datenprovider-Element eine „hiredDate“-Eigenschaft enthält, kann die <codeph>labelField</codeph>-Eigenschaft auf „hiredDate“ und die <codeph>itemRenderer</codeph>-Eigenschaft auf DateField festgelegt werden. Das DateField-Steuerelement verwendet dann die hiredDate-Eigenschaft.</p>
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBaseContentHolder"><apiName>ListBaseContentHolder</apiName><shortdesc>
  Die ListBaseContentHolder-Klasse definiert einen Container in einem listenbasierten Steuerelement aller Elementrenderer und Elementeditoren des Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls.listClasses:ListBaseContentHolder" playerVersion="Flash9" type="uint">
<description>
  Hintergrundfarbe der Komponente.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls.listClasses:ListBaseContentHolder" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p>Der Standardwert für ein Button-Steuerelement ist 10.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls.listClasses:ListBaseContentHolder" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p>Der Standardwert für ein Button-Steuerelement ist 10.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ListBaseContentHolder-Klasse definiert einen Container in einem listenbasierten Steuerelement aller Elementrenderer und Elementeditoren des Steuerelements. Flex verwendet sie, um Bereiche der Renderer zu maskieren, die über das Steuerelement hinaus reichen, und um bestimmte Stile, wie z. B. <codeph>backgroundColor</codeph>, daran zu hindern, sich auf die Renderer zu erweitern, damit Hervorhebungen und alternative Zeilenfarben durch das Steuerelement angezeigt werden können.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#ListBase"><linktext>mx.controls.listClasses.ListBase</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListBaseContentHolder:ListBaseContentHolder"><apiName>ListBaseContentHolder</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parentList</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBase</apiOperationClassifier><apiDesc>Das listenbasierte Steuerelement.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:ListBaseContentHolder:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Legt die Position und die Größe der Bildlaufleisten und des Inhalts fest und passt die Maske an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente in Pixeln in den Koordinaten der Komponente fest, ungeachtet des Werts der <codeph>scaleX</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln in den Koordinaten der Komponente fest, ungeachtet des Werts der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die Position und die Größe der Bildlaufleisten und des Inhalts fest und passt die Maske an.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:ListBaseContentHolder:bottomOffset"><apiName>bottomOffset</apiName><shortdesc>
      Offset, in Pixeln, für die untere rechte Ecke im Listensteuerelement des Inhalts, der durch die ListBase.listContent-Eigenschaft definiert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Offset, in Pixeln, für die untere rechte Ecke im Listensteuerelement des Inhalts, der durch die <codeph>ListBase.listContent</codeph>-Eigenschaft definiert ist.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:iterator"><apiName>iterator</apiName><shortdesc>
      Die IViewCursor-Instanz, die verwendet wird, um Elemente aus dem Datenprovider abzurufen und die Elemente an die Renderer zu übergeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Die IViewCursor-Instanz, die verwendet wird, um Elemente aus dem Datenprovider abzurufen und die Elemente an die Renderer zu übergeben. Am Ende einer Codesequenz muss sie immer auf das oberste sichtbare Element gesetzt werden, das angezeigt wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:leftOffset"><apiName>leftOffset</apiName><shortdesc>
      Offset, in Pixeln, für die obere linke Ecke im List-Steuerelement des Inhalts, der durch die ListBase.listContent-Eigenschaft definiert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Offset, in Pixeln, für die obere linke Ecke im List-Steuerelement des Inhalts, der durch die <codeph>ListBase.listContent</codeph>-Eigenschaft definiert ist.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:listItems"><apiName>listItems</apiName><shortdesc>
      Ein Array von Arrays, das die Elementrendererinstanzen enthält, die für die Darstellung jedes einzelnen Datenprovider-Elements verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Arrays, das die Elementrendererinstanzen enthält, die für die Darstellung jedes einzelnen Datenprovider-Elements verwendet werden. Dies ist ein zweidimensionales, zeilenübergeordnetes Array, also ein Array von Zeilen, die Arrays von Spalten sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:rightOffset"><apiName>rightOffset</apiName><shortdesc>
      Offset, in Pixeln, für die untere rechte Ecke im Listensteuerelement des Inhalts, der durch die ListBase.listContent-Eigenschaft definiert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Offset, in Pixeln, für die untere rechte Ecke im Listensteuerelement des Inhalts, der durch die <codeph>ListBase.listContent</codeph>-Eigenschaft definiert ist.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:rowInfo"><apiName>rowInfo</apiName><shortdesc>
      Ein Array von ListRowInfo-Objekten, die Zeilenhöhen und andere Verfolgungsinformationen für die Zeilen zwischenspeichern, die in der listItems-Eigenschaft definiert sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von ListRowInfo-Objekten, die Zeilenhöhen und andere Verfolgungsinformationen für die Zeilen zwischenspeichern, die in der <codeph>listItems</codeph>-Eigenschaft definiert sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:selectionLayer"><apiName>selectionLayer</apiName><shortdesc>
      Die Ebene in dem von der :istbase.listContent-Eigenschaft definierten Inhalt, in der alle Auswahl- und Markierungsindikatoren gezeichnet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Die Ebene in dem von der <codeph>:istbase.listContent</codeph>-Eigenschaft definierten Inhalt, in der alle Auswahl- und Markierungsindikatoren gezeichnet werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:topOffset"><apiName>topOffset</apiName><shortdesc>
      Offset, in Pixeln, für die obere linke Ecke im List-Steuerelement des Inhalts, der durch die ListBase.listContent-Eigenschaft definiert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Offset, in Pixeln, für die obere linke Ecke im List-Steuerelement des Inhalts, der durch die <codeph>ListBase.listContent</codeph>-Eigenschaft definiert ist.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:visibleData"><apiName>visibleData</apiName><shortdesc>
      Eine Hash-Tabelle von Datenprovider-Elementrenderern, die derzeit im Sichtfeld sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von Datenprovider-Elementrenderern, die derzeit im Sichtfeld sind. Die Tabelle wird durch die UID des Datenprovider-Elements indiziert und wird verwendet, damit der für die Anzeige eines bestimmten Elements verwendete Renderer rasch abgerufen wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:heightExcludingOffsets:get"><apiName>heightExcludingOffsets</apiName><shortdesc>
      Höhe, in Pixeln, unter Ausschluss der oberen und unteren Offsets, des zentralen Abschnitts des Inhalts, der durch die ListBase.listContent-Eigenschaft definiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Höhe, in Pixeln, unter Ausschluss der oberen und unteren Offsets, des zentralen Abschnitts des Inhalts, der durch die <codeph>ListBase.listContent</codeph>-Eigenschaft definiert wird.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:widthExcludingOffsets:get"><apiName>widthExcludingOffsets</apiName><shortdesc>
      Breite, in Pixeln, unter Ausschluss der oberen und unteren Offsets, des zentralen Abschnitts des Inhalts, der durch die ListBase.listContent-Eigenschaft definiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Breite, in Pixeln, unter Ausschluss der oberen und unteren Offsets, des zentralen Abschnitts des Inhalts, der durch die <codeph>ListBase.listContent</codeph>-Eigenschaft definiert wird.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:TileListItemRenderer"><apiName>TileListItemRenderer</apiName><shortdesc>
  Die TileListItemRenderer-Klasse definiert den Standardelementrenderer für die Steuerelemente HorizontalList und TileList.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls.listClasses:TileListItemRenderer" playerVersion="Flash9" type="Number">
<description>
  Anzahl von Pixeln zwischen untergeordneten Objekten in vertikaler Richtung. 
  </description>
<default>6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls.listClasses:TileListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Textfarbe der Komponente bei Deaktivierung.
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls.listClasses:TileListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Textfarbe eines Komponenten-Labels.
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die TileListItemRenderer-Klasse definiert den Standardelementrenderer für die Steuerelemente HorizontalList und TileList. Standardmäßig zeichnet der Elementrenderer den mit den einzelnen Elementen in der Liste verbundenen Text und ein optionales Symbol.
 
  <p>Sie können den Standardelementrenderer überschreiben, indem Sie einen benutzerdefinierten Elementrenderer erstellen.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#HorizontalList"><linktext>mx.controls.HorizontalList</linktext></link><link href="mx.controls.xml#TileList"><linktext>mx.controls.TileList</linktext></link><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><adobeApiEvent id="mx.controls.listClasses:TileListItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Dateneigenschaft ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls.listClasses:TileListItemRenderer:TileListItemRenderer"><apiName>TileListItemRenderer</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:TileListItemRenderer:protected:toolTipShowHandler"><apiName>toolTipShowHandler</apiName><shortdesc>
      Platziert das ToolTip-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:ToolTipEvent</apiOperationClassifier><apiDesc>Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Platziert das ToolTip-Objekt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:TileListItemRenderer:protected:icon"><apiName>icon</apiName><shortdesc>
      Das interne IFlexDisplayObject, das das Symbol in diesem Renderer anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IFlexDisplayObject</apiValueClassifier></apiValueDef><apiDesc>
      Das interne IFlexDisplayObject, das das Symbol in diesem Renderer anzeigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileListItemRenderer:protected:label"><apiName>label</apiName><shortdesc>
      Das interne UITextField, das den Text in diesem Renderer anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Das interne UITextField, das den Text in diesem Renderer anzeigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileListItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Die Implementierung der data-Eigenschaft gemäß der IDataRenderer-Schnittstelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die Implementierung der <codeph>data</codeph>-Eigenschaft gemäß der IDataRenderer-Schnittstelle. Es speichert einfach den Wert und entwertet die Komponente, damit das Layout der Komponente neu aufgebaut werden kann.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:TileListItemRenderer:listData:get"><apiName>listData</apiName><shortdesc>
      Die Implementierung der listData-Eigenschaft gemäß der IDropInListItemRenderer-Schnittstelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      Die Implementierung der <codeph>listData</codeph>-Eigenschaft gemäß der IDropInListItemRenderer-Schnittstelle.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBaseSelectionData"><apiName>ListBaseSelectionData</apiName><shortdesc>
  Datensätze, die von Listenklassen verwendet werden, um aufzuzeichnen, was ausgewählt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Datensätze, die von Listenklassen verwendet werden, um aufzuzeichnen, was ausgewählt wurde. Jedes ausgewählte Element wird durch eine Instanz dieser Klasse dargestellt. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/selectedData"><linktext>mx.controls.listClasses.ListBase.selectedData</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListBaseSelectionData:ListBaseSelectionData"><apiName>ListBaseSelectionData</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das ausgewählte Datenobjekt
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition im Datenprovider des ausgewählten Elements. (Kann ein Näherungswert sein.) 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>approximate</apiItemName><apiType value="Boolean"/><apiDesc>Wenn true, ist die index-Eigenschaft ein Näherungswert und nicht der genaue Wert.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListBaseSelectionData:approximate"><apiName>approximate</apiName><shortdesc>
	  Wenn true, ist die index-Eigenschaft ein Näherungswert und nicht der genaue Wert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Wenn true, ist die index-Eigenschaft ein Näherungswert und nicht der genaue Wert.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseSelectionData:data"><apiName>data</apiName><shortdesc>
	  Das ausgewählte Datenobjekt (selectedItem)
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Das ausgewählte Datenobjekt (selectedItem)
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseSelectionData:index"><apiName>index</apiName><shortdesc>
	  Die Indexposition im Datenprovider des ausgewählten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Die Indexposition im Datenprovider des ausgewählten Elements. (Kann ein Näherungswert sein.)
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListItemRenderer"><apiName>ListItemRenderer</apiName><shortdesc>
  Die ListItemRenderer-Klasse definiert den Standardelementrenderer für ein List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls.listClasses:ListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Textfarbe der Komponente bei Deaktivierung.
  
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls.listClasses:ListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Textfarbe eines Komponenten-Labels.
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ListItemRenderer-Klasse definiert den Standardelementrenderer für ein List-Steuerelement. Standardmäßig zeichnet der Elementrenderer den mit den einzelnen Elementen in der Liste verbundenen Text und ein optionales Symbol.
 
  <p>Sie können den Standardelementrenderer überschreiben, indem Sie einen benutzerdefinierten Elementrenderer erstellen.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><adobeApiEvent id="mx.controls.listClasses:ListItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Dateneigenschaft ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls.listClasses:ListItemRenderer:ListItemRenderer"><apiName>ListItemRenderer</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:ListItemRenderer:protected:toolTipShowHandler"><apiName>toolTipShowHandler</apiName><shortdesc>
      Platziert das ToolTip-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:ToolTipEvent</apiOperationClassifier><apiDesc>Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Platziert das ToolTip-Objekt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:ListItemRenderer:protected:icon"><apiName>icon</apiName><shortdesc>
      Das interne IFlexDisplayObject, das das Symbol in diesem Renderer anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IFlexDisplayObject</apiValueClassifier></apiValueDef><apiDesc>
      Das interne IFlexDisplayObject, das das Symbol in diesem Renderer anzeigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:protected:label"><apiName>label</apiName><shortdesc>
      Das interne UITextField, das den Text in diesem Renderer anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Das interne UITextField, das den Text in diesem Renderer anzeigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Die Implementierung der data-Eigenschaft gemäß der IDataRenderer-Schnittstelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die Implementierung der <codeph>data</codeph>-Eigenschaft gemäß der IDataRenderer-Schnittstelle. Wenn festgelegt, wird der Wert gespeichert und die Komponente ungültig gemacht, damit das Layout der Komponente neu aufgebaut werden kann.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Die Modul-Factory, welche den Schriftartkontext für diese Komponente bereitstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Die module-Factory, die den Schriftartkontext für diese Komponente bereitstellt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:listData:get"><apiName>listData</apiName><shortdesc>
      Die Implementierung der listData-Eigenschaft gemäß der IDropInListItemRenderer-Schnittstelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      Die Implementierung der <codeph>listData</codeph>-Eigenschaft gemäß der IDropInListItemRenderer-Schnittstelle.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:TileBaseDirection"><apiName>TileBaseDirection</apiName><shortdesc>
  Werte für die direction-Eigenschaft der TileList-Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Werte für die <codeph>direction</codeph>-Eigenschaft der TileList-Komponente.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#TileBase/direction"><linktext>mx.controls.listClasses.TileBase.direction</linktext></link></related-links><apiValue id="mx.controls.listClasses:TileBaseDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
	  Untergeordnete Objekte horizontal anordnen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Untergeordnete Objekte horizontal anordnen. Für Steuerelemente wie TileList, die untergeordnete Objekte in zwei Dimensionen anordnen, werden die untergeordneten Objekte angeordnet, indem eine Zeile angefüllt wird, bevor mit der nächsten Zeile begonnen wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBaseDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
	  Untergeordnete Objekte vertikal anordnen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Untergeordnete Objekte vertikal anordnen. Für Steuerelemente wie TileList, die untergeordnete Objekte in zwei Dimensionen anordnen, werden die untergeordneten Objekte angeordnet, indem eine Spalte angefüllt wird, bevor mit der nächsten Spalte begonnen wird.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListItemDragProxy"><apiName>ListItemDragProxy</apiName><shortdesc>
  Der Standard-Zieh-Proxy, wenn aus einem listenbasierten Steuerelement herausgezogen wird (ausgenommen DataGrid-Klasse).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Der Standard-Zieh-Proxy, wenn aus einem listenbasierten Steuerelement herausgezogen wird (ausgenommen DataGrid-Klasse). Ein Zieh-Proxy ist eine Komponente, die den Objekten oder Kopien der gezogenen Objekte übergeordnet ist.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridDragProxy"><linktext>mx.controls.dataGridClasses.DataGridDragProxy</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListItemDragProxy:ListItemDragProxy"><apiName>ListItemDragProxy</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBase"><apiName>ListBase</apiName><shortdesc>
  Die ListBase-Klasse ist die Basisklasse für Steuerelemente, die Listen von Elementen darstellen, von denen mindestens eines ausgewählt werden kann, und wo ein Bildlauf durch die Elemente möglich ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="String">
<description>
  Die vertikale Ausrichtung eines Renderers in einer Zeile. Mögliche Werte sind <codeph>"top"</codeph>, <codeph>"middle"</codeph> und <codeph>"bottom"</codeph>. Das DataGrid-Objekt platziert die Renderer in einer Zeile basierend auf diesem Stil und den Stilen <codeph>paddingTop</codeph> und <codeph>paddingBottom</codeph>. Wenn die Elemente in den Spalten für eine Zeile unterschiedliche Höhen haben, verwenden andere Listenklassen nicht <codeph>verticalAlign</codeph>, sondern die Elementrenderer können diese Stileigenschaft prüfen und ihre Formatierung auf dieser Basis ändern.
 
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="useRollOver" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Boolean">
<description>
  Ein Flag, das steuert, ob Elemente markiert werden, wenn der Mauszeiger darüber geführt wird. Wenn <codeph>true</codeph>, werden Zeilen markiert, sobald der Mauszeiger darüber geführt wird. Wenn <codeph>false</codeph>, werden Zeilen nur markiert, wenn sie ausgewählt werden.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Texts eines Renderers, wenn der Benutzer ihn auswählt.
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Texts eines Renderers, wenn der Benutzer den Mauszeiger darüber führt.
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Function">
<description>
  Die easingFunction für den Auswahleffekt. Wenn ein Element ausgewählt wird, entsteht ein Effekt in der Farbe des Hintergrunds. Standardverhalten ist ein lineares Einblenden der Farbe. Eine easingFunction kann zur Steuerung des Auswahleffekts verwendet werden.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="selectionDuration" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Die Dauer des Auswahleffekts. Wenn ein Element ausgewählt wird, entsteht ein Effekt in der Farbe des Hintergrunds. Auf 0 einstellen, um den Effekt zu deaktivieren.
  
  </description>
<default>250
  
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionDisabledColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Hintergrunds eines Renderers, wenn die Komponente deaktiviert ist.
 
  </description>
<default>0xDDDDDD
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Hintergrunds eines Renderers, wenn der Benutzer ihn auswählt.
 
  </description>
<default>0x7FCEFF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Hintergrunds eines Renderers, wenn der Benutzer den Mauszeiger darüber führt.
 
  </description>
<default>0xEEFEE6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl von Pixeln zwischen dem oberen Rand der Zeile und dem oberen Rand des Renderers in der Zeile.
  
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl von Pixeln zwischen dem unteren Rand der Zeile und dem unteren Rand des Renderers in der Zeile.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropIndicatorSkin" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Class">
<description>
  Die Skin, die verwendet werden soll, um anzuzeigen, ob ein gezogenes Element abgelegt werden kann. Wenn eine von ListBase abgeleitete Komponente in einem Ziehen-und-Ablegen-Vorgang ein mögliches Ablageziel ist, erstellt ein Aufruf der <codeph>showDropFeedback()</codeph>-Methode eine Instanz dieser Klasse und platziert sie ein Pixel über dem Elementrenderer für das Element, wo sich nach dem Abschluss des Ziehen-und-Ablegen-Vorgangs das Element befindet, das nach dem abgelegten Element kommt.
 
  </description>
<default>mx.controls.listClasses.ListDropIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Array">
<description>
  Die Farben, die für die Hintergründe der Elemente in der Liste zu verwenden sind. Der Wert ist ein Array von zwei oder mehr Farben. Die Hintergründe der Listenelemente wechseln sich unter den Farben im Array ab. 
 
  <p>Für DataGrid-Steuerelemente haben alle Elemente in einer Zeile dieselbe Hintergrundfarbe und die Hintergrundfarbe jeder Zeile wird aus dem Farben-Array bestimmt.</p>
 
  <p>Für das TileList-Steuerelement, das eine einzige Farbe verwendet, um eine zweidimensionale Anzeige zu erstellen, kann der Stil eine Darstellung als Schachbrettmuster, mit Streifen oder mit einem anderen Muster bewirken, die auf der Anzahl der Spalten und Zeilen sowie der Anzahl der festgelegten Farben basiert. TileList wechselt die Farben ab und setzt die einzelnen Element-Hintergrundfarben entsprechend der Richtung des Layouts. Wenn eine gerade Anzahl von Farben und eine gerade Anzahl von Spalten für ein TileList-Objekt mit horizontalem Layout festgelegt sind, werden Streifen angezeigt. Wenn die Anzahl von Spalten ungerade ist, ergibt sich ein Schachbrettmuster.
  </p>
 
  <p>Ist nur wirksam, wenn <codeph>backgroundColor</codeph> nicht festgelegt ist.</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p>Der Standardwert für ein Button-Steuerelement ist 10.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p>Der Standardwert für ein Button-Steuerelement ist 10.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="String">
<description>
  Gibt an, welche Ecken des Fokus-Rechtecks gerundet werden sollen. Dieser Wert ist ein durch Leerzeichen gegliederter String, welcher alle Kombinationen aus <codeph>"tl"</codeph>, <codeph>"tr"</codeph>, <codeph>"bl"</codeph> und <codeph>"br"</codeph> enthalten kann. Beispiel: Um festzulegen, dass die Ecken der rechten Seite abgerundet und die der linken Seite kantig sein sollen, verwenden Sie <codeph>"tr br"</codeph>. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abzurundenden Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Sofern er für diese Klasse nicht außer Kraft gesetzt wird, lautet er <codeph>"tl tr bl br"</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest.
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The ListBase class inherits all of the tag properties of its superclasses,
  and adds the following tag properties:</p>
  
  <pre>
  &lt;mx:<i>tagname</i>
    <b>Properties</b>
    allowDragSelection="false|true"
    allowMultipleSelection="false|true"
    columnCount="4"
    columnWidth="NaN"
    dataProvider="null"
    dataTipField="label"
    dataTipFunction="null"
    dragEnabled="false|true"
    dragMoveEnabled="false|true"
    dropEnabled="false|true"
    iconField="null"
    iconFunction="null"
    itemRenderer="null"
    labelField="label"
    labelFunction="null"
    menuSelectionMode="false|true"
    offscreenExtraRowsOrColumns="0"
    rowCount="-1"
    rowHeight="NaN"
    selectable="true|false"
    selectedIndex="-1"
    selectedIndices="null"
    selectedItem="null"
    selectedItems="null"
    showDataTips="false|true"
    variableRowHeight="false|true"
    wordWrap="false|true"
 
    <b>Styles</b>
    alternatingItemColors="undefined"
    itemsChangeEffect="undefined"
    dropIndicatorSkin="ListDropIndicator"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    paddingBottom="2"
    paddingLeft="2"
    paddingRight="0"
    paddingTop="2"
    rollOverColor="0xEEFEE6"
    selectionColor="0x7FCEFF"
    selectionDisabledColor="0xDDDDDD"
    selectionDuration="250"
    selectionEasingFunction="undefined"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    useRollOver="true|false"
    verticalAlign="top|middle|bottom"
 
    <b>Events</b>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
    itemClick="<i>No default</i>"
    itemDoubleClick="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.effects:IEffectTargetHost</apiBaseInterface><apiBaseClassifier>mx.core:ScrollControlBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ListBase-Klasse ist die Basisklasse für Steuerelemente, die Listen von Elementen darstellen, von denen mindestens eines ausgewählt werden kann, und wo ein Bildlauf durch die Elemente möglich ist. Elemente werden über die <codeph>dataProvider</codeph>-Eigenschaft bezogen und über Elementrenderer angezeigt.
 
  <p>In einer Modell/Ansicht-Architektur stellt die aus ListBase abgeleitete Klasse die Ansicht und das dataProvider-Objekt das Modell dar.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.collections.xml#ICollectionView"><linktext>mx.collections.ICollectionView</linktext></link></related-links><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement doppelklickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement doppelklickt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement klickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer auf ein Element im Steuerelement klickt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer den Mauszeiger von einem Element im Steuerelement wegführt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer den Mauszeiger von einem Element im Steuerelement wegführt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer den Mauszeiger über ein Element im Steuerelement führt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer den Mauszeiger über ein Element im Steuerelement führt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Dateneigenschaft ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Eigenschaften selectedIndex oder selectedItem aufgrund eines Benutzereingriffs ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die Eigenschaften <codeph>selectedIndex</codeph> oder <codeph>selectedItem</codeph> aufgrund eines Benutzereingriffs ändern.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls.listClasses:ListBase:ListBase"><apiName>ListBase</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:ListBase:protected:UIDToItemRenderer"><apiName>UIDToItemRenderer</apiName><shortdesc>
      Findet einen Elementrenderer nach seiner UID, wenn sie sichtbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Der Elementrenderer.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID des Elements.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Findet einen Elementrenderer nach seiner UID, wenn sie sichtbar ist.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:addDataEffectItem"><apiName>addDataEffectItem</apiName><shortdesc>
      
      Fügt einen Elementrenderer hinzu, wenn ein Datenänderungseffekt läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Der Elementrenderer, der dem Layout des Steuerelements hinzugefügt werden soll.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Fügt einen Elementrenderer hinzu, wenn ein Datenänderungseffekt läuft. Der Elementrenderer muss einem kürzlich hinzugefügten Datenelement in der Sammlung des Datenproviders entsprechen, das noch nicht angezeigt wurde. 
     
      <p>Diese Funktion wird von einem <codeph>AddItemAction</codeph>-Effekt als Teil eines Datenänderungseffekts aufgerufen, um den Punkt festzulegen, an dem ein zu einer Sammlung hinzugefügtes Datenelement vom Steuerelement über einen Elementrenderer angezeigt wird.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:addDragData"><apiName>addDragData</apiName><shortdesc>
      Fügt die ausgewählten Elemente dem DragSource-Objekt als Teil eines Drag&amp;Drop-Vorgangs hinzu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ds</apiItemName><apiType value="Object"/><apiDesc>Das DragSource-Objekt, dem die Daten hinzugefügt werden sollen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt die ausgewählten Elemente dem DragSource-Objekt als Teil eines Drag&amp;Drop-Vorgangs hinzu. Überschreiben Sie diese Methode, um dem DragSource-Objekt andere Daten hinzuzufügen.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:addToFreeItemRenderers"><apiName>addToFreeItemRenderers</apiName><shortdesc>
      Fügt der Liste der wiederverwendeten Renderer einen Renderer hinzu, macht ihn unsichtbar und bereinigt Verweise darauf.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der hinzuzufügende Renderer.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt der Liste der wiederverwendeten Renderer einen Renderer hinzu, macht ihn unsichtbar und bereinigt Verweise darauf. Wenn ein Dateneffekt läuft, wird der Renderer für zukünftige Verwendungen mit diesen Daten reserviert. Sonst wird er dem allgemeinen freeItemRenderers-Stapel hinzugefügt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:addToRowArrays"><apiName>addToRowArrays</apiName><shortdesc>
      Fügt eine leere Zeile am Beginn der Arrays hinzu, die Verweise auf die Zeilen enthalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Fügt eine leere Zeile am Beginn der Arrays hinzu, die Verweise auf die Zeilen enthalten.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      Wird von der updateDisplayList()-Methode aufgerufen, um die Größe und Position von listContent anzupassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData></apiParam></apiOperationDef><apiDesc>
      Wird von der <codeph>updateDisplayList()</codeph>-Methode aufgerufen, um die Größe und Position von listContent anzupassen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:applySelectionEffect"><apiName>applySelectionEffect</apiName><shortdesc>
      Legt den Effekt für das Anwenden des Auswahlindikators fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite, das die Grafiken enthält, mit der die Auswahl dargestellt wird.
      
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID für das ausgewählte Element, die für die Indizierung in eine Tabelle und die Verfolgung von mehr als einem Auswahleffekt verwendet werden kann.
      
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, der als ausgewählt angezeigt wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt den Effekt für das Anwenden des Auswahlindikators fest. Der Standardwert ist ein Basis-Alpha-Tween.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:calculateDropIndex"><apiName>calculateDropIndex</apiName><shortdesc>
      Gibt einen Index zurück, dem die abgelegten Elemente zum Ablageziel hinzugefügt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index, dem abgelegte Elemente hinzugefügt werden sollen.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiData>null</apiData><apiDesc>Ein DragEvent, das Informationen über die Position der Maus enthält. Wenn <codeph>null</codeph>, muss die Methode den <codeph>dropIndex</codeph>-Wert aus dem letzten gültigen Ereignis zurückgeben.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt einen Index zurück, dem die abgelegten Elemente zum Ablageziel hinzugefügt werden sollen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:calculateDropIndicatorY"><apiName>calculateDropIndicatorY</apiName><shortdesc>
      Berechnet die Y-Position des Drop-Indikators bei einem Drag&amp;Drop-Vorgang.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Y-Achsenkoordinate des Drop-Indikators.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>rowCount</apiItemName><apiType value="Number"/><apiDesc>Die Anzahl sichtbarer Zeilen im Steuerelement.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Die Nummer der Zeile im Steuerelement, wo der Drop-Indikator erscheinen soll.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Berechnet die Y-Position des Drop-Indikators bei einem Drag&amp;Drop-Vorgang.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearCaretIndicator"><apiName>clearCaretIndicator</apiName><shortdesc>
      Löscht den Einfügezeichen-Indikator im angegebenen Sprite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Löscht den Einfügezeichen-Indikator im angegebenen Sprite.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearHighlightIndicator"><apiName>clearHighlightIndicator</apiName><shortdesc>
      Löscht den Hervorhebungs-Indikator im angegebenen Sprite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Löscht den Hervorhebungs-Indikator im angegebenen Sprite.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearIndicators"><apiName>clearIndicators</apiName><shortdesc>
      Entfernt alle Auswahl-, Hervorhebungs- und Einfügezeichen-Indikatoren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Entfernt alle Auswahl-, Hervorhebungs- und Einfügezeichen-Indikatoren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearSelected"><apiName>clearSelected</apiName><shortdesc>
      Löscht die Menge ausgewählter Elemente und entfernt alle Grafiken, die den Auswahlstatus dieser Elemente anzeigen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn die Grafiken einen Ausblendeffekt haben sollen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Löscht die Menge ausgewählter Elemente und entfernt alle Grafiken, die den Auswahlstatus dieser Elemente anzeigen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearVisibleData"><apiName>clearVisibleData</apiName><shortdesc>
      Leert die visibleData-Hash-Tabelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Leert die visibleData-Hash-Tabelle.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:collectionChangeHandler"><apiName>collectionChangeHandler</apiName><shortdesc>
      Verarbeitet CollectionEvents, die vom Datenprovider ausgelöst werden, wenn sich Daten ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das CollectionEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet CollectionEvents, die vom Datenprovider ausgelöst werden, wenn sich Daten ändern. Aktualisiert erforderlichenfalls die Renderer, ausgewählten Indizes und Bildlaufleisten.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      Berechnet die Spaltenbreite und Zeilenhöhe sowie die Anzahl der Zeilen und Spalten basierend auf expliziten columnCount-, columnWidth-, rowHeight- und rowCount-Einstellungen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Berechnet die Spaltenbreite und Zeilenhöhe sowie die Anzahl der Zeilen und Spalten basierend auf expliziten <codeph>columnCount</codeph>-, <codeph>columnWidth</codeph>-, <codeph>rowHeight</codeph>- und <codeph>rowCount</codeph>-Einstellungen.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:configureScrollBars"><apiName>configureScrollBars</apiName><shortdesc>
      Konfiguriert die Bildlaufleisten basierend auf der Anzahl von Zeilen und Spalten sowie der anzeigbaren Zeilen und Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Konfiguriert die Bildlaufleisten basierend auf der Anzahl von Zeilen und Spalten sowie der anzeigbaren Zeilen und Spalten. Diese Methode wird aus der <codeph>updateDisplayList()</codeph>-Methode aufgerufen, nachdem Zeilen und Spalten aktualisiert wurden. Die Methode soll herausfinden, welche Parameter an die <codeph>setScrollBarProperties()</codeph>-Methode zu übergeben sind, um die Bildlaufleisten korrekt einzurichten.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:copyItemWithUID"><apiName>copyItemWithUID</apiName><shortdesc>
      Erstellt eine tiefe Kopie des Objekts, indem die ObjectUtil.copy()-Methode aufgerufen wird, und ersetzt die uid-Eigenschaft der Kopie (wenn vorhanden) durch einen neuen Wert, indem die UIDUtil.createUID()-Methode aufgerufen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Kopie des Objekts.
     
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das zu kopierende Element.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine tiefe Kopie des Objekts, indem die <codeph>ObjectUtil.copy()</codeph>-Methode aufgerufen wird, und ersetzt die <codeph>uid</codeph>-Eigenschaft der Kopie (wenn vorhanden) durch einen neuen Wert, indem die <codeph>UIDUtil.createUID()</codeph>-Methode aufgerufen wird.
     
      <p>Diese Methode wird für eine Drag&amp;Drop-Kopie verwendet.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.utils.xml#ObjectUtil"><linktext>mx.utils.ObjectUtil</linktext></link><link href="mx.utils.xml#UIDUtil"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:copySelectedItems"><apiName>copySelectedItems</apiName><shortdesc>
      Kopiert die ausgewählten Elemente in der Reihenfolge, in der sie ausgewählt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Array der ausgewählten Elemente.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>useDataField</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, wenn das Array mit den aktuellen Elementen gefüllt werden soll, oder <codeph>false</codeph>, wenn das Array mit den Indexdaten der Elementen gefüllt werden soll.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Kopiert die ausgewählten Elemente in der Reihenfolge, in der sie ausgewählt wurden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:createChildren"><apiName>createChildren</apiName><shortdesc>
      Erstellt Objekte, die untergeordnete Objekte dieser ListBase sind, in diesem Fall das listContent-Objekt, das alle Elementrenderer enthalten wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Erstellt Objekte, die untergeordnete Objekte dieser ListBase sind, in diesem Fall das <codeph>listContent</codeph>-Objekt, das alle Elementrenderer enthalten wird. Die Elementrenderer werden nicht sofort erstellt, sondern später, wenn die <codeph>updateDisplayList()</codeph>-Methode aufgerufen wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:createItemRenderer"><apiName>createItemRenderer</apiName><shortdesc>
      Erstellt einen Elementrenderer für das Datenobjekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Elementrenderer.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Datenobjekt.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt einen Elementrenderer für das Datenobjekt.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:destroyRow"><apiName>destroyRow</apiName><shortdesc>
      Zeile wiederverwenden, die nicht mehr benötigt wird, und ihre Indikatoren entfernen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der zu entfernenden Zeile.
      </apiDesc></apiParam><apiParam><apiItemName>numCols</apiItemName><apiType value="int"/><apiDesc>Die Anzahl von Spalten in der Zeile.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeile wiederverwenden, die nicht mehr benötigt wird, und ihre Indikatoren entfernen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_COMPLETE-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_COMPLETE</codeph>-Ereignisse Diese Methode verarbeitet das Element aus dem Datenprovider
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_DROP-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_DROP</codeph>-Ereignisse. Diese Methode blendet das Ablegen-Feedback aus, indem es die <codeph>hideDropFeedback()</codeph>-Methode aufruft.
     
      <p>Wenn die Aktion <codeph>COPY</codeph> lautet, erstellt diese Methode eine Tiefenkopie des Objekts, indem sie die <codeph>ObjectUtil.copy()</codeph>-Methode aufruft und, falls vorhanden, die <codeph>uid</codeph>-Eigenschaft der Kopie durch einen neuen Wert ersetzt, indem sie die <codeph>UIDUtil.createUID()</codeph>-Methode aufruft.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.utils.xml#ObjectUtil"><linktext>mx.utils.ObjectUtil</linktext></link><link href="mx.utils.xml#UIDUtil"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragEnterHandler"><apiName>dragEnterHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_ENTER-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_ENTER</codeph>-Ereignisse. Diese Methode ermittelt, ob das DragSource-Objekt gültige Elemente enthält, und verwendet die <codeph>showDropFeedback()</codeph>-Methode, um das UI-Feedback einzurichten.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragExitHandler"><apiName>dragExitHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_EXIT-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_EXIT</codeph>-Ereignisse. Diese Methode verbirgt das UI-Feeback durch Aufruf der <codeph>hideDropFeedback()</codeph>-Methode.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragOverHandler"><apiName>dragOverHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_OVER-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_OVER</codeph>-Ereignisse. Diese Methode ermittelt, ob das DragSource-Objekt gültige Elemete enthält, und verwendet die <codeph>showDropFeedback()</codeph>-Methode, um das UI-Feedback einzurichten.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragScroll"><apiName>dragScroll</apiName><shortdesc>
      Intervallfunktion, die die Liste nach oben oder unten abrollt, wenn die Maus über oder unter die Liste geführt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Intervallfunktion, die die Liste nach oben oder unten abrollt, wenn die Maus über oder unter die Liste geführt wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragStartHandler"><apiName>dragStartHandler</apiName><shortdesc>
      Die Standardprozedur für das dragStart-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>dragStart</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawCaretIndicator"><apiName>drawCaretIndicator</apiName><shortdesc>
      Zeichnet den Einfügezeichen-Indikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte X-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Y-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Breite für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Höhe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die gewünschte Farbe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Einfügezeichen-Indikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawHighlightIndicator"><apiName>drawHighlightIndicator</apiName><shortdesc>
      Zeichnet den Hervorhebungsindikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte X-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Y-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Breite für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Höhe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die gewünschte Farbe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Hervorhebungsindikator in das gegebene Sprite-Objekt an der festgelegten Position und in der festgelegten Breite, Höhe und Farbe.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawItem"><apiName>drawItem</apiName><shortdesc>
      Zeichnet den Renderer mit Hervorhebungs-, Auswahl- oder Einfügezeichen-Indikatoren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Renderer.
      </apiDesc></apiParam><apiParam><apiItemName>selected</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Renderer in seinem ausgewählten Status gezeichnet werden soll.
      </apiDesc></apiParam><apiParam><apiItemName>highlighted</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Renderer in seinem hervorgehobenen Status gezeichnet werden soll.
      </apiDesc></apiParam><apiParam><apiItemName>caret</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Renderer so gezeichnet werden soll, als wäre er das Auswahl-Einfügezeichen.
      </apiDesc></apiParam><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc><codeph>true</codeph>, wenn der Auswahlstatus über einen Effekt ausgeblendet werden soll.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Renderer mit Hervorhebungs-, Auswahl- oder Einfügezeichen-Indikatoren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawRowBackgrounds"><apiName>drawRowBackgrounds</apiName><shortdesc>
      Zeichnet abwechselnde Zeilenfarben, Ränder und Hintergründe für die Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeichnet abwechselnde Zeilenfarben, Ränder und Hintergründe für die Zeilen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawSelectionIndicator"><apiName>drawSelectionIndicator</apiName><shortdesc>
      Zeichnet den Auswahlindikator in das gegebene Sprite-Objekt an der Position, in der Breite, in der Höhe und mit der Farbe, die festgelegt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite-Objekt, das die Grafiken enthalten sollte, die die Anzeige durch einen Renderer als hervorgehoben präsentiert.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte X-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Y-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Breite für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die gewünschte Höhe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die gewünschte Farbe für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, der hervorgehoben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Auswahlindikator in das gegebene Sprite-Objekt an der Position, in der Breite, in der Höhe und mit der Farbe, die festgelegt wurden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:findKey"><apiName>findKey</apiName><shortdesc>
      Sucht das nächste Element im Datenprovider, das mit dem Zeichen im eventCode-Parameter beginnt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, wenn eine Übereinstimmung gefunden wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>eventCode</apiItemName><apiType value="int"/><apiDesc>Die Taste, die auf der Tastatur gedrückt wurde.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Sucht das nächste Element im Datenprovider, das mit dem Zeichen im <codeph>eventCode</codeph>-Parameter beginnt. Sie können dies überschreiben, um kompliziertere Type-Ahead-Suchvorgänge durchzuführen. Die Suche startet an der <codeph>selectedIndex</codeph>-Stelle. Wenn sie das Ende des Datenproviders erreicht, beginnt sie wieder am Anfang.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:findString"><apiName>findString</apiName><shortdesc>
      Findet ein Element in der Liste basierend auf einem String und verlegt die Auswahl an diese Stelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn eine Übereinstimmung gefunden wird.
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>str</apiItemName><apiType value="String"/><apiDesc>Der String, der gesucht wird.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Findet ein Element in der Liste basierend auf einem String und verlegt die Auswahl an diese Stelle. Die Suche startet an der <codeph>selectedIndex</codeph>-Stelle. Wenn sie das Ende des Datenproviders erreicht, beginnt sie wieder am Anfang.
     
      <p>Bei einem DataGrid-Steuerelement durchsucht diese Methode standardmäßig die erste Spalte im Steuerelement. Wenn eine andere Spalte durchsucht werden soll, legen Sie die <codeph>sort</codeph>-Eigenschaft der Sammlung, die zum Einlesen der Daten in das Steuerelement verwendet wird, auf das spezifische Feld oder die Felder, die Sie suchen. Jedes Feld entspricht einer einzelnen Spalte des Steuerelements.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.collections.xml#ListCollectionView"><linktext>mx.collections.ListCollectionView</linktext></link><link href="mx.collections.xml#ArrayCollection"><linktext>mx.collections.ArrayCollection</linktext></link><link href="mx.collections.xml#XMLListCollection"><linktext>mx.collections.XMLListCollection</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:finishDataChangeEffect"><apiName>finishDataChangeEffect</apiName><shortdesc>
      Bereinigt nach dem Abschluss eines Datenänderungseffekts die Daten, indem die ursprüngliche Sammlung und der Iterator wiederhergestellt und alle zwischengespeicherten, von diesem Effekt verwendeten Werte entfernt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:EffectEvent</apiOperationClassifier><apiDesc>Das EffectEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bereinigt nach dem Abschluss eines Datenänderungseffekts die Daten, indem die ursprüngliche Sammlung und der Iterator wiederhergestellt und alle zwischengespeicherten, von diesem Effekt verwendeten Werte entfernt werden. Diese Methode wird vom Flex-Framework aufgerufen. Sie brauchen sie nicht aus dem Programmcode aufzurufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:finishKeySelection"><apiName>finishKeySelection</apiName><shortdesc>
      Stellt ausgewählte Elemente basierend auf den Eigenschaften caretIndex und anchorIndex ein.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Stellt ausgewählte Elemente basierend auf den Eigenschaften <codeph>caretIndex</codeph> und <codeph>anchorIndex</codeph> ein. Wird über die Tastaturauswahlprozeduren und die <codeph>updateDisplayList()</codeph>-Methode aufgerufen, wenn der Tastaturauswahlprozedur ein Seitenfehler gemeldet wird, während ein Bildlauf zur Anzeige zusätzlicher Elemente erfolgt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:getItemRendererFactory"><apiName>getItemRendererFactory</apiName><shortdesc>
      Gibt die geeignete Factory zurück und verwendet die Standard-Factory, wenn keine festgelegt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Wenn <codeph>data</codeph> gleich Null ist, der Standardelementrenderer, sonst wird der benutzerdefinierte Elementrenderer zurückgegeben.
      
      </apiDesc><apiOperationClassifier>mx.core:IFactory</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die vom Elementrenderer darzustellenden Daten.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die geeignete Factory zurück und verwendet die Standard-Factory, wenn keine festgelegt ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:getRendererSemanticValue"><apiName>getRendererSemanticValue</apiName><shortdesc> 
      
      Gibt „true“ oder „false“ zurück, um anzugeben, ob der Effekt für das Ziel ausgeführt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Gibt <codeph>true</codeph> oder <codeph>false</codeph> zurück, um anzugeben, ob der Effekt für das Ziel ausgeführt werden soll. 
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>Ein Elementrenderer
     
      </apiDesc></apiParam><apiParam><apiItemName>semanticProperty</apiItemName><apiType value="String"/><apiDesc>Die semantische Eigenschaft des Renderers, dessen Wert zurückgegeben wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      
      Gibt <codeph>true</codeph> oder <codeph>false</codeph> zurück, um anzugeben, ob der Effekt für das Ziel ausgeführt werden soll. Die EffectTargetFilter-Klasse ruft diese Methode auf, wenn Sie die <codeph>filter</codeph>-Eigenschaft für einen Dateneffekt festlegen. Beispiel: Legen Sie die <codeph>filter</codeph>-Eigenschaft mit <codeph>addItem</codeph> oder <codeph>removeItem</codeph> fest.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:getReservedOrFreeItemRenderer"><apiName>getReservedOrFreeItemRenderer</apiName><shortdesc>
      Ruft einen bereits erstellten, derzeit nicht verwendeten Elementrenderer ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die vom Elementrenderer darzustellenden Daten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ruft einen bereits erstellten, derzeit nicht verwendeten Elementrenderer ab. Wenn ein Dateneffekt läuft, wird zunächst ein Abruf aus der reservedItemRenderers-Matrix versucht. Sonst (oder wenn kein reservierter Renderer gefunden wird) erfolgt der Abruf aus dem freeItemRenderers-Stapel.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:hideDropFeedback"><apiName>hideDropFeedback</apiName><shortdesc>
      Verbirgt den Drop-Indikator unter dem Mauszeiger, der anzeigt, dass ein Drop&amp;Droßp-Vorgang zulässig ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Ein DragEvent-Objekt, das Informationen über die Position des Mauszeigers enthält.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verbirgt den Drop-Indikator unter dem Mauszeiger, der anzeigt, dass ein Drop&amp;Droßp-Vorgang zulässig ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:indexToColumn"><apiName>indexToColumn</apiName><shortdesc>
      Die Spalte für das Datenprovider-Element an einer gegebenen Indexposition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Spalte, in der das Element in der Komponente angezeigt würde. -1, wenn es im listContent-Container nicht anzeigbar ist.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Der Offset in den Datenprovider.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Spalte für das Datenprovider-Element an einer gegebenen Indexposition.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:indexToItemRenderer"><apiName>indexToItemRenderer</apiName><shortdesc>
      Rufen Sie einen Elementrenderer für die Indexposition eines Elements im Datenprovider ab, wenn einer existiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Elementrenderer, der das Element anzeigt, oder <codeph>null</codeph>, wenn das Element derzeit nicht angezeigt wird.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Der Offset in den Datenprovider für ein Element.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Rufen Sie einen Elementrenderer für die Indexposition eines Elements im Datenprovider ab, wenn einer existiert. Da Elementrenderer nur für Elemente in einer Gruppe von anzeigbaren Zeilen existieren, können Sie diese Methode nicht für Elemente verwenden, die nicht sichtbar sind.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:indexToRow"><apiName>indexToRow</apiName><shortdesc>
      Die Zeile für das Datenprovider-Element an einer gegebenen Indexposition.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Zeile, in der das Element in der Komponente angezeigt würde. -1, wenn es im listContent-Container nicht anzeigbar ist.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Der Offset in den Datenprovider.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Zeile für das Datenprovider-Element an einer gegebenen Indexposition.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:indicesToIndex"><apiName>indicesToIndex</apiName><shortdesc>
      Berechnet den Offset in den Datenprovider des Elements an colIndex, rowIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Offset in den Datenprovider.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Der auf null basierende Index der Zeile, einschließlich Zeilen, die von oben abgerollt wurden. Daher gilt: Wenn <codeph>verticalScrollPosition</codeph> gleich 2 ist, hat die erste sichtbare Zeile den rowIndex 2.
     
      </apiDesc></apiParam><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Der auf null basierende Index der Spalte, einschließlich Spalten, die von links abgerollt wurden. Wenn <codeph>horizontalScrollPosition</codeph> gleich 2 ist, dann hat die erste Spalte links den columnIndex 2.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Berechnet den Offset in den Datenprovider des Elements an colIndex, rowIndex. Die 9. Zeile, 3. Spalte in einer TileList kann unterschiedliche Elemente im Datenprovider darstellen, je nach der Richtung der Musterelemente und der Anzahl der Zeilen und Spalten in der TileList.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:initiateDataChangeEffect"><apiName>initiateDataChangeEffect</apiName><shortdesc>
      Leitet einen Datenänderungseffekt ein, wenn Änderungen im Datenprovider eingetreten sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Die Breite des Steuerelements, bevor externe Größenparameter angewendet werden.
      
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Die Höhe des Steuerelements, bevor externe Größenparameter angewendet werden.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Leitet einen Datenänderungseffekt ein, wenn Änderungen im Datenprovider eingetreten sind.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:invalidateList"><apiName>invalidateList</apiName><shortdesc>
      Ruft bei der nächsten Aktualisierung alle Zeilen neu ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ruft bei der nächsten Aktualisierung alle Zeilen neu ab.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemHighlighted"><apiName>isItemHighlighted</apiName><shortdesc>
      Ermittelt, ob der Elementrenderer für ein Datenprovider-Element hervorgehoben ist (indem ein Mauszeiger darüber bewegt wird oder unter dem Einfügezeichen bei Tastaturnavigation).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element hervorgehoben ist.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenprovider-Element.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ermittelt, ob der Elementrenderer für ein Datenprovider-Element hervorgehoben ist (indem ein Mauszeiger darüber bewegt wird oder unter dem Einfügezeichen bei Tastaturnavigation).
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemSelectable"><apiName>isItemSelectable</apiName><shortdesc>
      Ermittelt, ob der Elementrenderer für ein Datenprovider-Element auswählbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element auswählbar ist.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenprovider-Element.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ermittelt, ob der Elementrenderer für ein Datenprovider-Element auswählbar ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemSelected"><apiName>isItemSelected</apiName><shortdesc>
      Ermittelt, ob der Elementrenderer für ein Datenprovider-Element ausgewählt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element ausgewählt ist.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenprovider-Element.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ermittelt, ob der Elementrenderer für ein Datenprovider-Element ausgewählt ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemVisible"><apiName>isItemVisible</apiName><shortdesc>
      Ermittelt, ob ein Element von einem Renderer angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element angezeigt wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Ein Datenprovider-Element.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ermittelt, ob ein Element von einem Renderer angezeigt wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:isRendererUnconstrained"><apiName>isRendererUnconstrained</apiName><shortdesc>
      Gibt „true“ zurück, wenn ein Elementrenderer nicht mehr vom Layout-Algorithmus der Liste platziert wird, während ein Datenänderungseffekt aufgrund eines Aufrufs der unconstrainRenderer()-Methode läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, wenn ein Elementrenderer nicht mehr vom Layout-Algorithmus der Liste platziert wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Ein Elementrenderer.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt <codeph>true</codeph> zurück, wenn ein Elementrenderer nicht mehr vom Layout-Algorithmus der Liste platziert wird, während ein Datenänderungseffekt aufgrund eines Aufrufs der <codeph>unconstrainRenderer()</codeph>-Methode läuft.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemRendererContains"><apiName>itemRendererContains</apiName><shortdesc>
      Legt fest, ob ein Renderer ein Anzeigeobjekt enthält (oder besitzt).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn der Renderer das Anzeigeobjekt enthält oder besitzt.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>renderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Renderer, der das Anzeigeobjekt enthält oder besitzt.
     
      </apiDesc></apiParam><apiParam><apiItemName>object</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Das Anzeigeobjekt, das mit dem Renderer verbunden ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt fest, ob ein Renderer ein Anzeigeobjekt enthält (oder besitzt). Eigentum bedeutet, dass das Anzeigeobjekt dem Renderer nicht untergeordnet, sondern mit ihm in anderer Weise verbunden ist. Popups sollten Eigentum des Renderers sein, damit Aktivitäten im Popup mit dem Renderer verbunden sind und nicht als Aktivität in einer anderen Komponente gesehen werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemRendererToIndex"><apiName>itemRendererToIndex</apiName><shortdesc>
      Gibt die Indexposition des Elements im Datenprovider des Elements zurück, das von diesem Elementrenderer dargestellt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Indexposition des Elements im Datenprovider.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, der das Element darstellt, für das Sie die Datenprovider-Indexposition ermitteln möchten.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die Indexposition des Elements im Datenprovider des Elements zurück, das von diesem Elementrenderer dargestellt wird. Da Elementrenderer nur für Elemente existieren, die sich in der Gruppe von anzeigbaren Zeilen befinden, können Sie diese Methode nicht für Elemente verwenden, die nicht sichtbar sind.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:itemRendererToIndices"><apiName>itemRendererToIndices</apiName><shortdesc>
      Gibt einen Point zurück, der columnIndex und rowIndex eines Elementrenderers enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Point. Die <codeph>x</codeph>-Eigenschaft ist <codeph>columnIndex</codeph> und die y-Eigenschaft ist rowIndex.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Ein Elementrenderer.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt einen Point zurück, der columnIndex und rowIndex eines Elementrenderers enthält. Da Elementrenderer nur für Elemente innerhalb der Menge anzeigbarer Zeilen erstellt werden, können Sie diese Methode nicht verwenden, um die Indizes für Elemente zu abzurufen, die nicht sichtbar sind. Außerdem werden Elementrenderer wiederverwendet, sodass die Indexpositionen, die Sie für ein Element erhalten, geändert werden können, wenn dieser Elementrenderer wiederverwendet wird, um ein anderes Element anzuzeigen. In der Regel wird diese Methode während Maus- und Tastaturvorgängen aufgerufen, wenn die von einem Elementrenderer angezeigte Datenmenge noch nicht geändert wurde.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToDataTip"><apiName>itemToDataTip</apiName><shortdesc>
      Gibt den dataTip-String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der dataTipField- und dataTipFunction-Eigenschaften anzeigen würde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Anzeigbares String-Objekt, das auf den Daten basiert.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das darzustellende Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt den dataTip-String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der dataTipField- und dataTipFunction-Eigenschaften anzeigen würde. Falls die Methode den Parameter nicht in einen String konvertieren kann, wird ein einzelnes Leerzeichen zurückgegeben.
      <p>Für Entwickler, die Unterklassen von ListBase oder untergeordneten Objekten erstellen. Von Anwendungsentwicklern nicht verwendet.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToIcon"><apiName>itemToIcon</apiName><shortdesc>
      Gibt basierend auf den iconField- und iconFunction-Eigenschaften die Klasse für ein eventuelles Symbol für ein Datenelement zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Symbol für das Element als Klassenverweis oder <codeph>null</codeph>, wenn nicht vorhanden.
      
      </apiDesc><apiType value="Class"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Element, aus dem die Symbolklasse extrahiert wird.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt basierend auf den iconField- und iconFunction-Eigenschaften die Klasse für ein eventuelles Symbol für ein Datenelement zurück. Das Feld im Element kann einen String zurückgeben, wenn dieser String den Namen einer Klasse in der Anwendung darstellt. Das Feld im Element kann auch ein String sein, der der Name einer Variablen in dem Dokument ist, die die Klasse für das Symbol enthält.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToItemRenderer"><apiName>itemToItemRenderer</apiName><shortdesc>
      Gibt einen Elementrenderer für ein gegebenes Element im Datenprovider zurück, wenn vorhanden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der Elementrenderer oder <codeph>null</codeph>, wenn das Element derzeit nicht angezeigt wird.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das Datenprovider-Element.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt einen Elementrenderer für ein gegebenes Element im Datenprovider zurück, wenn vorhanden. Da Elementrenderer nur für Elemente existieren, die sich in der Gruppe anzeigbarer Zeilen befinden, gibt diese Methode <codeph>null</codeph> zurück, wenn das Element nicht sichtbar ist. Für DataGrid gibt dies den Renderer der ersten Spalte zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Gibt den String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der Eigenschaften „labelField“ und „labelFunction“ anzeigen würde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der auf der Grundlage der Daten anzuzeigende String.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das darzustellende Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt den String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der labelField- und labelFunction-Eigenschaften anzeigen würde. Falls die Methode den Parameter nicht in einen String konvertieren kann, wird ein einzelnes Leerzeichen zurückgegeben.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:itemToUID"><apiName>itemToUID</apiName><shortdesc>
      Legt die UID für ein Datenprovider-Element fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die UID als String.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenprovider-Element.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die UID für ein Datenprovider-Element fest. Alle Elemente in einem Datenprovider müssen entweder eine eindeutige ID (Unique ID oder UID) haben oder es wird jeweils eine generiert und mit ihnen verknüpft. Dies bedeutet, dass kein Objekt und kein Skalarwert in einem Datenprovider zweimal vorkommen darf. 
     
      <p>Beispiel: Der folgende Datenprovider wird nicht unterstützt, weil der Wert „foo“ zweimal vorkommt und die UID für einen String der String selbst ist:</p>
     
      <pre>var sampleDP:Array = ["foo", "bar", "foo"]</pre>
     
      <p>Einfache dynamische Objekte können zweimal vorkommen, wenn es sich um zwei getrennte Instanzen handelt. Der folgende Code ist zulässig, weil jede Instanz eine eigene UID hat, da es sich um verschiedene Objekte handelt:</p>
     
      <pre>var sampleDP:Array = [{label: "foo"}, {label: "foo"}]</pre>
     
      <p>Beachten Sie: Der folgende Code ist nicht zulässig, weil dieselbe Instanz zweimal vorkommt.</p>
     
      <pre>
      var foo:Object = {label: "foo"};
      sampleDP:Array = [foo, foo];</pre>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:makeRowsAndColumns"><apiName>makeRowsAndColumns</apiName><shortdesc>
      Erstellen von genügend Zeilen und Spalten, um den Bereich zu füllen, der durch links, oben, rechts, unten beschrieben ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Point, der die erstellte Anzahl von Zeilen und Spalten enthält.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="Number"/><apiDesc>Horizontaler Offset des zu füllenden Bereichs in Pixeln.
     
      </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="Number"/><apiDesc>Vertikaler Offset des zu füllenden Bereichs in Pixeln.
     
      </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="Number"/><apiDesc>Horizontaler Offset des zu füllenden Bereichs in Pixeln (von der linken Seite der Komponente).
     
      </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="Number"/><apiDesc>Vertikaler Offset des zu füllenden Bereichs in Pixeln (von der oberen Seite der Komponente).
     
      </apiDesc></apiParam><apiParam><apiItemName>firstColumn</apiItemName><apiType value="int"/><apiDesc>Offset in <codeph>listItems</codeph> zum Speichern des ersten Renderers, der erstellt werden soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstRow</apiItemName><apiType value="int"/><apiDesc>Offset in <codeph>listItems</codeph> zum Speichern des ersten Renderers, der erstellt werden soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>byCount</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Wenn „true“, ist die <codeph>rowsNeeded</codeph>-Anzahl von Zeilen zu erstellen und der <codeph>bottom</codeph>-Parameter zu ignorieren.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowsNeeded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Anzahl der zu erstellenden Zeilen, wenn <codeph>byCount</codeph> „true“ ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellen von genügend Zeilen und Spalten, um den Bereich zu füllen, der durch links, oben, rechts, unten beschrieben ist. Renderer werden erstellt und in das <codeph>listItems</codeph>-Array beginnend an <codeph>(firstColumn, firstRow)(</codeph> und dann abwärts eingefügt.
     
      <p>Wenn <codeph>byCount</codeph> und <codeph>rowsNeeded</codeph> festgelegt sind, werden nur genau so viele Zeilen erstellt und die <codeph>bottom</codeph>- und <codeph>right</codeph>-Parameter ignoriert.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:measure"><apiName>measure</apiName><shortdesc>
      Berechnet die gemessene Breite und Höhe der Komponente basierend auf den Eigenschaften rowCount, columnCount, rowHeight und columnWidth.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Berechnet die gemessene Breite und Höhe der Komponente basierend auf den Eigenschaften <codeph>rowCount</codeph>, <codeph>columnCount</codeph>, <codeph>rowHeight</codeph> und <codeph>columnWidth</codeph>.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:measureHeightOfItems"><apiName>measureHeightOfItems</apiName><shortdesc>
      Misst eine Gruppe von Elementen vom Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die Summe der Höhen dieser Elemente zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Summe der Höhen der gemessenen Elemente.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Das Datenprovider-Element, bei dem die Berechnung der Höhen beginnen soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Anzahl der Elemente, die für die Berechnung der Höhen einbezogen werden sollen.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Misst eine Gruppe von Elementen vom Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die Summe der Höhen dieser Elemente zurück.
     
      <p>Diese Methode ist in der ListBase-Klasse nicht implementiert und muss in der untergeordneten Klasse implementiert werden.</p>
     
      <p>Ein negativer <codeph>index</codeph>-Wert kann verwendet werden, um anzugeben, dass die Höhenberechnung auch Kopfzeilen enthält.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:measureWidthOfItems"><apiName>measureWidthOfItems</apiName><shortdesc>
      Misst eine Gruppe von Elementen aus dem Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die höchste gefundene Breite zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das breiteste der gefundenen Elemente.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Das Datenprovider-Element, bei dem die Messung der Breite beginnen soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Die Anzahl der Elemente, die für die Messung der Breite einbezogen werden sollen.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Misst eine Gruppe von Elementen aus dem Datenprovider unter Verwendung des aktuellen Elementrenderers und gibt die höchste gefundene Breite zurück. Diese Methode wird verwendet, um die Breite der Komponente zu berechnen. Die diversen von ListBase-abgeleiteten Klassen haben leicht unterschiedliche Implementierungen. DataGrid misst seine Spalten anstelle von Datenprovider-Elementen und TileList misst nur das erste Element und nimmt an, dass alle Elemente gleich groß sind.
     
      <p>Diese Methode ist in der ListBase-Klasse nicht implementiert und muss in der untergeordneten Klasse implementiert werden.</p>
     
      <p>Ein negativer <codeph>index</codeph>-Wert kann verwendet werden, um anzugeben, dass die Breitenberechnung auch Kopfzeilen enthält.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseClickHandler"><apiName>mouseClickHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_CLICK-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_CLICK</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode ermittelt, welcher Renderer angeklickt wurde, und löst ein <codeph>ListEvent.ITEM_CLICK</codeph>-Ereignis aus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseDoubleClickHandler"><apiName>mouseDoubleClickHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_DOUBLE_CLICK-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_DOUBLE_CLICK</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode ermittelt, welcher Renderer angeklickt wurde, und löst ein <codeph>ListEvent.ITEM_DOUBLE_CLICK</codeph>-Ereignis aus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_DOWN-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_DOWN</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode findet den Renderer, auf den geklickt wurde, und bereitet den Empfang eines <codeph>MouseEvent.MOUSE_UP</codeph>-Ereignisses vor.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseEventToItemRenderer"><apiName>mouseEventToItemRenderer</apiName><shortdesc>
      Ermittelt, welcher Elementrenderer sich unter dem Mauszeiger befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Der Elementrenderer, über dem der Mauszeiger steht, oder <codeph>null</codeph>, wenn keiner vorhanden ist.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ein MouseEvent, das die Position des Mauszeigers und des Objekts enthält, über dem er steht.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ermittelt, welcher Elementrenderer sich unter dem Mauszeiger befindet. Elementrenderer können aus mehreren Mauszielen bestehen oder sichtbare Bereiche haben, die keine Mausziele sind. Diese Methode prüft sowohl die Ziele als auch die Position, um zu ermitteln, über welchem Elementrenderer der Mauszeiger aus der Perspektive des Benutzers steht, weil diese von den Informationen abweichen kann, die vom Mausereignis übergeben wurden.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseMoveHandler"><apiName>mouseMoveHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_MOVE-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_MOVE</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode wartet auf eine Bewegung, die den Beginn eines Drag&amp;Drop-Vorgangs darstellt und sendet ein <codeph>DragEvent.DRAG_START</codeph>-Ereignis. Sie prüft auch, ob der Mauszeiger über einem nicht als Ziel ausgewiesenen Bereich eines Renderers steht, damit Flex versuchen kann, es so aussehen zu lassen, als ob dieser Renderer das Ziel wäre.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseOutHandler"><apiName>mouseOutHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_OUT-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_OUT</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode ermittelt, welchen Renderer der Mauszeiger verlassen hat, und entfernt die Hervorhebung.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseOverHandler"><apiName>mouseOverHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_OVER-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_OVER</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode ermittelt, über welchem Renderer der Mauszeiger steht, und zeigt den Renderer hervorgehoben an.
     
      <p>Die Listenklassen rufen dies auch von einem <codeph>MouseEvent.MOUSE_MOVE</codeph>-Ereignis ab. Dieses Ereignis wird verwendet, um eine Bewegung in nicht als Ziel ausgewiesenen Bereichen der Renderer und in den Füllbereichen rund um die Renderer zu erkennen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc>
      Verarbeitet MouseEvent.MOUSE_DOWN-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>MouseEvent.MOUSE_DOWN</codeph>-Ereignisse von Mauszielen, die in der Liste enthalten sind, einschließlich der Renderer. Diese Methode findet den Renderer, auf den geklickt wurde, und bereitet den Empfang eines <codeph>MouseEvent.MOUSE_UP</codeph>-Ereignisses vor.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseWheelHandler"><apiName>mouseWheelHandler</apiName><shortdesc>
      Verarbeitet mouseWheel-Ereignisse, indem die Bildlaufpositionen verändert werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das MouseEvent-Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>mouseWheel</codeph>-Ereignisse, indem die Bildlaufpositionen verändert werden. Dies ist eine Kopie der Version in der ScrollControlBase-Klasse, die modifiziert wurde, um die horizontalScrollPosition-Eigenschaft zu ändern, wenn das Ziel horizontal läuft.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase/mouseWheelHandler()"><linktext>mx.core.ScrollControlBase.mouseWheelHandler()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveIndicatorsHorizontally"><apiName>moveIndicatorsHorizontally</apiName><shortdesc>
      Auswahl- und Hervorhebungs-Indikatoren horizontal verschieben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID für die Suche nach den Indikatoren.
      </apiDesc></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/><apiDesc>Die Distanz, über die die horizontale Verschiebung erfolgt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Auswahl- und Hervorhebungs-Indikatoren horizontal verschieben.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveIndicatorsVertically"><apiName>moveIndicatorsVertically</apiName><shortdesc>
      Auswahl- und Hervorhebungs-Indikatoren vertikal verschieben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID für die Suche nach den Indikatoren.
      </apiDesc></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/><apiDesc>Die Distanz, über die die vertikale Verschiebung erfolgt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Auswahl- und Hervorhebungs-Indikatoren vertikal verschieben.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveRowVertically"><apiName>moveRowVertically</apiName><shortdesc>
      Eine Zeile vertikal verschieben und den rowInfo-Datensatz aktualisieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Zeile.
      </apiDesc></apiParam><apiParam><apiItemName>numCols</apiItemName><apiType value="int"/><apiDesc>Die Anzahl von Spalten in der Zeile.
      </apiDesc></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/><apiDesc>Die Distanz, über die die Verschiebung erfolgt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Eine Zeile vertikal verschieben und den rowInfo-Datensatz aktualisieren.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveSelectionHorizontally"><apiName>moveSelectionHorizontally</apiName><shortdesc>
      Verschiebt die Auswahl in horizontaler Richtung, wenn der Benutzer mithilfe der Nach-links- bzw. Nach-rechts-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="uint"/><apiDesc>Die Taste, die gedrückt wurde (z. B. <codeph>Keyboard.LEFT</codeph>).
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Umschalttaste gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Strg-Taste gehalten wurde.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verschiebt die Auswahl in horizontaler Richtung, wenn der Benutzer mithilfe der Nach-links- bzw. Nach-rechts-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt. Diese Methode kann die Eigenschaften <codeph>horizontalScrollPosition</codeph>, <codeph>verticalScrollPosition</codeph> und <codeph>caretIndex</codeph> ändern sowie die <codeph>finishKeySelection()</codeph>-Methode aufrufen, um die Auswahl zu aktualisieren.
     
      <p>In ListBase nicht implementiert, weil die Standardliste nur eine Spalte hat und daher keinen horizontalen Bildlauf benötigt.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveSelectionVertically"><apiName>moveSelectionVertically</apiName><shortdesc>
      Verschiebt die Auswahl in vertikaler Richtung, wenn der Benutzer mithilfe der Nach-oben- bzw. Nach-unten-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="uint"/><apiDesc>Die Taste, die gedrückt wurde (z. B. <codeph>Keyboard.DOWN</codeph>).
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Umschalttaste gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Drücken der Taste auf der Tastatur die Strg-Taste gehalten wurde.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verschiebt die Auswahl in vertikaler Richtung, wenn der Benutzer mithilfe der Nach-oben- bzw. Nach-unten-Taste sowie in Verbindung mit der Umschalt- und Strg-Taste Elemente auswählt. Diese Methode kann die Eigenschaften <codeph>horizontalScrollPosition</codeph>, <codeph>verticalScrollPosition</codeph> und <codeph>caretIndex</codeph> ändern sowie die <codeph>finishKeySelection()</codeph>-Methode aufrufen, um die Auswahl zu aktualisieren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:prepareDataEffect"><apiName>prepareDataEffect</apiName><shortdesc>
      Bereitet den Dateneffekt für das Sammlungsereignis vor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ce</apiItemName><apiOperationClassifier>mx.events:CollectionEvent</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
      Bereitet den Dateneffekt für das Sammlungsereignis vor.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:purgeItemRenderers"><apiName>purgeItemRenderers</apiName><shortdesc>
      Wird von der updateDisplayList()-Methode aufgerufen, um bestehende Elementrenderer zu entfernen und diverse Cache-Strukturen zu bereinigen, wenn sich der Renderer ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird von der <codeph>updateDisplayList()</codeph>-Methode aufgerufen, um bestehende Elementrenderer zu entfernen und diverse Cache-Strukturen zu bereinigen, wenn sich der Renderer ändert.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:reKeyVisibleData"><apiName>reKeyVisibleData</apiName><shortdesc>
      Aktualisiert die Schlüssel in der visibleData-Hash-Tabelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Aktualisiert die Schlüssel in der visibleData-Hash-Tabelle.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:removeDataEffectItem"><apiName>removeDataEffectItem</apiName><shortdesc>
      
      Entfernt einen Elementrenderer, wenn ein Datenänderungseffekt läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Der Elementrenderer, der aus dem Layout des Steuerelements entfernt werden soll.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Entfernt einen Elementrenderer, wenn ein Datenänderungseffekt läuft. Der Elementrenderer muss mit Daten übereinstimmen, die bereits aus der Datenprovider-Sammlung entfernt wurden. Diese Funktion wird von einem <codeph>RemoveItemAction</codeph>-Effekt als Teil eines Datenänderungseffekts aufgerufen, um den Punkt festzulegen, an dem ein Datenelement vom Steuerelement über einen Elementrenderer nicht mehr angezeigt wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:removeFromRowArrays"><apiName>removeFromRowArrays</apiName><shortdesc>
      Entfernt eine Zeile aus den Arrays, die Verweise auf die Zeile speichern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Zeile.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt eine Zeile aus den Arrays, die Verweise auf die Zeile speichern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:removeIndicators"><apiName>removeIndicators</apiName><shortdesc>
      Entfernt Auswahlhervorhebungen und andere damit verbundene Grafikeffekte für ein gegebenes Element im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID des Datenprovider-Elements.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt Auswahlhervorhebungen und andere damit verbundene Grafikeffekte für ein gegebenes Element im Datenprovider.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:restoreRowArrays"><apiName>restoreRowArrays</apiName><shortdesc>
      Entfernt die erforderliche Anzahl von Zeilen vom Anfang der Arrays, die Verweise auf die Zeilen speichern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>modDeltaPos</apiItemName><apiType value="int"/><apiDesc>Die Anzahl der zu entfernenden Zeilen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt die erforderliche Anzahl von Zeilen vom Anfang der Arrays, die Verweise auf die Zeilen speichern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:scrollHorizontally"><apiName>scrollHorizontally</apiName><shortdesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Die neue Bildlaufposition.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Die Änderung der Position. Dieser Wert ist immer eine positive Zahl.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn die Bildlaufposition kleiner wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.
     
      <p>Die Listenklassen versuchen, den Bildlauf zu optimieren, wenn die Bildlaufposition um einen Wert verändert wird, der niedriger ist als die Anzahl sichtbarer Zeilen. In dieser Situation bleiben einige Zeilen unverändert und müssen nur bewegt werden, andere Zeilen werden entfernt und neue Zeilen werden hinzugefügt. Wenn die Bildlaufposition zu stark verändert wird, werden alle alten Zeilen entfernt und neue Zeilen hinzugefügt, indem die <codeph>makeRowsAndColumns()</codeph>-Methode für den gesamten sichtbaren Bereich aufgerufen wird.</p>
     
      <p>In ListBase nicht implementiert, weil die Standardliste nur eine Spalte hat und daher keinen horizontalen Bildlauf benötigt.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:scrollPositionToIndex"><apiName>scrollPositionToIndex</apiName><shortdesc>
      Gibt die Datenprovider-Indexposition für das Element in der ersten sichtbaren Zeile und Spalte für die gegebenen Bildlaufpositionen zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die DatenproviderIndex-Indexposition.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>horizontalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Der <codeph>horizontalScrollPosition</codeph>-Eigenschaftwert entsprechend der Bildlaufposition.
      </apiDesc></apiParam><apiParam><apiItemName>verticalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Der <codeph>verticalScrollPosition</codeph>-Eigenschaftwert entsprechend der Bildlaufposition.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die Datenprovider-Indexposition für das Element in der ersten sichtbaren Zeile und Spalte für die gegebenen Bildlaufpositionen zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:scrollToIndex"><apiName>scrollToIndex</apiName><shortdesc>
      Sorgt dafür, dass das Datenprovider-Element an der gegebenen Indexposition sichtbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn sich <codeph>verticalScrollPosition</codeph> geändert hat.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements im Datenprovider.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Sorgt dafür, dass das Datenprovider-Element an der gegebenen Indexposition sichtbar ist. Wenn das Element sichtbar ist, bleibt die <codeph>verticalScrollPosition</codeph>-Eigenschaft unverändert, auch wenn das Element nicht das erste sichtbare Element ist. Wenn das Element derzeit nicht sichtbar ist, wird die <codeph>verticalScrollPosition</codeph>-Eigenschaft geändert, um das Element zum ersten sichtbaren Element zu machen, außer wenn nicht genügend Zeilen vorhanden sind, um dies zu tun, weil der <codeph>verticalScrollPosition</codeph>-Wert durch die <codeph>maxVerticalScrollPosition</codeph>-Eigenschaft begrenzt ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:scrollVertically"><apiName>scrollVertically</apiName><shortdesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Die neue Bildlaufposition.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Die Änderung der Position. Dieser Wert ist immer eine positive Zahl.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn die Bildlaufposition kleiner wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Passt die Renderer an die Änderungen in der Bildlaufposition an.
     
      <p>Die Listenklassen versuchen, den Bildlauf zu optimieren, wenn die Bildlaufposition um einen Wert verändert wird, der niedriger ist als die Anzahl sichtbarer Zeilen. In dieser Situation bleiben einige Zeilen unverändert und müssen nur bewegt werden, andere Zeilen werden entfernt und neue Zeilen werden hinzugefügt. Wenn die Bildlaufposition zu stark verändert wird, werden alle alten Zeilen entfernt und neue Zeilen hinzugefügt, indem die <codeph>makeRowsAndColumns()</codeph>-Methode für den gesamten sichtbaren Bereich aufgerufen wird.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:seekPendingFailureHandler"><apiName>seekPendingFailureHandler</apiName><shortdesc>
      Die Standard-Fehlerprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die Daten, die den Fehler verursacht haben. 
      
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBaseSeekPending</apiOperationClassifier><apiDesc>Daten über einen Suchvorgang, der durch einen ItemPendingError-Fehler unterbrochen wurde.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standard-Fehlerprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:seekPendingResultHandler"><apiName>seekPendingResultHandler</apiName><shortdesc>
      Die Standard-Ergebnisprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Die Daten, die den Fehler verursacht haben.
      
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBaseSeekPending</apiOperationClassifier><apiDesc>Daten über einen Suchvorgang, der durch einen ItemPendingError-Fehler unterbrochen wurde.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standard-Ergebnisprozedur, wenn eine Suche aufgrund eines Seitenfehlers fehlschlägt. Diese Methode prüft, ob sie über das neueste Seitenfehlerergebnis verfügt. Wenn nicht, bleibt sie einfach untätig. Wenn ja, stellt Sie den Iterator auf die richtige Position.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:seekPositionSafely"><apiName>seekPositionSafely</apiName><shortdesc>
      Suche bis zu einer Position und erforderlichenfalls ItemPendingError-Verarbeitung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph>, wenn ItemPendingError ausgelöst wird.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index in die Sammlung.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Suche bis zu einer Position und erforderlichenfalls ItemPendingError-Verarbeitung.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:selectItem"><apiName>selectItem</apiName><shortdesc>
      Aktualisiert die Gruppe der ausgewählten Elemente, sofern der angegebene Elementrenderer angeklickt wurde und die Tastatur-Zusatztasten in dem gegebenen Zustand sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph>, wenn die Gruppe der ausgewählten Elemente geändert wurde. Wenn auf ein bereits ausgewähltes Element geklickt wird, ändert dies nicht immer die Gruppe der ausgewählten Elemente.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Der Elementrenderer, auf den geklickt wurde.
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Mausklicken die Umschalttaste auf der Tastatur gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn beim Mausklicken die Strg-Taste auf der Tastatur gehalten wurde.
      </apiDesc></apiParam><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc><codeph>true</codeph>, wenn die Grafiken für den ausgewählten Zustand mit einem Effekt eingeblendet werden sollen.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Aktualisiert die Gruppe der ausgewählten Elemente, sofern der angegebene Elementrenderer angeklickt wurde und die Tastatur-Zusatztasten in dem gegebenen Zustand sind. Diese Methode aktualisiert auch die Anzeige der Elementrenderer basierend auf ihrem aktualisierten Auswahlzustand.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:setRowCount"><apiName>setRowCount</apiName><shortdesc>
      Legt die rowCount-Eigenschaft fest, ohne die explicitRowCount-Eigenschaft, die die Zeilenanzahl permanent festlegt, ungültig zu machen oder einzustellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="int"/><apiDesc>Die Zeilenanzahl.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die <codeph>rowCount</codeph>-Eigenschaft fest, ohne die <codeph>explicitRowCount</codeph>-Eigenschaft, die die Zeilenanzahl permanent festlegt, ungültig zu machen oder einzustellen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:setRowHeight"><apiName>setRowHeight</apiName><shortdesc>
      Legt die rowHeight-Eigenschaft fest, ohne die explicitRowHeight-Eigenschaft, die die Zeilenhöhe permanent festlegt, ungültig zu machen oder einzustellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="Number"/><apiDesc>Die Zeilenhöhe in Pixeln.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die <codeph>rowHeight</codeph>-Eigenschaft fest, ohne die <codeph>explicitRowHeight</codeph>-Eigenschaft, die die Zeilenhöhe permanent festlegt, ungültig zu machen oder einzustellen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:shiftRow"><apiName>shiftRow</apiName><shortdesc>
      Versetzt eine Zeile in den Arrays, die auf Zeilen verweisen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldIndex</apiItemName><apiType value="int"/><apiDesc>Alte Indexposition in den Arrays.
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="int"/><apiDesc>Neue Indexposition in den Arrays.
      </apiDesc></apiParam><apiParam><apiItemName>numCols</apiItemName><apiType value="int"/><apiDesc>Die Anzahl von Spalten in der Zeile.
      </apiDesc></apiParam><apiParam><apiItemName>shiftItems</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn das Element tatsächlich bewegt wird. <codeph>false</codeph>, wenn nur der rowIndex des Elements geändert wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Versetzt eine Zeile in den Arrays, die auf Zeilen verweisen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:showDropFeedback"><apiName>showDropFeedback</apiName><shortdesc>
      Zeigt einen Drop-Indikator unter dem Mauszeiger, um anzuzeigen, dass ein Drag&amp;-Drop-Vorgang zulässig ist und wo die Elemente abgelegt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Ein DragEvent-Objekt, das Informationen darüber enthält, wo sich der Mauszeiger befindet.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeigt einen Drop-Indikator unter dem Mauszeiger, um anzuzeigen, dass ein Drag&amp;-Drop-Vorgang zulässig ist und wo die Elemente abgelegt werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:sumRowHeights"><apiName>sumRowHeights</apiName><shortdesc>
      Ermittelt die Höhe der angeforderten Gruppe von Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Die Gesamthöhe der Zeilen.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>startRowIdx</apiItemName><apiType value="int"/><apiDesc>Die Indexposistion der ersten Zeile.
      </apiDesc></apiParam><apiParam><apiItemName>endRowIdx</apiItemName><apiType value="int"/><apiDesc>Die Indexposistion der letzten Zeile.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ermittelt die Höhe der angeforderten Gruppe von Zeilen.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:truncateRowArrays"><apiName>truncateRowArrays</apiName><shortdesc>
      Entfernt alle verbleibenden Zeilen am Ende der Arrays, die Verweise auf die Zeilen speichern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>numRows</apiItemName><apiType value="int"/><apiDesc>Die Zeilenindexposition, ab der verkürzt wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entfernt alle verbleibenden Zeilen am Ende der Arrays, die Verweise auf die Zeilen speichern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:unconstrainRenderer"><apiName>unconstrainRenderer</apiName><shortdesc>
      
      Diese Funktion wird von einem UnconstrainItemAction-Effekt im Zuge eines Datenänderungseffekts aufgerufen, wenn die zu bestimmten Datenelementen gehörenden Elementrenderer außerhalb der normalen Positionen von Elementrenderern im Steuerelement bewegt werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Der Elementrenderer, der ein Ziel des Effekts ist.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Diese Funktion wird von einem <codeph>UnconstrainItemAction</codeph>-Effekt im Zuge eines Datenänderungseffekts aufgerufen, wenn die zu bestimmten Datenelementen gehörenden Elementrenderer außerhalb der normalen Positionen von Elementrenderern im Steuerelement bewegt werden müssen. Das Steuerelement versucht während der Dauer des Effekts nicht, den Elementrenderer zu platzieren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Fügt Elementrenderer hinzu oder entfernt sie, wenn sich die Anzahl anzeigbarer Elemente ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente in Pixeln in den Koordinaten der Komponente fest, ungeachtet des Werts der <codeph>scaleX</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln in den Koordinaten der Komponente fest, ungeachtet des Werts der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Fügt Elementrenderer hinzu oder entfernt sie, wenn sich die Anzahl anzeigbarer Elemente ändert. Aktualisiert die Elementrenderer, wenn sie sich verändert haben könnten. Wendet die Auswahl an, wenn sie programmgesteuert geändert wurde.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:updateList"><apiName>updateList</apiName><shortdesc>
      Aktualisiert alle Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Aktualisiert alle Zeilen. Der Aufruf dieser Methode kann größere Verarbeitungsleistungen erfordern, weil dadurch alle Renderer in der Liste neu gezeichnet werden und die Rückgabe erst erfolgt, wenn die Verarbeitung abgeschlossen ist.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:ListBase:protected:actualCollection"><apiName>actualCollection</apiName><shortdesc>
      Eine Kopie des Werts, der normalerweise in der „collection“-Eigenschaft gespeichert ist, die beim Ausführen von Datenänderungseffekten verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:ICollectionView</apiValueClassifier></apiValueDef><apiDesc>
      Eine Kopie des Werts, der normalerweise in der <codeph>collection</codeph>-Eigenschaft gespeichert wird, die beim Ausführen von Datenänderungseffekten verwendet wird. Dieser Wert sollte null sein, wenn ein Datenänderungseffekt läuft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:actualIterator"><apiName>actualIterator</apiName><shortdesc>
      Eine Kopie des Werts, der normalerweise in der „iterator“-Eigenschaft gespeichert wird, die beim Ausführen von Datenänderungseffekten verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Eine Kopie des Werts, der normalerweise in der <codeph>iterator</codeph>-Eigenschaft gespeichert ist, die beim Ausführen von Datenänderungseffekten verwendet wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:allowDragSelection"><apiName>allowDragSelection</apiName><shortdesc>
      Ein Flag, das anzeigt, ob eine Zieh-Auswahl aktiviert ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob eine Zieh-Auswahl aktiviert ist. Die Auswahl zum Ziehen ist die Möglichkeit, ein Element auszuwählen, indem der Mauszeiger hineingezogen wird, im Gegensatz zur normalen Auswahl, bei der die Maustaste gedrückt sein muss, während Sie den Mauszeiger über das Element führen, das Sie auswählen möchten. Dieses Merkmal wird in ComboBox-Dropdownelementen verwendet, damit die Möglichkeit besteht, die Maustaste zu drücken, während der Mauszeiger über der Dropdown-Schaltfläche steht, und dann den Mauszeiger in die Dropdownliste zu führen, um ein Element auszuwählen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:anchorBookmark"><apiName>anchorBookmark</apiName><shortdesc>
      Ein Lesezeichen für das Element, das den Anker bildet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:CursorBookmark</apiValueClassifier></apiValueDef><apiDesc>
      Ein Lesezeichen für das Element, das den Anker bildet. Mit einem Lesezeichen kann die Komponente rasch eine Position in der Sammlung der Elemente suchen. Diese Eigenschaft wird benutzt, wenn Sie eine Gruppe von Elementen zwischen dem Anker und dem Einfügezeichen oder dem hervorgehobenen Element auswählen und das ausgewählte Element nach dem Anwenden eines Sortiervorgangs oder eines Filters suchen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:anchorIndex"><apiName>anchorIndex</apiName><shortdesc>
      Der Offset des Elements im Datenprovider, der den Auswahl-Ankerpunkt darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Der Offset des Elements im Datenprovider, der den Auswahl-Ankerpunkt darstellt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:cachedItemsChangeEffect"><apiName>cachedItemsChangeEffect</apiName><shortdesc>
      Der Effekt, der abläuft, wenn Änderungen im Datenprovider für das Steuerelement eintreten, festgelegt durch den itemsChangeEffect-Stil.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>null</apiData><apiValueClassifier>mx.effects:IEffect</apiValueClassifier></apiValueDef><apiDesc>
      Der Effekt, der abläuft, wenn Änderungen im Datenprovider für das Steuerelement eintreten, festgelegt durch den itemsChangeEffect-Stil.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretBookmark"><apiName>caretBookmark</apiName><shortdesc>
      Ein Lesezeichen zum Element unter dem Einfügezeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:CursorBookmark</apiValueClassifier></apiValueDef><apiDesc>
      Ein Lesezeichen zum Element unter dem Einfügezeichen. Mit einem Lesezeichen kann die Komponente rasch eine Position in der Sammlung der Elemente suchen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretIndex"><apiName>caretIndex</apiName><shortdesc>
      Der Offset des Elements im Datenprovider, das der Auswahl-Einfügezeichenpunkt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Der Offset des Elements im Datenprovider, das der Auswahl-Einfügezeichenpunkt ist.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/caretItemRenderer"><linktext>mx.controls.listClasses.ListBase.caretItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretIndicator"><apiName>caretIndicator</apiName><shortdesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer das Einfügezeichen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer das Einfügezeichen ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretItemRenderer"><apiName>caretItemRenderer</apiName><shortdesc>
      Der Renderer für das Element unter dem Einfügezeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Der Renderer für das Element unter dem Einfügezeichen. Im Auswahlmodell befinden sich ein Anker, ein Einfügezeichen und ein hervorgehobenes Element. Bei einer Auswahl per Mausklick wird das Element unter dem Mauszeiger hervorgehoben, wenn er darüber geführt wird. Bei einem Mausklick ohne Modifizierungstaste (Umschalttaste oder Strg-Taste) wird die Gruppe der ausgewählten Elemente gelöscht, das Element unter der Hervorhebung wird ausgewählt und zum Anker. Das Einfügezeichen wird bei der Auswahl per Mausklick nicht verwendet. Wenn ein Anker vorhanden ist und die Auswahl eines anderen Elements mit gedrückter Umschalttaste erfolgt, wird die bisherige Gruppe ausgewählter Elemente gelöscht und alle Elemente zwischen dem Element und dem Anker werden ausgewählt. Bei der Auswahl mehrerer Elemente per Mausklick bei gedrückter Strg-Taste werden die einzelnen Elemente nacheinander ausgewählt, der Anker hingegen wird nicht verschoben.
     
      <p>Wenn bei der Auswahl von Elementen über die Tastatur die Pfeiltasten ohne Zusatztasten verwendet werden, wird die bisherige Auswahl gelöscht. Das neue Element wird ausgewählt und zum Anker und ein Einfügezeichen-Indikator wird rund um die hervorgehobene Auswahl angezeigt. Wenn der Benutzer die Pfeiltasten mit gedrückter Umschalttaste verwendet, wird die bisherige Auswahl gelöscht und die Elemente zwischen dem Anker und dem neuen Element werden ausgewählt. Das Einfügezeichen wandert zum neuen Objekt. Wenn Pfeiltasten mit gedrückter Strg-Taste verwendet werden, bewegt sich nur das Einfügezeichen. Der Benutzer kann die Leertaste betätigen, um ein Element unter dem Einfügezeichen an- oder abzuwählen.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretUID"><apiName>caretUID</apiName><shortdesc>
      Die UID für das Element unter dem Einfügezeichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die UID für das Element unter dem Einfügezeichen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:collection"><apiName>collection</apiName><shortdesc>
      Eine ICollectionView, die den Datenprovider darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:ICollectionView</apiValueClassifier></apiValueDef><apiDesc>
      Eine ICollectionView, die den Datenprovider darstellt. Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft festlegen, hüllt Flex den Datenprovider erforderlichenfalls ein, um die ICollectionView-Schnittstelle zu unterstützen, und definiert diese Eigenschaft mit dem Ergebnis. Die ListBase-Klasse verwendet dann diese Eigenschaft, um auf die Daten im Provider zuzugreifen. Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft abrufen, gibt Flex diesen Wert zurück.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dataEffectCompleted"><apiName>dataEffectCompleted</apiName><shortdesc>
      Ein Flag, das angibt, dass ein Datenänderungseffekt gerade abgeschlossen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, dass ein Datenänderungseffekt gerade abgeschlossen wurde. Die Komponente reagiert in der Regel, indem sie diverse interne Datenstrukturen beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf bereinigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dataItemWrappersByRenderer"><apiName>dataItemWrappersByRenderer</apiName><shortdesc>
      Ein Wörterbuch, das Elementrenderer den ItemWrappers zuordnet, die zur Bereitstellung ihrer Daten verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Ein Wörterbuch, das Elementrenderer den ItemWrappers zuordnet, die zur Bereitstellung ihrer Daten verwendet werden. Nur anwendbar, wenn ein Dateneffekt läuft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:defaultColumnCount"><apiName>defaultColumnCount</apiName><shortdesc>
      Die Standardanzahl der anzuzeigenden Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>4</apiData><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Standardanzahl der anzuzeigenden Spalten. Dieser Wert wird verwendet, wenn die Berechnung für die Anzahl der Spalten bei der Ermittlung der Spaltenzahl (columnCount) auf der Basis von Größe oder Inhalt einen Wert unter 1 ergibt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:defaultRowCount"><apiName>defaultRowCount</apiName><shortdesc>
      Die Standardanzahl der anzuzeigenden Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>4</apiData><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Standardanzahl der anzuzeigenden Zeilen. Dieser Wert wird verwendet, wenn die Berechnung für die Anzahl der Spalten bei der Ermittlung der Zeilenzahl (rowCount) auf der Basis von Größe oder Inhalt einen Wert unter 1 ergibt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitColumnCount"><apiName>explicitColumnCount</apiName><shortdesc>
      Die durch explizites Festlegen der columnCount-Eigenschaft angeforderte Spaltenanzahl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>columnCount</codeph>-Eigenschaft angeforderte Spaltenanzahl.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitColumnWidth"><apiName>explicitColumnWidth</apiName><shortdesc>
      Die durch explizites Festlegen der columnWidth-Eigenschaft angeforderte Spaltenbreite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>columnWidth</codeph>-Eigenschaft angeforderte Spaltenbreite.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitRowCount"><apiName>explicitRowCount</apiName><shortdesc>
      Die durch explizites Festlegen der rowCount-Eigenschaft angeforderte Zeilenanzahl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>rowCount</codeph>-Eigenschaft angeforderte Zeilenanzahl.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitRowHeight"><apiName>explicitRowHeight</apiName><shortdesc>
      Die durch explizites Festlegen der rowHeight-Eigenschaft angeforderte Zeilenhöhe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Die durch explizites Festlegen der <codeph>rowHeight</codeph>-Eigenschaft angeforderte Zeilenhöhe.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:factoryMap"><apiName>factoryMap</apiName><shortdesc>
      Eine Zuordnung von Elementrenderern nach Factory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Eine Zuordnung von Elementrenderern nach Factory. Diese Eigenschaft ist ein Wörterbuch, das von Elementrenderern indiziert wird, wenn die Werte IFactory sind.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:freeItemRenderers"><apiName>freeItemRenderers</apiName><shortdesc>
      Ein Stapel nicht verwendeter Elementrenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Stapel nicht verwendeter Elementrenderer. Die meisten Listenklassen rezyklieren bereits erstellte Renderer, wenn diese sich aus dem anzeigbaren Bereich hinausbewegen. Das spart Zeit beim Bildlauf. Die wiederverwendeten Renderer werden hier gespeichert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:freeItemRenderersByFactory"><apiName>freeItemRenderersByFactory</apiName><shortdesc>
      Eine Zuordnung von freien Elementrenderern nach Factory.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Eine Zuordnung von freien Elementrenderern nach Factory. Diese Eigenschaft ist ein Wörterbuch, das von Factorys indiziert wird, in denen die Werte Wörterbücher von Elementrenderern sind.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:highlightIndicator"><apiName>highlightIndicator</apiName><shortdesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer hervorgehoben ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Das DisplayObject, das die Grafik enthält, die anzeigt, welcher Renderer hervorgehoben ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:highlightItemRenderer"><apiName>highlightItemRenderer</apiName><shortdesc>
      Der Renderer, über den der Mauszeiger bewegt wird oder der unter dem Einfügezeichen liegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Der Renderer, über den der Mauszeiger bewegt wird oder der unter dem Einfügezeichen liegt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:highlightUID"><apiName>highlightUID</apiName><shortdesc>
      Die UID des Elements, über das der Mauszeiger bewegt wird oder das unter dem Einfügezeichen liegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Die UID des Elements, über das der Mauszeiger bewegt wird oder das unter dem Einfügezeichen liegt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:itemsNeedMeasurement"><apiName>itemsNeedMeasurement</apiName><shortdesc>
      Ein Flag, das anzeigt, ob die Eigenschaften columnWidth und rowHeight berechnet werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob die Eigenschaften <codeph>columnWidth</codeph> und <codeph>rowHeight</codeph> berechnet werden müssen. Diese Eigenschaft wird festgelegt, wenn ein Stil geändert wird, der sich auf die Messwerte des Renderers auswirken kann, oder wenn der Datenprovider geändert wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:itemsSizeChanged"><apiName>itemsSizeChanged</apiName><shortdesc>
      Ein Flag, das anzeigt, dass sich die Größe der Renderer möglicherweise geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, dass sich die Größe der Renderer möglicherweise geändert hat. Die Komponente reagiert normalerweise, indem Sie die Datenelemente beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf auf alle Renderer anwendet. Es wird angenommen, dass die Wiederanwendung der Elemente die Elementrenderer ungültig macht und damit eine Neuberechnung der Messwerte veranlasst.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:iterator"><apiName>iterator</apiName><shortdesc>
      Die Haupt-IViewCursor-Instanz, die verwendet wird, um Elemente aus dem Datenprovider abzurufen und die Elemente an die Renderer zu übergeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Die Haupt-IViewCursor-Instanz, die verwendet wird, um Elemente aus dem Datenprovider abzurufen und die Elemente an die Renderer zu übergeben. Am Ende einer Codesequenz muss sie immer auf das oberste sichtbare Element gesetzt werden, das angezeigt wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:iteratorValid"><apiName>iteratorValid</apiName><shortdesc>
      Ein Flag, das anzeigt, dass ein Seitenfehler aufgetreten und die Position des Iterators nicht gültig ist (d. h., dieser befindet sich nicht auf dem obersten Element, das angezeigt wird).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, dass ein Seitenfehler aufgetreten und die Position des Iterators nicht gültig ist (d. h., dieser befindet sich nicht auf dem obersten Element, das angezeigt wird). Wenn der Komponente ein Seitenfehler gemeldet wird (ein ItemPending-Fehler), stellt es <codeph>iteratorValid</codeph> auf <codeph>false</codeph> ein. Der Code, der normalerweise das Rendern von Elementen verarbeitet, prüft dieses Flag und wird erst ausgeführt, wenn die Seite mit Daten vom Server empfangen wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:keySelectionPending"><apiName>keySelectionPending</apiName><shortdesc>
      Ein Flag, das anzeigt, ob die Auswahl über die Tastatur durch einen Seitenfehler unterbrochen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob die Auswahl über die Tastatur durch einen Seitenfehler unterbrochen wurde. Die Komponente reagiert, indem sie das Rendern von Elementen unterbricht, bis die Seite mit Daten empfangen wird. Die <codeph>finishKeySelection()</codeph>-Methode wird aufgerufen, wenn die Daten der Seite empfangen werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:lastDropIndex"><apiName>lastDropIndex</apiName><shortdesc>
      Die zuletzt berechnete Indexposition, an der das gezogene Objekt dem Ablageziel hinzugefügt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Die zuletzt berechnete Indexposition, an der das gezogene Objekt dem Ablageziel hinzugefügt werden soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:lastSeekPending"><apiName>lastSeekPending</apiName><shortdesc>
      Der zuletzt durchgeführte Suchvorgang, der einen Seitenfehler bewirkt hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:ListBaseSeekPending</apiValueClassifier></apiValueDef><apiDesc>
      Der zuletzt durchgeführte Suchvorgang, der einen Seitenfehler bewirkt hat. Wenn mehrere Seitenfehler auftreten, ist nur der letzte von Interesse, weil hier der Iterator platziert und die Darstellung der Zeilen neu begonnen werden muss.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:listContent"><apiName>listContent</apiName><shortdesc>
      Ein internes Anzeigeobjekt, das allen Elementrenderern, Auswahl- und Hervorhebungsindikatoren sowie anderen Hilfsgrafiken übergeordnet ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:ListBaseContentHolder</apiValueClassifier></apiValueDef><apiDesc>
      Ein internes Anzeigeobjekt, das allen Elementrenderern, Auswahl- und Hervorhebungsindikatoren sowie anderen Hilfsgrafiken übergeordnet ist. Dies entspricht etwa <codeph>contentPane</codeph> in der Container-Klasse und wird für die Verarbeitung des Bildlaufs verwendet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:menuSelectionMode"><apiName>menuSelectionMode</apiName><shortdesc>
      Ein Flag, das anzeigt, ob eine Auswahl vom Menütyp verwendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob eine Auswahl vom Menütyp verwendet werden soll. In einem Menü wird beim Ziehen aus einem Renderer in einen anderen der neue Renderer aus- und der bisherige abgewählt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:modifiedCollectionView"><apiName>modifiedCollectionView</apiName><shortdesc>
      Die Sammlungsansicht, die temporär den früheren Datenproviderstatus beibehält, um laufende Datenänderungseffekte zu ermöglichen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:ModifiedCollectionView"/></apiValueDef><apiDesc>
      Die Sammlungsansicht, die temporär den früheren Datenproviderstatus beibehält, um laufende Datenänderungseffekte zu ermöglichen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraColumns"><apiName>offscreenExtraColumns</apiName><shortdesc>
      Die Zielanzahl der zusätzlichen Spalten von Elementrenderern, die im Layout des Steuerelements verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Zielanzahl der zusätzlichen Spalten von Elementrenderern, die im Layout des Steuerelements verwendet werden. Die Hälfte dieser Spalten wird links von den auf dem Bildschirm sichtbaren Spalten erstellt, die andere Hälfte rechts davon. In der Regel wird diese Eigenschaft indirekt eingestellt, wenn Sie die <codeph>offscreenExtraRowsOrColumns</codeph>-Eigenschaft einstellen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraColumnsLeft"><apiName>offscreenExtraColumnsLeft</apiName><shortdesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Spalten, die sich derzeit links von der äußerst linken, sichtbaren Spalte befinden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Spalten, die sich derzeit links von der äußerst linken, sichtbaren Spalte befinden. Dieser Wert ist &lt;= <codeph>offscreenExtraColumns</codeph> / 2.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraColumnsRight"><apiName>offscreenExtraColumnsRight</apiName><shortdesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Spalten, die sich derzeit rechts von der äußerst rechten, sichtbaren Spalte befinden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Spalten, die sich derzeit rechts von der äußerst rechten, sichtbaren Spalte befinden. Dieser Wert ist &lt;= <codeph>offscreenExtraColumns</codeph> / 2.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRows"><apiName>offscreenExtraRows</apiName><shortdesc>
      Die Zielanzahl der zusätzlichen Zeilen von Elementrenderern, die im Layout des Steuerelements verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Zielanzahl der zusätzlichen Zeilen von Elementrenderern, die im Layout des Steuerelements verwendet werden. Die Hälfte dieser Zeilen wird über den auf dem Bildschirm sichtbaren Zeilen erstellt, die andere Hälfte darunter. In der Regel wird diese Eigenschaft indirekt eingestellt, wenn Sie die <codeph>offscreenExtraRowsOrColumns</codeph>-Eigenschaft einstellen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRowsBottom"><apiName>offscreenExtraRowsBottom</apiName><shortdesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Zeilen, die sich derzeit unter dem untersten sichtbaren Elementrenderer befinden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Zeilen, die sich derzeit unter dem untersten sichtbaren Elementrenderer befinden. Dieser Wert ist &lt;= <codeph>offscreenExtraRows</codeph> / 2.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRowsOrColumnsChanged"><apiName>offscreenExtraRowsOrColumnsChanged</apiName><shortdesc>
      Ein Flag, das angibt, dass sich die Anzahl der Zeilen oder Spalten außerhalb des Bildschirms möglicherweise geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, dass sich die Anzahl der Zeilen oder Spalten außerhalb des Bildschirms möglicherweise geändert hat.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRowsTop"><apiName>offscreenExtraRowsTop</apiName><shortdesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Zeilen, die sich derzeit über der obersten sichtbaren Zeile befinden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl von nicht auf dem Bildschirm angezeigten Zeilen, die sich derzeit über der obersten sichtbaren Zeile befinden. Dieser Wert ist &lt;= <codeph>offscreenExtraRows</codeph> / 2. Sie wird bei der Berechnung der Beziehungen zwischen den Arrays <codeph>listItems</codeph> und <codeph>rowInfo</codeph> mit Elementen im Datenprovider (in Verbindung mit der <codeph>verticalScrollPosition</codeph>-Eigenschaft) verwendet.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:rendererChanged"><apiName>rendererChanged</apiName><shortdesc>
      Ein Flag, das eine Änderung des Renderers anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das eine Änderung des Renderers anzeigt. Die Komponente reagiert in der Regel, indem sie alle bestehenden Renderer zerstört und alle Renderer beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf neu zeichnet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:reservedItemRenderers"><apiName>reservedItemRenderers</apiName><shortdesc>
      Eine Hash-Matrix von derzeit nicht verwendeten Elementrenderern, die in naher Zukunft wieder verwendet werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Matrix von derzeit nicht verwendeten Elementrenderern, die in naher Zukunft wieder verwendet werden können. Wird beim Ausführen von Dateneffekten verwendet. Die Matrix wird durch die UID des Datenprovider-Elements indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:rowMap"><apiName>rowMap</apiName><shortdesc>
      Eine Hash-Matrix von Elementrenderern für ihr jeweiliges ListRowInfo-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Matrix von Elementrenderern für ihr jeweiliges ListRowInfo-Objekt. Das ListRowInfo-Objekt wird mit dem DisplayObject-Namen des Elementrenderers indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:runDataEffectNextUpdate"><apiName>runDataEffectNextUpdate</apiName><shortdesc>
      Ein Flag, das anzeigt, ob ein Dateneffekt eingeleitet werden soll, wenn die Anzeige das nächste Mal aktualisiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob ein Dateneffekt eingeleitet werden soll, wenn die Anzeige das nächste Mal aktualisiert wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:runningDataEffect"><apiName>runningDataEffect</apiName><shortdesc>
      Ein Flag, das anzeigt, ob derzeit ein Datenänderungseffekt läuft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob derzeit ein Datenänderungseffekt läuft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectedData"><apiName>selectedData</apiName><shortdesc>
      Eine Hash-Tabelle von ListBaseSelectionData-Objekten, die verfolgen, welche Elemente gerade ausgewählt sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von ListBaseSelectionData-Objekten, die verfolgen, welche Elemente gerade ausgewählt sind. Die Tabelle wird durch die UIDs der Elemente indiziert.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBaseSelectionData"><linktext>mx.controls.listClasses.ListBaseSelectionData</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectionIndicators"><apiName>selectionIndicators</apiName><shortdesc>
      Eine Hash-Tabelle von Auswahl-Indikatoren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von Auswahl-Indikatoren. Mit dieser Tabelle kann eine Komponente rasch die Indikatoren finden und entfernen, wenn die Gruppe der ausgewählten Elemente gelöscht wird. Die Tabelle wird durch die UID des Elements indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectionLayer"><apiName>selectionLayer</apiName><shortdesc>
      Die Ebene in listContent, auf der alle Auswahl- und Hervorhebungs-Indikatoren gezeichnet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Die Ebene in <codeph>listContent</codeph>, auf der alle Auswahl- und Hervorhebungs-Indikatoren gezeichnet werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectionTweens"><apiName>selectionTweens</apiName><shortdesc>
      Eine Hash-Tabelle von Auswahl-Tweens.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von Auswahl-Tweens. Damit kann die Komponente rasch alle laufenden Tweens finden und löschen, wenn die Gruppe von ausgewählten Elementen gelöscht wird. Die Tabelle wird durch die UID des Elements indiziert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:showCaret"><apiName>showCaret</apiName><shortdesc>
      Ein Flag, das anzeigt, ob ein Einfügezeichen angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob ein Einfügezeichen angezeigt werden soll. Diese Eigenschaft wird normalerweise auf <codeph>false</codeph> gesetzt, wenn eine Mausaktivität erkannt wird, und auf <codeph>true</codeph> zurückgesetzt, wenn die Tastatur für die Auswahl verwendet wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:unconstrainedRenderers"><apiName>unconstrainedRenderers</apiName><shortdesc>
      Eine Hash-Matrix von Elementrenderern, die nicht Gegenstand der Layout-Algorithmen der Liste sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Eine Hash-Matrix von Elementrenderern, die nicht Gegenstand der Layout-Algorithmen der Liste sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:wordWrapChanged"><apiName>wordWrapChanged</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Wert der wordWrap-Eigenschaft seit der letzten Aktualisierung der Anzeigeliste geändert wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Wert der <codeph>wordWrap</codeph>-Eigenschaft seit der letzten Aktualisierung der Anzeigeliste geändert wurde. Diese Eigenschaft wird gesetzt, wenn Sie den Wert der <codeph>wordWrap</codeph>-Eigenschaft ändern. Sie wird von der <codeph>updateDisplayList()</codeph>-Methode auf <codeph>false</codeph> zurückgesetzt. Die Komponente reagiert normalerweise, indem Sie die Datenelemente beim nächsten <codeph>updateDisplayList()</codeph>-Aufruf auf alle Renderer anwendet. Dies unterscheidet sich von itemsSizeChanged, weil es zusätzlich anzeigt, dass die erneute Anwendung der Datenelemente auf die Renderer diese nicht unbedingt entwerten muss, da die einzige Änderung in der Angabe darüber besteht, ob der Renderer die wordWrap-Eigenschaft in seine Größenberechnungen einbeziehen soll.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:allowMultipleSelection:get"><apiName>allowMultipleSelection</apiName><shortdesc>
      Ein Flag, das angibt, ob gleichzeitig mehrere Elemente ausgewählt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob gleichzeitig mehrere Elemente ausgewählt werden können. Wenn <codeph>true</codeph>, können Benutzer mehrere Elemente auswählen. Es gibt keine Option zur Sperre der Auswahl nicht nebeneinander liegender Elemente. Komplexe Standardauswahloptionen sind immer gültig (Umschalttaste-Klick, Strg-Klick).
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:columnCount:get"><apiName>columnCount</apiName><shortdesc>
      Die Anzahl der Spalten, die in einem TileList-Steuerelement angezeigt werden sollen, oder Elemente in einem HorizontalList-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl der Spalten, die in einem TileList-Steuerelement angezeigt werden sollen, oder Elemente in einem HorizontalList-Steuerelement. Für das DataGrid-Steuerelement ist dies die Anzahl der sichtbaren Spalten. <b>Hinweis</b>: Wenn diese Eigenschaft eingestellt wird, hat diese keine Auswirkung auf ein DataGrid-Steuerelement, das die Anzahl der Spalten auf der Breite des Steuerelements und den einzelnen Spaltenbreiten aufbaut.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
      Die Breite der Spalten des Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>50
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Breite der Spalten des Steuerelements. Diese Eigenschaft wird von den TileList- und HorizontalList-Steuerelementen verwendet. Sie hat keine Auswirkung auf die DataGrid-Steuerelemente, bei denen Sie die einzelnen DataGridColumn-Breiten festlegen.
      
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:data:get"><apiName>data</apiName><shortdesc>
      Das Element in dem Datenprovider, den diese Komponente rendern soll, wenn diese Komponente als Elementrenderer oder Elementeditor verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Das Element in dem Datenprovider, den diese Komponente rendern soll, wenn diese Komponente als Elementrenderer oder Elementeditor verwendet wird. Die Listenklasse legt diese Eigenschaft für jeden Renderer oder Editor fest und die Komponente zeigt die Daten an. Von ListBase abgeleitete Klassen unterstützen diese Eigenschaften für komplexe Situationen, etwa wenn eine Liste mit DataGrids oder ein DataGrid vorhanden ist, in dem eine Spalte eine Liste ist.
     
      <p>Die Listenklassen verwenden die <codeph>listData</codeph>-Eigenschaft zusätzlich zur <codeph>data</codeph>-Eigenschaft, um zu ermitteln, was angezeigt werden soll. Wenn sich die Listenklasse in einem DataGrid befindet, erwartet sie, dass die <codeph>dataField</codeph>-Eigenschaft der Spalte einer Eigenschaft in den Daten zugeordnet wird, und legt den <codeph>selectedItem</codeph>-Wert mit dieser Eigenschaft fest. Wenn sie sich in einem List- oder TileList-Steuerelement befindet, erwartet sie, dass die <codeph>labelField</codeph>-Eigenschaft der Liste einer Eigenschaft in den Daten zugeordnet wird, und legt den <codeph>selectedItem</codeph>-Wert mit dieser Eigenschaft fest. Sonst legt sie <codeph>selectedItem</codeph> mit den Daten selbst fest.</p>
     
      <p>Diese Eigenschaft nutzt den Datenprovider, legt ihn aber nicht fest. In allen Fällen müssen Sie den Datenprovider auf andere Weise festlegen.</p>
     
      <p>In MXML wird diese Eigenschaft nicht festgelegt.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Der anzuzeigende Datensatz.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Der anzuzeigende Datensatz. Mit dieser Eigenschaft können Sie die meisten Objekttypen als Datenprovider verwenden. Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft mit einem Array festlegen, wird es in eine ArrayCollection umgewandelt. Wenn Sie die Eigenschaft mit einem XML-Objekt festlegen, wird es in eine XMLListCollection mit nur einem Element umgewandelt. Wenn Sie die Eigenschaft mit einem XML-List-Objekt festlegen, wird es in eine XMLListCollection umgewandelt. Wenn Sie die Eigenschaft mit einem Objekt festlegen, das die IList- oder ICollectionView-Schnittstelle implementiert, wird das Objekt direkt verwendet.
     
      <p>Aus den Umwandlungen ergibt sich: Wenn Sie die <codeph>dataProvider</codeph>-Eigenschaft abrufen, ist sie immer eine ICollectionView-Schnittstelle und stellt daher nicht notwendigerweise den Objekttyp dar, den Sie verwendet haben, um die Eigenschaft festzulegen. Dieses Verhalten ist zu berücksichtigen, wenn Sie die Daten im Datenprovider ändern möchten: Änderungen an den Originaldaten werden möglicherweise nicht erkannt, Änderungen im ICollectionView-Objekt, das Sie von der <codeph>dataProvider</codeph>-Eigenschaft zurück erhalten, werden erkannt.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.collections.xml#ICollectionView"><linktext>mx.collections.ICollectionView</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:dataTipField:get"><apiName>dataTipField</apiName><shortdesc>
      Name des Felds in den Datenprovider-Elementen, das als Datentipp angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des Felds in den Datenprovider-Elementen, das als Datentipp angezeigt werden soll. Standardmäßig sucht das List-Steuerelement in jedem Element nach einer Eigenschaft namens <codeph>label</codeph> und zeigt sie an. Wenn allerdings die Datenobjekte keine <codeph>label</codeph>-Eigenschaft enthalten, können Sie die <codeph>dataTipField</codeph>-Eigenschaft so festlegen, dass sie eine andere Eigenschaft im Datenobjekt verwendet. Ein Beispiel wäre etwa „FullName“ bei der Anzeige von Personennamen, die aus einer Datenbank abgerufen werden.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dataTipFunction:get"><apiName>dataTipFunction</apiName><shortdesc>
      Vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Datentipps ausgeführt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Datentipps ausgeführt werden soll. Standardmäßig sucht das List-Steuerelement nach einer Eigenschaft namens <codeph>label</codeph> in jedem Datenprovider-Element und zeigt sie an. Allerdings haben einige Elemente keine <codeph>label</codeph>-Eigenschaft bzw. keine andere Eigenschaft, die Sie für die Anzeige in den Zeilen verwenden können. Als Beispiel kann ein Datensatz angeführt werden, der die Felder lastName und firstName besitzt. Sie möchten aber die vollständigen Namen anzeigen. Sie können eine <codeph>dataTipFunction</codeph> verwenden, die die entsprechenden Felder findet und einen anzeigbaren String zurückgibt. Die <codeph>dataTipFunction</codeph> ist für die Verarbeitung von Formatierungen und lokalisierten Texten sinnvoll.
     
      <p>Die dataTipFunction übernimmt ein einzelnes Argument, nämlich das Element im Datenprovider, und gibt einen String zurück, wie im folgenden Beispiel gezeigt wird:</p>
     
      <pre>myDataTipFunction(item:Object):String</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dragEnabled:get"><apiName>dragEnabled</apiName><shortdesc>
      Ein Flag, das angibt, ob Sie Elemente aus diesem Steuerelement herausziehen und auf anderen Steuerelementen ablegen können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob Sie Elemente aus diesem Steuerelement herausziehen und auf anderen Steuerelementen ablegen können. Wenn <codeph>true</codeph>, wird das Ziehen für das Steuerelement zugelassen. Wenn die <codeph>dropEnabled</codeph>-Eigenschaft ebenfalls <codeph>true</codeph> ist, können Sie Elemente in diesem Steuerelement ziehen und ablegen, um die Elemente neu anzuordnen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dragImage:get"><apiName>dragImage</apiName><shortdesc>
      Bezieht eine Instanz einer Klasse, die die Grafiken während des Drag&amp;Drop-Vorgangs anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier><apiDefaultValue>mx.controls.listClasses.ListItemDragProxy
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bezieht eine Instanz einer Klasse, die die Grafiken während des Drag&amp;Drop-Vorgangs anzeigt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dragImageOffsets:get"><apiName>dragImageOffsets</apiName><shortdesc>
      Bezieht den Offset des Ziehbilds bei Drag&amp;Drop.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Point"/></apiValueDef><apiDesc>
      Bezieht den Offset des Ziehbilds bei Drag&amp;Drop.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      Ein Flag, das anzeigt, ob Elemente aus dem Steuerelement bei einem Drag&amp;Drop-Vorgang verschoben werden können, anstatt sie nur zu kopieren. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob Elemente aus dem Steuerelement bei einem Drag&amp;Drop-Vorgang verschoben werden können, anstatt sie nur zu kopieren. Wenn <codeph>true</codeph> und die <codeph>dragEnabled</codeph>-Eigenschaft ebenfalls <codeph>true</codeph> ist, können Elemente bewegt werden. Oft sollen oder können Elemente aus dem Datenprovider nicht heraus bewegt werden. In diesem Fall sollte ein MOVE-Vorgang bei Drag&amp;Drop nicht zulässig sein.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dropEnabled:get"><apiName>dropEnabled</apiName><shortdesc>
      Ein Flag, das anzeigt, ob gezogene Elemente auf dem Steuerelement abgelegt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob gezogene Elemente auf dem Steuerelement abgelegt werden können.
     
      <p>Wenn Sie diese Eigenschaft auf <codeph>true</codeph> einstellen, akzeptiert das Steuerelement alle Datenformate und geht davon aus, dass die gezogenen Daten zum Format der Daten im Datenprovider passen. Wenn Sie das Datenformat der gezogenen Daten explizit prüfen möchten, müssen Sie mindestens ein Drag-Ereignis verarbeiten, wie beispielsweise <codeph>dragOver</codeph>, und die <codeph>preventDefault()</codeph>-Methode des DragEvents aufrufen, um die Art anzupassen, wie die Listenklasse abgelegte Daten akzeptiert.</p>
     
      <p>Wenn Sie <codeph>dropEnabled</codeph> auf <codeph>true</codeph> einstellen, ruft Flex automatisch die <codeph>showDropFeedback()</codeph>- und <codeph>hideDropFeedback()</codeph>-Methode auf, um den Drop-Indikator anzuzeigen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:iconField:get"><apiName>iconField</apiName><shortdesc>
      Der Name des Felds im Datenprovider-Objekt, der angibt, was als Symbol angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Name des Felds im Datenprovider-Objekt, der angibt, was als Symbol angezeigt werden soll. Standardmäßig versucht die Listenklasse nicht, Symbole mit Texten in den Zeilen anzuzeigen. Wenn Sie aber ein Symbolfeld angeben, können Sie die Grafik festlegen, die als Symbol in der Zeile erstellt und angezeigt wird. Diese Eigenschaft wird von DataGrid ignoriert.
     
      <p>Die Renderer suchen im Datenprovider-Objekt nach einer Eigenschaft mit dem Namen, der als iconField übergeben wurde. Wenn der Wert der Eigenschaft eine Klasse ist, wird diese Klasse instanziert und es wird erwartet, dass diese Klasse eine Instanz von IFlexDisplayObject ist. Wenn der Wert der Eigenschaft ein String ist, wird geprüft, ob eine Klasse mit diesem Namen in der Anwendung vorhanden ist. Sollte keine gefunden werden, wird nach dem Dokument mit diesem Namen gesucht und erwartet, dass diese Eigenschaft einer Klasse zugeordnet ist.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:iconFunction:get"><apiName>iconFunction</apiName><shortdesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Symbols ausgeführt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seines Symbols ausgeführt werden soll. Standardmäßig versucht die Liste nicht, Symbole mit Texten in den Zeilen anzuzeigen. Wenn Sie aber eine Symbolfunktion angeben, können Sie eine Klasse für eine Grafik festlegen, die als Symbol in der Zeile erstellt und angezeigt wird. Diese Eigenschaft wird von DataGrid ignoriert.
     
      <p>Die iconFunction übernimmt ein einzelnes Argument, nämlich das Element im Datenprovider, und gibt eine Klasse zurück, wie im folgenden Beispiel gezeigt wird:</p>
     
      <pre>iconFunction(item:Object):Class</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:itemRenderer:get"><apiName>itemRenderer</apiName><shortdesc>
      Der benutzerdefinierte Elementrenderer für das Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      Der benutzerdefinierte Elementrenderer für das Steuerelement. Sie können einen Renderer für die Ablage von Elementen, einen Inline- oder einen benutzerdefinierten Elementrenderer festlegen.
     
      <p>Welcher Elementrenderer Standardwert ist, hängt von der Komponentenklasse ab. Die Klassen TileList und HorizontalList verwenden TileListItemRenderer, die List-Klasse verwendet ListItemRenderer. Die DataGrid-Klasse verwendet DataGridItemRenderer aus DataGridColumn.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:labelField:get"><apiName>labelField</apiName><shortdesc>
      Der Name des Felds im Datenprovider-Element, das als Beschriftung angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Name des Felds im Datenprovider-Element, das als Beschriftung angezeigt werden soll. Standardmäßig sucht das List-Steuerelement in jedem Element nach einer Eigenschaft namens <codeph>label</codeph> und zeigt sie an. Wenn allerdings die Datenobjekte keine <codeph>label</codeph>-Eigenschaft enthalten, können Sie die <codeph>labelField</codeph>-Eigenschaft so festlegen, dass sie eine andere Eigenschaft im Datenobjekt verwendet. Ein Beispiel wäre etwa „FullName“ bei der Anzeige von Personennamen, die aus einer Datenbank abgerufen werden.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Eine vom Anwender definierte Funktion zur Bestimmung der Bezeichnungen einzelner Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seiner Bezeichnung ausgeführt werden soll. Standardmäßig sucht das List-Steuerelement nach einer Eigenschaft namens <codeph>label</codeph> in jedem Datenprovider-Element und zeigt sie an. Allerdings haben einige Datensätze keine <codeph>label</codeph>-Eigenschaft bzw. keine andere Eigenschaft, die Sie für die Anzeige verwenden können. Als Beispiel kann ein Datensatz angeführt werden, der die Felder lastName und firstName besitzt. Sie möchten aber die vollständigen Namen anzeigen.
     
      <p>Sie können eine <codeph>labelFunction</codeph> verwenden, die die entsprechenden Felder findet und einen anzeigbaren String zurückgibt. Die <codeph>labelFunction</codeph> ist für die Verarbeitung von Formatierungen und lokalisierten Texten sinnvoll. </p>
     
      <p>Bei den meisten Komponenten übernimmt die labelFunction ein einzelnes Argument, nämlich das Element im Datenprovider, und gibt einen String zurück.</p>
      <pre>
      myLabelFunction(item:Object):String</pre>
     
      <p>Die Methodensignatur für die Klassen DataGrid und DataGridColumn ist:</p>
      <pre>
      myLabelFunction(item:Object, column:DataGridColumn):String</pre>
     
      <p>Dabei gilt: <codeph>item</codeph> enthält das DataGrid-Elementobjekt und <codeph>column</codeph> legt die DataGrid-Spalte fest.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:listContentStyleFilters:get"><apiName>listContentStyleFilters</apiName><shortdesc>
      Die Gruppen von Stilen, die von ListBase an listContent übergeben werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die Gruppen von Stilen, die von ListBase an listContent übergeben werden.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:listData:get"><apiName>listData</apiName><shortdesc>
      
      Wenn eine Komponente als Renderer oder Editor verwendet wird, in dem Elemente abgelegt werden können, initialisiert Flex die listData-Eigenschaft der Komponente mit den zusätzlichen Daten aus dem List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      
      Wenn eine Komponente als Renderer oder Editor verwendet wird, in dem Elemente abgelegt werden können, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den zusätzlichen Daten aus dem List-Steuerelement. Die Komponente kann dann die <codeph>listData</codeph>-Eigenschaft und <codeph>data</codeph>-Eigenschaft verwenden, um die entsprechenden Informationen als Renderer oder Editor, in dem Elemente abgelegt werden können, anzuzeigen.
     
      <p>Diese Eigenschaft wird in MXML oder ActionScript nicht festgelegt. Flex legt sie fest, wenn die Komponente als Renderer oder Editor verwendet wird, in dem Elemente abgelegt werden können.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:listItems:get"><apiName>listItems</apiName><shortdesc>
      Ein Array von Arrays, das die itemRenderer-Instanzen enthält, die für die Darstellung jedes einzelnen Datenprovider-Elements verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von Arrays, das die itemRenderer-Instanzen enthält, die für die Darstellung jedes einzelnen Datenprovider-Elements verwendet werden. Dies ist ein zweidimensionales Zeilen-Haupt-Array (Array von Zeilen, die Arrays von Spalten sind).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:nullItemRenderer:get"><apiName>nullItemRenderer</apiName><shortdesc>
      Der benutzerdefinierte Elementrenderer für das Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      Der benutzerdefinierte Elementrenderer für das Steuerelement. Sie können einen Renderer für die Ablage von Elementen, einen Inline- oder einen benutzerdefinierten Elementrenderer festlegen.
     
      <p>Welcher Elementrenderer Standardwert ist, hängt von der Komponentenklasse ab. Die Klassen TileList und HorizontalList verwenden TileListItemRenderer, die List-Klasse verwendet ListItemRenderer. Die DataGrid-Klasse verwendet DataGridItemRenderer aus DataGridColumn.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:offscreenExtraRowsOrColumns:get"><apiName>offscreenExtraRowsOrColumns</apiName><shortdesc>
      Die Zielanzahl der zusätzlichen Zeilen oder Spalten von Elementrenderern, die im Layout des Steuerelements verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Zielanzahl der zusätzlichen Zeilen oder Spalten von Elementrenderern, die im Layout des Steuerelements verwendet werden. Die Hälfte dieser Zeilen/Spalten wird über oder links von den auf dem Bildschirm sichtbaren Zeilen/Spalten erstellt, die andere Hälfte darunter oder rechts davon.
     
      <p>Ob Zeilen oder Spalten erstellt werden, hängt vom Steuerelement und seinen Eigenschaften ab. Im Allgemeinen werden Zeilen verwendet, mit Ausnahme von TileBase-Komponenten, bei denen <codeph>direction</codeph> auf <codeph>TileBaseDirection.VERTICAL</codeph> festgelegt ist. In diesem Fall werden Spalten erstellt.</p>
     
      <p>Sie legen diese Eigenschaft mit einem von null verschiedenen Wert fest, hauptsächlich wenn Dateneffekte auf List- oder TileList-Steuerelemente angewendet werden. Änderungen, die das den aktuell sichtbaren Elementen entsprechende Datenprovider-Element betreffen, oder Änderungen, die das Datenprovider-Element für die angegebene Anzahl von Elementen vor oder nach den sichtbaren Elementen betreffen, lösen den Dateneffekt aus. Datenprovider-Elemente außerhalb dieses Bereichs werden von dem Dateneffekt möglicherweise nicht korrekt animiert.</p>
     
      <p>Diese Eigenschaft ist nützlich, weil Dateneffekte so funktionieren: Sie ermitteln erst ein Layout des listenbasierten Steuerelements „vorher“ und dann ein Layout „nachher“. Schließlich richten Sie die Eigenschaften des Effekts so ein, dass eine Animation vom vorherigen in den nachfolgenden Layoutstatus erfolgt. Da viele Effekte bewirken, dass derzeit nicht sichtbare Elemente sichtbar werden oder derzeit sichbare Elemente unsichtbar werden, konfiguriert diese Eigenschaft das Steuerelement so, dass die außerhalb des Bildschirmbereichs befindlichen Renderer erstellt werden, damit sie bereits existieren, wenn der Effekt abläuft. </p>
     
      <p>Ein angemessener Wert für diese Eigenschaft könnte die Anzahl der auf dem Bildschirm sichtbaren Zeilen sein. Wenn dieser Wert sehr hoch angesetzt wird, kann dies bei Verwendung eines Datenproviders mit vielen Elementen die Leistung beeinträchtigen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:rowCount:get"><apiName>rowCount</apiName><shortdesc>
      Anzahl der anzuzeigenden Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Anzahl der anzuzeigenden Zeilen. Wenn die Höhe der Komponente explizit festgelegt wurde, hat diese Eigenschaft möglicherweise keine Auswirkungen.
     
      <p>Bei einem DataGrid-Steuerelement enthält die <codeph>rowCount</codeph>-Eigenschaft die Überschriftzeile. Daher gilt: Bei einem DataGrid-Steuerelement mit 3 Hauptzeilen und einer Überschriftzeile ist die <codeph>rowCount</codeph>-Eigenschaft gleich 4.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:rowHeight:get"><apiName>rowHeight</apiName><shortdesc>
      Die Höhe der Zeilen in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Höhe der Zeilen in Pixeln. Alle Zeilen haben dieselbe Höhe, außer wenn die <codeph>variableRowHeight</codeph>-Eigenschaft <codeph>true</codeph> ist. Wenn nicht festgelegt, basiert die Zeilenhöhe auf der Schriftgröße und anderen Eigenschaften des Renderers.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:rowInfo:get"><apiName>rowInfo</apiName><shortdesc>
      Ein Array von ListRowInfo-Objekten, die Zeilenhöhen und andere Verfolgungsinformationen für die Zeilen in der listItems-Eigenschaft zwischenspeichern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von ListRowInfo-Objekten, die Zeilenhöhen und andere Verfolgungsinformationen für die Zeilen in der listItems-Eigenschaft zwischenspeichern.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectable:get"><apiName>selectable</apiName><shortdesc>
      Ein Flag, das angibt, ob die Liste ausgewählte Elemente als ausgewählt anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob die Liste ausgewählte Elemente als ausgewählt anzeigt. Wenn <codeph>true</codeph>, unterstützt das Steuerelement die Auswahl. Die Menu-Klasse, deren Unterklassen ListBase diese Eigenschaft standardmäßig auf <codeph>false</codeph> einstellt, weil sie das ausgewählte Menüelement nicht wie ausgewählt anzeigt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Die Indexposition im Datenprovider des ausgewählten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition im Datenprovider des ausgewählten Elements.
     
      <p>Der Standardwert ist -1 (kein ausgewähltes Element).</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedIndices:get"><apiName>selectedIndices</apiName><shortdesc>
      Ein Array von Indizes im Datenprovider der ausgewählten Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Array von Indizes im Datenprovider der ausgewählten Elemente. Die Elemente sind nicht in umgekehrter Reihenfolge der Benutzerauswahl.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      Ein Verweis auf das ausgewählte Element im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Verweis auf das ausgewählte Element im Datenprovider.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedItems:get"><apiName>selectedItems</apiName><shortdesc>
      Ein Array von Verweisen auf die ausgewählten Elemente im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Array von Verweisen auf die ausgewählten Elemente im Datenprovider. Die Elemente sind nicht in umgekehrter Reihenfolge der Benutzerauswahl.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedItemsCompareFunction:get"><apiName>selectedItemsCompareFunction</apiName><shortdesc>
      Eine Funktion zum Vergleichen von Elementen in der selectedItems-Eigenschaft mit Elementen im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Eine Funktion zum Vergleichen von Elementen in der <codeph>selectedItems</codeph>-Eigenschaft mit Elementen im Datenprovider. Bei einer Übereinstimmung geht das Element im Datenprovider zur Auswahl über. Standardmäßig, oder wenn <codeph>selectedItemsCompareFunction</codeph> auf <codeph>null</codeph> gesetzt ist, wird die standardmäßige Vergleichsfunktion verwendet, die eine strikte Gleichheit (===) verwendet. Beachten Sie, dass in früheren Flex-Versionen eine einfache Gleichheit (==) verwendet wurde, sodass in einigen Fällen ein unterschiedliches Verhalten auftreten kann. Eine allgemeine Vergleichsfunktion kann einfach UIDs von Objekten vergleichen oder bestimmte Eigenschaftenübereinstimmungen testen.
     
      <p>Die Vergleichsfunktion enthält zwei Argumente. Das erste Argument ist das Objekt im Datenprovider. Das zweite Argument ist ein Objekt in der <codeph>selectedItems</codeph>-Eigenschaft. Die Funktion gibt <codeph>true</codeph> zurück, wenn das Datenprovider-Element ausgewählt werden soll.</p>
     
      <pre>
      myCompareFunction(itemInDataProvider:Object, itemInSelectedItems):Boolean</pre>
     
      <p>Der Standardwert ist <codeph>null</codeph>, der eine strikte Gleichheit verwendet.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:showDataTips:get"><apiName>showDataTips</apiName><shortdesc>
      Ein Flag, das anzeigt, ob Datentipps für den Text in den Zeilen angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob Datentipps für den Text in den Zeilen angezeigt werden. Wenn <codeph>true</codeph>, werden Datentipps angezeigt. Datentipps sind QuickInfo-Informationen, die den Text anzeigen, der zu lang für die Zeile ist. Wenn Sie eine dataTipFunction festlegen, werden Datentipps angezeigt, auch wenn der Text zu lang für die Zeile ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:value:get"><apiName>value</apiName><shortdesc>
      Das ausgewählte Element oder das Daten- oder Labelfeld des ausgewählten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Das ausgewählte Element oder das Daten- oder Labelfeld des ausgewählten Elements. Wenn das ausgewählte Feld eine Zahl oder ein String ist, ist der Wert das Element. Wenn das Element ein Objekt ist, ist der Wert die data-Eigenschaft, wenn eine solche existiert, oder die label-Eigenschaft, wenn eine solche existiert.
     
      <p>Hinweis: <codeph>selectedItem</codeph> ist in den meisten Fällen zu bevorzugen. Diese Eigenschaft wird für die Rückwärtskompatibilität mit älteren Anwendungen bereitgestellt.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:variableRowHeight:get"><apiName>variableRowHeight</apiName><shortdesc>
      Ein Flag, das angibt, ob die einzelnen Zeilen unterschiedliche Höhen aufweisen können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob die einzelnen Zeilen unterschiedliche Höhen aufweisen können. Diese Eigenschaft wird von TileList und HorizontalList ignoriert. Wenn <codeph>true</codeph>, können einzelne Zeilen unterschiedliche Höhenwerte aufweisen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:visibleData:get"><apiName>visibleData</apiName><shortdesc>
      Eine Hash-Tabelle von Datenprovider-Elementrenderern, die derzeit im Sichtfeld sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Eine Hash-Tabelle von Datenprovider-Elementrenderern, die derzeit im Sichtfeld sind. Die Tabelle wird durch die UID des Datenprovider-Elements indiziert und wird verwendet, damit der für die Anzeige eines bestimmten Elements verwendete Renderer rasch abgerufen wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:wordWrap:get"><apiName>wordWrap</apiName><shortdesc>
      Ein Flag, das angibt, ob Text in einer Zeile umbrochen werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob Text in einer Zeile umbrochen werden soll. Wenn <codeph>true</codeph>, wird der Wortumbruch für Text in den Zeilen aktiviert. Wirkt sich nur aus, wenn die <codeph>variableRowHeight</codeph>-Eigenschaft ebenfalls <codeph>true</codeph> ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:allowItemSizeChangeNotification:set"><apiName>allowItemSizeChangeNotification</apiName><shortdesc>
      Wenn „false“, können Renderer die Größe von List nicht entwerten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Wenn „false“, können Renderer die Größe von List nicht entwerten. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBaseSeekPending"><apiName>ListBaseSeekPending</apiName><shortdesc>
  Ein Objekt, das Daten über einen Suchvorgang speichert, der durch einen ItemPendingError-Fehler unterbrochen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ein Objekt, das Daten über einen Suchvorgang speichert, der durch einen ItemPendingError-Fehler unterbrochen wurde.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.collections.errors.xml#ItemPendingError"><linktext>mx.collections.errors.ItemPendingError</linktext></link><link href="mx.controls.listClasses.xml#ListBase/lastSeekPending"><linktext>mx.controls.listClasses.ListBase.lastSeekPending</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListBaseSeekPending:ListBaseSeekPending"><apiName>ListBaseSeekPending</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>bookmark</apiItemName><apiOperationClassifier>mx.collections:CursorBookmark</apiOperationClassifier><apiDesc>Das Lesezeichen, das beim Suchvorgang verwendet wurde.
	  </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="int"/><apiDesc>Der Offset vom Lesezeichen, das das Ziel des Suchvorgangs war.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Konstruktor.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListBaseSeekPending:bookmark"><apiName>bookmark</apiName><shortdesc>
	  Das Lesezeichen, das beim Suchvorgang verwendet wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.collections:CursorBookmark</apiValueClassifier></apiValueDef><apiDesc>
	  Das Lesezeichen, das beim Suchvorgang verwendet wurde.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseSeekPending:offset"><apiName>offset</apiName><shortdesc>
	  Der Offset vom Lesezeichen, das das Ziel des Suchvorgangs war.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Der Offset vom Lesezeichen, das das Ziel des Suchvorgangs war.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:IListItemRenderer"><apiName>IListItemRenderer</apiName><shortdesc>
  Elementrenderer und Elementeditoren für Listenkomponenten müssen die IListItemRenderer-Schnittstelle implementieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseInterface>mx.core:IFlexDisplayObject</apiBaseInterface><apiBaseInterface>mx.managers:ILayoutManagerClient</apiBaseInterface><apiBaseInterface>mx.styles:ISimpleStyleClient</apiBaseInterface><apiBaseInterface>mx.core:IUIComponent</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Elementrenderer und Elementeditoren für Listenkomponenten müssen die IListItemRenderer-Schnittstelle implementieren. Die IListItemRenderer-Schnittstelle ist eine Gruppe einer Reihe anderer Schnittstellen. Sie definiert keine neuen Klassenmethoden oder Eigenschaften. 
 
  <p>Die Schnittstellengruppe umfasst: IDataRenderer, IFlexDisplayObject, ILayoutManagerClient, ISimpleStyleClient, IUIComponent. Die UIComponent-Klasse implementiert alle diese Schnittstellen,. mit Ausnahme der IDataRenderer-Schnittstelle. Daher gilt: Wenn Sie einen benutzerdefinierten Elementrenderer oder Elementeditor als Unterklasse derUIComponent-Klasse erstellen, brauchen Sie nur die IDataRenderer-Schnittstelle zu implementieren und können dann der Klassendefinition hinzufügen, dass die Klasse IDataRenderer und IListItemRenderer implementiert.</p>
 
 <p>IListItemRenderers sind im Allgemeinen für die Anzeige eines bestimmten Felds aus dem Datenprovider-Element vorgesehen und können nicht in anderen DataGrid-Spalten oder in anderen Listen mit anderen Feldern wiederverwendet werden. Wenn Sie einen Renderer erstellen möchten, der wiederverwendet werden kann, können sie auch IDropInListItemRenderer implementieren. Dann übergibt die Liste mehr Daten an den Renderer, sodass der Renderer mit verschiedenen Datenfeldern wiederverwendet werden kann.</p>
 
  <p>Elementrenderer und Elementeditoren erhalten Daten aus dem Datenprovider einer Listenklasse über die IDataRenderer-Schnittstelle. Renderer und Editoren, die die IDropInListItemRenderer-Schnittstelle implementieren, erhalten andere Iinformationen aus der Listenklasse. Der Elementrenderer oder Elementeditor verwendet eine Information oder beide Informationen, um die Daten anzuzeigen.</p>
 
  <p>Die Renderer und Editoren werden oft wiederverwendet. Nachdem sie erstellt wurden, können sie einfach wiederverwendet werden, indem sie neue Daten und optional eine <codeph>listData</codeph>-Eigenschaft erhalten. Daher müssen Sie in Ihrer Implementierung darauf achten, dass Komponenteneigenschaften nicht unbedingt ihre Anfangs- oder Standardwerte enthalten.</p>
  
  </apiDesc></apiClassifierDetail></apiClassifier></apiPackage>