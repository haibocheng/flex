<?xml version="1.0"?>
<apiPackage id="mx.controls"><apiName>mx.controls</apiName><apiDetail/><apiClassifier id="mx.controls:ProgressBarLabelPlacement"><apiName>ProgressBarLabelPlacement</apiName><shortdesc>
  Die ProgressBarLabelPlacement-Klasse definiert die Werte für die labelPlacement-Eigenschaft der ProgressBar-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ProgressBarLabelPlacement-Klasse definiert die Werte für die <codeph>labelPlacement</codeph>-Eigenschaft der ProgressBar-Klasse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarLabelPlacement:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
	  Legt fest, dass die Beschriftung unterhalb der Fortschrittsleiste angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung unterhalb der Fortschrittsleiste angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:CENTER"><apiName>CENTER</apiName><shortdesc>
	  Legt fest, dass die Beschriftung innerhalb der Fortschrittsleiste angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>center</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung innerhalb der Fortschrittsleiste angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:LEFT"><apiName>LEFT</apiName><shortdesc>
	  Legt fest, dass die Beschriftung links neben der Fortschrittsleiste angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung links neben der Fortschrittsleiste angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  Legt fest, dass die Beschriftung rechts neben der Fortschrittsleiste angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung rechts neben der Fortschrittsleiste angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:TOP"><apiName>TOP</apiName><shortdesc>
	  Legt fest, dass die Beschriftung oberhalb der Fortschrittsleiste angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung oberhalb der Fortschrittsleiste angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TextArea"><apiName>TextArea</apiName><shortdesc>
  Das TextArea-Steuerelement ist ein mehrzeiliges Textfeld mit einem Rahmen und optionalen Bildlaufleisten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Alternative owner="mx.controls:TextArea" replacement="spark.components.TextArea" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:TextArea" playerVersion="Flash9" type="uint">
<description>
  Farbe der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der oberen Rahmenlinie der Komponente und der oberen Kante ihres Inhaltsbereichs.
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der unteren Rahmenlinie der Komponente und der unteren Kante ihres Inhaltsbereichs.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TextArea&gt;</code> tag inherits the attributes
  of its superclass and adds the following attributes:</p>
 
  <pre>
  &lt;mx:TextArea
    <b>Properties</b>
    condenseWhite="false|true"
    data="undefined"
    displayAsPassword="false|true"
    editable="true|false"
    horizontalScrollPolicy="auto|on|off"
    horizontalScrollPosition="0"
    htmlText="null"
    imeMode="null"
    length="0"
    listData="null"
    maxChars="0"
    restrict="null"
    selectionBeginIndex="0"
    selectionEndIndex="0"
    styleSheet="null"
    text=""
    textHeight="<i>height of text</i>" [read-only]
    textWidth="<i>width of text</i>" [read-only]
    verticalScrollPolicy="auto|on|off"
    verticalScrollPosition="0"
    wordWrap="true|false"
    &nbsp;
    <b>Styles</b>
    disabledColor="0xAAB3B3"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    paddingLeft="0""
    paddingRight="0""
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:ScrollControlBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Beim TextArea-Steuerelement handelt es sich um ein mehrzeiliges Textfeld mit einem Rahmen und optionalen Bildlaufleisten. Das TextArea-Steuerelement unterstützt die HTML-Wiedergabemöglichkeiten von Flash Player und AIR.
 
  <p>Wenn Sie das TextArea-Steuerelement deaktivieren, zeigt es seinen Inhalt in der Farbe an, welche im <codeph>disabledColor</codeph>-Stil festgelegt wurde. Sie können das TextArea-Steuerelement auch auf schreibgeschützt setzen, um das Verändern des Texts zu verhindern. Um statt des Eingabetexts Sternchen anzuzeigen, stellen Sie die <codeph>displayAsPassword</codeph>-Eigenschaft von TextArea ein.</p>
 
  <p>Das TextArea-Steuerelement verfügt über die folgenden Größeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breite: 160 Pixel; Höhe: 44 Pixel</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>10.000 mal 10.000 Pixel</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextAreaExample.mxml"><swfblock conref="examples/TextAreaExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label.</linktext></link><link href="mx.controls.xml#Text"><linktext>mx.controls.Text</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange.</linktext></link></related-links><adobeApiEvent id="mx.controls:TextArea_flash.events.TextEvent.TEXT_INPUT_textInput"><apiName>textInput</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer im Steuerelement Text eingibt, löscht oder einfügt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.TEXT_INPUT</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer im Steuerelement Text eingibt, löscht oder einfügt. Es wird kein Ereignis ausgelöst, wenn der Benutzer die Entf- oder die Rücktaste drückt.
 
  <p>Obwohl der Standardwert der <codeph>TextEvent.bubbles</codeph>-Eigenschaft <codeph>true</codeph> ist, löst dieses Steuerelement das Ereignis aus, wenn die <codeph>TextEvent.bubbles</codeph>-Eigenschaft den Wert <codeph>false</codeph> hat.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_flash.events.TextEvent.LINK_link"><apiName>link</apiName><shortdesc> 
  Wird ausgelöst, wenn ein Benutzer einen Hyperlink in einem durch die htmlText-Eigenschaft definierten Text anklickt, sofern die URL mit „event:“ beginnt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.LINK</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
  Wird ausgelöst, wenn ein Benutzer einen Hyperlink in einem durch die <codeph>htmlText</codeph>-Eigenschaft definierten Text anklickt, sofern die URL mit <codeph>"event:"</codeph> beginnt. Der Rest der URL nach <codeph>"event:"</codeph> wird in der Texteigenschaft des <codeph>link</codeph>-Ereignisobjekts abgelegt.
 
  <p>Wenn Sie das <codeph>link</codeph>-Ereignis verarbeiten, wird der Hyperlink nicht automatisch ausgeführt. Sie müssen ihn aus der Ereignisprozedur heraus ausführen. Normalerweise verwenden Sie die <codeph>navigateToURL()</codeph>-Methode, um einen Hyperlink auszuführen. Dies ermöglicht das Ändern des Hyperlinks und verhindert unter Umständen sogar, dass er in Ihrer Anwendung erscheint. </p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Data-Eigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft verändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich der Text im TextArea-Steuerelement durch Benutzereingaben ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich der Text im TextArea-Steuerelement durch Benutzereingaben ändert. Dieses Ereignis tritt nicht auf, wenn Sie Datenbindung oder ActionScript-Code verwenden, um den Text zu ändern.
 
  <p>Obwohl der Standardwert der <codeph>Event.bubbles</codeph>-Eigenschaft <codeph>true</codeph> ist, löst dieses Steuerelement das Ereignis aus, wenn die<codeph>Event.bubbles</codeph>-Eigenschaft den Wert <codeph>false</codeph> hat.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TextArea:TextArea"><apiName>TextArea</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:TextArea:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      Gibt ein TextLineMetrics-Objekt zurück, welches Informationen über Textposition und Messwerte für eine Textzeile im Steuerelement enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Objekt, welches Informationen über Textposition und Abmessungen der festgelegten Textzeile im Steuerelement enthält.
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>Die auf null basierende Indexposition der Zeile, für welche die Metrik abzurufen ist. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt ein TextLineMetrics-Objekt zurück, welches Informationen über Textposition und Abmessungen einer Textzeile im Steuerelement enthält. Für den Abruf der korrekten Zahl muss die Komponente zuerst validiert werden. Wenn Sie die <codeph>text</codeph> oder <codeph>htmlText</codeph>-Eigenschaft festlegen und anschließend <codeph>getLineMetrics()</codeph> aufrufen, erhalten Sie eventuell einen falschen Wert. Sie sollten entweder auf die Überprüfung Ihres Aufrufs durch die Komponente warten oder <codeph>validateNow()</codeph> aufrufen. Dieses Verhalten unterscheidet sich von dem der flash.text.TextField-Klasse, welche den Wert unmittelbar aktualisiert.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextArea:setSelection"><apiName>setSelection</apiName><shortdesc>
      Wählt den Text in dem Bereich aus, der von den Parametern festgelegt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginIndex</apiItemName><apiType value="int"/><apiDesc>Die auf null basierende Indexposition für das erste Zeichen der Auswahl (das heißt, das erste Zeichen ist 0, das zweite Zeichen 1 usw.).
     
      </apiDesc></apiParam><apiParam><apiItemName>endIndex</apiItemName><apiType value="int"/><apiDesc>Die auf null basierende Indexposition der Position <i>nach</i> dem letzten Zeichen der Auswahl (entspricht der auf eins basierenden Indexposition des letzten Zeichens). Beispiel: Wenn der Parameter 5 ist, ist das letzte Zeichen der Auswahl das fünfte Zeichen. Wenn das TextArea-Steuerelement den Fokus erhält, ist die Auswahl sichtbar, sofern die<codeph>selectionBeginIndex</codeph>- und <codeph>selectionEndIndex</codeph>-Eigenschaften festgelegt sind.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wählt den Text in dem Bereich aus, der von den Parametern festgelegt wurde. Wenn sich das Steuerelement nicht im Fokus befindet, wird die Auswahlmarkierung erst sichtbar, wenn das Steuerelement den Fokus erhält. Wenn das Steuerelement durch Anklicken den Fokus erhält, geht jede frühere Auswahl verloren. Wenn zwei Parameterwerte übereinstimmen, handelt es sich bei der neuen Auswahl um eine Einfügemarke.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:TextArea:protected:textField"><apiName>textField</apiName><shortdesc>
      Das interne UITextField stellt den Text dieses Textbereichs dar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Das interne UITextField stellt den Text dieses Textbereichs dar.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      Gibt an, ob zusätzliche Leerräume (beispielsweise Leerzeichen oder Zeilenumbrüche) in einem TextArea-Steuerelement mit HTML-Text entfernt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob zusätzliche Leerräume (beispielsweise Leerzeichen oder Zeilenumbrüche) in einem TextArea-Steuerelement mit HTML-Text entfernt werden sollen.
      
      <p>Die Eigenschaft <codeph>condenseWhite</codeph> betrifft nur Text mit der Eigenschaft <codeph>htmlText</codeph>, nicht mit der Eigenschaft <codeph>text</codeph>. Wenn Sie Text mit der Eigenschaft <codeph>text</codeph> festlegen, wird <codeph>condenseWhite</codeph> ignoriert.</p>
     
      <p>Wenn Sie die Eigenschaft <codeph>condenseWhite</codeph> auf <codeph>true</codeph> setzen, müssen Sie HTML-Standardbefehle verwenden, beispielsweise <codeph>&lt;br></codeph> und <codeph>&lt;p></codeph>, um im Textfeld Zeilenumbrüche zu setzen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:data:get"><apiName>data</apiName><shortdesc>
      Erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Wenn Sie das Steuerelement als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwenden, schreibt Flex automatisch den aktuellen Wert des Elements in die <codeph>text</codeph>-Eigenschaft dieses Steuerelements.</p>
     
      <p>Sie stellen diese Eigenschaft nicht in MXML ein.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer.</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:displayAsPassword:get"><apiName>displayAsPassword</apiName><shortdesc>
      Zeigt an, ob dieses Steuerelement verwendet wird, um Kennwörter einzugeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3177
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue><apiTipTexts><apiTipText>Legt fest, ob statt der eigentlichen Zeichen „'“ angezeigt wird.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Zeigt an, ob dieses Steuerelement verwendet wird, um Kennwörter einzugeben. Wenn <codeph>true</codeph>, zeigt das Feld den eingegebenen Text nicht an. Stattdessen erscheint für jedes eingegebene Zeichen ein „*“.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:editable:get"><apiName>editable</apiName><shortdesc>
      Zeigt an, ob der Benutzer berechtigt ist, den Text dieses Steuerelements zu ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3176
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true;
     
      </apiDefaultValue><apiTipTexts><apiTipText>Legt fest, ob die Komponente bearbeitbar ist.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Zeigt an, ob der Benutzer berechtigt ist, den Text dieses Steuerelements zu ändern. Wenn <codeph>true</codeph>, kann der Benutzer den Text bearbeiten.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:horizontalScrollPolicy:get"><apiName>horizontalScrollPolicy</apiName><shortdesc>
      Gibt an, ob die horizontale Bildlaufleiste immer aktiviert (ScrollPolicy.ON) oder immer deaktiviert (ScrollPolicy.OFF) ist bzw. bei Bedarf aktiviert (ScrollPolicy.AUTO) wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ScrollPolicy.AUTO
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob die horizontale Bildlaufleiste immer aktiviert (<codeph>ScrollPolicy.ON</codeph>) oder immer deaktiviert (<codeph>ScrollPolicy.OFF</codeph>) ist bzw. bei Bedarf aktiviert (<codeph>ScrollPolicy.AUTO</codeph>) wird.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Gibt den vom TextArea-Steuerelement angezeigten Text an, einschließlich HTML-Markup, mit dem der Stil des Texts festgelegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den vom TextArea-Steuerelement angezeigten Text an, einschließlich HTML-Markup, mit dem der Stil des Texts festgelegt wird. Wenn Sie in dieser Eigenschaft HTML-Text festlegen, können Sie einige der HTML-Tags verwenden, die vom TextField-Steuerelement unterstützt werden.
     
      <p>Wenn Sie diese Eigenschaft einstellen, wird das HTML-Markup angewendet, nachdem die CSS-Stile für die TextArea-Instanz angewendet wurden. Wenn Sie diese Eigenschaft abrufen, enthält das HTML-Markup bereits die CSS-Stile.</p>
      
      <p>Beispiel: Wenn Sie einen String wie folgt gestalten, <codeph>"This is an example of &lt;b>bold&lt;/b> markup"</codeph>, erscheint der Text „This is an example of <b>bold</b> markup“ im Textbereich mit den normalen CSS-Stilen. Außerdem erscheint das Wort „bold“ fett formatiert, weil das <codeph>&lt;b></codeph>-Markup verwendet wurde.</p>
     
      <p>HTML-Markups verwenden Zeichen wie z. B. „&lt;“ und „>“, welche eine besondere Bedeutung in XML (und somit auch in MXML) besitzen. Deshalb wird ein Code wie der folgende nicht kompiliert:</p>
      
      <pre>
      &lt;mx:TextArea htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>Es gibt drei Möglichkeiten dieses Problem zu umgehen.</p>
      
      <ul>
      
      <li>
      
      <p>Legen Sie die <codeph>htmlText</codeph>-Eigenschaft einer ActionScript-Methode fest, die als <codeph>initialize</codeph>-Prozedur aufgerufen wird:</p>
      
      <pre>
      &lt;mx:TextArea id="myTextArea" initialize="myTextArea_initialize()"/>
      </pre>
      
      <p>dabei liegt die <codeph>myTextArea_initialize</codeph>-Methode in einem CDATA-Abschnitt des Skripts:</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myTextArea_initialize():void {
          myTextArea.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>Dies ist die einfachste Möglichkeit, da das HTML-Markup leicht lesbar bleibt. Beachten Sie, dass Sie TextArea eine <codeph>id</codeph> zuweisen müssen, um in der <codeph>initialize</codeph>-Prozedur darauf verweisen zu können.</p>
      
      </li>
      
      <li>
      
      <p>Legen Sie die <codeph>htmlText</codeph>-Eigenschaft fest, indem Sie ein untergeordnetes Tag bei einem CDATA-Abschnitt verwenden. Ein CDATA-Abschnitt in XML enthält Zeichendaten, bei denen „&lt;“ und „>“ keine besondere Bedeutung erhalten.</p>
      
      <pre>
      &lt;mx:TextArea>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:TextArea/>
      </pre>
      
      <p>Sie müssen die <codeph>htmlText</codeph>-Eigenschaft als untergeordnetes Tag und nicht als Attribut des <codeph>&lt;mx:TextArea></codeph>-Tags schreiben, da in XML keine CDATA für Attributwerte zugelassen sind. Beachten Sie, dass das Markup zwar lesbar ist, der CDATA-Abschnitt diesen Ansatz jedoch komplizierter macht.</p>
      
      </li>
      
      <li>
      
      <p>Verwenden Sie ein <codeph>hmtlText</codeph>-Attribut, in welchem die HTML-Markupzeichen „&lt;“ und „>“ im Attributwert anstatt der XML-„Entitäten“ <codeph>&amp;lt;</codeph> und <codeph>&amp;gt;</codeph> geschrieben werden:</p>
      
      <pre>
      &lt;mx:TextArea htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      Adobe rät von diesen Ansatz ab, da das HTML-Markup nahezu unlesbar wird.
      
      </li>
      
      </ul>
      
      <p>Wenn die <codeph>condenseWhite</codeph>-Eigenschaft <codeph>true</codeph> ist, wenn Sie die <codeph>htmlText</codeph>-Eigenschaft einstellen, werden mehrere aufeinanderfolgende Leerzeichen zusammengezogen, wie dies in HTML-basierten Browsern üblich ist. Drei Leerzeichen werden beispielsweise auf ein Leerzeichen reduziert. Der Standardwert für <codeph>condenseWhite</codeph> ist <codeph>false</codeph>, deshalb müssen Sie <codeph>condenseWhite</codeph> auf <codeph>true</codeph> setzen, um aufeinanderfolgende Leerzeichen zu reduzieren.</p>
      
      <p>Wenn Sie die <codeph>htmlText</codeph>-Eigenschaft kurz nach ihrer Einstellung abrufen, erhalten Sie den gleichen String, den Sie eingegeben haben. Wenn der LayoutManager ausgeführt wird, ändert sich der Wert jedoch, sodass er zusätzliche Markups mit den CSS-Stilen enthält.</p>
      
      <p>Das Einstellen der <codeph>htmlText</codeph>-Eigenschaft beeinflusst die <codeph>text</codeph>-Eigenschaft in mehrfacher Hinsicht. Wenn Sie die <codeph>text</codeph>-Eigenschaft kurz nach dem Einstellen der <codeph>htmlText</codeph>-Eigenschaft abrufen, erhalten Sie <codeph>null</codeph>, was anzeigt, dass der <codeph>text</codeph>, der dem neuen <codeph>htmlText</codeph> entspricht, noch nicht ermittelt wurde. Wenn der LayoutManager ausgeführt wird, ändert sich jedoch der <codeph>text</codeph>-Eigenschaftswert in einen <codeph>htmlText</codeph>-String ohne HTML-Markups. Das heißt, der Wert besteht aus den Zeichen, die im Textbereich angezeigt werden.</p>
       
      <p>Im umgekehrten Fall gilt: Wenn Sie die <codeph>text</codeph>-Eigenschaft einstellen, verliert ein früher eingestellter <codeph>htmlText</codeph> seine Bedeutung. Wenn Sie die <codeph>htmltext</codeph>-Eigenschaft kurz nach dem Einstellen der <codeph>text</codeph>-Eigenschaft abrufen, erhalten Sie <codeph>null</codeph>, was anzeigt, dass der <codeph>htmltext</codeph>, der dem neuen <codeph>text</codeph> entspricht, noch nicht ermittelt wurde. Wenn der LayoutManager ausgeführt wird, ändert sich jedoch der <codeph>htmlText</codeph>-Eigenschaftswert in den neuen Text und das HTML-Markup für die CSS-Stile.</p>
     
      <p>Um den LayoutManager sofort zu starten, können Sie die <codeph>validateNow()</codeph>-Methode für TextArea aufrufen. Beispiel: Sie stellen <codeph>htmlText</codeph> ein, rufen die <codeph>validateNow()</codeph>-Methode auf und beziehen den entsprechenden <codeph>text</codeph>, der kein HTML-Markup enthält.</p>
      
      <p>Wenn Sie sowohl die <codeph>text</codeph>- als auch die <codeph>htmlText</codeph>-Eigenschaft in ActionScript einstellen, wird die zuletzt eingestellte Eigenschaft wirksam. Sie sollten jedoch nicht beide in MXML einstellen, weil MXML nicht garantiert, dass die Eigenschaften einer Instanz in einer bestimmten Reihenfolge gesetzt werden.</p>
      
      <p>Das Einstellen der <codeph>text</codeph>- oder <codeph>htmlText</codeph>-Eigenschaft innerhalb einer Schleife ist ein schneller Vorgang, da das TextField, welches den Text darstellt, erst aktualisiert wird, wenn der LayoutManager ausgeführt wird.</p>
     
      <p>Wenn Sie versuchen, diese Eigenschaft auf <codeph>null</codeph> zu setzen, wird sie stattdessen auf einen leeren String gesetzt. Die Eigenschaft besitzt vorübergehend den Wert <codeph>null</codeph>. Dieser zeigt an, dass der <codeph>text</codeph> kürzlich eingestellt und ein entsprechender <codeph>htmlText</codeph> noch nicht ermittelt wurde.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Gibt den Modus des Eingabemethodeneditors (IME) an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
     </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den Modus des Eingabemethoden-Editors an. Mithilfe des Eingabemethodeneditors können chinesische, japanische und koreanische Schriftzeichen eingegeben werden. Flex stellt den festgelegten IME-Modus ein, wenn das Steuerelement den Fokus erhält und setzt es auf den vorherigen Wert zurück, wenn das Steuerelement den Fokus verliert.
     
      <p>Die flash.system.IMEConversionMode-Klasse definiert Konstanten für gültige Werte dieser Eigenschaft. Sie können auch <codeph>null</codeph> festlegen, um keinen IME festzulegen.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:length:get"><apiName>length</apiName><shortdesc>
      Die Anzahl der Zeichen in TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3173
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Die Anzahl der Zeichen in TextArea.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Die Anzahl der Zeichen in TextArea.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die listData-Eigenschaft der Komponente mit den passenden Daten aus dem Listensteuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem Listensteuerelement. Die Komponente kann die <codeph>listData</codeph>-Eigenschaft verwenden, um die <codeph>data</codeph>-Eigenschaft des Elementrenderers oder des Elementeditors, in dem Elemente abgelegt werden können, zu initialisieren.
     
      <p>Sie stellen diese Eigenschaften nicht in MXML oder ActionScript ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      Die maximale Anzahl an Zeichen, die ein Benutzer in einem Textfeld eingeben kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3172
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiTipTexts><apiTipText>Die maximale Anzahl an Zeichen, die der Textbereich aufnehmen kann.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Die maximale Anzahl an Zeichen, die ein Benutzer in einem Textfeld eingeben kann. Diese Eigenschaft schränkt nicht die Länge von Text ein, der durch die Einstellung der <codeph>text</codeph>- oder <codeph>htmlText</codeph>-Eigenschaft festgelegt wurde.
     
      <p>Der Standardwert 0 zeigt an, dass keine Einschränkungen vorliegen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:restrict:get"><apiName>restrict</apiName><shortdesc>
      Gibt den Zeichensatz an, der vom Benutzer im Steuerelement eingegeben kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3174
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue><apiTipTexts><apiTipText>Der Zeichensatz, der im Textbereich eingetragen werden kann.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Gibt den Satz an Zeichen an, die ein Benutzer in das Steuerelement eingeben kann. Wenn die Eigenschaft <codeph>restrict</codeph> auf <codeph>null</codeph> gesetzt ist, kann jedes beliebige Zeichen eingegeben werden. Wenn die Eigenschaft <codeph>restrict</codeph> einen leeren String enthält, kann kein Zeichen eingegeben werden. Mit dieser Eigenschaft werden nur Benutzereingaben eingeschränkt. Mit einem Skript kann jeder beliebige Text in das Textfeld gestellt werden. Wenn der Wert der <codeph>restrict</codeph>-Eigenschaft ein String von Zeichen ist, können Sie nur Zeichen des Strings in das Textfeld eingeben.
     
      <p>Flex scannt den String von links nach rechts. Sie können mithilfe eines Bindestrichs „-“ einen Zeichenbereich angeben. Wenn der String mit dem Zeichen „^“ beginnt, werden anfänglich alle Zeichen akzeptiert, aber nachfolgende Zeichen im String werden nicht in die Liste der zulässigen Zeichen aufgenommen. Wenn der String nicht mit „^“ beginnt, werden anfänglich keine Zeichen akzeptiert, aber nachfolgende Zeichen im String werden in die Liste der zulässigen Zeichen aufgenommen.</p>
     
      <p>Da in der <codeph>restrict</codeph>-Eigenschaft einige Zeichen eine besondere Bedeutung haben, müssen Sie das Backslash-Zeichen verwenden, damit die Textzeichen „-“, „ ^“ und „\“ angezeigt werden. Wenn Sie die <codeph>restrict</codeph>-Eigenschaft als Attribut in einem MXML-Tag verwenden, verwenden Sie einzelne Backslashes, wie hier gezeigt: \^\-\\. Wenn Sie <codeph>restrict</codeph> in einem ActionScript-Ausdruck einsetzen, verwenden Sie doppelte Backslashes, wie hier gezeigt: \\^\\-\\\.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:selectable:get"><apiName>selectable</apiName><shortdesc>
      Gibt an, ob der Text ausgewählt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob der Text ausgewählt werden kann. Wenn der Text auswählbar ist, können Sie den Text aus dem Steuerelement kopieren.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:selectionBeginIndex:get"><apiName>selectionBeginIndex</apiName><shortdesc>
      Der auf null basierende Zeichenindexpositionswert des ersten Zeichens in der aktuellen Auswahl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Der auf null basierende Indexwert des ersten Zeichens in der Auswahl.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Der auf null basierende Indexwert des ersten Zeichens in der aktuellen Auswahl. Das erste Zeichen ist beispielsweise 0, das zweite Zeichen 1 usw. Wenn das Steuerelement den Fokus erhält, ist die Auswahl sichtbar, sofern die <codeph>selectionBeginIndex</codeph>- und <codeph>selectionEndIndex</codeph>-Eigenschaften festgelegt sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:selectionEndIndex:get"><apiName>selectionEndIndex</apiName><shortdesc>
      Die auf null basierende Indexposition der Position nach dem letzten Zeichen der aktuellen Auswahl (entspricht der auf eins basierenden Indexposition des letzten Zeichens).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Der auf null basierende Indexpositionswert des letzten Zeichens in der Auswahl.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Die auf null basierende Indexposition der Position <i>nach</i> dem letzten Zeichen der aktuellen Auswahl (entspricht der auf eins basierenden Indexposition des letzten Zeichens). Wenn das letzte Zeichen in der Auswahl das fünfte Zeichen von vorn ist, besitzt die Eigenschaft den Wert 5. Wenn das Steuerelement den Fokus erhält, ist die Auswahl sichtbar, sofern die <codeph>selectionBeginIndex</codeph>- und <codeph>selectionEndIndex</codeph>-Eigenschaften festgelegt sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
     Ein flash.text.StyleSheet-Objekt, welches Rendervorgänge für den Text des TextArea-Steuerelements durchführen kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:StyleSheet"/><apiDefaultValue>null
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Ein flash.text.StyleSheet-Objekt, welches Rendervorgänge für den Text des TextArea-Steuerelements durchführen kann. Wird zur detaillierten Kontrolle von HTML-Stilen des Texts verwendet. Weitere Informationen finden Sie in der Dokumentation der flash.text.StyleSheet-Klasse.
    
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.StyleSheet.xml"><linktext>flash.text.StyleSheet</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:text:get"><apiName>text</apiName><shortdesc>
      Unformatierter Text, der im Steuerelement angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3179
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>Ruft TextArea-Inhalte ab oder legt sie fest.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Unformatierter Text, der im Steuerelement angezeigt wird. Das Aussehen wird von den CSS-Stilen dieses Label-Steuerelements bestimmt.
      
      <p>Alle HTML-Tags im Textstring werden ignoriert und so angezeigt, wie sie in den String geschrieben wurden. Verwenden Sie die Eigenschaft <codeph>htmlText</codeph>, um stattdessen mit HTML-Tags formatierten Text anzuzeigen. Mit der <codeph>htmlText</codeph>-Eigenschaft ersetzt HTML jeglichen Text, den Sie mit dieser Eigenschaft festgelegt haben und die <codeph>text</codeph>-Eigenschaft gibt eine Nur-Text-Version des HTML-Texts ohne HTML-Tags zurück. Weitere Informationen finden Sie im Abschnitt der <codeph>htmlText</codeph>-Eigenschaft.</p>
     
      <p>Um die Sonderzeichen spitze Klammer links „&lt;“, spitze Klammer rechts „>“ oder das Und-Zeichen „&amp;“ innerhalb des Texts verwenden zu können, schließen Sie den Text in CDATA-Tags ein. Sie können alternativ auch HTML-Zeichenentitäten für Sonderzeichen verwenden wie z. B. <codeph>&amp;lt;</codeph>.</p>
     
      <p>Wenn Sie versuchen, diese Eigenschaft auf <codeph>null</codeph> zu setzen, wird sie stattdessen auf einen leeren String gesetzt. Die <codeph>text</codeph>-Eigenschaft kann vorübergehend den Wert <codeph>null</codeph> aufweisen. Dies zeigt an, dass <codeph>htmlText</codeph> kürzlich gesetzt und der entsprechende <codeph>text</codeph>-Wert noch nicht ermittelt wurde.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      Die Höhe des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Höhe des Texts.
     
      <p>Der Wert der <codeph>textHeight</codeph>-Eigenschaft ist erst korrekt, nachdem die Komponente geprüft wurde. Wenn Sie <codeph>text</codeph> setzen und unmittelbar danach <codeph>textHeight</codeph>abfragen, erhalten Sie möglicherweise einen falschen Wert. Sie sollten warten, bis die Komponente validiert wurde oder die <codeph>validateNow()</codeph>-Methode aufrufen, bevor Sie den Wert abrufen. Dieses Verhalten unterscheidet sich von dem des flash.text.TextField-Steuerelements, welches den Wert unmittelbar aktualisiert.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      Die Breite des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Breite des Texts.
     
      <p>Der Wert der <codeph>textWidth</codeph>-Eigenschaft ist erst korrekt, nachdem die Komponente überprüft wurde. Wenn Sie <codeph>text</codeph> setzen und unmittelbar danach <codeph>textWidth</codeph>abfragen, erhalten Sie möglicherweise einen falschen Wert. Sie sollten warten, bis die Komponente validiert wurde oder die <codeph>validateNow()</codeph>-Methode aufrufen, bevor Sie den Wert abrufen. Dieses Verhalten unterscheidet sich von dem des flash.text.TextField-Steuerelements, welches den Wert unmittelbar aktualisiert.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:verticalScrollPolicy:get"><apiName>verticalScrollPolicy</apiName><shortdesc>
      Gibt an, ob die vertikale Bildlaufleiste immer aktiviert (ScrollPolicy.ON) oder immer deaktiviert (ScrollPolicy.OFF) ist bzw. bei Bedarf aktiviert (ScrollPolicy.AUTO) wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3428
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ScrollPolicy.AUTO
      </apiDefaultValue><apiTipTexts><apiTipText>Legt fest, ob die vertikale Bildlaufleiste aktiviert, deaktiviert oder auf automatische Einstellung gesetzt ist.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Gibt an, ob die vertikale Bildlaufleiste immer aktiviert ist (<codeph>ScrollPolicy.ON</codeph>) oder immer deaktiviert ist (<codeph>ScrollPolicy.OFF</codeph>) bzw. bei Bedarf aktiviert (<codeph>ScrollPolicy.AUTO</codeph>) wird.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:wordWrap:get"><apiName>wordWrap</apiName><shortdesc>
      Zeigt an, ob der Text am Ende einer Zeile automatisch umbricht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3175
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue><apiTipTexts><apiTipText>Wenn „true“, werden die Zeilen umbrochen. Wenn „false“, werden lange Zeilen abgeschnitten.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Zeigt an, ob der Text am Ende einer Zeile automatisch umbricht. Wenn <codeph>true</codeph>, wird der Text umbrochen, damit er sich, falls erforderlich, über mehrere Zeilen erstrecken kann.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:horizontalScrollPosition:set"><apiName>horizontalScrollPosition</apiName><shortdesc>
      Pixelposition des Pixels, das innerhalb des Inhaltsbereichs momentan am weitesten links angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Pixelposition des Pixels, das innerhalb des Inhaltsbereichs momentan am weitesten links angezeigt wird. (Der Inhaltsbereich enthält alle Inhalte eines Steuerelements, nicht nur den Anteil, der gerade angezeigt wird.) Diese Eigenschaft ist immer auf 0 gesetzt und ignoriert Änderungen, wenn <codeph>wordWrap</codeph> auf <codeph>true</codeph> gesetzt ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:verticalScrollPosition:set"><apiName>verticalScrollPosition</apiName><shortdesc>
      Zeilenzahl der obersten momentan angezeigten Zeichenzeile.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3181
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiTipTexts><apiTipText>Zeilenzahl der obersten momentan angezeigten Zeichenzeile.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Zeilenzahl der obersten momentan angezeigten Zeichenzeile. Der Standardwert ist 0.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:VRule"><apiName>VRule</apiName><shortdesc>
  Das VRule-Steuerelement erstellt eine einzelne vertikale Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:VRule" replacement="spark.primitives.Line" since="4.0">
	</Alternative><styles><style format="Length" inherit="yes" name="strokeWidth" owner="mx.controls:VRule" playerVersion="Flash9" type="Number">
<description>
  Die Stärke der Linie in Pixeln. 
  <ul>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 1, dann hat die Linie eine Stärke von einem Pixel.</li>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 2, dann besteht die Linie aus zwei benachbarten Linien von je einem Pixel Stärke.</li>
    <li>Wenn <codeph>strokeWidth</codeph> größer als 2, dann ist die Linie ein leeres Rechteck mit einer Kantenstärke von einem Pixel.</li>
  </ul>
  
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="strokeColor" owner="mx.controls:VRule" playerVersion="Flash9" type="uint">
<description>
  Die Farbe der Linie. 
  <ul>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 1, dann ist strokeColor die Farbe der gesamten Linie.</li>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 2, dann ist strokeColor die Farbe der linken Linie.</li>
    <li>Wenn <codeph>strokeWidth</codeph> größer als 2, dann ist strokeColor die Farbe der linken und oberen Kante des Rechtecks.</li>
  </ul>
  
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="shadowColor" owner="mx.controls:VRule" playerVersion="Flash9" type="uint">
<description>
  Die Schattenfarbe der Linie. 
  <ul>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 1, hat shadowColor keine Wirkung.</li>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 2, dann ist shadowColor die Farbe der rechten Linie.</li>
    <li>Wenn <codeph>strokeWidth</codeph> größer als 2, dann ist shadowColor die Farbe der unteren und rechten Kante des Rechtecks.</li>
  </ul>
  
  </description>
<default>0xEEEEEE
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VRule&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:VRule
    <strong>Styles</strong>
    strokeColor="0xC4CCCC"
    shadowColor="0xEEEEEE"
    strokeWidth="2"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das VRule-Steuerelement erstellt eine einzelne vertikale Linie. Normalerweise wird dieses Steuerelement verwendet, um eine Trennlinie innerhalb eines Containers zu erzeugen.
 
  <p>Das HRule-Steuerelement verfügt über die folgenden Standardeinstellungen:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Die Standardhöhe beträgt 100 Pixel, die Standardbreite ist 2 Pixel. Standardmäßig ist das VRule-Steuerelment nicht skalierbar. Stellen Sie Breite und Höhe auf Prozentwerte ein, um ein Skalieren zu ermöglichen.</entry>
        </row><row>
           <entry>strokeWidth</entry>
           <entry>2 Pixel.</entry>
        </row><row>
           <entry>strokeColor</entry>
           <entry>0xC4CCCC.</entry>
        </row><row>
           <entry>shadowColor</entry>
           <entry>0xEEEEEE.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleVRule.mxml"><swfblock conref="examples/SimpleVRule.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#HRule"><linktext>mx.controls.HRule</linktext></link></related-links><apiConstructor id="mx.controls:VRule:VRule"><apiName>VRule</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Alert"><apiName>Alert</apiName><shortdesc>
  Das Alert-Steuerelement ist ein Popupdialogfenster, welches eine Meldung, einen Titel, Schaltflächen (Kombinationen aus „OK“, „Abbrechen“, „Ja“ und „Nein“) und ein Symbol enthalten kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="titleStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die Stile für den Alert-Titeltext festlegt. 
 
  <p>Diesen Stil können Sie nur mit einem Typselektor einstellen, welcher die Stile für alle Alert-Steuerelemente in Ihrer Anwendung festlegt. Wenn Sie ihn auf eine bestimmte Instanz des Alert-Steuerelements setzen, kann es dazu kommen, dass das Steuerelement falsch skaliert wird.</p>
 
  </description>
<default>"windowStyles" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="messageStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die Stile für den Alert-Meldungstext festlegt. 
 
  <p>Diesen Stil können Sie nur mit einem Typselektor einstellen, welcher die Stile für alle Alert-Steuerelemente in Ihrer Anwendung festlegt. Wenn Sie ihn auf eine bestimmte Instanz des Alert-Steuerelements setzen, kann es dazu kommen, dass das Steuerelement falsch skaliert wird.</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="buttonStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die Stile für die Alert-Schaltflächen festlegt. 
 
  </description>
<default>"alertButtonStyle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Panel</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Alert-Steuerelement ist ein Popupdialogfenster, welches eine Meldung, einen Titel, Schaltflächen (Kombinationen aus „OK“, „Abbrechen“, „Ja“ und „Nein“) und ein Symbol enthalten kann. Das Alert-Steuerelement ist modal, das heißt, es behält den Fokus bei, bis es vom Benutzer geschlossen wird.
 
  <p>Importieren Sie die mx.controls.Alert-Klasse in Ihre Anwendung und rufen Sie die statische <codeph>show()</codeph>-Methode in ActionScript auf, um das Alert-Steuerelement anzuzeigen. Alert-Steuerelemente können nicht in MXML erstellt werden.</p>
 
  <p>Das Alert-Steuerelement wird geschlossen, wenn Sie eine Schaltfläche im Steuerelement auswählen oder die Esc-Taste drücken.</p>
 
  </apiDesc><example conref="SimpleAlert.mxml"><swfblock conref="examples/SimpleAlert.swf"/></example></apiClassifierDetail><related-links><link href="mx.managers.xml#SystemManager"><linktext>mx.managers.SystemManager</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><apiConstructor id="mx.controls:Alert:Alert"><apiName>Alert</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Alert:show"><apiName>show</apiName><shortdesc>
      Statische Methode, die das Alert-Steuerelement öffnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Ein Verweis auf das Alert-Steuerelement. 
     
      </apiDesc><apiOperationClassifier>mx.controls:Alert</apiOperationClassifier></apiReturn><apiParam><apiItemName>text</apiItemName><apiType value="String"/><apiData/><apiDesc>Textstring, der im Alert-Steuerelement angezeigt wird. Dieser Text ist innerhalb des Dialogfensters zentriert.
     
      </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiType value="String"/><apiData/><apiDesc>Der Textstring, der in der Titelleiste angezeigt wird. Dieser Text ist linksbündig.
     
      </apiDesc></apiParam><apiParam><apiItemName>flags</apiItemName><apiType value="uint"/><apiData>0x4</apiData><apiDesc>Schaltflächen, die im Alert-Steuerelement platziert werden sollen. Gültige Werte sind <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> und <codeph>Alert.NO</codeph>. Der Standardwert ist <codeph>Alert.OK</codeph>. Verwenden Sie den bitweisen OR-Operator, um mehr als eine Schaltfläche anzuzeigen. Beispiel: Durch Übergeben von <codeph>(Alert.YES | Alert.NO)</codeph> werden die Schaltflächen „Ja“ und „Nein“ angezeigt. Unabhängig von der Reihenfolge, in welcher Sie die Schaltflächen festlegen, erscheinen diese immer in folgender Reihenfolge von links nach rechts: „OK“, „Ja“, „Nein“ und „Abbrechen“.
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:Sprite"/><apiData>null</apiData><apiDesc>Objekt, demzufolge sich das Alert-Steuerelement zentriert.
     
      </apiDesc></apiParam><apiParam><apiItemName>closeHandler</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Ereignisprozedur, welche aufgerufen wird, wenn eine der Schaltflächen des Alert-Steuerelements angeklickt wird. Das an diese Prozedur übergebene Ereignisobjekt ist eine CloseEvent-Instanz. Die <codeph>detail</codeph>-Eigenschaft dieses Objekts enthält den Wert <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> oder <codeph>Alert.NO</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>iconClass</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>Klasse des Symbols, welches sich links neben dem Text im Alert-Steuerelement befindet.
     
      </apiDesc></apiParam><apiParam><apiItemName>defaultButtonFlag</apiItemName><apiType value="uint"/><apiData>0x4</apiData><apiDesc>Bitflag, welches die Standardschaltfläche festlegt. Sie können lediglich einen einzigen der folgenden Werte festlegen: <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> oder <codeph>Alert.NO</codeph>. Der Standardwert ist <codeph>Alert.OK</codeph>. Das Drücken der Eingabetaste löst die Standardschaltfläche aus, so als ob Sie diese angeklickt hätten. Das Drücken der Esc-Taste löst die Schaltfläche „Nein“ oder „Abbrechen“ aus, so als ob Sie diese angeklickt hätten.
     
      </apiDesc></apiParam><apiParam><apiItemName>moduleFactory</apiItemName><apiOperationClassifier>mx.core:IFlexModuleFactory</apiOperationClassifier><apiData>null</apiData><apiDesc>
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Statische Methode, die das Alert-Steuerelement als Popup öffnet. Das Alert-Steuerelement wird geschlossen, wenn Sie eine Schaltfläche im Steuerelement auswählen oder die Esc-Taste drücken.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#CloseEvent"><linktext>mx.events.CloseEvent</linktext></link></related-links></apiOperation><apiValue id="mx.controls:Alert:CANCEL"><apiName>CANCEL</apiName><shortdesc>
      Ein Wert, der die Schaltfläche „Abbrechen“ auf dem Alert-Steuerelement aktiviert, wenn er als Flags-Parameter der show()-Methode übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0008</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Ein Wert, der die Schaltfläche „Abbrechen“ auf dem Alert-Steuerelement aktiviert, wenn er als <codeph>flags</codeph>-Parameter der <codeph>show()</codeph>-Methode übergeben wird. Sie können den „|“-Operator verwenden, um dieses Bitflag mit den <codeph>OK</codeph>-, <codeph>YES</codeph>-, <codeph>NO</codeph>- und <codeph>NONMODAL</codeph>-Flags zu kombinieren.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:NO"><apiName>NO</apiName><shortdesc>
      Ein Wert, der die Schaltfläche „Nein“ auf dem Alert-Steuerelement aktiviert, wenn er als Flags-Parameter der show()-Methode übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Ein Wert, der die Schaltfläche „Nein“ auf dem Alert-Steuerelement aktiviert, wenn er als <codeph>flags</codeph>-Parameter der <codeph>show()</codeph>-Methode übergeben wird. Sie können den „|“ Operator verwenden, um dieses Bitflag mit den <codeph>OK</codeph>-, <codeph>YES</codeph>-, <codeph>NO</codeph>- und <codeph>NONMODAL</codeph>-Flags zu kombinieren.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:NONMODAL"><apiName>NONMODAL</apiName><shortdesc>
      Ein Wert, der einen Alert nonmodal macht, wenn er als Flags-Parameter der show()-Methode übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x8000</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Ein Wert, der einen Alert nonmodal macht, wenn er als <codeph>flags</codeph>-Parameter der <codeph>show()</codeph>-Methode übergeben wird. Sie können den „|“-Operator verwenden, um dieses Bitflag mit den <codeph>OK</codeph>-, <codeph>CANCEL</codeph>-, <codeph>YES</codeph>- und <codeph>NO</codeph>-Flags zu kombinieren.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:OK"><apiName>OK</apiName><shortdesc>
      Ein Wert, der die Schaltfläche „OK“ auf dem Alert-Steuerelement aktiviert, wenn er als Flags-Parameter der show()-Methode übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Ein Wert, der die Schaltfläche „OK“ auf dem Alert-Steuerelement aktiviert, wenn er als <codeph>flags</codeph>-Parameter der <codeph>show()</codeph>-Methode übergeben wird. Sie können den „|“-Operator verwenden, um dieses Bitflag mit den <codeph>CANCEL</codeph>-, <codeph>YES</codeph>-, <codeph>NO</codeph>- und <codeph>NONMODAL</codeph>-Flags zu kombinieren.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:YES"><apiName>YES</apiName><shortdesc>
      Ein Wert, der die Schaltfläche „Ja“ auf dem Alert-Steuerelement aktiviert, wenn er als Flags-Parameter der show()-Methode übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Ein Wert, der die Schaltfläche „Ja“ auf dem Alert-Steuerelement aktiviert, wenn er als <codeph>flags</codeph>-Parameter der <codeph>show()</codeph>-Methode übergeben wird. Sie können den „|“-Operator verwenden, um dieses Bitflag mit den <codeph>OK</codeph>-, <codeph>YES</codeph>-, <codeph>NO</codeph>- und <codeph>NONMODAL</codeph>-Flags zu kombinieren.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonFlags"><apiName>buttonFlags</apiName><shortdesc>
      Eine Bitmask, welche Alert.OK, Alert.CANCEL, Alert.YES und/oder Alert.NO enthält und anzeigt, dass diese Schaltflächen im Alert-Steuerelement verfügbar sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0x0004</apiData><apiType value="uint"/><apiDefaultValue>Alert.OK
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine Bitmask, welche <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> und/oder <codeph>Alert.NO</codeph> enthält und anzeigt, dass diese Schaltflächen im Alert-Steuerelement verfügbar sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonHeight"><apiName>buttonHeight</apiName><shortdesc>
      Die Höhe der einzelnen Alert-Schaltflächen in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>22</apiData><apiType value="Number"/><apiDefaultValue>22
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Höhe der einzelnen Alert-Schaltflächen in Pixeln. Alle Schaltflächen müssen die gleiche Höhe aufweisen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonWidth"><apiName>buttonWidth</apiName><shortdesc>
      Die Breite der einzelnen Alert-Schaltflächen in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>65</apiData><apiType value="Number"/><apiDefaultValue>60
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Breite der einzelnen Alert-Schaltflächen in Pixeln. Alle Schaltflächen müssen die gleiche Breite aufweisen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:defaultButtonFlag"><apiName>defaultButtonFlag</apiName><shortdesc>
      Ein Bitflag, welches entweder Alert.OK, Alert.CANCEL, Alert.YES oder Alert.NO zur Festlegung der Standardschaltfläche enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0x0004</apiData><apiType value="uint"/><apiDefaultValue>Alert.OK
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Bitflag, welches entweder <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> oder <codeph>Alert.NO</codeph> zur Festlegung der Standardschaltfläche enthält.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:iconClass"><apiName>iconClass</apiName><shortdesc>
      Die Klasse des anzuzeigenden Symbols.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Class"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Klasse des anzuzeigenden Symbols. Normalerweise betten Sie ein Bestandselement wie z. B. eine JPEG- oder GIF-Datei ein und verwenden die damit verknüpfte Variable, um den Wert dieser Eigenschaft festzulegen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:text"><apiName>text</apiName><shortdesc>
      Der im Alert-Dialogfenster anzuzeigende Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der im Alert-Dialogfenster anzuzeigende Text.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:cancelLabel:get"><apiName>cancelLabel</apiName><shortdesc>
      Die Beschriftung der Schaltfläche „Abbrechen“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Beschriftung der Schaltfläche „Abbrechen“.
     
      <p>Wenn Sie eine andere Beschriftung verwenden, müssen Sie eventuell die <codeph>buttonWidth</codeph>-Eigenschaft anpassen, damit die Beschriftung vollständig zu sehen ist.</p>
     
      Die deutsche Ressourcengruppe setzt diese Eigenschaft auf „ABBRECHEN“. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:noLabel:get"><apiName>noLabel</apiName><shortdesc>
      Die Beschriftung der Schaltfläche „Nein“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Beschriftung der Schaltfläche „Nein“.
     
      <p>Wenn Sie eine andere Beschriftung verwenden, müssen Sie eventuell die <codeph>buttonWidth</codeph>-Eigenschaft anpassen, damit die Beschriftung vollständig zu sehen ist.</p>
     
      Die deutsche Ressourcengruppe setzt diese Eigenschaft auf „NEIN“. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:okLabel:get"><apiName>okLabel</apiName><shortdesc>
      Die Beschriftung der Schaltfläche „OK“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Beschriftung der Schaltfläche „OK“.
     
      <p>Wenn Sie eine andere Beschriftung verwenden, müssen Sie eventuell die <codeph>buttonWidth</codeph>-Eigenschaft anpassen, damit die Beschriftung vollständig zu sehen ist.</p>
     
      Die deutsche Ressourcengruppe setzt diese Eigenschaft auf „OK“. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:yesLabel:get"><apiName>yesLabel</apiName><shortdesc>
      Die Beschriftung der Schaltfläche „Ja“.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Beschriftung der Schaltfläche „Ja“.
     
      <p>Wenn Sie eine andere Beschriftung verwenden, müssen Sie eventuell die <codeph>buttonWidth</codeph>-Eigenschaft anpassen, damit die Beschriftung vollständig zu sehen ist.</p>
     
      Die deutsche Ressourcengruppe setzt diese Eigenschaft auf „JA“. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:IFlexContextMenu"><apiName>IFlexContextMenu</apiName><shortdesc>
  Die IFlexContextMenu-Schnittstelle definiert die Schnittstelle für ein Flex-Kontextmenü.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die IFlexContextMenu-Schnittstelle definiert die Schnittstelle für ein Flex-Kontextmenü.  
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent/flexContextMenu"><linktext>mx.core.UIComponent.flexContextMenu</linktext></link></related-links><apiOperation id="mx.controls:IFlexContextMenu:mx.controls:IFlexContextMenu:setContextMenu"><apiName>setContextMenu</apiName><shortdesc>
      Stellt das Kontextmenü eines InteractiveObject ein.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/><apiDesc>InteractiveObject, dessen Kontextmenü einzustellen ist.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Stellt das Kontextmenü eines InteractiveObject ein. Dies führt alle notwendigen Schritte, z. B. Listener hinzufügen, durch, um das InteractiveObject als Kontextmenü zu diesem InteractiveObject hinzuzufügen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:IFlexContextMenu:mx.controls:IFlexContextMenu:unsetContextMenu"><apiName>unsetContextMenu</apiName><shortdesc>
      Deaktiviert das Kontextmenü eines InteractiveObject.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/><apiDesc>InteractiveObject, dessen Kontextmenü zu deaktivieren ist.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Deaktiviert das Kontextmenü eines InteractiveObject. Dies führt alle notwendigen Schritte, z. B. Listener entfernen, durch, um das InteractiveObject als Kontextmenü von diesem InteractiveObject zu entfernen.
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.controls:ProgressBar"><apiName>ProgressBar</apiName><shortdesc>
  Das ProgressBar-Steuerelement ermöglicht die visuelle Darstellung des zeitlichen Fortschritts der Aufgabenausführung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><effects><effect event="complete" name="completeEffect" owner="mx.controls:ProgressBar">
<description>
  Ein Effekt, der aufgerufen wird, wenn Flex das <codeph>complete</codeph>-Ereignis auslöst, welches nach Abschluss des Ladevorgangs eintritt.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><styles><style format="Length" inherit="yes" name="labelWidth" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Die Breite der Beschriftung in Pixeln. Wenn der Wert „NaN“ ist, stellt das ProgressBar-Steuerelement ihn auf die Breite des Steuerelements ein.
 
  </description>
<default>NaN
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="trackHeight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Die Höhe der Leiste in Pixeln. Wenn der Wert „NaN“ ist, verwenden Sie die von der <codeph>trackSkin</codeph>-Eigenschaft festgelegte Höhe. 
  
  </description>
<default>NaN
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="trackColors" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Die Farben der Leiste als Array von zwei Farben. Sie können dieselbe Farbe zweimal für eine durchgängige Leistenfarbe verwenden.
 
  </description>
<default>[ 0xE6EEEE, 0xE6EEEE ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="themeColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Designfarbe des ProgressBar-Steuerelements. Mögliche Werte sind „haloGreen“, „haloBlue“ und „haloOrange“. Adobe empfiehlt, die Einstellung des <codeph>themeColor</codeph>-Stils im <codeph>&lt;mx:Application></codeph>-Tag vorzunehmen, anstatt in den verschiedenen Steuerelementen. 
 
  </description>
<default>"haloBlue"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="trackSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Skinstil für die Fortschrittsleistenanzeige. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="maskSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Skinstil für die Maske von „bestimmten“ und „unbestimmten“ Fortschrittsleisten. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indeterminateSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Skinstil für eine „unbestimmte“ Fortschrittsleiste. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indeterminateMoveInterval" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl der Pixel, um welche die „unbestimmte“ Fortschrittsleiste für jede unbestimmte Schleife bewegt werden soll. Sobald sich die Fortschrittsleiste um die festgelegte Anzahl an Pixeln bewegt hat, wird sie auf ihre Startposition zurückgesetzt. Der Wert 0 bedeutet, dass die Leiste nicht bewegt wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Der schwarze Bereich eines dreidimensionalen Rahmens oder der farbige Bereich eines zweidimensionalen Rahmens.
  </description>
<default>0xB7BABC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="barSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Skinstil für eine „bestimmte“ Fortschrittsleiste. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Der Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen untergeordneten Elementen in vertikaler Richtung. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl von Pixeln zwischen untergeordneten Objekten in horizontaler Richtung. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="barColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Bestimmt die Farbe einer Fortschrittsleiste. Eine Fortschrittsleiste ist mit einem vertikalen Verlauf zwischen dieser und einer aus ihr berechneten helleren Farbe gefüllt. Dieser Stil hat keine Auswirkungen auf andere Komponenten, kann aber für einen Container festgelegt werden, um das Aussehen aller darin enthaltenen Fortschrittsleisten zu steuern. Der Standardwert ist <codeph>undefined</codeph>, das heißt, dass er nicht festgelegt ist. In diesem Fall wird die <codeph>themeColor</codeph>-Stileigenschaft verwendet.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ProgressBar&gt;</code> tag inherits all of the tag attributes 
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ProgressBar
    <strong>Properties</strong>
    conversion="1"
    direction="right|left"
    indeterminate="false|true"
    label="<i>No default</i>"
    labelPlacement="bottom|top|left|right|center"
    maximum="0"
    minimum="0"
    mode="event|polled|manual"
    source="<i>No default</i>"
  
    <strong>Styles</strong>
    barColor="undefined"
    barSkin="ProgressBarSkin"
    borderColor="0xAAB3B3"
    color="0x0B333C"
    disabledColor="0xAAB3B3"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontThickness="0"
    fontStyle="normal|italic"
    fontWeight="normal|bold"
    horizontalGap="8"
    indeterminateMoveInterval="26"
    indeterminateSkin="ProgressIndeterminateSkin"
    labelWidth="Computed"
    leading="0"
    maskSkin="ProgressMaskSkin"
    paddingLeft="0"
    paddingRight="0"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    themeColor="haloGreen|haloBlue|haloOrange"
    trackColors="[0xE6EEEE,0xE6EEEE]"
    trackHeight="Calculated"
    trackSkin="ProgressTrackSkin"
    verticalGap="6"
  
    <strong>Events</strong>
    complete="<i>No default</i>"
    hide="<i>No default</i>"
    progress="<i>No default</i>"
    show="<i>No default</i>"
  
    <strong>Effects</strong>
    completeEffect="<i>No default</i>"
  /&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das ProgressBar-Steuerelement ermöglicht die visuelle Darstellung des zeitlichen Fortschritts der Aufgabenausführung. Es gibt zwei Arten von ProgressBar-Steuerelementen: „bestimmte“ und „unbestimmte“.
 
  <p>Ein „bestimmtes“ ProgressBar-Steuerelement gibt eine lineare Darstellung des zeitlichen Fortschritts der Aufgabenausführung. Sie verwenden die „bestimmte“ Fortschrittsleiste, wenn der Umfang der Aufgabe bekannt ist. Sie erscheint, wenn der Benutzer für eine gewisse Zeit warten muss.</p>
 
  <p>Ein „unbestimmtes“ ProgressBar-Steuerelement stellt zeitbasierte Prozesse dar, deren Umfang nicht bekannt ist. Sofern Sie den Umfang der Aufgabe bestimmen können, empfiehlt sich die Verwendung eines „bestimmten“ ProgressBar-Steuerelements.</p>
 
  <p>Das ProgressBar-Steuerelement verfügt über die folgenden Eigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>150 Pixel breit und 4 Pixel hoch</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Nicht festgelegt</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleProgressBar.mxml"><swfblock conref="examples/SimpleProgressBar.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBarDirection"><linktext>mx.controls.ProgressBarDirection.</linktext></link><link href="mx.controls.xml#ProgressBarLabelPlacement"><linktext>mx.controls.ProgressBarLabelPlacement.</linktext></link><link href="mx.controls.xml#ProgressBarMode"><linktext>mx.controls.ProgressBarMode.</linktext></link></related-links><adobeApiEvent id="mx.controls:ProgressBar_mx.events.FlexEvent.SHOW_show"><apiName>show</apiName><shortdesc>
  Wird ausgelöst, wenn die Komponente sichtbar wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.SHOW</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die Komponente sichtbar wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Wird ausgelöst, während der Inhalt im Ereignis- oder im Abfragemodus geladen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, während der Inhalt im Ereignis- oder im Abfragemodus geladen wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_mx.events.FlexEvent.HIDE_hide"><apiName>hide</apiName><shortdesc>
  Wird ausgelöst, wenn der Status eines Objekts von sichtbar zu unsichtbar wechselt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.HIDE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Status eines Objekts von sichtbar zu unsichtbar wechselt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  Wird nach Abschluss des Ladevorgangs ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird nach Abschluss des Ladevorgangs ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ProgressBar:ProgressBar"><apiName>ProgressBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ProgressBar:setProgress"><apiName>setProgress</apiName><shortdesc>
      Legt den Status der Leiste fest, der darstellt, wie weit der Ladevorgang im manuellen Modus bereits fortgeschritten ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Aktueller Wert.
     
      </apiDesc></apiParam><apiParam><apiItemName>total</apiItemName><apiType value="Number"/><apiDesc>Gesamt- oder Zielwert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt den Status der Leiste fest, der darstellt, wie weit der Ladevorgang im manuellen Modus bereits fortgeschritten ist. Das Argument <codeph>value</codeph> ist der Eigenschaft <codeph>value</codeph> zugewiesen und das Argument <codeph>maximum</codeph> ist der Eigenschaft <codeph>maximum</codeph> zugewiesen. Die Eigenschaft <codeph>minimum</codeph> wird nicht geändert.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ProgressBar:conversion:get"><apiName>conversion</apiName><shortdesc>
      Eine Zahl, mit welcher der Wert der bisher geladenen Byte und der Gesamtwert geladener Byte berechnet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine Zahl, mit welcher der Wert der bisher geladenen Byte und der Gesamtwert geladener Byte berechnet werden. Flex teilt den aktuellen und den Gesamtwert durch diese Eigenschaft und verwendet die nächste Ganzzahl, die kleiner oder gleich dem jeweiligen Wert im Beschriftungsstring ist. Der Wert 1 bleibt ohne Wirkung.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:direction:get"><apiName>direction</apiName><shortdesc>
      Richtung, in die sich die Füllung der Fortschrittsleiste ausdehnt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarDirection.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Richtung, in die sich die Füllung der Fortschrittsleiste ausdehnt. Gültige Werte in MXML sind <codeph>"right"</codeph> und <codeph>"left"</codeph>.
     
      <p>In ActionScript verwendet man die folgenden Konstanten, um diese Eigenschaft einzustellen: <codeph>ProgressBarDirection.RIGHT</codeph> und <codeph>ProgressBarDirection.LEFT</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarDirection"><linktext>mx.controls.ProgressBarDirection</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:indeterminate:get"><apiName>indeterminate</apiName><shortdesc>
      Gibt an, ob das ProgressBar-Steuerelement als „bestimmt“ oder „unbestimmt“ dargestellt wird, also eine Wertangabe für den Fortschritt aufweist oder nicht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob das ProgressBar-Steuerelement als „bestimmt“ oder „unbestimmt“ dargestellt wird, also eine Wertangabe für den Fortschritt aufweist oder nicht. Verwenden Sie eine „unbestimmte“ Darstellung, wenn der Fortschrittsstatus nicht bestimmt werden kann. Ist der Wert <codeph>true</codeph>, ist die Darstellung „unbestimmt“ (wird kein Fortschrittswert angezeigt).
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:label:get"><apiName>label</apiName><shortdesc>
      Der mit der Fortschrittsleiste verwendete Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"LOADING %3%%"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der mit der Fortschrittsleiste verwendete Text. Die folgenden Sonderzeichen können Sie im Textstring verwenden:
     
      <ul>
        <li>%1 = aktuell geladene Byte</li>
        <li>%2 = Byte gesamt</li>
        <li>%3 = Prozent geladen</li>
        <li>%% = „%“-Zeichen</li>
      </ul>
     
      <p>Wenn ein Feld unbekannt ist, wird es durch „??“ ersetzt. Die Beschriftung wird nicht angezeigt, wenn sie nicht definiert ist.</p>
      
      <p>Wenn Sie sich im manuellen Modus befinden, können Sie mithilfe der <codeph>setProgress()</codeph>-Methode den Wert der Sonderzeichen selbst festlegen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Die Platzierung der Beschriftung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarLabelPlacement.BOTTOM
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Platzierung der Beschriftung. Gültige Werte in MXML sind <codeph>"right"</codeph>, <codeph>"left"</codeph>, <codeph>"bottom"</codeph>, <codeph>"center"</codeph> und <codeph>"top"</codeph>.
     
      <p>In ActionScript können Sie die folgenden Konstanten zur Einstellung der Eigenschaft verwenden: <codeph>ProgressBarLabelPlacement.RIGHT</codeph>, <codeph>ProgressBarLabelPlacement.LEFT</codeph>, <codeph>ProgressBarLabelPlacement.BOTTOM</codeph>, <codeph>ProgressBarLabelPlacement.CENTER</codeph> und <codeph>ProgressBarLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarLabelPlacement"><linktext>mx.controls.ProgressBarLabelPlacement</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:maximum:get"><apiName>maximum</apiName><shortdesc>
      Höchster Fortschrittswert für die Fortschrittsleiste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Höchster Fortschrittswert für die Fortschrittleiste. Diese Eigenschaft kann nur im manuellen Modus verwendet werden.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:minimum:get"><apiName>minimum</apiName><shortdesc>
      Niedrigster Wert für die Fortschrittsleiste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Niedrigster Wert für die Fortschrittleiste. Diese Eigenschaft wird vom Entwickler nur im manuellen Modus eingestellt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:mode:get"><apiName>mode</apiName><shortdesc>
      Gibt die Methode an, mit der die Leiste aktualisiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarMode.EVENT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt die Methode an, mit der die Leiste aktualisiert wird. Verwenden Sie einen der folgenden Werte in MXML:
     
      <ul>
        <li><codeph>event</codeph> Das von der <codeph>source</codeph>-Eigenschaft angegebene Steuerelement muss Progress- und Completed-Ereignisse auslösen. Das ProgressBar-Steuerelement verwendet diese Ereignisse, um seinen Status zu aktualisieren. Das ProgressBar-Steuerelement wird nur aktualisiert, wenn der Wert der <codeph>source</codeph>-Eigenschaft die EventDispatcher-Klasse erweitert.</li>
     
        <li><codeph>polled</codeph> Die <codeph>source</codeph>-Eigenschaft muss ein Objekt festlegen, das die Eigenschaften <codeph>bytesLoaded</codeph> und <codeph>bytesTotal</codeph> verfügbar macht. Das ProgressBar-Steuerelement ruft diese Methoden auf, um seinen Status zu aktualisieren.</li>
     
        <li><codeph>manual</codeph> Sie aktualisieren den Fortschrittsleistenstatus manuell. In diesem Modus geben Sie die <codeph>minimum</codeph>- und <codeph>maximum</codeph>-Eigenschaften an und verwenden die <codeph>setProgress()</codeph>-Eigenschaftsmethode, um den Status festzulegen. Dieser Modus wird oft verwendet, wenn die <codeph>indeterminate</codeph>-Eigenschaft <codeph>true</codeph> ist.</li>
      </ul>
     
      <p>In ActionScript verwendet man die folgenden Konstanten, um diese Eigenschaft einzustellen: <codeph>ProgressBarMode.EVENT</codeph>, <codeph>ProgressBarMode.POLLED</codeph> und <codeph>ProgressBarMode.MANUAL</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarMode"><linktext>mx.controls.ProgressBarMode.</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:percentComplete:get"><apiName>percentComplete</apiName><shortdesc>
      Prozentsatz des Prozesses, der bereits abgeschlossen ist. Der Bereich ist 1 bis 100.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Prozentsatz des Prozesses, der bereits abgeschlossen ist. Der Bereich ist 1 bis 100. Verwenden Sie die <codeph>setProgress()</codeph>-Methode, um die Prozentzahl zu ändern.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:source:get"><apiName>source</apiName><shortdesc>
      Verweist auf das Steuerelement, dessen Fortschritt die Fortschrittsleiste misst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Verweist auf das Steuerelement, dessen Fortschritt die Fortschrittleiste misst. Verwenden Sie diese Eigenschaft nur im Ereignis- oder Abfragemodus. Eine typische Verwendung dieser Eigenschaft ist die Zuweisung an ein Loader-Steuerelement.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:value:get"><apiName>value</apiName><shortdesc>
      Schreibgeschützte Eigenschaft, welche den Fortschrittsbetrag enthält, welcher zwischen den Minimum- und Maximumwerten erreicht wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Schreibgeschützte Eigenschaft, welche den Fortschrittsbetrag enthält, welcher zwischen den Minimum- und Maximumwerten erreicht wurde.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Text"><apiName>Text</apiName><shortdesc>
  Das Textsteuerelement zeigt einen mehrzeiligen, nicht bearbeitbaren Text an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalAlign"/><Exclude kind="style" name="horizontalAlign"/><styles><style format="Length" inherit="yes" name="leading" owner="mx.controls:Text" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Text&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Text
  leading="2"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Label</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Textsteuerelement zeigt einen mehrzeiligen, nicht bearbeitbaren Text an. Verwenden Sie das Label-Steuerelement, wenn Sie nur eine einzige Textzeile benötigen.
 
  <p>Das Textsteuerelement unterstützt keine Bildlaufleisten. Wenn Sie Bildlauf benötigen, sollten Sie ein nicht bearbeitbares TextArea-Steuerelement verwenden.</p>
 
  <p>Sie können den Text in einem Textsteuerelement mithilfe von HTML-Tags formatieren, welche nach den CSS-Stilen des Steuerelements angewendet werden. Sie können eine Zellauffüllung um alle vier Seiten des Texts veranlassen.</p>
 
  <p>Der Text eines Textsteuerelements ist standardmäßig auswählbar, aber Sie können dies abschalten, indem Sie die <codeph>selectable</codeph>-Eigenschaft auf <codeph>false</codeph> setzen.</p>
 
  <p>Wenn der Text breiter als das Steuerelement ist, wird ein Zeilenumbruch eingefügt. Der Text wird immer an der linken oberen Ecke des Steuerelements ausgerichtet.</p>
 
  <p>Um eine Textkomponente zu skalieren, ist es üblich, eine Breite festzulegen und Flex die Höhe, dem Text entsprechend, automatisch bestimmen zu lassen. Wenn Sie die Höhe explizit festlegen, kann es vorkommen, dass Text abgetrennt wird. Anders als bei Beschriftungen wird normaler Text nicht mithilfe von „...“ gekürzt. Es ist ebenfalls üblich, prozentuale Höhen- und Breitenangaben für Text zu verwenden.</p>
 
  <p>Wenn Sie weder Höhe noch Breite festlegen, berechnet Flex diese Parameter anhand von eindeutigen Zeilenumbrüchen innerhalb des Texts, ohne selbst Zeilenumbrüche einzufügen. Beispiel: Wenn Sie die <codeph>text</codeph>-Eigenschaft festlegen, verursacht das Neue-Zeile-Zeichen <codeph>"\n"</codeph> einen Zeilenumbruch. Wenn Sie die <codeph>htmlText</codeph>-Eigenschaft festlegen, verursacht das HTML-Markup <codeph>&lt;br></codeph> einen Zeilenumbruch. Wenn Ihr <codeph>text</codeph> oder <codeph>htmlText</codeph> lang ist und keine Zeilenumbrüche enthält, erhalten Sie möglicherweise eine sehr breite Text-Komponente. Sie können <codeph>maxWidth</codeph> festlegen, um die maximale Breite einzuschränken.</p>
 
  <p>Text-Steuerelemente verfügen weder über Hintergründe noch Rahmenlinien und können auch keinen Fokus erhalten.</p>
 
  <p>Das Text-Steuerelement verfügt über die folgenden Standardgrößeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Flex skaliert das Steuerelement, sodass die Breite auf die längste Zeile und die Höhe auf die Zeilenzahl angepasst wird. Wenn Sie die Breite nicht in Pixeln angeben, wird die Höhe durch die Anzahl der Zeilenumbrüche im Textstring bestimmt. Ändert sich der Textumfang, wird die Größe des Steuerelements entsprechend skaliert.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>ChMaximum sizear03</entry>
           <entry>10.000 mal 10.000 Pixel</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextExample.mxml"><swfblock conref="examples/TextExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea.</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link></related-links><apiConstructor id="mx.controls:Text:Text"><apiName>Text</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ButtonLabelPlacement"><apiName>ButtonLabelPlacement</apiName><shortdesc>
  Die ButtonLabelPlacement-Klasse definiert die Konstanten für die zulässigen Werte der labelPlacement-Eigenschaft für ein Button-, CheckBox- oder RadioButton-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ButtonLabelPlacement-Klasse definiert die Konstanten für die zulässigen Werte der <codeph>labelPlacement</codeph>-Eigenschaft für ein Button-, CheckBox- oder RadioButton-Steuerelement.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#CheckBox"><linktext>mx.controls.CheckBox</linktext></link><link href="mx.controls.xml#LinkButton"><linktext>mx.controls.LinkButton</linktext></link><link href="mx.controls.xml#RadioButton"><linktext>mx.controls.RadioButton</linktext></link></related-links><apiValue id="mx.controls:ButtonLabelPlacement:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
	  Legt fest, dass die Beschriftung unter dem Symbol angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung unter dem Symbol angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:LEFT"><apiName>LEFT</apiName><shortdesc>
	  Legt fest, dass die Beschriftung links neben dem Symbol angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung links neben dem Symbol angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  Legt fest, dass die Beschriftung rechts neben dem Symbol angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung rechts neben dem Symbol angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:TOP"><apiName>TOP</apiName><shortdesc>
	  Legt fest, dass die Beschriftung über dem Symbol angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Beschriftung über dem Symbol angezeigt wird.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:CheckBox"><apiName>CheckBox</apiName><shortdesc>
  Das CheckBox-Steuerelement besteht aus einer optionalen Beschriftung und einem kleinen Kästchen, in dem ein Häkchen angezeigt wird oder nicht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="toggle"/><Exclude kind="property" name="emphasized"/><Alternative owner="mx.controls:CheckBox" replacement="spark.components.CheckBox" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:CheckBox" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Die Farbe eines beliebigen Symbols einer Komponente. Beispiele sind etwa das Häkchen eines Kontrollkästchens oder der Pfeil auf der Schaltfläche einer Bildlaufleiste.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:CheckBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:CheckBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:CheckBox&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:CheckBox
    <strong>Styles</strong>
    disabledIconColor="0x999999"
    iconColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IToggleButton</apiBaseInterface><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das CheckBox-Steuerelement besteht aus einer optionalen Beschriftung und einem kleinen Kästchen, in dem ein Häkchen angezeigt wird oder nicht. Die optionale Beschriftung kann links, rechts, oberhalb oder unterhalb des Kontrollkästchens platziert werden. Sobald auf ein CheckBox-Steuerelement oder den zugewiesenen Text geklickt wird, ändert sich der Status des CheckBox-Steuerelements von aktiviert auf deaktiviert bzw. von deaktiviert auf aktiviert. CheckBox-Steuerelemente beinhalten mehrere Werte („true“ oder „false“), die sich nicht gegenseitig ausschließen.
 
  <p>Das CheckBox-Steuerelement verfügt über die folgenden Eigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Merkmal</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Eine Größe, die ausreicht eine Beschriftung darzustellen.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Keine Beschränkung</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="CheckBoxExample.mxml"><swfblock conref="examples/CheckBoxExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:CheckBox:CheckBox"><apiName>CheckBox</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Button"><apiName>Button</apiName><shortdesc>
  Das Button-Steuerelement ist eine häufig verwendete rechteckige Schaltfläche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:Button" replacement="spark.components.Button" since="4.0">
	</Alternative><styles><style inherit="no" name="selectedDisabledIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn die Schaltfläche ausgewählt und deaktiviert ist.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDownIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn die Schaltfläche ausgewählt ist und die Maustaste gedrückt wird.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedOverIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn die Schaltfläche ausgewählt ist und sich der Mauszeiger über der Komponente befindet.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedUpIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn die Schaltfläche ausgewählt ist und die Maustaste nicht gedrückt wird.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn die Schaltfläche deaktiviert und nicht ausgewählt ist.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn die Schaltfläche nicht ausgewählt ist und die Maustaste gedrückt wird.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn die Schaltfläche nicht ausgewählt ist und sich der Mauszeiger über der Komponente befindet.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Symbol verwendet wird, wenn eine umschaltbare Schaltfläche nicht ausgewählt ist und der Mauszeiger sich nicht über der Schaltfläche befindet.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="icon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Der Name der Klasse, die als Standardsymbol verwendet wird. Diese Einstellung wird überschrieben, wenn Sie einen anderen Symbolstil festlegen.
  
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDisabledSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn eine umschaltbare Schaltfläche ausgewählt und deaktiviert ist.
 
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDownSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn eine umschaltbare Schaltfläche ausgewählt ist und die Maustaste gedrückt wird.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedOverSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn eine umschaltbare Schaltfläche ausgewählt ist und sich der Mauszeiger über dem Steuerelement befindet.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedUpSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn eine umschaltbare Schaltfläche ausgewählt ist und sich der Mauszeiger nicht über dem Steuerelement befindet.
 
  </description>
<default>"mx.skins.halo.ButtonSkin" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="emphasizedSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für die Schaltfläche verwendet wird, wenn die Schaltfläche <codeph>emphasized</codeph> ist (z. B. wenn sie als Standardschaltfläche eines Containers dient). <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn die Schaltfläche nicht ausgewählt ist und deaktiviert ist.
 
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn die Schaltfläche nicht ausgewählt ist und die Maustaste gedrückt wird.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn die Schaltfläche nicht ausgewählt ist und sich der Mauszeiger über dem Steuerelement befindet.
  
  </description>
<default>"mx.skins.halo.ButtonSkin" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn die Schaltfläche nicht ausgewählt ist und sich der Mauszeiger nicht über dem Steuerelement befindet.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Standardskin für den Hintergrund und den Rahmen verwendet werden soll. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Abstand zwischen der Beschriftung und dem Symbol, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt ist.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Textfarbe der Beschriftung beim Anklicken durch den Benutzer. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Textfarbe der Beschriftung, wenn der Benutzer den Mauszeiger über die Schaltfläche bewegt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Zeit in Millisekunden zwischen den <codeph>buttonDown event</codeph>-Ereignissen, wenn der Benutzer mit der Maustaste auf eine Schaltfläche klickt und die Maustaste gedrückt hält.
  
  </description>
<default>35
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Zeit in Millisekunden, die nach dem ersten <codeph>buttonDown</codeph>-Ereignis gewartet werden soll, bevor <codeph>buttonDown</codeph>-Ereignisse bei jedem <codeph>repeatInterval</codeph> wiederholt werden.
 
  </description>
<default>500
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der oberen Rahmenlinie der Komponente und dem oberen Teil ihres Inhaltsbereichs. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der unteren Rahmenlinie der Komponente und dem unteren Teil ihres Inhaltsbereichs. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="labelVerticalOffset" owner="mx.controls:Button" playerVersion="Flash10" type="Number">
<description>
  Anzahl der Pixel des auf die Beschriftungsposition anzuwendenden vertikalen Offsets. Positive Zahlen verschieben die Beschriftung nach unten. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Abstand zwischen der Beschriftung und dem Symbol, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>left</codeph> oder <codeph>right</codeph> gesetzt ist.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:Button" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Fokusrings, wenn sich die Komponente im Fokus befindet
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="accentColor" owner="mx.controls:Button" playerVersion="Flash10" theme="spark" type="uint">
<description>
   
 
  </description>
<default>#0099FF
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Der Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:Button" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:Button" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:Button" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:Button" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenzen, die für die markierende Füllung der Steuerelemente verwendet werden. Der erste Wert legt die Transparenz im oberen Bereich des Glanzlichts fest, der zweite Wert die Transparenz im unteren Bereich. Das Glanzlicht deckt die obere Hälfte der Skin ab.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Farben zum Tönen des Hintergrunds von Steuerelementen. Verwenden Sie für ein einheitliches Erscheinungsbild des Steuerelements dieselbe Farbe für beide Werte.
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenz für die Hintergrundfüllung von Steuerelementen. Verwenden Sie [1, 1], um den Hintergrund undurchsichtig zu gestalten.
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:Button" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Radius von Komponentenecken. Dieser Stil wird von den folgenden Komponenten unterstützt: Alert, Button, ComboBox, LinkButton, MenuBar, NumericStepper, Panel, ScrollBar, Tab, TitleWindow und alle Komponenten, die bei der <codeph>borderStyle</codeph>-Eigenschaft die Einstellung <codeph>"solid"</codeph> unterstützen. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Rahmens. Die folgenden Steuerelemente unterstützen diesen Stil: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider und alle Komponenten, die den <codeph>borderStyle</codeph>-Stil unterstützen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0xB7BABC</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Legt fest, welche Ecken des Fokusrechtecks abgerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Button&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Button
    <b>Properties</b>
    autoRepeat="false|true"
    emphasized="false|true"
    fontContext="<i>IFontModuleFactory</i>"
    label=""
    labelPlacement="right|left|bottom|top"
    selected="false|true"
    selectedField="null"
    stickyHighlighting="false|true"
    toggle="false|true"
 
    <b>Styles</b>
    borderColor="0xAAB3B3"
    color="0x0B333C"
    cornerRadius="4"
    disabledColor="0xAAB3B3"
    disabledIcon="null"
    disabledSkin="mx.skins.halo.ButtonSkin"
    downIcon="null"
    downSkin="mx.skins.halo.ButtonSkin"
    fillAlphas="[0.6, 0.4]"
    fillColors="[0xE6EEEE, 0xFFFFFF]"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="bold|normal"
    highlightAlphas="[0.3, 0.0]"
    horizontalGap="2"
    icon="null"
    kerning="false|true"
    leading="2"
    letterSpacing="0"
    overIcon="null"
    overSkin="mx.skins.halo.ButtonSkin"
    paddingBottom="2"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="2"
    repeatDelay="500"
    repeatInterval="35"
    selectedDisabledIcon="null"
    selectedDisabledSkin="mx.skins.halo.ButtonSkin"
    selectedDownIcon="null"
    selectedDownSkin="mx.skins.halo.ButtonSkin"
    selectedOverIcon="null"
    selectedOverSkin="mx.skins.halo.ButtonSkin"
    selectedUpIcon="null"
    selectedUpSkin="mx.skins.halo.ButtonSkin"
    skin="mx.skins.halo.ButtonSkin"
    textAlign="center|left|right"
    textDecoration="none|underline"
    textIndent="0"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x000000"
    upIcon="null"
    upSkin="mx.skins.halo.ButtonSkin"
    verticalGap="2"
 
    <b>Events</b>
    buttonDown="<i>No default</i>"
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseInterface>mx.core:IButton</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Button-Steuerelement ist eine häufig verwendete rechteckige Schaltfläche. Es ist ersichtlich, dass auf Button-Steuerelemente geklickt werden kann. Sie können mit einem Beschriftungstext, einem Symbol oder beidem versehen sein.
 
  <p>Schaltflächen verwenden normalerweise Ereignis-Listener, um Aktionen auszuführen, wenn der Benutzer ein Steuerelement auswählt. Wenn ein Benutzer mit der Maus auf ein Button-Steuerelement klickt und das Button-Steuerelement aktiviert wird, werden ein <codeph>click</codeph>-Ereignis und ein <codeph>buttonDown</codeph>-Ereignis ausgelöst. Eine Schaltfläche (aktiviert oder deaktiviert) löst immer Ereignisse aus, z. B. <codeph>mouseMove</codeph>-, <codeph>mouseOver</codeph>-, <codeph>mouseOut</codeph>-, <codeph>rollOver</codeph>-, <codeph>rollOut</codeph>-, <codeph>mouseDown</codeph>- und <codeph>mouseUp</codeph>-Ereignisse.</p>
 
  <p>Sie können das Aussehen eines Button-Steuerelements anpassen und seine Funktion von einer normalen Schaltfläche zu einer Schaltfläche mit Umschaltfunktion ändern. Ändern Sie das Aussehen der Schaltfläche, indem Sie für jeden Status der Schaltfläche eine Skin verwenden.</p>
 
  <p>Die Beschriftung eines Button-Steuerelements verwendet eine fett formatierte Schriftart. Wenn Sie eine Schriftart einbetten, welche Sie als Beschriftung für ein Button-Steuerelement verwenden möchten, müssen Sie die fett formatierte Schriftart einbetten.</p>
 
  <pre>
  &lt;mx:style>
    @font-face {
      src:url("../MyFont-Bold.ttf");        
      fontFamily: myFont;
      fontWeight: bold;
    }
   .myBoldStyle {
      fontFamily: myFont;
      fontWeight: bold;
    } 
  &lt;/mx:style>
  ...
  &lt;mx:Button ... styleName="myBoldStyle"/>
  </pre>
  
  <p>Das Button-Steuerelement hat die folgenden Standardeigenschaften:</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>Merkmal</entry><entry>Beschreibung</entry></row></thead><tbody><row><entry>Standardgröße</entry><entry>Eine Größe, die ausreicht den Beschriftungstext und ein beliebiges Symbol darzustellen.</entry></row><row><entry>Minimale Größe</entry><entry>0 Pixel</entry></row><row><entry>Maximale Größe</entry><entry>Keine Beschränkung</entry></row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ButtonExample.mxml"><swfblock conref="examples/ButtonExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:Button_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Dateneigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft verändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Button_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich die ausgewählte Eigenschaft der Umschaltfunktion eines Button-Steuerelements ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die Eigenschaft <codeph>selected</codeph> in einem Button-Steuerelement mit Umschaltfunktion ändert. Ein Button-Steuerelement mit Umschaltfunktion bedeutet, dass die Eigenschaft <codeph>toggle</codeph> auf <codeph>true</codeph> gesetzt ist. Für die RadioButton-Steuerelemente wird dieses Ereignis ausgelöst, wenn sich die <codeph>selected</codeph>-Eigenschaft ändert. Für die CheckBox-Steuerelemente wird dieses Ereignis ausgelöst, wenn der Benutzer über die Maus mit dem Steuerelement interagiert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Button_mx.events.FlexEvent.BUTTON_DOWN_buttonDown"><apiName>buttonDown</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer auf das Button-Steuerelement klickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.BUTTON_DOWN</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer das Button-Steuerelement drückt. Ist die Eigenschaft <codeph>autoRepeat</codeph> auf <codeph>true</codeph> gesetzt, wird das Ereignis so lange ausgelöst, wie die Schaltfläche gedrückt bleibt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Button:Button"><apiName>Button</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Button:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      Die Standardprozedur für das MouseEvent.CLICK-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>MouseEvent.CLICK</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc>
      Die Standardprozedur für das MouseEvent.MOUSE_DOWN-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>MouseEvent.MOUSE_DOWN</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc>
      Die Standardprozedur für das MouseEvent.MOUSE_UP-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>MouseEvent.MOUSE_UP</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:rollOutHandler"><apiName>rollOutHandler</apiName><shortdesc>
      Die Standardprozedur für das MouseEvent.ROLL_OUT-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>MouseEvent.ROLL_OUT</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:rollOverHandler"><apiName>rollOverHandler</apiName><shortdesc>
      Die Standardprozedur für das MouseEvent.ROLL_OVER-Ereignis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>MouseEvent.ROLL_OVER</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Button:protected:icons"><apiName>icons</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
	      
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:selectedField"><apiName>selectedField</apiName><shortdesc>
      Der Name des Felds in der Dateneigenschaft, welches die Werte der selected-Eigenschaft des Button-Steuerelements festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>null</apiData><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Name des Felds in der <codeph>data</codeph>-Eigenschaft, welches die Werte der <codeph>selected</codeph>-Eigenschaft des Button-Steuerelements festlegt. Sie können diese Eigenschaft festlegen, wenn Sie das Button-Steuerelement in einem Elementrenderer verwenden. Der Standardwert ist „null“, das heißt, dass das Button-Steuerelement seinen ausgewählten Status nicht basierend auf einer Eigenschaft in der <codeph>data</codeph>-Eigenschaft festlegt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:stickyHighlighting"><apiName>stickyHighlighting</apiName><shortdesc>
      Wenn „false“, zeigt die Schaltfläche ihre Down-Skin, sobald der Benutzer sie drückt, aber sie wechselt zu ihrer Over-Skin, sobald der Benutzer den Mauszeiger von ihr herunterbewegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn <codeph>false</codeph>, zeigt die Schaltfläche ihre Down-Skin, sobald der Benutzer sie drückt aber sie wechselt zu ihrer Over-Skin, sobald der Benutzer die Maus von ihr herunterbewegt. Wenn <codeph>true</codeph>, zeigt die Schaltfläche ihre down-Skin, sobald der Benutzer sie drückt. Sie zeigt diese Skin jedoch auch weiterhin an, wenn der Benutzer die Maus von ihr herunterbewegt.
     
      <p>Button-Unterklassen, z. B. SliderThumb und ScrollThumb-Klassen oder die Aufwärts- und Abwärtspfeile der Bildlaufleiste, setzen diese Eigenschaft auf <codeph>true</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:protected:textField"><apiName>textField</apiName><shortdesc>
      Das interne UITextField-Objekt, welches die Beschriftung dieser Schaltfläche wiedergibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier><apiDefaultValue>null 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Das interne UITextField-Objekt, welches die Beschriftung dieser Schaltfläche darstellt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:autoRepeat:get"><apiName>autoRepeat</apiName><shortdesc>
      Gibt an, ob wiederholt buttonDown-Ereignisse ausgelöst werden, wenn der Benutzer die Maustaste gedrückt hält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob wiederholt <codeph>buttonDown</codeph>-Ereignisse ausgelöst werden, wenn der Benutzer die Maustaste gedrückt hält.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:data:get"><apiName>data</apiName><shortdesc>
      Die Dateneigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Die <codeph>data</codeph>-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Wenn Sie das Steuerelement als Elementrenderer oder Elementeditor verwenden, in dem Elemente abgelegt werden können, schreibt Flex automatisch den aktuellen Wert des Elements in die <codeph>selected</codeph>-Eigenschaft dieses Steuerelements.</p>
     
      <p>Sie stellen diese Eigenschaft nicht in MXML ein.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Button:emphasized:get"><apiName>emphasized</apiName><shortdesc>
      Zeichnet einen dicken Rahmen um das Button-Steuerelement, wenn sich das Steuerelement im Up-Status befindet, falls die Emphasized-Eigenschaft auf „true“ eingestellt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Zeichnet einen dicken Rahmen um das Button-Steuerelement, wenn sich das Steuerelement im Up-Status befindet, falls <codeph>emphasized</codeph> auf <codeph>true</codeph> eingestellt ist. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Die Modul-Factory, welche den Schriftartkontext für diese Komponente bereitstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Die Modul-Factory, welche den Schriftartkontext für diese Komponente bereitstellt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:label:get"><apiName>label</apiName><shortdesc>
      Der im Button-Steuerelement anzuzeigende Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der im Button-Steuerelement anzuzeigende Text.
     
      <p>Wenn die Beschriftung breiter ist als das Button-Steuerelement, wird sie gekürzt und endet mit einer Ellipse (...). Die vollständige Beschriftung erscheint als QuickInfo, sobald der Benutzer den Mauszeiger über das Button-Steuerelement bewegt. Wenn Sie mit der <codeph>tooltip</codeph>-Eigenschaft zusätzlich eine QuickInfo festgelegt haben, wird diese anstatt des Beschriftungstexts angezeigt.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Ausrichtung der Beschriftung in Bezug auf ein angegebenes Symbol.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ButtonLabelPlacement.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Ausrichtung der Beschriftung relativ zu einem angegebenen Symbol. Gültige MXML-Werte sind <codeph>right</codeph>, <codeph>left</codeph>, <codeph>bottom</codeph> und <codeph>top</codeph>.
     
      <p>In ActionScript können Sie folgende Konstanten verwenden, um diese Eigenschaft festzulegen: <codeph>ButtonLabelPlacement.RIGHT</codeph>, <codeph>ButtonLabelPlacement.LEFT</codeph>, <codeph>ButtonLabelPlacement.BOTTOM</codeph> und <codeph>ButtonLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor verwendet wird, in dem Elemente abgelegt werden können, initialisiert Flex die listData-Eigenschaft der Komponente mit den passenden Daten aus dem Listensteuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem Listensteuerelement. Die Komponente kann die <codeph>listData</codeph>-Eigenschaft verwenden, um die <codeph>data</codeph>-Eigenschaft des Elementrenderers oder des Elementeditors, in dem Elemente abgelegt werden können, zu initialisieren.
     
      <p>Sie stellen diese Eigenschaften nicht in MXML oder ActionScript ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Button:selected:get"><apiName>selected</apiName><shortdesc>
      Zeigt an, ob eine Schaltfläche mit Umschaltfunktion aktiviert („true“) oder deaktiviert („false“) ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Zeigt an, ob eine Schaltfläche mit Umschaltfunktion aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Für diese Eigenschaft kann nur dann ein Wert festgelegt werden, wenn die Eigenschaft <codeph>toggle</codeph> auf <codeph>true</codeph> gesetzt ist.
     
      <p>Zeigt bei einem CheckBox-Steuerelement an, ob im Kästchen ein Häkchen angezeigt wird. Zeigt bei einem RadioButton-Steuerelement an, ob das Steuerelement ausgewählt ist.</p>
     
      <p>Der Benutzer kann diese Eigenschaft durch Klicken auf das Steuerelement ändern; sie kann aber auch programmgesteuert eingestellt werden.</p>
     
      <p>In früheren Versionen wurde, wenn die Eigenschaft <codeph>toggle</codeph> auf <codeph>true</codeph> eingestellt war, durch Ändern dieser Eigenschaft ein <codeph>change</codeph>-Ereignis ausgelöst. Mit Version 3.0 beginnend löst das programmgesteuerte Festlegen dieser Eigenschaft lediglich ein <codeph>valueCommit</codeph>-Ereignis aus.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:toggle:get"><apiName>toggle</apiName><shortdesc>
      Steuert, ob sich eine Schaltfläche im toggle-Status befindet oder nicht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Steuert, ob sich eine Schaltfläche im toggle-Status befindet oder nicht. Wenn Sie bei festgesetztem Wert <codeph>true</codeph> auf die Schaltfläche klicken, schaltet der Status von „selected“ auf „unselected“ um. Sie können diesen Status programmgesteuert mithilfe der Eigenschaft <codeph>selected</codeph> abrufen oder festlegen. Beim Wert <codeph>false</codeph> bleibt die Schaltfläche nicht gedrückt, nachdem der Benutzer sie losgelassen hat. In diesem Fall ist für die Eigenschaft <codeph>selected</codeph> immer der Wert <codeph>false</codeph> angegeben. Schaltflächen wie diese werden verwendet, um Aktionen auszuführen. Wenn <codeph>toggle</codeph> auf <codeph>false</codeph> eingestellt ist, wird für <codeph>selected</codeph> ebenfalls der Wert <codeph>false</codeph> erzwungen, da nur Schaltflächen mit Umschaltfunktion ausgewählt werden können.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Spacer"><apiName>Spacer</apiName><shortdesc>
  Das Spacer-Steuerelement hilft ihnen untergeordnete Elemente innerhalb eines übergeordneten Containers anzuordnen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:Spacer&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds no new tag attributes.</p>
  
  <pre>
  &lt;mx:Spacer/&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Spacer-Steuerelement hilft ihnen untergeordnete Elemente innerhalb eines übergeordneten Containers anzuordnen. Obwohl das Spacer-Steuerelement nichts zeichnet, beansprucht es einen gewissen Raum innerhalb des Containers. 
  
  <p>Im folgenden Beispiel wird ein bewegliches Spacer-Steuerelement verwendet, um ein Button-Steuerelement nach rechts zu drücken, sodass das Button-Steuerelement sich an der rechten Ecke des HBox-Containers ausrichtet.</p>
 
  <pre>
  &lt;mx:HBox>
      &lt;mx:Image source="Logo.jpg"/>
      &lt;mx:Label text="Company XYZ"/>
      &lt;mx:Spacer width="100%"/>
      &lt;mx:Button label="Close"/>
  &lt;/mx:HBox>
  </pre>
 
  </apiDesc><example conref="SpacerExample.mxml"><swfblock conref="examples/SpacerExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:Spacer:Spacer"><apiName>Spacer</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:DateField"><apiName>DateField</apiName><shortdesc>
  Das DateField-Steuerelement ist ein Textfeld, welches das Datum mit dem Kalendersymbol rechts davon anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="editableDisabledSkin"/><Exclude kind="style" name="editableDownSkin"/><Exclude kind="style" name="editableOverSkin"/><Exclude kind="style" name="editableUpSkin"/><Exclude kind="style" name="borderThickness"/><Exclude kind="property" name="selectedItem"/><Exclude kind="property" name="selectedIndex"/><styles><style format="Color" inherit="yes" name="todayColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe der Markierung des heutigen Datums im DateChooser-Steuerelement. Der Standardwert ist <codeph>0x2B333</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:DateField" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Standardskin für den Hintergrund und den Rahmen verwendet werden soll. Für die DateField-Klasse gibt es keinen Standardwert.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Farbe des markierten Bereichs des aktuell ausgewählten Datums im DateChooser-Steuerelement. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Farbe des markierten Bereichs des Datums, wenn sich der Mauszeiger über dem Datum im DateChooser-Steuerelement befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dateChooserStyleName" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Der Name der CSS-Stildeklaration, der für die Stile der Dropdownliste des DateChooser-Steuerelements anzuwenden ist. Standardmäßig verwendet das DateChooser-Steuerelement die weitergegebenen Stile des DateField-Steuerelements. 
  
  <p>Sie können diesen Klassenselektor verwenden, um die Werte für alle Stileigenschaften der DateChooser-Klasse festzulegen, einschließlich <codeph>cornerRadius</codeph>, <codeph>fillAlphas</codeph>, <codeph>fillColors</codeph>, <codeph>headerColors</codeph>, <codeph>headerStyleName</codeph>, <codeph>highlightAlphas</codeph>, <codeph>todayStyleName</codeph> und <codeph>weekdayStyleName</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Die Stärke des Begrenzungsrahmens des DateChooser-Steuerelements. Der Standardwert ist 1.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Rahmens. Die folgenden Steuerelemente unterstützen diesen Stil: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider und alle Komponenten, die den <codeph>borderStyle</codeph>-Stil unterstützen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0xB7BABC</codeph>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Der Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:DateField" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:DateField" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:DateField" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:DateField" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Legt fest, welche Ecken des Fokusrechtecks abgerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:DateField&gt</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:DateField
    <strong>Properties</strong>
    dayNames="["S", "M", "T", "W", "T", "F", "S"]"
    disabledDays="<i>No default</i>"
    disabledRanges="<i>No default</i>"
    displayedMonth="<i>Current month</i>"
    displayedYear="<i>Current year</i>"
    dropdownFactory="<i>ClassFactory that creates an mx.controls.DateChooser</i>"
    firstDayOfWeek="0"
    formatString="MM/DD/YYYY"
    labelFunction="<i>Internal formatter</i>"
    maxYear="2100"
    minYear="1900"
    monthNames="["January", "February", "March", "April", "May",
    "June", "July", "August", "September", "October", "November",
    "December"]"
    monthSymbol=""
    parseFunction="<i>Internal parser</i>"
    selectableRange="<i>No default</i>"
    selectedDate="<i>No default</i>"
    showToday="true|false"
    yearNavigationEnabled="false|true"
    yearSymbol=""
  
   <strong>Styles</strong>
    borderColor="0xAAB3B3"
    borderThickness="1"
    color="0x0xB333C"
    dateChooserStyleName="dateFieldPopup"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    iconColor="0x111111"
    leading="2"
    paddingLeft="0"
    paddingRight="0"
    rollOverColor="0xE3FFD6"
    selectionColor="0xB7F39B"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    todayColor="0x2B333C"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    close="<i>No default</i>"
    dataChange="<i>No default</i>"
    open="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das DateField-Steuerelement ist ein Textfeld, welches das Datum mit dem Kalendersymbol rechts davon anzeigt. Wenn der Benutzer an eine beliebige Stelle innerhalb des Begrenzungsrahmens des Steuerelements klickt, wird ein DateChooser-Steuerelement geöffnet, das die Tage im Monat des aktuellen Datums anzeigt. Wenn kein Datum ausgewählt wurde, ist das Textfeld leer und im DateChooser-Steuerelement wird der Monat des aktuellen Datums angezeigt.
 
  <p>Wenn das DateChooser-Steuerelement geöffnet ist, kann der Benutzer per Bildlauf durch die Monate und Jahre navigieren und ein Datum auswählen. Wenn ein Datum ausgewählt wurde, wird das DateChooser-Steuerelement geschlossen und das Textfeld zeigt das ausgewählte Datum an.</p>
 
  <p>Der Benutzer kann das Datum direkt in das Textfeld eingeben, wenn die <codeph>editable</codeph>-Eigenschaft des DateField-Steuerelements auf <codeph>true</codeph> gesetzt wurde.</p>
 
  <p>Das DateField verfügt über die gleichen Standardeigenschaften (siehe unten) wie DateChooser für seine erweiterte Datumsauswahl.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Eine Größe, die ausreicht, um einen Kalender darzustellen und die Namen der Wochentage anzuzeigen.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Keine Beschränkung</entry>
        </row></tbody></tgroup></adobetable>
 
 <p>DateField verfügt über die folgenden Standardeigenschaften für das reduzierte Steuerelement:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Eine Größe, die ausreicht, das formatierte Datum und ein Kalendersymbol darzustellen.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Keine Beschränkung</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="DateFieldExample.mxml"><swfblock conref="examples/DateFieldExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link></related-links><adobeApiEvent id="mx.controls:DateField_mx.events.DateChooserEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Wird ausgelöst, wenn sich der Monat durch Interaktion des Benutzers ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3616
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DateChooserEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.DateChooserEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich der Monat durch Interaktion des Benutzers ändert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Wird ausgelöst, wenn ein Benutzer das Feld auswählt, um die Dropdownliste zu öffnen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3614
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Benutzer das Feld auswählt, um die Dropdownliste zu öffnen.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Dateneigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft verändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Wird ausgelöst, wenn ein Datum ausgewählt wurde oder der Benutzer außerhalb der Dropdownliste klickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3615
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Datum ausgewählt wurde oder der Benutzer außerhalb der Dropdownliste klickt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.CalendarLayoutChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn ein Datum ausgewählt oder verändert wurde und das DateChooser-Steuerelement geschlossen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3613
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CalendarLayoutChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.CalendarLayoutChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Datum ausgewählt oder verändert wurde und das DateChooser-Steuerelement geschlossen wurde.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DateField:DateField"><apiName>DateField</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:DateField:close"><apiName>close</apiName><shortdesc>
      Schließt das DateChooser-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3621
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Schließt das DateChooser-Steuerelement.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:dateToString"><apiName>dateToString</apiName><shortdesc>
      Formatiert ein Datum entsprechend dem outputFormat-Argument in einen String um.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Das formatierte Datum als String.
     
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Date"/><apiDesc>Datumswert, der formatiert werden soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>outputFormat</apiItemName><apiType value="String"/><apiDesc>String, der das Datumsformat festlegt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Formatiert ein Datum entsprechend dem <codeph>outputFormat</codeph>-Argument in einen String um. Das <codeph>outputFormat</codeph>-Argument enthält ein Muster (Pattern) nach dem der <codeph>value</codeph>-String formatiert wird. Es kann <codeph>"M"</codeph>, <codeph>"D"</codeph>, <codeph>"Y"</codeph>, Trennzeichen und Interpunktionszeichen enthalten.
     
      </apiDesc><example><pre>var todaysDate:String = DateField.dateToString(new Date(), "MM/DD/YYYY");</pre>
      
      </example></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:open"><apiName>open</apiName><shortdesc>
      Öffnet das DateChooser-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3620
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Öffnet das DateChooser-Steuerelement.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:stringToDate"><apiName>stringToDate</apiName><shortdesc>
      Analysiert ein Stringobjekt, das ein Datum enthält, und gibt ein entsprechendes Date-Objekt zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Das formatierte Datum als Date-Objekt.
     
      
      </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>valueString</apiItemName><apiType value="String"/><apiDesc>Datumswert, der formatiert werden soll.
     
      </apiDesc></apiParam><apiParam><apiItemName>inputFormat</apiItemName><apiType value="String"/><apiDesc>String, der das Datumsformat festlegt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Analysiert ein Stringobjekt, das ein Datum enthält, und gibt ein entsprechendes Date-Objekt zurück. Das <codeph>inputFormat</codeph>-Argument enthält ein Muster (Pattern), nach welchem der <codeph>valueString</codeph>-String formatiert wird. Es kann <codeph>"M"</codeph>, <codeph>"D"</codeph>, <codeph>"Y"</codeph>, Trennzeichen und Interpunktionszeichen enthalten.
     
      <p>Die Funktion überprüft die Gültigkeit des Date-Objekts nicht. Wenn der Wert des Datums, Monats oder Jahres „NaN“ ist, gibt die Methode „null“ zurück.</p>
     
      <p>Beispiel:
      <pre>var dob:Date = DateField.stringToDate("06/30/2005", "MM/DD/YYYY");</pre>        
      </p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:DateField:data:get"><apiName>data</apiName><shortdesc>
      Die data-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Die <codeph>data</codeph>-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Wenn Sie das Steuerelement als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwenden, schreibt Flex automatisch den aktuellen Wert des Elements in die <codeph>selectedDate</codeph>-Eigenschaft dieses Steuerelements.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:dayNames:get"><apiName>dayNames</apiName><shortdesc>
      Namen der Wochentage für das DateChooser-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3626
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "S", "M", "T", "W", "T", "F", "S" ]
      </apiDefaultValue></apiValueDef><apiDesc>
      Namen der Wochentage für das DateChooser-Steuerelement. Das Festlegen dieser Eigenschaft ändert die Beschriftung „Tag“ des DateChooser-Steuerelements. Sonntag ist der erste Tag (an der Indexposition 0). Die verbleibenden Namen der Wochentage folgen in der normalen Reihenfolge.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:disabledDays:get"><apiName>disabledDays</apiName><shortdesc>
      Tage innerhalb einer Woche, die zu deaktivieren sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3627
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      </apiDefaultValue></apiValueDef><apiDesc>
      Tage innerhalb einer Woche, die zu deaktivieren sind. Alle Daten eines Monats werden für diesen festgelegten Tag deaktiviert. Diese Eigenschaft verändert die Benutzeroberfläche des DateChooser-Steuerelements. Die Elemente dieses Arrays können Werte von 0 (Sonntag) bis 6 (Samstag) annehmen. Beispiel: Der Wert <codeph>[0, 6]</codeph> deaktiviert Sonntag und Samstag.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:disabledRanges:get"><apiName>disabledRanges</apiName><shortdesc>
      Deaktiviert einzelne und mehrere Tage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3629
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      </apiDefaultValue></apiValueDef><apiDesc>
      Deaktiviert einzelne und mehrere Tage.
     
      <p>Diese Eigenschaft akzeptiert ein Array von Objekten als Parameter. Jedes Objekt dieses Arrays ist ein Date-Objekt, welches einen einzelnen Tag zur Deaktivierung festlegt; oder ein Objekt, welches eine oder beide der folgenden Eigenschaften enthält: <codeph>rangeStart</codeph> und <codeph>rangeEnd</codeph>. Jeder Wert dieser Eigenschaft entspricht einem Date-Objekt. Der Wert dieser Eigenschaften beschreibt die Grenzen des Datumsbereichs. Wenn eine der beiden Eigenschaften fehlt, setzt sich der Bereich unbegrenzt in die entsprechende Richtung fort. Wenn Sie lediglich <codeph>rangeStart</codeph> festlegen, werden alle Daten nach dem festgelegten Datum deaktiviert inklusive des<codeph>rangeStart</codeph>-Datums. Wenn Sie lediglich <codeph>rangeEnd</codeph> festlegen, werden alle Daten vor diesem Tag deaktiviert inklusive des <codeph>rangeEnd</codeph>-Datums. Um ein einzelnes Datum zu deaktivieren, nutzen Sie ein einzelnes Date-Objekt, welches ein Datum im Array festlegt. Zeitwerte werden aus dem Date-Objekt gelöscht, wenn sie vorhanden sind.</p>
     
      <p>Im folgenden Beispiel werden diese Datumswerte deaktiviert: 11. Januar 2006, der Zeitraum vom 23. Januar bis zum 10. Februar 2006 und alle folgenden Datumswerte.</p>
     
      <pre>disabledRanges="{[new Date(2006,0,11), {rangeStart:
      new Date(2006,0,23), rangeEnd: new Date(2006,1,10)},
      {rangeStart: new Date(2006,2,1)}]}"</pre>
     
      <p>Das Festlegen dieser Eigenschaft verändert das Aussehen des DateChooser-Steuerelements, wenn die deaktivierten Daten in den <codeph>displayedMonth</codeph> und <codeph>displayedYear</codeph>-Eigenschaften enthalten sind.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:displayedMonth:get"><apiName>displayedMonth</apiName><shortdesc>
      Wenn sie mit der displayedYear-Eigenschaft verwendet wird, legt die displayedMonth-Eigenschaft den Monat fest, der im DateChooser-Steuerelement angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3624
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Wenn sie mit der <codeph>displayedYear</codeph>-Eigenschaft verwendet wird, legt die <codeph>displayedMonth</codeph>-Eigenschaft den Monat fest, der im DateChooser-Steuerelement angezeigt werden soll. Die Monatszahlen basieren auf null, das heißt, dass Januar 0 und Dezember 11 entspricht. Das Festlegen dieser Eigenschaft ändert das Aussehen des DateChooser-Steuerelements. Der Standardwert ist die Monatszahl des heutigen Datums.
     
      <p>Der Standardwert ist der aktuelle Monat.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:displayedYear:get"><apiName>displayedYear</apiName><shortdesc>
      Wenn sie mit der displayedMonth-Eigenschaft verwendet wird, bestimmt die displayedYear-Eigenschaft, welches Jahr im DateChooser-Steuerelement angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3625
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Wenn sie mit der <codeph>displayedMonth</codeph>-Eigenschaft verwendet wird, bestimmt die <codeph>displayedYear</codeph>-Eigenschaft, welches Jahr im DateChooser-Steuerelement angezeigt wird. Das Festlegen dieser Eigenschaft ändert das Aussehen des DateChooser-Steuerelements.
      
      <p>Der Standardwert ist das aktuelle Jahr.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:dropdown:get"><apiName>dropdown</apiName><shortdesc>
      Enthält einen Verweis auf das DateChooser-Steuerelement im DateField-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls:DateChooser</apiValueClassifier></apiValueDef><apiDesc>
      Enthält einen Verweis auf das DateChooser-Steuerelement im DateField-Steuerelement. Die verwendete Klasse kann mit <codeph>dropdownFactory</codeph> festgelegt werden, solange sie <codeph>DateChooser</codeph> erweitert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:dropdownFactory:get"><apiName>dropdownFactory</apiName><shortdesc>
      IFactory erzeugt eine abgeleitete DateChooser-Instanz, um sie als Date-Chooser zu verwenden. Der Standardwert ist IFactory für DateChooser.
     
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      IFactory erzeugt eine abgeleitete DateChooser-Instanz, um sie als Date-Chooser zu verwenden. Der Standardwert ist IFactory für DateChooser.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:firstDayOfWeek:get"><apiName>firstDayOfWeek</apiName><shortdesc>
      Wochentag (0-6, wobei 0 das erste Element des dayNames-Arrays ist), der in der ersten Spalte des DateChooser-Steuerelements angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3623
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>0 (Sunday)
      </apiDefaultValue></apiValueDef><apiDesc>
      Wochentag (0-6, wobei 0 das erste Element des dayNames-Arrays ist), der in der ersten Spalte des DateChooser-Steuerelements angezeigt wird. Durch das Einstellen dieser Eigenschaft wird die Anzeigereihenfolge der Tagesspalten geändert.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:formatString:get"><apiName>formatString</apiName><shortdesc>
      Das Format des angezeigten Datums im Textfeld.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"MM/DD/YYYY"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Das Format des angezeigten Datums im Textfeld. Diese Eigenschaft kann jede beliebige Kombination aus <codeph>"MM"</codeph>, <codeph>"DD"</codeph>, <codeph>"YY"</codeph>, <codeph>"YYYY"</codeph>, Trennzeichen und Interpunktionszeichen enthalten.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Eine Funktion, die verwendet wird, um das im Textfeld des DateField-Steuerelements angezeigte Datum zu formatieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3618
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine Funktion, die verwendet wird, um das im Textfeld des DateField-Steuerelements angezeigte Datum zu formatieren. Wenn keine Funktion festgelegt wurde, wird das Standardformat verwendet.
      
      <p>Die Funktion nimmt ein Date-Objekt als Argument auf und gibt einen String im anzuzeigenden Format zurück, siehe Beispiel:</p>
      <pre>
      public function formatDate(currentDate:Date):String {
          ...
          return dateString;
      }</pre>
     
      <p>Wenn Sie den Benutzern erlauben, ein Datum in das Textfeld des DateField-Steuerelements einzugeben, und Sie definieren mithilfe der <codeph>labelFunction</codeph>-Eigenschaft eine Formatierungsfunktion, sollten Sie eine Funktion für die <codeph>parseFunction</codeph>-Eigenschaft festlegen, welche den Eingabetextstring in ein vom DateField-Steuerelement zu verwendendes Date-Objekt konvertiert. Oder Sie setzen die <codeph>parseFunction</codeph>-Eigenschaft auf „null“.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#DateField/parseFunction"><linktext>mx.controls.DateField.parseFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die listData-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement. Die Komponente kann die <codeph>listData</codeph>-Eigenschaft verwenden, um die <codeph>data</codeph>-Eigenschaft des Elementrenderers oder des Elementeditors, in dem Elemente abgelegt werden können, zu initialisieren.
     
      <p>Sie stellen diese Eigenschaften nicht in MXML oder ActionScript ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:maxYear:get"><apiName>maxYear</apiName><shortdesc>
      Das letzte auswählbare Jahr im Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>2100
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Das letzte auswählbare Jahr im Steuerelement.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:minYear:get"><apiName>minYear</apiName><shortdesc>
      Das erste auswählbare Jahr im Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1900
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Das erste auswählbare Jahr im Steuerelement.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:monthNames:get"><apiName>monthNames</apiName><shortdesc>
      Die Namen der Monate, die im oberen Teil des Steuerelements angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "January", "February", "March", "April", "May", "June", 
      "July", "August", "September", "October", "November", "December" ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Namen der Monate, die im oberen Teil des Steuerelements angezeigt werden. Die <codeph>monthSymbol</codeph>-Eigenschaft wird an das Ende des Werts angehängt, der durch die <codeph>monthNames</codeph>-Eigenschaft festgelegt wird. Dies kann für Sprachen wie Japanisch nützlich sein.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:monthSymbol:get"><apiName>monthSymbol</apiName><shortdesc>
      Diese Eigenschaft wird an das Ende des Werts angehängt, der von der monthNames-Eigenschaft festgelegt wird, um die Namen der Monate zu definieren, die im oberen Teil des Steuerelements angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Diese Eigenschaft wird an das Ende des Werts angehängt, der von der <codeph>monthNames</codeph>-Eigenschaft festgelegt wird, um die Namen der Monate zu definieren, die im oberen Teil des Steuerelements angezeigt werden. Manche Sprachen wie z. B. Japanisch verwenden ein eigenes Symbol nach dem Monatsnamen. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:parseFunction:get"><apiName>parseFunction</apiName><shortdesc>
      Funktion, die das als Text in das Textfeld des DateField-Steuerelements eingegebene Datum analysiert und ein Date-Objekt an das Steuerelement zurückgibt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Funktion, die das als Text in das Textfeld des DateField-Steuerelements eingegebene Datum analysiert und ein Date-Objekt an das Steuerelement zurückgibt. Wenn keine Funktion festgelegt wird, verwendet Flex die Standardfunktion. Wenn Sie die <codeph>parseFunction</codeph>-Eigenschaft festlegen, sollte sie das Gegenteil der in der <codeph>labelFunction</codeph>-Eigenschaft festgelegten Funktion ausführen.
      
      <p>Die Funktion nimmt zwei Argumente auf und gibt ein Date-Objekt an das DateField-Steuerelement zurück, siehe Beispiel:</p>
      <pre>
      public function parseDate(valueString:String, inputFormat:String):Date {
          ...
          return newDate
      }</pre>
     
      <p>Dabei enthält das <codeph>valueString</codeph>-Argument den vom Benutzer in das Textfeld eingegebenen Textstring; das <codeph>inputFormat</codeph>-Argument enthält das Format für den String. Beispiel: Wenn Sie dem Benutzer lediglich gestatten, jeweils zwei Zeichen für Tag, Monat und Jahr einzugeben, dann übergeben Sie „TT/MM/JJ“ an das <codeph>inputFormat</codeph>-Argument. </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#DateField/labelFunction"><linktext>mx.controls.DateField.labelFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:selectableRange:get"><apiName>selectableRange</apiName><shortdesc>
      Datumsbereich, in welchem Daten ausgewählt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3628
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Datumsbereich, in welchem Daten ausgewählt werden können. Beispiel: Ein Datum zwischen 12/04/2006 und 12/04/2006 kann ausgewählt werden, aber Daten außerhalb dieses Bereichs sind deaktiviert.
     
      <p>Diese Eigenschaft akzeptiert ein Objekt als Parameter. Das Objekt enthält zwei Eigenschaften des Typs „Date“: <codeph>rangeStart</codeph> und <codeph>rangeEnd</codeph>. Wenn Sie lediglich <codeph>rangeStart</codeph> festlegen, werden alle nachfolgenden Daten aktiviert. Wenn Sie lediglich <codeph>rangeEnd</codeph>festlegen, werden alle früheren Daten aktiviert. Um nur einen einzelnen Tag im DateChooser-Steuerelement zu aktivieren, können Sie ein Date-Objekt direkt übergeben. Zeitwerte werden aus dem Date-Objekt gelöscht, wenn sie vorhanden sind.</p>
     
      <p>Im folgenden Beispiel wird nur der Datumsbereich zwischen 1. Januar 2006 und 30. Juni 2006 aktiviert. Die Monate vor Januar und nach Juni werden nicht in DateChooser angezeigt.</p>
     
      <pre>selectableRange="{{rangeStart : new Date(2006,0,1),
      rangeEnd : new Date(2006,5,30)}}"</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:selectedDate:get"><apiName>selectedDate</apiName><shortdesc>
      Datum, wie es im DateChooser-Steuerelement ausgewählt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3630
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Datum, wie es im DateChooser-Steuerelement ausgewählt wurde. Akzeptiert ein Date-Objekt als Parameter. Wenn das eingehende Date-Objekt Zeitwerte aufweist, werden diese gelöscht.
     
      <p>Durch Halten der Strg-Taste beim Auswählen des aktuell ausgewählten Datums wird die Auswahl aufgehoben, die <codeph>selectedDate</codeph>-Eigenschaft auf <codeph>null</codeph> gesetzt und anschließend das <codeph>change</codeph>-Ereignis ausgelöst.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:showToday:get"><apiName>showToday</apiName><shortdesc>
      Wenn „true“, wird festgelegt, dass das heutige Datum im DateChooser-Steuerelement markiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3622
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn <codeph>true</codeph>, wird festgelegt, dass das heutige Datum im DateChooser-Steuerelement markiert wird. Das Festlegen dieser Eigenschaft ändert das Aussehen des DateChooser-Steuerelements.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:yearNavigationEnabled:get"><apiName>yearNavigationEnabled</apiName><shortdesc>
      Aktiviert die Jahr-Navigation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Aktiviert die Jahr-Navigation. Wenn <codeph>true</codeph>, erscheinen die Aufwärts- und Abwärts-Schaltflächen rechts neben dem eingeblendeten Jahr. Sie können diese Schaltflächen zum Ändern des aktuellen Jahres verwenden. Diese Schaltflächen werden in Gebietsschemas, in welchen das Jahr vor dem Monat steht, auf der linken Seite angezeigt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:yearSymbol:get"><apiName>yearSymbol</apiName><shortdesc>
      Diese Eigenschaft wird an das Ende des Jahres angehängt, das im oberen Teil des Steuerelements angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Diese Eigenschaft wird an das Ende des Jahres angehängt, das im oberen Teil des Steuerelements angezeigt wird. Manche Sprachen wie z. B. Japanisch fügen nach dem Jahr ein eigenes Symbol hinzu. 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ColorPicker"><apiName>ColorPicker</apiName><shortdesc>
  Das ColorPicker-Steuerelement ermöglicht es, aus einer Farbfeldliste eine Farbe zu wählen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="highlightAlphas"/><Exclude kind="style" name="fillColors"/><Exclude kind="style" name="fillAlphas"/><Exclude kind="property" name="text"/><styles><style inherit="no" name="swatchPanelStyleName" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Name des Klassenselektors, welcher die Stileigenschaften für das Farbfeldbedienfeld definiert. Der Standardwert ist <codeph>undefined</codeph>. Das folgende Beispiel zeigt die Standardstileigenschaften, die von <codeph>swatchPanelStyleName</codeph> definiert werden. 
  <pre>
  ColorPicker {
      swatchPanelStyleName:mySwatchPanelStyle;
  }
  
  .mySwatchPanelStyle {
      backgroundColor:#E5E6E7;
      columnCount:20;
      horizontalGap:0;
      previewHeight:22;
      previewWidth:45;
      swatchGridBackgroundColor:#000000;
      swatchGridBorderSize:0;
      swatchHeight:12;
      swatchHighlightColor:#FFFFFF;
      swatchHighlightSize:1;
      swatchWidth:12;
      textFieldWidth:72;
      verticalGap:0;
  }
  </pre>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="swatchBorderSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Größe der Konturen des Farbfeldrahmens. Der Standardwert ist 1.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="swatchBorderColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Farbfeldrahmens. Der Standardwert ist <codeph>0x000000</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Obere Zellauffüllung des SwatchPanel-Objekts über dem Farbfeldraster. Der Standardwert ist 4.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Rechte Zellauffüllung des SwatchPanel-Objekts an der Seite des Farbfeldrasters. Der Standardwert ist 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Linke Zellauffüllung des SwatchPanel-Objekts an der Seite des Farbfeldrasters. Der Standardwert ist 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Untere Zellauffüllung des SwatchPanel-Objekts unter dem Farbfeldraster. Der Standardwert ist 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Function">
<description>
  Beschleunigungsfunktion zur Steuerung des Tweenings von Komponenten. Der Standardwert ist <codeph>undefined</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Länge eines offenen Übergangs in Millisekunden.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Farben zum Tönen des Hintergrunds von Steuerelementen. Verwenden Sie für ein einheitliches Erscheinungsbild des Steuerelements dieselbe Farbe für beide Werte. Der Standardwert ist <codeph>[ 0xFFFFFF, 0xCCCCCC ]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenz für die Hintergrundfüllung von Steuerelementen. Der Standardwert ist <codeph>[ 0.6, 0.4 ]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Function">
<description>
  Beschleunigungsfunktion zur Steuerung des Tweenings von Komponenten. Der Standardwert ist <codeph>undefined</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Länge eines Übergangs am Ende in Millisekunden.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des äußeren Rahmens des SwatchPanel-Objekts. Der Standardwert ist <codeph>0xA5A9AE</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Legt fest, welche Ecken des Fokusrechtecks abgerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ColorPicker&gt;</code> tag inherits all of the properties of its
  superclass, and the following properties:</p>
 
  <pre>
  &lt;mx:ColorPicker
    <b>Properties</b>
    colorField="color"
    labelField="label"
    selectedColor="0x000000"
    selectedIndex="0"
    showTextField="true|false"
 
    <b>Styles</b>
    borderColor="0xA5A9AE"
    closeDuration="250"
    closeEasingFunction="undefined"
    color="0x0B333C"
    disabledIconColor="0x999999"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontfamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0""
    fontSize="10"
    fontStyle="normal"
    fontThickness="0"
    fontWeight="normal"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x000000"
    leading="2"
    openDuration="250"
    openEasingFunction="undefined"
    paddingBottom="5"
    paddingLeft="5"
    paddingRight="5"
    paddingTop="4"
    swatchBorderColor="0x000000"
    swatchBorderSize="1"
    swatchPanelStyleName="undefined"
    textAlign="left"
    textDecoration="none"
    textIndent="0"
 
    <b>Events</b>
    change="<i>No default</i>"
    close="<i>No default</i>"
    enter="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
    open="<i>No default</i>"
    /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des ColorPicker-Steuerelements kann ein Benutzer eine Farbe aus einer Farbenliste auswählen. Der Standardmodus der Komponente zeigt ein einzelnes Farbfeld in einer quadratischen Schaltfläche an. Klickt der Benutzer auf die Farbfeldschaltfläche, wird das Farbfeldbedienfeld mit der gesamten Farbfeldliste angezeigt.
 
  <p>Das ColorPicker-Steuerelement verfügt über die folgenden Größeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>ColorPicker: 22 mal 22 Pixel Farbfeldbedienfeld: An die Breite des ColorPicker-Steuerelements angepasst.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel mal 0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Nicht festgelegt</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ColorPickerExample.mxml"><swfblock conref="examples/ColorPickerExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><adobeApiEvent id="mx.controls:ColorPicker_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Wird ausgelöst, wenn das Farbfeldbedienfeld geöffnet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4920
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das Farbfeldbedienfeld geöffnet wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Wird bei Rollover des Benutzers über ein Farbfeld im SwatchPanel-Objekt ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4923
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollover des Benutzers über ein Farbfeld im SwatchPanel-Objekt ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Wird bei Rollout aus einem Farbfeld im SwatchPanel-Objekt ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4924
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollout aus einem Farbfeld im SwatchPanel-Objekt ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  Wird ausgelöst, wenn die ColorPicker-Eigenschaft „editable“ auf „true“ gesetzt wird und der Benutzer die Eingabetaste nach Eingabe eines hexadezimalen Farbwerts drückt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4919
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die ColorPicker-Eigenschaft <codeph>editable</codeph> auf <codeph>true</codeph> gesetzt wird und der Benutzer die Eingabetaste nach Eingabe eines hexadezimalen Farbwerts drückt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Wird ausgelöst, wenn das Farbfeldbedienfeld geschlossen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4921
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das Farbfeldbedienfeld geöffnet wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich die ausgewählte Farbe nach einer Interaktion durch den Benutzer ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4918
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die ausgewählte Farbe nach einer Interaktion durch den Benutzer ändern.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ColorPicker:ColorPicker"><apiName>ColorPicker</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ColorPicker:close"><apiName>close</apiName><shortdesc>
      Blendet das Dropdown-SwatchPanel-Objekt aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4926
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>trigger</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
      Blendet das Dropdown-SwatchPanel-Objekt aus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ColorPicker:open"><apiName>open</apiName><shortdesc>
      Blendet das Dropdown-SwatchPanel-Objekt ein, welches dem Benutzer die Farben zur Auswahl anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4925
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Blendet das Dropdown-SwatchPanel-Objekt ein, welches dem Benutzer die Farben zur Auswahl anzeigt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ColorPicker:colorField:get"><apiName>colorField</apiName><shortdesc>
      Name des Felds in den Objekten des dataProvider-Arrays, das die hexadezimalen Farbwerte festlegt, die vom Farbfeldbedienfeld angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4927
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"color"
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des Felds in den Objekten des dataProvider-Arrays, das die hexadezimalen Farbwerte festlegt, die vom Farbfeldbedienfeld angezeigt werden.
     
      <p>Wenn die dataProvider-Objekte keine Farbfelder enthalten, stellen Sie die <codeph>colorField</codeph>-Eigenschaft so ein, dass der korrekte Feldname verwendet wird. Diese Eigenschaft steht zur Verfügung, hat aber keine Bedeutung, wenn der dataProvider ein Array von hexadezimalen Farbwerten ist.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:labelField:get"><apiName>labelField</apiName><shortdesc>
      Name des Felds in den Objekten des dataProvider-Arrays, welches anzuzeigenden Text enthält, der als Beschriftung im Textfeld des SwatchPanel-Objekts angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4928
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des Felds in den Objekten des dataProvider-Arrays, welches anzuzeigenden Text enthält, der als Beschriftung im Textfeld des SwatchPanel-Objekts angezeigt werden soll.
     
      <p>Wenn die dataProvider-Objekte keine Beschriftungsfelder enthalten, stellen Sie die <codeph>labelField</codeph>-Eigenschaft so ein, dass der korrekte Feldname verwendet wird. Diese Eigenschaft steht zur Verfügung, hat aber keine Bedeutung, wenn der dataProvider ein Array von hexadezimalen Farbwerten ist.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:selectedColor:get"><apiName>selectedColor</apiName><shortdesc>
      Der Wert der aktuell ausgewählten Farbe im SwatchPanel-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4932
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
      Der Wert der aktuell ausgewählten Farbe im SwatchPanel-Objekt. Sie können diese Eigenschaft nur in einem&lt;mx:ColorPicker>-Tag auf einen Standardstringnamen wie „blue“ setzen. Wenn der dataProvider einen Eintrag für Schwarz enthält (0x000000), ist der Standardwert 0, anderenfalls entspricht der Standardwert der Farbe des Elements an der Indexposition 0 des Datenproviders.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:showTextField:get"><apiName>showTextField</apiName><shortdesc>
      Legt fest, ob das Textfeld eingeblendet wird, welches die Farbbeschriftung oder hexadezimale Farbwerte anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob das Textfeld eingeblendet wird, welches die Farbbeschriftung oder hexadezimale Farbwerte anzeigt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:protected:swatchStyleFilters:get"><apiName>swatchStyleFilters</apiName><shortdesc>
      Ein Satz aus Stilen, welche vom ColorPicker an die Farbfeldvorschau übergeben werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Ein Satz aus Stilen, welche vom ColorPicker an die Farbfeldvorschau übergeben werden. 
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ColorPicker:selectedIndex:set"><apiName>selectedIndex</apiName><shortdesc>
      Indexposition im dataProvider für das ausgewählte Element des SwatchPanel-Objekts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4931
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Indexposition im dataProvider für das ausgewählte Element des SwatchPanel-Objekts. Das Einstellen dieser Eigenschaft setzt die ausgewählte Farbe auf die Farbe, welche der Indexposition entspricht, setzt die ausgewählte Indexposition im Dropdownfarbfeld auf den <codeph>selectedIndex</codeph>-Eigenschaftswert und blendet die verknüpfte Beschriftung im Textfeld ein. Der Standardwert ist die Indexposition, welche Schwarz (0x000000) entspricht, falls diese gefunden wird, anderenfalls ist er 0.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:SWFLoader"><apiName>SWFLoader</apiName><shortdesc>
  Das SWFLoader-Steuerelement lädt eine festgelegte SWF-Datei und zeigt sie an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="baseColor"/><effects><effect event="complete" name="completeEffect" owner="mx.controls:SWFLoader">
<description>
  Ein Effekt der gestartet wird, wenn das complete-Ereignis ausgelöst wurde.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><styles><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="String">
<description>
  Die vertikale Ausrichtung des Inhalts, wenn das Seitenverhältnis nicht 1:1 ist. Mögliche Werte sind: <codeph>"top"</codeph>, <codeph>"middle"</codeph> und <codeph>"bottom"</codeph>.
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="String">
<description>
  Die horizontale Ausrichtung des Inhalts, wenn das Seitenverhältnis nicht 1:1 ist. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"center"</codeph> und <codeph>"right"</codeph>.
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="brokenImageSkin" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="Class">
<description>
  Der Name der Klasse, die als SWFLoader-Skin verwendet werden soll, wenn das Steuerelement den Inhalt nicht laden kann. Der Standardwert ist das Symbol „__brokenImage“ in der Assets.swf-Datei.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="brokenImageBorderSkin" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="Class">
<description>
  Der Name der Klasse, die als SWFLoader-Border-Skin verwendet wird, wenn das Steuerelement den Inhalt nicht laden kann.
  </description>
<default>BrokenImageBorderSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The &lt;mx:SWFLoader&gt; tag inherits all of the tag attributes
  of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:SWFLoader
    <strong>Properties</strong>
    autoLoad="true|false"
    loadForCompatibility="false|true"
    loaderContext="null"
    maintainAspectRatio="true|false"
    scaleContent="true|false"
    showBusyCursor="false|true"
    source="<i>No default</i>"
    trustContent="false|true"
  
    <strong>Styles</strong>
    brokenImageBorderSkin="BrokenImageBorderSkin"
    brokenImageSkin="<i>'__brokenImage' symbol in Assets.swf</i>"
    horizontalAlign="left|center|right"
    verticalAlign="top|middle|bottom"
  
    <strong>Effects</strong>
    completeEffect="<i>No default</i>"
    
    <strong>Events</strong>
    complete="<i>No default</i>"
    httpStatus="<i>No default</i>"
    init="<i>No default</i>"
    ioError="<i>No default</i>"
    open="<i>No default</i>"
    progress="<i>No default</i>"
    securityError="<i>No default</i>"
    unload="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:ISWFLoader</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das SWFLoader-Steuerelement lädt eine festgelegte SWF-Datei und zeigt sie an. Normalerweise wird eine Flex-Anwendung mithilfe von SWFLoader in eine Flex-Hostanwendung geladen.
 
  <p><b>Hinweis:</b> Sie können das SWFLoader-Steuerelement verwenden, um eine GIF-, JPEG- oder PNG-Bilddatei zur Laufzeit zu laden, um ein ByteArray zur Laufzeit zu laden, welches SWF-, GIF-, JPEG- oder PNG-Bilder darstellt, oder um eine eingebettete Version jeder dieser Dateitypen und SVG-Dateien zur Kompilierzeit zu laden, indem Sie <codeph>@Embed(source='filename')</codeph> verwenden. Das Image-Steuerelement ist besser geeignet und sollte deshalb für die Großzahl von Bildladevorgängen verwendet werden. Das Image-Steuerelement ist auch dafür ausgelegt, in benutzerdefinierten Elementrenderern und Elementeditoren verwendet zu werden. Wenn Sie SWFLoader oder Image mit einer SVG-Datei verwenden, können Sie die SVG-Datei nur laden, wenn diese in Ihre Anwendung mithilfe eines Embed-Ausdrucks eingebettet wurde. Sie können SVG-Dateien nicht aus dem Netzwerk zur Laufzeit laden.</p>
 
  <p>Das SWFLoader-Steuerelement erlaubt es Ihnen, seinen Inhalt zu skalieren und seine Größe festzulegen. Es kann sich auch selbst skalieren, um sich dem Inhalt anzupassen. Standardmäßig wird der Inhalt skaliert und in das SWFLoader-Steuerelement eingepasst. Je nach Bedarf kann der Inhalt auch programmgesteuert geladen und der Ladevorgang überwacht werden.</p>  
 
  <p>Ein SWFLoader-Steuerelement kann keinen Fokus erhalten. Die Inhalte eines SWFLoader-Steuerelements können Fokus akzeptieren und ihre eigenen Fokusinteraktionen haben.</p>
 
  <p>Das SWFLoader-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Ausreichende Breite und Höhe für den geladenen Inhalt.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Nicht festgelegt</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="local.mxml"/><example conref="SimpleLoader.mxml"><swfblock conref="examples/SimpleLoader.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Image"><linktext>mx.controls.Image</linktext></link></related-links><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.UNLOAD_unload"><apiName>unload</apiName><shortdesc>
  Wird ausgelöst, wenn ein geladenes Objekt entfernt wird oder wenn eine zweite Ladung von demselben SWFLoader-Steuerelement durchgeführt wird und der Originalinhalt vor dem Start des neuen Ladevorgangs entfernt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.UNLOAD</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein geladenes Objekt entfernt wird oder wenn eine zweite Ladung von demselben SWFLoader-Steuerelement durchgeführt wird und der Originalinhalt vor dem Start des neuen Ladevorgangs entfernt wurde.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"><apiName>securityError</apiName><shortdesc>
  Wird ausgelöst, wenn beim Laden des Inhalts ein Sicherheitsfehler auftritt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier>flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn beim Laden des Inhalts ein Sicherheitsfehler auftritt. Weitere Informationen finden Sie in SecurityErrorEvent-Klasse.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Wird während des Ladevorgangs ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird während des Ladevorgangs ausgelöst.
 
  <p>Dieses Ereignis wird unabhängig davon ausgelöst, ob der Ladevorgang automatisch oder durch einen expliziten Aufruf der Methode <codeph>load()</codeph> ausgelöst wurde.</p>
 
  <p><b>Hinweis:</b> Es ist nicht sicher, dass das <codeph>progress</codeph>-Ereignis ausgelöst werden kann. Das <codeph>complete</codeph>-Ereignis kann auch eingehen, wenn kein <codeph>progress</codeph>-Ereignis ausgelöst wurde. Dies kann passieren, wenn der geladene Inhalt eine lokale Datei ist.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.OPEN_open"><apiName>open</apiName><shortdesc>
  Wird beim Start eines Netzwerkprozesses ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird beim Start eines Netzwerkprozesses ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.IOErrorEvent.IO_ERROR_ioError"><apiName>ioError</apiName><shortdesc>
  Wird ausgelöst, wenn ein Eingabe-/Ausgabe-Fehler auftritt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier>flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Eingabe-/Ausgabe-Fehler auftritt.
  </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="flash.events.IOErrorEvent.xml"><linktext>flash.events.IOErrorEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.INIT_init"><apiName>init</apiName><shortdesc>
  Wird ausgelöst, wenn die Eigenschaften und Methoden einer geladenen SWF-Datei zugänglich sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.INIT</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die Eigenschaften und Methoden einer geladenen SWF-Datei zugänglich sind. Die folgenden beiden Bedingungen müssen erfüllt sein, bevor dieses Ereignis ausgelöst wird:
 
  <ul>
    <li>Alle mit dem geladenen Objekt und dem Steuerelement verknüpften Eigenschaften und Methoden sind zugänglich.</li>
    <li>Die Konstruktoren für alle untergeordneten Objekte sind abgeschlossen.</li>
  </ul>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"><apiName>httpStatus</apiName><shortdesc>
  Wird ausgelöst, wenn eine Netzwerkanfrage über HTTP und Flash Player gestellt wird oder AIR den HTTP-Statuscode ermittelt hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier>flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn eine Netzwerkanfrage über HTTP und Flash Player gestellt wird oder AIR den HTTP-Statuscode ermittelt hat.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  Wird nach Abschluss des Ladevorgangs ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird nach Abschluss des Ladevorgangs ausgelöst.
 
  <p>Dieses Ereignis wird unabhängig davon ausgelöst, ob der Ladevorgang automatisch oder durch einen expliziten Aufruf der Methode <codeph>load()</codeph> ausgelöst wurde.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:SWFLoader:SWFLoader"><apiName>SWFLoader</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:SWFLoader:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      Die Standardprozedur für das MouseEvent.CLICK-Ereignis.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Ereignisobjekt.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Standardprozedur für das <codeph>MouseEvent.CLICK</codeph>-Ereignis.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:getVisibleApplicationRect"><apiName>getVisibleApplicationRect</apiName><shortdesc>
      
      Ruft die Grenzen der geladenen Anwendung ab, die auf dem Bildschirm zu sehen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein <codeph>Rectangle</codeph>, welches den sichtbaren Teil dieses Objekts enthält. Das Rechteck verwendet globale Koordinaten.
      
      </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>allApplications</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Bestimmt, ob das sichtbare Rechteck nur basierend auf den Anzeigeobjekten innerhalb dieser Anwendung berechnet wurde, oder ob alle übergeordneten Anwendungen ebenfalls in die Berechnung einbezogen wurden. Das Einbeziehen von übergeordneten Anwendungen kann die zurückgegebene sichtbare Fläche verringern. Wenn <codeph>true</codeph>, werden alle Anwendungen verwendet, um die sichtbare Fläche zu suchen. Anderenfalls werden lediglich die Anzeigeobjekte dieser Anwendung verwendet.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ruft die Grenzen der geladenen Anwendung ab, die auf dem Bildschirm zu sehen ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:load"><apiName>load</apiName><shortdesc>
      Lädt ein Bild oder eine SWF-Datei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Absolute oder relative URL der zu ladenden GIF-, JPEG-, PNG- oder SWF-Datei.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Lädt ein Bild oder eine SWF-Datei. Das <codeph>url</codeph>-Argument kann GIF-, JPEG-, PNG- oder SWF-Dateien referenzieren; diese Methode können Sie jedoch nicht für das Laden vom SVG-Dateien verwenden. Stattdessen muss sie mithilfe eines Embed-Ausdrucks und der <codeph>source</codeph> Eigenschaft geladen werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:unloadAndStop"><apiName>unloadAndStop</apiName><shortdesc>
      Entlädt eine Bild- oder SWF-Datei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invokeGarbageCollector</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc> Stellt einen Hinweis für den Garbagekollektor bereit, ob er für die untergeordneten SWF-Objekte ausgeführt werden soll (<codeph>true</codeph>) oder nicht (<codeph>false</codeph>). Wenn Sie viele Objekte in asynchroner Weise entladen, kann das Setzen des <codeph>gc</codeph>-Parameters auf <codeph>false</codeph> die Leistung der Anwendung verbessern. Allerdings kann das Setzen von <codeph>false</codeph> dazu führen, dass Medien und Anzeigeobjekte der untergeordneten SWF-Datei nach dem Entladen der untergeordneten SWF-Datei weiterhin im Speicher verbleiben.  
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Entlädt eine Bild- oder SWF-Datei. Nachdem diese Methode <codeph>source</codeph> zurückgegeben hat, wird die Eigenschaft „null“. Dies wird nur unterstützt, wenn der Host-Flash Player Version 10 oder höher ist. Wenn der Host-Flash Player älter als Version 10 ist, entlädt diese Methode den Inhalt so, als ob <codeph>source</codeph> auf „null“ gesetzt wäre. Diese Methode versucht SWF-Dateien zu entladen, indem sie Verweise auf EventDispatcher-, NetConnection-, Timer-, Sound- oder Video-Objekte der untergeordneten SWF-Datei entfernt. Als Ergebnis tritt Folgendes für die untergeordnete SWF-Datei und die Anzeigeliste der untergeordneten SWF-Datei ein: 
      <ul>
      <li>Sounds werden gestoppt.</li>
      <li>Stage-Ereignis-Listener werden entfernt.</li>
      <li>Ereignis-Listener für <codeph>enterFrame</codeph>, <codeph>frameConstructed</codeph>, <codeph>exitFrame</codeph>, <codeph>activate</codeph> und <codeph>deactivate</codeph> werden entfernt.</li>
      <li>Timer werden gestoppt.</li>
      <li>Kamera- und Mikrofoninstanzen werden getrennt.</li>
      <li>Movieclips werden gestoppt.</li>
      </ul>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:SWFLoader:autoLoad:get"><apiName>autoLoad</apiName><shortdesc>
      Ein Flag, welches anzeigt, ob ein Inhalt automatisch geladen wird oder auf den Aufruf der load()-Methode wartet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, welches anzeigt, ob ein Inhalt automatisch geladen wird oder auf den Aufruf der <codeph>load()</codeph>-Methode wartet. Wenn <codeph>true</codeph>, wird der Inhalt automatisch geladen. Wenn <codeph>false</codeph>, muss die <codeph>load()</codeph>-Methode aufgerufen werden.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
      Die Anzahl der bereits geladenen Byte der SWF- bzw. Grafikdatei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Anzahl der bereits geladenen Byte der SWF- bzw. Bilddatei.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
      Die Gesamtgröße der SWF- oder Bilddatei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Gesamtgröße der SWF- oder Bilddatei.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:childAllowsParent:get"><apiName>childAllowsParent</apiName><shortdesc>
     
      Testet, ob das untergeordnete Element dem übergeordneten Element Zugriff auf seine Anzeigeobjekte gestattet und ihm erlaubt, auf Meldungen zu warten, die aus dem untergeordneten Objekt stammen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     
      Überprüft, ob das übergeordnete Element Zugriff auf die Anzeigeobjekte des untergeordneten Elements hat oder auf Meldungen warten darf, die ihren Ursprung im untergeordneten Element haben. <codeph>true</codeph>, wenn Zugriff erlaubt ist, wenn nicht, <codeph>false</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:content:get"><apiName>content</apiName><shortdesc>
      Diese Eigenschaft enthält das Objekt, das den Inhalt darstellt, der in das SWFLoader-Steuerelement geladen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3134
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/><apiTipTexts><apiTipText>Gibt den Inhalt des SWFLoader zurück.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Diese Eigenschaft enthält das Objekt, das den Inhalt darstellt, der in das SWFLoader-Steuerelement geladen wurde. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
      Höhe des skalierten Inhalts in Pixeln, der vom Steuerelement geladen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Höhe des skalierten Inhalts in Pixeln, der vom Steuerelement geladen wurde. Beachten Sie, dass dies nicht die Höhe des Steuerelements ist, sondern lediglich die des Inhalts. Verwenden Sie die <codeph>height</codeph>-Eigenschaft des Steuerelements, um dessen Höhe zu beziehen.
     
      <p>Der Wert dieser Eigenschaft steht noch nicht fest, wenn das <codeph>complete</codeph>-Ereignis ausgelöst wird. Sie können den Wert abrufen, nachdem das <codeph>updateComplete</codeph>-Ereignis ausgelöst wurde.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
      Breite des skalierten Inhalts in Pixeln, der von dem Steuerelement geladen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Breite des skalierten Inhalts in Pixeln, der von dem Steuerelement geladen wurde. Beachten Sie, dass dies nicht die Breite des Steuerelements ist, sondern die des geladenen Inhalts. Verwenden Sie die <codeph>width</codeph>-Eigenschaft des Steuerelements, um die Breite zu beziehen.
     
      <p>Der Wert dieser Eigenschaft steht noch nicht fest, wenn das <codeph>complete</codeph>-Ereignis ausgelöst wird. Sie können den Wert abrufen, nachdem das <codeph>updateComplete</codeph>-Ereignis ausgelöst wurde.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:loadForCompatibility:get"><apiName>loadForCompatibility</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Inhalt geladen ist, sodass er mit Anwendungen verwendet werden kann, die mit einer anderen Version des Flex-Compilers erstellt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Inhalt geladen ist, sodass er mit Anwendungen verwendet werden kann, die mit einer anderen Version des Flex Compilers erstellt wurden. Die Kompatibilität mit anderen Flex-Anwendungen wird durch das Laden der Anwendung in eine gleichgeordnete (Peer) ApplicationDomain erreicht. Das Flag wird ignoriert, wenn der Inhalt in eine andere SecurityDomain geladen werden muss. Wenn <codeph>true</codeph>, wird der Inhalt in eine gleichgeordnete ApplicationDomain geladen. Wenn <codeph>false</codeph>, wird der Inhalt in eine untergeordnete ApplicationDomain geladen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:loaderContext:get"><apiName>loaderContext</apiName><shortdesc>
      Ein LoaderContext-Objekt, mit welchem das Laden des Inhalts gesteuert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.system:LoaderContext"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein LoaderContext-Objekt, mit welchem das Laden des Inhalts gesteuert wird. Dies ist eine erweiterte Eigenschaft. In den meisten Fällen können Sie die <codeph>trustContent</codeph>-Eigenschaft verwenden.
     
      <p>Der Standardwert ist <codeph>null</codeph>. Dies veranlasst das Steuerelement, die <codeph>trustContent</codeph>-Eigenschaft zu verwenden, um ein LoaderContext-Objekt zu erzeugen, das Sie abrufen können, nachdem das Laden begonnen hat.</p>
     
      <p>Um das LoaderContext-Objekt verwenden zu können, müssen Sie die Funktionsweise der SecurityDomain- und ApplicationDomain-Klassen verstehen. Das Festlegen dieser Eigenschaft startet keinen Ladevorgang; Sie müssen diese festlegen, bevor der Ladevorgang startet. Dies bedeutet nicht, dass Sie die <codeph>autoLoad</codeph>-Eigenschaft auf <codeph>false</codeph> setzen müssen, weil der Ladevorgang nicht unmittelbar erfolgt, aber darauf zu warten, dass das <codeph>creationComplete</codeph>-Ereignis dies tut, dauert zu lange.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.LoaderContext.xml"><linktext>flash.system.LoaderContext</linktext></link><link href="" invalidHref="flash.system.ApplicationDomain.xml"><linktext>flash.system.ApplicationDomain</linktext></link><link href="" invalidHref="flash.system.SecurityDomain.xml"><linktext>flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="mx.controls:SWFLoader:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      Ein Flag, welches anzeigt, ob das Seitenverhältnis des geladenen Inhalts beibehalten werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, welches anzeigt, ob das Seitenverhältnis des geladenen Inhalts beibehalten werden soll. Wenn <codeph>true</codeph>, wird festgelegt, dass das Bild mit demselben Verhältnis von Breite zu Höhe angezeigt werden soll wie das Original.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:parentAllowsChild:get"><apiName>parentAllowsChild</apiName><shortdesc>
     
      Testet, ob das übergeordnete Element dem untergeordneten Element Zugriff auf seine Anzeigeobjekte gestattet und ihm erlaubt, auf Meldungen zu warten, die aus dem übergeordneten Objekt stammen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     
      Überprüft, ob das untergeordnete Element Zugriff auf die Anzeigeobjekte des übergeordneten Elements hat oder auf Meldungen warten darf, die ihren Ursprung im übergeordneten Element haben. <codeph>true</codeph>, wenn Zugriff erlaubt ist, wenn nicht, <codeph>false</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:percentLoaded:get"><apiName>percentLoaded</apiName><shortdesc>
      Ladestatus der Bild- oder SWF-Datei in Prozent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ladestatus der Bild- oder SWF-Datei in Prozent.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:scaleContent:get"><apiName>scaleContent</apiName><shortdesc>
      Ein Flag, welches anzeigt, ob der Inhalt skaliert werden soll, um in das Steuerelement zu passen oder ungekehrt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, welches anzeigt, ob der Inhalt skaliert werden soll, um in das Steuerelement zu passen oder ungekehrt. Wenn <codeph>true</codeph>, wird der Inhalt skaliert, sodass er sich dem SWFLoader-Steuerelement anpasst. Wenn <codeph>false</codeph>, wird das SWFLoader-Steuerelement skaliert, sodass es sich dem Inhalt anpasst. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:showBusyCursor:get"><apiName>showBusyCursor</apiName><shortdesc>
      Ein Flag, welches anzeigt, ob ein Aktiv-Cursor während des Ladens angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, welches anzeigt, ob ein Aktiv-Cursor während des Ladevorgangs angezeigt wird. Wenn <codeph>true</codeph>, wird ein Aktiv-Cursor während des Ladevorgangs angezeigt. Der Standardcursor für Aktivitäten ist mx.skins.halo.BusyCursor, wie in der <codeph>busyCursor</codeph>-Eigenschaft der CursorManager-Klasse festgelegt.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.managers.xml#CursorManager"><linktext>mx.managers.CursorManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:SWFLoader:smoothBitmapContent:get"><apiName>smoothBitmapContent</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Inhalt bei seiner Skalierung geglättet werden soll.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Inhalt bei seiner Skalierung geglättet werden soll. Nur Bitmapinhalte können geglättet werden. Ist der Wert <codeph>true</codeph> und der Inhalt ein Bitmap, wird die Glättungseigenschaft des Inhalts auf <codeph>true</codeph> gesetzt. Ist der Wert <codeph>false</codeph>, wird der Inhalt nicht geglättet. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:source:get"><apiName>source</apiName><shortdesc>
      Der URL-, Objekt-, Klassen- oder Stringname einer Klasse, der als Inhalt zu laden ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der URL-, Objekt-, Klassen- oder Stringname einer Klasse, der als Inhalt zu laden sind. Die <codeph>source</codeph>-Eigenschaft nimmt die folgende Form an:
     
      <p><pre>
      <codeph>source="<i>URLOrPathOrClass</i>"</codeph></pre></p>
     
      <p><pre>
      <codeph>source="@Embed(source='<i>PathOrClass</i>')"</codeph></pre></p>
     
      <p>Der Wert der <codeph>source</codeph>-Eigenschaft stellt eine relative oder absolute URL dar; ein ByteArray, welches eine SWF-, GIF-, JPEG- oder PNG-Datei darstellt; ein Objekt, welches IFlexDisplayObject implementiert; eine Klasse, deren Typ IFlexDisplayObject implementiert; oder einen String, der eine Klasse darstellt. </p> 
     
      <p>Wenn Sie einen Pfad zu einer SWF-, GIF-, JPEG-, PNG- oder SVG-Datei festlegen, konvertiert Flex die Datei automatisch in den richtigen Datentyp für das SWFLoader-Steuerelement um.</p> 
     
      <p>Wenn Sie den Embed-Ausdruck weglassen, lädt Flex die referenzierte Datei zur Laufzeit; sie wird nicht als Teil der generierten SWF-Datei verpackt. Die <codeph>source</codeph>-Eigenschaft unterstützt nur das Laden von GIF-, JPEG-, PNG-Bildern oder SWF-Dateien zur Laufzeit.</p>
     
      <p>Benutzer von Flex Data Services können das SWFLoader-Steuerelement verwenden, um eine Flex-Anwendung mithilfe des folgenden Strings zu laden.</p>
     
      <p><pre>
      <codeph>source="<i>MXMLPath</i>.mxml.swf"</codeph></pre></p>
     
      <p>Flex Data Services kompiliert die MXML-Datei und gibt eine SWF-Datei an die Hauptanwendung zurück. Dieses Verfahren funktioniert sehr gut für SWF-Dateien, die Grafiken und Animationen zu einer Anwendung hinzufügen, aber nicht für intensive Benutzerinteraktion bestimmt sind. Wenn Sie SWF-Dateien importieren, die für intensive Benutzerinteraktion gedacht sind, sollten Sie diese als benutzerdefinierte Komponenten gestalten. </p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:swfBridge:get"><apiName>swfBridge</apiName><shortdesc>
     
      Eine Brücke zur Anwendung, die mit dem Implementor der Schnittstelle verknüpft ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.events:IEventDispatcher"/></apiValueDef><apiDesc>
     
      Eine Brücke zur Anwendung, die mit dem Implementor dieser Schnittstelle verknüpft ist. Der IEventDispatcher, der verwendet werden kann, um Ereignisse an eine Anwendung in einer anderen ApplicationDomain oder einer anderen Sandbox zu senden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:trustContent:get"><apiName>trustContent</apiName><shortdesc>
      Wenn „true“, wird der Inhalt in Ihre Sicherheitsdomäne geladen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn <codeph>true</codeph>, wird der Inhalt in Ihre Sicherheitsdomäne geladen. Das heißt, der Ladevorgang scheitert, wenn sich der Inhalt in einer anderen Domäne befindet und diese Domäne keine crossdomain.xml-Datei besitzt, welche Ihrer Domäne den Zugriff erlaubt. Diese Eigenschaft hat nur Auswirkungen auf den nächsten Ladevorgang, sie startet keinen neuen Ladevorgang für bereits geladene Inhalte.
     
      <p>Der Standardwert ist <codeph>false</codeph>, das heißt, dass jede Art Inhalt ohne Fehler geladen wird, auf den Inhalt aber kein Zugriff möglich ist. Wichtig ist, dass der geladene Inhalt nicht auf Ihre Objekte und Ihren Code zugreifen kann. Dies ist das sicherste Verfahren. Setzen Sie diese Eigenschaft nicht auf <codeph>true</codeph>, solange Sie nicht absolut sicher sind, dass Sie dem geladenen Inhalt vertrauen können. Dies betrifft besonders aktive Inhalte wie SWF-Dateien.</p>
     
      <p>Sie können auch die <codeph>loaderContext</codeph>-Eigenschaft verwenden, um die Art und Weise des Ladevorgangs zu bestimmen, wenn die <codeph>trustContent</codeph>-Einstellung Ihren Bedürfnissen nicht gerecht wird. Die <codeph>loaderContext</codeph>-Eigenschaft veranlasst den SWFLoader, den Wert der <codeph>trustContent</codeph>-Eigenschaft zu ignorieren. Sie sollten sich jedoch mit SecurityDomain- und ApplicationDomain-Klassen auskennen, wenn Sie die <codeph>loaderContext</codeph>-Eigenschaft verwenden.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.SecurityDomain.xml"><linktext>flash.system.SecurityDomain</linktext></link><link href="" invalidHref="flash.system.ApplicationDomain.xml"><linktext>flash.system.ApplicationDomain</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:NavBar"><apiName>NavBar</apiName><shortdesc>
  Das NavBar-Steuerelement ist die Superklasse für Navigatorsteuerelemente, wie z. B. das LinkBar- und TabBar-Steuerelement, und kann nicht direkt instanziiert werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="label"/><Exclude kind="property" name="icon"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Exclude kind="property" name="defaultButton"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code><mx:NavBar></code> tag inherits all of the tag attributes
  of its superclass, with the exception of scrolling-related
  attributes, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:<i>tagname</i>
    <strong>Properties</strong>
    dataProvider="<i>No default</i>"
    iconField="icon"
    labeField="label"
    selectedIndex="-1"
    toolTipField="toolTip"
     
    <strong>Events</strong>
    itemClick="<i>No default</i>"
    &gt;
     ...
       <i>child tags</i>
     ...
    &lt;/mx:<i>tagname</i>&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das NavBar-Steuerelement ist die Superklasse für Navigatorsteuerelemente, wie z. B. das LinkBar- und TabBar-Steuerelement, und kann nicht direkt instanziiert werden.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.collections.xml#IList"><linktext>mx.collections.IList</linktext></link><link href="mx.containers.xml#ViewStack"><linktext>mx.containers.ViewStack</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link><link href="mx.controls.xml#TabBar"><linktext>mx.controls.TabBar</linktext></link><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link></related-links><adobeApiEvent id="mx.controls:NavBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn ein Navigationselement ausgewählt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Navigationselement ausgewählt wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:NavBar:NavBar"><apiName>NavBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:NavBar:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      Verarbeitet das MouseEvent.CLICK-Ereignis für die Elemente im NavBar-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Das Ereignisobjekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet das <codeph>MouseEvent.CLICK</codeph>-Ereignis für die Elemente im NavBar-Steuerelement. Diese Prozedur löst das <codeph>itemClick</codeph>-Ereignis für das NavBar-Steuerelement aus.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:createNavItem"><apiName>createNavItem</apiName><shortdesc>
      Erzeugt die individuellen Navigatorelemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Das erzeugte Navigatorelement.
      
      </apiDesc><apiOperationClassifier>mx.core:IFlexDisplayObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>Die Beschriftung für das erzeugte Navigatorelement. 
     
      </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>Die Beschriftung für das erzeugte Navigatorelement. Normalerweise ist dies ein Symbol, welches Sie in die Anwendung einbetten.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erzeugt die individuellen Navigatorelemente. Standardmäßig führt diese Methode keine Aktion durch. Sie können diese Methode in einer Unterklasse außer Kraft setzen, um ein Navigatorelement zu erzeugen, welches auf dem Typ der Navigatorelemente in Ihrer Unterklasse basiert.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:hiliteSelectedNavItem"><apiName>hiliteSelectedNavItem</apiName><shortdesc>
      Markiert das ausgewählte Navigatorelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des ausgewählten Elements im NavBar-Steuerelement. Das erste Element befindet sich an der Indexposition 0.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Markiert das ausgewählte Navigatorelement. Standardmäßig führt diese Methode keine Aktion durch. Sie können diese Methode in einer Unterklasse außer Kraft setzen, um das ausgewählte Navigatorelement zu markieren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Gibt den String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der Eigenschaften „labelField“ und „labelFunction“ anzeigen würde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Der auf der Grundlage der Daten anzuzeigende String.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das darzustellende Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt den String zurück, den der Renderer für das angegebene Datenobjekt auf der Grundlage der labelField- und labelFunction-Eigenschaften anzeigen würde. Falls die Methode den Parameter nicht in einen String konvertieren kann, wird ein einzelnes Leerzeichen zurückgegeben.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:resetNavItems"><apiName>resetNavItems</apiName><shortdesc>
      Setzt die Navigatorleiste auf Standard zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Setzt die Navigatorleiste auf Standard zurück. Standardmäßig führt diese Methode keine Aktion durch. Sie können diese Methode in einer Unterklasse außer Kraft setzen, um das ausgewählte Navigatorelement auf Standard zurückzusetzen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:updateNavItemIcon"><apiName>updateNavItemIcon</apiName><shortdesc>
      Setzt das Symbol eines Navigatorelements im NavBar-Steuerelement auf Standard zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Navigatorelements im NavBar-Steuerelement. Das erste Navigatorelement befindet sich an der Indexposition 0.
     
      </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiDesc>Das neue Symbol für das erzeugte Navigatorelement. Normalerweise ist dies ein Symbol, welches Sie in die Anwendung einbetten.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Setzt das Symbol eines Navigatorelements im NavBar-Steuerelement auf Standard zurück. Sie können diese Methode in einer Unterklasse außer Kraft setzen, um das Symbol eines Navigatorelements festzulegen, welches auf dem Typ der Navigatorelemente in Ihrer Unterklasse basiert.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:updateNavItemLabel"><apiName>updateNavItemLabel</apiName><shortdesc>
      Legt die Beschriftungseigenschaft eines Navigatorelements im NavBar-Steuerelement fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Navigatorelements im NavBar-Steuerelement. Das erste Navigatorelement befindet sich an der Indexposition 0.
     
      </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>Der neue Beschriftungstext für das erzeugte Navigatorelement. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die Beschriftungseigenschaft eines Navigatorelements im NavBar-Steuerelement fest. Sie können diese Methode in einer Unterklasse außer Kraft setzen, um die Beschriftung eines Navigatorelements anhand des Typs der Navigatorelemente Ihrer Unterklasse festzulegen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:NavBar:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Daten, welche zum Auffüllen des Navigatorsteuerelements verwendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Daten, welche zum Auffüllen des Navigatorsteuerelements verwendet werden. Der Datentyp kann entweder ein ViewStack-Container oder ein Array sein.
     
      <p>Wenn Sie einen ViewStack-Container verwenden, werden die <codeph>label</codeph>- und die <codeph>icon</codeph>-Eigenschaft der untergeordneten Elemente des ViewStack-Containers verwandt, um die Navigationselemente zu füllen. Siehe folgendes Beispiel:</p>
     
      <pre>
      &lt;mx:LinkBar dataProvider="{vs}"/>
      &lt;mx:ViewStack id="vs">
        &lt;mx:VBox label="Accounts" icon="account_icon"/>
        &lt;mx:VBox label="Leads" icon="leads_icon"/>
      &lt;/mx:ViewStack> </pre>
      
      <p>Das LinkBar-Steuerelement enthält zwei Links, „Accounts“ and „Leads“, jeder besitzt sein eigenes Symbol, wie im VBox-Tag festgelegt. Wenn Sie auf einen Link klicken, navigiert der ViewStack-Container zur entsprechenden Ansicht.</p>
     
      <p>Wenn Sie ein Array verwenden, ermittelt die <codeph>labelField</codeph>-Eigenschaft den Namen des <codeph>dataProvider</codeph>-Felds, um ihn als Beschriftung für die einzelnen Navigationselemente zu verwenden; die <codeph>iconField</codeph>-Eigenschaft ermittelt den Namen des <codeph>dataProvider</codeph>-Felds, um ihn als Symbol für die einzelnen Navigationselemente zu verwenden. Wenn Sie ein Array von Strings verwenden, wird die <codeph>labelField</codeph>-Eigenschaft ignoriert.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:iconField:get"><apiName>iconField</apiName><shortdesc>
      Name des als Symbol für die einzelnen Navigationselemente anzuzeigenden Felds im dataProvider-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des als Symbol für die einzelnen Navigationselemente anzuzeigenden Felds im <codeph>dataProvider</codeph>-Objekt. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:labelField:get"><apiName>labelField</apiName><shortdesc>
      Name des als Beschriftung für die einzelnen Navigationselemente anzuzeigenden Felds im dataProvider-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des als Beschriftung für die einzelnen Navigationselemente anzuzeigenden Felds im <codeph>dataProvider</codeph>-Objekt. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seiner Beschriftung ausgeführt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine vom Benutzer bereitgestellte Funktion, die für jedes Element zum Bestimmen seiner Beschriftung ausgeführt werden soll. Standardmäßig sucht die Komponente bei jedem Datenproviderelement nach einer Eigenschaft mit dem Namen <codeph>label</codeph> und zeigt sie an. Einige Datensätze enthalten jedoch weder eine <codeph>label</codeph>-Eigenschaft noch eine andere Eigenschaft, die für die Anzeige verwendet werden kann. Als Beispiel kann ein Datensatz angeführt werden, der die Felder lastName und firstName besitzt. Sie möchten aber die vollständigen Namen anzeigen.
     
      <p>Sie können eine <codeph>labelFunction</codeph> verwenden, die die entsprechenden Felder findet und einen anzeigbaren String zurückgibt. Die <codeph>labelFunction</codeph> ist für die Verarbeitung von Formatierungen und lokalisierten Texten sinnvoll. </p>
     
      <p>Für die meisten Funktionen gilt: Die Beschriftungsfunktion akzeptiert ein einzelnes Argument, welches das Element innerhalb des Datenproviders ist, und gibt einen String zurück</p>
      <pre>
      myLabelFunction(item:Object):String</pre>
     
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Indexposition des aktiven Navigationselements. Das erste Element befindet sich an der Indexposition 0.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indexposition des aktiven Navigationselements. Das erste Element befindet sich an der Indexposition 0.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:toolTipField:get"><apiName>toolTipField</apiName><shortdesc>
      Name des Felds im dataProvider-Objekt, der als QuickInfo-Beschriftung eingeblendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"toolTip"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des Felds im <codeph>dataProvider</codeph>-Objekt, der als QuickInfo-Beschriftung eingeblendet werden soll.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TextInput"><apiName>TextInput</apiName><shortdesc>
  Das TextInput-Steuerelement ist ein einzeiliges, optional bearbeitbares Textfeld.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="baseColor"/><Exclude kind="method" name="selectionAnchorPosition"/><Exclude kind="method" name="selectionActivePosition"/><Alternative owner="mx.controls:TextInput" replacement="spark.components.TextInput" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der oberen Rahmenlinie der Komponente und der oberen Kante ihres Inhaltsbereichs.
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der unteren Rahmenlinie der Komponente und der unteren Kante ihres Inhaltsbereichs.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Fokusrings, wenn sich die Komponente im Fokus befindet
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Inhaltsbereichs der Komponente.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Inhaltshintergrunds für diese Komponente.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Der Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:TextInput" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:TextInput" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:TextInput" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:TextInput" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:TextInput" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:TextInput" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Legt fest, welche Ecken des Fokusrechtecks abgerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Abstand des Schlagschattens. Wenn für eine Eigenschaft ein negativer Wert eingestellt ist, erscheint über der Komponente ein Schatten.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  Richtung des Schlagschattens. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"center"</codeph> und <codeph>"right"</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Schlagschattens.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Der Standardwert ist <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die <codeph>contentBackgroundColor</codeph>-Eigenschaft fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Dieser Stil wird mit <codeph>borderStyle="solid"</codeph> verwendet. Der Standardwert lautet <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die Eigenschaften <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Radius von Komponentenecken.  Der Standardwert für ApplicationControlBar ist 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Sichtbarkeit des Rahmens.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Stärke des Begrenzungsrahmens. Wird nur verwendet, wenn <codeph>borderStyle</codeph> auf <codeph>"solid"</codeph> gesetzt ist.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Stil des Begrenzungsrahmens. Mögliche Werte sind <codeph>"none"</codeph>, <codeph>"solid"</codeph>, <codeph>"inset"</codeph> und <codeph>"outset"</codeph>. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>"inset"</codeph>. Der Standardwert für die meisten Container ist <codeph>"none"</codeph>. Die <codeph>"inset"</codeph>- und <codeph>"outset"</codeph>-Werte sind nur beim Halo-Thema gültig.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:TextInput" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Rahmenskin einer Komponente. <codeph/><codeph/> <codeph/><codeph/> Um den Standardwert für eine Komponente festzustellen, sehen Sie in der Standard-CSS-Datei nach.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  Seiten des Begrenzungsrahmens. Ein String mit Leerzeichen als Trennzeichen, der festlegt, welche Seiten des Rahmens angezeigt werden sollen. Der String kann <codeph>"left"</codeph>, <codeph>"top"</codeph>, <codeph>"right"</codeph> und <codeph>"bottom"</codeph> in beliebiger Reihenfolge enthalten. Der Standardwert ist <codeph>"left top right bottom"</codeph>, wodurch alle vier Seiten angezeigt werden. Dieser Stil wird nur verwendet, wenn borderStyle <codeph>"solid"</codeph> ist.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Farbe des Rahmens. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Rahmens.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  Skaliert das von <codeph>backgroundImage</codeph> festgelegte Bild auf verschiedene prozentuale Größen. Ein Wert von <codeph>"100%"</codeph> streckt das Bild über die gesamte Komponente. Um einen Prozentwert festzulegen, müssen Sie das Prozentzeichen (%) angeben. Der Standardwert des Application-Containers ist <codeph>100%</codeph>. Der Standardwert für alle anderen Container ist <codeph>auto</codeph>, wodurch die Originalgröße des Bilds beibehalten wird.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Das Hintergrundbild einer Komponente. Es kann eine absolute oder relative URL oder Klasse sein. Sie können entweder <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> festlegen. Das Hintergrundbild wird über der Hintergrundfarbe angezeigt. Der Standardwert ist <codeph>undefined</codeph>, also 
„nicht festgesetzt“. Wenn dieser Stil und der <codeph>backgroundColor</codeph>-Stil nicht definiert sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint das Hintergrundbild eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Hintergrundfarbe der Komponente, wenn sie deaktiviert ist. Der globale Standardwert ist <codeph>undefined</codeph>. Der Standardwert für List-Steuerelemente ist <codeph>0xDDDDDD</codeph> (hellgrau). Ist ein Container deaktiviert, erscheint der Hintergrund abgeblendet; der Abblendungsgrad wird durch den <codeph>disabledOverlayAlpha</codeph>-Stil bestimmt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Hintergrundfarbe einer Komponente. Sie können <codeph>backgroundColor</codeph> und <codeph>backgroundImage</codeph> oder beides gleichzeitig festlegen. Manche Komponenten haben keinen Hintergrund. Das DataGrid-Steuerelement ignoriert diesen Stil. Der Standardwert ist <codeph>undefined</codeph>. Das heißt, dass er nicht eingestellt ist. Wenn dieser Stil und der <codeph>backgroundImage</codeph>-Stil <codeph>undefined</codeph> sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Beim Application-Container definiert dieser Stil die Hintergrundfarbe während des Ladens der Anwendung und den Farbverlauf des Hintergrunds bei laufender Anwendung. Flex berechnet das Verlaufsmuster zwischen einer etwas dunkleren und einer etwas helleren als der festgelegten Farbe.</p>
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint die Hintergrundfarbe eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Die Alphaebene der Farbe wird durch die <codeph>backgroundColor</codeph>-Eigenschaft festgelegt, die des Bilds oder der SWF-Datei durch den <codeph>backgroundImage</codeph>-Stil. Gültige Werte sind 0,0 bis 1,0. Bei den meisten Steuerelementen ist der Standardwert 1,0, aber bei den QuickInfo-Steuerelementen beträgt er 0,95 und bei den Alert-Steuerelementen 0,9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TextInput&gt;</code> tag inherits the attributes
  of its superclass and adds the following attributes:</p>
 
  <pre>
  &lt;mx:TextInput
    <b>Properties</b>
    condenseWhite="false|true"
    data="undefined"
    displayAsPassword="false|true"
    editable="true|false"
    horizontalScrollPosition="0"
    htmlText=""
    imeMode="null"
    length="0"
    listData="null"
    maxChars="0"
    parentDrawsFocus="false"
    restrict="null"
    selectionBeginIndex="0"
    selectionEndIndex="0"
    text=""
    textHeight="0"
    textWidth="0"
    &nbsp;
    <b>Styles</b>
    backgroundAlpha="1.0"
    backgroundColor="undefined"
    backgroundImage="undefined"
    backgroundSize="auto"
    borderColor="0xAAB3B3"
    borderSides="left top right bottom"
    borderSkin="mx.skins.halo.HaloBorder"
    borderStyle="inset"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    dropShadowColor="0x000000"
    dropShadowEnabled="false"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    paddingLeft="0"
    paddingRight="0"
    shadowDirection="center"
    shadowDistance="2"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
    enter="<i>No default</i>"
    textInput="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>TextInput ist ein einzeiliges, optional bearbeitbares Textfeld.
  
  </apiTipText></apiTipTexts><apiBaseInterface>mx.core:ITextInput</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das TextInput-Steuerelement ist ein einzeiliges, optional bearbeitbares Textfeld. Der gesamte Text innerhalb dieses Steuerelements muss die gleiche Formatierung besitzen, ausgenommen HTML-Text. Das TextInput-Steuerelement unterstützt die HTML-Wiedergabemöglichkeiten von Flash Player und AIR.
 
  <p>TextInput-Steuerelemente besitzen keine Beschriftung. Sie können jedoch mithilfe des Label-Steuerelements eine Beschriftung hinzufügen oder Sie verschachteln das TextInput-Steuerelement mit einem FormItem-Steuerelement in einem Form-Container. Wenn ein TextInput-Steuerelement in einem FormItem-Steuerelement verwendet wird, zeigt es an, ob ein Wert benötigt wird. TextInput-Steuerelemente kennen verschiedene Status, z. B. „gefüllt“, „ausgewählt“, „deaktiviert“ und „Fehler“. TextInput-Steuerelemente unterstützen Formatieren, Überprüfen und Zugriffstasten; sie lösen auch Change- und Enter-Ereignisse aus.</p>
 
  <p>Wenn Sie das TextInput-Steuerelement deaktivieren, zeigt es seinen Inhalt in der Farbe an, welche im <codeph>disabledColor</codeph>-Stil festgelegt wurde. Um das Bearbeiten von Text zu unterbinden, setzen Sie die <codeph>editable</codeph>-Eigenschaft auf <codeph>false</codeph>. Um statt des Eingabetexts Sternchen anzuzeigen, setzen Sie die <codeph>displayAsPassword</codeph>-Eigenschaft auf <codeph>true</codeph>.</p>
 
  <p>Das TextInput-Steuerelement wird von den Subkomponenten in verschiedenen anderen Steuerelementen verwendet, wie z. B. RichTextEditor, NumericStepper und ComboBox-Steuerelementen. Daraus ergibt sich Folgendes: Wenn Sie einem TextInput-Steuerelement mithilfe eines CSS-Type-Selektors Stileigenschaften zuweisen, wendet Flex diese Stile bei TextInput an, wenn es in anderen Steuerelementen erscheint, es sei denn, Sie setzen es außer Kraft.</p>
 
  <p>Beim TextInput-Steuerelement gelten die folgenden Merkmale für die Größe:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Die Textgröße mit den standardmäßigen Minimalmaßen von 22 Pixeln Höhe und 160 Pixeln Breite.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>10.000 mal 10.000 Pixel</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextInputExample.mxml"><swfblock conref="examples/TextInputExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label.</linktext></link><link href="mx.controls.xml#Text"><linktext>mx.controls.Text.</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea.</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor.</linktext></link><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange.</linktext></link></related-links><adobeApiEvent id="mx.controls:TextInput_flash.events.TextEvent.TEXT_INPUT_textInput"><apiName>textInput</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer im Steuerelement Text eingibt, löscht oder einfügt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.TEXT_INPUT</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer im Steuerelement Text eingibt, löscht oder einfügt. Es wird kein Ereignis ausgelöst, wenn der Benutzer die Entf- oder die Rücktaste drückt.
 
  <p>Obwohl der Standardwert der <codeph>TextEvent.bubbles</codeph>-Eigenschaft <codeph>true</codeph> ist, löst dieses Steuerelement das Ereignis aus, wenn die <codeph>TextEvent.bubbles</codeph>-Eigenschaft den Wert <codeph>false</codeph> hat.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_mx.events.FlexEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer die Eingabetaste drückt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer die Eingabetaste drückt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Dateneigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft verändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich der Text im TextInput-Steuerelement durch Benutzereingabe ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich der Text im TextInput-Steuerelement durch Benutzereingabe ändert. Dieses Ereignis findet nicht statt, wenn Sie Datenbindung oder ActionScript-Code verwenden, um den Text zu ändern.
 
  <p>Obwohl der Standardwert der <codeph>Event.bubbles</codeph>-Eigenschaft <codeph>true</codeph> ist, löst dieses Steuerelement das Ereignis aus, wenn die<codeph>Event.bubbles</codeph>-Eigenschaft den Wert <codeph>false</codeph> hat.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TextInput:TextInput"><apiName>TextInput</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:TextInput:protected:createBorder"><apiName>createBorder</apiName><shortdesc>
      Erzeugt den Rahmen für diese Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Erzeugt den Rahmen für diese Komponente. Normalerweise wird der Rahmen durch <codeph>borderStyle</codeph> und den <codeph>borderSkin</codeph>-Stil bestimmt. Er muss die Rahmeneigenschaft auf die Instanz des Rahmens setzen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:TextInput:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      Gibt ein TextLineMetrics-Objekt zurück, welches Informationen über Textposition und Abmessungen einer Textzeile im Steuerelement enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Objekt, welches Informationen über Textposition und Abmessungen der festgelegten Textzeile im Steuerelement enthält.
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>Die auf null basierende Indexposition der Zeile, für welche die Metrik abzurufen ist. 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt ein TextLineMetrics-Objekt zurück, welches Informationen über Textposition und Abmessungen einer Textzeile im Steuerelement enthält. Für den Abruf der korrekten Zahl muss die Komponente zuerst validiert werden. Wenn Sie die <codeph>text</codeph> oder <codeph>htmlText</codeph>-Eigenschaft festlegen und anschließend <codeph>getLineMetrics()</codeph> aufrufen, erhalten Sie eventuell einen falschen Wert. Sie sollten entweder auf die Überprüfung Ihres Aufrufs durch die Komponente warten oder <codeph>validateNow()</codeph> aufrufen. Dieses Verhalten unterscheidet sich von dem der flash.text.TextField-Klasse, welche den Wert unmittelbar aktualisiert.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextInput:selectRange"><apiName>selectRange</apiName><shortdesc>
      Wählt den Text in dem Bereich aus, der von den Parametern festgelegt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchorIndex</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>activeIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
      Wählt den Text in dem Bereich aus, der von den Parametern festgelegt wurde. Im Unterschied zu <codeph>setSelection</codeph> erfolgt dies sofort.
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#TextInput/setSelection"><linktext>mx.controls.TextInput.setSelection</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextInput:setSelection"><apiName>setSelection</apiName><shortdesc>
      Wählt den Text in dem Bereich aus, der von den Parametern festgelegt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginIndex</apiItemName><apiType value="int"/><apiDesc>Die auf null basierende Indexposition für das erste Zeichen der Auswahl (das heißt, das erste Zeichen ist 0, das zweite Zeichen 1 usw.).
     
      </apiDesc></apiParam><apiParam><apiItemName>endIndex</apiItemName><apiType value="int"/><apiDesc>Die auf null basierende Indexposition der Position <i>nach</i> dem letzten Zeichen der Auswahl (entspricht der auf eins basierenden Indexposition des letzten Zeichens). Beispiel: Wenn der Parameter 5 ist, ist das letzte Zeichen der Auswahl das fünfte Zeichen. Wenn das TextInput-Steuerelement den Fokus erhält, ist die Auswahl sichtbar, sofern die <codeph>selectionBeginIndex</codeph>- und <codeph>selectionEndIndex</codeph>-Eigenschaften festgelegt sind.
     
      </apiDesc></apiParam><apiTipTexts><apiTipText>Legt eine neue Textauswahl fest.
      
      </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
      Wählt den Text in dem Bereich aus, der von den Parametern festgelegt wurde. Wenn sich das Steuerelement nicht im Fokus befindet, wird die Auswahlmarkierung erst sichtbar, wenn das Steuerelement den Fokus erhält. Wenn das Steuerelement durch Anklicken den Fokus erhält, geht jede frühere Auswahl verloren. Wenn zwei Parameterwerte übereinstimmen, handelt es sich bei der neuen Auswahl um eine Einfügemarke.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:TextInput:showBorderAndBackground"><apiName>showBorderAndBackground</apiName><shortdesc>
      Verwendet, um zu bestimmen, ob Rahmen und Hintergrund des Steuerelements sichtbar sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>visible</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
      Verwendet, um zu bestimmen, ob Rahmen und Hintergrund des Steuerelements sichtbar sind.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:TextInput:protected:textField"><apiName>textField</apiName><shortdesc>
      Das interne UITextField stellt den Text von TextInput dar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Das interne UITextField stellt den Text von TextInput dar.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      Gibt an, ob zusätzliche Leerräume (beispielsweise Leerzeichen oder Zeilenumbrüche) in einem TextInput-Steuerelement mit HTML-Text entfernt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob zusätzliche Leerräume (beispielsweise Leerzeichen oder Zeilenumbrüche) in einem TextInput-Steuerelement mit HTML-Text entfernt werden sollen.
     
      <p>Die <codeph>condenseWhite</codeph>-Eigenschaft betrifft nur Text mit der <codeph>htmlText</codeph>-Eigenschaft, nicht mit der <codeph>text</codeph>-Eigenschaft. Wenn Sie Text mit der <codeph>text</codeph>-Eigenschaft festlegen, wird <codeph>condenseWhite</codeph> ignoriert.</p>
     
      <p>Wenn Sie die <codeph>condenseWhite</codeph>-Eigenschaft auf <codeph>true</codeph> setzen, müssen Sie HTML-Standardbefehle verwenden, beispielsweise <codeph>&lt;br></codeph> und <codeph>&lt;p></codeph>, um im Textfeld Zeilenumbrüche zu setzen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:data:get"><apiName>data</apiName><shortdesc>
      Erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Wenn Sie das Steuerelement als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwenden, schreibt Flex automatisch den aktuellen Wert des Elements in die <codeph>text</codeph>-Eigenschaft dieses Steuerelements.</p>
     
      <p>Sie stellen diese Eigenschaft nicht in MXML ein.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer.</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:displayAsPassword:get"><apiName>displayAsPassword</apiName><shortdesc>
      Zeigt an, ob dieses Steuerelement verwendet wird, um Kennwörter einzugeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3197
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue><apiTipTexts><apiTipText>Legt fest, ob statt der eigentlichen Zeichen „'“ angezeigt wird.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Zeigt an, ob dieses Steuerelement verwendet wird, um Kennwörter einzugeben. Wenn <codeph>true</codeph>, zeigt das Feld den eingegebenen Text nicht an. Stattdessen erscheint für jedes eingegebene Zeichen ein „*“.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:editable:get"><apiName>editable</apiName><shortdesc>
      Zeigt an, ob der Benutzer berechtigt ist, den Text dieses Steuerelements zu ändern.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3196
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue><apiTipTexts><apiTipText>Legt fest, ob die Komponente bearbeitbar ist.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Zeigt an, ob der Benutzer berechtigt ist, den Text dieses Steuerelements zu ändern. Wenn <codeph>true</codeph>, kann der Benutzer den Text bearbeiten.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Die Modul-Factory, die den Schriftartkontext für diese Komponente bereitstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Die Modul-Factory, welche den Schriftartkontext für diese Komponente bereitstellt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:horizontalScrollPosition:get"><apiName>horizontalScrollPosition</apiName><shortdesc>
      Position des Pixels, das innerhalb des Inhaltsbereichs momentan am weitesten links angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3194
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0

      </apiDefaultValue><apiTipTexts><apiTipText>Die Pixelposition des Zeichens, welches aktuell am weitesten links angezeigt wird.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Position des Pixels, das innerhalb des Inhaltsbereichs momentan am weitesten links angezeigt wird. (Der Inhaltsbereich enthält alle Inhalte eines Steuerelements, nicht nur den Anteil, der gerade angezeigt wird.) Diese Eigenschaft ist immer auf 0 gesetzt und ignoriert Änderungen, wenn <codeph>wordWrap</codeph> auf <codeph>true</codeph> gesetzt ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Gibt den vom TextInput-Steuerelement angezeigten Text an, einschließlich HTML-Markup, mit dem der Stil des Texts festgelegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den vom TextInput-Steuerelement angezeigten Text an, einschließlich HTML-Markup, mit dem der Stil des Texts festgelegt wird. Wenn Sie in dieser Eigenschaft HTML-Text festlegen, können Sie einige der HTML-Tags verwenden, die vom TextField-Steuerelement unterstützt werden.
     
      <p> Wenn Sie diese Eigenschaft einstellen, wird das HTML-Markup angewendet, nachdem die CSS-Stile für die TextInput-Instanz angewendet wurden. Wenn Sie diese Eigenschaft abrufen, enthält das HTML-Markup bereits die CSS-Stile.</p>
      
      <p>Beispiel: Wenn Sie einen String wie folgt gestalten, <codeph>"This is an example of &lt;b>bold&lt;/b> markup"</codeph>, erscheint der Text „This is an example of <b>bold</b> markup“ in TextInput mit den normalen CSS-Stilen. Außerdem erscheint das Wort „bold“ fett formatiert, weil das <codeph>&lt;b></codeph>-Markup verwendet wurde.</p>
     
      <p>HTML-Markups verwenden Zeichen wie z. B. „&lt;“ und „>“, welche eine besondere Bedeutung in XML (und somit auch in MXML) besitzen. Deshalb wird ein Code wie der folgende nicht kompiliert:</p>
      
      <pre>
      &lt;mx:TextInput htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>Es gibt drei Möglichkeiten dieses Problem zu umgehen.</p>
      
      <ul>
      
      <li>
      
      <p>Legen Sie die <codeph>htmlText</codeph>-Eigenschaft einer ActionScript-Methode fest, die als <codeph>initialize</codeph>-Prozedur aufgerufen wird:</p>
      
      <pre>
      &lt;mx:TextInput id="myTextInput" initialize="myTextInput_initialize()"/>
      </pre>
      
      <p>dabei liegt die <codeph>myTextInput_initialize</codeph>-Methode in einem CDATA-Abschnitt des Skripts:</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myTextInput_initialize():void {
          myTextInput.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>Dies ist die einfachste Möglichkeit, da das HTML-Markup leicht lesbar bleibt. Beachten Sie, dass Sie TextInput eine <codeph>id</codeph> zuweisen müssen, um in der <codeph>initialize</codeph>-Prozedur darauf verweisen zu können.</p>
      
      </li>
      
      <li>
      
      <p>Legen Sie die <codeph>htmlText</codeph>-Eigenschaft fest, indem Sie ein untergeordnetes Tag bei einem CDATA-Abschnitt verwenden. Ein CDATA-Abschnitt in XML enthält Zeichendaten, bei denen „&lt;“ und „>“ keine besondere Bedeutung erhalten.</p>
      
      <pre>
      &lt;mx:TextInput>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:TextInput/>
      </pre>
      
      <p>Sie müssen die <codeph>htmlText</codeph>-Eigenschaft als untergeordnetes Tag, nicht als Attribut des <codeph>&lt;mx:TextInput></codeph>-Tags schreiben, da XML CDATA für Attributwerte nicht zulässt. Beachten Sie, dass das Markup zwar lesbar ist, der CDATA-Abschnitt diesen Ansatz jedoch komplizierter macht.</p>
      
      </li>
      
      <li>
      
      <p>Verwenden Sie stattdessen ein <codeph>hmtlText</codeph>-Attribut, in welchem die HTML-Markupzeichen „&lt;“ und „>“ im Attributwert anstatt der XML-„Entitäten“ <codeph>&amp;lt;</codeph> und <codeph>&amp;gt;</codeph> geschrieben werden:</p>
      
      <pre>
      &lt;mx:TextInput htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      Adobe rät von diesen Ansatz ab, da das HTML-Markup nahezu unlesbar wird.
      
      </li>
      
      </ul>
      
      <p>Wenn die <codeph>condenseWhite</codeph>-Eigenschaft <codeph>true</codeph> ist, wenn Sie die <codeph>htmlText</codeph>-Eigenschaft einstellen, werden mehrere aufeinanderfolgende Leerzeichen zusammengezogen, wie dies in HTML-basierten Browsern üblich ist. Drei Leerzeichen werden beispielsweise auf ein Leerzeichen reduziert. Der Standardwert für <codeph>condenseWhite</codeph> ist <codeph>false</codeph>, deshalb müssen Sie <codeph>condenseWhite</codeph> auf <codeph>true</codeph> setzen, um aufeinanderfolgende Leerzeichen zu reduzieren.</p>
      
      <p>Wenn Sie die <codeph>htmlText</codeph>-Eigenschaft kurz nach ihrer Einstellung abrufen, erhalten Sie den gleichen String, den Sie eingegeben haben. Wenn der LayoutManager ausgeführt wird, ändert sich der Wert jedoch, sodass er zusätzliche Markups mit den CSS-Stilen enthält.</p>
      
      <p>Das Einstellen der <codeph>htmlText</codeph>-Eigenschaft beeinflusst die <codeph>text</codeph>-Eigenschaft in mehrfacher Hinsicht. Wenn Sie die <codeph>text</codeph>-Eigenschaft kurz nach dem Einstellen der <codeph>htmlText</codeph>-Eigenschaft abrufen, erhalten Sie <codeph>null</codeph>, was anzeigt, dass der <codeph>text</codeph>, der dem neuen <codeph>htmlText</codeph> entspricht, noch nicht ermittelt wurde. Wenn der LayoutManager ausgeführt wird, ändert sich jedoch der <codeph>text</codeph>-Eigenschaftswert in den <codeph>htmlText</codeph>-String ohne HTML-Markups. Das heißt, der Wert besteht aus den Zeichen, die in TextInput angezeigt werden.</p>
       
      <p>Im umgekehrten Fall gilt: Wenn Sie die <codeph>text</codeph>-Eigenschaft festlegen, verliert ein früher festgelegter <codeph>htmlText</codeph> seine Bedeutung. Wenn Sie die <codeph>htmltext</codeph>-Eigenschaft kurz nach dem Einstellen der <codeph>text</codeph>-Eigenschaft abrufen, erhalten Sie <codeph>null</codeph>, was anzeigt, dass der <codeph>htmltext</codeph>, der dem neuen <codeph>text</codeph> entspricht, noch nicht ermittelt wurde. Wenn der LayoutManager ausgeführt wird, ändert sich jedoch der <codeph>htmlText</codeph>-Eigenschaftswert in den neuen Text und das HTML-Markup für die CSS-Stile.</p>
     
      <p>Um den LayoutManager sofort zu starten, können Sie die <codeph>validateNow()</codeph>-Methode für TextInput aufrufen. Beispiel: Sie stellen <codeph>htmlText</codeph> ein, rufen die <codeph>validateNow()</codeph>-Methode auf und rufen sofort den entsprechenden <codeph>text</codeph> ab, der kein HTML-Markup enthält.</p>
      
      <p>Wenn Sie sowohl die <codeph>text</codeph>- als auch die <codeph>htmlText</codeph>-Eigenschaft in ActionScript einstellen, wird die zuletzt eingestellte Eigenschaft wirksam. Sie sollten jedoch nicht beide in MXML einstellen, weil MXML nicht garantiert, dass die Eigenschaften einer Instanz in einer bestimmten Reihenfolge gesetzt werden.</p>
      
      <p>Das Einstellen der <codeph>text</codeph>- oder <codeph>htmlText</codeph>-Eigenschaft innerhalb einer Schleife ist ein schneller Vorgang, da das TextField, welches den Text darstellt, erst aktualisiert wird, wenn der LayoutManager ausgeführt wird.</p>
     
      <p>Wenn Sie versuchen, diese Eigenschaft auf <codeph>null</codeph> zu setzen, wird sie stattdessen auf einen leeren String gesetzt. Die Eigenschaft besitzt vorübergehend den Wert <codeph>null</codeph>. Dieser zeigt an, dass der <codeph>text</codeph> kürzlich eingestellt und ein entsprechender <codeph>htmlText</codeph> noch nicht ermittelt wurde.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Gibt den Modus des Eingabemethodeneditors (IME) an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den Modus des Eingabemethoden-Editors an. Mithilfe des Eingabemethodeneditors können chinesische, japanische und koreanische Schriftzeichen eingegeben werden. Flex stellt den festgelegten IME-Modus ein, wenn das Steuerelement den Fokus erhält und setzt es auf den vorherigen Wert zurück, wenn das Steuerelement den Fokus verliert.
     
      <p>Die flash.system.IMEConversionMode-Klasse definiert Konstanten für gültige Werte dieser Eigenschaft. Sie können auch <codeph>null</codeph> festlegen, um keinen IME festzulegen.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:length:get"><apiName>length</apiName><shortdesc>
      Die Anzahl der Textzeichen in TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3192
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>0
      </apiDefaultValue><apiTipTexts><apiTipText>Die Anzahl der Zeichen in TextInput.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Die Anzahl der Textzeichen in TextArea.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die listData-Eigenschaft der Komponente mit den passenden Daten aus dem Listensteuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem Listensteuerelement. Die Komponente kann die <codeph>listData</codeph>-Eigenschaft verwenden, um die <codeph>data</codeph>-Eigenschaft des Elementrenderers oder des Elementeditors, in dem Elemente abgelegt werden können, zu initialisieren.
     
      <p>Sie stellen diese Eigenschaften nicht in MXML oder ActionScript ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      Die maximale Anzahl an Zeichen, die ein Benutzer in einem Textfeld eingeben kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3191
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiTipTexts><apiTipText>Die maximale Anzahl an Zeichen, die TextInput enthalten kann.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Die maximale Anzahl an Zeichen, die ein Benutzer in einem Textfeld eingeben kann. Diese Eigenschaft schränkt die Länge des Texts nicht ein, der durch die Einstellung der <codeph>text</codeph>- oder <codeph>htmlText</codeph>-Eigenschaft festgelegt wurde.
     
      <p>Der Standardwert ist 0. Dies ist ein Spezialfall und bedeutet eine unbegrenzte Anzahl.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:parentDrawsFocus:get"><apiName>parentDrawsFocus</apiName><shortdesc>
      Bei „true“ werden Aufrufe der drawFocus()-Methode dieses Steuerelements an die drawFocus()-Methode seines übergeordneten Elements weitergegeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bei „true“ werden Aufrufe der drawFocus()-Methode dieses Steuerelements an die drawFocus()-Methode seines übergeordneten Elements weitergegeben. Verwendet, wenn ein TextInput Teil eines Composite-Steuerelements wie NumericStepper oder ComboBox ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:restrict:get"><apiName>restrict</apiName><shortdesc>
      Zeigt die Zeichen an, die ein Benutzer in das Steuerelement eingeben kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3193
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      </apiDefaultValue><apiTipTexts><apiTipText>Der Zeichensatz, der in TextInput eingetragen werden kann.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Zeigt die Zeichen an, die ein Benutzer in das Steuerelement eingeben kann. Wenn die Eigenschaft <codeph>restrict</codeph> auf <codeph>null</codeph> gesetzt ist, kann jedes beliebige Zeichen eingegeben werden. Wenn die Eigenschaft <codeph>restrict</codeph> einen leeren String enthält, kann kein Zeichen eingegeben werden. Mit dieser Eigenschaft werden nur Benutzereingaben eingeschränkt. Mit einem Skript kann jeder beliebige Text in das Textfeld gestellt werden. Wenn der Wert der <codeph>restrict</codeph>-Eigenschaft ein String von Zeichen ist, können Sie nur Zeichen des Strings in das Textfeld eingeben.
     
      <p>Flex scannt den String von links nach rechts. Sie können mithilfe eines Bindestrichs „-“ einen Zeichenbereich angeben. Wenn der String mit dem Zeichen „^“ beginnt, werden anfänglich alle Zeichen akzeptiert, aber nachfolgende Zeichen im String werden nicht in die Liste der zulässigen Zeichen aufgenommen. Wenn der String nicht mit „^“ beginnt, werden anfänglich keine Zeichen akzeptiert, aber nachfolgende Zeichen im String werden in die Liste der zulässigen Zeichen aufgenommen.</p>
     
      <p>Da in der <codeph>restrict</codeph>-Eigenschaft einige Zeichen eine besondere Bedeutung haben, müssen Sie das Backslash-Zeichen verwenden, damit die Textzeichen „-“, „ ^“ und „\“ angezeigt werden. Wenn Sie die <codeph>restrict</codeph>-Eigenschaft als Attribut in einem MXML-Tag verwenden, verwenden Sie einzelne Backslashes, wie hier gezeigt: \^\-\\. Wenn Sie <codeph>restrict</codeph> in einem ActionScript-Ausdruck einsetzen, verwenden Sie doppelte Backslashes, wie hier gezeigt: \\^\\-\\\.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:selectable:get"><apiName>selectable</apiName><shortdesc>
      Ein Flag, das angibt, ob der im TextInput vorhandene Text ausgewählt werden kann.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob der im TextInput vorhandene Text ausgewählt werden kann.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:selectionActivePosition:get"><apiName>selectionActivePosition</apiName><shortdesc>
      Für die ITextInput-Schnittstelle; identisch mit selectionEndIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Für die ITextInput-Schnittstelle; identisch mit selectionEndIndex.
      
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextInput/selectionEndIndex"><linktext>mx.controls.TextInput.selectionEndIndex</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:selectionAnchorPosition:get"><apiName>selectionAnchorPosition</apiName><shortdesc>
      Für die ITextInput-Schnittstelle; identisch mit selectionBeginIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Für die ITextInput-Schnittstelle; identisch mit selectionBeginIndex.
      
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextInput/selectionBeginIndex"><linktext>mx.controls.TextInput.selectionBeginIndex</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:selectionBeginIndex:get"><apiName>selectionBeginIndex</apiName><shortdesc>
      Der auf null basierende Indexpositionswert des ersten Zeichens in der aktuellen Auswahl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Der auf null basierende Indexwert des ersten Zeichens in der Auswahl.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Der auf null basierende Indexwert des ersten Zeichens in der aktuellen Auswahl. Das erste Zeichen ist beispielsweise 0, das zweite Zeichen 1 usw. Wenn das Steuerelement den Fokus erhält, ist die Auswahl sichtbar, sofern die <codeph>selectionBeginIndex</codeph>- und <codeph>selectionEndIndex</codeph>-Eigenschaften festgelegt sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:selectionEndIndex:get"><apiName>selectionEndIndex</apiName><shortdesc>
      Die auf null basierende Indexposition der Position nach dem letzten Zeichen der aktuellen Auswahl (entspricht der auf eins basierenden Indexposition des letzten Zeichens).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Der auf null basierende Indexpositionswert des letzten Zeichens in der Auswahl.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Die auf null basierende Indexposition der Position <i>nach</i> dem letzten Zeichen der aktuellen Auswahl (entspricht der auf eins basierenden Indexposition des letzten Zeichens). Wenn das letzte Zeichen in der Auswahl das fünfte Zeichen von vorn ist, besitzt die Eigenschaft den Wert 5. Wenn das Steuerelement den Fokus erhält, ist die Auswahl sichtbar, sofern die <codeph>selectionBeginIndex</codeph>- und <codeph>selectionEndIndex</codeph>-Eigenschaften festgelegt sind.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:text:get"><apiName>text</apiName><shortdesc>
      Unformatierter Text, der im Steuerelement angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3190
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>Ruft den TextInput-Inhalt ab oder legt ihn fest.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Unformatierter Text, der im Steuerelement angezeigt wird. Das Aussehen wird von den CSS-Stilen dieses Label-Steuerelements bestimmt.
      
      <p>Alle HTML-Tags im Textstring werden ignoriert und so angezeigt, wie sie in den String geschrieben wurden. Verwenden Sie die Eigenschaft <codeph>htmlText</codeph>, um stattdessen mit HTML-Tags formatierten Text anzuzeigen. Mit der <codeph>htmlText</codeph>-Eigenschaft ersetzt HTML jeglichen Text, den Sie mit dieser Eigenschaft festgelegt haben und die <codeph>text</codeph>-Eigenschaft gibt eine Nur-Text-Version des HTML-Texts ohne HTML-Tags zurück. Weitere Informationen finden Sie im Abschnitt der <codeph>htmlText</codeph>-Eigenschaft.</p>
     
      <p>Um die Sonderzeichen spitze Klammer links „&lt;“, spitze Klammer rechts „>“ oder das Und-Zeichen „&amp;“ innerhalb des Texts verwenden zu können, schließen Sie den Text in CDATA-Tags ein. Sie können alternativ auch HTML-Zeichenentitäten für Sonderzeichen verwenden wie z. B. <codeph>&amp;lt;</codeph>.</p>
     
      <p>Wenn Sie versuchen, diese Eigenschaft auf <codeph>null</codeph> zu setzen, wird sie stattdessen auf einen leeren String gesetzt. Die <codeph>text</codeph>-Eigenschaft kann vorübergehend den Wert <codeph>null</codeph> aufweisen. Dies zeigt an, dass <codeph>htmlText</codeph> kürzlich gesetzt und der entsprechende <codeph>text</codeph>-Wert noch nicht ermittelt wurde.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      Die Höhe des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Höhe des Texts.
     
      <p>Der Wert der <codeph>textHeight</codeph>-Eigenschaft ist erst korrekt, nachdem die Komponente geprüft wurde. Wenn Sie <codeph>text</codeph> setzen und unmittelbar danach <codeph>textHeight</codeph>abfragen, erhalten Sie möglicherweise einen falschen Wert. Sie sollten warten, bis die Komponente validiert wurde oder die <codeph>validateNow()</codeph>-Methode aufrufen, bevor Sie den Wert abrufen. Dieses Verhalten unterscheidet sich von dem des flash.text.TextField-Steuerelements, welches den Wert unmittelbar aktualisiert.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      Die Breite des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Breite des Texts.
     
      <p>Der Wert der <codeph>textWidth</codeph>-Eigenschaft ist erst korrekt, nachdem die Komponente überprüft wurde. Wenn Sie <codeph>text</codeph> setzen und unmittelbar danach <codeph>textWidth</codeph>abfragen, erhalten Sie möglicherweise einen falschen Wert. Sie sollten warten, bis die Komponente validiert wurde oder die <codeph>validateNow()</codeph>-Methode aufrufen, bevor Sie den Wert abrufen. Dieses Verhalten unterscheidet sich von dem des flash.text.TextField-Steuerelements, welches den Wert unmittelbar aktualisiert.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:NumericStepper"><apiName>NumericStepper</apiName><shortdesc>
  Mit dem NumericStepper-Steuerelement kann der Benutzer eine Zahl aus einer geordneten Menge auswählen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:NumericStepper" replacement="spark.components.NumericStepper" since="4.0">
	</Alternative><styles><style inherit="no" name="upArrowUpSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach oben verwendet wird, wenn der Pfeil aktiviert ist und sich der Mauszeiger nicht über dem Pfeil befindet.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowOverSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach oben verwendet wird, wenn der Pfeil aktiviert ist und sich der Mauszeiger über dem Pfeil befindet.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowDownSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach oben verwendet wird, wenn der Pfeil aktiviert ist und ein Benutzer die Maustaste drückt, während sich der Mauszeiger über dem Pfeil befindet.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowDisabledSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach oben verwendet wird, wenn der Pfeil deaktiviert ist.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Standardskin für den Pfeil nach oben verwendet wird.
  
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textInputClass" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die den von dieser Komponente für die Darstellung von Text verwendeten ITextInput implementiert.
 
  <p>Sie kann auf die mx.core.TextInput-Klasse (zur Verwendung des klassischen Halo TextInput-Steuerelements) oder die mx.controls.MXFTETextInput-Klasse (zur Verwendung der auf dem Text Layout Framework basierenden Spark TextInput-Komponente, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.controls.TextInput
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Die Farbe eines beliebigen Symbols einer Komponente. Beispiele sind etwa das Häkchen eines Kontrollkästchens oder der Pfeil auf der Schaltfläche einer Bildlaufleiste.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenz für die hervorhebende Füllung der Steuerelemente.
 
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Fokusrings, wenn sich die Komponente im Fokus befindet
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowUpSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach unten verwendet wird, wenn der Pfeil aktiviert ist und sich der Mauszeiger nicht über dem Pfeil befindet. Hierfür gibt es keinen Standardwert.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowOverSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach unten verwendet wird, wenn der Pfeil aktiviert ist und sich der Mauszeiger über dem Pfeil befindet.
  
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowDownSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach unten verwendet wird, wenn der Pfeil aktiviert ist und ein Benutzer die Maustaste drückt, während sich der Mauszeiger über dem Pfeil befindet.
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowDisabledSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil nach unten verwendet wird, wenn der Pfeil deaktiviert ist.
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Standardskin für den Pfeil nach unten verwendet wird.
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Inhaltsbereichs der Komponente.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Inhaltshintergrunds für diese Komponente.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Der Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Legt fest, welche Ecken des Fokusrechtecks abgerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Abstand des Schlagschattens. Wenn für eine Eigenschaft ein negativer Wert eingestellt ist, erscheint über der Komponente ein Schatten.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  Richtung des Schlagschattens. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"center"</codeph> und <codeph>"right"</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Schlagschattens.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Der Standardwert ist <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die <codeph>contentBackgroundColor</codeph>-Eigenschaft fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Dieser Stil wird mit <codeph>borderStyle="solid"</codeph> verwendet. Der Standardwert lautet <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die Eigenschaften <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Radius von Komponentenecken.  Der Standardwert für ApplicationControlBar ist 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Sichtbarkeit des Rahmens.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Stärke des Begrenzungsrahmens. Wird nur verwendet, wenn <codeph>borderStyle</codeph> auf <codeph>"solid"</codeph> gesetzt ist.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Stil des Begrenzungsrahmens. Mögliche Werte sind <codeph>"none"</codeph>, <codeph>"solid"</codeph>, <codeph>"inset"</codeph> und <codeph>"outset"</codeph>. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>"inset"</codeph>. Der Standardwert für die meisten Container ist <codeph>"none"</codeph>. Die <codeph>"inset"</codeph>- und <codeph>"outset"</codeph>-Werte sind nur beim Halo-Thema gültig.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Rahmenskin einer Komponente. <codeph/><codeph/> <codeph/><codeph/> Um den Standardwert für eine Komponente festzustellen, sehen Sie in der Standard-CSS-Datei nach.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  Seiten des Begrenzungsrahmens. Ein String mit Leerzeichen als Trennzeichen, der festlegt, welche Seiten des Rahmens angezeigt werden sollen. Der String kann <codeph>"left"</codeph>, <codeph>"top"</codeph>, <codeph>"right"</codeph> und <codeph>"bottom"</codeph> in beliebiger Reihenfolge enthalten. Der Standardwert ist <codeph>"left top right bottom"</codeph>, wodurch alle vier Seiten angezeigt werden. Dieser Stil wird nur verwendet, wenn borderStyle <codeph>"solid"</codeph> ist.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Farbe des Rahmens. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Rahmens.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  Skaliert das von <codeph>backgroundImage</codeph> festgelegte Bild auf verschiedene prozentuale Größen. Ein Wert von <codeph>"100%"</codeph> streckt das Bild über die gesamte Komponente. Um einen Prozentwert festzulegen, müssen Sie das Prozentzeichen (%) angeben. Der Standardwert des Application-Containers ist <codeph>100%</codeph>. Der Standardwert für alle anderen Container ist <codeph>auto</codeph>, wodurch die Originalgröße des Bilds beibehalten wird.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Das Hintergrundbild einer Komponente. Es kann eine absolute oder relative URL oder Klasse sein. Sie können entweder <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> festlegen. Das Hintergrundbild wird über der Hintergrundfarbe angezeigt. Der Standardwert ist <codeph>undefined</codeph>, also 
„nicht festgesetzt“. Wenn dieser Stil und der <codeph>backgroundColor</codeph>-Stil nicht definiert sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint das Hintergrundbild eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Hintergrundfarbe der Komponente, wenn sie deaktiviert ist. Der globale Standardwert ist <codeph>undefined</codeph>. Der Standardwert für List-Steuerelemente ist <codeph>0xDDDDDD</codeph> (hellgrau). Ist ein Container deaktiviert, erscheint der Hintergrund abgeblendet; der Abblendungsgrad wird durch den <codeph>disabledOverlayAlpha</codeph>-Stil bestimmt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Hintergrundfarbe einer Komponente. Sie können <codeph>backgroundColor</codeph> und <codeph>backgroundImage</codeph> oder beides gleichzeitig festlegen. Manche Komponenten haben keinen Hintergrund. Das DataGrid-Steuerelement ignoriert diesen Stil. Der Standardwert ist <codeph>undefined</codeph>. Das heißt, dass er nicht eingestellt ist. Wenn dieser Stil und der <codeph>backgroundImage</codeph>-Stil <codeph>undefined</codeph> sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Beim Application-Container definiert dieser Stil die Hintergrundfarbe während des Ladens der Anwendung und den Farbverlauf des Hintergrunds bei laufender Anwendung. Flex berechnet das Verlaufsmuster zwischen einer etwas dunkleren und einer etwas helleren als der festgelegten Farbe.</p>
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint die Hintergrundfarbe eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Die Alphaebene der Farbe wird durch die <codeph>backgroundColor</codeph>-Eigenschaft festgelegt, die des Bilds oder der SWF-Datei durch den <codeph>backgroundImage</codeph>-Stil. Gültige Werte sind 0,0 bis 1,0. Bei den meisten Steuerelementen ist der Standardwert 1,0, aber bei den Quickinfo-Steuerelementen beträgt er 0,95 und bei den Alert-Steuerelementen 0,9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  The <code>&lt;mx:NumericStepper&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:
 
  <pre>
  &lt;mx:NumericStepper
    <strong>Properties</strong>
    imeMode="null"
    maxChars="10"
    maximum="10"
    minimum="0"
    stepSize="1"
    value="0"
  
    <strong>Styles</strong>
    backgroundAlpha="1.0"
    backgroundColor="undefined"
    backgroundImage="undefined"
    backgroundSize="auto"
    borderColor="0xAAB3B3"
    borderSides="left top right bottom"
    borderSkin="HaloBorder"
    borderStyle="inset"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    downArrowDisabledSkin="NumericStepperDownSkin"
    downArrowDownSkin="NumericStepperDownSkin"
    downArrowOverSkin="NumericStepperDownSkin"
    downArrowUpSkin="NumericStepperDownSkin"
    dropShadowEnabled="false"
    dropShadowColor="0x000000"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x111111"
    leading="2"
    paddingLeft="0"
    paddingRight="0"
    shadowDirection="center"
    shadowDistance="2"
    textAlign="left|center|right"
    textDecoration="none|underline"
    textIndent="0"
    upArrowDisabledSkin="NumericStepperUpSkin"
    upArrowDownSkin="NumericStepperUpSkin"
    upArrowOverSkin="NumericStepperUpSkin"
    upArrowUpSkin="NumericStepperUpSkin"
  
    <strong>Events</strong>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des NumericStepper-Steuerelements können Benutzer eine Zahl aus einem geordneten Satz auswählen. Das NumericStepper-Steuerelement besteht aus einem einzeiligen Eingabetextfeld und zwei Bildlaufpfeilen, mit denen die möglichen Werte durchlaufen werden können. Mit der Nach-Oben-Taste und der Nach-Unten-Taste können Sie sich ebenfalls durch die Werte bewegen.
 
  <p>Das NumericStepper-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Merkmal</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breit genug für die Anzeige der maximalen Anzahl an Ziffern, die vom Steuerelement verwendet werden.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>Basiert auf der Textgröße.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Nicht festgelegt</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="NumericStepperExample.mxml"><swfblock conref="examples/NumericStepperExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:NumericStepper_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die data-Eigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft verändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:NumericStepper_mx.events.NumericStepperEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich der Wert des NumericStepper-Steuerelements durch Bedienvorgänge des Benutzers ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.NumericStepperEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.NumericStepperEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich der Wert des NumericStepper-Steuerelements durch Bedienvorgänge des Benutzers ändert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:NumericStepper:NumericStepper"><apiName>NumericStepper</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:NumericStepper:data:get"><apiName>data</apiName><shortdesc>
      Die data-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Die <codeph>data</codeph>-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Wenn Sie das Steuerelement als Elementrenderer oder -editor, in dem Elemente abgelegt werden können, verwenden, schreibt Flex automatisch den aktuellen Wert des Elements in die <codeph>value</codeph>-Eigenschaft dieses Steuerelements.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer.</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:protected:downArrowStyleFilters:get"><apiName>downArrowStyleFilters</apiName><shortdesc>
      Satz an Stilen, der vom NumericStepper-Steuerelement an den „Nach unten“-Pfeil übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Satz an Stilen, der vom NumericStepper-Steuerelement an den „Nach unten“-Pfeil übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Gibt den Modus des Eingabemethodeneditors (IME) an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den Modus des Eingabemethodeneditors (IME) an. Mithilfe des Eingabemethodeneditors können chinesische, japanische und koreanische Schriftzeichen eingegeben werden. Flex stellt den festgelegten IME-Modus ein, wenn das Steuerelement den Fokus erhält, und setzt ihn auf den vorherigen Wert zurück, wenn das Steuerelement den Fokus verliert.
     
     <p>Die flash.system.IMEConversionMode-Klasse definiert Konstanten für gültige Werte dieser Eigenschaft. Sie können auch <codeph>null</codeph> festlegen, um keinen IME festzulegen.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:protected:inputFieldStyleFilters:get"><apiName>inputFieldStyleFilters</apiName><shortdesc>
      Satz an Stilen, der vom NumericStepper-Steuerelement an das Eingabefeld übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Satz an Stilen, der vom NumericStepper-Steuerelement an das Eingabefeld übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder -editor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die listData-Eigenschaft der Komponente mit den entsprechenden Daten aus dem List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement. Die Komponente kann die <codeph>listData</codeph>-Eigenschaft verwenden, um die <codeph>data</codeph>-Eigenschaft des Elementrenderers oder des Elementeditors, in dem Elemente abgelegt werden können, zu initialisieren.
     
      <p>Sie stellen diese Eigenschaften nicht in MXML oder ActionScript ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      Die maximale Anzahl an Zeichen, die in das Feld eingegeben werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die maximale Anzahl an Zeichen, die in das Feld eingegeben werden kann. Der Wert 0 bedeutet, dass eine beliebige Anzahl an Zeichen eingegeben werde kann.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:maximum:get"><apiName>maximum</apiName><shortdesc>
      Höchstwert des NumericStepper-Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>10
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Höchstwert des NumericStepper-Steuerelements. Der Höchstwert kann jeder Zahl, einschließlich Teilwerten, entsprechen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:minimum:get"><apiName>minimum</apiName><shortdesc>
      Mindestwert des NumericStepper-Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Mindestwert des NumericStepper-Steuerelements. Der Mindestwert kann jeder Zahl, einschließlich Teilwerten, entsprechen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:nextValue:get"><apiName>nextValue</apiName><shortdesc>
      Der Wert, der einen Schritt höher ist als die aktuelle Value-Eigenschaft und nicht höher als der maximale Wert der Eigenschaft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der Wert, der einen Schritt höher ist als die aktuelle <codeph>value</codeph>-Eigenschaft und nicht höher als der <codeph>maximum</codeph>-Wert der Eigenschaft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:previousValue:get"><apiName>previousValue</apiName><shortdesc>
      Der Wert, der einen Schritt niedriger ist als die aktuelle value-Eigenschaft und nicht niedriger als der maximale Wert der Eigenschaft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der Wert, der einen Schritt niedriger ist als die aktuelle <codeph>value</codeph>-Eigenschaft und nicht niedriger als der <codeph>maximum</codeph>-Wert der Eigenschaft.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:stepSize:get"><apiName>stepSize</apiName><shortdesc>
      Änderungseinheit zwischen Werten ungleich null.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Änderungseinheit zwischen Werten ungleich null. Die <codeph>value</codeph>-Eigenschaft muss ein Mehrfaches dieser Zahl betragen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:protected:upArrowStyleFilters:get"><apiName>upArrowStyleFilters</apiName><shortdesc>
      Satz an Stilen, der vom NumericStepper-Steuerelement an den „Nach oben“-Pfeil übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Satz an Stilen, der vom NumericStepper-Steuerelement an den „Nach oben“-Pfeil übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:value:get"><apiName>value</apiName><shortdesc>
      Aktueller Wert, der im Textbereich des NumericStepper-Steuerelements angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Aktueller Wert, der im Textbereich des NumericStepper-Steuerelements angezeigt wird. Gibt ein Benutzer eine Zahl ein, die nicht einem Mehrfachen der <codeph>stepSize</codeph>-Eigenschaft entspricht oder nicht im Bereich zwischen der <codeph>maximum</codeph>- und <codeph>minimum</codeph>-Eigenschaft liegt, wird für diese Eigenschaft der nächstgelegene gültige Wert festgelegt.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ToolTip"><apiName>ToolTip</apiName><shortdesc>
  Mithilfe des QuickInfo-Steuerelements können Sie für die Benutzer hilfreiche Informationen bereitstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl von Pixeln zwischen der oberen Rahmenlinie des Containers und seinem Inhaltsbereich. Der Standardwert ist -1 und daher überlagert die obere Rahmenlinie der ersten Überschrift die obere Rahmenlinie des Accordion-Containers.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl von Pixeln zwischen der unteren Rahmenlinie des Containers und seinem Inhaltsbereich. Der Standardwert ist -1 und daher überlagert die untere Rahmenlinie der letzten Überschrift die untere Rahmenlinie des Accordion-Containers.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ToolTip" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ToolTip" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ToolTip" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ToolTip" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ToolTip" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Abstand des Schlagschattens. Wenn für eine Eigenschaft ein negativer Wert eingestellt ist, erscheint über der Komponente ein Schatten.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  Richtung des Schlagschattens. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"center"</codeph> und <codeph>"right"</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Schlagschattens.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Der Standardwert ist <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die <codeph>contentBackgroundColor</codeph>-Eigenschaft fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Dieser Stil wird mit <codeph>borderStyle="solid"</codeph> verwendet. Der Standardwert lautet <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die Eigenschaften <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Radius von Komponentenecken.  Der Standardwert für ApplicationControlBar ist 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Sichtbarkeit des Rahmens.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Stärke des Begrenzungsrahmens. Wird nur verwendet, wenn <codeph>borderStyle</codeph> auf <codeph>"solid"</codeph> gesetzt ist.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Stil des Begrenzungsrahmens. Mögliche Werte sind <codeph>"none"</codeph>, <codeph>"solid"</codeph>, <codeph>"inset"</codeph> und <codeph>"outset"</codeph>. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>"inset"</codeph>. Der Standardwert für die meisten Container ist <codeph>"none"</codeph>. Die <codeph>"inset"</codeph>- und <codeph>"outset"</codeph>-Werte sind nur beim Halo-Thema gültig.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Rahmenskin einer Komponente. <codeph/><codeph/> <codeph/><codeph/> Um den Standardwert für eine Komponente festzustellen, sehen Sie in der Standard-CSS-Datei nach.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  Seiten des Begrenzungsrahmens. Ein String mit Leerzeichen als Trennzeichen, der festlegt, welche Seiten des Rahmens angezeigt werden sollen. Der String kann <codeph>"left"</codeph>, <codeph>"top"</codeph>, <codeph>"right"</codeph> und <codeph>"bottom"</codeph> in beliebiger Reihenfolge enthalten. Der Standardwert ist <codeph>"left top right bottom"</codeph>, wodurch alle vier Seiten angezeigt werden. Dieser Stil wird nur verwendet, wenn borderStyle <codeph>"solid"</codeph> ist.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Farbe des Rahmens. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Rahmens.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  Skaliert das von <codeph>backgroundImage</codeph> festgelegte Bild auf verschiedene prozentuale Größen. Ein Wert von <codeph>"100%"</codeph> streckt das Bild über die gesamte Komponente. Um einen Prozentwert festzulegen, müssen Sie das Prozentzeichen (%) angeben. Der Standardwert des Application-Containers ist <codeph>100%</codeph>. Der Standardwert für alle anderen Container ist <codeph>auto</codeph>, wodurch die Originalgröße des Bilds beibehalten wird.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Das Hintergrundbild einer Komponente. Es kann eine absolute oder relative URL oder Klasse sein. Sie können entweder <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> festlegen. Das Hintergrundbild wird über der Hintergrundfarbe angezeigt. Der Standardwert ist <codeph>undefined</codeph>, also 
„nicht festgesetzt“. Wenn dieser Stil und der <codeph>backgroundColor</codeph>-Stil nicht definiert sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint das Hintergrundbild eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Hintergrundfarbe der Komponente, wenn sie deaktiviert ist. Der globale Standardwert ist <codeph>undefined</codeph>. Der Standardwert für List-Steuerelemente ist <codeph>0xDDDDDD</codeph> (hellgrau). Ist ein Container deaktiviert, erscheint der Hintergrund abgeblendet; der Abblendungsgrad wird durch den <codeph>disabledOverlayAlpha</codeph>-Stil bestimmt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Die Hintergrundfarbe einer Komponente. Sie können <codeph>backgroundColor</codeph> und <codeph>backgroundImage</codeph> oder beides gleichzeitig festlegen. Manche Komponenten haben keinen Hintergrund. Das DataGrid-Steuerelement ignoriert diesen Stil. Der Standardwert ist <codeph>undefined</codeph>. Das heißt, dass er nicht eingestellt ist. Wenn dieser Stil und der <codeph>backgroundImage</codeph>-Stil <codeph>undefined</codeph> sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Beim Application-Container definiert dieser Stil die Hintergrundfarbe während des Ladens der Anwendung und den Farbverlauf des Hintergrunds bei laufender Anwendung. Flex berechnet das Verlaufsmuster zwischen einer etwas dunkleren und einer etwas helleren als der festgelegten Farbe.</p>
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint die Hintergrundfarbe eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Die Alphaebene der Farbe wird durch die <codeph>backgroundColor</codeph>-Eigenschaft festgelegt, die des Bilds oder der SWF-Datei durch den <codeph>backgroundImage</codeph>-Stil. Gültige Werte sind 0,0 bis 1,0. Bei den meisten Steuerelementen ist der Standardwert 1,0, aber bei den Quickinfo-Steuerelementen beträgt er 0,95 und bei den Alert-Steuerelementen 0,9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IToolTip</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des QuickInfo-Steuerelements können Sie für die Benutzer hilfreiche Informationen bereitstellen. Bewegt der Benutzer den Mauszeiger über eine Grafikkomponente, wird das QuickControl-Steuerelement eingeblendet, welches einen Informationstext zur Komponente anzeigt. Die QuickInfos können zur Anleitung der Benutzer beim Arbeiten mit der Anwendung eingesetzt werden; die QuickInfo-Steuerelemente können auch angepasst und mit zusätzlichen Funktionen ausgestattet werden.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#ToolTipManager"><linktext>mx.managers.ToolTipManager</linktext></link><link href="mx.styles.xml#CSSStyleDeclaration"><linktext>mx.styles.CSSStyleDeclaration</linktext></link></related-links><apiConstructor id="mx.controls:ToolTip:ToolTip"><apiName>ToolTip</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:ToolTip:maxWidth"><apiName>maxWidth</apiName><shortdesc>
      Maximale Breite neuer QuickInfo-Steuerelemente in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>300</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Maximale Breite neuer QuickInfo-Steuerelemente in Pixeln.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToolTip:protected:textField"><apiName>textField</apiName><shortdesc>
      Das interne UITextField stellt den Text dieses QuickInfos dar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Das interne UITextField stellt den Text dieses QuickInfos dar.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToolTip:text:get"><apiName>text</apiName><shortdesc>
      Der vom QuickInfo angezeigte Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der vom QuickInfo angezeigte Text.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:MenuBar"><apiName>MenuBar</apiName><shortdesc>
  Ein MenuBar-Steuerelement definiert eine horizontale Top-Level-Menüleiste, die ein oder mehrere Menüs enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:MenuBar" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Die Farbe eines beliebigen Symbols einer Komponente. Beispiele sind etwa das Häkchen eines Kontrollkästchens oder der Pfeil auf der Schaltfläche einer Bildlaufleiste.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description conref="mx.controls.Menu#style:selectionColor">
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description conref="mx.controls.Menu#style:rollOverColor">
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="menuStyleName" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Name der CSSStyleDeclaration, welche die Stile für die Menu-Steuerelemente festlegt, die durch dieses MenuBar-Steuerelement angezeigt werden. Standardmäßig verwenden die Menu-Steuerelemente die vererbbaren Stile des MenuBar-Steuerelements. 
  
  <p>Sie können diesen Klassenselektor verwenden, um die Werte aller Stileigenschaften der Menu-Klasse festzulegen, einschließlich <codeph>backgroundAlpha</codeph> und <codeph>backgroundColor</codeph>.</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemDownSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Die Skin, wenn das MenuBar-Element ausgewählt ist. 
 
  </description>
<default>mx.skins.halo.ActivatorSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemOverSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Die Skin, wenn sich der Fokus über einem MenuBar-Element befindet. 
 
  </description>
<default>mx.skins.halo.ActivatorSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemUpSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Die Skin, wenn kein MenuBar-Element ausgewählt ist.
 
  </description>
<default>mx.skins.halo.ActivatorSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Die Standardskin für MenuBar-Elemente.
 
  </description>
<default>mx.skins.halo.ActivatorSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Die Hintergrundskin für das MenuBar-Steuerelement. 
   
  </description>
<default>mx.skins.halo.MenuBarBackgroundSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:MenuBar" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:MenuBar" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:MenuBar" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenzen, die für die markierende Füllung der Steuerelemente verwendet werden. Der erste Wert legt die Transparenz im oberen Bereich des Glanzlichts fest, der zweite Wert die Transparenz im unteren Bereich. Das Glanzlicht deckt die obere Hälfte der Skin ab.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Farben zum Tönen des Hintergrunds von Steuerelementen. Verwenden Sie für ein einheitliches Erscheinungsbild des Steuerelements dieselbe Farbe für beide Werte.
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenz für die Hintergrundfüllung von Steuerelementen. Verwenden Sie [1, 1], um den Hintergrund undurchsichtig zu gestalten.
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Radius von Komponentenecken. Dieser Stil wird von den folgenden Komponenten unterstützt: Alert, Button, ComboBox, LinkButton, MenuBar, NumericStepper, Panel, ScrollBar, Tab, TitleWindow und alle Komponenten, die bei der <codeph>borderStyle</codeph>-Eigenschaft die Einstellung <codeph>"solid"</codeph> unterstützen. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Rahmens. Die folgenden Steuerelemente unterstützen diesen Stil: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider und alle Komponenten, die den <codeph>borderStyle</codeph>-Stil unterstützen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0xB7BABC</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Legt fest, welche Ecken des Fokusrechtecks abgerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:MenuBar&gt</code> tag inherits all of the tag attributes of its superclass, and
  adds the following tag attributes:
  </p>
  
  <pre>
  &lt;mx:MenuBar
    <b>Properties</b>
    dataDescriptor="<i>mx.controls.treeClasses.DefaultDataDescriptor</i>"
    dataProvider="<i>undefined</i>"
    iconField="icon"
    labelField="label"
    labelFunction="<i>undefined</i>"
    menuBarItemRenderer="<i>mx.controls.menuClasses.MenuBarItem</i>"
    menuBarItems="[]"
    menus="[]"
    selectedIndex="-1"
    showRoot="true"
  
    <b>Styles</b>
    backgroundSkin="mx.skins.halo.MenuBarBackgroundSkin"
    borderColor="0xAAB3B3"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    itemDownSkin="mx.skins.halo.ActivatorSkin"
    itemOverSkin="mx.skins.halo.ActivatorSkin"
    itemUpSkin="mx.skins.halo.ActivatorSkin"
    leading="2"
    menuStyleName="<i>No default</i>"
    rollOverColor="0xB2E1FF"
    selectionColor="0x7FCEFF"
    textAlign="left"
    textDecoration="none"
    textIndent="0"
  
    <b>Events</b>
    itemClick="<i>No default"</i>
    itemRollOut="<i>No default"</i>
    itemRollOver="<i>No default"</i>
    menuHide="<i>No default"</i>
    menuShow="<i>No default"</i>
  /&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ein MenuBar-Steuerelement definiert eine horizontale Menüleiste der obersten Ebene, die ein oder mehrere Menüs enthält. Durch Klicken auf ein Menüelement der obersten Ebene wird ein Popupuntermenü eingeblendet, das eine Instanz des Menu-Steuerelements ist.
 
  <p>Die Menüleiste der obersten Ebene des MenuBar-Steuerelements ist in der Regel immer sichtbar. Sie ist nicht für die Verwendung als Popupmenü vorgesehen. Die einzelnen Untermenüs werden eingeblendet, wenn sie vom Benutzer per Maus oder Tastatur ausgewählt werden. Geöffnete Untermenüs werden ausgeblendet, wenn ein Menüelement ausgewählt wird, oder wenn der Benutzer auf eine Stelle außerhalb des Menüs klickt.</p>
 
  <p>Informationen und ein Beispiel zu den Attributen, die im Datenprovider für das MenuBar-Steuerelement verwendet werden können, finden Sie unter Menu-Steuerelement.</p>
 
  <p>Das MenuBar-Steuerelement verfügt über die folgenden Größeneigenschaften:
  </p>
     <adobetable class="innertable">
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Die Breite wird durch den Menütext bestimmt; der Mindestwert beträgt 27 Pixel. Der Standardwert für die Höhe beträgt 22 Pixel.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="MenuBarExample.mxml"><swfblock conref="examples/MenuBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link><link href="mx.controls.menuClasses.xml#IMenuBarItemRenderer"><linktext>mx.controls.menuClasses.IMenuBarItemRenderer</linktext></link><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link><link href="mx.controls.menuClasses.xml#IMenuDataDescriptor"><linktext>mx.controls.menuClasses.IMenuDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link></related-links><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Wird bei Rollover über das Menüelement ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollover über das Menüelement ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Wird bei Rollout aus einem Menüelement ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollout aus einem Menüelement ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.MENU_SHOW_menuShow"><apiName>menuShow</apiName><shortdesc>
  Wird ausgelöst, wenn ein Popupuntermenü geöffnet wird oder der Benutzer ein Menüleistenelement ohne Dropdownmenü auswählt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Popupuntermenü geöffnet wird oder der Benutzer ein Menüleistenelement ohne Dropdownmenü auswählt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.MENU_HIDE_menuHide"><apiName>menuHide</apiName><shortdesc>
  Wird ausgelöst, wenn ein Popupuntermenü geschlossen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Popupuntermenü geschlossen wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer ein Element in einem Popupuntermenü auswählt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer ein Element in einem Popupuntermenü auswählt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Auswahl aufgrund eines Bedienvorgangs des Benutzers ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die Auswahl aufgrund eines Bedienvorgangs des Benutzers ändert. Dieses Ereignis wird auch ausgelöst, wenn der Benutzer in einem Popupuntermenü eine neue Auswahl trifft. Wenn das Ereignis bei einer Menüleiste auftritt, ist die <codeph>menu</codeph>-Eigenschaft des MenuEvent-Objekts <codeph>null</codeph>. Wenn es bei einem Popupuntermenü auftritt, enthält die <codeph>menu</codeph>-Eigenschaft einen Verweis auf das Menu-Objekt, welches das Popupuntermenü repräsentiert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:MenuBar:MenuBar"><apiName>MenuBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:MenuBar:getMenuAt"><apiName>getMenuAt</apiName><shortdesc>
      Gibt einen Verweis auf das Menu-Objekt an der angegebenen MenuBar-Elementindexposition zurück, wobei 0 dem Menu entspricht, das sich an der am weitesten links befindlichen MenuBar-Elementindexposition befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ein Verweis auf das Menu an der angegebenen Indexposition.
      
      </apiDesc><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Indexposition der zurückzugebenden Menu-Instanz.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt einen Verweis auf das Menu-Objekt an der angegebenen MenuBar-Elementindexposition zurück, wobei 0 dem Menu entspricht, das sich an der am weitesten links befindlichen MenuBar-Elementindexposition befindet. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:itemToIcon"><apiName>itemToIcon</apiName><shortdesc>
      Gibt die Klasse für ein Symbol, falls vorhanden, oder ein Datenelement zurück, basierend auf der iconField-Eigenschaft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das Symbol für ein Element als Klassenverweis oder, wenn nicht vorhanden, <codeph>null</codeph>.
      
      </apiDesc><apiType value="Class"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Element, von dem die Symbolklasse extrahiert wird.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die Klasse für ein Symbol oder ein Datenelement zurück, basierend auf der <codeph>iconField</codeph>-Eigenschaft. Das Feld im Element kann einen String zurückgeben, sofern der String den Namen einer Klasse in der Anwendung darstellt. Das Feld im Element kann auch ein String sein, der dem Namen einer Variablen im Dokument, in dem die Klasse des Symbols enthalten ist, entspricht.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:itemToLabel"><apiName>itemToLabel</apiName><shortdesc conref="mx.controls.listClasses.ListBase#itemToLabel()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>Der auf der Grundlage der Daten anzuzeigende String.
      
      </apiDesc></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das darzustellende Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.listClasses.ListBase#itemToLabel()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:protected:measure"><apiName>measure</apiName><shortdesc>
      Berechnet die bevorzugte Breite und Höhe der MenuBar ausgehend von der Standardbreite von MenuBar-Elementen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Berechnet die bevorzugte Breite und Höhe der MenuBar ausgehend von der Standardbreite von MenuBar-Elementen. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:protected:updateBackground"><apiName>updateBackground</apiName><shortdesc>
      Aktualisiert die Hintergrundskin des MenuBar-Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Aktualisiert die Hintergrundskin des MenuBar-Steuerelements. Diese Methode wird aufgerufen, wenn MenuBar-Instanzen erstellt oder Stile der MenuBar geändert werden. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:MenuBar:labelFunction"><apiName>labelFunction</apiName><shortdesc>
      Die Funktion, die den für die Menüelemente anzuzeigenden Text bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Funktion, die den für die Menüelemente anzuzeigenden Text bestimmt. Die Beschriftungsfunktion muss das passende Feld bzw. die passenden Felder im Datenprovider finden und einen anzeigbaren String zurückgeben. Wenn diese Eigenschaft fehlt, verwendet Flex die Inhalte des durch die <codeph>labelField</codeph>-Eigenschaft festgelegten Felds oder Attributs. Wenn diese Eigenschaft festgelegt wird, ignoriert Flex die <codeph>labelField</codeph>-Eigenschaftswerte. Die <codeph>labelFunction</codeph>-Eigenschaft ist hilfreich beim Formatieren und Lokalisieren.
     
      <p>Die Beschriftungsfunktion muss ein einziges Argument, nämlich das Element im Datenprovider, verwenden und einen String zurückgeben.</p>
      <pre>
      <codeph>myLabelFunction(item:Object):String</codeph> </pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:menuBarItems"><apiName>menuBarItems</apiName><shortdesc>
      Ein Array, das die MenuBarItem-Objekte enthält, die alle Elemente in der Menüleiste der obersten Ebene eines MenuBar-Steuerelements darstellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/><apiDefaultValue>[ ]
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Array, das die MenuBarItem-Objekte enthält, die alle Elemente in der Menüleiste der obersten Ebene eines MenuBar-Steuerelements darstellen. Diese Eigenschaft enthält standardmäßig Instanzen der MenuBarItem-Klasse. Elemente sollten dem <codeph>menuBarItems</codeph>-Array direkt hinzugefügt werden. Um neue Menüleistenelemente hinzuzufügen, fügen Sie diese direkt dem Datenprovider des MenuBar-Steuerelements hinzu. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:menus"><apiName>menus</apiName><shortdesc>
      Ein Array, welches die Menu-Objekte enthält, die den Popupuntermenüs dieses MenuBar-Steuerelements entsprechen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/><apiDefaultValue>[ ] 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Array, welches die Menu-Objekte enthält, die den Popupuntermenüs dieses MenuBar-Steuerelements entsprechen. Jedes MenuBar-Element kann über ein ihm entsprechendes Menu-Objekt im Array verfügen, auch dann, wenn ein Element über kein Popupuntermenü verfügt. Flex füllt das <codeph>menus</codeph>-Array nicht zu Beginn, sondern erstellt die Menüs dynamisch bei Bedarf. Elemente sollten dem <codeph>menus</codeph>-Array direkt hinzugefügt werden. Um neue Dropdownmenüs hinzuzufügen, fügen Sie diese direkt dem Datenprovider des MenuBar-Steuerelements hinzu.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Das Objekt, das auf die Daten im Datenprovider zugreift und diese bearbeitet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      Das Objekt, das auf die Daten im Datenprovider zugreift und diese bearbeitet. Das MenuBar-Steuerelement fragt den Datendeskriptor ab, um Informationen zu seinen Daten zu erhalten. Diese Daten werden dann für die Analyse und das Verschieben der Datenquelle verwendet. Der für die MenuBar festgelegte Datendeskriptor wird für alle untergeordneten Menüs und Untermenüs verwendet. 
     
      <p>Wenn diese Eigenschaft in MXML als Attribut festgelegt wird, müssen Sie einen Verweis auf den Datendeskriptor verwenden, nicht den Stringnamen des Deskriptors. Verwenden Sie zum Festlegen der Eigenschaft das folgende Format:</p>
     
     <pre>&lt;mx:MenuBar id="menubar" dataDescriptor="{new MyCustomDataDescriptor()}"/></pre>
     
      <p>Alternativ dazu können Sie die Eigenschaft in MXML als verschachteltes Unter-Tag festlegen, wie im folgenden Beispiel gezeigt wird:</p>
     
      <pre>&lt;mx:MenuBar>
      &lt;mx:dataDescriptor>
         &lt;myCustomDataDescriptor>
      &lt;/mx:dataDescriptor>
      ...</pre>
     
      <p>Der Standardwert ist eine interne Instanz der DefaultDataDescriptor-Klasse.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Die Hierarchie der Objekte, die als MenuBar-Elemente und Menüs angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Hierarchie der Objekte, die als MenuBar-Elemente und Menüs angezeigt werden. Die Top-Level-Unterelemente werden zu MenuBar-Elementen und deren Unterelemente werden zu Elementen in den Menüs und Untermenüs. Das MenuBar-Steuerelement behandelt die Quelldatenobjekte wie folgt:
      <p>
      <ul>
      <li>Ein String, der gültigen XML-Text enthält, wird in ein XML-Objekt konvertiert.</li>
      <li>Ein XMLNode wird in ein XML-Objekt konvertiert.</li>
      <li>Eine XMLList wird in eine XMLListCollection konvertiert.</li>
      <li>Alle Objekte, die die ICollectionView-Schnittstelle implementieren, werden in ICollectionView umgewandelt.</li>
      <li>Ein Array wird in eine ArrayCollection konvertiert.</li>
      <li>Andere Objekttypen werden in ein Array eingefügt, wobei das Objekt den einzigen Eintrag darstellt.</li>
      </ul>
      </p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:hasRoot:get"><apiName>hasRoot</apiName><shortdesc conref="mx.controls.Menu#hasRoot">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.controls.Menu#hasRoot">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:iconField:get"><apiName>iconField</apiName><shortdesc>
      Der Name des Felds im Datenprovider, das die Symbole bestimmt, die für die Menüelemente angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Name des Felds im Datenprovider, das die Symbole bestimmt, die für die Menüelemente angezeigt werden. Standardmäßig zeigt die MenuBar keine Symbole gemeinsam mit dem Text in einem Menüelement an. Durch Festlegen eines Symbolfelds können Sie eine Grafik bestimmen, die als Symbol für ein Menüelement erstellt und angezeigt wird. 
     
      <p>Der MenuItemRenderer prüft den Datenprovider auf eine Eigenschaft des durch die <codeph>iconField</codeph>-Eigenschaft festgelegten Namens. Wenn der Wert der Eigenschaft eine Klasse ist, instanziiert er diese Klasse. Es wird erwartet, dass diese Klasse eine Instanz von IFlexDisplayObject ist. Wenn der Wert der Eigenschaft ein String ist, findet er heraus, ob eine Klasse mit diesem Namen in der Anwendung vorhanden ist. Wenn kein solcher Name in der Anwendung vorhanden ist, sucht er eine Dokumenteigenschaft mit diesem Namen und erwartet, dass die Eigenschaft einer Klasse zugeordnet wird.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:labelField:get"><apiName>labelField</apiName><shortdesc>
      Der Name des Felds im Datenprovider, welcher den für die Menüelemente anzuzeigenden Text bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><label>to specify the label attribute in an E4X XML Object 
      as the text to display for each menu item. 
     
      Setting the <code>labelFunction</code> property overrides this property.
     
      </label></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Name des Felds im Datenprovider, der den für die Menüelemente anzuzeigenden Text bestimmt. Wenn der Datenprovider ein Array von Strings ist, verwendet Flex die Stringwerte als Beschriftung. Wenn der Datenprovider ein E4X-XML-Objekt ist, muss diese Eigenschaft ausdrücklich gesetzt werden. Verwenden Sie zum Beispiel </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:menuBarItemRenderer:get"><apiName>menuBarItemRenderer</apiName><shortdesc>
      Der Elementrenderer, der vom MenuBar-Steuerelement für die Menüleiste der obersten Ebene des MenuBar-Steuerelements verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier><apiDefaultValue>"mx.controls.menuClasses.MenuBarItem"
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Elementrenderer, der vom MenuBar-Steuerelement für die Menüleiste der obersten Ebene des MenuBar-Steuerelements verwendet wird. 
     
      <p>Ein Elementrenderer für die Popupuntermenüs des MenuBar-Steuerelements kann festgelegt werden. Da jedes Popupuntermenü eine Instanz des Menu-Steuerelements ist, verwenden Sie die MenuItemRenderer-Klasse, um einen Elementrenderer für die Popupuntermenüs festzulegen. Um den Elementrenderer für ein Popupuntermenü festzulegen, greifen Sie mithilfe der <codeph>menus</codeph>-Eigenschaft auf das Menu-Objekt zu. </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:protected:menuBarItemStyleFilters:get"><apiName>menuBarItemStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der von der MenuBar an die menuBar-Elemente übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der von der MenuBar an die menuBar-Elemente übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Die Indexposition im MenuBar-Steuerelement des derzeit geöffneten Menüs oder, falls keines geöffnet ist, des zuletzt geöffneten Menüs.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Indexposition im MenuBar-Steuerelement des derzeit geöffneten Menüs oder, falls keines geöffnet ist, des zuletzt geöffneten Menüs.    
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Ein boolesches Flag, das angibt, ob der Stammknoten des Datenproviders angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein boolesches Flag, das angibt, ob der Stammknoten des Datenproviders angezeigt werden soll. Wenn der Datenprovider über einen Stammknoten verfügt und die <codeph>showRoot</codeph>-Eigenschaft auf <codeph>false</codeph> gesetzt ist, entsprechen die Elemente des MenuBar-Steuerelements den Elementen, die dem Stammknoten unmittelbar untergeordnet sind. Dieses Flag hat keine Auswirkung auf Datenprovidern ohne Stammknoten, beispielsweise Listen und Arrays. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#MenuBar/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:VSlider"><apiName>VSlider</apiName><shortdesc>	
  Mithilfe des VSlider-Steuerelements können Benutzer einen Wert auswählen, indem sie einen Schieberegler zwischen den beiden Endpunkten der Schiebereglerleiste bewegen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:VSlider" replacement="spark.components.VSlider" since="4.0">
	</Alternative><styles><style enumeration="left,top,right,bottom" inherit="no" name="dataTipPlacement" owner="mx.controls:VSlider" playerVersion="Flash9" type="String">
<description>
  Die Position des Datentipps in Relation zum Schieberegler. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph>, <codeph>"top"</codeph> und <codeph>"bottom"</codeph>.
  
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VSlider&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:VSlider
    <strong>Styles</strong>
    dataTipPlacement="top"
  /&gt;
  </pre>
  </p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.sliderClasses:Slider</apiBaseClassifier></apiClassifierDef><apiDesc>	
  Beim VSlider-Steuerelement können Benutzer einen Wert auswählen, indem sie einen Schieberegler zwischen den beiden Endpunkten der Schiebereglerleiste bewegen. Der aktuelle Wert der Schiebereglerleiste wird von der relativen Position des Schiebereglers zwischen den Endpunkten der Schiebereglerleiste bestimmt, die dem Mindest- und Höchstwert der Schiebereglerleiste entsprechen.
 
  <p>Die Schiebereglerleiste ermöglicht einen fortlaufenden Wertebereich zwischen dem Mindest- und dem Höchstwert; die Werte können auch auf bestimmte Intervalle zwischen Mindest- und Höchstwerten beschränkt werden. Die Schiebereglerleiste kann Markierungen in festgelegten Intervallen aufweisen. Diese Markierungen berücksichtigen nicht die zulässigen Werte der Schiebereglerleiste. Der aktuelle Wert wird eventuell mithilfe eines Datentipps angezeigt.</p>
  	
  <p>Der VSlider ist vertikal ausgerichtet. Die Schiebereglerleiste verläuft von unten nach oben und die Beschriftungen und Markierungen befinden sich links oder rechts von der Leiste.</p>
 
  <p>Das VSlider-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Merkmal</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Höhe: 250 Pixel; Breite: breit genug für die Schiebereglerleiste und damit verknüpfte Beschriftungen.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>Keine</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Keine</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleImageVSlider.mxml"><swfblock conref="examples/SimpleImageVSlider.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#HSlider"><linktext>mx.controls.HSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.controls.sliderClasses.xml#SliderThumb"><linktext>mx.controls.sliderClasses.SliderThumb</linktext></link><link href="mx.controls.sliderClasses.xml#SliderDataTip"><linktext>mx.controls.sliderClasses.SliderDataTip</linktext></link><link href="mx.controls.sliderClasses.xml#SliderLabel"><linktext>mx.controls.sliderClasses.SliderLabel</linktext></link></related-links><apiConstructor id="mx.controls:VSlider:VSlider"><apiName>VSlider</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ProgressBarDirection"><apiName>ProgressBarDirection</apiName><shortdesc>
  Die ProgressBarDirection-Klasse definiert die Werte für die direction-Eigenschaft der ProgressBar-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ProgressBarDirection-Klasse definiert die Werte für die <codeph>direction</codeph>-Eigenschaft der ProgressBar-Klasse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarDirection:LEFT"><apiName>LEFT</apiName><shortdesc>
	  Legt fest, dass die Fortschrittsleiste von rechts nach links gefüllt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Fortschrittsleiste von rechts nach links gefüllt wird.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarDirection:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  Legt fest, dass die Fortschrittsleiste von links nach rechts gefüllt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Legt fest, dass die Fortschrittsleiste von links nach rechts gefüllt wird.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HScrollBar"><apiName>HScrollBar</apiName><shortdesc>
  Mithilfe des HScrollBar-Steuerelements (horizontale Bildlaufleiste) können Sie jene Daten steuern, die angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht in den Anzeigebereich passen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HScrollBar" replacement="spark.components.HScrollBar" since="4.0">
	</Alternative><styles><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:HScrollBar" playerVersion="Flash9" type="Number">
<description>
  Zeit in Millisekunden zwischen den <codeph>buttonDown</codeph>-Ereignissen, wenn der Benutzer mit der Maustaste auf eine Schaltfläche klickt und die Maustaste gedrückt hält. Der Standardwert ist 35.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:HScrollBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Millisekunden, die nach dem ersten <codeph>buttonDown</codeph>-Ereignis gewartet werden soll, bevor <codeph>buttonDown</codeph>-Ereignisse bei jedem <codeph>repeatInterval</codeph> wiederholt werden. Der Standardwert ist 500.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:HScrollBar&gt;</code> tag inherits all of the
  tag attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:HScrollBar
    <strong>Styles</strong>
    repeatDelay="500"
    repeatInterval="35"
 
    <strong>Events</strong>
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.scrollClasses:ScrollBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des HScrollBar-Steuerelements (horizontale ScrollBar) können Sie jene Daten steuern, die angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht in den Anzeigebereich passen. Dieses Steuerelement erweitert das Standard-ScrollBar-Steuerelement. 
  
  <p>Obwohl das HScrollBar-Steuerelement auch als allein stehendes Steuerelement verwendet werden kann, wird es üblicherweise innerhalb einer Komponentengruppe für die Bildlauffunktion verwendet.</p>
 
  <p>Ein ScrollBar-Steuerelement besteht aus vier Teilen: zwei Bildlaufpfeilen, einer Bildlaufleiste und einem Bildlauffeld. Die Position des Bildlauffelds und die Anzeige der Schaltflächen hängen vom aktuellen Status des Steuerelements ab. Das ScrollBar-Steuerelement verwendet vier Parameter, um den Anzeigestatus zu berechnen:</p>
 
  <ul>
    <li>Minimaler Wert innerhalb des Bereichs.</li>
    <li>Maximaler Wert innerhalb des Bereichs.</li>
    <li>Aktuelle Position: muss zwischen dem minimalen und dem maximalem Wert des Bereichs liegen.</li>
    <li>Anzeigengröße: stellt die Anzahl der Elemente im Bereich dar, die gleichzeitig angezeigt werden können. Die Anzahl der Elemente muss entweder gleich oder kleiner sein als der Bereich und der Bereich ist der Satz an Werten, die zwischen dem minimalen und dem maximalen Wert liegen.</li>
  </ul>
 
  </apiDesc><example conref="HScrollBarExample.mxml"><swfblock conref="examples/HScrollBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.scrollClasses.xml#ScrollBar"><linktext>mx.controls.scrollClasses.ScrollBar</linktext></link></related-links><adobeApiEvent id="mx.controls:HScrollBar_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Wird ausgelöst, wenn das ScrollBar-Steuerelement sich aufgrund eines Bedienvorgangs durch den Benutzer oder programmgesteuert bewegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das ScrollBar-Steuerelement sich aufgrund eines Bedienvorgangs durch den Benutzer oder programmgesteuert bewegt. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:HScrollBar:HScrollBar"><apiName>HScrollBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ProgressBarMode"><apiName>ProgressBarMode</apiName><shortdesc>
  Die ProgressBarMode-Klasse definiert die Werte für die mode-Eigenschaft der ProgressBar-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ProgressBarMode-Klasse definiert die Werte für die <codeph>mode</codeph>-Eigenschaft der ProgressBar-Klasse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarMode:EVENT"><apiName>EVENT</apiName><shortdesc>
	  Das von der source-Eigenschaft angegebene Steuerelement muss progress- und complete-Ereignisse auslösen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>event</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Das von der <codeph>source</codeph>-Eigenschaft angegebene Steuerelement muss <codeph>progress</codeph>- und <codeph>complete</codeph>-Ereignisse auslösen. Die Fortschrittsleiste verwendet diese Ereignisse, um ihren Status zu aktualisieren.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarMode:MANUAL"><apiName>MANUAL</apiName><shortdesc>
	  Der ProgressBar-Status wird manuell aktualisiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>manual</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Der ProgressBar-Status wird manuell aktualisiert. In diesem Modus geben Sie die <codeph>minimum</codeph>- und <codeph>maximum</codeph>-Eigenschaften an und verwenden die <codeph>setProgress()</codeph>-Methode, um den Status festzulegen. Dieser Modus wird oft verwendet, wenn die <codeph>indeterminate</codeph>-Eigenschaft <codeph>true</codeph> ist.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarMode:POLLED"><apiName>POLLED</apiName><shortdesc>
	  Die source-Eigenschaft muss ein Objekt angeben, das die getBytesLoaded()- und getBytesTotal()-Methoden verfügbar macht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>polled</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Die <codeph>source</codeph>-Eigenschaft muss ein Objekt angeben, das die Methoden <codeph>getBytesLoaded()</codeph> und <codeph>getBytesTotal()</codeph> verfügbar macht. Das ProgressBar-Steuerelement ruft diese Methoden auf, um seinen Status zu aktualisieren.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Tree"><apiName>Tree</apiName><shortdesc>
  Mithilfe des Tree-Steuerelements können Benutzer hierarchische Daten in einer erweiterbaren Baumstruktur ansehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Textfarbe, wenn der Benutzer eine Zeile auswählt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Die Farbe des Texts bei Rollover der Zeile durch den Benutzer. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:Tree" playerVersion="Flash9" type="Function">
<description>
  Verweis auf eine <codeph>easingFunction</codeph>, die für die Programmsteuerung des Tweening verwendet wird.
 
  <p>Der Standardwert ist <codeph>undefined</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionDisabledColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Legt die Farbe eines deaktivierten Listenelements fest.
 
  </description>
<default>0xDDDDDD
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Farbe des Hintergrunds, wenn der Benutzer einen Hyperlink auswählt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Farbe des Hintergrunds bei Rollover des Benutzers. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:Tree" playerVersion="Flash9" type="Function">
<description>
  Beschleunigungsfunktion zur Steuerung des Tweening von Komponenten.
 
  <p>Der Standardwert ist <codeph>undefined</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Länge des Übergangs zu Beginn oder am Ende in Millisekunden. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indentation" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Einrückung der einzelnen Baumebenen in Pixeln.
 
  </description>
<default>17
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="folderClosedIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Legt das Symbol für den geschlossenen Ordner für ein Verzweigungselement des Baums fest. In MXML können Sie die folgende Syntax verwenden, um diese Eigenschaft zu setzen: <codeph>folderClosedIcon="@Embed(source='b.jpg');"</codeph>. Der Standardwert ist das TreeFolderClosed-Symbol in der Datei „Assets.swf“.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="folderOpenIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Legt das Symbol für den geöffneten Ordner für ein Verzweigungselement des Baums fest. In MXML können Sie die folgende Syntax verwenden, um diese Eigenschaft zu setzen: <codeph>folderOpenIcon="@Embed(source='a.jpg');"</codeph>. Der Standardwert ist das TreeFolderOpen-Symbol in der Datei „Assets.swf“.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="disclosureClosedIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Legt das Symbol fest, das neben einem übergeordneten Element angezeigt wird, welches geschlossen ist, sodass die Unterelemente nicht angezeigt werden (Unterstruktur ausgeblendet). Der Standardwert ist das TreeDisclosureClosed-Symbol in der Datei „Assets.swf“.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="disclosureOpenIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Legt das Symbol fest, das neben einem übergeordneten Element angezeigt wird, welches geöffnet ist, sodass die Unterelemente angezeigt werden. Der Standardwert ist das TreeDisclosureOpen-Symbol in der Datei „Assets.swf“.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="defaultLeafIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Legt das Standardsymbol für ein Blattelement fest. In MXML können Sie die folgende Syntax verwenden, um diese Eigenschaft zu setzen: <codeph>￼defaultLeafIcon="@Embed(source='c.jpg');"</codeph>￼. Der Standardwert ist das TreeNodeIcon-Symbol in der Datei „Assets.swf“.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="depthColors" owner="mx.controls:Tree" playerVersion="Flash9" type="Array">
<description>
  Array von Farben, das im Tree-Steuerelement verwendet wird, in absteigender Reihenfolge.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:Tree" playerVersion="Flash9" type="Array">
<description>
  Farben für Zeilen in einem abwechselnden Muster. Der Wert kann ein Array aus zwei oder mehr Farben sein. Wird nur verwendet, wenn die <codeph>backgroundColor</codeph>-Eigenschaft nicht festgelegt ist.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The &lt;mx:Tree&gt; tag inherits all the tag attributes of its superclass, and
  adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:Tree
    <b>Properties</b>
    dataDescriptor="<i>Instance of DefaultDataDescriptor</i>"
    dataProvider="null"
    dragMoveEnabled="true|false"
    firstVisibleItem="<i>First item in the control</i>"
    hasRoot="false|true"
    itemIcons="null"
    maxHorizontalScrollPosition="0"
    openItems="null"
    showRoot="true|false"
    &nbsp;
    <b>Styles</b>
    alternatingItemColors="undefined"
    backgroundDisabledColor="0xDDDDDD"
    defaultLeafIcon="<i>'TreeNodeIcon' symbol in Assets.swf</i>"
    depthColors="undefined"
    disclosureClosedIcon="<i>'TreeDisclosureClosed' symbol in Assets.swf</i>"
    disclosureOpenIcon="<i>'TreeDisclosureOpen' symbol in Assets.swf</i>"
    folderClosedIcon="<i>'TreeFolderClosed' symbol in Assets.swf</i>"
    folderOpenIcon="<i>'TreeFolderOpen' symbol in Assets.swf</i>"
    indentation="17"
    openDuration="250"
    openEasingFunction="undefined"
    paddingLeft="2"
    paddingRight="0"
    rollOverColor="0xAADEFF"
    selectionColor="0x7FCDFE"
    selectionDisabledColor="0xDDDDDD"
    selectionEasingFunction="undefined"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
    itemClose="<i>No default</i>"
    itemOpen="<i>No default</i>"
    itemOpening="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls:List</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des Tree-Steuerelements können Benutzer hierarchische Daten in einer erweiterbaren Baumstruktur ansehen. Ein Baumelement kann ein Blatt oder eine Verzweigung sein. Ein Blattelement ist ein Endpunkt eines Baums. Eine Verzweigung kann Blatt- oder Verzweigungselemente enthalten oder leer sein.
 
  <p>Ein Blatt wird standardmäßig durch eine Textbeschriftung neben einem Dateisymbol dargestellt. Eine Verzweigung wird durch eine Textbeschriftung neben einem Ordnersymbol dargestellt, wobei Benutzer die untergeordneten Elemente mithilfe eines Anzeigedreiecks einblenden können.</p>
  
  <p>Die Tree-Klasse verwendet ein ITreeDataDescriptor- oder ITreeDataDescriptor2-Objekt zum Analysieren und Bearbeiten des Datenproviders. Der Standardbaumdatendeskriptor, ein Objekt der DefaultDataDescriptor-Klasse, unterstützt XML und Object-Klassen, ein Object-Klassen-Datenprovider muss über untergeordnete Elemente in den <codeph>children</codeph>-Feldern verfügen.
  </p>
 
  <p>Das Tree-Steuerelement verfügt über die folgenden Standardgrößeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breite: breit genug für das Symbol, die Beschriftung und, falls vorhanden, das Anzeigedreieck des breitesten Knotens in den sieben ersten angezeigten (nicht ausgeblendeten) Zeilen; Höhe: sieben Zeilen, wobei jede Zeile 20 Pixel hoch ist. Wenn eine Bildlaufleiste erforderlich ist, so ist deren Breite nicht in der Breitenberechnung berücksichtigt.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>5000 x 5000</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TreeExample.mxml"><swfblock conref="examples/TreeExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.treeClasses.xml#ITreeDataDescriptor"><linktext>mx.controls.treeClasses.ITreeDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#ITreeDataDescriptor2"><linktext>mx.controls.treeClasses.ITreeDataDescriptor2</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link></related-links><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_OPENING_itemOpening"><apiName>itemOpening</apiName><shortdesc>
  Wird ausgelöst, wenn das Öffnen oder Schließen einer Verzweigung initiiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_OPENING</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das Öffnen oder Schließen einer Verzweigung initiiert wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_OPEN_itemOpen"><apiName>itemOpen</apiName><shortdesc>
  Wird ausgelöst, wenn eine Verzweigung geöffnet oder eingeblendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_OPEN</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn eine Verzweigung geöffnet oder eingeblendet wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_CLOSE_itemClose"><apiName>itemClose</apiName><shortdesc>
  Wird ausgelöst, wenn eine Verzweigung geschlossen oder ausgeblendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_CLOSE</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn eine Verzweigung geschlossen oder ausgeblendet wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Tree:Tree"><apiName>Tree</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Tree:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_COMPLETE-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_COMPLETE</codeph>-Ereignisse. Diese Methode entfernt das Element aus dem Datenprovider.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      Verarbeitet DragEvent.DRAG_DROP-Ereignisse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Das DragEvent-Objekt.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Verarbeitet <codeph>DragEvent.DRAG_DROP</codeph>-Ereignisse. Diese Methode verbirgt das Drop-Feeback durch den Aufruf der <codeph>hideDropFeedback()</codeph>-Methode.
     
      <p>Bei einer <codeph>COPY</codeph>-Aktion erstellt diese Methode eine tiefe Kopie des Objekts, indem sie die <codeph>ObjectUtil.copy()</codeph>-Methode aufruft und die <codeph>uid</codeph>-Eigenschaft der Kopie (wenn vorhanden) durch einen neuen Wert ersetzt, indem die <codeph>UIDUtil.createUID()</codeph>-Methode aufgerufen wird.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.utils.xml#ObjectUtil"><linktext>mx.utils.ObjectUtil</linktext></link><link href="mx.utils.xml#UIDUtil"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:Tree:expandChildrenOf"><apiName>expandChildrenOf</apiName><shortdesc>
      Öffnet oder schließt die Baumelemente unter dem festgelegten Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das Startelement.
     
      </apiDesc></apiParam><apiParam><apiItemName>open</apiItemName><apiType value="Boolean"/><apiDesc>Schaltet zwischen einem Öffnen- und Schließen-Vorgang um. Legen Sie zum Öffnen <codeph>true</codeph> und zum Schließen <codeph>false</codeph> fest.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Öffnet oder schließt die Baumelemente unter dem festgelegten Element. Wenn Sie <codeph>dataProvider</codeph> setzen und sofort danach <codeph>expandChildrenOf()</codeph> aufrufen, tritt möglicherweise nicht das richtige Verhalten auf. Sie sollten entweder auf die Überprüfung Ihres Aufrufs durch die Komponente warten oder <codeph>validateNow()</codeph> aufrufen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:expandItem"><apiName>expandItem</apiName><shortdesc>
      Öffnet oder schließt ein Verzweigungselement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Betroffenes Element.
     
      </apiDesc></apiParam><apiParam><apiItemName>open</apiItemName><apiType value="Boolean"/><apiDesc>Legen Sie zum Öffnen <codeph>true</codeph> und zum Schließen <codeph>false</codeph> fest.
     
      </apiDesc></apiParam><apiParam><apiItemName>animate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legen Sie zur Animierung des Übergangs <codeph>true</codeph> fest. (Hinweis: Wenn eine Verzweigung über mehr als 20 Unterelemente verfügt, erfolgt aus Leistungsgründen beim ersten Öffnen keine Animation.)
     
      </apiDesc></apiParam><apiParam><apiItemName>dispatchEvent</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Legt fest, ob der Baum nach Beendigung der Animation beim Öffnen ein <codeph>open</codeph>-Ereignis auslöst.
     
      </apiDesc></apiParam><apiParam><apiItemName>cause</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Das Ereignis, falls zutreffend, das die Aktion zum Öffnen des Elements initiiert hat.
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Öffnet oder schließt ein Verzweigungselement. Wird ein Verzweigungselement geöffnet, so wird der Status der Unterelemente (geöffnet oder geschlossen) wiederhergestellt, wenn sie bereits geöffnet waren. Wenn Sie <codeph>dataProvider</codeph> setzen und sofort danach <codeph>expandItem()</codeph> aufrufen, tritt möglicherweise nicht das richtige Verhalten auf. Sie sollten entweder auf die Überprüfung Ihres Aufrufs durch die Komponente warten oder <codeph>validateNow()</codeph> aufrufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:getParentItem"><apiName>getParentItem</apiName><shortdesc>
      Gibt das bekannte übergeordnete Element eines untergeordneten Elements zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das übergeordnete Element des Elements.
      
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Element, für welches das übergeordnete Element abzurufen ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt das bekannte übergeordnete Element eines untergeordneten Elements zurück. Diese Methode gibt nur dann einen Wert zurück, wenn das Element sichtbar war oder zurzeit sichtbar ist. Elemente der obersten Ebene haben ein übergeordnetes Element mit dem Wert <codeph>null</codeph>. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:initListData"><apiName>initListData</apiName><shortdesc>
      Initialisiert ein TreeListData-Objekt, das durch den Baumelementrenderer verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das darzustellende Element.
      </apiDesc></apiParam><apiParam><apiItemName>treeListData</apiItemName><apiOperationClassifier>mx.controls.treeClasses:TreeListData</apiOperationClassifier><apiDesc>Das für die Darstellung des Elements zu verwendende TreeListDataItem-Element.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Initialisiert ein TreeListData-Objekt, das durch den Baumelementrenderer verwendet wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:isItemOpen"><apiName>isItemOpen</apiName><shortdesc>
      Gibt „true“ zurück, wenn die festgelegte Elementverzweigung geöffnet ist (untergeordnete Elemente werden angezeigt).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>„True“ bedeutet geöffnet, „false“ bedeutet nicht geöffnet.
     
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Zu überprüfendes Element.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt <codeph>true</codeph> zurück, wenn die festgelegte Elementverzweigung geöffner ist (untergeordnete Elemente werden angezeigt).
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Erstellt eine neue TreeListData-Instanz und füllt die Felder auf Basis des Eingabedatenproviderelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Ein neu erstelltes ListData-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement, das für den Abruf der Daten in ListData verwendet wird.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID des Elements.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements im Datenprovider.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine neue TreeListData-Instanz und füllt die Felder auf Basis des Eingabedatenproviderelements. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:setItemIcon"><apiName>setItemIcon</apiName><shortdesc>
      Legt das Symbol für das Element fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Betroffenes Element.
      </apiDesc></apiParam><apiParam><apiItemName>iconID</apiItemName><apiType value="Class"/><apiDesc>Verknüpfungs-ID des Blattsymbols (für „geschlossen“).
      </apiDesc></apiParam><apiParam><apiItemName>iconID2</apiItemName><apiType value="Class"/><apiDesc>Verknüpfungs-ID des Symbols für „geöffnet“.
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt das Symbol für das Element fest. Durch Aufrufen dieser Methode werden die <codeph>iconField</codeph>- und <codeph>iconFunction</codeph>-Eigenschaften dieses Elements außer Kraft gesetzt, wenn es sich um ein Blattelement handelt. Baumelemente verwenden die <codeph>iconField</codeph>- und <codeph>iconFunction</codeph>-Eigenschaften nicht. Sie verwenden die <codeph>folderOpenIcon</codeph>- und <codeph>folderClosedIcon</codeph>-Eigenschaften.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Tree:itemIcons"><apiName>itemIcons</apiName><shortdesc>
      Ein Objekt, das die Symbole für die Elemente festlegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/><apiDefaultValue>undefined
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Objekt, das die Symbole für die Elemente festlegt. Jeder Eintrag im Objekt verfügt über einen Feldnamen, der der UID des Elements entspricht, und einen Wert, der einem Objekt mit dem folgenden Format entspricht:
      <pre>
      {iconID: <i>Class</i>, iconID2: <i>Class</i>}
      </pre>
      Der <codeph>iconID</codeph>-Feldwert ist eine Klasse des Icons für ein geschlossenes oder Blattelement, und <codeph>iconID2</codeph> ist die Klasse des Symbols für ein geöffnetes Element.
     
      <p>Die Eigenschaft soll die Initialisierung von Elementsymbolen ermöglichen. Änderungen dieses Arrays nach der Initialisierung werden nicht automatisch erkannt. Verwenden Sie die <codeph>setItemIcon()</codeph>-Methode, um Symbole dynamisch zu ändern.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/setItemIcon()"><linktext>setItemIcon()</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Gibt den aktuellen ITreeDataDescriptor zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.treeClasses:ITreeDataDescriptor</apiValueClassifier><apiDefaultValue>DefaultDataDescriptor
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den aktuellen ITreeDataDescriptor zurück.
     
       </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      Zeigt an, dass Elemente während eines Drag &amp; Drop-Vorgangs verschoben, nicht nur kopiert werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Zeigt an, dass Elemente während eines Drag &amp; Drop-Vorgangs verschoben, nicht nur kopiert werden können.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:firstVisibleItem:get"><apiName>firstVisibleItem</apiName><shortdesc>
      Das Element wird derzeit in der obersten Zeile des Baums angezeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Das Element wird derzeit in der obersten Zeile des Baums angezeigt. Abhängig davon, wie die Verzweigungen geöffnet und geschlossen und der Bildlauf durchgeführt wurde, kann die oberste Zeile beispielsweise das neunte Element der aktuell anzeigbaren Elemente enthalten, das Elemente darstellt, die mehrere Ebenen unter dem Stamm liegen. Das Festlegen dieser Eigenschaft ist analog zum Festlegen der verticalScrollPosition des List-Steuerelements. Wenn das Element zurzeit nicht anzeigbar ist, weil es sich beispielsweise unterhalb eines nicht geöffneten Elements befindet, bleibt das Festlegen dieser Eigenschaft wirkungslos.
     
      <p>Hinweis: In Flex 1.0 wurde diese Eigenschaft als XMLNode bezeichnet, ob sie entweder einem XMLNode oder einem TreeNode entsprach. In 2.0 ist es ein „Object“ generischen Typs und gibt ein Objekt desselben Typs wie die Daten im DataProvider zurück.</p>
     
      <p>Der Standardwert entspricht dem ersten Element im Tree-Steuerelement.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:hasRoot:get"><apiName>hasRoot</apiName><shortdesc>
      Zeigt an, dass der aktuelle dataProvider über ein Stammelement verfügt. Beispiel: ein einzelner Knoten der obersten Ebene in einer hierarchischen Struktur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Zeigt an, dass der aktuelle dataProvider über ein Stammelement verfügt. Beispiel: ein einzelner Knoten der obersten Ebene in einer hierarchischen Struktur. „XML“ und „Object“ sind Beispiele für Typen, die über einen Stamm verfügen. Bei Listen und Arrays ist das nicht der Fall.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/showRoot"><linktext>showRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:maxHorizontalScrollPosition:get"><apiName>maxHorizontalScrollPosition</apiName><shortdesc>
      Der maximale Wert für die maxHorizontalScrollPosition-Eigenschaft des Tree-Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der maximale Wert für die <codeph>maxHorizontalScrollPosition</codeph>-Eigenschaft des Tree-Steuerelements. Anders als die <codeph>maxHorizontalScrollPosition</codeph>-Eigenschaft im List-Steuerelement wird diese Eigenschaft durch das Tree-Steuerelement geändert, wenn Elemente geöffnet und geschlossen werden und auf andere Art und Weise sichtbar oder unsichtbar werden (beispielsweise durch Betätigen des Bildlaufs).
     
      <p>Wenn diese Eigenschaft auf das breiteste bekannte Element im dataProvider gesetzt wird, wird es durch das Tree-Steuerelement so geändert, dass sogar dann, wenn sich das breiteste Element auf der vierten Unterebene der Baumstruktur befindet, der Benutzer per Bildlauf dorthin navigieren und es sehen kann. Deswegen entspricht der Wert, der für die <codeph>maxHorizontalScrollPosition</codeph>-Eigenschaft abgerufen wird, nicht unbedingt dem Wert, der vom Tree-Steuerelement tatsächlich verwendet wird.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:openItems:get"><apiName>openItems</apiName><shortdesc>
      Elemente, die geöffnet oder auf geöffnet gesetzt wurden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Elemente, die geöffnet oder auf geöffnet gesetzt wurden.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Leg die Sichtbarkeit des Stammelements fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Leg die Sichtbarkeit des Stammelements fest. Wenn die dataProvider-Daten über einen Root-Knoten verfügen und dieser auf <codeph>false</codeph> gesetzt ist, zeigt das Tree-Steuerelement das Stammelement nicht an. Nur die dem Stammelement untergeordneten Elemente werden angezeigt. Dieses Flag hat keine Auswirkungen auf Datenprovider ohne Stammelement, wie beispielsweise Listen und Arrays. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:dataProvider:set"><apiName>dataProvider</apiName><shortdesc>
      Ein Objekt, welches die anzuzeigenden Daten enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Objekt, welches die anzuzeigenden Daten enthält. Wenn dieser Eigenschaft ein Wert zugewiesen wird, behandelt die Tree-Klasse das Quelldatenobjekt wie folgt:
      <p>
      <ul><li>Ein String, der gültigen XML-Text enthält, wird in eine XMLListCollection konvertiert.</li>
      <li>Ein XMLNode wird in eine XMLListCollection konvertiert.</li>
      <li>Eine XMLList wird in eine XMLListCollection konvertiert.</li>
      <li>Alle Objekte, die die ICollectionView-Schnittstelle implementieren, werden in ICollectionView umgewandelt.</li>
      <li>Ein Array wird in eine ArrayCollection konvertiert.</li>
      <li>Andere Objekttypen werden in ein Array eingefügt, wobei das Objekt den einzigen Eintrag darstellt.</li></ul>
      </p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ComboBase"><apiName>ComboBase</apiName><shortdesc>
  Die ComboBase-Klasse ist die Basisklasse für Steuerelemente, die Text in einem Textfeld anzeigen und über eine Schaltfläche verfügen, die eine Dropdownliste einblendet, aus der der Benutzer den anzuzeigenden Text auswählen kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="textInputStyleName" owner="mx.controls:ComboBase" playerVersion="Flash9" type="String">
<description>
  Die Stildeklaration der internen TextInput-Unterkomponente, die die aktuelle Auswahl anzeigt. Wenn kein Wert festgelegt wird, verwendet die TextInput-Unterkomponente die von der ComboBase-Klasse festgelegten Standardtextstile.
 
  </description>
<default>""
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textInputClass" owner="mx.controls:ComboBase" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die den von dieser Komponente für die Darstellung von Text verwendeten ITextInput implementiert.
 
  <p>Sie kann auf die mx.core.TextInput-Klasse (zur Verwendung des klassischen Halo TextInput-Steuerelements) oder die mx.controls.MXFTETextInput-Klasse (zur Verwendung der auf dem Text Layout Framework basierenden Spark TextInput-Komponente, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.controls.TextInput
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableDisabledSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn das Steuerelement deaktiviert ist und die <codeph>editable</codeph>-Eigenschaft <codeph>true</codeph> ist. Diese Skin wird nur von der ComboBox-Klasse verwendet. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableDownSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn der Benutzer die Maustaste gedrückt hält und die <codeph>editable</codeph>-Eigenschaft <codeph>true</codeph> ist. Diese Skin wird nur von der ComboBox-Klasse verwendet. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableOverSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn sich der Mauszeiger über dem Steuerelement befindet und die <codeph>editable</codeph>-Eigenschaft <codeph>true</codeph> ist. Diese Skin wird nur von der ComboBox-Klasse verwendet. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableUpSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn sich der Mauszeiger nicht über dem Steuerelement befindet und die <codeph>editable</codeph>-Eigenschaft <codeph>true</codeph> ist Diese Skin wird nur von der ComboBox-Klasse verwendet. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn die <codeph>editable</codeph>-Eigenschaft <codeph>true</codeph> ist. Diese Skin wird nur von der ComboBox-Klasse verwendet. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn das Steuerelement deaktiviert ist. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse. Der Standardwert für die ColorPicker-Klasse ist die ColorPickerSkin-Klasse. Der Standardwert für die DateField-Klasse ist die ScrollArrowDownSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn die Maustaste gedrückt wird. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse. Der Standardwert für die ColorPicker-Klasse ist die ColorPickerSkin-Klasse. Der Standardwert für die DateField-Klasse ist die ScrollArrowDownSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn sich der Mauszeiger über dem Steuerelement befindet. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse. Der Standardwert für die ColorPicker-Klasse ist die ColorPickerSkin-Klasse. Der Standardwert für die DateField-Klasse ist die ScrollArrowDownSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Hintergrund und den Rahmen verwendet wird, wenn sich der Mauszeiger nicht über dem Steuerelement befindet. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Standardskin für den Hintergrund und den Rahmen verwendet werden soll. Für die ComboBase-Klasse gibt es keinen Standardwert. Der Standardwert der ComboBox-Klasse ist die ComboBoxArrowSkin-Klasse.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Die Farbe eines beliebigen Symbols einer Komponente. Beispiele sind etwa das Häkchen eines Kontrollkästchens oder der Pfeil auf der Schaltfläche einer Bildlaufleiste.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Fokusrings, wenn sich die Komponente im Fokus befindet
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Inhaltsbereichs der Komponente.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Inhaltshintergrunds für diese Komponente.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ComboBase&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;<i>mx:tagname</i>
    <b>Properties</b>
    dataProvider="null"
    editable="false|true"
    imeMode="null"
    restrict="null"
    selectedIndex="-1"
    selectedItem="null"
    text=""
    &nbsp;
    <b>Styles</b>
    disabledSkin="<i>Depends on class</i>"
    downSkin="<i>Depends on class</i>"
    editableDisabledSkin="<i>Depends on class</i>"
    editableDownSkin="<i>Depends on class</i>"
    editableOverSkin="<i>Depends on class</i>"
    editableUpSkin="<i>Depends on class</i>"
    overSkin="<i>Depends on class</i>"
    textInputStyleName="" 
    upSkin="<i>Depends on class</i>"
 
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die ComboBase-Klasse ist die Basisklasse für Steuerelemente, die Text in einem Textfeld anzeigen und über eine Schaltfläche verfügen, die eine Dropdownliste einblendet, aus der der Benutzer den anzuzeigenden Text auswählen kann. Die ComboBase-Klasse wird nicht direkt als MXML-Tag verwendet.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.collections.xml#ICollectionView"><linktext>mx.collections.ICollectionView</linktext></link></related-links><apiConstructor id="mx.controls:ComboBase:ComboBase"><apiName>ComboBase</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ComboBase:protected:calculatePreferredSizeFromData"><apiName>calculatePreferredSizeFromData</apiName><shortdesc>
      Bestimmt Standardwerte für die Höhe und Breite von Einträgen in Dropdownlisten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein Objekt mit <codeph>width</codeph>- und <codeph>height</codeph>-Eigenschaften.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>numItems</apiItemName><apiType value="int"/><apiDesc>Die Anzahl der Elemente, die für die Bestimmung der Größe zu überprüfen sind.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt Standardwerte für die Höhe und Breite von Einträgen in Dropdownlisten. Jede Unterklasse von ComboBase muss diese Methode implementieren und ein Objekt zurückgeben, welches zwei Eigenschaften enthält: <codeph>width</codeph> und <codeph>height</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:collectionChangeHandler"><apiName>collectionChangeHandler</apiName><shortdesc>
      Reagiert auf Änderungen im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das von der Sammlung ausgelöste CollectionEvent-Ereignis.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Reagiert auf Änderungen im Datenprovider. Die Komponente passt die <codeph>selectIndex</codeph>-Eigenschaft an, wenn Elemente vor den ausgewählten Elementen der Komponente hinzugefügt oder entfernt werden.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#CollectionEvent"><linktext>mx.events.CollectionEvent</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:ComboBase:protected:downArrowButton_buttonDownHandler"><apiName>downArrowButton_buttonDownHandler</apiName><shortdesc>
      Führt eine Aktion aus, wenn die Dropdownschaltfläche geklickt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:FlexEvent</apiOperationClassifier><apiDesc>Das Ereignis, das ausgelöst wird, wenn die Dropdownschaltfläche geklickt wird.     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Führt eine Aktion aus, wenn die Dropdownschaltfläche geklickt wird. Dies ist eine abstrakte Basisklassenimplementierung, die wirkungslos ist und durch die Unterklassen außer Kraft gesetzt wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:itemToUID"><apiName>itemToUID</apiName><shortdesc>
      Bestimmt die UID eines dataProvider-Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein eindeutiger Bezeichner.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Ein dataProvider-Element.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt die UID eines dataProvider-Elements. Jedes dataProvider-Element muss über einen eindeutigen Bezeichner (unique identifier, UID) verfügen oder einen solchen zugewiesen bekommen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:measure"><apiName>measure</apiName><shortdesc>
      Bestimmt die measuredWidth- und measuredHeight-Eigenschaft des Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Bestimmt die <codeph>measuredWidth</codeph>- und <codeph>measuredHeight</codeph>-Eigenschaften des Steuerelements. „Measured width“ bezeichnet die Breite des breitesten Texts im <codeph>dataProvider</codeph> zuzüglich der Breite der Dropdownschaltfläche. Die angegebene Höhe entspricht entweder der Schaltfläche oder dem Text, je nachdem, welcher Wert höher ist. Wenn kein Datenprovider festgelegt wurde oder in diesem keine Elemente vorhanden sind, wird die <codeph>measuredWidth</codeph>-Eigenschaft auf <codeph>UIComponent.DEFAULT_MEASURED_WIDTH</codeph> und die <codeph>measuredHeight</codeph>-Eigenschaft auf <codeph>UIComponent.DEFAULT_MEASURED_HEIGHT</codeph> gesetzt.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/measure()"><linktext>mx.core.UIComponent.measure()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:ComboBase:protected:textInput_changeHandler"><apiName>textInput_changeHandler</apiName><shortdesc>
      Die Prozedur wechselt zum TextInput, welches als bearbeitbares Textfeld in der Komponente dient.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Das Ereignis wird immer dann ausgelöst, wenn sich der Text im Steuerelement ändert.     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Prozedur wechselt zum TextInput, welches als bearbeitbares Textfeld in der Komponente dient. Die Methode setzt <codeph>selectedIndex </codeph> auf -1 (und somit <codeph>selectedItem</codeph> auf <codeph>null</codeph>).
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Implementiert die Größe und Position einer internen Komponente aufgrund der angegebenen Breite und Höhe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleX</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Implementiert die Größe und Position einer internen Komponente aufgrund der angegebenen Breite und Höhe. Die Dropdownschaltfläche wird ganz rechts platziert und das Textfeld füllt den verbleibenden Platz.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.controls:ComboBase:protected:collection"><apiName>collection</apiName><shortdesc>
      Die ICollectionView von Elementen, die von dieser Komponente angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:ICollectionView</apiValueClassifier></apiValueDef><apiDesc>
      Die ICollectionView von Elementen, die von dieser Komponente angezeigt werden.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:iterator"><apiName>iterator</apiName><shortdesc>
      Der Haupt-IViewCursor, der für das Abrufen von Elementen aus dem dataProvider und deren Übergabe an den Renderer verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Der Haupt-IViewCursor, der für das Abrufen von Elementen aus dem dataProvider und deren Übergabe an den Renderer verwendet wird. Am Ende einer Codesequenz muss er immer beim zuoberst sichtbaren Element des Bildschirms platziert werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:textInput"><apiName>textInput</apiName><shortdesc>
      Die interne TextInput-Unterkomponente, welche die aktuelle Auswahl anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:ITextInput</apiValueClassifier></apiValueDef><apiDesc>
      Die interne TextInput-Unterkomponente, welche die aktuelle Auswahl anzeigt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:arrowButtonStyleFilters:get"><apiName>arrowButtonStyleFilters</apiName><shortdesc>
      Satz an Stilen, der von der ComboBase an die Nach-unten-Taste übergeben wird.
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Satz an Stilen, der von der ComboBase an die Nach-unten-Taste übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:protected:borderMetrics:get"><apiName>borderMetrics</apiName><shortdesc>
      Gibt ein EdgeMetrics-Objekt zurück, das über vier Eigenschaften verfügt: links, oben, rechts und unten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:EdgeMetrics</apiValueClassifier></apiValueDef><apiDesc>
      Gibt ein EdgeMetrics-Objekt zurück, das über vier Eigenschaften verfügt: <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> und <codeph>bottom</codeph>. Der Wert der Eigenschaften entspricht der Rahmenstärke der jeweiligen Seite in Pixeln.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Der Satz an Elementen, die von dieser Komponente angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Elementen, die von dieser Komponente angezeigt werden. Diese Eigenschaft ist vom Typ „Object“, da die abgeleitete Klasse eine Vielzahl an Datentypen verarbeiten kann, beispielsweise Arrays, XML und ICollectionViews. Alle werden in eine ICollectionView konvertiert, diese wird zurückgegeben, wenn Sie den Wert dieser Eigenschaft abrufen. Sie erhalten den festgelegten Wert nicht, wenn es sich nicht um eine ICollectionView handelt.
     
      <p>Durch das Festlegen dieser Eigenschaft wird die <codeph>selectedIndex</codeph>-Eigenschaft (und damit die <codeph>selectedItem</codeph>-Eigenschaft) angepasst, wenn die <codeph>selectedIndex</codeph>-Eigenschaft nicht anderweitig gesetzt wurde. Wenn keine <codeph>prompt</codeph>-Eigenschaft vorhanden ist, wird die <codeph>selectedIndex</codeph>-Eigenschaft auf 0 gesetzt, andernfalls bleibt sie bei -1, der Indexposition, die als Eingabeaufforderungsstring verwendet wird. Wenn die <codeph>selectedIndex</codeph>-Eigenschaft gesetzt wurde und sich außerhalb des Bereichs des neuen Datenproviders befindet, wird es sehr wahrscheinlich zu unerwartetem Verhalten kommen.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:editable:get"><apiName>editable</apiName><shortdesc>
      Ein Flag, das anzeigt, ob das Steuerelement bearbeitbar ist, sodass der Benutzer Einträge direkt eingeben kann, die im dataProvider nicht festgelegt oder nicht bearbeitbar sind, und der Benutzer aus den Elementen im dataProvider auswählen muss.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false.
      This property is ignored by the DateField control.
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob das Steuerelement bearbeitbar ist, sodass der Benutzer Einträge direkt eingeben kann, die im dataProvider nicht festgelegt oder nicht bearbeitbar sind, und der Benutzer aus den Elementen im dataProvider auswählen muss.
     
      <p>Wenn der Wert <codeph>true </codeph> ist, werden Inhalte per Tastatur in das bearbeitbare Textfeld eingegeben, andernfalls wir es für Tastaturbefehle zur Auswahl von Elementen im dataProvider verwendet.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:imeMode:get"><apiName>imeMode</apiName><shortdesc conref="mx.controls.TextInput#imeMode">
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.TextInput#imeMode">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:restrict:get"><apiName>restrict</apiName><shortdesc>
      Die Zeichen, die ein Benutzer in das Textfeld eingeben kann oder nicht kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Zeichen, die ein Benutzer in das Textfeld eingeben kann oder nicht kann.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Die Indexposition im Datenprovider des ausgewählten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Indexposition im Datenprovider des ausgewählten Elements. Wenn eine <codeph>prompt</codeph>-Eigenschaft vorhanden ist, kann der <codeph>selectedIndex</codeph>Wert auf -1 gesetzt werden, um die Eingabeaufforderung anzuzeigen. Wenn keine <codeph>prompt</codeph>-Eigenschaft vorhanden ist, wird der <codeph>selectedIndex</codeph> auf 0 gesetzt, sobald ein <codeph>dataProvider</codeph> festgelegt ist.
     
      <p>Wenn das ComboBox-Steuerelement bearbeitbar ist, ist die <codeph>selectedIndex</codeph>-Eigenschaft -1, wenn ein Text in das Textfeld eingegeben wird.</p>
     
      <p>Anders als bei anderen entwertenden Flex-Eigenschaften (bei denen die Festlegung keine sofortige Auswirkung hat), sind die <codeph>selectedIndex</codeph>- und <codeph>selectedItem</codeph>-Eigenschaften synchron: das Festlegen der einen wirkt sich unmittelbar auf die andere aus.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      Das Datenproviderelement bei selectedIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Das Datenproviderelement bei selectedIndex.
     
      <p>Wenn es sich bei den Daten um ein Objekt oder eine Klasseninstanz handelt, wird durch die Änderung der Eigenschaften des Objekts oder der Instanz das <codeph>dataProvider</codeph>-Objekt geändert, aber möglicherweise werden die Ansichten nicht aktualisiert, außer wenn die Instanz bindbar ist oder einen IPropertyChangeNotifier implementiert oder ein Aufruf von dataProvider.itemUpdated() erfolgt.</p>
     
      Durch das Festlegen der <codeph>selectedItem</codeph>-Eigenschaft wählt das ComboBox-Steuerelement dieses Element aus (zeigt es im Textfeld an und legt <codeph>selectedIndex</codeph> fest), wenn es im Datenprovider vorkommt. Wenn das ComboBox-Steuerelement bearbeitbar ist, ist die <codeph>selectedItem</codeph>-Eigenschaft <codeph>null</codeph>, wenn Text in das Textfeld eingegeben wird.
     
      <p>Anders als bei anderen entwertenden Flex-Eigenschaften (bei denen die Festlegung keine sofortige Auswirkung hat), sind die <codeph>selectedIndex</codeph>- und <codeph>selectedItem</codeph>-Eigenschaften synchron: das Festlegen der einen wirkt sich unmittelbar auf die andere aus.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:text:get"><apiName>text</apiName><shortdesc>
      Inhalte des Textfelds.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Inhalte des Textfelds. Wenn das Steuerelement nicht bearbeitbar ist, bleibt das Festlegen dieser Eigenschaft wirkungslos. Ist das Steuerelement bearbeitbar, werden durch das Setzen dieser Eigenschaft die Inhalte des Textfelds festgelegt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:textInputStyleFilters:get"><apiName>textInputStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der von der ComboBase an die Texteingabe übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der von der ComboBase an die Texteingabe übergeben wird. Diese Stile werden ignoriert, wenn die <codeph>textInputStyleName</codeph>-Stileigenschaft festgelegt wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:value:get"><apiName>value</apiName><shortdesc>
      Der Wert des ausgewählten Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Wert des ausgewählten Elements. Handelt es sich bei dem Element um eine Zahl oder einen String, so entspricht der Wert dem Element. Handelt es sich bei dem Element um ein Objekt, so entspricht der Wert entweder der <codeph>data</codeph>- oder der <codeph>label</codeph>-Eigenschaft, je nachdem, welche vorhanden ist.
     
      <p><b>Hinweis:</b> Die <codeph>selectedItem</codeph>-Eigenschaft ist oft der Verwendung dieser Eigenschaft vorzuziehen. Die <codeph>value</codeph>-Eigenschaft gewährleistet Abwärtskompatibilität mit älteren Anwendungen.</p>
     
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TileList"><apiName>TileList</apiName><shortdesc>
  Das TileList-Steuerelement zeigt Elemente in einem Kachel-Layout an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:TileList" replacement="spark.components.List" since="4.0">
<description>
  Die layoutspezifischen List-Komponenten in Flex 3 wurden durch eine allgemeinere List-Komponente mit einem generischen Layout ersetzt. Um ein ähnliches Verhalten von der neuen List-Komponente zu erhalten, setzen Sie die <codeph>layout</codeph>-Eigenschaft auf <codeph>TileLayout</codeph>.
 </description>
	</Alternative><effects><effect event="itemsChange" name="itemsChangeEffect" owner="mx.controls:TileList">
<description>
  Der Dateneffekt tritt auf, wenn der Datenprovider des Steuerelements geändert wird.
 
  <p>Standardmäßig verwendet das TileList-Steuerelement den Dateneffekt nicht. Verwenden Sie für das TileList-Steuerelement eine Instanz der DefaultTileListEffect-Klasse.</p>
 
 </description>
<default>undefined
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:TileList&gt;</code> tag inherits
  all of the tag attributes of its superclass, but ignores the
  <code>variableRowHeight</code> and <code>wordWrap</code> tag attributes.  
  It adds no additional tag attributes.</p>
  
  <pre>
  &lt;mx:TileList/&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:TileBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das TileList-Steuerelement zeigt Elemente in einem Kachel-Layout an. Es weist eine Bildlaufleiste entlang einer seiner Achsen auf, abhängig von der <codeph>direction</codeph>-Eigenschaft. Die Größe der Kacheln kann anhand der <codeph>rowHeight</codeph>- und <codeph>columnWidth</codeph>-Eigenschaften festgelegt werden. Alternativ dazu misst Flex den Elementrenderer des ersten Elements im dataProvider und verwendet diese Größe für alle Kacheln.
  
  <p>Das TileList-Steuerelement verfügt über die folgenden Größeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Vier Spalten und vier Zeilen. Durch Verwendung des standardmäßigen Elementrenderers ergibt die Gesamtgröße 66 mal 126 Pixel.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>5000 x 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TileListExample.mxml"><swfblock conref="examples/TileListExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:TileList:TileList"><apiName>TileList</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:FormItemLabel"><apiName>FormItemLabel</apiName><shortdesc>
  Der FormItem-Container verwendet ein FormItemLabel-Objekt für die Anzeige des Beschriftungsteils des Containers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Label</apiBaseClassifier></apiClassifierDef><apiDesc>
  Der FormItem-Container verwendet ein FormItemLabel-Objekt für die Anzeige des Beschriftungsteils des Containers.
 
  <p>Die FormItemLabel-Klasse verfügt nicht über mehr Funktionen als ihre Superklasse (Label). Ihre Funktion liegt vielmehr darin, dass in einem FormItemLabel-Typselektor Stile festgelegt werden können, die sich auf die Beschriftungen aller FormItem-Container auswirken.</p>
 
  <p><b>Hinweis:</b> Diese Klasse ist veraltet. Die empfohlene Vorgehensweise bei der Anwendung eines Stils auf eine formItem-Beschriftung ist die Verwendung der <codeph>labelStyleName</codeph>-Stileigenschaft der FormItem-Klasse.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#FormItem"><linktext>mx.containers.FormItem</linktext></link></related-links><apiConstructor id="mx.controls:FormItemLabel:FormItemLabel"><apiName>FormItemLabel</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:List"><apiName>List</apiName><shortdesc>
  Das List-Steuerelement zeigt eine vertikale Elementliste an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:List" replacement="spark.components.List" since="4.0">
	</Alternative><effects><effect event="itemsChange" name="itemsChangeEffect" owner="mx.controls:List">
<description>
  Der Dateneffekt tritt auf, wenn der Datenprovider des Steuerelements geändert wird.
 
  <p>Standardmäßig verwendet das List-Steuerelement den Dateneffekt nicht.  </p>
 
  </description>
<default>undefined
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:List&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:List
    <b>Properties</b>
    editable="false|true"
    editedItemPosition="<i>No default</i>"
    editorDataField="text"
    editorHeightOffset="0"
    editorUsesEnterKey="false|true"
    editorWidthOffset="0"
    editorXOffset="0"
    editorYOffset="0"
    imeMode="null"    
    itemEditor="TextInput"
    itemEditorInstance="<i>Current item editor</i>"
    rendererIsEditor="false|true"
    
    <b>Styles</b>
    backgroundDisabledColor="0xDDDDDD"
    
    <b>Events</b>
    itemEditBegin="<i>No default</i>"
    itemEditEnd="<i>No default</i>"
    itemEditBeginning="<i>No default</i>"
    itemFocusIn="<i>No default</i>"
    itemFocusOut="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls.listClasses:ListBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das List-Steuerelement zeigt eine vertikale Elementliste an. Seine Funktion ist der des SELECT-Elements in HTML sehr ähnlich. Wenn mehr Elemente vorhanden sind, als gleichzeitig angezeigt werden können, kann es eine vertikale Bildlaufleiste anzeigen, sodass auf alle Listenelemente zugegriffen werden kann. Mithilfe einer optionalen horizontalen Bildlaufleiste können Benutzer Elemente sehen, wenn die Gesamtbreite der Listenelemente wahrscheinlich zu breit ist. Abhängig von der <codeph>allowMultipleSelection</codeph>-Eigenschaft können Benutzer ein Element oder mehrere aus der Liste auswählen.
 
  <p>Das List-Steuerelement verfügt über die folgenden Standardgrößeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breit genug für die breiteste Beschriftung unter den ersten sieben sichtbaren Elementen (oder allen, wenn es weniger als sieben sind); sieben Zeilen zu je 20 Pixeln hoch.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>5000 x 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleList.mxml"><swfblock conref="examples/SimpleList.swf"/></example></apiClassifierDetail><related-links><link href="mx.events.xml#ListEvent"><linktext>mx.events.ListEvent</linktext></link></related-links><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><shortdesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus verliert. Das kann passieren, wenn der Benutzer auf ein anderes Element im List-Steuerelement (aber außerhalb der Liste) klickt oder die Tastatur zum Navigieren zu einem anderen Element im List-Steuerelement oder außerhalb verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus verliert. Das kann passieren, wenn der Benutzer auf ein anderes Element im List-Steuerelement (aber außerhalb der Liste) klickt oder die Tastatur zum Navigieren zu einem anderen Element im List-Steuerelement oder außerhalb verwendet. Wird nur ausgelöst, wenn das Listenelement bearbeitbar ist.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><shortdesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus erhält. Das kann passieren, wenn der Benutzer auf ein Element im List-Steuerelement klickt oder mithilfe der Tastatur zu einem solchen Element navigiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus erhält. Das kann passieren, wenn der Benutzer auf ein Element im List-Steuerelement klickt oder mithilfe der Tastatur zu einem solchen Element navigiert. Wird nur ausgelöst, wenn das Listenelement bearbeitbar ist.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><shortdesc>
  Wird ausgelöst, wenn eine Elementbearbeitungssitzung aus irgendeinem Grund geschlossen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn eine Elementbearbeitungssitzung aus irgendeinem Grund geschlossen wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><shortdesc>
  Wird ausgelöst, wenn die editedItemPosition-Eigenschaft festgelegt wurde und das Element bearbeitet werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die <codeph>editedItemPosition</codeph>-Eigenschaft festgelegt wurde und das Element bearbeitet werden kann.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste freigibt, während sich der Mauszeiger über einem Element, Register der Liste oder innerhalb der Liste befindet oder auf andere Weise versucht wird, ein Element zu bearbeiten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste freigibt, während sich der Mauszeiger über einem Element, Register der Liste oder innerhalb der Liste befindet oder auf andere Weise versucht wird, ein Element zu bearbeiten.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:List:List"><apiName>List</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:List:createItemEditor"><apiName>createItemEditor</apiName><shortdesc>
      Erstellt den Elementeditor für den Elementrenderer an der editedItemPosition und verwendet dazu den von der itemEditor-Eigenschaft angegebenen Editor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Die Spaltenindexposition. Flex setzt den Wert dieser Eigenschaft bei List-Steuerelementen auf 0.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition im Datenprovider des zu bearbeitenden Elements.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt den Elementeditor für den Elementrenderer an der <codeph>editedItemPosition</codeph> und verwendet dazu den von der <codeph>itemEditor</codeph>-Eigenschaft angegebenen Editor.
     
      <p>Diese Methode stellt als Editorenstanz die <codeph>itemEditorInstance</codeph>-Eigenschaft ein.</p>
     
      <p>Diese Methode kann nur von einem Ereignis-Listener für das <codeph>itemEditBegin</codeph>-Ereignis aufgerufen werden. Stellen Sie die <codeph>editedItemPosition</codeph>-Eigenschaft zur Generierung des <codeph>itemEditBegin</codeph>-Ereignisses ein, um den Editor zu einem anderen Zeitpunkt zu erzeugen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:createItemRenderer"><apiName>createItemRenderer</apiName><shortdesc>
      Rufen Sie den passenden Renderer ab, falls keiner festgelegt ist, den Standardrenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Der Renderer.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Objekt, von dem der Renderer erzeugt wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Rufen Sie den passenden Renderer ab, falls keiner festgelegt ist, den Standardrenderer.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:destroyItemEditor"><apiName>destroyItemEditor</apiName><shortdesc>
      Schließt einen Elementeditor, der derzeit für einen Elementrenderer geöffnet ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Schließt einen Elementeditor, der derzeit für einen Elementrenderer geöffnet ist. Diese Methode wird normalerweise nur von einem Ereignis-Listener für das <codeph>itemEditEnd</codeph>-Ereignis aufgerufen, nachdem bereits die <codeph>preventDefault()</codeph>-Methode aufgerufen wurde, um den Start des standardmäßigen Ereignis-Listener zu verhindern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:drawRowBackground"><apiName>drawRowBackground</apiName><shortdesc>
      Zeichnet an der festgelegten Position und Höhe einen Zeilenhintergrund.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite, das ein Anzeigeobjekt mit den Grafiken für die Zeile enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Zeile im Satz angezeigter Zeilen. Der Header zählt nicht mit, die oberste sichtbare Zeile hat die Zeilenindexposition 0. Dadurch wird der Überblick über die für das Zeichnen des Hintergrunds verwendeten Objekte bewahrt, sodass für eine Zeile ein Anzeigeobjekt wiederverwendet werden kann, auch wenn sich die Indexposition des Elements, das die Zeile darstellt, geändert hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die für den Hintergrund vorgeschlagene Y-Position.
     
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die vorgeschlagene Indikatorhöhe.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die vorgeschlagene Indikatorfarbe.
     
      </apiDesc></apiParam><apiParam><apiItemName>dataIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements für diese Zeile im Datenprovider. Dies kann beispielsweise verwendet werden, um eine andere Farbe für das zehnte Element festzulegen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet an der festgelegten Position und Höhe einen Zeilenhintergrund. Dadurch wird als Unterelement des Eingabe-Sprite eine Form erstellt und mit der entsprechenden Farbe gefüllt. Diese Methode verwendet auch die <codeph>backgroundAlpha</codeph>-Stileigenschaftseinstellungen zum Bestimmen der Transparenz der Hintergrundfarbe.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:endEdit"><apiName>endEdit</apiName><shortdesc>
      Beendet die Bearbeitung eines Elements im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Gibt <codeph>true </codeph> zurück, wenn <codeph>preventDefault()</codeph> nicht aufgerufen wird. Andernfalls wird <codeph>false</codeph> zurückgegeben.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>Eine Konstante, welche die Ursache für das Ereignis bestimmt (Beispiel: „CANCELLED“, „NEW_ROW“ oder „OTHER“). Der Wert muss ein Mitglied der ListEventReason-Klasse sein.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Beendet die Bearbeitung eines Elements im Datenprovider. Diese Methode wird aufgerufen, wenn die Bearbeitung eines Elements durch den Benutzer abgeschlossen ist. Sie sendet das <codeph>itemEditEnd</codeph>-Ereignis, welches das Kopieren der bearbeiteten Daten von <codeph>itemEditorInstance</codeph> in den Datenprovider startet und <codeph>itemEditorInstance</codeph> ausblendet.
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#ListEventReason"><linktext>mx.events.ListEventReason</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:List:isItemEditable"><apiName>isItemEditable</apiName><shortdesc>
      Bestimmt, ob der Elementrenderer eines Datenproviderelements bearbeitbar ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, wenn das Element bearbeitbar ist.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob der Elementrenderer eines Datenproviderelements bearbeitbar ist.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:layoutEditor"><apiName>layoutEditor</apiName><shortdesc>
      Platziert die Elementeditorinstanz mit den vorgeschlagenen Abmessungen an der vorgeschlagenen Position.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/><apiDesc>Die für den Indikator vorgeschlagene X-Position.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/><apiDesc>Die gewünschte Y-Position für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="int"/><apiDesc>Die gewünschte Breite für den Indikator.
      </apiDesc></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="int"/><apiDesc>Die vorgeschlagene Indikatorhöhe.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Platziert die Elementeditorinstanz mit den vorgeschlagenen Abmessungen an der vorgeschlagenen Position. Das Tree-Steuerelement setzt diese Methode außer Kraft und passt die Position an, um die Einrückung des Renderers zu kompensieren.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Erstellt eine neue ListData-Instanz und füllt die Felder auf Basis des Eingabedatenproviderelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Ein neu erstelltes ListData-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement, das für den Abruf der Daten in ListData verwendet wird.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID des Elements.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements im Datenprovider.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine neue ListData-Instanz und füllt die Felder auf Basis des Eingabeeatenproviderelements.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:List:editorDataField"><apiName>editorDataField</apiName><shortdesc>
      Der Name der Elementeditoreigenschaft, die die neuen Daten für das Listenelement enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>text</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Der Name der Elementeditoreigenschaft, welche die neuen Daten für das Listenelement enthält. So lautet beispielsweise der standardmäßige <codeph>itemEditor</codeph> „TextInput“. Daher ist der Standardwert der <codeph>editorDataField</codeph>-Eigenschaft <codeph>"text"</codeph>, wodurch die <codeph>text</codeph>-Eigenschaft des TextInput-Steuerelements angegeben wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorHeightOffset"><apiName>editorHeightOffset</apiName><shortdesc>
      Die Höhe des Elementeditors in Pixeln und relativ zur Größe des Elementrenderers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Höhe des Elementeditors in Pixeln und relativ zur Größe des Elementrenderers. Diese Eigenschaft kann verwendet werden, um den Editor zu veranlassen, den Elementrenderer mit einigen wenigen Pixel zu überlappen, um einen Rahmen rund um den Editor zu kompensieren.  
      <p>Das Ändern dieser Werte während der Editor angezeigt wird, hat keine Auswirkungen auf den aktuellen Editor, sondern auf den nächsten Elementrenderer, der einen Editor öffnet.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorUsesEnterKey"><apiName>editorUsesEnterKey</apiName><shortdesc>
      Ein Flag, welches anzeigt, ob der Elementeditor den Enter-Schlüssel verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, welches anzeigt, ob der Elementeditor den Enter-Schlüssel verwendet. Ist der Wert dieser Eigenschaft <codeph>true</codeph>, verwendet der Elementeditor den Enter-Schlüssel, die Liste wird für den Enter-Schlüssel nicht gesperrt und der Editor wird verschoben.
      <p>Das Ändern dieses Werts, während der Editor angezeigt wird, hat keine Auswirkungen auf den aktuellen Editor. Es beeinflusst den nächsten Elementrenderer, der einen Editor öffnet.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorWidthOffset"><apiName>editorWidthOffset</apiName><shortdesc>
      Die Breite des Elementeditors in Pixeln und relativ zur Größe des Elementrenderers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Breite des Elementeditors in Pixeln und relativ zur Größe des Elementrenderers. Diese Eigenschaft kann verwendet werden, um den Editor zu veranlassen, den Elementrenderer mit einigen wenigen Pixel zu überlappen, um einen Rahmen rund um den Editor zu kompensieren.
      <p>Das Ändern dieser Werte während der Editor angezeigt wird, hat keine Auswirkungen auf den aktuellen Editor, sondern auf den nächsten Elementrenderer, der einen Editor öffnet.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorXOffset"><apiName>editorXOffset</apiName><shortdesc>
      Die X-Position der linken oberen Ecke des Elementeditors in Pixeln und relativ zur linken oberen Ecke des Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die X-Position der linken oberen Ecke des Elementeditors in Pixeln und relativ zur linken oberen Ecke des Elements. Diese Eigenschaft kann verwendet werden, um den Editor zu veranlassen, den Elementrenderer mit einigen wenigen Pixel zu überlappen, um einen Rahmen rund um den Editor zu kompensieren.
      <p>Das Ändern dieser Werte während der Editor angezeigt wird, hat keine Auswirkungen auf den aktuellen Editor, sondern auf den nächsten Elementrenderer, der einen Editor öffnet.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorYOffset"><apiName>editorYOffset</apiName><shortdesc>
      Die Y-Position der linken oberen Ecke des Elementeditors in Pixeln und relativ zur linken oberen Ecke des Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Y-Position der linken oberen Ecke des Elementeditors in Pixeln und relativ zur linken oberen Ecke des Elements. Diese Eigenschaft kann verwendet werden, um den Editor zu veranlassen, den Elementrenderer mit einigen wenigen Pixel zu überlappen, um einen Rahmen rund um den Editor zu kompensieren.
      <p>Das Ändern dieser Werte während der Editor angezeigt wird, hat keine Auswirkungen auf den aktuellen Editor, sondern auf den nächsten Elementrenderer, der einen Editor öffnet.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:itemEditor"><apiName>itemEditor</apiName><shortdesc>
      Die Klassen-Factory des Elementeditors, die für das Steuerelement verwendet wird, wenn die „editable“-Eigenschaft auf „true“ gesetzt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IFactory</apiValueClassifier><apiDefaultValue>new ClassFactory(mx.controls.TextInput)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Klassen-Factory des Elementeditors, die für das Steuerelement verwendet wird, wenn die <codeph>editable</codeph>-Eigenschaft auf <codeph>true</codeph> gesetzt ist. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:itemEditorInstance"><apiName>itemEditorInstance</apiName><shortdesc>
      Ein Verweis auf die derzeit aktive Instanz des Elementeditors, falls vorhanden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ein Verweis auf die derzeit aktive Instanz des Elementeditors, falls vorhanden.
     
      <p>Verwenden Sie die <codeph>itemEditorInstance</codeph>-Eigenschaft, um bei der Bearbeitung eines Elements auf die Instanz des Elementeditors und den neuen Elementwert zuzugreifen. Die <codeph>itemEditorInstance</codeph>-Eigenschaft gilt nicht, solange nicht der Ereignis-Listener für das <codeph>itemEditBegin</codeph>-Ereignis ausgeführt wurde. Daher greifen Sie auch nur vom Ereignis-Listener für das <codeph>itemEditEnd</codeph>-Ereignis auf die <codeph>itemEditorInstance</codeph>-Eigenschaft zu.</p>
     
      <p>Die <codeph>itemEditor</codeph>-Eigenschaft definiert die Klasse des Elementeditors und somit auch den Datentyp für die Instanz des Elementeditors.</p>
     
      <p>Sie stellen diese Eigenschaft nicht in MXML ein.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:protected:measuringObjects"><apiName>measuringObjects</apiName><shortdesc>
      Cache der Measure-Objekte nach Factory
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Cache der Measure-Objekte nach Factory
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:rendererIsEditor"><apiName>rendererIsEditor</apiName><shortdesc>
      Legt fest, ob der Elementrenderer auch ein Elementeditor ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob der Elementrenderer auch ein Elementeditor ist. Wenn diese Eigenschaft <codeph>true</codeph> ist, ignoriert Flex die <codeph>itemEditor</codeph>-Eigenschaft.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editable:get"><apiName>editable</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Benutzer Elemente im Datenprovider bearbeiten kann oder nicht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Benutzer Elemente im Datenprovider bearbeiten kann oder nicht. Ist der Wert <codeph>true</codeph>, sind die Elementrenderer im Steuerelement bearbeitbar. Der Benutzer kann auf einen Elementrenderer klicken, um einen Editor zu öffnen.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editedItemPosition:get"><apiName>editedItemPosition</apiName><shortdesc>
      Die Indexposition der Spalte und Zeile des Elementrenderers für das Element des Datenproviders, das derzeit bearbeitet wird (falls vorhanden).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die Indexposition der Spalte und Zeile des Elementrenderers für das Element des Datenproviders, das derzeit bearbeitet wird (falls vorhanden).
     
      <p>Dieses Objekt hat zwei Felder, <codeph>columnIndex</codeph> und <codeph>rowIndex</codeph>, die auf null basierenden Spalten- und Zeilenindexpositionswerte des Elements. Bei List-Steuerelementen ist die <codeph>columnIndex</codeph>-Eigenschaft immer 0; Beispiel: <codeph>{columnIndex:0, rowIndex:3}</codeph>.</p>
     
      <p>Mit der Einstellung dieser Eigenschaft wird das Element sichtbar gemacht und das <codeph>itemEditBegin</codeph>-Ereignis ausgelöst. Dadurch wird ein Elementeditor für einen angegebenen Elementrenderer geöffnet.
      </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editedItemRenderer:get"><apiName>editedItemRenderer</apiName><shortdesc>
      Ein Verweis auf den Elementrenderer im DataGrid-Steuerelement, dessen Element derzeit bearbeitet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ein Verweis auf den Elementrenderer im DataGrid-Steuerelement, dessen Element derzeit bearbeitet wird.
     
      <p>Von einem Ereignis-Listener für die Ereignisse <codeph>itemEditBegin</codeph> und <codeph>itemEditEnd</codeph> aus können Sie den aktuellen Wert des derzeit bearbeiteten Elements mit der <codeph>editedItemRenderer.data</codeph>-Eigenschaft ermitteln.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält. Wenn ein Editor vorhanden ist, stellt er enableIME entsprechend ein.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Gibt den Modus des Eingabemethodeneditors (IME) an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den Modus des Eingabemethoden-Editors an. Mithilfe des Eingabemethodeneditors können chinesische, japanische und koreanische Schriftzeichen eingegeben werden. Flex stellt den festgelegten IME-Modus ein, wenn das Steuerelement den Fokus erhält und setzt es auf den vorherigen Wert zurück, wenn das Steuerelement den Fokus verliert.
     
     <p>Die flash.system.IMEConversionMode-Klasse definiert Konstanten für gültige Werte dieser Eigenschaft. Sie können auch <codeph>null</codeph> festlegen, um keinen IME festzulegen.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IME.xml"><linktext>flash.system.IME</linktext></link><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:LinkButton"><apiName>LinkButton</apiName><shortdesc>
  Das LinkButton-Steuerelement ist ein rahmenloses Button-Steuerelement, dessen Inhalte markiert werden, wenn der Mauszeiger darüberbewegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="highlightAlphas"/><Exclude kind="style" name="fillColors"/><Exclude kind="style" name="fillAlphas"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="baseColor"/><Exclude kind="property" name="emphasized"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Textfarbe von LinkButton beim Anklicken durch den Benutzer. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Textfarbe von LinkButton, wenn der Benutzer den Mauszeiger darüber bewegt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Hintergrundfarbe von LinkButton beim Anklicken durch den Benutzer. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Farbe von LinkButton, wenn der Benutzer den Mauszeiger darüber bewegt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:LinkButton" playerVersion="Flash9" type="Number">
<description>
  Eckradius des markierten Rechtecks um LinkButton. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:LinkButton&gt;</code> tag inherits all of the tag attributes 
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:LinkButton
    <b>Styles</b>
    cornerRadius="4""
    rollOverColor="0xEEFEE6"
    selectionColor="0xB7F39B"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das LinkButton-Steuerelement ist ein rahmenloses Button-Steuerelement, dessen Inhalte markiert werden, wenn der Mauszeiger darüberbewegt wird. Diese Eigenschaften treten oft bei HTML-Links in einer Browserseite auf. Damit das LinkButton-Steuerelement Aktionen ausführen kann, muss eine <codeph>click</codeph>-Ereignisprozedur festgelegt werden, genauso wie bei einem Button-Steuerelement.
 
  <p>Das LinkButton-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breit und hoch genug für den Text.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Nicht festgelegt</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LinkButtonExample.mxml"><swfblock conref="examples/LinkButtonExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><apiConstructor id="mx.controls:LinkButton:LinkButton"><apiName>LinkButton</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ButtonBar"><apiName>ButtonBar</apiName><shortdesc>
  Das ButtonBar-Steuerelement definiert eine Gruppe horizontaler oder vertikaler, logisch verbundener Standardschaltflächen, deren Erscheinungsbild und Navigation einander ähnlich sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Alternative owner="mx.controls:ButtonBar" replacement="spark.components.ButtonBar" since="4.0">
	</Alternative><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen untergeordneten Elementen in vertikaler Richtung.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="top,middle,bottom" inherit="no" name="verticalAlign" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Vertikale Ausrichtung aller Schaltflächen innerhalb der ButtonBar. Da einzelne Schaltflächen auf die gesamte ButtonBar ausgedehnt werden, ist dieser Stil nur sinnvoll, wenn Sie den ButtonHeight-Stil verwenden und die gemeinsame Höhe der Schaltflächen geringer als die Breite der ButtonBar ist. Mögliche Werte sind:<codeph>"top"</codeph>, <codeph>"middle"</codeph> und <codeph>"bottom"</codeph>.
 
  </description>
<default>"middle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="lastButtonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
   Ist diese nicht angegeben, wird der Standardwert der <codeph>buttonStyleName</codeph>-Stileigenschaft verwendet.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl von Pixeln zwischen untergeordneten Objekten in horizontaler Richtung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Horizontale Ausrichtung aller Schaltflächen innerhalb der ButtonBar. Da einzelne Schaltflächen auf die gesamte ButtonBar ausgedehnt werden, ist dieser Stil nur sinnvoll, wenn Sie den ButtonWidth-Stil verwenden und die gemeinsame Breite der Schaltflächen geringer als die Breite der ButtonBar ist. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"center"</codeph> und <codeph>"right"</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="firstButtonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die Stile für die erste Schaltflächen festlegt. Ist diese nicht angegeben, wird der Standardwert der <codeph>buttonStyleName</codeph>-Stileigenschaft verwendet.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="buttonWidth" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Die Breite der einzelnen Schaltflächen in Pixeln. Ist diese nicht angegeben, so wird die Standardbreite der Schaltflächen aus dem Beschriftungstext errechnet.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="buttonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die Stile für die Schaltflächen festlegt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="buttonHeight" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Die Höhe der einzelnen Schaltfläche in Pixeln. Ist diese nicht angegeben, wird die Höhe der Schaltflächen durch den Schriftartstil des Containers bestimmt. Wird diese Eigenschaft festgelegt, wird der errechnete Wert durch den angegebenen Wert außer Kraft gesetzt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ButtonBar&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:ButtonBar
    <b>Styles</b>
    buttonHeight="undefined"
    buttonStyleName="<i>Name of CSS style declaration, which specifies
    styles for the buttons</i>"
    buttonWidth="undefined"
    firstButtonStyleName="<i>The value of</i> <code>buttonStyleName</code>"
    horizontalAlign="center|left|right"
    horizontalGap="0"
    lastButtonStyleName="<i>The value of</i> <code>buttonStyleName</code>"
    verticalAlign="middle|top|bottom"
    verticalGap="0"
     
    <b>Events</b>
    itemClick="<i>No default</i>"
    &gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:ButtonBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.controls:NavBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das ButtonBar-Steuerelement definiert eine Gruppe horizontaler oder vertikaler, logisch verbundener Standardschaltflächen, deren Erscheinungsbild und Navigation einander ähnlich sind.
 
  <p>Eine Standardschaltfläche merkt sich ihren ausgewählten Status nicht. Normalerweise werden Standardschaltflächen in einer Schaltflächenleiste für das Gruppieren miteinander in Beziehung stehender Schaltflächen verwendet. Diese erhalten dadurch ein einheitliches Aussehen und Navigationsverhalten. Außerdem wird durch die Standardschaltflächen die Logik des <codeph>click</codeph>-Ereignisses an einer einzigen Stelle gesteuert. </p>
 
  <p>Das ButtonBar-Steuerelement erzeugt Button-Steuerelemente auf Basis der Werte seiner <codeph>dataProvider</codeph>-Eigenschaft. Obgleich ButtonBar eine Unterklasse von Container ist, sollten keine Methoden wie <codeph>Container.addChild()</codeph> und <codeph>Container.removeChild()</codeph> zum Hinzufügen oder Entfernen von Button-Steuerelementen verwendet werden. Verwenden Sie stattdessen Methoden wie <codeph>addItem ()</codeph> und <codeph>removeItem()</codeph>, um die <codeph>dataProvider</codeph>-Eigenschaft zu ändern. Das ButtonBar-Steuerelement fügt untergeordnete Elemente automatisch hinzu oder entfernt diese, wenn die <codeph>dataProvider</codeph>-Eigenschaft geändert wird.</p>
 
  <p>Um den Stil der Schaltflächen im ButtonBar-Steuerelement zu bestimmen, verwenden Sie die Stileigenschaften <codeph>buttonStyleName</codeph>, <codeph>firstButtonStyleName</codeph> und <codeph>lastButtonStyleName</codeph>. Versuchen Sie nicht, die Schaltflächen des ButtonBar-Steuerelements einzeln mit Stilen zu gestalten.</p>
 
  <p>Das ToggleButtonBar-Steuerelement kann zum Festlegen einer Gruppe von Schaltflächen mit Umschaltfunktion verwendet werden.</p>
 
  <p>Das ButtonBar-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
        <entry>Bevorzugte Größe</entry>
        <entry>Breit genug für alle Schaltflächen mitsamt ihren Beschriftungstexten und Symbolen, falls vorhanden, sowie Auffüllung und Trennlinien, und hoch genug für die Schaltflächenhöhe.</entry>
     </row><row>
        <entry>Regeln für die Größenänderung von Steuerelementen</entry>
        <entry>Die Größe von Steuerelementen wird nicht standardmäßig geändert. Geben Sie einen Prozentsatz an, wenn Sie möchten, dass die Größe der ButtonBar basierend auf der Größe des übergeordneten Containers geändert wird.</entry>
     </row><row>
        <entry>Auffüllung</entry>
        <entry>0 Pixel für die Oben-, Unten-, Links- und Rechts-Eigenschaften.</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ButtonBarExample.mxml"><swfblock conref="examples/ButtonBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><adobeApiEvent id="mx.controls:ButtonBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer auf eine Schaltfläche klickt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer auf eine Schaltfläche klickt. Dieses Ereignis wird nur ausgelöst, wenn sich die <codeph>dataProvider</codeph>-Eigenschaft nicht auf einen ViewStack-Container bezieht.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ButtonBar:ButtonBar"><apiName>ButtonBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Label"><apiName>Label</apiName><shortdesc>
  Das Label-Steuerelement zeigt eine einzelne Zeile nicht bearbeitbaren Texts an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="method" name="setFocus"/><Exclude kind="style" name="themeColor"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="style" name="baseColor"/><Exclude kind="property" name="tabEnabled"/><Exclude kind="property" name="mouseFocusEnabled"/><Exclude kind="property" name="focusPane"/><Exclude kind="property" name="focusEnabled"/><Alternative owner="mx.controls:Label" replacement="spark.components.Label" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Pixelzahl zwischen dem oberen Beschriftungsrand und dem oberen Textrand. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Pixelzahl zwischen dem unteren Beschriftungsrand und dem unteren Textrand. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Pixelzahl zwischen dem rechten Beschriftungsrand und dem rechten Textrand. 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Pixelzahl zwischen dem linken Beschriftungsrand und dem linken Textrand. 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:Label" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:Label" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:Label" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:Label" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:Label" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:Label" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Label&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Label
    <b>Properties</b>
    condenseWhite="true|false"
    data="null"
    htmlText=""
    listData="null"
    selectable="true|false"
    text=""
    truncateToFit="true|false"
    &nbsp;
    <b>Styles</b>
    color="0x0B333C"
    disabledColor="0xAAB3B3"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="0"
    paddingBottom="0"
    styleSheet="null"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    &nbsp;
    <b>Events</b>
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Label-Steuerelement zeigt eine einzelne Zeile nicht bearbeitbaren Texts an. Für die Erzeugung von mehrzeiligen Textblöcken mit nicht bearbeitbarem Text verwenden Sie das Text-Steuerelement.
 
  <p>Sie können den Beschriftungstext mithilfe von HTML-Tags formatieren, welche nach den CSS-Stilen des Label-Steuerelements angewendet werden. Sie können eine Zellauffüllung um alle vier Seiten des Texts veranlassen. Der Text einer Beschriftung ist standardmäßig nicht wählbar, kann aber wählbar gemacht werden.</p>
 
  <p>Wenn die Größe einer Beschriftung kleiner ist als die des enthaltenen Texts, können Sie festlegen, ob der Text gekürzt oder mithilfe eines lokalisierbaren Strings wie „...“ abgeschnitten wird. (Hinweis: Unformatierter Text kann abgeschnitten werden, was bei HTML-Text nicht möglich ist.) Wenn nicht der gesamte Text einer Beschriftung, egal ob unformatierter oder HTML-Text, sichtbar ist und Sie der Beschriftung keine QuickInfo zugewiesen haben, zeigt ein automatischer Hinweis den vollständigen unformatierten Text an, wenn sich der Mauszeiger über der Beschriftung befindet.</p>
 
  <p>Label-Steuerelemente verfügen weder über Hintergründe noch Rahmenlinien und können auch keinen Fokus erhalten.</p>
 
  <p>Das Label-Steuerelement verfügt über die folgenden Standardgrößeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breit und hoch genug für den Text.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>10.000 mal 10.000 Pixel</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LabelExample.mxml"><swfblock conref="examples/LabelExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Text"><linktext>mx.controls.Text.</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea.</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor.</linktext></link></related-links><adobeApiEvent id="mx.controls:Label_flash.events.TextEvent.LINK_link"><apiName>link</apiName><shortdesc> 
  Wird ausgelöst, wenn ein Benutzer auf einen Hyperlink in einem HTML-fähigen Textfeld klickt und die URL-Adresse mit „event:“ beginnt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.LINK</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
  Wird ausgelöst, wenn ein Benutzer auf einen Hyperlink in einem HTML-fähigen Textfeld klickt und die URL-Adresse mit <codeph>"event:"</codeph> beginnt. Der Rest der URL nach <codeph>"event:"</codeph> wird in der Texteigenschaft des <codeph>link</codeph>-Ereignisobjekts abgelegt.
 
  <p>Wenn Sie das <codeph>link</codeph>-Ereignis verarbeiten, wird der Hyperlink nicht automatisch ausgeführt. Sie müssen ihn aus der Ereignisprozedur heraus ausführen. Normalerweise verwenden Sie die <codeph>navigateToURL()</codeph>-Methode, um einen Hyperlink auszuführen. Dies ermöglicht das Modifizieren des Hyperlinks und verhindert unter Umständen sogar, dass er in Ihrer Anwendung erscheint. </p>
 
  <p>Beim Label-Steuerelement muss die <codeph>selectable</codeph>-Eigenschaft auf <codeph>true</codeph> gesetzt sein, damit das <codeph>link</codeph>-Ereignis generiert wird.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Label_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die data-Eigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Label:Label"><apiName>Label</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Label:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      Gibt ein TextLineMetrics-Objekt zurück, welches Informationen über Textposition und Abmessungen einer Textzeile im Steuerelement enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das TextLineMetrics-Objekt, welches Informationen zum Text enthält.
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>Die auf null basierende Indexposition der Zeile, für welche die Metrik abzurufen ist. Muss für das Label-Steuerelement, das nur über eine Zeile verfügt, 0 sein.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt ein TextLineMetrics-Objekt zurück, welches Informationen über Textposition und Abmessungen einer Textzeile im Steuerelement enthält. Für den Abruf der korrekten Zahl muss die Komponente zuerst validiert werden. Wenn Sie die <codeph>text</codeph>-Eigenschaft festlegen und sofort anschließend <codeph>getLineMetrics()</codeph> aufrufen, erhalten Sie eventuell einen falschen Wert. Sie sollten entweder auf die Überprüfung Ihres Aufrufs durch die Komponente warten oder <codeph>validateNow()</codeph> aufrufen. Dieses Verhalten unterscheidet sich von dem der flash.text.TextField-Klasse, welche den Wert unmittelbar aktualisiert.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiValue id="mx.controls:Label:protected:textField"><apiName>textField</apiName><shortdesc>
      Das interne UITextField stellt den Text dieser Beschriftung dar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Das interne UITextField stellt den Text dieser Beschriftung dar.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:truncateToFit"><apiName>truncateToFit</apiName><shortdesc>
      Wenn diese Eigenschaft auf „true“ gesetzt ist und die Größe des Label-Steuerelements kleiner als der enthaltene Text ist, wird der Text mithilfe eines lokalisierbaren Strings wie beispielsweise „...“ abgeschnitten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn diese Eigenschaft auf <codeph>true</codeph> gesetzt ist und die Größe des Label-Steuerelements kleiner als der enthaltene Text ist, wird der Text mithilfe eines lokalisierbaren Strings wie beispielsweise <codeph>"..."</codeph> abgeschnitten. Ist diese Eigenschaft <codeph>false</codeph>, wird zu langer Text gekürzt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      Gibt an, ob zusätzliche Leerräume (beispielsweise Leerzeichen oder Zeilenumbrüche) in einem Label-Steuerelement mit HTML-Text entfernt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob zusätzliche Leerräume (beispielsweise Leerzeichen oder Zeilenumbrüche) in einem Label-Steuerelement mit HTML-Text entfernt werden sollen.
     
      <p>Die <codeph>condenseWhite</codeph>-Eigenschaft betrifft nur Text mit der <codeph>htmlText</codeph>-Eigenschaft, nicht mit der <codeph>text</codeph>-Eigenschaft. Wenn Sie Text mit der <codeph>text</codeph>-Eigenschaft festlegen, wird <codeph>condenseWhite</codeph> ignoriert.</p>
     
      <p>Wenn Sie die <codeph>condenseWhite</codeph>-Eigenschaft auf <codeph>true</codeph> setzen, müssen Sie HTML-Standardbefehle verwenden, beispielsweise <codeph>&lt;br></codeph> und <codeph>&lt;p></codeph>, um im Textfeld Zeilenumbrüche zu setzen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:data:get"><apiName>data</apiName><shortdesc>
      Erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Wenn Sie das Steuerelement als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwenden, schreibt Flex automatisch den aktuellen Wert des Elements in die <codeph>text</codeph>-Eigenschaft dieses Steuerelements.</p>
     
      <p>Sie stellen diese Eigenschaft nicht in MXML ein.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer.</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Die Modul-Factory, die den Schriftartkontext für diese Komponente bereitstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Die Modul-Factory, welche den Schriftartkontext für diese Komponente bereitstellt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Gibt den vom Label-Steuerelement angezeigten Text an, einschließlich HTML-Markup, mit dem der Stil des Texts festgelegt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den vom Label-Steuerelement angezeigten Text an, einschließlich HTML-Markup, mit dem der Stil des Texts festgelegt wird. Wenn Sie in dieser Eigenschaft HTML-Text festlegen, können Sie einige der HTML-Tags verwenden, die vom TextField-Steuerelement unterstützt werden.
     
      <p>Wenn Sie diese Eigenschaft einstellen, wird das HTML-Markup angewendet, nachdem die CSS-Stile für die TextArea-Instanz angewendet wurden. Wenn Sie diese Eigenschaft abrufen, enthält das HTML-Markup bereits die CSS-Stile.</p>
      
      <p>Beispiel: Wenn Sie einen String wie folgt gestalten, <codeph>"This is an example of &lt;b>bold&lt;/b> markup"</codeph>, erscheint der Text „This is an example of <b>bold</b> markup“ in der Beschriftung mit den normalen CSS-Stilen. Außerdem erscheint das Wort „bold“ fett formatiert, weil das <codeph>&lt;b></codeph>-Markup verwendet wurde.</p>
     
      <p>HTML-Markups verwenden Zeichen wie z. B. „&lt;“ und „>“, welche eine besondere Bedeutung in XML (und somit auch in MXML) besitzen. Deshalb wird ein Code wie der folgende nicht kompiliert:</p>
      
      <pre>
      &lt;mx:Label htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>Es gibt drei Möglichkeiten dieses Problem zu umgehen.</p>
      
      <ul>
      
      <li>
      
      <p>Legen Sie die <codeph>htmlText</codeph>-Eigenschaft einer ActionScript-Methode fest, die als <codeph>initialize</codeph>-Prozedur aufgerufen wird:</p>
      
      <pre>
      &lt;mx:Label id="myLabel" initialize="myLabel_initialize()"/>
      </pre>
      
      <p>dabei liegt die <codeph>myLabel_initialize</codeph>-Methode in einem CDATA-Abschnitt des Skripts:</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myLabel_initialize():void {
          myLabel.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>Dies ist die einfachste Möglichkeit, da das HTML-Markup leicht lesbar bleibt. Beachten Sie, dass Sie der Beschriftung eine <codeph>id</codeph> zuweisen müssen, um in der <codeph>initialize</codeph>-Prozedur darauf verweisen zu können.</p>
      
      </li>
      
      <li>
      
      <p>Legen Sie die <codeph>htmlText</codeph>-Eigenschaft fest, indem Sie ein untergeordnetes Tag bei einem CDATA-Abschnitt verwenden. Ein CDATA-Abschnitt in XML enthält Zeichendaten, bei denen „&lt;“ und „>“ keine besondere Bedeutung erhalten.</p>
      
      <pre>
      &lt;mx:Label>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:Label/>
      </pre>
      
      <p>Sie müssen die <codeph>htmlText</codeph>-Eigenschaft als untergeordnetes Tag, nicht als Attribut des <codeph>&lt;mx:Label></codeph>-Tags schreiben, da XML CDATA für Attributwerte nicht zulässt. Beachten Sie, dass das Markup zwar lesbar ist, der CDATA-Abschnitt diesen Ansatz jedoch komplizierter macht.</p>
      
      </li>
      
      <li>
      
      <p>Verwenden Sie stattdessen ein <codeph>hmtlText</codeph>-Attribut, in welchem die HTML-Markupzeichen „&lt;“ und „>“ im Attributwert anstatt der XML-„Entitäten“ <codeph>&amp;lt;</codeph> und <codeph>&amp;gt;</codeph> geschrieben werden:</p>
      
      <pre>
      &lt;mx:Label htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      Adobe rät von diesen Ansatz ab, da das HTML-Markup nahezu unlesbar wird.
      
      </li>
      
      </ul>
      
      <p>Wenn die <codeph>condenseWhite</codeph>-Eigenschaft <codeph>true</codeph> ist, wenn Sie die <codeph>htmlText</codeph>-Eigenschaft einstellen, werden mehrere aufeinanderfolgende Leerzeichen zusammengezogen, wie dies in HTML-basierten Browsern üblich ist. Drei Leerzeichen werden beispielsweise auf ein Leerzeichen reduziert. Der Standardwert für <codeph>condenseWhite</codeph> ist <codeph>false</codeph>, deshalb müssen Sie <codeph>condenseWhite</codeph> auf <codeph>true</codeph> setzen, um aufeinanderfolgende Leerzeichen zu reduzieren.</p>
      
      <p>Wenn Sie die <codeph>htmlText</codeph>-Eigenschaft kurz nach ihrer Einstellung abrufen, erhalten Sie den gleichen String, den Sie eingegeben haben. Wenn der LayoutManager ausgeführt wird, ändert sich der Wert jedoch, sodass er zusätzliche Markups mit den CSS-Stilen enthält.</p>
      
      <p>Das Einstellen der <codeph>htmlText</codeph>-Eigenschaft beeinflusst die <codeph>text</codeph>-Eigenschaft in mehrfacher Hinsicht. Wenn Sie die <codeph>text</codeph>-Eigenschaft kurz nach dem Einstellen der <codeph>htmlText</codeph>-Eigenschaft abrufen, erhalten Sie <codeph>null</codeph>, was anzeigt, dass der <codeph>text</codeph>, der dem neuen <codeph>htmlText</codeph> entspricht, noch nicht ermittelt wurde. Wenn der LayoutManager ausgeführt wird, ändert sich jedoch der <codeph>text</codeph>-Eigenschaftswert in einen <codeph>htmlText</codeph>-String ohne HTML-Markups. Das heißt, der Wert besteht aus den Zeichen, die in der Beschriftung angezeigt werden.</p>
       
      <p>Im umgekehrten Fall gilt: Wenn Sie die <codeph>text</codeph>-Eigenschaft festlegen, verliert ein früher festgelegter <codeph>htmlText</codeph> seine Bedeutung. Wenn Sie die <codeph>htmltext</codeph>-Eigenschaft kurz nach dem Einstellen der <codeph>text</codeph>-Eigenschaft abrufen, erhalten Sie <codeph>null</codeph>, was anzeigt, dass der <codeph>htmltext</codeph>, der dem neuen <codeph>text</codeph> entspricht, noch nicht ermittelt wurde. Wenn der LayoutManager ausgeführt wird, ändert sich jedoch der <codeph>htmlText</codeph>-Eigenschaftswert in den neuen Text und das HTML-Markup für die CSS-Stile.</p>
     
      <p>Um den LayoutManager sofort zu starten, können Sie die <codeph>validateNow()</codeph>-Methode für die Beschriftung aufrufen. Beispiel: Sie stellen <codeph>htmlText</codeph> ein, rufen die <codeph>validateNow()</codeph>-Methode auf und rufen sofort den entsprechenden <codeph>text</codeph> ab, der kein HTML-Markup enthält.</p>
      
      <p>Wenn Sie sowohl die <codeph>text</codeph>- als auch die <codeph>htmlText</codeph>-Eigenschaft in ActionScript einstellen, wird die zuletzt eingestellte Eigenschaft wirksam. Sie sollten jedoch nicht beide in MXML einstellen, weil MXML nicht garantiert, dass die Eigenschaften einer Instanz in einer bestimmten Reihenfolge gesetzt werden.</p>
      
      <p>Das Einstellen der <codeph>text</codeph>- oder <codeph>htmlText</codeph>-Eigenschaft innerhalb einer Schleife ist ein schneller Vorgang, da das TextField, welches den Text darstellt, erst aktualisiert wird, wenn der LayoutManager ausgeführt wird.</p>
     
      <p>Wenn Sie versuchen, diese Eigenschaft auf <codeph>null</codeph> zu setzen, wird sie stattdessen auf einen leeren String gesetzt. Die Eigenschaft besitzt vorübergehend den Wert <codeph>null</codeph>. Dieser zeigt an, dass der <codeph>text</codeph> kürzlich eingestellt und ein entsprechender <codeph>htmlText</codeph> noch nicht ermittelt wurde.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die listData-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement. Die Komponente kann die <codeph>listData</codeph>-Eigenschaft verwenden, um die <codeph>data</codeph>-Eigenschaft des Elementrenderers oder des Elementeditors, in dem Elemente abgelegt werden können, zu initialisieren.
     
      <p>Sie stellen diese Eigenschaften nicht in MXML oder ActionScript ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:selectable:get"><apiName>selectable</apiName><shortdesc>
      Gibt an, ob der Text ausgewählt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob der Text ausgewählt werden kann. Wenn der Text auswählbar ist, können Sie ihn aus dem Steuerelement kopieren.
     
      <p>Wenn ein <codeph>link</codeph>-Ereignis im Label-Steuerelement festgelegt ist, muss die <codeph>selectable</codeph>-Eigenschaft auf <codeph>true</codeph> gesetzt sein, damit das <codeph>link</codeph>-Ereignis ausgeführt wird.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
     Ein flash.text.StyleSheet-Objekt, welches Rendervorgänge für den Text des Label-Steuerelements durchführen kann.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:StyleSheet"/><apiDefaultValue>null
    </apiDefaultValue></apiValueDef><apiDesc>
     Ein flash.text.StyleSheet-Objekt, welches Rendervorgänge für den Text des Label-Steuerelements durchführen kann. Verwenden Sie diese Eigenschaft zur detaillierten Kontrolle von HTML-Stilen des Texts. Weitere Informationen finden Sie in der Dokumentation der flash.text.StyleSheet-Klasse.
    
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.StyleSheet.xml"><linktext>flash.text.StyleSheet</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:text:get"><apiName>text</apiName><shortdesc>
      Legt den von diesem Steuerelement angezeigten unformatierten Text fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3907
     
     </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>Ruft den Label-Inhalt ab oder legt ihn fest.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Legt den von diesem Steuerelement angezeigten unformatierten Text fest. Das Aussehen wird von den CSS-Stilen dieses Label-Steuerelements bestimmt.
     
      <p>Wenn Sie diese Eigenschaft verwenden, haben Zeichen, die im String wie HTML-Markups aussehen, keine besondere Bedeutung und erscheinen wie eingegeben.</p>
     
      <p>Verwenden Sie stattdessen die <codeph>htmlText</codeph>-Eigenschaft, um mit HTML-Tags formatierten Text anzuzeigen. Mit der <codeph>htmlText</codeph>-Eigenschaft ersetzt HTML jeglichen Text, den Sie mit dieser Eigenschaft festlegen, und die <codeph>text</codeph>-Eigenschaft gibt eine Nur-Text-Version des HTML-Texts ohne HTML-Tags zurück.</p>
     
      <p>Um die Sonderzeichen spitze Klammer links (&lt;), spitze Klammer rechts (>) oder Und-Zeichen innerhalb des Texts verwenden zu können, schließen Sie den Text in CDATA-Tags ein. Sie können alternativ auch HTML-Zeichenentitäten für Sonderzeichen verwenden, z. B. <codeph>&amp;lt;</codeph>.</p>
     
      <p>Wenn die Beschriftung breiter ist als das Label-Steuerelement, wird sie gekürzt und endet mit einer Ellipse (...). Die vollständige Beschriftung erscheint als QuickInfo, sobald der Benutzer den Mauszeiger über das Label-Steuerelement bewegt. Wenn Sie mit der <codeph>tooltip</codeph>-Eigenschaft zusätzlich eine QuickInfo festgelegt haben, wird diese anstatt des Beschriftungstexts angezeigt.</p>
     
      <p>Wenn Sie versuchen, diese Eigenschaft auf <codeph>null</codeph> zu setzen, wird sie stattdessen auf einen leeren String gesetzt. Die <codeph>text</codeph>-Eigenschaft kann vorübergehend den Wert <codeph>null</codeph> aufweisen. Dies zeigt an, dass <codeph>htmlText</codeph> kürzlich gesetzt und der entsprechende <codeph>text</codeph>-Wert noch nicht ermittelt wurde.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      Die Höhe des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Höhe des Texts.
     
      <p>Der Wert der <codeph>textHeight</codeph>-Eigenschaft ist erst korrekt, nachdem die Komponente geprüft wurde. Wenn Sie <codeph>text</codeph> setzen und unmittelbar danach <codeph>textHeight</codeph>abfragen, erhalten Sie möglicherweise einen falschen Wert. Sie sollten warten, bis die Komponente validiert wurde oder die <codeph>validateNow()</codeph>-Methode aufrufen, bevor Sie den Wert abrufen. Dieses Verhalten unterscheidet sich von dem des flash.text.TextField-Steuerelements, welches den Wert unmittelbar aktualisiert.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      Die Breite des Texts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Breite des Texts.
     
      <p>Der Wert der <codeph>textWidth</codeph>-Eigenschaft ist erst korrekt, nachdem die Komponente überprüft wurde. Wenn Sie <codeph>text</codeph> setzen und unmittelbar danach <codeph>textWidth</codeph>abfragen, erhalten Sie möglicherweise einen falschen Wert. Sie sollten warten, bis die Komponente validiert wurde oder die <codeph>validateNow()</codeph>-Methode aufrufen, bevor Sie den Wert abrufen. Dieses Verhalten unterscheidet sich von dem des flash.text.TextField-Steuerelements, welches den Wert unmittelbar aktualisiert.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:TabBar"><apiName>TabBar</apiName><shortdesc>
  Mithilfe des TabBar-Steuerelements können Sie horizontale oder vertikale Gruppen von Registerkartennavigationselementen erstellen, indem Sie die mit den einzelnen Registerkarten verknüpften Beschriftungen und Daten festlegen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="lastButtonStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="firstButtonStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderVisible"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="borderAlpha"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen untergeordneten Registernavigationselementen in vertikaler Richtung.
 
  </description>
<default>-1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="top,middle,bottom" inherit="no" name="verticalAlign" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
 Vertikale Ausrichtung aller Register innerhalb der TabBar. Da einzelne Schaltflächen auf die gesamte TabBar ausgedehnt werden, ist dieser Stil nur sinnvoll, wenn Sie den tabHeight-Stil verwenden und die gemeinsame Höhe der Register geringer als die Höhe der TabBar ist. Mögliche Werte sind:<codeph>"top"</codeph>, <codeph>"middle"</codeph> und <codeph>"bottom"</codeph>.
 
 </description>
<default>"middle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabWidth" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Breite des Registernavigationselements in Pixeln. Wenn nicht festgelegt, wird die standardmäßige Registerbreite aus dem Beschriftungstext errechnet.
 
  </description>
<default>undefined 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabHeight" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Höhe der einzelnen Registernavigationselemente in Pixeln. Ist diese <codeph>undefined </codeph>, wird die Höhe der Schaltflächen durch den Schriftartstil des Containers bestimmt. Wird diese Eigenschaft festgelegt, wird der errechnete Wert durch den angegebenen Wert außer Kraft gesetzt.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="tabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die für die Registernavigationselemente zu verwendenden Stile festlegt.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedTabTextStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die für den Text des ausgewählten Registernavigationselement zu verwendenden Stile festlegt. 
 
  </description>
<default>"activeTabStyle" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="lastTabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die für das letzte Registernavigationselement zu verwendenden Stile festlegt. 
  
  </description>
<default>"tabStyleName" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen Registernavigationselementen in horizontaler Richtung.
 
  </description>
<default>-1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
 Horizontale Ausrichtung aller Register innerhalb der TabBar. Da einzelne Schaltflächen auf die gesamte TabBar ausgedehnt werden, ist dieser Stil nur sinnvoll, wenn Sie den tabWidth-Stil verwenden und die gemeinsame Breite der Register geringer als die Breite der TabBar ist. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"center"</codeph> und <codeph>"right"</codeph>.
 
 </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="firstTabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die für das erste Registernavigationselement zu verwendenden Stile festlegt. 
  
  </description>
<default>"tabStyleName"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TabBar&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:TabBar
    <b>Styles</b>
    firstTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    horizontalAlign="left|center|right"
    horizontalGap="-1"
    lastTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    selectedTabTextStyleName="activeTabStyle"
    tabHeight="undefined"
    tabStyleName="Tab"
    tabWidth="undefined"
    verticalAlign="top|middle|bottom"
    verticalGap="-1"
 
    <b>Events</b>
    itemClick="<i>No default</i>"
    &gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:TabBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ToggleButtonBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des TabBar-Steuerelements können Sie horizontale oder vertikale Gruppen von Registerkartennavigationselementen erstellen, indem Sie die mit den einzelnen Registerkarten verknüpften Beschriftungen und Daten festlegen. Verwenden Sie das TabBar-Steuerelement anstatt des TabNavigator-Containers, um Register zu erstellen, welche standardmäßig nicht über mehrere Ansichten verfügen.
 
  <p>Beim TabBar-Steuerelement werden die Register direkt durch die Daten bestimmt, sodass die Ansicht(en) auf jeden Fall geändert werden können.</p>
 
  <p>Das TabBar-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Bevorzugte Größe</entry>
           <entry>Breite: breit genug für den Beschriftungstext zuzüglich Auffüllung; Höhe: hoch genug für den Beschriftungstext. Die Standardhöhe der Register wird durch die Schriftart, Stile und Skin des Steuerelements bestimmt. Wenn mithilfe der tabHeight-Eigenschaft die Höhe ausdrücklich festgelegt wird, setzt dieser Wert den Standardwert außer Kraft.</entry>
        </row><row>
           <entry>Regeln für die Größenänderung von Steuerelementen</entry>
           <entry>Die Größe von TabBar-Steuerelementen wird nicht standardmäßig geändert. Geben Sie einen Prozentsatz an, wenn Sie möchten, dass die Größe der TabBar basierend auf der Größe des übergeordneten Containers geändert wird.</entry>
        </row><row>
           <entry>Auffüllung</entry>
           <entry>0 Pixel für die Links- und Rechts-Eigenschaften.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TabBarExample.mxml"><swfblock conref="examples/TabBarExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:TabBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn ein Registernavigationselement ausgewählt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Registernavigationselement ausgewählt wird. Dieses Ereignis wird nur übermittelt, wenn der Datenprovider kein ViewStack-Container ist.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TabBar:TabBar"><apiName>TabBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:RadioButton"><apiName>RadioButton</apiName><shortdesc>
  Das RadioButton-Steuerelement ermöglicht es dem Benutzer, eine Möglichkeit innerhalb einer Reihe sich gegenseitig ausschließender Möglichkeiten zu wählen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="toggle"/><Exclude kind="property" name="emphasized"/><Alternative owner="mx.controls:RadioButton" replacement="spark.components.RadioButton" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:RadioButton" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Die Farbe eines beliebigen Symbols einer Komponente. Beispiele sind etwa das Häkchen eines Kontrollkästchens oder der Pfeil auf der Schaltfläche einer Bildlaufleiste.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:RadioButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:RadioButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:RadioButton&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:RadioButton
    <strong>Properties</strong>
    groupName=""
    labelPlacement="right|left|top|bottom"
  
    <strong>Styles</strong>
    disabledIconColor="0x999999"
    iconColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerGroup</apiBaseInterface><apiBaseInterface>mx.core:IToggleButton</apiBaseInterface><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das RadioButton-Steuerelement ermöglicht es dem Benutzer, eine Möglichkeit innerhalb einer Reihe sich gegenseitig ausschließender Möglichkeiten zu wählen. Eine RadioButton-Gruppe besteht aus zwei oder mehr RadioButton-Steuerelementen mit derselben <codeph>groupName</codeph>-Eigenschaft. Das Gruppieren von RadioButton-Instanzen in einer RadioButtonGroup ist optional. In einer Gruppe können Sie beispielsweise eine einzige Ereignisprozedur auf einer Gruppe von Schaltflächen, anstatt auf jeder einzelnen Schaltfläche festlegen. Die RadioButton-Gruppe kann auf eine durch das <codeph>&lt;mx:RadioButtonGroup></codeph>-Tag erstellte Gruppe verweisen. Benutzer können nur ein Mitglied aus der Gruppe wählen. Durch Auswählen eines nicht ausgewählten Mitglieds wird das aktuell ausgewählte RadioButton-Steuerelement in der Gruppe deaktiviert. 
 
  <p>Das RadioButton-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breit genug für die Beschriftung des Steuerelements.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Nicht festgelegt</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="RadioButtonExample.mxml"><swfblock conref="examples/RadioButtonExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#RadioButtonGroup"><linktext>mx.controls.RadioButtonGroup</linktext></link></related-links><apiConstructor id="mx.controls:RadioButton:RadioButton"><apiName>RadioButton</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:RadioButton:group:get"><apiName>group</apiName><shortdesc>
      Das RadioButtonGroup-Objekt, zu dem dieses RadioButton-Steuerelement gehört.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:RadioButtonGroup</apiValueClassifier><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Das RadioButtonGroup-Objekt, zu dem dieses RadioButton-Steuerelement gehört.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:groupName:get"><apiName>groupName</apiName><shortdesc>
      Legt den Namen der Gruppe fest, zu dem das RadioButton-Steuerelement gehört, oder den Wert der ID-Eigenschaft eines RadioButtonGroup-Steuerelements, wenn das RadioButton-Steuerelement Teil einer durch ein RadioButtonGroup-Steuerelement festgelegten Gruppe ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiException><apiDesc>Erzeugt einen ArgumentError, wenn Sie Flex 4 oder eine neuere Version verwenden, und der groupName startet mit dem String „_fx_“. 
      
      </apiDesc><apiItemName>ArgumentError</apiItemName><apiOperationClassifier>ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>"undefined"
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt den Namen der Gruppe fest, zu dem das RadioButton-Steuerelement gehört, oder den Wert der <codeph>id</codeph>-Eigenschaft eines RadioButtonGroup-Steuerelements, wenn das RadioButton-Steuerelement Teil einer durch ein RadioButtonGroup-Steuerelement festgelegten Gruppe ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Position der Beschriftung in Bezug zum RadioButton-Symbol</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ButtonLabelPlacement.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Position der Beschriftung in Bezug zum RadioButton-Symbol Gültige Werte in MXML sind <codeph>"right"</codeph>, <codeph>"left"</codeph>, <codeph>"bottom"</codeph> und <codeph>"top"</codeph>.
     
      <p>In ActionScript können Sie die folgenden Konstanten verwenden, um diese Eigenschaft festzulegen: <codeph>ButtonLabelPlacement.RIGHT</codeph>, <codeph>ButtonLabelPlacement.LEFT</codeph>, <codeph>ButtonLabelPlacement.BOTTOM</codeph> und <codeph>ButtonLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:value:get"><apiName>value</apiName><shortdesc>
      Optionaler benutzerdefinierter Wert, der mit einem RadioButton-Steuerelement verknüpft ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Optionaler benutzerdefinierter Wert, der mit einem RadioButton-Steuerelement verknüpft ist.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HorizontalList"><apiName>HorizontalList</apiName><shortdesc>
  Das HorizontalList-Steuerelement zeigt eine horizontale Elementliste an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="variableRowHeight"/><Exclude kind="property" name="maxRows"/><Exclude kind="property" name="maxColumns"/><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HorizontalList" replacement="spark.components.List" since="4.0">
<description>
  Die layoutspezifischen List-Komponenten in Flex 3 wurden durch eine allgemeinere List-Komponente mit einem generischen Layout ersetzt. Um ein ähnliches Verhalten von der neuen List-Komponente zu erhalten, setzen Sie die <codeph>layout</codeph>-Eigenschaft auf <codeph>HorizontalLayout</codeph>.
 </description>
	</Alternative><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:HorizontalList&gt;</code> tag inherits all of the 
  tag attributes of its superclass and it adds no new tag attributes.</p>
 
  <pre>
  &lt;mx:HorizontalList/&gt
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:TileBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das HorizontalList-Steuerelement zeigt eine horizontale Elementliste an. Wenn mehr Elemente vorhanden sind, als gleichzeitig angezeigt werden können, kann es eine horizontale Bildlaufleiste anzeigen, sodass auf alle Listenelemente zugegriffen werden kann.
 
  <p>Das HorizontalList-Steuerelement verfügt über die folgenden Standardgrößeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Vier Spalten, deren Größe durch die Zellenabmessungen bestimmt wird.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>5000 x 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="HorizontalListExample.mxml"><swfblock conref="examples/HorizontalListExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:HorizontalList:HorizontalList"><apiName>HorizontalList</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ToggleButtonBar"><apiName>ToggleButtonBar</apiName><shortdesc>
  Das ToggleButtonBar-Steuerelement legt eine horizontal oder vertikal ausgerichtete Gruppe von Schaltflächen fest, die den aktivierten oder deaktivierten Status beibehalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Alternative owner="mx.controls:ToggleButtonBar" replacement="spark.components.ButtonBar" since="4.0">
	</Alternative><styles><style inherit="no" name="selectedButtonTextStyleName" owner="mx.controls:ToggleButtonBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die für den Text der ausgewählten Schaltfläche zu verwendenden Stil festlegt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ToggleButtonBar&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ToggleButtonBar
    <b>Properties</b>
    selectedIndex="0"
    toggleOnClick="false|true"
 
    <b>Styles</b>
    selectedButtonTextStyleName="<i>Name of CSS style declaration that specifies styles for the text of the selected button.</i>"&gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:ToggleButtonBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ButtonBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das ToggleButtonBar-Steuerelement legt eine horizontal oder vertikal ausgerichtete Gruppe von Schaltflächen fest, die den aktivierten oder deaktivierten Status beibehalten. Nur eine Schaltfläche im ToggleButtonBar-Steuerelement kann aktiviert sein. Das bedeutet, dass eine im ToggleButtonBar-Steuerelement ausgewählte Schaltfläche so lange den aktivierten Status beibehält, bis eine andere Schaltfläche ausgewählt wird.
 
  <p>Wenn Sie die <codeph>toggleOnClick</codeph>-Eigenschaft des ToggleButtonBar-Containers auf <codeph>true</codeph> setzen, wird eine aktivierte Schaltfläche durch erneutes auswählen deaktiviert. Standardmäßig ist die <codeph>toggleOnClick</codeph>-Eigenschaft auf <codeph>false</codeph> gesetzt.</p>
 
  <p>Das ToggleButtonBar-Steuerelement kann zum Festlegen einer Gruppe von Standardschaltflächen verwendet werden.</p>
 
  <p>Üblicherweise wird eine Schaltfläche mit Umschaltfunktion für die Beibehaltung der Auswahlmöglichkeit innerhalb einer Gruppe von Optionen verwendet, beispielsweise für das Umschalten zwischen Ansichten in einem ViewStack-Container.</p>
 
  <p>Das ToggleButtonBar-Steuerelement erzeugt Button-Steuerelemente auf Basis der Werte seiner <codeph>dataProvider</codeph>-Eigenschaft. Obgleich ToggleButtonBar eine Unterklasse von Container ist, sollten keine Methoden wie <codeph>Container.addChild()</codeph> und <codeph>Container.removeChild()</codeph> zum Hinzufügen oder Entfernen von Button-Steuerelementen verwendet werden. Verwenden Sie stattdessen Methoden wie <codeph>addItem ()</codeph> und <codeph>removeItem()</codeph>, um die <codeph>dataProvider</codeph>-Eigenschaft zu ändern. Das ToggleButtonBar-Steuerelement fügt untergeordnete Elemente automatisch hinzu oder entfernt diese, wenn die <codeph>dataProvider</codeph>-Eigenschaft geändert wird.</p>
 
  <p>Um den Stil der Schaltflächen im ToggleButtonBar-Steuerelement zu bestimmen, verwenden Sie die Stileigenschaften <codeph>buttonStyleName</codeph>, <codeph>firstButtonStyleName</codeph> und <codeph>lastButtonStyleName</codeph>. Versuchen Sie nicht, die Schaltflächen des ToggleButtonBar-Steuerelements einzeln mit Stilen zu gestalten.</p>
 
  <p>Das ToggleButtonBar-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
  <adobetable class="innertable">
     
     
     
      
    
  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
        <entry>Bevorzugte Größe</entry>
        <entry>Breit genug für alle Schaltflächen mitsamt ihren Beschriftungstexten und Symbolen, falls vorhanden, sowie Auffüllung und Trennlinien, und hoch genug für die Schaltflächenhöhe.</entry>
     </row><row>
        <entry>Regeln für die Größenänderung von Steuerelementen</entry>
        <entry>Die Größe von Steuerelementen wird nicht standardmäßig geändert. Geben Sie einen Prozentsatz an, wenn Sie möchten, dass die Größe der ToggleButtonBar basierend auf der Größe des übergeordneten Containers geändert wird.</entry>
     </row><row>
        <entry>selectedIndex</entry>
        <entry>Bestimmt, welche Schaltfläche bei der Erstellung des Steuerelements aktiviert ist. Der Standardwert 0 aktiviert die am weitesten links befindliche Schaltfläche in der Leiste. Durch Setzen der selectedIndex-Eigenschaft auf -1 werden alle Schaltflächen in der Leiste deaktiviert.</entry>
     </row><row>
        <entry>Auffüllung</entry>
        <entry>0 Pixel für die Oben-, Unten-, Links- und Rechts-Eigenschaften.</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ToggleButtonBarExample.mxml"><swfblock conref="examples/ToggleButtonBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><apiConstructor id="mx.controls:ToggleButtonBar:ToggleButtonBar"><apiName>ToggleButtonBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:ToggleButtonBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Indexposition der ausgewählten Schaltfläche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Indexposition der ausgewählten Schaltfläche. Indexpositionen liegen im Bereich von 0, 1, 2, ..., n - 1, wobei <i>n</i> der Anzahl der Schaltflächen entspricht.
     
      <p>Der Standardwert ist 0. Beim Wert -1 werden alle Schaltflächen auf der Leiste deaktiviert.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToggleButtonBar:toggleOnClick:get"><apiName>toggleOnClick</apiName><shortdesc>
      Legt fest, ob die derzeit ausgewählte Schaltfläche durch Benutzer ausgewählt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob die derzeit ausgewählte Schaltfläche durch Benutzer ausgewählt werden kann. Standardmäßig wird die aktuell ausgewählte Schaltfläche nur dann deaktiviert, wenn eine andere Schaltfläche in der Gruppe ausgewählt wird. Durch Setzen dieser Eigenschaft auf <codeph>true</codeph> kann die Auswahl durch den Benutzer aufgehoben werden. Wird eine ausgewählte Schaltfläche deaktiviert , so wird die <codeph>selectedIndex</codeph>-Eigenschaft auf <codeph>-1</codeph> gesetzt.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:PopUpButton"><apiName>PopUpButton</apiName><shortdesc> 
  Mithilfe des PopUpButton-Steuerelements wird dem Button-Steuerelement eine flexible Popupsteuerelementschnittstelle hinzugefügt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="selectedUpSkin"/><Exclude kind="style" name="selectedUpIcon"/><Exclude kind="style" name="selectedOverSkin"/><Exclude kind="style" name="selectedOverIcon"/><Exclude kind="style" name="selectedDownSkin"/><Exclude kind="style" name="selectedDownIcon"/><Exclude kind="style" name="selectedDisabledSkin"/><Exclude kind="style" name="selectedDisabledIcon"/><Exclude kind="property" name="toggle"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:PopUpButton" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Die Farbe eines beliebigen Symbols einer Komponente. Beispiele sind etwa das Häkchen eines Kontrollkästchens oder der Pfeil auf der Schaltfläche einer Bildlaufleiste.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Standard-Stateful-Skinklasse des Steuerelements. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpOverSkin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Skinklassen für den popUpOver-Status (über arrowButton) von Hintergrund und Rahmen.
  </description>
<default>mx.skins.halo.PopUpButtonSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpIcon" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Das Symbol, das für die rechte Schaltfläche von PopUpButton verwendet wird. Unterstützte Klassen sind mx.skins.halo.PopUpIcon und mx.skins.halo.PopUpMenuIcon.
  </description>
<default>mx.skins.halo.PopUpIcon
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="popUpGap" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Pixelzahl, die vertikal zwischen PopUpButton und der festgelegten Popup-UIComponent eingefügt wird.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpDownSkin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Skinklasse für den popUpDown-Status (wenn sich arrowButton im down-Status befindet) von Hintergrund und Rahmen.
  </description>
<default>mx.skins.halo.PopUpButtonSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpStyleName" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="String">
<description>
  Der Name der CSS-Stildeklaration, die vom Steuerelement verwendet wird. Dieser Stil erlaubt es Ihnen, das Aussehen des UIComponent-Objekts, das von diesem Steuerelement als Popup angezeigt wird, zu steuern. 
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Function">
<description>
  Beschleunigungsfunktion zur Steuerung des Tweens beim Öffnen von Komponenten.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Länge eines Übergangs zu Beginn in Millisekunden.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="icon" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Die Standardsymbolklasse der Hauptschaltfläche.
 
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Function">
<description>
  Beschleunigungsfunktion zur Steuerung des Tweens beim Schließen von Komponenten.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Länge eines Übergangs am Ende in Millisekunden.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="arrowButtonWidth" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Pixelzahl zwischen der Trennlinie und der rechten Komponentenkante.
  
  </description>
<default>18
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:PopUpButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:PopUpButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:PopUpButton&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:PopUpButton
    <strong>Properties</strong> 
    openAlways="false|true
    popUp="No default"
  
    <strong>Styles</strong>
    arrowButtonWidth="16"
    closeDuration="250"
    closeEasingFunction="No default"
    disabledIconColor="0x999999"
    iconColor="0x111111"
    openDuration="250"
    openEasingFunction="No default"
    popUpDownSkin="popUpDownSkin"
    popUpGap="0"
    popUpIcon="PopUpIcon"
    popUpOverSkin="popUpOverSkin"
  
    <strong>Events</strong>
    close="No default"
    open="No default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc> 
  Mithilfe des PopUpButton-Steuerelements wird dem Button-Steuerelement eine flexible Popupsteuerelementschnittstelle hinzugefügt. Es enthält eine Hauptschaltfläche und ein zweite Schaltfläche, die sogenannte Popupschaltfläche, die in einem Popupfenster UIComponent-Objekte anzeigt, wenn der Benutzer auf diese Schaltfläche klickt. 
 
  <p>Das PopUpButton-Steuerelement kann mit einem Beschriftungstext, einem Symbol oder beidem versehen sein. Durch Klicken auf den Hauptteil des PopUpsteuerelements wird ein <codeph>click</codeph>-Ereignis ausgelöst.</p>
 
  <p>Das PopUpButton-Steuerelement wird häufig verwendet, um ein List- oder ein Menu-Steuerelement zu öffnen, das die Funktion und Beschriftung der Hauptschaltfläche ändert.</p>
 
  <p>Das PopUpButton-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breit genug für die Beschriftung und das Symbol auf der Hauptschaltfläche und das Symbol auf der Popupschaltfläche.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Nicht festgelegt</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="PopUpButtonExample.mxml"><swfblock conref="examples/PopUpButtonExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:PopUpButton_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Wird ausgelöst, wenn die festgelegte UIComponent geöffnet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die festgelegte UIComponent geöffnet wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:PopUpButton_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Wird ausgelöst, wenn die festgelegte UIComponent geschlossen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die festgelegte UIComponent geschlossen wird. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:PopUpButton:PopUpButton"><apiName>PopUpButton</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:PopUpButton:close"><apiName>close</apiName><shortdesc>
      Schließt das vom PopUpButton-Steuerelement geöffnete UIComponent-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Schließt das vom PopUpButton-Steuerelement geöffnete UIComponent-Objekt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:PopUpButton:open"><apiName>open</apiName><shortdesc>
      Öffnet das von der popUp-Eigenschaft festgelegte UIComponent-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Öffnet das von der <codeph>popUp</codeph>-Eigenschaft festgelegte UIComponent-Objekt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:PopUpButton:closeOnActivity:get"><apiName>closeOnActivity</apiName><shortdesc>
      Ist dieser Wert „true“, bedeutet dies, dass das Popupsteuerelement bei einem Klick oder einer anderen Benutzeraktivität geschlossen wird.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true 
     </apiDefaultValue></apiValueDef><apiDesc>
      Ist dieser Wert <codeph>true</codeph>, bedeutet dies, dass das Popupsteuerelement bei einem Klick oder einer anderen Benutzeraktivität geschlossen wird. Das Popupsteuerelement ist das durch einen Klick auf die Popupschaltfläche geöffnete Steuerelement.
     
      <p>Für Popupsteuerelemente wie „Menu“, „List“ oder „TileList“ können Sie für diese Eigenschaft den Standardwert <codeph>true</codeph> eingestellt lassen, da diese Steuerelemente normalerweise bei Benutzeraktivität geschlossen werden. Bei Mehrfachauswahl und anderen Typen von Popupsteuerelementen können Sie diese Eigenschaft jedoch auf <codeph>false</codeph> einstellen, um zu vermeiden, dass sie bei Benutzeraktivität geschlossen werden.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpButton:openAlways:get"><apiName>openAlways</apiName><shortdesc>
      Wenn die Einstellung „true“ ist, wird das Popup eingeblendet, wenn auf die Hauptschaltfläche geklickt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn die Einstellung <codeph>true</codeph> ist, wird das <codeph>popUp</codeph> eingeblendet, wenn auf die Hauptschaltfläche geklickt wird. Das <codeph>popUp</codeph> wird immer dann eingeblendet, wenn die Leertaste gedrückt oder auf die Popupschaltfläche geklickt wird, unabhängig davon, wie die <codeph>openAlways</codeph>-Eigenschaft eingestellt ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpButton:popUp:get"><apiName>popUp</apiName><shortdesc>
      Legt fest, dass das UIComponent-Objekt oder das durch die Unterklasse von UIComponent bestimmte Objekt als Popup angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier><apiDefaultValue>null 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, dass das UIComponent-Objekt oder das durch die Unterklasse von UIComponent bestimmte Objekt als Popup angezeigt wird. Beispiel: Sie legen ein Menu-, TileList- oder Tree-Steuerelement fest. 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HRule"><apiName>HRule</apiName><shortdesc>
  Das HRule-Steuerelement erzeugt eine einzelne horizontale Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:HRule" replacement="spark.primitives.Line" since="4.0">
	</Alternative><styles><style format="Length" inherit="yes" name="strokeWidth" owner="mx.controls:HRule" playerVersion="Flash9" type="Number">
<description>
  Die Stärke der Linie in Pixeln.
  <ul>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 1, dann hat die Linie eine Stärke von einem Pixel.</li>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 2, dann besteht die Linie aus zwei benachbarten Linien von je einem Pixel Stärke.</li>
    <li>Wenn <codeph>strokeWidth</codeph> größer als 2, dann ist die Linie ein leeres Rechteck mit einer Kantenstärke von einem Pixel.</li>
  </ul>
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="strokeColor" owner="mx.controls:HRule" playerVersion="Flash9" type="uint">
<description>
  Die Farbe der Linie. 
  <ul>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 1, dann ist strokeColor die Farbe der gesamten Linie.</li>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 2, dann ist strokeColor die Farbe der oberen Linie.</li>
    <li>Wenn <codeph>strokeWidth</codeph> größer 2, dann ist strokeColor die Farbe der oberen und linken Kante des Rechtecks.</li>
  </ul> 
  
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="shadowColor" owner="mx.controls:HRule" playerVersion="Flash9" type="uint">
<description>
  Die Schattenfarbe der Linie. 
  <ul>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 1, hat shadowColor keine Wirkung.</li>
    <li>Wenn <codeph>strokeWidth</codeph> gleich 2, dann ist shadowColor die Farbe der unteren Linie.</li>
    <li>Wenn <codeph>strokeWidth</codeph> größer als 2, dann ist shadowColor die Farbe der unteren und rechten Kante des Rechtecks.</li>
  </ul>
 
  </description>
<default>0xEEEEEE
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HRule&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:HRule
    <strong>Styles</strong>
    strokeColor="0xC4CCCC"
    shadowColor="0xEEEEEE"
    strokeWidth="2"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das HRule-Steuerelement erzeugt eine einzelne horizontale Linie. Normalerweise wird dieses Steuerelement verwendet, um eine Trennlinie innerhalb eines Containers zu erzeugen.
 
  <p>Das HRule-Steuerelement verfügt über die folgenden Standardeinstellungen:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Die Standardhöhe beträgt 100 Pixel, die Standardbreite ist 2 Pixel. Standardmäßig ist das HRule-Steuerelement nicht skalierbar. Stellen Sie Breite und Höhe auf Prozentwerte ein, um ein Skalieren zu ermöglichen.</entry>
        </row><row>
           <entry>strokeWidth</entry>
           <entry>2 Pixel.</entry>
        </row><row>
           <entry>strokeColor</entry>
           <entry>0xC4CCCC.</entry>
        </row><row>
           <entry>shadowColor</entry>
           <entry>0xEEEEEE.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleHRule.mxml"><swfblock conref="examples/SimpleHRule.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#VRule"><linktext>mx.controls.VRule</linktext></link></related-links><apiConstructor id="mx.controls:HRule:HRule"><apiName>HRule</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:PopUpMenuButton"><apiName>PopUpMenuButton</apiName><shortdesc>
  Das PopUpMenuButton-Steuerelement erzeugt ein PopUpButton-Steuerelement mit einer Haupt-Unterschaltfläche und einer sekundären Unterschaltfläche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="selectedUpSkin"/><Exclude kind="style" name="selectedUpIcon"/><Exclude kind="style" name="selectedOverSkin"/><Exclude kind="style" name="selectedOverIcon"/><Exclude kind="style" name="selectedDownSkin"/><Exclude kind="style" name="selectedDownIcon"/><Exclude kind="style" name="selectedDisabledSkin"/><Exclude kind="style" name="selectedDisabledIcon"/><Exclude kind="property" name="toggle"/><styles><style inherit="no" name="popUpStyleName" owner="mx.controls:PopUpMenuButton" playerVersion="Flash9" type="String">
<description>
  Der Name der vom Dropdownmenü verwendeten CSS-Stildeklaration. Mithilfe dieser Eigenschaft können Sie das Aussehen des Dropdownmenüs bestimmen. Der Standardwert setzt <codeph>fontWeight</codeph> auf <codeph>normal</codeph> und <codeph>textAlign</codeph> auf <codeph>left</codeph>.
 
  </description>
<default>"popUpMenu"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:PopUpMenuButton&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:PopUpMenuButton
    <strong>Properties</strong>
    dataDescriptor="<i>instance of DefaultDataDescriptor</i>"
    dataProvider="undefined"
    iconField="icon"
    iconFunction="undefined"
    labelField="label"
    labelFunction="undefined"
    showRoot="false|true"
    &nbsp;
    <strong>Event</strong>
    change=<i>No default</i>
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>Stellt Popupmenü und Schaltflächenverhalten bereit.
  </apiTipText></apiTipTexts><apiBaseClassifier>mx.controls:PopUpButton</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das PopUpMenuButton-Steuerelement erzeugt ein PopUpButton-Steuerelement mit einer Haupt-Unterschaltfläche und einer sekundären Unterschaltfläche. Durch Klicken auf den sekundäre (rechte) Unterschaltfläche klappt ein Dropdownmenü auf, das durch die <codeph>dataProvider</codeph>-Eigenschaft gefüllt wird. Anders als die Menu- und MenuBar-Steuerelemente unterstützt das PopUpMenuButton-Steuerelement nur ein Menü mit einer Ebene. Das heißt, dass das Menü keine Untermenüpunkte aufweist.
 
  <p>Die Haupt-Unterschaltfläche des PopUpMenuButton-Steuerelements kann mit einem Beschriftungstext, einem Symbol oder beidem versehen sein. Wählt ein Benutzer ein Element aus dem Dropdownmenü aus oder klickt auf die Hauptschaltfläche des PopUpMenuButton-Steuerelements, löst das Steuerelement ein <codeph>itemClick</codeph>-Ereignis aus. Durch Klicken auf die Hauptschaltfläche des Steuerelements wird ein <codeph>click</codeph>-Ereignis ausgelöst. Das Aussehen eines PopUpMenuButton-Steuerelements kann angepasst werden.</p>
 
  <p>Das PopUpMenuBar-Steuerelement verfügt über die folgenden Größeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Groß genug für die Beschriftung und alle Symbole auf der Hauptschaltfläche und das Symbol auf der Popupschaltfläche. Im Steuerelement ist kein Platz für das Menü enthalten.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>10000 x 10000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="PopUpButtonMenuExample.mxml"><swfblock conref="examples/PopUpButtonMenuExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link></related-links><adobeApiEvent id="mx.controls:PopUpMenuButton_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn ein Benutzer ein Element in einem Popupmenü auswählt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Benutzer ein Element in einem Popupmenü auswählt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:PopUpMenuButton:PopUpMenuButton"><apiName>PopUpMenuButton</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:PopUpMenuButton:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Der Datendeskriptor greift auf die Daten im Datenprovider zu und bearbeitet diese.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      Der Datendeskriptor greift auf die Daten im Datenprovider zu und bearbeitet diese.
      <p>Wenn diese Eigenschaft in MXML als Attribut festgelegt wird, müssen Sie einen Verweis auf den Datendeskriptor verwenden, nicht den Stringnamen des Deskriptors. Verwenden Sie für die Eigenschaft das folgende Format:</p>
     
      <pre>&lt;mx:PopUpMenuButton id="menubar" dataDescriptor="{new MyCustomDataDescriptor()}"/></pre>
     
      <p>Alternativ dazu können Sie die Eigenschaft in MXML als verschachteltes Unter-Tag festlegen, wie im folgenden Beispiel gezeigt wird:</p>
     
      <pre>&lt;mx:PopUpMenuButton>
      &lt;mx:dataDescriptor>
         &lt;myCustomDataDescriptor>
      &lt;/mx:dataDescriptor>
      ...</pre>
     
      <p>Der Standardwert ist eine interne Instanz der DefaultDataDescriptor-Klasse.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      DataProvider für PopUpMenu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      DataProvider für PopUpMenu.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:iconField:get"><apiName>iconField</apiName><shortdesc>
      Name des Felds im dataProvider-Array, welches das jeweils für die einzelnen Menüelemente anzuzeigende Symbol enthält.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
     </apiDefaultValue></apiValueDef><apiDesc>
      Name des Felds im <codeph>dataProvider</codeph>-Array, welches das jeweils für die einzelnen Menüelemente anzuzeigende Symbol enthält. Diese Eigenschaft wird von der <codeph>labelFunction</codeph>-Eigenschaft überschrieben, wenn diese festgelegt ist.
     
      <p>Der Elementrenderer sucht im Datenprovider nach einer Eigenschaft mit dem auf die <codeph>iconField</codeph>-Eigenschaft festgelegten Namen. Wenn der Wert der Eigenschaft eine Klasse ist, wird diese Klasse instanziiert und es wird erwartet, dass diese Klasse eine Instanz von IFlexDisplayObject ist. Ist der Wert dieser Eigenschaft ein String, wird geprüft, ob in der Anwendung eine Klasseneigenschaft mit diesem Namen vorhanden ist. Wird eine solche Eigenschaft nicht in der Anwendung gefunden, wird eine Eigenschaft im Dokument mit diesem Namen gesucht und es wird erwartet, dass diese Eigenschaft einer Klasse zugeordnet ist.</p>
     
      <p>Wenn der Datenprovider ein E4X-XML-Objekt ist, muss diese Eigenschaft ausdrücklich gesetzt werden, beispielsweise durch die Verwendung von @icon zur Festlegung des <codeph>icon</codeph>-Attributs.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:iconFunction:get"><apiName>iconFunction</apiName><shortdesc>
      Eine Funktion, die das anzuzeigende Symbol für jedes Menüelement bestimmt.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
     </apiDefaultValue></apiValueDef><apiDesc>
      Eine Funktion, die das anzuzeigende Symbol für jedes Menüelement bestimmt. Wenn diese Eigenschaft fehlt, verwendet Flex die Inhalte des durch die <codeph>iconField</codeph>-Eigenschaft bestimmten Felds oder Attributs. Wenn diese Eigenschaft festgelegt wird, ignoriert Flex die <codeph>iconField</codeph>-Eigenschaftswerte.
     
      <p>Standardmäßig versucht das Menü nicht, Symbole mit Texten in den Zeilen anzuzeigen. Wenn Sie aber eine Symbolfunktion angeben, können Sie eine Klasse für eine Grafik festlegen, die als Symbol in der Zeile erstellt und angezeigt wird.  </p>
     
      <p>Die iconFunction übernimmt ein einzelnes Argument, nämlich das Element im Datenprovider, und gibt eine Klasse zurück:</p>
     
      <blockquote>
      <codeph>iconFunction(item:Object):Class</codeph>
      </blockquote>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:labelField:get"><apiName>labelField</apiName><shortdesc>
      Name des Felds im dataProvider-Array, welches den für die einzelnen Menüelemente anzuzeigenden Text enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Name des Felds im <codeph>dataProvider</codeph>-Array, welches den für die einzelnen Menüelemente anzuzeigenden Text enthält. Diese Eigenschaft wird außer Kraft gesetzt, wenn die <codeph>labelFunction</codeph>-Eigenschaft festgelegt ist. Wenn der Datenprovider ein Array von Strings ist, verwendet Flex die einzelnen Stringwerte als Beschriftung. Wenn der Datenprovider ein E4X-XML-Objekt ist, muss diese Eigenschaft ausdrücklich gesetzt werden, beispielsweise durch die Verwendung von @label zur Festlegung des <codeph>label</codeph>-Attributs.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Eine Funktion, die den anzuzeigenden Text für jedes Menüelement bestimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Eine Funktion, die den anzuzeigenden Text für jedes Menüelement bestimmt. Wenn diese Eigenschaft fehlt, verwendet Flex die Inhalte des durch die <codeph>labelField</codeph>-Eigenschaft bestimmten Felds oder Attributs. Wenn diese Eigenschaft festgelegt wird, ignoriert Flex die <codeph>labelField</codeph>-Eigenschaftswerte.
     
      <p>Wenn diese Eigenschaft festgelegt wird, muss die Beschriftungsfunktion das passende Feld bzw. Felder suchen und einen anzeigbaren String anzeigen. Die <codeph>labelFunction</codeph>-Eigenschaft ist hilfreich beim Formatieren und Lokalisieren.</p>
     
      <p>Die Beschriftungsfunktion muss ein einziges Argument, nämlich das Element im Datenprovider, verwenden und einen String zurückgeben, wie im folgenden Beispiel zu sehen ist.</p>
     
      <pre>labelFunction(item:Object):String</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Legt fest, ob der/die Knoten der obersten Ebene des Datenproviders angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob der/die Knoten der obersten Ebene des Datenproviders angezeigt werden. Ist die Einstellung <codeph>false</codeph>, zeigt das Steuerelement nur die dem obersten Knoten untergeordnete Elemente an. Knoten der obersten Ebene werden ignoriert. Diese Eigenschaft wird üblicherweise bei E4X-XML-Datenprovidern auf <codeph>false</codeph> gesetzt, wo der Knoten der obersten Ebene dem Dokumentobjekt entspricht.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:popUp:set"><apiName>popUp</apiName><shortdesc>
      Ein Verweis auf das Popup-Menu-Objekt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
      Ein Verweis auf das Popup-Menu-Objekt.
     
      <p>Diese Eigenschaft ist schreibgeschützt, Einstellungen bleiben wirkungslos. Stattdessen sollt die <codeph>dataProvider</codeph>-Eigenschaft gesetzt werden. (Der Hinweis auf den Nur-Schreiben-Modus erscheint in der Syntaxzusammenfassung, da die Eigenschaft in der Superklasse schreibgeschützt ist und diese Klasse die Einstellung mit einer leeren Implementierung überschreibt.)</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:DateChooser"><apiName>DateChooser</apiName><shortdesc>
  Das DateChooser-Steuerelement zeigt den Monatsnamen, das Jahr und ein Raster der Monatstage an; die Wochentage verfügen über eine beschriftete Spalte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="weekDayStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Name der Stylesheet-Definition, welche die Namen der Wochentage dieses Steuerelements konfiguriert. Wenn weggelassen, werden die Textstile des Steuerelements an die Namen der Wochentage weitergegeben.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="todayStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Name der Stylesheet-Definition, welche das Aussehen des numerischen Texts für den aktuellen Tag konfiguriert, welcher im Steuerelement markiert erscheint, wenn die <codeph>showToday</codeph>-Eigenschaft <codeph>true</codeph> ist. Legen Sie einen Farbstil für die Änderung der Schriftartfarbe fest. Wenn weggelassen, werden die Textstile des Steuerelements an den Text des aktuellen Tages weitergegeben.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="todayIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den markierten Bereich des heutigen Datums im DateChooser-Steuerelement verwendet werden soll. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="todayColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Hintergrundfarbe für das heutige Datum. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Die Farbe eines beliebigen Symbols einer Komponente. Beispiele sind etwa das Häkchen eines Kontrollkästchens oder der Pfeil auf der Schaltfläche einer Bildlaufleiste.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den markierten Bereich des aktuell ausgewählten Datums im DateChooser-Steuerelement verwendet werden soll. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Farbe des markierten Bereichs des aktuell ausgewählten Datums im DateChooser-Steuerelement. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="rollOverIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den markierten Bereich des Datums im DateChooser-Steuerelement verwendet werden soll, wenn sich der Mauszeiger über dem Datum befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Farbe des markierten Bereichs des Datums, wenn sich der Mauszeiger über dem Datum im DateChooser-Steuerelement befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das vergangene Jahr verwendet wird, wenn sich der Mauszeiger nicht über dem Pfeil befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das vergangene Jahr verwendet wird, wenn sich der Mauszeiger über dem Pfeil befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das vergangene Jahr verwendet wird, wenn der Benutzer den Mauszeiger über dem Pfeil drückt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das vorige Jahr verwendet wird, wenn der Pfeil deaktiviert ist. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das vorige Jahr verwendet wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den vorigen Monat verwendet wird, wenn sich der Mauszeiger über dem Pfeil befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den vorigen Monat verwendet wird, wenn sich der Mauszeiger über dem Pfeil befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den vorigen Monat verwendet wird, wenn der Benutzer die Maustaste über dem Pfeil drückt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den vorigen Monat verwendet wird, wenn der Pfeil deaktiviert ist. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den vorigen Monat verwendet wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den nächsten Monat verwendet wird, wenn sich der Mauszeiger nicht über dem Pfeil befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das nächste Jahr verwendet wird, wenn sich der Mauszeiger über dem Pfeil befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den nächsten Monat verwendet wird, wenn der Benutzer die Maustaste über dem Pfeil drückt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das nächste Jahr verwendet wird, wenn der Pfeil deaktiviert ist. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das nächste Jahr verwendet wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für das nächste Jahr verwendet wird, wenn sich der Mauszeiger nicht über dem Pfeil befindet. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den nächsten Monat verwendet wird, wenn der Mauszeiger über den Pfeil bewegt wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den nächsten Monat verwendet wird, wenn der Benutzer die Maustaste über dem Pfeil drückt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den nächsten Monat verwendet wird, wenn der Pfeil deaktiviert ist. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Name der Klasse, die als Skin für den Pfeil für den nächsten Monat verwendet wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenzen, die für die markierende Füllung der Steuerelemente verwendet werden. Der erste Wert legt die Transparenz im oberen Bereich des Glanzlichts fest, der zweite Wert die Transparenz im unteren Bereich. Das Glanzlicht deckt die obere Hälfte der Skin ab.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Name der Stylesheet-Definition, welche den Text (Monatsname und Jahr) und das Aussehen des Header-Bereichs im Steuerelement konfiguriert.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="headerColors" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="Array">
<description>
  Farben des Streifens im oberen Bereichs des DateChooser-Steuerelements. Der Standardwert ist <codeph>[ 0xE1E5EB, 0xF4F5F7 ]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Fokusrings, wenn sich die Komponente im Fokus befindet
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
   <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Inhaltsbereichs der Komponente.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Inhaltshintergrunds für diese Komponente.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Sichtbarkeit des Rahmens.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Stärke des Begrenzungsrahmens. Wird nur verwendet, wenn <codeph>borderStyle</codeph> auf <codeph>"solid"</codeph> gesetzt ist.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Farbe des Rahmens. Die folgenden Steuerelemente unterstützen diesen Stil: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider und alle Komponenten, die den <codeph>borderStyle</codeph>-Stil unterstützen. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Rahmens.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Hintergrundfarbe des DateChooser-Steuerelements.
  
  </description>
<default>0xFFFFF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Die Alphaebene der Farbe, die durch die <codeph>backgroundColor</codeph>-Eigenschaft festgelegt wird. Die zulässigen Werte liegen zwischen 0,0 und 1,0.
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:DateChooser" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:DateChooser" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:DateChooser" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen untergeordneten Elementen in vertikaler Richtung. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Anzahl von Pixeln zwischen untergeordneten Objekten in horizontaler Richtung. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Gibt an, welche Ecken des Fokusrechtecks gerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:DateChooser&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:DateChooser
    <strong>Properties</strong>
    allowDisjointSelection="true|false"
    allowMultipleSelection="false|true"
    dayNames="["S", "M", "T", "W", "T", "F", "S"]"
    disabledDays="<i>No default</i>"
    disabledRanges="<i>No default</i>"
    displayedMonth="<i>Current month</i>"
    displayedYear="<i>Current year</i>"
    firstDayOfWeek="0"
    maxYear="2100"
    minYear="1900"
    monthNames="["January", "February", "March", "April", "May",
      "June", "July", "August", "September", "October", "November",
      "December"]"
    monthSymbol=""
    selectableRange="<i>No default</i>"
    selectedDate="<i>No default</i>"
    selectedRanges="<i>No default</i>"
    showToday="true|false"
    yearNavigationEnabled="false|true"
    yearSymbol=""
 
    <strong>Styles</strong>
    backgroundColor="0xFFFFFF"
    backgroundAlpha="1.0"
    borderColor="0xAAB3B3"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="4"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    fillAlphas="[0.6, 0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    headerColors="[0xE1E5EB, 0xF4F5F7]"
    headerStyleName="headerDateText"
    highlightAlphas="[0.3, 0.0]"
    horizontalGap="8"
    iconColor="0x111111"
    leading="2"
    nextMonthDisabledSkin="DateChooserMonthArrowSkin"
    nextMonthDownSkin="DateChooserMonthArrowSkin"
    nextMonthOverSkin="DateChooserMonthArrowSkin"
    nextMonthSkin = "DateChooserMonthArrowSkin" 
    nextMonthUpSkin="DateChooserMonthArrowSkin"
    nextYearDisabledSkin="DateChooserYearArrowSkin"
    nextYearDownSkin="DateChooserYearArrowSkin"
    nextYearOverSkin="DateChooserYearArrowSkin"
    nextYearSkin = "DateChooserYearArrowSkin"
    nextYearUpSkin="DateChooserYearArrowSkin"
    prevMonthDisabledSkin="DateChooserMonthArrowSkin"
    prevMonthDownSkin="DateChooserMonthArrowSkin"
    prevMonthOverSkin="DateChooserMonthArrowSkin"
    prevMonthSkin = "DateChooserMonthArrowSkin"
    prevMonthUpSkin="DateChooserMonthArrowSkin"
    prevYearDisabledSkin="DateChooserYearArrowSkin"
    prevYearDownSkin="DateChooserYearArrowSkin"
    prevYearOverSkin="DateChooserYearArrowSkin"
    prevYearSkin = "DateChooserYearArrowSkin"
    prevYearUpSkin="DateChooserYearArrowSkin"
    rollOverColor="0xEEFEE6"
    rollOverIndicatorSkin="DateChooserIndicator"
    selectionColor="0xB7F39B"
    selectionIndicatorSkin="DateChooserIndicator"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    todayColor="0x818181"
    todayIndicatorSkin="DateChooserIndicator"
    todayStyleName="todayStyle"
    verticalGap="6"
    weekDayStyleName="weekDayStyle"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das DateChooser-Steuerelement zeigt den Monatsnamen, das Jahr und ein Raster der Monatstage an; die Wochentage verfügen über eine beschriftete Spalte. Benutzer können ein Datum, einen Datumsbereich oder mehrere Daten auswählen. Das Steuerelement enthält Schaltflächen mit „Weiter“- und „Zurück“-Pfeilen zum Ändern von Monat und Jahr. Sie können festlegen, dass Benutzer mehrere Daten auswählen können, die Auswahl bestimmter Daten aufheben und die Anzeige des Datumsbereichs beschränken.
 
  <p>Das DateChooser-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Eine Größe, die ausreicht, um einen Kalender darzustellen und die Namen der Wochentage anzuzeigen.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Keine Beschränkung.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="DateChooserExample.mxml"><swfblock conref="examples/DateChooserExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link></related-links><adobeApiEvent id="mx.controls:DateChooser_mx.events.DateChooserEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Wird ausgelöst, wenn sich der Monat durch Interaktion des Benutzers ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DateChooserEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.DateChooserEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich der Monat durch Interaktion des Benutzers ändert.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateChooser_mx.events.CalendarLayoutChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn ein Datum ausgewählt oder geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CalendarLayoutChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.CalendarLayoutChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Datum ausgewählt oder geändert wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DateChooser:DateChooser"><apiName>DateChooser</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:DateChooser:allowDisjointSelection:get"><apiName>allowDisjointSelection</apiName><shortdesc>
      Wenn „true“, wird festgelegt, dass nicht zusammenhängende (versetzte) Auswahlen im DateChooser-Steuerelement möglich sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn <codeph>true</codeph>, wird festgelegt, dass nicht zusammenhängende (versetzte) Auswahlen im DateChooser-Steuerelement möglich sind. Diese Eigenschaft hat nur dann eine Auswirkung, wenn die <codeph>allowMultipleSelection</codeph>-Eigenschaft <codeph>true</codeph> ist. Durch das Festlegen dieser Eigenschaft ändert sich das Aussehen des DateChooser-Steuerelements.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:allowMultipleSelection:get"><apiName>allowMultipleSelection</apiName><shortdesc>
      Wenn „true“, ist die Mehrfachauswahl im DateChooser-Steuerelement möglich.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn <codeph>true</codeph>, ist die Mehrfachauswahl im DateChooser-Steuerelement möglich. Durch das Festlegen dieser Eigenschaft ändert sich das Aussehen des DateChooser-Steuerelements.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:protected:calendarLayoutStyleFilters:get"><apiName>calendarLayoutStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der vom DateChooser an das Kalenderlayout übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der vom DateChooser an das Kalenderlayout übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:dayNames:get"><apiName>dayNames</apiName><shortdesc>
      Die Namen der Wochentage für das DateChooser-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "S", "M", "T", "W", "T", "F", "S" ].
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Namen der Wochentage für das DateChooser-Steuerelement. Das Ändern dieser Eigenschaft ändert die Beschriftung für die Tage im DateChooser-Steuerelement. Sonntag ist der erste Tag (an der Indexposition 0). Die verbleibenden Namen der Wochentage folgen in der normalen Reihenfolge.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:disabledDays:get"><apiName>disabledDays</apiName><shortdesc>
      Tage innerhalb einer Woche, die zu deaktivieren sind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Tage innerhalb einer Woche, die zu deaktivieren sind. Alle Daten eines Monats werden für diesen festgelegten Tag deaktiviert. Diese Eigenschaft ändert das Aussehen des DateChooser-Steuerelements. Die Elemente dieses Arrays können Werte zwischen 0 (Sonntag) und 6 (Samstag) haben. So deaktiviert beispielsweise ein Wert von <codeph>[ 0, 6 ]</codeph> den Sonntag und Samstag.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:disabledRanges:get"><apiName>disabledRanges</apiName><shortdesc>
      Deaktiviert einzelne und mehrere Tage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Deaktiviert einzelne und mehrere Tage.
     
      <p>Diese Eigenschaft akzeptiert ein Array von Objekten als Parameter. Jedes Objekt in diesem Array muss ein Date-Objekt sein, das den zu deaktivierenden einzelnen Tag angibt, oder ein Objekt, das eine oder beide der Eigenschaften <codeph>rangeStart</codeph> oder <codeph>rangeEnd</codeph> enthält. Die Werte dieser beiden Eigenschaften sind Date-Objekte. Der Wert dieser Eigenschaften beschreibt die Grenzen des Datumsbereichs. Wenn eine der beiden Eigenschaften fehlt, setzt sich der Bereich unbegrenzt in die entsprechende Richtung fort. Wenn Sie lediglich <codeph>rangeStart</codeph> festlegen, werden alle Daten nach dem festgelegten Datum deaktiviert inklusive des<codeph>rangeStart</codeph>-Datums. Wenn Sie lediglich <codeph>rangeEnd</codeph> festlegen, werden alle Daten vor diesem Tag deaktiviert inklusive des <codeph>rangeEnd</codeph>-Datums. Um einen einzelnen Tag zu deaktivieren, verwenden Sie ein einzelnes Date-Objekt, das ein Datum im Array angibt. Zeitwerte werden aus dem Date-Objekt gelöscht, wenn sie vorhanden sind.</p>
     
      <p>Im folgenden Beispiel werden diese Datumswerte deaktiviert: 11. Januar 2006, der Zeitraum vom 23. Januar bis zum 10. Februar 2006 und alle folgenden Datumswerte.</p>
     
      <p><codeph>disabledRanges="{[ new Date(2006,0,11), {rangeStart: new Date(2006,0,23), rangeEnd: new Date(2006,1,10)}, {rangeStart: new Date(2006,2,1)} ]}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:displayedMonth:get"><apiName>displayedMonth</apiName><shortdesc>
      Wenn sie mit der displayedYear-Eigenschaft verwendet wird, legt die displayedMonth-Eigenschaft den Monat fest, der im DateChooser-Steuerelement angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Wenn sie mit der <codeph>displayedYear</codeph>-Eigenschaft verwendet wird, legt die <codeph>displayedMonth</codeph>-Eigenschaft den Monat fest, der im DateChooser-Steuerelement angezeigt werden soll. Die Monatszahlen basieren auf null, das heißt, dass Januar 0 und Dezember 11 entspricht. Durch das Festlegen dieser Eigenschaft ändert sich das Aussehen des DateChooser-Steuerelements.
     
      <p>Der Standardwert ist der aktuelle Monat.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:displayedYear:get"><apiName>displayedYear</apiName><shortdesc>
      Wenn sie mit der displayedMonth-Eigenschaft verwendet wird, legt die displayedYear-Eigenschaft das Jahr fest, das im DateChooser-Steuerelement angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Wenn sie mit der <codeph>displayedMonth</codeph>-Eigenschaft verwendet wird, legt die <codeph>displayedYear</codeph>-Eigenschaft das Jahr fest, das im DateChooser-Steuerelement angezeigt werden soll. Durch das Festlegen dieser Eigenschaft ändert sich das Aussehen des DateChooser-Steuerelements.
     
      <p>Der Standardwert ist das aktuelle Jahr.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:firstDayOfWeek:get"><apiName>firstDayOfWeek</apiName><shortdesc>
      Zahl, die den Wochentag darstellt, der in der ersten Spalte des DateChooser-Steuerelements angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>0 (Sunday)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Zahl, die den Wochentag darstellt, der in der ersten Spalte des DateChooser-Steuerelements angezeigt werden soll. Der Wert muss zwischen 0 und 6 liegen, wobei 0 dem Sonntag, dem ersten Element des <codeph>dayNames</codeph>-Array entspricht.
     
      <p>Durch das Einstellen dieser Eigenschaft wird die Anzeigereihenfolge der Tagesspalten geändert. Wird sie beispielsweise auf 1 gesetzt, so ist der Montag die erste Spalte im Steuerelement.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:maxYear:get"><apiName>maxYear</apiName><shortdesc>
      Das letzte auswählbare Jahr im Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>2100
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Das letzte auswählbare Jahr im Steuerelement.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:minYear:get"><apiName>minYear</apiName><shortdesc>
      Das erste auswählbare Jahr im Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1900
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Das erste auswählbare Jahr im Steuerelement.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:monthNames:get"><apiName>monthNames</apiName><shortdesc>
      Die Namen der Monate, die im oberen Teil des DateChooser-Steuerelements angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "January", "February", "March", "April", "May", "June", 
      "July", "August", "September", "October", "November", "December" ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Namen der Monate, die im oberen Teil des DateChooser-Steuerelements angezeigt werden. Die <codeph>monthSymbol</codeph>-Eigenschaft wird an den Wert angehängt, der durch die <codeph>monthNames</codeph>-Eigenschaft festgelegt wird. Dies kann für Sprachen wie Japanisch nützlich sein.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:monthSymbol:get"><apiName>monthSymbol</apiName><shortdesc>
      Diese Eigenschaft wird an das Ende des Werts angehängt, der von der monthNames-Eigenschaft festgelegt wird, um die Namen der Monate zu definieren, die im oberen Teil des DateChooser-Steuerelements angezeigt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Diese Eigenschaft wird an das Ende des Werts angehängt, der von der <codeph>monthNames</codeph>-Eigenschaft festgelegt wird, um die Namen der Monate zu definieren, die im oberen Teil des DateChooser-Steuerelements angezeigt werden. Manche Sprachen wie z. B. Japanisch verwenden ein eigenes Symbol nach dem Monatsnamen. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:protected:nextMonthStyleFilters:get"><apiName>nextMonthStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für den nächsten Monat übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für den nächsten Monat übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:nextYearStyleFilters:get"><apiName>nextYearStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für das nächste Jahr übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für das nächste Jahr übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:prevMonthStyleFilters:get"><apiName>prevMonthStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für den vorigen Monat übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für den vorigen Monat übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:prevYearStyleFilters:get"><apiName>prevYearStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für das vorige Jahr übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der vom DateChooser an die Schaltfläche für das vorige Jahr übergeben wird.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:selectableRange:get"><apiName>selectableRange</apiName><shortdesc>
      Datumsbereich, in welchem Daten ausgewählt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Datumsbereich, in welchem Daten ausgewählt werden können. Beispiel: Ein Datum zwischen 12/04/2006 und 12/04/2006 kann ausgewählt werden, aber Daten außerhalb dieses Bereichs sind deaktiviert.
     
      <p>Diese Eigenschaft akzeptiert ein Objekt als Parameter. Das Objekt enthält zwei Eigenschaften des Typs „Date“: <codeph>rangeStart</codeph> und <codeph>rangeEnd</codeph>. Wenn Sie lediglich <codeph>rangeStart</codeph> festlegen, werden alle nachfolgenden Daten aktiviert. Wenn Sie lediglich <codeph>rangeEnd</codeph>festlegen, werden alle früheren Daten aktiviert. Um nur einen einzelnen Tag im DateChooser-Steuerelement zu aktivieren, können Sie ein Date-Objekt direkt übergeben. Zeitwerte werden aus dem Date-Objekt gelöscht, wenn sie vorhanden sind.</p>
     
      <p>Im folgenden Beispiel wird nur der Datumsbereich zwischen 1. Januar 2006 und 30. Juni 2006 aktiviert. Die Monate vor Januar und nach Juni werden nicht in DateChooser angezeigt.</p>
     
      <p><codeph>selectableRange="{{rangeStart : new Date(2006,0,1), rangeEnd : new Date(2006,5,30)}}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:selectedDate:get"><apiName>selectedDate</apiName><shortdesc>
      Im DateChooser-Steuerelement ausgewähltes Datum.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Im DateChooser-Steuerelement ausgewähltes Datum. Wenn das eingehende Date-Objekt Zeitwerte aufweist, werden diese gelöscht.
     
      <p>Durch Halten der Strg-Taste beim Auswählen des aktuell ausgewählten Datums im Steuerelement wird die Auswahl aufgehoben, die<codeph>selectedDate</codeph>-Eigenschaft auf <codeph>null</codeph> gesetzt und ein <codeph>change</codeph>-Ereignis ausgelöst.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:selectedRanges:get"><apiName>selectedRanges</apiName><shortdesc>
      Ausgewählte Datumsbereiche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ausgewählte Datumsbereiche.
     
      <p>Diese Eigenschaft akzeptiert ein Array von Objekten als Parameter. Jedes Objekt in diesem Array verfügt über zwei Date-Objects: <codeph>rangeStart</codeph> und <codeph>rangeEnd</codeph>. Der Datumsbereich zwischen den einzelnen Sätzen, bestehend aus <codeph>rangeStart</codeph> und <codeph>rangeEnd</codeph> (einschließlich dieser Daten), ist ausgewählt. Um einen einzelnen Tag auszuwählen, setzen Sie <codeph>rangeStart</codeph> und <codeph>rangeEnd</codeph> auf denselben Tag. Zeitwerte werden aus dem Date-Objekt gelöscht, wenn sie vorhanden sind.</p>
     
      <p>Im folgenden Beispiel werden die folgenden Daten ausgewählt: 11. Januar 2006 und der Bereich vom 23. Januar 2006 bis zum 10. Februar 2006. </p>
     
      <p><codeph>selectedRanges="{[ {rangeStart: new Date(2006,0,11), rangeEnd: new Date(2006,0,11)}, {rangeStart:new Date(2006,0,23), rangeEnd: new Date(2006,1,10)} ]}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:showToday:get"><apiName>showToday</apiName><shortdesc>
      Wenn „true“, wird festgelegt, dass das heutige Datum im DateChooser-Steuerelement markiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn <codeph>true</codeph>, wird festgelegt, dass das heutige Datum im DateChooser-Steuerelement markiert wird. Durch das Festlegen dieser Eigenschaft ändert sich das Aussehen des DateChooser-Steuerelements.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:yearNavigationEnabled:get"><apiName>yearNavigationEnabled</apiName><shortdesc>
      Aktiviert die Jahr-Navigation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Aktiviert die Jahr-Navigation. Wenn <codeph>true</codeph>, erscheinen die Aufwärts- und Abwärts-Schaltflächen rechts neben dem eingeblendeten Jahr. Sie können diese Schaltflächen zum Ändern des aktuellen Jahres verwenden. Diese Schaltflächen werden in Gebietsschemas, in welchen das Jahr vor dem Monat steht, auf der linken Seite angezeigt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:yearSymbol:get"><apiName>yearSymbol</apiName><shortdesc>
      Diese Eigenschaft wird an das Ende des Jahres gehängt, welches im oberen Teil des DateChooser-Steuerelements angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Diese Eigenschaft wird an das Ende des Jahres gehängt, welches im oberen Teil des DateChooser-Steuerelements angezeigt wird. Manche Sprachen wie z. B. Japanisch fügen nach dem Jahr ein eigenes Symbol hinzu. 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ComboBox"><apiName>ComboBox</apiName><shortdesc>
  Das ComboBox-Steuerelement umfasst eine Dropdownliste, aus welcher der Benutzer einen einzelnen Wert auswählen kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Die textSelectedColor der Dropdownliste. <codeph/> <codeph/>
 
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Die textRollOverColor der Dropdownliste. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  Die selectionEasingFunction der Dropdownliste.
 
  </description>
<default>undefined
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Time" inherit="no" name="selectionDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Die selectionDuration der Dropdownliste.
 
  </description>
<default>250
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Die selectionColor der Dropdownliste. <codeph/> <codeph/>
 
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Die rollOverColor der Dropdownliste. <codeph/> <codeph/>
 
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der oberen Rahmenlinie des Steuerelements und dem oberen Teil seines Inhaltsbereichs. Wenn die <codeph>editable</codeph>-Eigenschaft auf <codeph>true</codeph> gesetzt ist, beeinflussen <codeph>paddingTop</codeph> und <codeph>PaddingBottom</codeph> die Größe des ComboBox-Steuerelements, nicht aber die Position des bearbeitbaren Textfelds.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der unteren Rahmenlinie des Steuerelements und dem unteren Teil seines Inhaltsbereichs. Wenn die <codeph>editable</codeph>-Eigenschaft auf <codeph>true</codeph> gesetzt ist, beeinflussen <codeph>paddingTop</codeph> und <codeph>PaddingBottom</codeph> die Größe des ComboBox-Steuerelements, nicht aber die Position des bearbeitbaren Textfelds.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  Eine Beschleunigungsfunktion zur Steuerung des Übergangs zu Beginn. Beschleunigungsfunktionen werden zur Steuerung der Beschleunigung und Verlangsamung der Übergänge verwendet.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Länge des Übergangs beim Öffnen der Dropdownliste in Millisekunden. Beim Standardübergang wird die Dropdownliste von der ComboBox nach unten eingeblendet.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropdownStyleName" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Der Name der CSSStyleDeclaration, die von der Dropdownliste verwendet wird. Damit wird das Aussehen der Dropdownliste und ihres Elementrenderers gesteuert.
 
  </description>
<default>"comboDropdown"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="dropdownStyleName" inherit="no" name="dropDownStyleName" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Der Name der CSSStyleDeclaration, die von der Dropdownliste verwendet wird. Damit wird das Aussehen der Dropdownliste und ihres Elementrenderers gesteuert. [Veraltet]
 
  </description>
<default>"comboDropDown"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropdownBorderColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Rahmenfarbe der ComboBox. Ist sie <codeph>undefined</codeph>, so verwendet die Dropdownliste den normalen borderColor-Stil. Dieser Stil wird von den Validatoren verwendet, um die ComboBox im Fehlerstatus anzuzeigen.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  Eine Beschleunigungsfunktion zur Steuerung des Übergangs am Ende. Beschleunigungsfunktionen werden zur Steuerung der Beschleunigung und Verlangsamung der Übergänge verwendet.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Die Länge des Übergangs beim Schließen der Dropdownliste in Millisekunden. Beim Standardübergang wird die Dropdownliste von unten in die ComboBox geschoben.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Die Stärke des Rahmens der Dropdownliste in Pixeln. Dieser Wert wird außer Kraft gesetzt, wenn beim Festlegen der <codeph>dropdownStyleName</codeph>-CSSStyleDeclaration die <codeph>borderThickness</codeph> gesetzt wird. 
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="arrowButtonWidth" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Breite der Pfeilschaltfläche in Pixeln.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Array">
<description>
  Ein Satz an BackgroundColors für Dropdownlistenzeilen in einem abwechselnden Muster. Der Wert kann ein Array aus zwei oder mehr Farben sein. Wenn <codeph>undefined</codeph>, so verwenden die Zeilen den backgroundColor-Stil der Dropdownliste.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Offset der ersten Textzeile von der linken Seite des Containers in Pixeln.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ComboBox" playerVersion="Flash10" type="Class">
<description>
  Die Klasse, die IUITextField implementiert, das von dieser Komponente für die Darstellung von Text verwendet wird.
 
  <p>Sie kann auf die mx.core.UITextField-Klasse (zur Verwendung der in Flash Player integrierten klassischen TextField-Klasse) oder die mx.core.UIFTETextField-Klasse (zur Verwendung des Text Layout Frameworks, um verbesserte Textdarstellungen, einschließlich bidirektionalem Layout, zu erhalten) eingestellt werden.</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text unterstrichen wird. Mögliche Werte sind <codeph>"none"</codeph> und <codeph>"underline"</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Ausrichtung von Text in einem Container. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph> oder <codeph>"center"</codeph>.
 
  <p>Der Standardwert für die meisten Steuerelemente ist <codeph>„left“</codeph>. Für die FormItem-Komponente ist der Standardwert <codeph>„right“</codeph>. Für die Button-, LinkButton- und AccordionHeader-Komponenten ist der Standardwert <codeph>„center“</codeph>, und diese Eigenschaft wird nur erkannt, wenn die <codeph>labelPlacement</codeph>-Eigenschaft auf <codeph>„left“</codeph> oder <codeph>„right“</codeph> eingestellt ist. Wenn <codeph>labelPlacement</codeph> auf <codeph>"top"</codeph> oder <codeph>"bottom"</codeph> gesetzt wird, werden der Text und eventuell vorhandene Symbole zentriert.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ComboBox" playerVersion="Flash10" type="String">
<description>
  Das Gebietsschema des von dieser Komponente angezeigten Texts.
 
  <p>FTE und TLF verwenden dieses Gebietsschema für die Zuordnung von Unicode-Schriftarten zu Schriftartglyphen und für die Suche nach Ausweichschriftarten.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Die Anzahl zusätzlicher Pixel, die zwischen den einzelnen Zeichen eingefügt werden sollen. Ein positiver Wert erhöht den normalen Zeichenabstand, ein negativer Wert reduziert ihn.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Boolean">
<description>
  Ein boolescher Wert, der angibt, ob Kerning aktiviert (<codeph>true</codeph>) oder deaktiviert (<codeph>false</codeph>) ist. Kerning reduziert den Abstand zwischen bestimmten Zeichenpaaren, um die Lesbarkeit zu verbessern, und sollte nur verwendet werden, wenn dies wirklich nötig ist, etwa bei Titeln mit großer Schrift. Kerning wird nur für eingebettete Schriftarten unterstützt. Bestimmte Schriftarten wie Verdana und Schriftarten mit fester Breite wie Courier New unterstützen Kerning nicht
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text fett formatiert wird. Gültige Werte sind <codeph>normal</codeph> und <codeph>bold</codeph>. Der Standardwert für die Button-Steuerelemente ist <codeph>bold</codeph>. Der Standardwert für alle anderen Steuerelemente ist <codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Legt die <codeph>thickness</codeph>-Eigenschaft von internen TextFields-Elementen fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Stärke der Glyphenkanten. Die möglichen Werte sind Zahlen von -200 bis 200. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkung auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Bestimmt, ob der Text kursiv formatiert wird. Gültige Werte sind <codeph>"normal"</codeph> und <codeph>"italic"</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Die Höhe des Texts in Pixeln.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Legt die Eigenschaft <codeph>sharpness</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Diese Eigenschaft definiert die Bildschärfe der Glyphenkanten. Die möglichen Werte sind Zahlen von -400 bis 400. 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Legt die Eigenschaft <codeph>gridFitType</codeph> von internen Textfeldern fest, die Text in Flex-Steuerelementen darstellen. Die möglichen Werte sind <codeph>"none"</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>"pixel"</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) und <codeph>"subpixel"</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Diese Eigenschaft kommt nur zur Anwendung, wenn Sie eine eingebettete Schriftart verwenden und die <codeph>fontAntiAliasType</codeph>-Eigenschaft auf <codeph>„advanced“</codeph> eingestellt ist.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
 
  <p>Dieser Stil wird auf den gesamten Text eines untergeordneten TextField-Steuerelements angewendet. Sie können ihn nicht auf einige Zeichen anwenden und auf andere nicht.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Name der zu verwendenden Schriftart. Anders als bei einer reinen CSS-Implementierung werden kommagetrennte Listen nicht unterstützt. Sie können eine beliebige Schriftfamilienbezeichnung verwenden. Wenn Sie eine generische Schriftartbezeichnung wählen, wird diese in eine entsprechende Geräteschriftart konvertiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Stellt die <codeph>antiAliasType</codeph>-Eigenschaften interner TextFields-Elemente ein. Die möglichen Werte sind <codeph>"normal"</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) und <codeph>"advanced"</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Der Standardwert ist <codeph>„advanced“</codeph>, wodurch ein Anti-Aliasing für die Schriftart aktiviert wird. Auf <codeph>„normal“</codeph> eingestellt, um das erweiterte Anti-Aliasing zu deaktivieren.</p>
  
  <p>Dieser Stil hat keine Auswirkungen auf Systemschriftarten.</p>
  
  <p>Dieser Stil wird auf alle Texte in einem TextField-Substeuerelement angewendet. Es ist nicht möglich, ihn selektiv auf einzelne Zeichen anzuwenden.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, wenn deaktiviert.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ComboBox" playerVersion="Flash10" type="String">
<description>
  Die Laufrichtung des von dieser Komponente angezeigten Texts.
 
  <p>Zulässige Werte sind <codeph>"ltr"</codeph> für den von links nach rechts verlaufenden Text lateinischer Schriften und <codeph>"rtl"</codeph> für den von rechts nach links laufenden Text z. B. des Arabischen oder Hebräischen.</p>
 
  <p>FTE und TLF verwenden diesen Wert in ihrem bidirektionalen Textlayoutalgorithmus, der die Unicode-Zeichenfolge der Glyphenfolge zuordnet.</p>
 
  <p>Hinweis: Dieser Stil gilt nur, wenn eine MX-Komponente UIFTETextField als ihre <codeph>textFieldClass</codeph> festlegt.</p>
 
  <p>Die <codeph>direction</codeph> wirkt sich auch auf die Ausrichtung des Texts an den Grenzen des TLFTextField aus. Sie beeinflusst jedoch nicht die Platzierung des TLFTextField innerhalb der Komponente.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Farbe des Texts in der Komponente, einschließlich der Komponentenbeschriftung. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenzen, die für die markierende Füllung der Steuerelemente verwendet werden. Der erste Wert legt die Transparenz im oberen Bereich des Glanzlichts fest, der zweite Wert die Transparenz im unteren Bereich. Das Glanzlicht deckt die obere Hälfte der Skin ab.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Farben zum Tönen des Hintergrunds von Steuerelementen. Verwenden Sie für ein einheitliches Erscheinungsbild des Steuerelements dieselbe Farbe für beide Werte.
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Alphatransparenz für die Hintergrundfüllung von Steuerelementen. Verwenden Sie [1, 1], um den Hintergrund undurchsichtig zu gestalten.
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Radius von Komponentenecken. Dieser Stil wird von den folgenden Komponenten unterstützt: Alert, Button, ComboBox, LinkButton, MenuBar, NumericStepper, Panel, ScrollBar, Tab, TitleWindow und alle Komponenten, die bei der <codeph>borderStyle</codeph>-Eigenschaft die Einstellung <codeph>"solid"</codeph> unterstützen. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Rahmens. Die folgenden Steuerelemente unterstützen diesen Stil: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider und alle Komponenten, die den <codeph>borderStyle</codeph>-Stil unterstützen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0xB7BABC</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der rechten Rahmenlinie der Komponente und dem rechten Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der linken Rahmenlinie der Komponente und dem linken Rand ihres Inhaltsbereichs.
  <p>Der Standardwert ist 0.</p>
  <p/>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 5.</p>
  <p>Der Standardwert für den Form-Container ist 16.</p>
  <p>Der Standardwert für das Tree-Steuerelement ist 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Zusätzlicher vertikaler Abstand zwischen Textzeilen.
 
  <p>Der Standardwert ist 2.</p>
  <p>Der Standardwert für das ComboBox-Steuerelement ist 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Legt fest, welche Ecken des Fokusrechtecks abgerundet werden sollen. Dieser Wert ist ein durch Leerschritte getrennter String, der folgende Werte in beliebigen Kombinationen enthalten kann: <codeph>„tl“</codeph>, <codeph>„tr“</codeph>, <codeph>„bl“</codeph> und <codeph>„br“</codeph>. Beispiel: Um festzulegen, dass die Ecken auf der rechten Seite gerundet werden sollen, die linken Ecken aber spitz bleiben, geben Sie <codeph>„tr br“</codeph> an. Die <codeph>cornerRadius</codeph>-Stileigenschaft legt den Radius der abgerundeten Ecken fest. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für die Klasse nicht überschrieben wird, ist der Standardwert <codeph>„tl tr bl br“</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Legt den Alphatransparenzwert der Fokus-Skin fest. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ComboBox&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ComboBox
    <b>Properties</b>
    dataProvider="null"
    dropdownFactory="<i>ClassFactory that creates an mx.controls.List</i>"
    dropdownWidth="<i>100 or width of the longest text in the dataProvider</i>"
    itemRenderer="null"
    labelField="label"
    labelFunction="null"
    prompt="null"
    rowCount="5"
    selectedIndex="-1"
    selectedItem="null"
    
    <b>Styles</b>
    alternatingItemColors="undefined"
    arrowButtonWidth="22"
    borderColor="0xB7BABC"
    borderThickness="1"
    closeDuration="250"
    closeEasingFunction="undefined"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x919999"
    dropdownBorderColor="undefined"
    dropdownStyleName="comboDropdown"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.4"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x111111"
    leading="0"
    openDuration="250"
    openEasingFunction="undefined"
    paddingTop="0"
    paddingBottom="0"
    paddingLeft="5"
    paddingRight="5"
    rollOverColor="<i>Depends on theme color"</i>
    selectionColor="<i>Depends on theme color"</i>
    selectionDuration="250"
    selectionEasingFunction="undefined"
    textAlign="left|center|right"
    textDecoration="none|underline"
    textIndent="0"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    
    <b>Events</b>
    change="<i>No default</i>"
    close="<i>No default</i>"
    dataChange="<i>No default</i>"
    enter="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
    open="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das ComboBox-Steuerelement umfasst eine Dropdownliste, aus welcher der Benutzer einen einzelnen Wert auswählen kann. Seine Funktion ist der des SELECT-Elements in HTML sehr ähnlich. Das ComboBox-Steuerelement kann bearbeitbar sein; in diesem Fall kann der Benutzer Text, der nicht in der Liste steht, in den TextInput-Teil des Kombinationsfelds eingeben.
 
  <p>Das ComboBox-Steuerelement verfügt über die folgenden Standardgrößeneigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breit genug für den längsten Eintrag in der Dropdownliste im Anzeigebereich des Hauptsteuerelements zuzüglich Dropdownschaltfläche. Ist die Dropdownliste nicht sichtbar, so beruht die Standardhöhe auf der Textgröße der Beschriftung. 
 
               <p>Die Standardhöhe der Dropdownliste beträgt fünf Zeilen oder die Anzahl der Einträge in der Dropdownliste, je nachdem, welcher Wert geringer ist. Die Standardhöhe jedes Eintrags in der Dropdownliste beträgt 22 Pixel.</p></entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>5000 x 5000.</entry>
        </row><row>
           <entry>dropdownWidth</entry>
           <entry>Die Breite des ComboBox-Steuerelements.</entry>
        </row><row>
           <entry>rowCount</entry>
           <entry>5 Zeilen.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleComboBox.mxml"><swfblock conref="examples/SimpleComboBox.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager.</linktext></link></related-links><adobeApiEvent id="mx.controls:ComboBox_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer in der Dropdownliste des ComboBox-Steuerelements einen Bildlauf durchführt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer in der Dropdownliste des ComboBox-Steuerelements einen Bildlauf durchführt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer auf die Dropdownschaltfläche klickt, um die Dropdownliste einzublenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer auf die Dropdownschaltfläche klickt, um die Dropdownliste einzublenden. Wird auch ausgelöst, wenn der Benutzer auf der Tastatur die Tastenkombination „Strg+Nach unten“ drückt, um die Dropdownliste zu öffnen.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Wird ausgelöst bei Rollover des Benutzers über ein Dropdownlistenelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst bei Rollover des Benutzers über ein Dropdownlistenelement. Die <codeph>target</codeph>-Eigenschaft des Ereignisobjekts enthält einen Verweis auf die ComboBox, nicht auf die Dropdownliste.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Wird bei Rollout aus einem Dropdownlistenelement ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollout aus einem Dropdownlistenelement ausgelöst. Die <codeph>target</codeph>-Eigenschaft des Ereignisobjekts enthält einen Verweis auf die ComboBox, nicht auf die Dropdownliste.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.FlexEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  Wird ausgelöst, wenn die editable-Eigenschaft auf „true“ gesetzt wurde und der Benutzer bei der Texteingabe im bearbeitbaren Textfeld die Eingabetaste drückt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die <codeph>editable</codeph>-Eigenschaft auf <codeph>true</codeph> gesetzt ist und der Benutzer während der Eingabe in das bearbeitbare Textfeld die Eingabetaste drückt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die data-Eigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft verändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft verändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Wird ausgelöst, wenn die Dropdownliste aus beliebigen Gründen aufgehoben wird, beispielsweise wenn der Benutzer: ein Element aus der Dropdownliste wählt; außerhalb der Dropdownliste klickt; auf die Dropdownschaltfläche klickt, während diese angezeigt wird; die Esc-Taste drückt, während die Dropdownliste angezeigt wird.
  
 
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die Dropdownliste aus verschiedenen Gründen aufgehoben wird, beispielsweise wenn der Benutzer:
  <ul>
      <li>ein Element aus der Dropdownliste wählt;</li>
      <li>außerhalb der Dropdownliste klickt;</li>
      <li>auf die Dropdownschaltfläche klickt, während diese angezeigt wird;</li>
      <li>die Esc-Taste drückt, während die Dropdownliste angezeigt wird.</li>
  </ul>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Inhalte der ComboBox als Ergebnis einer Benutzerinteraktion ändern, wenn sich die selectedIndex- oder selectedItem-Eigenschaften ändern und, falls das ComboBox-Steuerelement bearbeitbar ist, bei jedem Tastenanschlag während der Eingabe in das Feld.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die Inhalte der ComboBox als Ergebnis einer Benutzerinteraktion ändern, wenn sich die <codeph>selectedIndex</codeph><codeph>- oder selectedItem</codeph>-Eigenschaften ändern und, falls das ComboBox-Steuerelement bearbeitbar ist, bei jedem Tastenanschlag während der Eingabe in das Feld.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ComboBox:ComboBox"><apiName>ComboBox</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ComboBox:protected:calculatePreferredSizeFromData"><apiName>calculatePreferredSizeFromData</apiName><shortdesc>
      Bestimmt die für die Höhe und Breite jedes Eintrags in einer Dropdownliste zu verwendenden Standardwerte, basierend auf der maximalen Größe des Beschriftungstext in den ersten numItems-Elementen im Datenprovider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Ein Objekt, das zwei Eigenschaften enthält: Breite und Höhe.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiDesc>Die Anzahl der zu prüfenden Elemente zur Bestimmung des Werts.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt die für die Höhe und Breite jedes Eintrags in einer Dropdownliste zu verwendenden Standardwerte, basierend auf der maximalen Größe des Beschriftungstexts in den ersten <codeph>numItems</codeph>-Elementen im Datenprovider. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:close"><apiName>close</apiName><shortdesc>
      Schließt die Dropdownliste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>trigger</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
      Schließt die Dropdownliste.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Gibt einen String zurück, der den Elementparameter darstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das Objekt, das den in eine Beschriftung zu konvertierenden Wert enthält. Ist das Element null, gibt diese Methode einen leeren String zurück.
      
      </apiDesc></apiParam><apiParam><apiItemName>rest</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
      Gibt einen String zurück, der den <codeph>item</codeph>-Parameter darstellt.
      
      <p>Diese Methode sucht in der folgenden Reihenfolge nach dem zurückzugebenden Wert:</p>
      
      <ol>
        <li>Wenn eine <codeph>labelFunction</codeph>-Eigenschaft festgelegt wurde, wird der Wert des Elements an die Funktion übergeben.</li>
        <li>Wenn es sich bei dem Element um einen String, eine Zahl, einen booleschen Wert oder eine Funktion handelt, wird das Element zurückgegeben.</li>
        <li>Verfügt das Element über eine Eigenschaft, deren Name durch die <codeph>labelField</codeph>-Eigenschaft des Steuerelements festgelegt wurde, wird der Inhalt dieser Eigenschaft zurückgegeben.</li>
        <li>Verfügt das Element über eine Beschriftungseigenschaft, wird deren Wert zurückgegeben.</li>
      </ol>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:protected:measure"><apiName>measure</apiName><shortdesc>
      Stellt sicher, dass das Steuerelement mindestens 40 Pixel breit ist und hoch genug für eine Textzeile im TextInput-Bereich des Steuerelements, wobei der Mindestwert 22 Pixel beträgt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Stellt sicher, dass das Steuerelement mindestens 40 Pixel breit ist und hoch genug für eine Textzeile im TextInput-Bereich des Steuerelements, wobei der Mindestwert 22 Pixel beträgt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:open"><apiName>open</apiName><shortdesc>
      Zeigt die Dropdownliste an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeigt die Dropdownliste an.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ComboBox:data:get"><apiName>data</apiName><shortdesc>
      Die data-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die <codeph>data</codeph>-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Das ComboBox-Steuerelement verwendet die <codeph>listData</codeph>- und <codeph>data</codeph>-Eigenschaften wie folgt: Befindet sich die ComboBox in einem DataGrid-Steuerelement, so erwartet sie, dass die <codeph>dataField</codeph>-Eigenschaft der Spalte einer Eigenschaft in den Daten zugeordnet ist und setzt <codeph>selectedItem</codeph> auf diese Eigenschaft. Befindet sich die ComboBox in einem List-Steuerelement, so erwartet sie, dass die <codeph>labelField</codeph>-Eigenschaft der Liste einer Eigenschaft in „data“ zugeordnet ist und setzt <codeph>selectedItem</codeph> auf diese Eigenschaft. Andernfalls wird <codeph>selectedItem</codeph> auf „data“ gesetzt.</p>
     
      <p>Diese Eigenschaft kann nicht in MXML eingestellt werden</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer.</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:protected:dropDownStyleFilters:get"><apiName>dropDownStyleFilters</apiName><shortdesc>
      Der Satz an Stilen, der von der ComboBox an dropDown übergeben wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Der Satz an Stilen, der von der ComboBox an dropDown übergeben wird. Diese Stile werden von dropDownStyleName-Stilen außer Kraft gesetzt.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:dropdown:get"><apiName>dropdown</apiName><shortdesc>
      Ein Verweis auf das List-Steuerelement, das als Dropdown in der ComboBox dient.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:ListBase</apiValueClassifier></apiValueDef><apiDesc>
      Ein Verweis auf das List-Steuerelement, das als Dropdown in der ComboBox dient.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dropdownFactory:get"><apiName>dropdownFactory</apiName><shortdesc>
      Die IFactory, die eine von ListBase abgeleitete Instanz zur Verwendung als Dropdown erstellt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      Die IFactory, die eine von ListBase abgeleitete Instanz zur Verwendung als Dropdown erstellt. Der Standardwert ist eine IFactory für List.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dropdownWidth:get"><apiName>dropdownWidth</apiName><shortdesc>
      Breite der Dropdownliste in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Breite der Dropdownliste in Pixeln.
      <p>Der Standardwert ist 100 oder die Breite des längsten Textes im <codeph>dataProvider</codeph>, je nachdem, welcher Wert höher ist.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:itemRenderer:get"><apiName>itemRenderer</apiName><shortdesc>
      Die IFactory, die eine Instanz generiert, welche die Daten für die Dropdownliste des Steuerelements anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      Die IFactory, die eine Instanz generiert, welche die Daten für die Dropdownliste des Steuerelements anzeigt. Sie können diese Eigenschaft verwenden, um einen benutzerdefinierten Elementrenderer für die Dropdownliste festzulegen.
     
      <p>Das Steuerelement verwendet ein List-Steuerelement intern zur Erstellung der Dropdownliste. Der Standard-Elementrenderer für das List-Steuerelement ist die ListItemRenderer-Klasse, welche den mit jedem Element in der Liste verknüpften Text bezieht, sowie ein optionales Symbol. </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.controls.listClasses.xml#ListItemRenderer"><linktext>mx.controls.listClasses.ListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:labelField:get"><apiName>labelField</apiName><shortdesc>
      Name des Felds in den Elementen des dataProvider-Arrays, das als Beschriftung im TextInput-Teil und in der Dropdownliste angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Name des Felds in den Elementen des <codeph>dataProvider</codeph>-Arrays, das als Beschriftung im TextInput-Teil und in der Dropdownliste angezeigt werden soll. Standardmäßig verwendet das Steuerelement für jedes Arrayobjekt eine Eigenschaft namens <codeph>label</codeph> und zeigt sie an.
      <p>Wenn die <codeph>dataProvider</codeph>-Elemente jedoch keine Eigenschaft <codeph>label</codeph> enthalten, können Sie die Eigenschaft <codeph>labelField</codeph> nutzen, um eine andere Eigenschaft zu verwenden.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Eine vom Benutzer bereitgestellte Funktion zur Bestimmung der Beschriftungen einzelner Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Eine vom Benutzer bereitgestellte Funktion zur Bestimmung der Beschriftungen einzelner Elemente. Standardmäßig verwendet das Steuerelement für jedes <codeph>dataProvider</codeph>-Element eine Eigenschaft namens <codeph>label</codeph>, um die Beschriftung der Elemente zu bestimmen. Einige Datensätze enthalten jedoch keine <codeph>label</codeph>-Eigenschaft oder sonstige Eigenschaft, die für die Anzeige als Beschriftung verwendet werden kann.
      <p>Als Beispiel kann ein Datensatz angeführt werden, der die Felder <codeph>lastName</codeph> und <codeph>firstName</codeph> besitzt. Sie möchten aber die vollständigen Namen anzeigen. Mit <codeph>labelFunction</codeph> geben Sie eine Rückruffunktion an, welche die entsprechenden Felder verwendet und einen anzeigbaren String zurückgibt.</p>
     
      <p>labelFunction verwendet ein einziges Argument (das Element im dataProvider) und gibt einen String zurück:</p>
      <pre>
      myLabelFunction(item:Object):String
      </pre>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die listData-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement. Die Komponente kann dann die Eigenschaften <codeph>listData</codeph> und <codeph>data</codeph> nutzen, um die entsprechenden Informationen als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, anzuzeigen.
     
      <p>Sie stellen diese Eigenschaften in MXML oder ActionScript nicht ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:prompt:get"><apiName>prompt</apiName><shortdesc>
      Die Eingabeaufforderung für das ComboBox-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Aufforderung für das ComboBox-Steuerelement. Die Eingabeaufforderung ist ein String, der im TextInput-Teil der ComboBox angezeigt wird, wenn <codeph>selectedIndex</codeph> -1 ist. Für gewöhnlich ist dies ein String wie beispielsweise „Wählen Sie ...“. Wenn keine Eingabeaufforderung erfolgt, setzt das ComboBox-Steuerelement die Eigenschaft <codeph>selectedIndex</codeph> auf 0 und zeigt das erste Element im <codeph>dataProvider</codeph> an.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:rowCount:get"><apiName>rowCount</apiName><shortdesc>
      Die Anzahl der Zeilen, die höchstens in der Liste des ComboBox-Steuerelements sichtbar sein können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>5
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl der Zeilen, die höchstens in der Liste des ComboBox-Steuerelements sichtbar sein können. Sind im dataProvider weniger Einträge vorhanden, werden in der ComboBox nur so viele Elemente angezeigt, wie im dataProvider vorhanden sind.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedLabel:get"><apiName>selectedLabel</apiName><shortdesc>
      Der im TextInput-Teil der ComboBox angezeigte String.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Der im TextInput-Teil der ComboBox angezeigte String. Er wird anhand von Daten unter Verwendung von <codeph>labelField</codeph> oder <codeph>labelFunction</codeph> berechnet.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dataProvider:set"><apiName>dataProvider</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedIndex:set"><apiName>selectedIndex</apiName><shortdesc>
      Die Indexposition des ausgewählten Elements in der Dropdownliste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Indexposition des ausgewählten Elements in der Dropdownliste. Über diese Eigenschaft wird die aktuelle Indexposition festgelegt und die dazugehörige Beschriftung im TextInput-Teil angezeigt.
      <p>Der Standardwert ist -1, wird jedoch ein <codeph>dataProvider</codeph> zugewiesen, wird 0 eingestellt, es sein denn, es wird eine Eingabeaufforderung angezeigt. Ist das Steuerelement bearbeitbar, wird bei Benutzereingaben im TextInput-Teil der Wert der Eigenschaft <codeph>selectedIndex</codeph> in -1 geändert. Liegt der Wert der Eigenschaft <codeph>selectedIndex</codeph> außerhalb des gültigen Bereichs, wird für die Eigenschaft <codeph>selectedIndex</codeph> der letzte Wert im <codeph>dataProvider</codeph> festgelegt.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedItem:set"><apiName>selectedItem</apiName><shortdesc>
      Enthält einen Verweis auf das ausgewählte Element im dataProvider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Enthält einen Verweis auf das ausgewählte Element im n<codeph>dataProvider</codeph>. Bei Daten, die Objekte oder Klasseninstanzen sind, bewirken Änderungen am Objekt bzw. der Instanz eine Änderung des <codeph>dataProvider</codeph> und damit auch seiner Ansichten. Durch das Festlegen des selectedItem selbst wählt die ComboBox dieses Element aus (zeigt es im TextInput-Teil an und legt selectedIndex fest), wenn es im Datenprovider vorkommt.
      <p>Wenn das ComboBox-Steuerelement bearbeitbar ist, ist die <codeph>selectedItem</codeph>-Eigenschaft <codeph>null</codeph>, wenn Text in TextInput eingegeben wird. Ein Wert für diese Eigenschaft ist nur vorhanden, wenn der Benutzer einen Eintrag in der Dropdownliste wählt oder wenn der Wert programmgesteuert festgelegt wird.</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Image"><apiName>Image</apiName><shortdesc>
  Mithilfe des Image-Steuerelements können Sie JPEG-, PNG-, GIF- und SWF-Dateien zur Laufzeit importieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:Image&gt;</code> tag inherits the tag attributes of its superclass,  
  and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:Image
    <strong>Events</strong>
    dataChange="No default"
  /&gt
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:SWFLoader</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des Image-Steuerelements können Sie JPEG-, PNG-, GIF- und SWF-Dateien zur Laufzeit importieren. Diese Dateitypen sowie SVG-Dateien können auch zur Kompilierzeit mithilfe von <codeph>@Embed(source='filename')</codeph> eingebettet werden.
 
  <p><b>Hinweis: </b>Flex umfasst auch das SWFLoader-Steuerelement zum Laden von Flex-Anwendungen. Das Image-Steuerelement wird üblicherweise zum Laden von statischen Grafikdateien und SWF-Dateien verwendet, das SWFLoader-Steuerelement zum Laden von Flex-Anwendungen. Das Image-Steuerelement ist auch für die Verwendung in benutzerdefinierten Elementrenderern und Elementeditoren ausgelegt. </p>
 
  <p><b/>   </p>
 
  <p>Eingebettete Bilder werden automatisch geladen, da sie bereits Teil einer Flex-SWF-Datei sind. Sie erhöhen jedoch die Größe Ihrer Anwendung und verlangsamen den Initialisierungsprozess der Anwendung. Eingebettete Bilder machen es auch nötig, dass die Anwendungen neu kompiliert werden, wenn sich Bilddateien ändern.</p> 
  
  <p>Alternativ zum Einbetten von Ressourcen können diese zur Laufzeit geladen werden. Ressourcen können vom lokalen Dateisystem, auf dem die SWF-Datei ausgeführt wird, geladen werden oder von einer Remote-Quelle, üblicherweise über eine HTTP-Anfrage oder ein Netzwerk. Diese Bilder sind unabhängig von Ihrer Flex-Anwendung und können daher geändert werden, ohne einen erneuten Kompiliervorgang auszulösen, solange die Namen der geänderten Bilder gleich bleiben. Die referenzierten Bilder verlangsamen die ursprüngliche Ladezeit Ihrer Anwendung nicht. Beim Verwenden und Laden der Bilder in Flash Player oder AIR kann es jedoch zu Verzögerungen kommen. </p>
  
  <p>Eine SWF-Datei kann nur auf einen externen Ressourcentyp zugreifen, entweder lokal oder über ein Netzwerk, nicht auf beide Typen gleichzeitig. Sie bestimmen den für die SWF-Datei erlaubten Zugriff durch das <codeph>use-network</codeph>-Flag beim Kompilieren Ihrer Anwendung. Ist das <codeph>use-network</codeph>-Flag auf <codeph>false</codeph> gesetzt, können Sie auf Ressourcen im lokalen Dateisystem zugreifen, nicht aber über das Netzwerk. Der Standardwert ist <codeph>true</codeph>; er erlaubt den Zugriff auf Ressourcen über das Netzwerk, nicht aber über das lokale Dateisystem. </p>
  
  <p>Beim Laden von Bildern zur Laufzeit sollten Sie sich der Sicherheitseinschränkungen von Flash Player und AIR bewusst sein. Beispielsweise können Sie in Flash Player ein Bild aus einer beliebigen Domäne unter Verwendung einer URL laden, die Sicherheitseinstellungen erlauben Ihrem Code aber nicht, auf die Bitmapdaten des Bilds zuzugreifen, wenn diese nicht aus derselben Domäne wie die Anwendung stammen. Um auf Bitmapdaten von Bildern auf anderen Servern zuzugreifen, müssen Sie eine crossdomain.xml-Datei verwenden. </p>
 
  <p>Die PNG- und GIF-Formate unterstützen auch den Alphakanal zum Erstellen transparenter Bilder.</p>
 
  <p>Wird das Image-Steuerelement als Elementrenderer, in dem Elemente abgelegt werden können, in einem List-Steuerelement verwendet, setzen Sie die Zeilenhöhe entweder explizit mithilfe der <codeph>rowHeight</codeph>-Eigenschaft oder Sie setzen die <codeph>variableRowHeight</codeph>-Eigenschaft des List-Steuerelements auf <codeph>true</codeph>, um die Größe der Zeile richtig einzustellen.</p>
 
  <p>Sollten aufgrund von Image-Objekten Probleme mit dem Arbeitsspeicher auftreten, versuchen Sie, die <codeph>source</codeph>-Eigenschaft explizit auf null zu setzen, wenn die Verwendung des Image-Objekts in Ihrer Anwendung abgeschlossen ist.</p>
  
  </apiDesc><example conref="SimpleImage.mxml"><swfblock conref="examples/SimpleImage.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#SWFLoader"><linktext>mx.controls.SWFLoader</linktext></link></related-links><adobeApiEvent id="mx.controls:Image_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Wird ausgelöst, wenn sich die data-Eigenschaft verändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.
 
  <p>Wenn Sie eine Komponente als Elementrenderer verwenden, enthält die <codeph>data</codeph>-Eigenschaft die anzuzeigenden Daten. Sie können auf dieses Ereignis warten und die Komponente aktualisieren, wenn sich die <codeph>data</codeph>-Eigenschaft ändert.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Image:Image"><apiName>Image</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:Image:data:get"><apiName>data</apiName><shortdesc>
      Die data-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Die <codeph>data</codeph>-Eigenschaft erlaubt es Ihnen, einen Wert an die Komponente zu übergeben, wenn Sie diese in einem Elementrenderer oder -editor verwenden. Normalerweise verwenden Sie Datenbindung, um ein Feld der <codeph>data</codeph>-Eigenschaft an eine Eigenschaft dieser Komponente zu binden.
     
      <p>Wenn das Steuerelement als Elementrenderer, in dem Elemente abgelegt werden können, verwendet wird, verwendet Flex die <codeph>listData.label</codeph>-Eigenschaft, falls vorhanden, als Wert der <codeph>source</codeph>-Eigenschaft dieses Steuerelements, oder verwenden Sie die <codeph>data</codeph>-Eigenschaft als <codeph>source</codeph>-Eigenschaft.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer.</linktext></link></related-links></apiValue><apiValue id="mx.controls:Image:listData:get"><apiName>listData</apiName><shortdesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die listData-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Wenn eine Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird, initialisiert Flex die <codeph>listData</codeph>-Eigenschaft der Komponente mit den passenden Daten aus dem List-Steuerelement. Die Komponente kann dann mithilfe der <codeph>listData</codeph>-Eigenschaft die übrigen Eigenschaften des Elementrenderers, in dem Elemente abgelegt werden können, initialisieren.
     
      <p>Sie stellen diese Eigenschaften nicht in MXML oder ActionScript ein. Flex erledigt dies, wenn die Komponente als Elementrenderer oder Elementeditor, in dem Elemente abgelegt werden können, verwendet wird.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:HSlider"><apiName>HSlider</apiName><shortdesc>	
  Mithilfe des HSlider-Steuerelements können Benutzer einen Wert auswählen, indem Sie einen Schieberegler zwischen den beiden Endpunkten der Schiebereglerleiste bewegen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HSlider" replacement="spark.components.HSlider" since="4.0">
	</Alternative><styles><style enumeration="left,top,right,bottom" inherit="no" name="dataTipPlacement" owner="mx.controls:HSlider" playerVersion="Flash9" type="String">
<description>
  Die Position des Datentipps in Relation zum Schieberegler. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"right"</codeph>, <codeph>"top"</codeph> und <codeph>"bottom"</codeph>.
 
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HSlider&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:HSlider
    <strong>Styles</strong>
    dataTipPlacement="top"
  /&gt;
  </pre>
  </p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.sliderClasses:Slider</apiBaseClassifier></apiClassifierDef><apiDesc>	
  Beim HSlider-Steuerelement können Benutzer einen Wert auswählen, indem sie einen Schieberegler zwischen den beiden Endpunkten der Schiebereglerleiste bewegen. Der aktuelle Wert der Schiebereglerleiste wird von der relativen Position des Schiebereglers zwischen den Endpunkten der Schiebereglerleiste bestimmt, die dem Mindest- und Höchstwert der Schiebereglerleiste entsprechen.
 
  <p>Die Schiebereglerleiste ermöglicht einen fortlaufenden Wertebereich zwischen dem Mindest- und dem Höchstwert; die Werte können auch auf bestimmte Intervalle zwischen Mindest- und Höchstwerten beschränkt werden. Er kann entlang der Leiste Markierungen in festgelegten Intervallen aufweisen. Diese Markierungen berücksichtigen nicht die zulässigen Werte der Schiebereglerleiste. Der aktuelle Wert der Schiebereglerleiste wird eventuell mithilfe eines Datentipps angezeigt.</p>
  	
  <p>Das HSlider-Steuerelement bewegt sich horizontal. Die Schiebereglerleiste verläuft von links nach rechts und die Beschriftungen und Markierungen befinden sich oberhalb oder unterhalb der Leiste.</p>
  
  <p>Das HSlider-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Merkmal</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Breite: 250 Pixel; Höhe: hoch genug für den Schieberegler und damit verbundene Beschriftungen.</entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>Keine</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>Keine</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleImageHSlider.mxml"><swfblock conref="examples/SimpleImageHSlider.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#VSlider"><linktext>mx.controls.VSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.controls.sliderClasses.xml#SliderThumb"><linktext>mx.controls.sliderClasses.SliderThumb</linktext></link><link href="mx.controls.sliderClasses.xml#SliderDataTip"><linktext>mx.controls.sliderClasses.SliderDataTip</linktext></link><link href="mx.controls.sliderClasses.xml#SliderLabel"><linktext>mx.controls.sliderClasses.SliderLabel</linktext></link></related-links><apiConstructor id="mx.controls:HSlider:HSlider"><apiName>HSlider</apiName><shortdesc>
	  Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Konstruktor.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:DataGrid"><apiName>DataGrid</apiName><shortdesc>
  Das DataGrid-Steuerelement ist einer Liste sehr ähnlich, allerdings kann mehr als eine Spalte mit Daten angezeigt werden, sodass auch Objekte mit mehreren Eigenschaften angezeigt werden können.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="cornerRadius"/><Exclude kind="property" name="showDataTips"/><Exclude kind="property" name="offscreenExtraRowsOrColumnsChanged"/><Exclude kind="property" name="offscreenExtraColumnsRight"/><Exclude kind="property" name="offscreenExtraColumnsLeft"/><Exclude kind="property" name="offscreenExtraColumns"/><Exclude kind="property" name="offscreenExtraRowsBottom"/><Exclude kind="property" name="offscreenExtraRowsTop"/><Exclude kind="property" name="offscreenExtraRows"/><Exclude kind="property" name="offscreenExtraRowsOrColumns"/><Exclude kind="property" name="labelField"/><Exclude kind="property" name="iconFunction"/><Exclude kind="property" name="iconField"/><Exclude kind="property" name="columnWidth"/><Exclude kind="property" name="columnCount"/><DefaultProperty name="dataProvider"/><styles><style inherit="no" name="headerDragProxyStyleName" owner="mx.controls:DataGrid" playerVersion="Flash9" type="String">
<description>
  Name einer CSS-Stildeklaration, die Aspekte des Aussehens einer Spalte beim Ziehen an eine andere Position steuert.
 
  </description>
<default>"headerDragProxyStyle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnDropIndicatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse, die als Skin verwendet werden soll, die anzeigt, dass eine Spalte an der aktuellen Position abgelegt werden kann.
 
  </description>
<default>mx.skins.halo.DataGridColumnDropIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="stretchCursor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse, die als Skin für den Cursor verwendet werden soll, der anzeigt, dass die Größe einer Spalte geändert werden kann. Der Standardwert ist das „cursorStretch“-Symbol aus der Datei Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="sortArrowSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse, die als Skin für den Pfeil verwendet werden soll, der die Sortierrichtung der Spalte anzeigt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalLockedSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Skin, die das Aussehen der Trennlinie zwischen gesperrten und nicht gesperrten Spalten im DataGrid-Steuerelement definiert. Standardmäßig werden im DataGrid-Steuerelement die <codeph>drawHorizontalLine()</codeph>- und <codeph>drawVerticalLine()</codeph>-Methode zum Zeichnen der Trennlinien verwendet.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Skin, die das Aussehen der Trennlinien zwischen Spalten im DataGrid-Steuerelement definiert. Standardmäßig werden im DataGrid-Steuerelement die <codeph>drawHorizontalLine()</codeph>- und <codeph>drawVerticalLine()</codeph>-Methode zum Zeichnen der Trennlinien verwendet.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalLockedSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Skin, die das Aussehen der Trennlinie zwischen gesperrten und nicht gesperrten Zeilen im DataGrid-Steuerelement definiert. Standardmäßig werden im DataGrid-Steuerelement die <codeph>drawHorizontalLine()</codeph>- und <codeph>drawVerticalLine()</codeph>-Methode zum Zeichnen der Trennlinien verwendet.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Skin, die das Aussehen der Trennlinie zwischen Zeilen im DataGrid-Steuerelement definiert. Standardmäßig werden im DataGrid-Steuerelement die <codeph>drawHorizontalLine()</codeph>- und <codeph>drawVerticalLine()</codeph>-Methode zum Zeichnen der Trennlinien verwendet.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Skin, die das Aussehen der Trennlinie zwischen Spaltenüberschriften im DataGrid-Steuerelement definiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerBackgroundSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Skin, die das Aussehen des Hintergrunds von Spaltenüberschriften im DataGrid-Steuerelement definiert. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnResizeSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Klasse, die als Skin für Spalten während der Größenänderung verwendet werden soll.
  </description>
<default>mx.skins.halo.DataGridColumnResizeSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerStyleName" owner="mx.controls:DataGrid" playerVersion="Flash9" type="String">
<description>
  Der Name einer CSS-Stildeklaration für die Steuerung anderer Aspekte der Darstellung der Spaltenüberschriften.
  </description>
<default>"dataGridStyles"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Farbe des Hintergrunds für eine Zeile, wenn der Benutzer einen Elementrenderer in der Zeile wählt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Farbe des Zeilenhintergrunds bei Rollover. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="headerColors" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Array mit zwei Farben, mit denen der Farbverlauf für den Hintergrund der Überschrift gezeichnet werden soll. Die erste Farbe ist die Farbe für den oberen Teil. Die zweite Farbe ist die Farbe für den unteren Teil.
  </description>
<default>[0xFFFFFF, 0xE6E6E6]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="horizontalGridLineColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Die Farbe der horizontalen Rasterlinien.
  </description>
<default>0xF7F7F7
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="verticalGridLineColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Die Farbe der vertikalen Rasterlinien. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalGridLines" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Boolean">
<description>
  Ein Flag, das anzeigt, ob horizontale Rasterlinien zwischen den Zeilen angezeigt werden sollen. Ist <codeph>true</codeph> festgelegt, werden horizontale Rasterlinien angezeigt. Ist <codeph>false</codeph> festgelegt, werden die horizontalen Rasterlinien ausgeblendet.
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalGridLines" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Boolean">
<description>
  Ein Flag, das anzeigt, ob vertikale Rasterlinien zwischen den Spalten angezeigt werden sollen. Ist <codeph>true</codeph> festgelegt, werden vertikale Rasterlinien angezeigt. Ist <codeph>false</codeph> festgelegt, werden vertikale Rasterlinien ausgeblendet.
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="defaultDataGridItemRenderer" owner="mx.controls:DataGrid" playerVersion="Flash10" type="Class">
<description>
  Name der Klasse des zu verwendenden itemRenderer, falls für eine Spalte oder die zugehörige Spaltenüberschrift nicht angegeben. Dies ist eine Methode zum Festlegen eines itemRenderer für eine Gruppe von DataGrids, um diesen nicht für jedes DataGrid einzeln festlegen zu müssen. Wenn Sie die itemRenderer-Eigenschaft des DataGrid festlegen, hat sie Vorrang vor diesem Wert.
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="defaultDataGridItemEditor" owner="mx.controls:DataGrid" playerVersion="Flash10" type="Class">
<description>
  Name der Klasse des zu verwendenden itemEditor, falls für eine Spalte nicht angegeben. Dies ist eine Methode zum Festlegen eines Elementeditors für eine Gruppe von DataGrids, um diesen nicht für jedes DataGrid einzeln festlegen zu müssen. Wenn Sie die itemEditor-Eigenschaft von DataGridColumn festlegen, hat sie Vorrang vor diesem Wert.
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer deaktivierten Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein deaktiviertes CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines deaktivierten ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines deaktivierten DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Farbe des Symbols in einer Skin. Beispiel: Dieser Stil wird von der CheckBoxIcon-Skinklasse verwendet, um das Häkchen für ein CheckBox-Steuerelement zu zeichnen, er wird von der ComboBoxSkin-Klasse verwendet, um den Abwärts-Pfeil eines ComboBox-Steuerelements zu zeichnen und er wird von der DateChooserMonthArrowSkin-Skinklasse verwendet, um den Monatspfeil eines DateChooser-Steuerelements zu zeichnen. Der Standardwert hängt von der Komponentenklasse ab. Wenn er von der Klasse nicht außer Kraft gesetzt wird, ist er <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:DataGrid&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except for <code>labelField</code>, 
  <code>iconField</code>, and <code>iconFunction</code>, and adds the 
  following tag attributes:
  </p>
  <pre>
  &lt;mx:DataGrid
    <b>Properties</b>
    columns="<i>From dataProvider</i>"
    draggableColumns="true|false"
    editable="false|true"
    editedItemPosition="<code>null</code>"
    horizontalScrollPosition="null"
    imeMode="null"
    itemEditorInstance="null"
    minColumnWidth="<code>NaN</code>"
    resizableColumns="true|false"
    sortableColumns="true|false"
    
    <b>Styles</b>
    backgroundDisabledColor="0xEFEEEF"
    columnDropIndicatorSkin="DataGridColumnDropIndicator"
    columnResizeSkin="DataGridColumnResizeSkin"
    disabledIconColor="0x999999"
    headerColors="[#FFFFFF, #E6E6E6]"
    headerDragProxyStyleName="headerDragProxyStyle"
    headerSeparatorSkin="DataGridHeaderSeparator"
    headerStyleName="dataGridStyles"
    horizontalGridLineColor="0xF7F7F7"
    horizontalGridLines="false|true"
    horizontalLockedSeparatorSkin="undefined"
    horizontalSeparatorSkin="undefined"
    iconColor="0x111111"
    rollOverColor="0xB2E1FF"
    selectionColor="0x7FCEFF"
    sortArrowSkin="DataGridSortArrow"
    stretchCursor="<i>"cursorStretch" symbol from the Assets.swf file</i>"
    verticalGridLineColor="0xCCCCCC"
    verticalGridLines="false|true"
    verticalLockedSeparatorSkin="undefined"
    verticalSeparatorSkin="undefined"
     
    <b>Events</b>
    columnStretch="<i>No default</i>"
    headerRelease="<i>No default</i>"
    headerShift="<i>No default</i>"
    itemEditBegin="<i>No default</i>"
    itemEditBeginning="<i>No default</i>" 
    itemEditEnd="<i>No default</i>"
    itemFocusIn="<i>No default</i>"
    itemFocusOut="<i>No default</i>"
  /&gt;
   
  <b>The following DataGrid code sample specifies the column order:</b>
  &lt;mx:DataGrid&gt;
    &lt;mx:dataProvider&gt;
        &lt;mx:Object Artist="Pavement" Price="11.99"
          Album="Slanted and Enchanted"/&gt;
        &lt;mx:Object Artist="Pavement"
          Album="Brighten the Corners" Price="11.99"/&gt;
    &lt;/mx:dataProvider&gt;
    &lt;mx:columns&gt;
        &lt;mx:DataGridColumn dataField="Album"/&gt;
        &lt;mx:DataGridColumn dataField="Price"/&gt;
    &lt;/mx:columns&gt;
  &lt;/mx:DataGrid&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls.dataGridClasses:DataGridBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das <codeph>DataGrid</codeph>-Steuerelement ist einer Liste sehr ähnlich, allerdings kann mehr als eine Spalte mit Daten angezeigt werden, sodass auch Objekte mit mehreren Eigenschaften angezeigt werden können.
  <p>
  Das DataGrid-Steuerelement weist die folgenden Merkmale auf:
  <ul>
  <li>Spalten mit unterschiedlicher Breite oder einheitlicher, nicht veränderbarer Breite</li>
  <li>Spalten, deren Größe vom Benutzer zur Laufzeit angepasst werden kann. </li>
  <li>Spalten, die vom Benutzer zur Laufzeit neu angeordnet werden können. </li>
  <li>Optional anpassbare Spaltenüberschriften</li>
  <li>Möglichkeit, für beliebige Spalten einen benutzerdefinierten Elementrenderer zu verwenden, um andere Daten in anderer Form als Text anzuzeigen.</li>
  <li>Unterstützung für die Sortierung von Daten durch Klicken auf eine Spalte</li>
  </ul>
  </p>
  Das DataGrid-Steuerelement dient zur Anzeige von Daten und nicht als Layout-Tool (wie beispielsweise eine HTML-Tabelle). Diese Layout-Tools werden im mx.containers-Paket bereitgestellt.
  
  <p>Beim DataGrid-Steuerelement stehen die folgenden Standardeigenschaften für die Größe zur Verfügung:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Für leere Spalten beträgt die Standardbreite 300 Pixel. Für Spalten, die Daten enthalten, ohne dass eine bestimmte Breite definiert wurde, beträgt die Standardbreite 100 Pixel pro Spalte. Die Breite des DataGrid wird nach Möglichkeit so angepasst, dass alle Spalten Platz finden. Standardmäßig werden 7 Zeilen einschließlich der Kopfzeile angezeigt. Jede Zeile ist standardmäßig 20 Pixel hoch.
           </entry>
        </row><row>
           <entry>Minimale Größe</entry>
           <entry>0 Pixel.</entry>
        </row><row>
           <entry>Maximale Größe</entry>
           <entry>5000 x 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleDataGrid.mxml"><swfblock conref="examples/SimpleDataGrid.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridItemRenderer"><linktext>mx.controls.dataGridClasses.DataGridItemRenderer</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridColumn"><linktext>mx.controls.dataGridClasses.DataGridColumn</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridDragProxy"><linktext>mx.controls.dataGridClasses.DataGridDragProxy</linktext></link><link href="mx.events.xml#DataGridEvent"><linktext>mx.events.DataGridEvent</linktext></link></related-links><adobeApiEvent id="mx.controls:DataGrid_mx.events.IndexChangedEvent.HEADER_SHIFT_headerShift"><apiName>headerShift</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste loslässt, nachdem er auf eine Spaltenüberschrift geklickt und die Spalte an eine neue Position gezogen hat (wodurch sie an eine neue Indexposition verschoben wird).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.IndexChangedEvent.HEADER_SHIFT</apiEventType><adobeApiEventClassifier>mx.events.IndexChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste loslässt, nachdem er auf eine Spaltenüberschrift geklickt und die Spalte an eine neue Position gezogen hat (wodurch sie an eine neue Indexposition verschoben wird).
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.HEADER_RELEASE_headerRelease"><apiName>headerRelease</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste auf einer Spaltenüberschrift loslässt, um das Steuerelement anzuweisen, den Inhalt des Rasters anhand des Inhalts dieser Spalte zu sortieren.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.HEADER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste auf einer Spaltenüberschrift loslässt, um das Steuerelement anzuweisen, den Inhalt des Rasters anhand des Inhalts dieser Spalte zu sortieren. Wird nur ausgelöst, wenn die Spalte sortierbar ist und der Datenprovider die Sortierung unterstützt. Beim DataGrid-Steuerelement ist eine Standardprozedur für dieses Ereignis vorhanden, die eine Sortierung nach einer einzelnen Spalte implementiert. Für Sortierungen nach mehreren Spalten können Sie die <codeph>preventDefault()</codeph>-Methode aufrufen, um die Sortierung nach einer Spalte zu verhindern, und anschließend mithilfe der <codeph>sort</codeph>-Eigenschaft des Datenproviders die benötigten Einstellungen vornehmen.
 <p>
 <b>Hinweis</b>: Die Pfeile für die Sortierung werden durch die Standardereignisprozedur für das headerRelease-Ereignis definiert. Wenn Sie die <codeph>preventDefault</codeph>-Methode in der Ereignisprozedur aufrufen, werden die Pfeile nicht gezeichnet.
 </p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.COLUMN_STRETCH_columnStretch"><apiName>columnStretch</apiName><shortdesc>
  Wird ausgelöst, wenn ein Benutzer die Breite einer Spalte ändert. Dies weist darauf hin, dass die Menge der in dieser Spalte angezeigten Daten sich möglicherweise geändert hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.COLUMN_STRETCH</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Benutzer die Breite einer Spalte ändert. Dies weist darauf hin, dass die Menge der in dieser Spalte angezeigten Daten sich möglicherweise geändert hat. Ist für <codeph>horizontalScrollPolicy</codeph> der Wert <codeph>"off"</codeph> eingestellt, werden die übrigen Spalten breiter oder schmaler angezeigt, um die Änderung an der Breite dieser einen Spalte auszugleichen. Dabei wird ebenfalls dieses Ereignis ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><shortdesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus verliert. Dies ist der Fall, wenn der Benutzer auf ein anderes Element im DataGrid-Steuerelement oder außerhalb des Steuerelements klickt oder wenn er mithilfe der Tastatur zu einem anderen Element im DataGrid-Steuerelement oder außerhalb davon navigiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus verliert. Dies ist der Fall, wenn der Benutzer auf ein anderes Element im DataGrid-Steuerelement oder außerhalb des Steuerelements klickt oder wenn er mithilfe der Tastatur zu einem anderen Element im DataGrid-Steuerelement oder außerhalb davon navigiert. Wird nur ausgelöst, wenn das Element bearbeitbar ist.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><shortdesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus erhält. Dies ist der Fall, wenn der Benutzer auf ein Element im DataGrid-Steuerelement klickt oder mithilfe der Tastatur zu einem solchen Element navigiert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Elementrenderer den Fokus erhält. Dies ist der Fall, wenn der Benutzer auf ein Element im DataGrid-Steuerelement klickt oder mithilfe der Tastatur zu einem solchen Element navigiert. Wird nur ausgelöst, wenn das Element bearbeitbar ist.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><shortdesc>
  Wird ausgelöst, wenn die Bearbeitungssitzung eines Elements endet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die Bearbeitungssitzung eines Elements endet.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDITOR_CREATE_itemEditorCreate"><apiName>itemEditorCreate</apiName><shortdesc>
  Wird kurz nach der Instanziierung des Elementeditors ausgelöst.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDITOR_CREATE</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird kurz nach der Instanziierung des Elementeditors ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><shortdesc>
  Wird ausgelöst, wenn die editedItemPosition-Eigenschaft gesetzt wurde und das Element bearbeitet werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die <codeph>editedItemPosition</codeph>-Eigenschaft gesetzt wurde und das Element bearbeitet werden kann.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste freigibt, während sich der Mauszeiger über einem Elementrenderer befindet, mithilfe der Tabulatortaste zum DataGrid-Steuerelement wechselt oder sich im DataGrid-Steuerelement befindet oder auf andere Weise mit der Bearbeitung eines Elements beginnt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer die Maustaste freigibt, während sich der Mauszeiger über einem Elementrenderer befindet, mithilfe der Tabulatortaste zum DataGrid-Steuerelement wechselt oder sich im DataGrid-Steuerelement befindet oder auf andere Weise mit der Bearbeitung eines Elements beginnt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DataGrid:DataGrid"><apiName>DataGrid</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:DataGrid:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      Wird über die updateDisplayList()-Methode aufgerufen, um die Größe und Position von listContent anzupassen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Die Breite des listContent. Bei diesem Wert werden Änderungen an der Breite ignoriert, die aus externen Komponenten oder Einstellungen stammen.
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Die Höhe des listContent. Bei diesem Wert werden Änderungen an der Höhe ignoriert, die aus externen Komponenten oder Einstellungen stammen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Wird über die <codeph>updateDisplayList()</codeph>-Methode aufgerufen, um die Größe und Position von listContent anzupassen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:clearSeparators"><apiName>clearSeparators</apiName><shortdesc>
      Entfernt die Trennlinien zwischen Spaltenüberschriften, mit deren Hilfe der Benutzer normalerweise die Breite von Spalten ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Entfernt die Trennlinien zwischen Spaltenüberschriften, mit deren Hilfe der Benutzer normalerweise die Breite von Spalten ändert.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:createItemEditor"><apiName>createItemEditor</apiName><shortdesc>
      Erstellt den Elementeditor für den Elementrenderer an der editedItemPosition und verwendet dazu den von der itemEditor-Eigenschaft angegebenen Editor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Spalte im Datenprovider des zu bearbeitenden Elements.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Zeile im Datenprovider des zu bearbeitenden Elements.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt den Elementeditor für den Elementrenderer an der <codeph>editedItemPosition</codeph> und verwendet dazu den von der <codeph>itemEditor</codeph>-Eigenschaft angegebenen Editor.
     
      <p>Diese Methode stellt als Editorinstanz die <codeph>itemEditorInstance</codeph>-Eigenschaft ein.</p>
     
      <p>Diese Methode kann nur von einem Ereignis-Listener für das Ereignis <codeph>itemEditBegin</codeph> aufgerufen werden. Stellen Sie die <codeph>editedItemPosition</codeph>-Eigenschaft zur Generierung des <codeph>itemEditBegin</codeph>-Ereignisses ein, um den Editor zu einem anderen Zeitpunkt zu erzeugen.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:deriveComplexFieldReference"><apiName>deriveComplexFieldReference</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>complexFieldNameComponents</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:destroyItemEditor"><apiName>destroyItemEditor</apiName><shortdesc>
      Mit dieser Methode wird ein Elementeditor geschlossen, der zurzeit für einen Elementrenderer geöffnet ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Mit dieser Methode wird ein Elementeditor geschlossen, der zurzeit für einen Elementrenderer geöffnet ist. Diese Methode wird normalerweise nur von einem Ereignis-Listener für das <codeph>itemEditEnd</codeph>-Ereignis aufgerufen, nachdem bereits die <codeph>preventDefault()</codeph>-Methode aufgerufen wurde, um den Start des standardmäßigen Ereignis-Listener zu verhindern.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawColumnBackground"><apiName>drawColumnBackground</apiName><shortdesc>
      Zeichnet den Hintergrund einer Spalte in der angegebenen Farbe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite, das ein Anzeigeobjekt mit den Grafiken für die Spalte enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Spalte im Satz angezeigter Spalten. Die ganz links stehende sichtbare Spalte hat die Spaltenindexposition 0. Dadurch wird der Überblick über die für das Zeichnen des Hintergrunds verwendeten Objekte bewahrt, sodass für eine bestimmte Spalte dasselbe Anzeigeobjekt wiederverwendet werden kann, auch wenn sich die Indexposition des DataGridColumn für die Spalte geändert hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die vorgeschlagene Indikatorfarbe.
     
      </apiDesc></apiParam><apiParam><apiItemName>column</apiItemName><apiOperationClassifier>mx.controls.dataGridClasses:DataGridColumn</apiOperationClassifier><apiDesc>Die Spalte des DataGrid-Steuerelements, für das Sie den Hintergrund zeichnen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Hintergrund einer Spalte in der angegebenen Farbe. Bei dieser Implementierung wird als Unterelement des Eingabe-Sprite eine Form erstellt und mit der entsprechenden Farbe gefüllt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawHeaderBackground"><apiName>drawHeaderBackground</apiName><shortdesc>
      Zeichnet den Hintergrund der Header in das gegebene UIComponent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>headerBG</apiItemName><apiOperationClassifier>mx.core:UIComponent</apiOperationClassifier><apiDesc>Ein UIComponent-Objekt, das die Hintergrundgrafiken der Spaltenüberschrift emthält.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet den Hintergrund der Spaltenüberschriften in das gegebene UIComponent-Objekt. Wird die Breite der Komponente geändert, kann die gezeichnete Grafik horizontal skaliert werden oder diese Methode wird erneut aufgerufen, um die Grafik mit einer anderen Breite und/oder Höhe neu zu zeichnen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawHorizontalLine"><apiName>drawHorizontalLine</apiName><shortdesc>
      Zeichnet eine Linie zwischen Zeilen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite, das ein Anzeigeobjekt mit den Grafiken für die Zeile enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Zeile im Satz angezeigter Zeilen. Der Header zählt nicht mit, die oberste sichtbare Zeile hat die Zeilenindexposition 0. Dadurch wird der Überblick über die für das Zeichnen des Hintergrunds verwendeten Objekte bewahrt, sodass für eine bestimmte Zeile ein Anzeigeobjekt wiederverwendet werden kann, auch wenn sich die Indexposition des Elements, das die Zeile darstellt, geändert hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die vorgeschlagene Indikatorfarbe.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die für den Hintergrund vorgeschlagene Y-Position.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet eine Linie zwischen Zeilen. Durch diese Implementierung wird eine Linie direkt in das gegebene Sprite gezeichnet. Das Sprite wurde geleert, bevor Linien darin gezeichnet werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawLinesAndColumnBackgrounds"><apiName>drawLinesAndColumnBackgrounds</apiName><shortdesc>
      Zeichnet Linien zwischen Spalten und Hintergrundeinstellungen für Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeichnet Linien zwischen Spalten und Hintergrundeinstellungen für Spalten. Bei dieser Implementierung werden nach Bedarf die Methoden <codeph>drawHorizontalLine()</codeph>, <codeph>drawVerticalLine()</codeph> und <codeph>drawColumnBackground()</codeph> aufgerufen. Ein Sprite, das alle diese Grafiken enthält, wird erstellt und als untergeordnetes Element von listContent ganz vorn in der z-Reihenfolge hinzugefügt.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawLinesAndColumnGraphics"><apiName>drawLinesAndColumnGraphics</apiName><shortdesc>
      Zeichnet Linien zwischen Spalten und Hintergrundeinstellungen für Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>contentHolder</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBaseContentHolder</apiOperationClassifier><apiDesc>Ein Container aller Elementrenderer und -editoren des DataGrid-Elements.
      </apiDesc></apiParam><apiParam><apiItemName>visibleColumns</apiItemName><apiType value="Array"/><apiDesc>Ein Array der sichtbaren Spalten im DataGrid.
      </apiDesc></apiParam><apiParam><apiItemName>separators</apiItemName><apiType value="Object"/><apiDesc>Ein Objekt, das die Trennlinien oben, unten, links und rechts zwischen den Spalten und Zeilen definiert.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet Linien zwischen Spalten und Hintergrundeinstellungen für Spalten. Bei dieser Implementierung werden nach Bedarf die Methoden <codeph>drawHorizontalLine()</codeph>, <codeph>drawVerticalLine()</codeph> und <codeph>drawColumnBackground()</codeph> aufgerufen. Ein Sprite, das alle diese Grafiken enthält, wird erstellt und als untergeordnetes Element von listContent ganz vorn in der z-Reihenfolge hinzugefügt.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawRowBackground"><apiName>drawRowBackground</apiName><shortdesc>
      Zeichnet einen Zeilenhintergrund in der angegebenen Farbe und an der angegebenen Position und Höhe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite, das ein Anzeigeobjekt mit den Grafiken für die Zeile enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Zeile im Satz angezeigter Zeilen. Der Header zählt nicht mit, die oberste sichtbare Zeile hat die Zeilenindexposition 0. Dadurch wird der Überblick über die für das Zeichnen des Hintergrunds verwendeten Objekte bewahrt, sodass für eine bestimmte Zeile ein Anzeigeobjekt wiederverwendet werden kann, auch wenn sich die Indexposition des Elements, das die Zeile darstellt, geändert hat.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Die für den Hintergrund vorgeschlagene Y-Position.
     
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die vorgeschlagene Indikatorhöhe.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die vorgeschlagene Indikatorfarbe.
     
      </apiDesc></apiParam><apiParam><apiItemName>dataIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements für diese Zeile im Datenprovider. Mit dieser Funktion können Sie z. B. jedes zehnte Element mit einer abweichenden Farbe markieren oder ähnliche Aufgaben ausführen.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet einen Zeilenhintergrund in der angegebenen Farbe und an der angegebenen Position und Höhe. Bei dieser Implementierung wird als Unterelement des Eingabe-Sprite eine Form erstellt und mit der entsprechenden Farbe gefüllt. Diese Methode verwendet auch die <codeph>backgroundAlpha</codeph>-Stileigenschaftseinstellungen zum Bestimmen der Transparenz der Hintergrundfarbe.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawSeparators"><apiName>drawSeparators</apiName><shortdesc>
      Erstellt Trennzeichen für Spaltenüberschriften, mit deren Hilfe der Benutzer normalerweise die Breite der Spalten ändert, und zeigt sie an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Erstellt und zeigt die Trennstriche der Spaltenüberschriften an, die der Benutzer verwendet, um die Spaltenbreite zu ändern. In dieser Implementierung wird dasselbe Sprite wie für Hintergrund von Zeilen und Spalten verwendet. Zugleich werden Instanzen von <codeph>headerSeparatorSkin</codeph> hinzugefügt und Maus-Listener mit diesen verknüpft, damit die Benutzereingabe zum Ändern der Spaltenbreite erkannt wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawVerticalLine"><apiName>drawVerticalLine</apiName><shortdesc>
      Zeichnet Linien zwischen Spalten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Ein Sprite, das ein Anzeigeobjekt mit den Grafiken für die Zeile enthält.
     
      </apiDesc></apiParam><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Die Indexposition der Spalte im Satz angezeigter Spalten. Die ganz links stehende sichtbare Spalte hat die Spaltenindexposition 0.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Die vorgeschlagene Indikatorfarbe.
     
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Die für den Hintergrund vorgeschlagene X-Position.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeichnet Linien zwischen Spalten. Durch diese Implementierung wird eine Linie direkt in das gegebene Sprite gezeichnet. Das Sprite wurde geleert, bevor Linien darin gezeichnet werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:getCurrentDataValue"><apiName>getCurrentDataValue</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:isComplexColumn"><apiName>isComplexColumn</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:isItemEditable"><apiName>isItemEditable</apiName><shortdesc>
      Bestimmt, ob die Bearbeitung eines dataprovider-Elements nach einzelnen Zeilen zugelassen werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Standardmäßig wird <codeph>true</codeph> zurückgegeben, wenn für die <codeph>editable</codeph>-Eigenschaft des DataGrid der Wert <codeph>true</codeph> eingestellt und das Datenobjekt nicht <codeph>null</codeph> ist.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement Bei der Standardimplementierung dieser Methode wird <codeph>false</codeph> zurückgegeben, wenn das Datenobjekt <codeph>null</codeph> ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob die Bearbeitung eines dataprovider-Elements nach einzelnen Zeilen zugelassen werden soll. In der Standardimplementierung dieser Methode wird lediglich die <codeph>editable</codeph>-Eigenschaft des DataGrid geprüft und <codeph>false</codeph> zurückgegeben, wenn für <codeph>editable</codeph> der Wert <codeph>false</codeph> angegeben oder das dataprovider-Element <codeph>null</codeph> ist.
     
      <p>Diese Methode kann außer Kraft gesetzt werden, damit Sie im Detail steuern können, welche dataprovider-Elemente bearbeitbar sein sollen. Sie könnten die Methode beispielsweise außer setzen und durch benutzerdefinierte Logik ersetzen, um die Bearbeitung der Gruppierung von Zeilen oder von Übersichtszeilen zu sperren.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:placeSortArrow"><apiName>placeSortArrow</apiName><shortdesc>
      Zeichnet die Grafik für den Sortierungspfeil in die Spalte, nach der momentan sortiert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Zeichnet die Sortierpfeilgrafik in der Spalte, die aktuell die Sortierschlüsselspalte ist. Diese Implementierung erstellt oder verwendet erneut eine Instanz der Skin, die durch die <codeph>sortArrowSkin</codeph>-Stileigenschaft festgelegt wird, und setzt sie in die entsprechende Spaltenüberschrift. Falls der Sortierungspfeil den Text in der Spaltenüberschrift verdecken würde, wird die Spaltenüberschrift entsprechend verkleinert.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:scrollPositionToIndex"><apiName>scrollPositionToIndex</apiName><shortdesc>
      
      Gibt die Datenproviderindexposition für das Element in der ersten sichtbaren Zeile und Spalte für die gegebenen Bildlaufpositionen zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Die DatenproviderIndex-Indexposition.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>horizontalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Der <codeph>horizontalScrollPosition</codeph>-Eigenschaftwert entsprechend der Bildlaufposition.
      </apiDesc></apiParam><apiParam><apiItemName>verticalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Der <codeph>verticalScrollPosition</codeph>-Eigenschaftwert entsprechend der Bildlaufposition.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Gibt die Datenproviderindexposition für das Element in der ersten sichtbaren Zeile und Spalte für die gegebenen Bildlaufpositionen zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:scrollVertically"><apiName>scrollVertically</apiName><shortdesc>
      
      Passt nach einer Änderung der Bildlaufposition die Renderer an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Die neue Bildlaufposition.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Die Änderung der Position. Dieser Wert ist immer eine positive Zahl.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, wenn die Bildlaufposition kleiner wird.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Passt die Renderer an die Änderungen in der Bildlaufposition an.
     
      <p>Die Listenklassen versuchen, den Bildlauf zu optimieren, wenn die Bildlaufposition um einen Wert verändert wird, der niedriger ist als die Anzahl sichtbarer Zeilen. In dieser Situation bleiben einige Zeilen unverändert und müssen nur bewegt werden, andere Zeilen werden entfernt und neue Zeilen werden hinzugefügt. Bei Bildläufen über sehr große Entfernungen werden alle bisher angezeigten Zeilen entfernt und für den gesamten sichtbaren Bereich werden durch Aufrufen der <codeph>makeRowsAndColumns</codeph>-Methode neue Zeilen hinzugefügt.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:setNewValue"><apiName>setNewValue</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="mx.controls:DataGrid:itemEditorInstance"><apiName>itemEditorInstance</apiName><shortdesc>
      Ein Verweis auf die derzeit aktive Instanz des Elementeditors, falls vorhanden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ein Verweis auf die derzeit aktive Instanz des Elementeditors, falls vorhanden.
     
      <p>Verwenden Sie die <codeph>itemEditorInstance</codeph>-Eigenschaft, um bei der Bearbeitung eines Elements auf die Instanz des Elementeditors und den neuen Elementwert zuzugreifen. Die <codeph>itemEditorInstance</codeph>-Eigenschaft gilt nicht, solange nicht der Ereignis-Listener für das <codeph>itemEditBegin</codeph>-Ereignis ausgeführt wurde. Daher greifen Sie auch nur vom Ereignis-Listener für das <codeph>itemEditEnd</codeph>-Ereignis auf die <codeph>itemEditorInstance</codeph>-Eigenschaft zu.</p>
     
      <p>Die <codeph>DataGridColumn.itemEditor</codeph>-Eigenschaft definiert die Klasse des Elementeditors und somit auch den Datentyp für die Instanz des Elementeditors.</p>
     
      <p>Sie stellen diese Eigenschaft nicht in MXML ein.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:resizableColumns"><apiName>resizableColumns</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Benutzer die Größe der Spalten ändern kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Benutzer die Größe der Spalten ändern kann. Ist der Wert <codeph>true</codeph>, kann der Benutzer die Spalten des DataGrid-Steuerelements vergrößern oder verkleinern, indem er die Rasterlinien zwischen den Kopfzellen zieht. Ist der Wert <codeph>true</codeph>, müssen auch die <codeph>resizeable</codeph>-Eigenschaften einzelner Spalten auf <codeph>false</codeph> gesetzt sein, damit der Benutzer nicht die Größe einer bestimmten Spalte ändert.  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:sortableColumns"><apiName>sortableColumns</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Benutzer die Elemente im Datenprovider durch Klicken auf die Spaltenüberschriftenzelle sortieren kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Benutzer die Elemente im Datenprovider durch Klicken auf die Spaltenüberschriftenzelle sortieren kann. Ist der Wert <codeph>true</codeph>, kann der Benutzer die Elemente des Datenproviders durch Klicken in die Zelle einer Spaltenüberschrift sortieren. Als Sortierfeld wird eine der Eigenschaften <codeph>DataGridColumn.dataField</codeph> oder <codeph>DataGridColumn.sortCompareFunction</codeph> der Spalte verwendet. Durch mehrfaches Klicken auf eine Spalte schalten Sie zwischen auf - und absteigender Sortierung um. Ist der Wert <codeph>true</codeph>, können einzelne Spalten gesperrt werden, sodass sie nicht auf den Klick auf ihre Überschrift reagieren. Legen Sie dazu für die<codeph>sortable</codeph>-Eigenschaft der Spalte den Wert <codeph>false</codeph> fest.
     
      <p>Wenn ein Benutzer die Maustaste über einer Überschriftenzelle loslässt, löst das DataGrid-Steuerelement ein <codeph>headerRelease</codeph>-Ereignis aus, sofern sowohl diese Eigenschaft als auch die Sortierbarkeit der Spalten den Wert <codeph>true</codeph> aufweisen. Ruft bei diesem Ereignis keine Prozedur die <codeph>preventDefault()</codeph>-Methode auf, führt DataGrid die Sortierung unter Verwendung einer der Eigenschaften <codeph>DataGridColumn.dataField</codeph> oder <codeph>DataGridColumn.sortCompareFunction</codeph> für die Spalte durch.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridColumn/dataField"><linktext>mx.controls.dataGridClasses.DataGridColumn.dataField</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridColumn/sortCompareFunction"><linktext>mx.controls.dataGridClasses.DataGridColumn.sortCompareFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DataGrid:columns:get"><apiName>columns</apiName><shortdesc>
      Ein Array von DataGridColumn-Objekten, eines für jede Spalte, die angezeigt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Ein Array von DataGridColumn-Objekten, eines für jede Spalte, die angezeigt werden kann. Das DataGrid-Steuerelement versucht, wenn es nicht genau eingestellt ist, das erste Element des Datenproviders zu überprüfen, um die Eigenschaften zu bestimmen und diese dann in alphabetischer Reihenfolge anzuzeigen.
     
      <p>Wenn Sie etwas an den Spalten ändern möchten, müssen Sie dieses Array abrufen, Änderungen an den Spalten und der Spaltenreihenfolge vornehmen und das neue Array der columns-Eigenschaft zuweisen. Das ist notwendig, weil das DataGrid-Steuerelement eine neue Kopie des Spalten-Arrays zurückgegeben und die Änderungen nicht bemerkt hat.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:draggableColumns:get"><apiName>draggableColumns</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Benutzer die Berechtigung zur Änderung der Spaltenanordnung hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Benutzer die Berechtigung zur Änderung der Spaltenanordnung hat. Ist der Wert <codeph>true</codeph>, kann der Benutzer die Anordnung der Spalten des DataGrid-Steuerelements ändern, indem er die Zellen mit ihren Überschriften zieht.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editable:get"><apiName>editable</apiName><shortdesc>
      Ein Flag, das anzeigt, ob der Benutzer Elemente im Datenprovider bearbeiten kann oder nicht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, ob der Benutzer Elemente im Datenprovider bearbeiten kann oder nicht. Ist der Wert <codeph>true</codeph>, sind die Elementrenderer im Steuerelement bearbeitbar. Der Benutzer kann auf einen Elementrenderer klicken, um einen Editor zu öffnen.
     
      <p>Das Bearbeiten einzelner Spalten des DataGrid-Steuerelements kann deaktiviert werden, indem Sie die <codeph>DataGridColumn.editable</codeph>-Eigenschaft verwenden oder die Ereignisse <codeph>itemEditBeginning</codeph> und <codeph>itemEditBegin</codeph> bearbeiten.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editedItemPosition:get"><apiName>editedItemPosition</apiName><shortdesc>
      Die Indexposition der Spalte und Zeile des Elementrenderers für das Element des Datenproviders, das derzeit bearbeitet wird (falls vorhanden).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Indexposition der Spalte und Zeile des Elementrenderers für das Element des Datenproviders, das derzeit bearbeitet wird (falls vorhanden).
     
      <p>Dieses Objekt hat zwei Felder, <codeph>columnIndex</codeph> und <codeph>rowIndex</codeph>, die auf null basierenden Spalten- und Zeilen-Indexpositionswerte des Elements. Beispiel: { columnIndex:2, rowIndex:3}</p>
     
      <p>Mit der Einstellung dieser Eigenschaft wird das Element sichtbar gemacht und das <codeph>itemEditBegin</codeph>-Ereignis ausgelöst. So wird ein Elementeditor für einen angegebenen Elementrenderer geöffnet.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editedItemRenderer:get"><apiName>editedItemRenderer</apiName><shortdesc>
      Ein Verweis auf den Elementrenderer im DataGrid-Steuerelement, dessen Element derzeit bearbeitet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ein Verweis auf den Elementrenderer im DataGrid-Steuerelement, dessen Element derzeit bearbeitet wird.
     
      <p>Von einem Ereignis-Listener für die Ereignisse <codeph>itemEditBegin</codeph> und <codeph>itemEditEnd</codeph> aus können Sie den aktuellen Wert des derzeit bearbeiteten Elements mit der <codeph>editedItemRenderer.data</codeph>-Eigenschaft ermitteln.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Ein Flag, das angibt, ob der IME (Eingabemethodeneditor) aktiviert werden soll, wenn die Komponente den Fokus erhält. Wenn der Editor aktiv ist, stellt er enableIME entsprechend ein.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Gibt den Modus des Eingabemethodeneditors (IME) an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt den Modus des Eingabemethoden-Editors an. Mithilfe des Eingabemethodeneditors können chinesische, japanische und koreanische Schriftzeichen eingegeben werden. Flex stellt den festgelegten IME-Modus ein, wenn das Steuerelement den Fokus erhält und setzt es auf den vorherigen Wert zurück, wenn das Steuerelement den Fokus verliert.
     
     <p>Die flash.system.IMEConversionMode-Klasse definiert Konstanten für gültige Werte dieser Eigenschaft. Sie können auch <codeph>null</codeph> festlegen, um keinen IME festzulegen.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:DataGrid:minColumnWidth:get"><apiName>minColumnWidth</apiName><shortdesc>
      Die minimale Breite der Spalten in Pixeln.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die minimale Breite der Spalten in Pixeln. Wenn nicht NaN, wendet das DataGrid-Steuerelement diesen Wert als minimale Breite für alle Spalten an. Anderenfalls können einzelne Spalten ihre eigene minimale Breite haben.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:horizontalScrollPosition:set"><apiName>horizontalScrollPosition</apiName><shortdesc>
      Der Offset von der oberen Kante zum Inhalt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der Offset von der oberen Kante zum Inhalt. Dies kann in einigen Unterklassen ein Pixel-Offset sein, ansonsten andere Angaben wie z. B. die Anzahl der Spalten in einem DataGrid-Steuerelement. Bildläufe werden in DataGrid-Elementen nach Spalten durchgeführt. Der Wert der <codeph>horizontalScrollPosition</codeph>-Eigenschaft liegt daher immer zwischen 0 und der Indexposition, die die letzte Spalte sichtbar macht. Im Gegensatz dazu erfolgen Bildläufe im List-Steuerelement nach Pixeln. Beim DataGrid-Steuerelement wird immer die linke Kante der Spalte an der linken Kante des DataGrid-Steuerelements ausgerichtet.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:RichTextEditor"><apiName>RichTextEditor</apiName><shortdesc>Das RichTextEditor-Steuerelement ermöglicht die Eingabe und Formatierung von Text.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="underlineButton"/><Exclude kind="property" name="toolBar2"/><Exclude kind="property" name="toolBar"/><Exclude kind="property" name="linkTextInput"/><Exclude kind="property" name="layout"/><Exclude kind="property" name="label"/><Exclude kind="property" name="italicButton"/><Exclude kind="property" name="icon"/><Exclude kind="property" name="fontSizeCombo"/><Exclude kind="property" name="fontSizeArray"/><Exclude kind="property" name="fontFamilyCombo"/><Exclude kind="property" name="fontFamilyArray"/><Exclude kind="property" name="defaultButton"/><Exclude kind="property" name="colorPicker"/><Exclude kind="property" name="bulletButton"/><Exclude kind="property" name="boldButton"/><Exclude kind="property" name="alignButtons"/><styles><style inherit="no" name="textAreaStyleName" owner="mx.controls:RichTextEditor" playerVersion="Flash9" type="String">
<description>
          Der Name der CSS-Stildeklaration, welche für die Stile im Textbereich anzuwenden ist. Der Textbereich nutzt standardmäßig die vererbbaren Stile aus RichTextEditor.
          
          </description>

<playerversion>AIR 1.1
          </playerversion>
	<prolog><asCustoms><langversion>3.0
          </langversion><productversion>Flex 3
         </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The &lt;mx:RichTextEditor&gt; tag inherits all the members
  of its parent and adds the following members:</p>
 <pre>
  &lt;RichTextEditor
    <strong>Properties</strong>
    defaultLinkProtocol="http://"
    htmlText=""
    showControlBar="true | false"
    showToolTips="false | true"
    text=""
      
    <strong>Events</strong>
    change
  /&gt;
  
 </pre>
  
 ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseClassifier>mx.containers:Panel</apiBaseClassifier></apiClassifierDef><apiDesc>Das RichTextEditor-Steuerelement ermöglicht die Eingabe und Formatierung von Text. Zu den vom Benutzer einstellbaren Texteigenschaften gehören die Schriftfamilie, die Farbe, die Größe und der Stil sowie Eigenschaften wie Textausrichtung, Listenpunkte und URL-Links. Dieses Steuerelement besteht aus einem Panel-Steuerelement, dem zwei Steuerelemente direkt untergeordnet sind:
 <ul>
  <li>Einem Textbereich für die Eingabe von Text.</li>
  <li>Einem Container mit Formatierungs-Steuerelementen, die der Benutzer zum Festlegen der Texteigenschaften verwenden kann. Mit den Steuerelementen für die Formatierung können Sie sowohl neu eingegebenen als auch bereits vorhandenen und ausgewählten Text bearbeiten.</li>
 </ul>
 <p>Die Höhe und Breite des RichTextEditor betragen standardmäßig 300 bzw. 325 Pixel und mindestens 200 bzw. 220 Pixel. Wenn Sie ein RichTextEditor-Steuerelement in einem DividedBox-Steuerelement platzieren, muss dieses groß genug sein, um das RichTextEditor-Steuerelement (zumindest in dessen Mindestgröße) aufzunehmen. Sie können auch für die minHeight- und/oder minWidth-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>NaN</codeph> festlegen, damit der DividedBox-Container die Größe des Steuerelements auf 0 reduziert.</p>
 <p>In der folgenden Tabelle werden die Substeuerelemente beschrieben, auf die Sie zugreifen und die Sie ändern können.</p>
 <adobetable class="innertable">
  
  
  
  
  
  
  
  
  
  
  
  
  
 <tgroup cols="3"><thead><row><entry>Typ des Steuerelements </entry><entry>ID</entry><entry>Beschreibung</entry></row></thead><tbody><row>
    <entry><xref href="../controls/TextArea.html">TextArea</xref></entry>
    <entry>textArea</entry>
    <entry>Texteingabebereich für Benutzer.</entry>
  </row><row>
    <entry><xref href="../core/Container.html">Container</xref></entry>
    <entry>Symbolleiste</entry>
    <entry>Container für die Steuerelemente zur Formatierung. Die Steuerelemente werden in einer horizontalen Zeile angeordnet. Passen nicht alle Steuerelemente in eine Zeile, werden sie auf mehrere verteilt.</entry>
  </row><row>
    <entry><xref href="../controls/ComboBox.html">ComboBox</xref></entry>
    <entry>fontFamilyCombo</entry>
    <entry>Die Schriftfamilie für den Text. Der dataProvider für die ComboBox ist ein Array von Strings mit den folgenden Werten:
     <ul>
         <li>_sans</li>
         <li>_serif</li>
         <li>_typewriter</li>
         <li>Arial</li>
         <li>Courier</li>
         <li>Courier New</li>
         <li>Geneva</li>
         <li>Georgia</li>
         <li>Helvetica</li>
         <li>Times New Roman</li>
         <li>Times</li>
         <li>Verdana (Standardeinstellung)</li>
    </ul></entry>
  </row><row>
    <entry><xref href="../controls/ComboBox.html">ComboBox</xref></entry>
    <entry>fontSizeCombo</entry>
    <entry>Gibt die Schriftgröße an. Der dataProvider für die ComboBox ist ein Array von Strings mit den folgenden Werten: 8, 9, 10 (Standardeinstellung), 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72. 
    <p><b>Hinweis:</b> Diese Einstellung gibt die Schriftgröße in Pixeln an. Diese Größen entsprechen nicht den in HTML mithilfe des Attributs<codeph>size</codeph>des Tags &lt;font> festgelegten relativen Schriftgrößen.</p></entry>
  </row><row>
    <entry><xref href="../containers/HBox.html">HBox</xref></entry>
    <entry>toolBar2</entry>
    <entry>Enthält die Schaltflächen für die Schriftartenmerkmale.</entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>boldButton</entry>
    <entry>Wenn diese Funktion aktiviert wird (ausgewählt = „true“), wird der Text fett formatiert. </entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>italicButton</entry>
    <entry>Wenn diese Funktion aktiviert wird (ausgewählt = „true“), wird der Text kursiv formatiert. </entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>underlineButton</entry>
    <entry>Wenn diese Funktion aktiviert wird (ausgewählt = „true“), wird der Text unterstrichen.</entry>
  </row><row>
    <entry><xref href="../controls/ColorPicker.html">ColorPicker</xref></entry>
    <entry>colorPicker</entry>
    <entry>Legt die Textfarbe fest. </entry>
  </row><row>
    <entry><xref href="../controls/ToggleButtonBar.html">ToggleButtonBar</xref></entry>
    <entry>alignButtons</entry>
    <entry>Legt die Textausrichtung fest. Der Datenprovider für dieses Steuerelement besteht aus einem Array von Objekten, wobei das <codeph>action</codeph>-Feld die Art der Ausrichtung angibt. Die folgenden Aktionen stehen zur Verfügung:
      <ul>
        <li>links (Standardeinstellung) </li>
    <li>Mitte</li>
    <li>rechts</li>
    <li>justify</li>
    </ul></entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>bulletButton</entry>
    <entry>Wenn diese Funktion aktiviert wird (ausgewählt = „true“), wird die aktuelle oder die ausgewählte Zeile als Listeneintrag mit Listenpunkt formatiert.</entry>
  </row><row>
    <entry><xref href="../controls/TextInput.html">TextInput</xref></entry>
    <entry>linkTextInput</entry>
    <entry>Dieses Feld ist nur aktiv, wenn Text ausgewählt ist. Wenn der Benutzer eine URL in dieses Feld eingibt und die Eingabetaste drückt, fügt Flex die Entsprechung des HTML-Tags <codeph>&lt;a href="<i>user_text</i>" target="blank">&lt;/a></codeph> ungefähr an der Position des aktuell ausgewählten Texts in das Substeuerelement „TextArea“ ein.
 
        <p>Flex füllt dieses Steuerelement zunächst mit dem in der <codeph>defaultLinkProtocol</codeph>-Eigenschaft angegebenen Text. Die Benutzer können den Rest des Links an diesen Text anhängen oder diesen ersetzen.</p>
 </entry>
  </row></tbody></tgroup></adobetable>
  
 <p>Für den Zugriff auf ein Substeuerelement können Sie eine Syntax ähnlich der folgenden verwenden:
 <pre>
 myRTE.toolBar2.setStyle("backgroundColor", 0xCC6633);
 </pre>
 </p>
 
 <p>Beim RichTextEditor-Steuerelement gelten die folgenden Merkmale für die Größe:</p>
    <adobetable class="innertable">
       
       
       
       
    <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
          <entry>Standardgröße</entry>
          <entry>325 Pixel breit und 300 Pixel hoch</entry>
       </row><row>
          <entry>Minimale Größe</entry>
          <entry>220 Pixel breit und 200 Pixel hoch</entry>
       </row><row>
          <entry>Maximale Größe</entry>
          <entry>10.000 mal 10.000 Pixel</entry>
       </row></tbody></tgroup></adobetable>
  
  </apiDesc><example conref="RichTextEditorExample.mxml"><swfblock conref="examples/RichTextEditorExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#ControlBar"><linktext>mx.containers.ControlBar</linktext></link><link href="mx.containers.xml#Panel"><linktext>mx.containers.Panel</linktext></link><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#ColorPicker"><linktext>mx.controls.ColorPicker</linktext></link><link href="mx.controls.xml#ComboBox"><linktext>mx.controls.ComboBox</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea.</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link></related-links><adobeApiEvent id="mx.controls:RichTextEditor_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
        Wird ausgelöst, wenn der Benutzer den Inhalt oder das Format des Texts im TextArea-Steuerelement ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
        Wird ausgelöst, wenn der Benutzer den Inhalt oder das Format des Texts im TextArea-Steuerelement ändert. Wenn Sie den Inhalt des Textbereichs durch Zurücksetzen einer der Eigenschaften <codeph>text</codeph> oder <codeph>htmlText</codeph> ändern, wird dieses Ereignis nicht ausgelöst.
        
        </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:RichTextEditor:RichTextEditor"><apiName>RichTextEditor</apiName><shortdesc>Konstruktor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Konstruktor.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:RichTextEditor:alignToolTip"><apiName>alignToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf den Schaltflächen für die Textausrichtung befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Align</apiData><apiType value="String"/><apiDefaultValue>"Align"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf den Schaltflächen für die Textausrichtung befindet. Es wird dieselbe QuickInfo für alle Schaltflächen verwendet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:boldToolTip"><apiName>boldToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für Fettformatierung befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Bold</apiData><apiType value="String"/><apiDefaultValue>"Bold"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für Fettformatierung befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:bulletToolTip"><apiName>bulletToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für Listen mit Listenpunkten befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Bullet</apiData><apiType value="String"/><apiDefaultValue>"Bullet"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für Listen mit Listenpunkten befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:colorPickerToolTip"><apiName>colorPickerToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für ColorPicker befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Color</apiData><apiType value="String"/><apiDefaultValue>"Color"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für ColorPicker befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:fontFamilyToolTip"><apiName>fontFamilyToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Dropdownliste für die Schriftart befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Font Family</apiData><apiType value="String"/><apiDefaultValue>"Font Family"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Dropdownliste für die Schriftart befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:fontSizeToolTip"><apiName>fontSizeToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Dropdownliste für die Schriftgröße befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Font Size</apiData><apiType value="String"/><apiDefaultValue>"Font Size"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Dropdownliste für die Schriftgröße befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:italicToolTip"><apiName>italicToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für Kursivformatierung befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Italic</apiData><apiType value="String"/><apiDefaultValue>"Italic"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für Kursivformatierung befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:linkToolTip"><apiName>linkToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf dem Feld für die Eingabe von Linktext befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Link</apiData><apiType value="String"/><apiDefaultValue>"Link"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf dem Feld für die Eingabe von Linktext befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:underlineToolTip"><apiName>underlineToolTip</apiName><shortdesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für unterstrichenen Text befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Underline</apiData><apiType value="String"/><apiDefaultValue>"Underline"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die QuickInfo, die angezeigt wird, wenn sich der Cursor auf der Schaltfläche für unterstrichenen Text befindet. Damit QuickInfos angezeigt werden, müssen Sie außerdem für die <codeph>showToolTips</codeph>-Eigenschaft des RichTextEditor-Steuerelements den Wert <codeph>true</codeph> festlegen.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:defaultLinkProtocol:get"><apiName>defaultLinkProtocol</apiName><shortdesc>
     Die Protokollzeichenfolge, die standardmäßig am Anfang von Linktext verwendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"http://"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Die Protokollzeichenfolge, die standardmäßig am Anfang von Linktext verwendet werden soll. Diese Zeichenfolge wird im Substeuerelement LinkTextInput angezeigt; die Benutzer müssen dadurch bei der Eingabe von Linktext keinen Protokollbezeichner eingeben.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:htmlText:get"><apiName>htmlText</apiName><shortdesc>
     Text mit HTML-Markup, der im Substeuerelement „TextArea“ des RichTextEditor-Steuerelements angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Text mit HTML-Markup, der im Substeuerelement „TextArea“ des RichTextEditor-Steuerelements angezeigt wird. Diese Eigenschaft und die <codeph>text</codeph>-Eigenschaft können nicht gleichzeitig festgelegt werden. Wenn Sie eine Eigenschaft festlegen, werden Werte, die mit der anderen eingestellt wurden, automatisch ersetzt. Es ist möglich, beide Eigenschaften abzurufen. Die <codeph>htmlText</codeph>-Eigenschaft gibt immer eine Zeichenfolge zurück, die HTML-Markup für die aktuelle Textformatierung enthält. Weitere Informationen zur Verwendung dieser Eigenschaft finden Sie in der Dokumentation zu TextArea.
     
     </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea.</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:selection:get"><apiName>selection</apiName><shortdesc>
      Ein TextRange-Objekt, das den im Substeuerelement „TextArea“ ausgewählten Text enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.textClasses:TextRange</apiValueClassifier></apiValueDef><apiDesc>
      Ein TextRange-Objekt, das den im Substeuerelement „TextArea“ ausgewählten Text enthält.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange.</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:showControlBar:get"><apiName>showControlBar</apiName><shortdesc>
     Legt fest, ob die Steuerleiste mit den Steuerelementen für die Textformatierung angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Legt fest, ob die Steuerleiste mit den Steuerelementen für die Textformatierung angezeigt werden soll.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:showToolTips:get"><apiName>showToolTips</apiName><shortdesc>
     Legt fest, ob QuickInfos zu den Steuerelementen für die Textformatierung angezeigt werden sollen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Legt fest, ob QuickInfos zu den Steuerelementen für die Textformatierung angezeigt werden sollen. 
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:text:get"><apiName>text</apiName><shortdesc>
     Unformatierter Text ohne Markup, der im Substeuerelement „TextArea“ des RichTextEditor-Steuerelements angezeigt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Unformatierter Text ohne Markup, der im Substeuerelement „TextArea“ des RichTextEditor-Steuerelements angezeigt wird. Diese Eigenschaft und die <codeph>htmlText</codeph>-Eigenschaft können nicht gleichzeitig festgelegt werden. Wenn Sie eine Eigenschaft festlegen, werden Werte, die mit der anderen eingestellt wurden, automatisch ersetzt. Es ist möglich, beide Eigenschaften abzurufen. Die <codeph>text</codeph>-Eigenschaft gibt immer eine einfache Textzeichenfolge ohne Formatierungsinformationen zurück. Weitere Informationen zur Verwendung dieser Eigenschaft finden Sie in der Dokumentation zu TextArea.
     
     </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea.</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:RadioButtonGroup"><apiName>RadioButtonGroup</apiName><shortdesc>
  Mit dem RadioButtonGroup-Steuerelement wird eine Gruppe von RadioButton-Steuerelementen definiert, die als ein sich gegenseitig ausschließendes Steuerelement auftreten; daher kann ein Benutzer nur jeweils ein RadioButton-Steuerelement auswählen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:RadioButtonGroup" replacement="spark.components.RadioButtonGroup" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:RadioButtonGroup&gt;</code> tag inherits all of the
  tag attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:RadioButtonGroup
    <strong>Properties</strong>
    enabled="true|false"
    id="<i>No default</i>"
    labelPlacement="right|left|top|bottom"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    itemClick="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IMXMLObject</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mit dem RadioButtonGroup-Steuerelement wird eine Gruppe von RadioButton-Steuerelementen definiert, die als ein sich gegenseitig ausschließendes Steuerelement auftreten; daher kann ein Benutzer nur jeweils ein RadioButton-Steuerelement auswählen. Das Gruppieren von RadioButton-Instanzen in einer RadioButtonGroup ist optional. In einer Gruppe können Sie beispielsweise eine einzige Ereignisprozedur auf einer Gruppe von Schaltflächen, anstatt auf jeder einzelnen Schaltfläche festlegen. 
  
  <p>Die <codeph>id</codeph>-Eigenschaft wird benötigt, wenn der Name der Gruppe mithilfe des Tags <codeph>&lt;mx:RadioButtonGroup></codeph> definiert wird.</p> 
 
  <p>Das RadioButtonGroup-Steuerelement ist eine Unterklasse von EventDispatcher, nicht von UIComponent, und implementiert die IMXMLObject-Schnittstelle. Alle anderen visuellen Komponenten von Flex sind Unterklassen von UIComponent. Diese Klasse implementiert die IUIComponent-Schnittstelle. Das RadioButtonGroup-Steuerelement wird im Flex-Compiler unterstützt. Sie können das RadioButtonGroup-Steuerelement daher als untergeordnetes Element eines Flex-Containers verwenden, obwohl es IUIComponent nicht implementiert. Alle anderen untergeordneten Elemente des Containers müssen die IUIComponent-Schnittstelle implementieren.</p>
 
  <p>Wenn Sie daher eine visuelle Komponente, die die IMXMLObject-Schnittstelle implementiert, als Unterklasse von EventDispatcher definieren, können Sie diese Komponente nicht als untergeordnetes Element eines Containers verwenden.</p>
 
  </apiDesc><example conref="RadioButtonGroupExample.mxml"><swfblock conref="examples/RadioButtonGroupExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#RadioButton"><linktext>mx.controls.RadioButton</linktext></link></related-links><adobeApiEvent id="mx.controls:RadioButtonGroup_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn der Benutzer ein RadioButton-Steuerelement in der Gruppe aktiviert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Benutzer ein RadioButton-Steuerelement in der Gruppe aktiviert. Sie können außerdem eine Prozedur für einzelne RadioButton-Steuerelemente festlegen.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:RadioButtonGroup_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn der Wert des ausgewählten RadioButton-Steuerelements in dieser Gruppe geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Wert des ausgewählten RadioButton-Steuerelements in dieser Gruppe geändert wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:RadioButtonGroup:RadioButtonGroup"><apiName>RadioButtonGroup</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>document</apiItemName><apiOperationClassifier>mx.core:IFlexDisplayObject</apiOperationClassifier><apiData>null</apiData><apiDesc>In einfachen Fällen, in denen eine Klasse EventDispatcher erweitert, sollte der <codeph>document</codeph>-Parameter nicht verwendet werden.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Konstruktor.
     
      </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.events.EventDispatcher.xml"><linktext>flash.events.EventDispatcher</linktext></link></related-links></apiConstructor><apiOperation id="mx.controls:RadioButtonGroup:getRadioButtonAt"><apiName>getRadioButtonAt</apiName><shortdesc>
      Gibt das RadioButton-Steuerelement an der angegebenen Indexposition zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das angegebene RadioButton-Steuerelement.
      
      </apiDesc><apiOperationClassifier>mx.controls:RadioButton</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des RadioButton-Steuerelements im RadioButtonGroup-Steuerelement, in dem die Indexposition des ersten Steuerelements 0 ist.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt das RadioButton-Steuerelement an der angegebenen Indexposition zurück.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:RadioButtonGroup:initialized"><apiName>initialized</apiName><shortdesc>
      Implementierung der IMXMLObject.initialized()-Methode, um eine zurückgestellte Instanziierung zu unterstützen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>Das MXML-Dokument, mit dessen Hilfe dieses Objekt erstellt wurde.
     
      </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>Der vom Dokument für den Verweis auf dieses Objekt verwendete Bezeichner. Ist das Objekt eine verschachtelte Eigenschaft des Dokuments, nimmt<codeph>id</codeph> den Wert Null an.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Die Implementierung der <codeph>IMXMLObject.initialized()</codeph>-Methode zur Unterstützung verzögerter Instanziierung.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#IMXMLObject"><linktext>mx.core.IMXMLObject</linktext></link></related-links></apiOperation><apiValue id="mx.controls:RadioButtonGroup:enabled:get"><apiName>enabled</apiName><shortdesc>
      Bestimmt, ob die Auswahl zulässig ist</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bestimmt, ob die Auswahl zulässig ist
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Position der RadioButton-Beschriftung relativ zum RadioButton-Symbol für die einzelnen Steuerelemente in der Gruppe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"right"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Position der RadioButton-Beschriftung relativ zum RadioButton-Symbol für die einzelnen Steuerelemente in der Gruppe. Sie können diese Einstellung für die einzelnen Steuerelemente außer Kraft setzen.
     
      <p>Gültige Werte in MXML sind <codeph>"right"</codeph>, <codeph>"left"</codeph>, <codeph>"bottom"</codeph> und <codeph>"top"</codeph>. </p>
     
      <p>In ActionScript können Sie die folgenden Konstanten verwenden, um diese Eigenschaft festzulegen: <codeph>ButtonLabelPlacement.RIGHT</codeph>, <codeph>ButtonLabelPlacement.LEFT</codeph>, <codeph>ButtonLabelPlacement.BOTTOM</codeph> und <codeph>ButtonLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:numRadioButtons:get"><apiName>numRadioButtons</apiName><shortdesc>
      Die Anzahl der RadioButtons in dieser RadioButtonGroup.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Anzahl der RadioButtons in dieser RadioButtonGroup.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:selectedValue:get"><apiName>selectedValue</apiName><shortdesc>
      Der Wert der value-Eigenschaft des ausgewählten RadioButton-Steuerelements in der Gruppe, falls ein anderer Wert als Null (Standardwert) eingestellt wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der Wert der <codeph>value</codeph>-Eigenschaft des ausgewählten RadioButton-Steuerelements in der Gruppe, falls ein anderer Wert als<codeph>Null </codeph> (Standardwert) eingestellt wurde. Andernfalls ist <codeph>selectedValue</codeph> der Wert der <codeph>label</codeph>-Eigenschaft des ausgewählten RadioButton. Ist kein RadioButton ausgewählt, hat diese Eigenschaft den Wert <codeph>null</codeph>.
     
      <p>Wenn Sie einen Wert für <codeph>selectedValue</codeph> festlegen, wählt Flex das RadioButton-Steuerelement aus, dessen <codeph>value</codeph>- oder <codeph>label</codeph>-Eigenschaft diesem Wert entspricht.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:selection:get"><apiName>selection</apiName><shortdesc>
      Enthält einen Verweis auf das aktuell ausgewählte RadioButton-Steuerelement in der Gruppe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:RadioButton</apiValueClassifier><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Enthält einen Verweis auf das aktuell ausgewählte RadioButton-Steuerelement in der Gruppe. Auf diese Eigenschaft können Sie nur in ActionScript zugreifen, in MXML kann sie nicht festgelegt werden. Wenn Sie für diese Eigenschaft den Wert<codeph>null</codeph> festlegen, wird das momentan ausgewählte RadioButton-Steuerelement deaktiviert.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Menu"><apiName>Menu</apiName><shortdesc>
  Das Menu-Steuerelement erstellt ein Popupmenü mit einzeln auswählbaren Optionen ähnlich den Menüs „Datei“ und „Bearbeiten“ in den meisten Softwareanwendungen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBarStyleName"/><Exclude kind="property" name="showScrollTips"/><Exclude kind="property" name="scrollTipFunction"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="liveScrolling"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBarStyleName"/><Exclude kind="property" name="allowMultipleSelection"/><styles><style inherit="no" name="separatorSkin" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Die Skin für alle Menüelemente, die als Trennzeichen definiert sind.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="radioDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Das Symbol für alle deaktivierten Menüelemente, deren Typenbezeichner ein Optionsfeld ist.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="radioIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Das Symbol für alle aktivierten Menüelemente, deren Typenbezeichner ein Optionsfeld ist.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="checkDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Das Symbol für alle deaktivierten Menüelemente, deren Typenbezeichner ein Kontrollkästchen ist.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="checkIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Das Symbol für alle aktivierten Menüelemente, deren Typenbezeichner ein Kontrollkästchen ist.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="branchDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Das Symbol für alle deaktivierten Menüelemente mit Untermenüs.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="branchIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Das Symbol für alle aktivierten Menüelemente mit Untermenüs.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Die Textfarbe für das Menüelement, wenn dieses ausgewählt ist. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Die Textfarbe für das Menüelement, wenn Rollover durch den Benutzer erfolgt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Der Offset der ersten Textzeile zur linken Seite des Menüelements im Menü bzw. Untermenü. 
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:Menu" playerVersion="Flash9" type="Function">
<description>
  Der Verweis auf eine <codeph>easingFunction</codeph>-Gleichung, die zur Steuerung des Programmtweening verwendet wird.
 
  </description>
<default>"undefined"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Die Farbe für den Hintergrund eines Menüelements, wenn dieses ausgewählt wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Die Farbe für den Hintergrund eines Menüelements, wenn Rollover durch den Benutzer erfolgt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Die Dauer des Übergangs beim Öffnen eines Menüs oder Untermenüs in Millisekunden. Der Wert 0 legt fest, dass kein Übergang verwendet wird.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="rightIconGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Die Lücke rechts neben der Beschriftung in einem Menüelement. Wenn das Symbol für die Verzweigung nicht in die Lücke passt, wird diese entsprechend vergrößert. Der Standardwert ist 15.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="leftIconGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Die Lücke links neben der Beschriftung in einem Menüelement. Wenn die Symbole (benutzerdefiniert und Typ) nicht in die Lücke passen, wird diese entsprechend vergrößert. Der Standardwert ist 18.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen den untergeordneten Elementen (Symbolen und Beschriftungen) in horizontaler Richtung.
 
  </description>
<default>6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:Menu" playerVersion="Flash9" type="Array">
<description>
  Die Farben, die abwechselnd für Menü- oder Untermenüelemente verwendet werden. Der Wert kann ein Array aus zwei oder mehr Farben sein. Dieser Stil wird nur verwendet, wenn <codeph>backgroundColor</codeph> nicht angegeben wurde. 
 
  </description>
<default>"undefined"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerContainer</apiBaseInterface><apiBaseClassifier>mx.controls:List</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Menu-Steuerelement erstellt ein Popupmenü mit einzeln auswählbaren Optionen ähnlich den Menüs Datei und Bearbeiten in den meisten Softwareanwendungen. Das angezeigte Popupmenü kann Untermenüs auf beliebig vielen Ebenen enthalten. Nachdem ein Menu-Steuerelement geöffnet wurde, bleibt es sichtbar, bis es durch eine der folgenden Aktionen geschlossen wird:
 
  <ul>
   <li>Ein Aufruf der <codeph>Menu.hide()</codeph>/Methode.</li>
   <li>Auswahl eines aktivierten Menüelements durch den Benutzer.</li>
   <li>Mausklick auf eine Stelle außerhalb des Menu-Steuerelements.</li>
   <li>Auswahl einer anderen Komponente in der Anwendung.</li>
  </ul>
 
  <p>Für die Menu-Klasse gibt es kein entsprechendes MXML-Tag. Sie müssen sie in ActionScript erstellen.</p>
 
  <p>Das Menu-Steuerelement verfügt über die folgenden Größeneigenschaften:</p>
     <adobetable class="innertable">
        
        
     <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
           <entry>Standardgröße</entry>
           <entry>Die Breite wird anhand des Menu-Texts bestimmt. Die Standardhöhe ist die Anzahl der Menüzeilen multipliziert mit 19 Pixeln (der Standardhöhe für eine einzelne Zeile).</entry>
        </row></tbody></tgroup></adobetable>
 
 <p>Der Datenprovider für Menu-Elemente kann verschiedene Attribute festlegen, die bestimmen, wie das Element angezeigt wird und wie es sich verhält. Das folgende Beispiel des XML-Datenproviders zeigt dies:</p>
  <pre>
   &lt;mx:XML format="e4x" id="myMenuData">
     &lt;root>
        &lt;menuitem label="MenuItem A" icon="myTopIcon">
            &lt;menuitem label="SubMenuItem A-1" enabled="False"/>
            &lt;menuitem label="SubMenuItem A-2"/>
        &lt;/menuitem>
        &lt;menuitem label="MenuItem B" type="check" toggled="true"/>
        &lt;menuitem label="MenuItem C" type="check" toggled="false" icon="myTopIcon"/>
        &lt;menuitem type="separator"/> 
        &lt;menuitem label="MenuItem D" icon="myTopIcon">
            &lt;menuitem label="SubMenuItem D-1" type="radio" groupName="one"/>
            &lt;menuitem label="SubMenuItem D-2" type="radio" groupName="one" toggled="true"/>
            &lt;menuitem label="SubMenuItem D-3" type="radio" groupName="one"/>
        &lt;/menuitem>
    &lt;/root>
 &lt;/mx:XML></pre>
 
  <p>In der folgenden Tabelle werden die Attribute, die Sie festlegen können, ihre Datentypen und ihre Verwendung zusammengestellt. Außerdem wird angegeben, wie sie im Datenprovider dargestellt werden müssen, wenn das Menü die DefaultDataDescriptor-Klasse zum Analysieren des Datenproviders nutzt.</p>
 
  <adobetable class="innertable">
  
  
  
  
  
  
  
 <tgroup cols="3"><thead><row><entry>Attribut</entry><entry>Typ</entry><entry>Beschreibung</entry></row></thead><tbody><row>
    <entry><codeph>enabled</codeph></entry>
    <entry>Boolescher Wert</entry>
    <entry>Legt fest, ob der Benutzer das Menüelement wählen kann (<codeph>true</codeph>) oder nicht (<codeph>false</codeph>). Wird kein Wert angegeben, behandelt Flex das Element, als ob <codeph>true</codeph> festgelegt wäre. Wenn Sie den Standarddatendeskriptor verwenden, müssen Datenprovider diese Eigenschaft mithilfe eines <codeph>enabled</codeph>-XML-Attributs oder Objektfelds festlegen.</entry>
  </row><row>
    <entry><codeph>groupName</codeph></entry>
    <entry>String</entry>
    <entry> (Nur für <codeph>radio</codeph>-Typ erforderlich und gültig) der Bezeichner, der die Optionsfelder innerhalb einer Gruppe verbindet. Wenn Sie den Standarddatendeskriptor verwenden, müssen Datenprovider diese Eigenschaft mithilfe eines <codeph>groupName</codeph>-XML-Attributs oder Objektfelds festlegen.</entry>
  </row><row>
    <entry><codeph>icon</codeph></entry>
    <entry>Klasse</entry>
    <entry>Legt den Klassenbezeichner eines Bildelements fest. Dieses Element ist nicht verfügbar für die Typen <codeph>check</codeph>, <codeph>radio</codeph> und <codeph>separator. </codeph> Mithilfe der Stile <codeph>checkIcon</codeph> und <codeph>radioIcon</codeph> können Sie die Symbole festlegen, die für ausgewählte Optionsfelder und Kontrollkästchen verwendet werden sollen. Die <codeph>iconField</codeph>- bzw. <codeph>iconFunction</codeph>-Eigenschaft des Menüs legt den Namen des Felds in den Daten, das das Symbol festlegt, oder die Funktion zur Bestimmung der Symbole fest.</entry>
  </row><row>
    <entry><codeph>label</codeph></entry>
    <entry>String</entry>
    <entry>Gibt den innerhalb des Steuerelements angezeigten Text an. Dieses Element wird für alle Menüelementtypen außer <codeph>separator</codeph> verwendet. Die <codeph>labelField</codeph>- oder <codeph>labelFunction</codeph>-Eigenschaft des Menüs legt den Namen des Feldes in den Daten fest, welches die Beschriftung oder eine Funktion zur Bestimmung der Beschriftung definiert. (Wenn der Datenprovider das E4X XML-Format besitzt, müssen Sie eine dieser Eigenschaften festlegen, um eine Beschriftung anzuzeigen.) Wenn der Datenprovider ein Array von Strings ist, verwendet Flex den Stringwert als Beschriftung.</entry>
  </row><row>
    <entry><codeph>toggled</codeph></entry>
    <entry>Boolean</entry>
    <entry>Legt fest, ob ein Kontrollkästchen oder Optionsfeld ausgewählt ist. Wird kein Wert angegeben, behandelt Flex das Element so, als ob <codeph>false</codeph> angegeben wäre, und das Element wird nicht ausgewählt. Wenn Sie den Standarddatendeskriptor verwenden, müssen Datenprovider diese Eigenschaft mithilfe eines toggled-XML-Attributs oder Objektfelds festlegen.</entry>
  </row><row>
    <entry><codeph>type</codeph></entry>
    <entry>String</entry>
    <entry>Gibt den Typ des Menüelements an. Gültige Werte sind <codeph>separator</codeph>, <codeph>check</codeph> oder <codeph>radio</codeph>. Flex behandelt alle anderen Werte oder Knoten ohne Typenangabe als normale Menüeinträge. Wenn Sie den Standarddatendeskriptor verwenden, müssen Datenprovider diese Eigenschaft mithilfe eines type-XML-Attributs oder Objektfelds festlegen.</entry>
  </row></tbody></tgroup></adobetable>
 
 
  </apiDesc><example conref="SimpleMenuExample.mxml"><swfblock conref="examples/SimpleMenuExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link><link href="mx.controls.menuClasses.xml#IMenuDataDescriptor"><linktext>mx.controls.menuClasses.IMenuDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager.</linktext></link></related-links><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Wird bei Rollover durch den Benutzer über ein Menüelement ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollover durch den Benutzer über ein Menüelement ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Wird bei Rollout aus dem Menüelement ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird bei Rollout aus dem Menüelement ausgelöst.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.MENU_SHOW_menuShow"><apiName>menuShow</apiName><shortdesc>
  Wird ausgelöst, wenn ein Menü oder Untermenü geöffnet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Menü oder Untermenü geöffnet wird. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.MENU_HIDE_menuHide"><apiName>menuHide</apiName><shortdesc>
  Wird ausgelöst, wenn ein Menü oder Untermenü geschlossen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Menü oder Untermenü geschlossen wird.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Wird ausgelöst, wenn ein Menüelement ausgewählt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn ein Menüelement ausgewählt wird. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Wird ausgelöst, wenn sich die Auswahl aufgrund eines Bedienvorgangs des Benutzers ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn sich die Auswahl aufgrund eines Bedienvorgangs des Benutzers ändert. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Menu:Menu"><apiName>Menu</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
     
      <p>Anwendungen rufen den Menu-Konstruktor normalerweise nicht direkt auf. Stattdessen rufen sie die <codeph>Menu.createMenu()</codeph>-Methode auf.</p>
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Menu:createMenu"><apiName>createMenu</apiName><shortdesc>
      Erstellt eine Instanz der Menu-Klasse und gibt sie zurück.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><showRoot>
     
      </showRoot></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Eine Instanz der Menu-Klasse. 
     
      </apiDesc><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier></apiReturn><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>Ein Container, in dem PopUpManager das Menu-Steuerelement platziert. Dieses Objekt ist nicht unbedingt das dem Menu-Steuerelement übergeordnete Objekt.
     
      </apiDesc></apiParam><apiParam><apiItemName>mdp</apiItemName><apiType value="Object"/><apiDesc>Der Datenprovider des Menu-Steuerelements. 
      </apiDesc></apiParam><apiParam><apiItemName>showRoot</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Ein boolesches Flag, das angibt, ob der Stammknoten des Datenproviders angezeigt werden soll.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine Instanz der Menu-Klasse und gibt sie zurück. Der Inhalt des Menu-Steuerelements wird durch das <codeph>mdp</codeph>-Argument der Methode bestimmt. Das Menu-Steuerelement wird im übergeordneten Container abgelegt, der durch das <codeph>parent</codeph>-Argument der Methode angegeben wird. Bei dieser Methode wird das Menu-Steuerelement nicht angezeigt. Stattdessen wird das Menu-Steuerelement lediglich erstellt. Änderungen an der Menu-Instanz sind möglich, bevor das Menü angezeigt wird. Um es anzuzeigen, rufen Sie die <codeph>Menu.show()</codeph>-Methode auf.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#Menu/popUpMenu()"><linktext>mx.controls.Menu.popUpMenu()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:Menu:hide"><apiName>hide</apiName><shortdesc>
      Blendet das Menu-Steuerelement und alle seine Untermenüs aus, sofern sichtbar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Blendet das Menu-Steuerelement und alle seine Untermenüs aus, sofern sichtbar.  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Erstellt eine neue MenuListData-Instanz und füllt die Felder auf Basis des Eingabedatenproviderelements mit Daten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Ein neu erstelltes ListData-Objekt.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Das Datenproviderelement, das für den Abruf der Daten in ListData verwendet wird.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Die UID des Elements.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Die Indexposition des Elements im Datenprovider.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Erstellt eine neue MenuListData-Instanz und füllt die Felder auf Basis des Eingabedatenproviderelements mit Daten. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:measure"><apiName>measure</apiName><shortdesc>
      Berechnet die bevorzugte Breite und Höhe des Menüs anhand der Breite und Höhe der darin enthaltenen Elemente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Berechnet die bevorzugte Breite und Höhe des Menüs anhand der Breite und Höhe der darin enthaltenen Elemente. Die Position und Größe der Untermenüs werden dabei nicht berücksichtigt. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:popUpMenu"><apiName>popUpMenu</apiName><shortdesc>
      Legt den dataProvider eines bestehenden Menu-Steuerelements fest und platziert dieses im angegebenen übergeordneten Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>menu</apiItemName><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier><apiDesc>Menu-Steuerelement zum Einblenden. 
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>Ein Container, in dem PopUpManager das Menu-Steuerelement platziert. Dieses Objekt ist nicht unbedingt das dem Menu-Steuerelement übergeordnete Objekt. Wenn Sie diese Eigenschaft auslassen, legt die Methode die Anwendung als übergeordnetes Element des Menu-Steuerelements fest. 
     
      </apiDesc></apiParam><apiParam><apiItemName>mdp</apiItemName><apiType value="Object"/><apiDesc>dataProvider-Objekt für das Popupmenü. Wenn Sie diese Eigenschaft auslassen, legt die Methode ein neues leeres XML-Objekt als Datenprovider von Menu fest.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt den dataProvider eines bestehenden Menu-Steuerelements fest und platziert dieses im angegebenen übergeordneten Container. Bei dieser Methode wird das Menu-Steuerelement nicht angezeigt. Verwenden Sie dafür die <codeph>Menu.show()</codeph>-Methode. Die <codeph>Menu.createMenu()</codeph>-Methode nutzt diese Methode.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:setMenuItemToggled"><apiName>setMenuItemToggled</apiName><shortdesc>
      Schaltet das Menüelement um.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Das umzuschaltende Menüelement.
      </apiDesc></apiParam><apiParam><apiItemName>toggle</apiItemName><apiType value="Boolean"/><apiDesc>Boolean-Wert, der anzeigt, ob das Element umgeschaltet wurde. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Schaltet das Menüelement um. Der Typenbezeichner für das Menüelement muss ein Kontrollkästchen oder Optionsfeld sein, andernfalls hat diese Methode keine Wirkung.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:show"><apiName>show</apiName><shortdesc>
      Zeigt das Menu-Steuerelement an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>xShow</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Horizontale Position der linken oberen Ecke des Menu-Steuerelements (optional).
     
      </apiDesc></apiParam><apiParam><apiItemName>yShow</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Vertikale Position der linken oberen Ecke des Menu-Steuerelements (optional).
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Zeigt das Menu-Steuerelement an. Wenn das Menu-Steuerelement nicht sichtbar ist, fügt diese Methode das Menü in der linken oberen Ecke der übergeordneten Anwendung an der gegebenen Koordinatenposition ein, passt die Größe des Menu-Steuerelements wie benötigt ans und macht dieses sichtbar. Die X- und Y-Argumente der <codeph>show()</codeph>-Methode legen die Koordinaten der linken oberen Ecke des Menu-Steuerelements relativ zum Sandboxstamm fest. Dieser ist dem Menu-Steuerelement nicht unbedingt direkt übergeordnet. Wenn sich das Menu-Steuerelement beispielsweise in einem HBox-Container befindet, der seinerseits in ein Panel-Container verschachtelt ist, gelten die X- und Y-Koordinaten relativ zum Application-Container, nicht zum HBox-Container.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Menu:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Das Objekt, das auf die Daten im Datenprovider zugreift und diese bearbeitet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      Das Objekt, das auf die Daten im Datenprovider zugreift und diese bearbeitet. Das MenuBar-Steuerelement fragt den Datendeskriptor ab, um Informationen zu seinen Daten zu erhalten Diese Daten werden dann für die Analyse und das Verschieben der Datenquelle verwendet. Der für das Stammmenü definierte Datendeskriptor wird für alle Untermenüs verwendet. Der Standardwert ist eine interne Instanz der DefaultDataDescriptor-Klasse.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Menu:hasRoot:get"><apiName>hasRoot</apiName><shortdesc>
      Ein Flag, das anzeigt, dass der aktuelle Datenprovider einen Stammknoten hat, z. B. ein einzelner Knoten auf der obersten Ebene einer hierarchischen Struktur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein Flag, das anzeigt, dass der aktuelle Datenprovider einen Stammknoten hat, z. B. ein einzelner Knoten auf der obersten Ebene einer hierarchischen Struktur. Stammknoten sind z. B. bei den Typen XML und Object vorhanden, bei Lists und Arrays hingegen nicht.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Menu/showRoot"><linktext>showRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Menu:parentMenu:get"><apiName>parentMenu</apiName><shortdesc>
      Das übergeordnete Menü in einer hierarchischen Kette von Menüs, wobei das aktuelle Menü ein Untermenü des übergeordneten ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:Menu</apiValueClassifier></apiValueDef><apiDesc>
      Das übergeordnete Menü in einer hierarchischen Kette von Menüs, wobei das aktuelle Menü ein Untermenü des übergeordneten ist.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Menu:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Ein boolesches Flag, das angibt, ob der Stammknoten des Datenproviders angezeigt werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein boolesches Flag, das angibt, ob der Stammknoten des Datenproviders angezeigt werden soll. Ist im dataProvider-Objekt ein Stammknoten vorhanden und ist für showRoot der Wert <codeph>false</codeph> eingestellt, zeigt das Menu-Steuerelement den Stammknoten nicht an. Es werden lediglich die untergeordneten Elemente des Stammknotens angezeigt. Diese Flag ist bei Datenprovidern ohne Stammknoten, beispielsweise Listen und Arrays, ergebnislos. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Menu/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:VScrollBar"><apiName>VScrollBar</apiName><shortdesc>
  Mithilfe des VScrollBar -Steuerelements (vertikale Bildlaufleiste) können Sie jene Daten steuern, die angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht in den Anzeigebereich passen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:VScrollBar" replacement="spark.components.VScrollBar" since="4.0">
	</Alternative><styles><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:VScrollBar" playerVersion="Flash9" type="Number">
<description>
  Zeit in Millisekunden zwischen den <codeph>buttonDown</codeph>-Ereignissen, wenn der Benutzer mit der Maustaste auf eine Schaltfläche klickt und die Maustaste gedrückt hält. Der Standardwert ist 35.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:VScrollBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Millisekunden, die nach dem ersten <codeph>buttonDown</codeph>-Ereignis gewartet werden soll, bevor <codeph>buttonDown</codeph>-Ereignisse bei jedem <codeph>repeatInterval</codeph> wiederholt werden. Der Standardwert ist 500.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VScrollBar&gt;</code> tag inherits all the
  tag attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:VScrollBar
    <strong>Styles</strong>
    repeatDelay="500"
    repeatInterval="35"
 
    <strong>Events</strong>
    scroll="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.scrollClasses:ScrollBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des VScrollBar -Steuerelements (vertikale Bildlaufleiste) können Sie jene Daten steuern, die angezeigt werden, wenn zu viele Daten vorhanden sind und diese nicht in den Anzeigebereich passen. Dieses Steuerelement erweitert das Standard-ScrollBar-Steuerelement. 
  
  <p>Obwohl das VScrollBar-Steuerelement auch als allein stehendes Steuerelement verwendet werden kann, wird es üblicherweise innerhalb einer Komponentengruppe für die Bildlauffunktion verwendet.</p>
  
  <p>Ein ScrollBar-Steuerelement besteht aus vier Teilen: zwei Bildlaufpfeilen, einer Bildlaufleiste und einem Bildlauffeld. Die Position des Bildlauffelds und die Anzeige der Pfeilschaltflächen hängt vom aktuellen Status des Steuerelements ab. Das ScrollBar-Steuerelement verwendet vier Parameter, um den Anzeigestatus zu berechnen:</p>
 
  <ul>
    <li>Minimaler Wert innerhalb des Bereichs.</li>
    <li>Maximaler Wert innerhalb des Bereichs.</li>
    <li>Aktuelle Position: muss zwischen dem minimalen und dem maximalem Wert des Bereichs liegen.</li>
    <li>Anzeigengröße: stellt die Anzahl der Elemente im Bereich dar, die gleichzeitig angezeigt werden können. Die Anzahl der Elemente muss entweder gleich oder kleiner sein als der Bereich und der Bereich ist der Satz an Werten, die zwischen dem minimalen und dem maximalen Wert liegen.</li>
  </ul>
  
  </apiDesc><example conref="VScrollBarExample.mxml"><swfblock conref="examples/VScrollBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.scrollClasses.xml#ScrollBar"><linktext>mx.controls.scrollClasses.ScrollBar</linktext></link></related-links><adobeApiEvent id="mx.controls:VScrollBar_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Wird ausgelöst, wenn das ScrollBar-Steuerelement sich aufgrund eines Bedienvorgangs durch den Benutzer oder programmgesteuert bewegt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das ScrollBar-Steuerelement sich aufgrund eines Bedienvorgangs durch den Benutzer oder programmgesteuert bewegt. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:VScrollBar:VScrollBar"><apiName>VScrollBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:VideoDisplay"><apiName>VideoDisplay</apiName><shortdesc>
  Mithilfe des VideoDisplay-Steuerelements können Sie FLV-Dateien in Flex-Anwendungen abspielen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:VideoDisplay" replacement="spark.components.VideoPlayer" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Farbe des Inhaltsbereichs der Komponente.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Abstand des Schlagschattens. Wenn für eine Eigenschaft ein negativer Wert eingestellt ist, erscheint über der Komponente ein Schatten.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  Richtung des Schlagschattens. Mögliche Werte sind <codeph>"left"</codeph>, <codeph>"center"</codeph> und <codeph>"right"</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Farbe des Schlagschattens.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Der Standardwert ist <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die <codeph>contentBackgroundColor</codeph>-Eigenschaft fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Boolesche Eigenschaft, die festlegt, ob die Komponente über einen sichtbaren Schlagschatten verfügt. Dieser Stil wird mit <codeph>borderStyle="solid"</codeph> verwendet. Der Standardwert lautet <codeph>false</codeph>.
 
  <p><b>Hinweis:</b> Um Schlagschatten für Container anzuzeigen, legen Sie die Eigenschaften <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> fest. Andernfalls wird der Schatten hinter dem Container angezeigt, weil der Standardhintergrund eines Containers transparent ist.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Radius von Komponentenecken.  Der Standardwert für ApplicationControlBar ist 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Sichtbarkeit des Rahmens.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Stärke des Begrenzungsrahmens. Wird nur verwendet, wenn <codeph>borderStyle</codeph> auf <codeph>"solid"</codeph> gesetzt ist.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:VideoDisplay" playerVersion="Flash9" type="String">
<description>
  Stil des Begrenzungsrahmens. Mögliche Werte sind <codeph>"none"</codeph>, <codeph>"solid"</codeph>, <codeph>"inset"</codeph> und <codeph>"outset"</codeph>. Der Standardwert hängt von der Komponentenklasse ab. Wenn er für diese Klasse nicht außer Kraft gesetzt wird, ist er <codeph>"inset"</codeph>. Der Standardwert für die meisten Container ist <codeph>"none"</codeph>. Die <codeph>"inset"</codeph>- und <codeph>"outset"</codeph>-Werte sind nur beim Halo-Thema gültig.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:VideoDisplay" playerVersion="Flash9" type="Class">
<description>
  Klasse für die Rahmenskin einer Komponente. <codeph/><codeph/> <codeph/><codeph/> Um den Standardwert für eine Komponente festzustellen, sehen Sie in der Standard-CSS-Datei nach.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  Seiten des Begrenzungsrahmens. Ein String mit Leerzeichen als Trennzeichen, der festlegt, welche Seiten des Rahmens angezeigt werden sollen. Der String kann <codeph>"left"</codeph>, <codeph>"top"</codeph>, <codeph>"right"</codeph> und <codeph>"bottom"</codeph> in beliebiger Reihenfolge enthalten. Der Standardwert ist <codeph>"left top right bottom"</codeph>, wodurch alle vier Seiten angezeigt werden. Dieser Stil wird nur verwendet, wenn borderStyle <codeph>"solid"</codeph> ist.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Farbe des Rahmens. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Alpha des Rahmens.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  Skaliert das von <codeph>backgroundImage</codeph> festgelegte Bild auf verschiedene prozentuale Größen. Ein Wert von <codeph>"100%"</codeph> streckt das Bild über die gesamte Komponente. Um einen Prozentwert festzulegen, müssen Sie das Prozentzeichen (%) angeben. Der Standardwert des Application-Containers ist <codeph>100%</codeph>. Der Standardwert für alle anderen Container ist <codeph>auto</codeph>, wodurch die Originalgröße des Bilds beibehalten wird.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Das Hintergrundbild einer Komponente. Es kann eine absolute oder relative URL oder Klasse sein. Sie können entweder <codeph>backgroundColor</codeph> oder <codeph>backgroundImage</codeph> festlegen. Das Hintergrundbild wird über der Hintergrundfarbe angezeigt. Der Standardwert ist <codeph>undefined</codeph>, also 
„nicht festgesetzt“. Wenn dieser Stil und der <codeph>backgroundColor</codeph>-Stil nicht definiert sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint das Hintergrundbild eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Hintergrundfarbe der Komponente, wenn sie deaktiviert ist. Der globale Standardwert ist <codeph>undefined</codeph>. Der Standardwert für List-Steuerelemente ist <codeph>0xDDDDDD</codeph> (hellgrau). Ist ein Container deaktiviert, erscheint der Hintergrund abgeblendet; der Abblendungsgrad wird durch den <codeph>disabledOverlayAlpha</codeph>-Stil bestimmt.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Die Hintergrundfarbe einer Komponente. Sie können <codeph>backgroundColor</codeph> und <codeph>backgroundImage</codeph> oder beides gleichzeitig festlegen. Manche Komponenten haben keinen Hintergrund. Das DataGrid-Steuerelement ignoriert diesen Stil. Der Standardwert ist <codeph>undefined</codeph>. Das heißt, dass er nicht eingestellt ist. Wenn dieser Stil und der <codeph>backgroundImage</codeph>-Stil <codeph>undefined</codeph> sind, hat die Komponente einen transparenten Hintergrund.
 
  <p>Beim Application-Container definiert dieser Stil die Hintergrundfarbe während des Ladens der Anwendung und den Farbverlauf des Hintergrunds bei laufender Anwendung. Flex berechnet das Verlaufsmuster zwischen einer etwas dunkleren und einer etwas helleren als der festgelegten Farbe.</p>
 
  <p>Die Standardskins für die meisten Flex-Steuerelemente sind teilweise transparent. Als Folge davon scheint die Hintergrundfarbe eines Containers teilweise auf die Steuerelemente im Container durch. Das kann vermieden werden, indem die Alphawerte der <codeph>fillAlphas</codeph>-Eigenschaft des Steuerelements auf 1 gesetzt werden, wie es im nachfolgenden Beispiel zu sehen ist:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Die Alphaebene der Farbe wird durch die <codeph>backgroundColor</codeph>-Eigenschaft festgelegt, die des Bilds oder der SWF-Datei durch den <codeph>backgroundImage</codeph>-Stil. Gültige Werte sind 0,0 bis 1,0. Bei den meisten Steuerelementen ist der Standardwert 1,0, aber bei den Quickinfo-Steuerelementen beträgt er 0,95 und bei den Alert-Steuerelementen 0.9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:VideoDisplay&gt;</code> tag inherits all the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:VideoDisplay
    <strong>Properties</strong>
    autoBandWidthDetection="false|true"
    autoPlay="true|false"
    autoRewind="true|false"
    bufferTime="0.1"
    cuePointManagerClass=""
    cuePoints=""
    idleTimeout="300000"
    live="false|true"
    maintainAspectRatio="true|false"
    playheadTime=""
    playheadUpdateInterval="250"
    progressInterval="250"
    source=""
    totalTime=""
    volume="0.75"
  
    <b>Styles</b>
    backgroundAlpha="1.0"
    backgroundColor="0x000000"
    backgroundImage="undefined"
    backgroundSize="undefined"
    borderColor="undefined"
    borderSides="left top right bottom"
    borderSkin="ClassReference('mx.skins.halo.HaloBorder')"
    borderStyle="none"
    borderThickness="1"
    cornerRadius="0"
    dropShadowColor="0x000000"
    dropShadowEnabled="false|true"
    shadowDirection="center"
    shadowDistance="2"
  
    <strong>Events</strong>
    close="<i>No default</i>"
    complete="<i>No default</i>"
    cuePoint="<i>No default</i>"
    playheadUpdate="<i>No default</i>"
    progress="<i>No default</i>"
    ready="<i>No default</i>"
    rewind="<i>No default</i>"
    stateChange="<i>No default</i>"
 
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Mithilfe des VideoDisplay-Steuerelements können Sie FLV-Dateien in Flex-Anwendungen abspielen. Es unterstützt den progressiven Download über HTTP sowie Streaming vom Flash Media Server und aus einem Camera-Objekt.
 
  </apiDesc><example conref="VideoDisplayExample.mxml"><swfblock conref="examples/VideoDisplayExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.STATE_CHANGE_stateChange"><apiName>stateChange</apiName><shortdesc>
  Wird ausgelöst, wenn der Status des Steuerelements sich ändert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Status des Steuerelements sich ändert.
 
  <p>Mithilfe dieses Ereignisses können Sie verfolgen, wann die Wiedergabe in den nicht interaktiven Status bzw. wieder zurückgeschaltet wird (z. B. während der Verbindungsherstellung, bei Größenänderungen oder beim Zurückspulen). Im nicht interaktiven Status werden Aufrufe der Methoden <codeph>play()</codeph>, <codeph>pause()</codeph> und <codeph>stop()</codeph> und Schreibvorgänge in der <codeph>playHeadTime</codeph>-Eigenschaft in eine Warteschlange gestellt und anschließend ausgeführt, wenn der Player wieder interaktiv wird.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.REWIND_rewind"><apiName>rewind</apiName><shortdesc>
  Wird beim automatischen Zurückspulen des Steuerelements ausgelöst.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.REWIND</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird beim automatischen Zurückspulen des Steuerelements ausgelöst.
 
  </apiDesc></adobeApiEventDetail><related-links><link href="mx.controls.xml#VideoDisplay/autoRewind"><linktext>autoRewind</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.READY_ready"><apiName>ready</apiName><shortdesc>
  Wird ausgelöst, wenn die FLV-Datei geladen wurde und abgespielt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.READY</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die FLV-Datei geladen wurde und abgespielt werden kann.
 
  <p>Dieses Ereignis wird ausgelöst, wenn das VideoDisplay-Steuerelement nach dem Laden einer neuen FLV-Datei mithilfe der <codeph>load()</codeph>- oder <codeph>play()</codeph>-Methode zum ersten Mal in den interaktiven Status geschaltet wird. Es wird für jede geladene FLV-Datei nur einmal ausgelöst.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Wird laufend ausgelöst, bis die FLV-Datei vollständig heruntergeladen wurde.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird laufend gesendet, bis die FLV-Datei vollständig heruntergeladen wurde.
 
  <p>Mithilfe dieses Ereignisses können Sie die Anzahl der Byte überprüfen, die geladen oder im Puffer sind. Das Senden dieses Ereignisses beginnt, wenn die <codeph>load()</codeph>- oder <codeph>play()</codeph>-Methode zum ersten Mal aufgerufen wird, und endet, wenn alle Byte geladen sind oder es zu einem Netzwerkfehler kommt.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><shortdesc>
  Wird laufend gesendet, während das Video abgespielt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird laufend gesendet, während das Video abgespielt wird. Der Zeitabstand zwischen den Ereignissen wird mithilfe der <codeph>playheadUpdateInterval</codeph>-Eigenschaft in Millisekunden angegeben. Der Standardwert ist 250 ms. Wird das Video angehalten oder beendet, wird das Ereignis nicht gesendet.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.MetadataEvent.METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><shortdesc>
  Wird ausgelöst, wenn in der FLV-Datei zum ersten Mal Metadaten erreicht werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MetadataEvent.METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>mx.events.MetadataEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn in der FLV-Datei zum ersten Mal Metadaten erreicht werden.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.CuePointEvent.CUE_POINT_cuePoint"><apiName>cuePoint</apiName><shortdesc>
  Wird ausgelöst, wenn der Wert der time-Eigenschaft eines Cue-Points mit der aktuellen Abspielkopfposition übereinstimmt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CuePointEvent.CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events.CuePointEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn der Wert der <codeph>time</codeph>-Eigenschaft eines Cue-Points mit der aktuellen Abspielkopfposition übereinstimmt.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  Wird ausgelöst, wenn das Ende der FLV-Datei erreicht ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.COMPLETE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das Ende der FLV-Datei erreicht ist.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Wird ausgelöst, wenn das NetConnection-Objekt geschlossen wird, entweder durch Zeitüberschreitung oder durch Aufrufen der close()-Methode.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das NetConnection-Objekt geschlossen wird, entweder durch Zeitüberschreitung oder durch Aufrufen der <codeph>close()</codeph>-Methode. Dieses Ereignis wird bei der Arbeit mit Flash Media Server verwendet.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:VideoDisplay:VideoDisplay"><apiName>VideoDisplay</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:VideoDisplay:attachCamera"><apiName>attachCamera</apiName><shortdesc>
      Legt fest die Wiedergabe eines Videostreams aus einer Kamera fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>camera</apiItemName><apiType value="flash.media:Camera"/><apiDesc>Ein Camera-Objekt, das Videodaten erfasst.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Legt die Wiedergabe eines Videostreams aus einer Kamera fest. Das Video wird innerhalb des Steuerelements im Anwendungsfenster angezeigt. Beim Abspielen eines Streams aus einer Kamera darf die <codeph>play()</codeph>-Methode nicht aufgerufen werden.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:close"><apiName>close</apiName><shortdesc>
      Erzwingt das Schließen eines Eingabestreams und die Herstellung der Verbindung zu Flash Media Server.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Erzwingt das Schließen eines Eingabestreams und die Herstellung der Verbindung zu Flash Media Server. Durch Aufrufen dieser Methode wird das <codeph>close</codeph>-Ereignis ausgelöst. Ein direkter Aufruf dieser Methode ist normalerweise nicht erforderlich, da die Verbindung nach Erreichen des mithilfe der <codeph>idleTimeout</codeph>-Eigenschaft definierten Zeitlimits für Inaktivität automatisch geschlossen wird.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:protected:createBorder"><apiName>createBorder</apiName><shortdesc>
      Erzeugt den Rahmen für diese Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Erzeugt den Rahmen für diese Komponente. Normalerweise wird der Rahmen durch <codeph>borderStyle</codeph> und den <codeph>borderSkin</codeph>-Stil bestimmt. Er muss die Rahmeneigenschaft auf die Instanz des Rahmens setzen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:protected:layoutChrome"><apiName>layoutChrome</apiName><shortdesc>
      Reagiert auf Größenänderungen durch Festlegen der Positionen und Größen der Rahmen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleX</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Reagiert auf Größenänderungen durch Festlegen der Positionen und Größen der Rahmen.
     
      <p>Die <codeph>VideoDisplay.layoutChrome()</codeph>-Methode legt die Position und Größe des Rahmens für VideoDisplay fest. In jeder Unterklasse von VideoDisplay muss die <codeph>layoutChrome()</codeph>-Methode die <codeph>super.layoutChrome()</codeph>-Methode aufrufen, damit der Rahmen korrekt platziert wird.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:load"><apiName>load</apiName><shortdesc>
      Lädt die Mediendatei, ohne sie abzuspielen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Lädt die Mediendatei, ohne sie abzuspielen.
     
      <p>Diese Methode ist der <codeph>play</codeph>-Methode ähnlich, wobei die Datei jedoch zwar geladen, aber nicht abgespielt wird. Die Größe wird gegebenenfalls automatisch angepasst. Nach dem Laden und der automatischen Größenänderung hat das Steuerelement den Status <codeph>VideoEvent.PAUSED</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:pause"><apiName>pause</apiName><shortdesc>
      Hält die Wiedergabe an, ohne den Abspielkopf zu verschieben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Hält die Wiedergabe an, ohne den Playhead zu verschieben. Wurde die Wiedergabe bereits angehalten oder beendet, hat diese Methode keine Wirkung.  
     
      <p>Um die Wiedergabe erneut zu starten, rufen Sie die <codeph>play()</codeph>-Methode auf.</p>
     
      <p>Befindet sich das Steuerelement im nicht interaktiven Status, wird die Anforderung in eine Warteschlange gestellt.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:play"><apiName>play</apiName><shortdesc>
      Spielt die Mediendatei ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Spielt die Mediendatei ab. Falls die Datei noch nicht geladen wurde, lädt diese Methode sie. Diese Methode kann aufgerufen werden, während die Wiedergabe angehalten oder beendet ist oder während das Steuerelement Video abspielt.  
     
      <p>Befindet sich das Steuerelement im nicht interaktiven Status, wird die Anforderung in eine Warteschlange gestellt.</p>
     
      <p>Für Videostreams aus einer Kamera rufen Sie die <codeph>attachCamera()</codeph>-Methode anstelle der <codeph>play()</codeph>-Methode auf.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:stop"><apiName>stop</apiName><shortdesc>
      Beendet die Wiedergabe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Beendet die Wiedergabe. Wird für die <codeph>autoRewind</codeph>-Eigenschaft der Wert <codeph>true</codeph> festgelegt, wird das Video zum ersten Bild zurückgespult.  
     
      <p>Um die Wiedergabe neu zu starten, rufen Sie die <codeph>play()</codeph>-Methode auf.</p>
     
      <p>Wurde die Wiedergabe bereits beendet, hat diese Methode keine Wirkung. Befindet sich das Steuerelement im nicht interaktiven Status, wird die Anforderung in eine Warteschlange gestellt.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:VideoDisplay:protected:border"><apiName>border</apiName><shortdesc>
      Das Rahmenobjekt für das Steuerelement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IFlexDisplayObject</apiValueClassifier></apiValueDef><apiDesc>
      Das Rahmenobjekt für das Steuerelement.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoBandWidthDetection:get"><apiName>autoBandWidthDetection</apiName><shortdesc>
      Legt fest, ob das VideoDisplay-Steuerelement die integrierte automatische Bandbreitenfunktion nutzen soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob das VideoDisplay-Steuerelement die integrierte automatische Bandbreitenfunktion nutzen soll. Ist der Wert <codeph>false</codeph>, wird keine main.asc-Datei in Flash Media Server (FMS) 2 für die Verbindung zu FMS benötigt. Wird <codeph>true</codeph> festgelegt, müssen Sie eine main.asc-Datei implementieren und in der Ordnerstruktur von FMS speichern. In der main.asc-Datei müssen die folgenden Funktionen definiert werden:
     
      <ul>
      <li><pre>
      application.onConnect = function(p_client, p_autoSenseBW)
      {
        //Add security code here.     
        this.acceptConnection(p_client);      
        if (p_autoSenseBW)
          this.calculateClientBw(p_client);
        else
          p_client.call("onBWDone");
      }</pre></li>
     
      <li><pre>
      application.calculateClientBw = function(p_client)
      {
        // Add code to set the clients BandWidth.
        // Use p_client.getStats() which returns bytes_in 
        // and bytes_Out and check your bandWidth using 
        // p_client.call("onBWCheck", result, p_client.payload).
        p_client.call("onBWDone");
      }
      </pre>
      </li>
     
      <li><pre>
      Client.prototype.getStreamLength = function(p_streamName)
      {
        return Stream.length(p_streamName);
      }</pre>
      </li>
      </ul>
      
      Weitere Informationen zum Schreiben von main.asc finden Sie in der Dokumentation zu FMS.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoPlay:get"><apiName>autoPlay</apiName><shortdesc>
      Legt fest, ob die Wiedergabe des Videos sofort nach Festlegen der source-Eigenschaft gestartet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob die Wiedergabe des Videos sofort nach Festlegen der <codeph>source</codeph>-Eigenschaft gestartet werden soll. Ist der Wert <codeph>true</codeph>, wird die Videodatei sofort in den Puffer geladen und die Wiedergabe beginnt.
     
      <p>Auch wenn für <codeph>autoPlay</codeph> <codeph>false</codeph> festgelegt wird, beginnt Flex nach dem Aufruf der <codeph>initialize()</codeph>-Methode mit dem Laden des Videos. In Flash Media Server wird dabei der Stream erstellt und das erste Bild für die Anzeige geladen. (Wurde für <codeph>autoSize</codeph> oder <codeph>aspectRatio</codeph>der Wert <codeph>true</codeph> festgelegt, werden auch weitere Bilder geladen). Bei HTTP-Downloads beginnt Flex mit dem Herunterladen des Stream und zeigt das erste Bild an.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoRewind:get"><apiName>autoRewind</apiName><shortdesc>
      Bestimmt, ob die FLV-Datei beim Beenden der Wiedergabe zum ersten Bild zurückgespult wird. Die Wiedergabe kann durch Aufrufen der stop()-Methode oder durch Erreichen des Streamendes beendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bestimmt, ob die FLV-Datei beim Beenden der Wiedergabe zum ersten Bild zurückgespult wird. Die Wiedergabe kann durch Aufrufen der <codeph>stop()</codeph>-Methode oder durch Erreichen des Streamendes beendet werden. Diese Eigenschaft hat keine Wirkung für Live-Streaming-Video.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:borderMetrics:get"><apiName>borderMetrics</apiName><shortdesc>
      Gibt ein EdgeMetrics-Objekt zurück, das über vier Eigenschaften verfügt: links, oben, rechts und unten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:EdgeMetrics</apiValueClassifier></apiValueDef><apiDesc>
      Gibt ein EdgeMetrics-Objekt zurück, das über vier Eigenschaften verfügt: <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> und <codeph>bottom</codeph>. Der Wert der einzelnen Eigenschaften entspricht der Rahmenstärke jeweils einer Seite des Rahmens um das Steuerelement in Pixeln.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bufferTime:get"><apiName>bufferTime</apiName><shortdesc>
      Zeitspanne (in Sekunden), die das Video im Puffer gespeichert wird, bevor die Wiedergabe beginnt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Zeitspanne (in Sekunden), die das Video im Puffer gespeichert wird, bevor die Wiedergabe beginnt. Bei langsamen Verbindungen, die Streaming über RTMP nutzen, muss ein höherer Wert als der Standardwert gewählt werden.  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
      Die Anzahl der bereits geladenen Byte, die für die Wiedergabe zur Verfügung stehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Anzahl der bereits geladenen Byte, die für die Wiedergabe zur Verfügung stehen. Dieser Wert ist nur für Medien von Nutzen, die über HTTP geladen wurden.
     
      <p>Enthält „-1“, wenn kein Eingabestream vorhanden ist, wenn der Stream vom Flash Media Server erfolgt oder wenn die Informationen noch nicht verfügbar sind. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
      Gesamtanzahl der zu ladenden Byte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Gesamtanzahl der zu ladenden Byte. Dieser Wert ist nur für Medien von Nutzen, die über HTTP geladen wurden.
     
      <p>Enthält „-1“, wenn kein Eingabestream vorhanden ist, wenn der Stream vom Flash Media Server erfolgt oder wenn die Informationen noch nicht verfügbar sind. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:cuePointManager:get"><apiName>cuePointManager</apiName><shortdesc>
      Die mit dem VideoPlayer-Steuerelement verknüpfte Instanz der CuePointManager-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die mit dem VideoPlayer-Steuerelement verbundene Instanz der CuePointManager-Klasse. Mithilfe dieses Objekts können Sie Cue-Points steuern. Zu diesem Zweck können Sie auch die <codeph>cuePoints</codeph>-Eigenschaft verwenden.
     
      <p>Mithilfe von Cue-Points lösen Sie <codeph>cuePoint</codeph>-Ereignisse aus, wenn bei der Wiedergabe des Videos die angegebene Position erreicht ist. Zum Festlegen von Cue-Points verwenden Sie Methoden der CuePointManager-Klasse. </p>
     
     <p>Cue-Points, die in die FLV-Datei eingebettet sind, stehen nicht über <codeph>cuePoints</codeph> oder <codeph>cuePointManager</codeph> zur Verfügung. Um diese abzurufen, verwenden Sie die <codeph>metadata</codeph>-Eigenschaft oder das <codeph>metadataReceived</codeph>-Ereignis.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.videoClasses.xml#CuePointManager"><linktext>mx.controls.videoClasses.CuePointManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:cuePointManagerClass:get"><apiName>cuePointManagerClass</apiName><shortdesc>
      Der zu verwendende Cue-Point-Manager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Class"/></apiValueDef><apiDesc>
      Der zu verwendende Cue-Point-Manager. Wählen Sie hier mx.controls.videoClasses.CuePointManager, um die Verwaltung von Cue-Points zu aktivieren.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.videoClasses.xml#CuePointManager"><linktext>mx.controls.videoClasses.CuePointManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:cuePoints:get"><apiName>cuePoints</apiName><shortdesc>
      Das Array der mit dem Steuerelement verknüpften Cue-Points.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Das Array der mit dem Steuerelement verknüpften Cue-Points. Mithilfe dieser Eigenschaft können Sie Cue-Points steuern. Zu diesem Zweck können Sie auch die <codeph>cuePointManager</codeph>-Eigenschaft verwenden.
     
      <p>Mithilfe von Cue-Points lösen Sie <codeph>cuePoint</codeph>-Ereignisse aus, wenn bei der Wiedergabe des Videos die angegebene Position erreicht ist. Um Cue-Points festzulegen, übergeben Sie ein Array an die <codeph>cuePoints</codeph>-Eigenschaft. </p>
     
     <p>Cue-Points, die in die FLV-Datei eingebettet sind, stehen nicht über <codeph>cuePoints</codeph> oder <codeph>cuePointManager</codeph> zur Verfügung. Um diese abzurufen, verwenden Sie die <codeph>metadata</codeph>-Eigenschaft oder das <codeph>metadataReceived</codeph>-Ereignis.</p>
     
      <p>Jedes Element des Arrays enthält zwei Felder:</p>
      <ul>
        <li>Das <codeph>name</codeph>-Feld enthält einen beliebigen Namen des Cue-Points.</li>
        <li>Das <codeph>time</codeph>-Feld gibt die Abspielkopfposition (in Sekunden) des VideoDisplay-Steuerelements an, mit dem der Cue-Point verknüpft ist.</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:idleTimeout:get"><apiName>idleTimeout</apiName><shortdesc>
      Legt fest, wie lange (in Millisekunden) die Verbindung inaktiv (angehalten oder beendet) sein kann, bevor die Verbindung zum Flash Media Server abgebrochen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>300000 (five minutes)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, wie lange (in Millisekunden) die Verbindung inaktiv (angehalten oder beendet) sein kann, bevor die Verbindung zum Flash Media Server abgebrochen wird. Diese Eigenschaft hat keine Wirkung beim HTTP-Download von FLV-Dateien. Wenn diese Eigenschaft festgelegt wird, während der Videostream bereits inaktiv ist, wird die Timeout-Zeit mit dem neuen Wert neu gestartet.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:live:get"><apiName>live</apiName><shortdesc>
      Legt fest, ob das Steuerelement zum Streaming eines Live-Feeds verwendet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob das Steuerelement zum Streaming eines Live-Feeds verwendet werden soll. Wählen Sie <codeph>true</codeph> für das Streaming von Live-Feeds aus Flash Media Server. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      Legt fest, ob das Steuerelement beim Ändern der Größe des Videos das ursprüngliche Seitenverhältnis beibehalten soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob das Steuerelement beim Ändern der Größe des Videos das ursprüngliche Seitenverhältnis beibehalten soll.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:metadata:get"><apiName>metadata</apiName><shortdesc>
     Ein Objekt, das ein Metadaten-Informationspaket enthält, das durch einen Aufruf der NetStream.onMetaData()-Rückrufmethode (sofern verfügbar) eingeht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
     Ein Objekt, das ein Metadaten-Informationspaket enthält, das durch einen Aufruf der <codeph>NetStream.onMetaData()</codeph>-Rückrufmethode (sofern verfügbar) eingeht. Bereit, wenn das <codeph>metadataReceived</codeph>-Ereignis ausgelöst wird.
     
     <p>Wenn die FLV-Datei mit dem Flash 8-Encoder kodiert wurde, enthält die <codeph>metadata</codeph>-Eigenschaft die folgenden Informationen. Ältere FLV-Dateien enthalten nur die Werte für <codeph>height</codeph>, <codeph>width</codeph> und <codeph>duration</codeph>.</p>
     
     <adobetable class="innertable">
      
          
          
     
     
     
     
     
     
     
     
     
     <tgroup cols="2"><thead><row><entry><b>Parameter</b></entry><entry><b>Beschreibung</b></entry></row></thead><tbody><row><entry><codeph>canSeekToEnd</codeph></entry><entry>Ein boolescher Wert; die Einstellung <codeph>true</codeph> bedeutet, dass die FLV-Datei mit einem Schlüsselbild im letzten Bild kodiert wurde, das den Suchlauf bis zum Ende eines progressiv heruntergeladenen Movieclips ermöglicht. Der Wert lautet <codeph>false</codeph>, wenn die FLV-Datei nicht mit einem Schlüsselbild im letzten Bild kodiert wurde.</entry></row><row><entry><codeph>cuePoints</codeph></entry><entry>Ein Array von Objekten, je eines für jeden in die FLV-Datei eingebetteten Cue-Point. Der Wert ist nicht definiert, wenn die FLV-Datei keine Cue-Points enthält. Jedes Objekt hat die folgenden Eigenschaften:
          
              <ul>
                  <li><codeph>type</codeph>: Ein String, der den Typ des Cue-Points als „navigation“ oder „event“ angibt.</li>
                  <li><codeph>name</codeph>: Ein String, der den Namen des Cue-Points angibt.</li>
                  <li><codeph>time</codeph>: Eine Zahl, die die Zeit des Cue-Points in Sekunden mit einer Genauigkeit von drei Dezimalstellen (Millisekunden) angibt.</li>
                  <li><codeph>parameters</codeph>: Ein optionales Objekt mit Name-Wert-Paaren, die vom Benutzer beim Erstellen des Cue-Points festgelegt wurden.</li>
              </ul>
          </entry></row><row><entry><codeph>audiocodecid</codeph></entry><entry>Eine Zahl, die den verwendeten Audio-Codec (Kodier-/Dekodiertechnik) angibt.</entry></row><row><entry><codeph>audiodelay</codeph></entry><entry> Eine Zahl, die für die Zeit <codeph>0</codeph> in der Quelldatei steht, von der die FLV-Datei kodiert wurde. 
     <p>Der Videoinhalt wird um eine kurze Zeitspanne verzögert, die für die Synchronisierung mit dem Audio erforderlich ist. Wenn der <codeph>audiodelay</codeph>-Wert beispielsweise <codeph>.038</codeph> lautet, startet das Video, das zum Zeitpunkt <codeph>0</codeph> in der Quelldatei gestartet ist, zum Zeitpunkt <codeph>.038</codeph> in der FLV-Datei.</p> 
     <p>Die VideoDisplay-Klasse kompensiert diese Verzögerung in ihren Zeiteinstellungen. Das bedeutet, dass Sie weiterhin die Zeiteinstellungen verwenden können, die Sie in der Quelldatei verwendet haben.</p>
</entry></row><row><entry><codeph>audiodatarate</codeph></entry><entry>Eine Zahl, die die Datenrate des Audios in Kilobyte pro Sekunde angibt.</entry></row><row><entry><codeph>videocodecid</codeph></entry><entry>Eine Zahl, die die Codec-Version, mit der das Video kodiert wurde, angibt.</entry></row><row><entry><codeph>framerate</codeph></entry><entry>Eine Zahl, die die Bildrate der FLV-Datei angibt.</entry></row><row><entry><codeph>videodatarate</codeph></entry><entry>Eine Zahl, die die Video-Datenrate der FLV-Datei angibt.</entry></row><row><entry><codeph>height</codeph></entry><entry>Eine Zahl, die die Höhe der FLV-Datei angibt.</entry></row><row><entry><codeph>width</codeph></entry><entry>Eine Zahl, die die Breite der FLV-Datei angibt.</entry></row><row><entry><codeph>duration</codeph></entry><entry>Eine Zahl, die die Dauer der FLV-Datei in Sekunden angibt.</entry></row></tbody></tgroup></adobetable>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      Abspielkopfposition in Sekunden vom Start der Videowiedergabe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Playhead-Position in Sekunden vom Start der Videowiedergabe. Die Ereignisobjekte für viele VideoPlay-Ereignisse enthalten die Playhead-Position, damit die Position in der Videodatei, an der das Ereignis eingetreten ist, ermittelt werden kann.
     
      <p>Wenn Sie für diese Eigenschaft einen Wert in Sekunden angeben, wird ein Suchvorgang ausgeführt. Wird das Video gerade abgespielt, wird die Wiedergabe von der neuen Playhead-Position an fortgesetzt. Ist das Video angehalten, springt es zur neuen Playhead-Position und bleibt angehalten. Wurde die Wiedergabe des Videos beendet, springt es zur neuen Playhead-Position und wird dort angehalten. Bei Video-Livestreams hat diese Eigenschaft keine Wirkung.</p>
     
      <p>Hat die neue Playhead-Position einen Wert kleiner 0 oder NaN, gibt das Steuerelement einen Ausnahmefehler aus. Liegt die neue Playhead-Position nach dem Ende des Videos oder des bereits heruntergeladenen Teils der der Videodatei, führt das Steuerelement die Suche dennoch durch.</p>
     
      <p>Bei FLV-Dateien bewirkt die <codeph>playheadTime</codeph>-Eigenschaft, dass das Video zu dem Schlüsselbild springt, das der angegebenen Position am nächsten liegt, sofern bei der Kodierung in der FLV-Datei Schlüsselbilder festgelegt wurden. Wenn für die gewünschte Position während der Kodierung kein Schlüsselbild angegeben wurde, führt die Suche daher nicht unbedingt genau an diese Position.</p>
     
      <p>Wenn der Player in einem nicht interaktiven Status ist, wird die Anforderung in eine Warteschlange gestellt.</p>
     
      <p>Diese Eigenschaft gibt einen Ausnahmefehler aus, wenn sie eingestellt wird, ohne dass ein Stream verbunden ist. Bestimmen Sie mithilfe des <codeph>stateChange</codeph>-Ereignisses und der <codeph>connected</codeph>-Eigenschaft, wann es sicher ist, diese Eigenschaft festzulegen.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playheadUpdateInterval:get"><apiName>playheadUpdateInterval</apiName><shortdesc>
      Gibt das Zeitintervall (in Millisekunden) zwischen den einzelnen playheadUpdate-Ereignissen an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>250 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt das Zeitintervall (in Millisekunden) zwischen den einzelnen <codeph>playheadUpdate</codeph>-Ereignissen an.
     
      <p>Wenn Sie diese Eigenschaft während der Wiedergabe des Videos festlegen, startet der Timer erneut bei 0, und das nächste <codeph>playheadUpdate</codeph>-Ereignis tritt nach Ablauf des neuen Intervalls ein.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playing:get"><apiName>playing</apiName><shortdesc>
      „True“ bedeutet, dass die Medien gerade abgespielt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      <codeph>True</codeph> bedeutet, dass die Medien gerade abgespielt werden.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:progressInterval:get"><apiName>progressInterval</apiName><shortdesc>
      Legt das Zeitintervall (in Millisekunden) zwischen den einzelnen progress-Ereignissen fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>250 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt das Zeitintervall (in Millisekunden) zwischen den einzelnen <codeph>progress</codeph>-Ereignissen fest. Das <codeph>progress</codeph>-Ereignis tritt ständig ein, bis die Videodatei vollständig heruntergeladen ist.
     
      <p>Wenn Sie diese Eigenschaft festlegen, während das Video heruntergeladen wird, beginnt der Timer erneut bei 0 und das nächste <codeph>progress</codeph>-Ereignis tritt nach Ablauf des neuen Zeitintervalls ein.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:source:get"><apiName>source</apiName><shortdesc>
      Relativer Pfad und Dateiname der zu streamenden FLV-Datei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Relativer Pfad und Dateiname der zu streamenden FLV-Datei.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:state:get"><apiName>state</apiName><shortdesc>
      Der aktuelle Status des VideoDisplay-Steuerelements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/><apiDefaultValue>VideoEvent.DISCONNECTED
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Der aktuelle Status des VideoDisplay-Steuerelements. Diese Eigenschaft kann durch Aufrufen der Methoden <codeph>load()</codeph>, <codeph>play()</codeph>, <codeph>stop()</codeph> und <codeph>pause()</codeph> und durch Festlegen der <codeph>playHeadTime</codeph>-Eigenschaft festgelegt werden.
     
      <p>Für diese Eigenschaft können die folgenden Werte in der VideoEvent-Klasse definiert werden: <codeph>VideoEvent.BUFFERING</codeph>, <codeph>VideoEvent.CONNECTION_ERROR</codeph>, <codeph>VideoEvent.DISCONNECTED</codeph>, <codeph>VideoEvent.EXEC_QUEUED_CMD</codeph>, <codeph>VideoEvent.LOADING</codeph>, <codeph>VideoEvent.PAUSED</codeph>, <codeph>VideoEvent.PLAYING</codeph>, <codeph>VideoEvent.RESIZING</codeph>, <codeph>VideoEvent.REWINDING</codeph>, <codeph>VideoEvent.SEEKING</codeph> und <codeph>VideoEvent.STOPPED</codeph>. </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#VideoEvent"><linktext>mx.events.VideoEvent</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
      Gibt an, ob das VideoDisplay-Steuerelement sich im aktiven (true) oder inaktiven Status (false) befindet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Gibt an, ob das VideoDisplay-Steuerelement sich im interaktiven (<codeph>true</codeph>) oder nicht interaktiven Status (<codeph>false</codeph>) befindet. Das Steuerelement wird in den nicht interaktiven Status geschaltet, während das Video geladen oder zurückgespult wird.
      
      <p>Dasselbe geschieht, wenn die <codeph>state</codeph>-Eigenschaft einen der folgenden Werte annimmt: <codeph>VideoEvent.CONNECTION_ERROR</codeph>, <codeph>VideoEvent.EXEC_QUEUED_CMD</codeph>, <codeph>VideoEvent.RESIZING</codeph> oder <codeph>VideoEvent.SEEKING</codeph>. </p>
      
      <p>Wenn das Steuerelement sich im nicht interaktiven Status befindet, werden Aufrufe der Methoden <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> und <codeph>pause()</codeph> in eine Warteschlange gestellt und ausgeführt, wenn das Steuerelement wieder in den interaktiven Status wechselt.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:totalTime:get"><apiName>totalTime</apiName><shortdesc>
      Die Gesamtdauer der Medien in Sekunden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Gesamtdauer der Medien in Sekunden. Für FLV 1.0-Videodateien legen Sie diese Eigenschaft manuell fest. In FLV 1.1 und höher berechnet das Steuerelement diesen Wert automatisch.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:videoHeight:get"><apiName>videoHeight</apiName><shortdesc>
      Die Höhe der geladenen FLV-Datei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Höhe der geladenen FLV-Datei. Nimmt den Wert <codeph>-1</codeph> an, wenn noch keine FLV-Datei geladen ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:videoWidth:get"><apiName>videoWidth</apiName><shortdesc>
      Die Breite der geladenen FLV-Datei.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Die Breite der geladenen FLV-Datei. Nimmt den Wert <codeph>-1</codeph> an, wenn noch keine FLV-Datei geladen ist.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:volume:get"><apiName>volume</apiName><shortdesc>
      Die Lautstärke als Wert zwischen 0 und 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.75
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Lautstärke als Wert zwischen 0 und 1.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:LinkBar"><apiName>LinkBar</apiName><shortdesc>
  Das LinkBar-Steuerelement definiert eine horizontale oder vertikale Zeile von LinkButton-Steuerelementen, die Hyperlink-Ziele angeben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen untergeordneten Elementen in vertikaler Richtung.
 
  </description>
<default>8
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Textfarbe des Hyperlinks, wenn Sie darauf klicken. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Textfarbe des Hyperlinks, wenn der Cursor auf ihn gezogen wird. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="separatorWidth" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Breite des Trennzeichens in Pixeln.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="separatorSkin" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Class">
<description>
  Trennsymbol zwischen den LinkButton-Steuerelementen in der LinkBar. 
 
  </description>
<default>mx.skins.halo.LinkSeparator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="separatorColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Farbe der Trennzeichen in der Standardskin für Trennzeichen.
 
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Hintergrundfarbe des LinkButton-Steuerelements, wenn Sie darauf klicken. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Farbe der Hyperlinks bei Rollover. Der Standardwert wird durch die aktuelle <codeph>themeColor</codeph> bestimmt. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der oberen Rahmenlinie und den LinkButton-Steuerelementen.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Anzahl der Pixel zwischen der unteren Rahmenlinie und den LinkButton-Steuerelementen.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="linkButtonStyleName" owner="mx.controls:LinkBar" playerVersion="Flash9" type="String">
<description>
  Name der CSS-Stildeklaration, welche die für die Navigationselemente für Hyperlinkschaltflächen zu verwendenden Stile festlegt.
 
  </description>
<default>""
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Horizontaler Abstand zwischen den LinkButton-Steuerelementen in Pixeln.
 
  </description>
<default>8
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>The <code>&lt;mx:LinkBar&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:LinkBar
    <b>Properties</b>
    selectedIndex="-1"
  
    <b>Styles</b>
    linkButtonStyleName=""
    horizontalGap="8"
    paddingBottom="2"
    paddingTop="2"
    rollOverColor="0xEEFEE6"
    selectionColor="0xCDFFC1"
    separatorColor="<i>No default</i>"
    separatorSkin="0x000000"
    separatorWidth="1"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x000000"
    verticalGap="8"
    &gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:LinkBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:NavBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das LinkBar-Steuerelement definiert eine horizontale oder vertikale Zeile von LinkButton-Steuerelementen, die Hyperlink-Ziele angeben. Mithilfe von LinkBar-Steuerelementen wird normalerweise der aktive untergeordnete Container eines ViewStack-Containers definiert oder ein unabhängiger Satz von Hyperlinks erstellt.
 
  <p>Das LinkBar-Steuerelement erstellt LinkButton-Steuerelemente anhand des Werts der dazugehörigen <codeph>dataProvider</codeph>-Eigenschaft. Obgleich LinkBar eine Unterklasse von Container ist, sollten keine Methoden wie <codeph>Container.addChild()</codeph> und <codeph>Container.removeChild()</codeph> zum Hinzufügen und Entfernen von LinkButton-Steuerelementen verwendet werden. Verwenden Sie stattdessen Methoden wie <codeph>addItem ()</codeph> und <codeph>removeItem()</codeph>, um die <codeph>dataProvider</codeph>-Eigenschaft zu ändern. Das LinkBar-Steuerelement fügt untergeordnete Elemente automatisch hinzu oder entfernt diese, wenn die <codeph>dataProvider</codeph>-Eigenschaft geändert wird.</p>
 
  <p>Das LinkBar-Steuerelement verfügt über die folgenden Standardeigenschaften:</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>Eigenschaft</entry><entry>Beschreibung</entry></row></thead><tbody><row>
        <entry>Bevorzugte Größe</entry>
        <entry>Breite: breit genug für den Beschriftungstext zuzüglich Auffüllung und Trennzeichen; Höhe: hoch genug für das größte untergeordnete Element.</entry>
     </row><row>
        <entry>Regeln für die Größenänderung von Steuerelementen</entry>
        <entry>Die Größe von LinkBar-Steuerelementen wird nicht standardmäßig geändert. Geben Sie einen Prozentsatz an, wenn Sie möchten, dass die Größe der LinkBar basierend auf der Größe des übergeordneten Containers geändert wird.</entry>
     </row><row>
        <entry>Auffüllung</entry>
        <entry>2 Pixel für die Oben-, Unten-, Links- und Rechts-Eigenschaften.</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LinkBarExample.mxml"><swfblock conref="examples/LinkBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#NavBar"><linktext>mx.controls.NavBar</linktext></link><link href="mx.containers.xml#ViewStack"><linktext>mx.containers.ViewStack</linktext></link><link href="mx.controls.xml#LinkButton"><linktext>mx.controls.LinkButton.</linktext></link><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link></related-links><apiConstructor id="mx.controls:LinkBar:LinkBar"><apiName>LinkBar</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:LinkBar:styleChanged"><apiName>styleChanged</apiName><shortdesc>
      
      Wird aufgerufen, wenn der Wert einer Stileigenschaft geändert wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>Der Name der geänderten Stileigenschaft.    
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Wird aufgerufen, wenn der Wert einer Stileigenschaft geändert wird. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:LinkBar:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Reagiert auf Größenänderungen durch Festlegen der Position und Größe der untergeordneten Elemente dieser LinkBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente als Pixelwert der Komponentenkoordinaten fest, wobei der Wert der <codeph>scaleX</codeph>-Eigenschaft der Komponente nicht berücksichtigt wird.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Reagiert auf Größenänderungen durch Festlegen der Position und Größe der untergeordneten Elemente dieser LinkBar. Weitere Informationen zur <codeph>updateDisplayList()</codeph>-Methode finden Sie im Abschnitt zur <codeph>UIComponent.updateDisplayList()</codeph>-Methode.
     
      <p>Die <codeph>LinkBar.updateDisplayList()</codeph>-Methode ruft zuerst die<codeph>Box.updateDisplayList()</codeph>-Methode auf, um die LinkButton-Steuerelemente zu platzieren. Weitere Informationen finden Sie im Abschnitt zur <codeph>Box.updateDisplayList()</codeph>-Methode. Nachdem Sie das Layout der LinkButton-Steuerelemente festgelegt haben, werden die Trennzeichen zwischen diesen platziert.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link><link href="mx.containers.xml#Box/updateDisplayList()"><linktext>mx.containers.Box.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.controls:LinkBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Die Indexposition des letzten ausgewählten LinkButton-Steuerelements, wenn das LinkBar-Steuerelement einen ViewStack-Container als Datenprovider nutzt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Indexposition des letzten ausgewählten LinkButton-Steuerelements, wenn das LinkBar-Steuerelement einen ViewStack-Container als Datenprovider nutzt.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>