<?xml version="1.0"?>
<apiPackage id="mx.controls.listClasses"><apiName>mx.controls.listClasses</apiName><apiDetail/><apiClassifier id="mx.controls.listClasses:IDropInListItemRenderer"><apiName>IDropInListItemRenderer</apiName><shortdesc>
  Interface des rendus d’élément supplémentaires.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Interface des rendus d’élément supplémentaires. La plupart de rendus IListItemRenderer ne sont pas supplémentaires. Ils sont censés utiliser un champ particulier de l’élément du fournisseur de données. Par exemple, ils peuvent affecter la propriété « lastName » de l’élément à la propriété <codeph>text</codeph> de l’étiquette. Il est facile d’écrire avec la liaison de données, mais dans ce cas, le rendu ne peut pas être réutilisé dans une autre colonne d’un contrôle DataGrid ou d’un autre contrôle List avec différents champs. L’objet IDropInListItemRenderer permet de réutiliser un rendu. Les classes de liste transmettent plus d’informations au rendu, afin qu’il puisse déterminer les champs à utiliser au moment de l’exécution.
 
  <p>Les composants que vous souhaitez utiliser comme rendus d’élément supplémentaires ou éditeurs d’élément supplémentaires doivent implémenter l’interface IDropInListItemRenderer. De nombreux composants Flex implémentent cette interface, et sont par conséquent utilisables comme rendus d’élément supplémentaires et éditeurs d’élément supplémentaires dans n’importe quelle colonne ou liste.</p>
 
  <p>Les rendus d’élément supplémentaires ou les éditeurs d’élément supplémentaires doivent également implémenter l’interface IDataRenderer pour définir la propriété <codeph>data</codeph>.</p> 
 
  <p>Lorsqu’un composant est utilisé en tant que rendu d’élément supplémentaire ou éditeur d’élément supplémentaire, Flex initialise la propriété <codeph>listData</codeph> du composant avec les données appropriées du contrôle List. Le composant peut ensuite utiliser la propriété <codeph>listData</codeph> pour initialiser la propriété <codeph>data</codeph> du rendu d’élément supplémentaire ou de l’éditeur d’élément supplémentaire.</p>
 
  <p>La propriété <codeph>listData</codeph> est de type BaseListData, dans lequel la classe BaseListData comporte quatre sous-classes : DataGridListData, ListData, TreeListData et MenuListData. Le type de données réel de la valeur de la propriété <codeph>listData</codeph> dépend du contrôle qui utilise le rendu d’élément supplémentaire ou l’éditeur d’élément supplémentaire. Pour un contrôle DataGrid, la valeur est de type DataGridListData, pour un contrôle List, la valeur est de type ListData, pour un contrôle Tree, la valeur est de type TreeListData et pour un contrôle Menu, la valeur est de type MenuListData..</p>
 
  <p>L’exemple suivant montre la méthode setter pour la propriété <codeph>data</codeph> du contrôle NumericStepper qui initialise la propriété <codeph>value</codeph> de NumericStepper en fonction de la valeur de la propriété <codeph>listData</codeph> :</p>
 
  <pre>
    public function set data(value:Object):void
    {
      _data = value;
    
      this.value = _listData ? parseFloat(_listData.label) : Number(_data);
    
      dispatchEvent(new FlexEvent(FlexEvent.DATA_CHANGE));
    }
  </pre>
 
  <p>Dans l’exemple ci-dessus, le contrôle NumericStepper ignore la propriété <codeph>data</codeph> lors de la définition de la propriété <codeph>value</codeph> de NumericStepper et utilise la propriété <codeph>listData</codeph> à la place.</p>
 
  <p>Pour implémenter l’interface IDropInListItemRenderer, définissez une méthode setter et getter pour implémenter la propriété <codeph>listData</codeph>. En général, la méthode setter écrit la valeur de la propriété <codeph>listData</codeph> sur une variable interne. La classe List affecte toujours cette propriété, puis définit l’élément du fournisseur de données dans la propriété <codeph>data</codeph>.</p>
 
  <p>Notez que la méthode setter de la propriété <codeph>listData</codeph> ne distribue pas d’événement. Cela s’explique par le fait que les classes de liste définissent toujours la propriété <codeph>listData</codeph>, puis la propriété <codeph>data</codeph>. La définition de la propriété <codeph>data</codeph> distribue également l’événement <codeph>dataChange</codeph>. Vous ne définissez jamais la propriété <codeph>listData</codeph> seule, de sorte qu’elle n’a pas besoin de distribuer son propre événement. </p>
 
  <p>La méthode setter <codeph>data</codeph> peut appeler la méthode <codeph>invalidateProperties()</codeph> si elle effectue une opération qui nécessite la mise à jour du contrôle. C’est alors au développeur du composant d’écrire une méthode <codeph>commitProperties()</codeph> pour déterminer que la propriété <codeph>listData</codeph> a été modifiée et pour la gérer comme il se doit. </p>
 
  <p>La méthode getter renvoie la valeur actuelle de la variable interne, comme l’illustre l’exemple suivant :</p>
  
  <pre>
    // Internal variable for the property value.
    private var _listData:BaseListData;
    
    // Make the listData property bindable.
    [Bindable("dataChange")]
    
    // Define the getter method.
    public function get listData():BaseListData
    {
      return _listData;
    }
    
    // Define the setter method,
    public function set listData(value:BaseListData):void
    {
      _listData = value;
    }
  </pre>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#BaseListData"><linktext>mx.controls.listClasses.BaseListData</linktext></link><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links><apiValue id="mx.controls.listClasses:IDropInListItemRenderer:mx.controls.listClasses:IDropInListItemRenderer:listData:get"><apiName>listData</apiName><shortdesc>
      Implémente la propriété listData à l’aide des méthodes setter et getter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      Implémente la propriété <codeph>listData</codeph> à l’aide des méthodes setter et getter. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:BaseListData"><apiName>BaseListData</apiName><shortdesc>
  La classe BaseListData définit le type de données de la propriété listData implémentée par les rendus ou les éditeurs d’élément supplémentaires.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe BaseListData définit le type de données de la propriété <codeph>listData</codeph> implémentée par les rendus ou les éditeurs d’élément supplémentaires. Tous les rendus d’élément et éditeurs d’élément supplémentaires doivent implémenter l’interface IDropInListItemRenderer, qui définit la propriété <codeph>listData</codeph>.
 
  <p>La propriété <codeph>listData</codeph> est de type BaseListData, dans lequel la classe BaseListData comporte trois sous-classes : DataGridListData, ListData et TreeListData. Le type de données réel de la valeur de la propriété <codeph>listData</codeph> dépend du contrôle qui utilise le rendu d’élément supplémentaire ou l’éditeur d’élément supplémentaire. Pour un contrôle DataGrid, la valeur est de type DataGridListData, pour un contrôle List, la valeur est de type ListData et pour un contrôle Tree, la valeur est de type TreeListData.</p>
 
  <p>Lorsqu’il est utilisé en tant que rendu d’élément supplémentaire ou éditeur d’élément supplémentaire, Flex définit la propriété <codeph>listData</codeph> sur une classe dérivée de BaseListData qui contient des informations calculées à propos de l’élément du fournisseur de données renfermant les données de l’élément.</p>
 
  <p>Bien que les propriétés de cette classe soient inscriptibles, vous devez les considérer comme étant en lecture seule. Elles sont initialisées par la classe List et lues par un rendu d’élément ou un éditeur d’élément. La modification de ces valeurs peut entraîner des résultats inattendus.</p>
 
  <p> </p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:BaseListData:BaseListData"><apiName>BaseListData</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>Représentation textuelle des données d’un élément.
     
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Identifiant unique.
     
      </apiDesc></apiParam><apiParam><apiItemName>owner</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiDesc>Référence au contrôle List.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Index de la rangée dans les rangées actuellement visibles du contrôle.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Index de la colonne dans les colonnes actuellement visibles du contrôle.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:BaseListData:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      Index de la colonne du contrôle basé sur List par rapport aux colonnes actuellement visibles du contrôle, où la première colonne se trouve à l’index 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de la colonne du contrôle basé sur List par rapport aux colonnes actuellement visibles du contrôle, où la première colonne se trouve à l’index 1. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:label"><apiName>label</apiName><shortdesc>
      Représentation textuelle des données d’élément, selon la méthode itemToLabel() de la classe List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Représentation textuelle des données d’élément, selon la méthode <codeph>itemToLabel()</codeph> de la classe List.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:owner"><apiName>owner</apiName><shortdesc>
      Référence à l’objet List à qui appartient cet élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
      Référence à l’objet List à qui appartient cet élément. Doit être une classe dérivée de la classe ListBase. Cette propriété est tapée en tant que composant IUIComponent de sorte que les suppléments comme Label et TextInput n’ont pas besoin de dépendre de l’objet List et de toutes ses dépendances.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Index de la rangée du contrôle DataGrid, List ou Tree par rapport aux rangées actuellement visibles du contrôle, où la première rangée se trouve à l’index 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de la rangée du contrôle DataGrid, List ou Tree par rapport aux rangées actuellement visibles du contrôle, où la première rangée se trouve à l’index 1. Par exemple, si vous cliquez sur un élément du contrôle, <codeph>rowIndex</codeph> est défini sur 3. Faites ensuite défiler le contrôle pour changer la position de la rangée dans les rangées visibles du contrôle, puis cliquez sur la même rangée qu’auparavant. <codeph>rowIndex</codeph> contient maintenant une valeur différente, qui correspond au nouvel index de la rangée parmi les rangées actuellement visibles.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:BaseListData:uid:get"><apiName>uid</apiName><shortdesc>
      Identifiant unique de cet élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Identifiant unique de cet élément.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:TileBase"><apiName>TileBase</apiName><shortdesc>
  La classe TileBase est la classe de base des contrôles qui affiche les éléments de données dans une séquence de rangées et de colonnes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:ListBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe TileBase est la classe de base des contrôles qui affiche les éléments de données dans une séquence de rangées et de colonnes. Les classes dérivées de TileBase ignorent les propriétés <codeph>variableRowHeight</codeph> et <codeph>wordWrap</codeph> héritées de leur classe parent. Tous les éléments de TileList possèdent la même largeur et la même hauteur.
 
  <p>Cette classe n’est pas utilisée directement dans les applications.</p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.controls.listClasses:TileBase:TileBase"><apiName>TileBase</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:TileBase:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      Appelé par la méthode updateDisplayList() pour ajuster la taille et la position de l’objet listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Largeur de l’objet listContent avant l’application d’une mise à l’échelle externe.
      
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Hauteur de l’objet listContent avant l’application d’une mise à l’échelle externe.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Appelé par la méthode <codeph>updateDisplayList()</codeph> pour ajuster la taille et la position de l’objet listContent.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:createItemRenderer"><apiName>createItemRenderer</apiName><shortdesc>
      Obtient le rendu approprié et utilise le rendu par défaut si aucun n’est spécifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Rendu d’élément.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Structure de données du rendu.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Obtient le rendu approprié et utilise le rendu par défaut si aucun n’est spécifié.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:drawTileBackground"><apiName>drawTileBackground</apiName><shortdesc>
      Trace l’arrière-plan d’une fenêtre.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Objet Sprite d’arrière-plan.
     
      
      </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Objet Sprite contenant l’arrière-plan de chaque fenêtre.
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Index de la rangée qui contient la fenêtre.
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiDesc>Index de la colonne qui contient la fenêtre.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Largeur de l’arrière-plan.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Hauteur de l’arrière-plan.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Couleur de remplissage de l’arrière-plan.
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément de la fenêtre.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Trace l’arrière-plan d’une fenêtre. Prend un objet Sprite, applique les dimensions et la couleur l’arrière-plan, puis retourne l’objet Sprite avec les valeurs appliquées.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:drawTileBackgrounds"><apiName>drawTileBackgrounds</apiName><shortdesc>
      Trace les arrière-plans, le cas échéant, derrière toutes les fenêtres.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Trace les arrière-plans, le cas échéant, derrière toutes les fenêtres. Cette implémentation donne à l’objet Sprite le nom « tileBGs » s’il n’existe pas, l’ajoute au bas de l’ordre z dans <codeph>listContent</codeph> et appelle <codeph>drawTileBackground()</codeph> pour chaque fenêtre visible.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Crée une nouvelle occurrence ListData et renseigne les champs en fonction de l’élément du fournisseur de données de saisie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Objet ListData récemment créé.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données utilisé pour renseigner la propriété ListData.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID de l’élément.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Index de l’élément dans le fournisseur de données.
      </apiDesc></apiParam><apiParam><apiItemName>columnNum</apiItemName><apiType value="int"/><apiDesc>Propriété columnIndex associée à cet élément. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Crée une nouvelle occurrence ListData et renseigne les champs en fonction de l’élément du fournisseur de données de saisie. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:TileBase:protected:scrollHorizontally"><apiName>scrollHorizontally</apiName><shortdesc>
      
      Ajuste les rendus en fonction d’un changement de la position du défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Nouvelle position du défilement.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Changement de position. Cette valeur est toujours un nombre positif.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc>La valeur est <codeph>true</codeph> si la position du défilement se réduit.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ajuste les rendus en fonction d’un changement de la position du défilement.
     
      <p>Les classes List tentent d’optimiser le défilement lorsque la position du défilement a été modifié d’un nombre inférieur à celui des rangées visibles. Dans ce cas, certaines rangées restent inchangées et ont juste besoin d’être déplacées. D’autres rangées sont supprimées et de nouvelles rangées sont ajoutées. Si la position du défilement change trop, toutes les anciennes rangées sont supprimées et de nouvelles rangées sont ajoutées en appellant la méthode <codeph>makeRowsAndColumns()</codeph> pour l’intégralité de la zone d’affichage.</p>
     
      <p>Non implémenté dans ListBase, car l’objet List par défaut est une colonne seule et ne défile par conséquent pas horizontalement.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:TileBase:protected:measuringObjects"><apiName>measuringObjects</apiName><shortdesc>
      Cache de la mesure d’objets par fabrique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Cache de la mesure d’objets par fabrique.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBase:direction:get"><apiName>direction</apiName><shortdesc>
      Direction dans laquelle ce contrôle disposent ses enfants.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Direction dans laquelle ce contrôle dispose ses enfants. Les valeurs possibles sont <codeph>TileBaseDirection.HORIZONTAL</codeph> et <codeph>TileBaseDirection.VERTICAL</codeph>. La valeur par défaut est <codeph>TileBaseDirection.HORIZONTAL</codeph>.
     
      <p>Si la valeur est <codeph>TileBaseDirection.HORIZONTAL</codeph>, les fenêtres sont disposées le long de la première rangée jusqu’à ce que le nombre de colonnes visibles ou maxColumns soit atteint, puis une nouvelle rangée est commencée. Si trop de rangées sont créées pour être affichées en même temps, le contrôle affichera une barre de défilement verticale. Le contraire est vrai si la valeur est <codeph>TileBaseDirection.VERTICAL</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBase:maxColumns:get"><apiName>maxColumns</apiName><shortdesc>
      Nombre maximal de colonnes pouvant résider dans le contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Nombre maximal de colonnes pouvant résider dans le contrôle. Si la valeur 0, aucune limite n’est imposée au nombre de colonnes. Cette valeur est ignorée si la direction est <codeph>TileBaseDirection.VERTICAL</codeph>, car le contrôle disposera d’autant de colonnes que nécessaire pour afficher toutes les données.
     
      <p>La valeur par défaut est 0 (aucune limite).</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBase:maxRows:get"><apiName>maxRows</apiName><shortdesc>
      Nombre maximal de rangées pouvant résider dans le contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Nombre maximal de rangées pouvant résider dans le contrôle. Si la valeur 0, aucune limite n’est imposée au nombre de rangées. Cette valeur est ignorée si la direction est <codeph>TileBaseDirection.HORIZONTAL</codeph>, car le contrôle disposera d’autant de rangées que nécessaire pour afficher toutes les données.
     
      <p>La valeur par défaut est 0 (aucune limite).</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListRowInfo"><apiName>ListRowInfo</apiName><shortdesc>
  Utilisé pas les classes basées sur l’objet List pour stocker les informations concernant leurs objets IListItemRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Utilisé pas les classes basées sur l’objet List pour stocker les informations concernant leurs objets IListItemRenderer.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/rowInfo"><linktext>mx.controls.listClasses.ListBase.rowInfo</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListRowInfo:ListRowInfo"><apiName>ListRowInfo</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Valeur de la position y de la rangée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Hauteur de la rangée, marges incluses.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Identifiant unique de l’élément dans le dataProvider.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Elément du fournisseur de données.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListRowInfo:data"><apiName>data</apiName><shortdesc>
	  Elément du fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Elément du fournisseur de données. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:height"><apiName>height</apiName><shortdesc>
	  Hauteur de la rangée, marges incluses.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Hauteur de la rangée, marges incluses.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:itemOldY"><apiName>itemOldY</apiName><shortdesc>
	  Dernière valeur Y du rendu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Dernière valeur Y du rendu. Utilisé dans les effets d’ouverture/de fermeture du contrôle Tree.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:oldY"><apiName>oldY</apiName><shortdesc>
	  Dernière valeur Y de la rangée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Dernière valeur Y de la rangée. Utilisé dans les effets d’ouverture/de fermeture du contrôle Tree.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:uid"><apiName>uid</apiName><shortdesc>
	  Identifiant unique de l’élément dans le dataProvider.
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Identifiant unique de l’élément dans le dataProvider.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListRowInfo:y"><apiName>y</apiName><shortdesc>
	  Valeur de la position y de la rangée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Valeur de la position y de la rangée.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListData"><apiName>ListData</apiName><shortdesc>
  La classe ListData définit le type de données de la propriété listData implémentée par les rendus ou les éditeurs d’élément supplémentaires du contrôle List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:BaseListData</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ListData définit le type de données de la propriété <codeph>listData</codeph> implémentée par les rendus ou les éditeurs d’élément supplémentaires du contrôle List. Tous les rendus d’élément et éditeurs d’élément supplémentaires doivent implémenter l’interface IDropInListItemRenderer, qui définit la propriété <codeph>listData</codeph>.
 
  <p>Bien que les propriétés de cette classe soient inscriptibles, vous devez les considérer comme étant en lecture seule. Elles sont initialisées par la classe List et lues par un rendu d’élément ou un éditeur d’élément. La modification de ces valeurs peut entraîner des résultats inattendus.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListData:ListData"><apiName>ListData</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>text</apiItemName><apiType value="String"/><apiDesc>Représentation textuelle des données d’un élément.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiDesc>Objet Class ou String représentant l’icône de l’élément dans le contrôle List.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>labelField</apiItemName><apiType value="String"/><apiDesc>Nom du champ dans le fournisseur de données qui contient les données d’étiquette du composant List.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Identifiant unique de l’élément.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>owner</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiDesc>Référence au contrôle List.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Index de l’élément dans le fournisseur de données du contrôle List.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Index de la colonne dans les colonnes actuellement visibles du contrôle.
	 
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListData:icon"><apiName>icon</apiName><shortdesc>
	  Classe représentant l’icône de l’élément de la liste. Cette icône est calculée à l’aide de la méthode de la classe itemToIcon().
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="Class"/></apiValueDef><apiDesc>
	  Classe représentant l’icône de l’élément de la liste. Cette icône est calculée à l’aide de la méthode de la classe <codeph>itemToIcon()</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListData:labelField"><apiName>labelField</apiName><shortdesc>
	  Valeur de la propriété labelField dans la classe List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Valeur de la propriété <codeph>labelField</codeph> dans la classe List. Il s’agit de la valeur généralement utilisée pour calculer la propriété qui doit être extraite de l’élément dans le fournisseur de données pour le texte affiché dans le rendu d’élément. Mais elle est également utilisée par DateField et d’autres composants pour indiquer le champ à récupérer de l’élément du fournisseur de données qui contient une propriété Date et d’autres propriétés non textuelles.
	 
	  <p>Par exemple, si un élément du fournisseur de données contient une propriété « hiredDate », la propriété <codeph>labelField</codeph> peut être définie sur « hiredDate » et la propriété <codeph>itemRenderer</codeph> peut être définie sur DateField. Le contrôle DateField utilise alors la propriété hiredDate.</p>
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBaseContentHolder"><apiName>ListBaseContentHolder</apiName><shortdesc>
  La classe ListBaseContentHolder définit un conteneur dans un contrôle basé sur List de tous les rendus d’élément et éditeurs d’élément du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls.listClasses:ListBaseContentHolder" playerVersion="Flash9" type="uint">
<description>
  Couleur d’arrière-plan du composant.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls.listClasses:ListBaseContentHolder" playerVersion="Flash9" type="Number">
<description>
  Nombre de pixels entre la bordure droite du composant et le bord droit de sa zone de contenu.
  <p>La valeur par défaut est 0.</p>
  <p/>
  <p>La valeur par défaut d’un contrôle ComboBox est 5.</p>
  <p>La valeur par défaut d’un conteneur Form est 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls.listClasses:ListBaseContentHolder" playerVersion="Flash9" type="Number">
<description>
  Nombre de pixels entre la bordure gauche du composant et le bord gauche de sa zone de contenu.
  <p>La valeur par défaut est 0.</p>
  <p/>
  <p>La valeur par défaut d’un contrôle ComboBox est 5.</p>
  <p>La valeur par défaut d’un conteneur Form est 16.</p>
  <p>La valeur par défaut d’un contrôle Tree est 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ListBaseContentHolder définit un conteneur dans un contrôle basé sur List de tous les rendus d’élément et éditeurs d’élément du contrôle. Flex l’utilise pour masquer les zones des fonctionnalités de rendu qui s’étendent en dehors du contrôle et pour empêcher certains styles, comme <codeph>backgroundColor</codeph>, de se propager aux fonctionnalités de rendu afin que les surbrillances et les couleurs alternées des rangées puissent s’afficher via le contrôle.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#ListBase"><linktext>mx.controls.listClasses.ListBase</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListBaseContentHolder:ListBaseContentHolder"><apiName>ListBaseContentHolder</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parentList</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBase</apiOperationClassifier><apiDesc>Contrôle basé sur l’objet List.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:ListBaseContentHolder:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Définit la position et la taille des barres de défilement et de leur contenu, puis ajuste le masque.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Indique la largeur du composant, en pixels, des coordonnées du composant, quelle que soit la valeur de la propriété <codeph>scaleX</codeph> du composant.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Indique la hauteur du composant, en pixels, des coordonnées du composant, quelle que soit la valeur de la propriété <codeph>scaleY</codeph> du composant.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Définit la position et la taille des barres de défilement et de leur contenu, puis ajuste le masque.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:ListBaseContentHolder:bottomOffset"><apiName>bottomOffset</apiName><shortdesc>
      Décalage, en pixels, à affecter au coin inférieur droit du contrôle List du contenu défini par la propriété ListBase.listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Décalage, en pixels, à affecter au coin inférieur droit du contrôle List du contenu défini par la propriété <codeph>ListBase.listContent</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:iterator"><apiName>iterator</apiName><shortdesc>
      Occurrence IViewCursor utilisée pour récupérer les éléments du fournisseur de données et les transmettre aux rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Occurrence IViewCursor utilisée pour récupérer les éléments du fournisseur de données et les transmettre aux rendus. A la fin d’une séquence de code, il doit toujours être placé sur l’élément visible le plus en haut actuellement affiché.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:leftOffset"><apiName>leftOffset</apiName><shortdesc>
      Décalage, en pixels, à affecter au coin supérieur gauche du contrôle List du contenu défini par la propriété ListBase.listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Décalage, en pixels, à affecter au coin supérieur gauche du contrôle List du contenu défini par la propriété <codeph>ListBase.listContent</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:listItems"><apiName>listItems</apiName><shortdesc>
      Tableau de tableaux contenant les occurrences du rendu d’élément qui rend chaque élément du fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Tableau de tableaux contenant les occurrences du rendu d’élément qui rend chaque élément du fournisseur de données. Il s’agit d’un tableau à deux dimensions, dans l’ordre « row-major », c’est-à-dire un tableau de rangées qui sont des tableaux de colonnes.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:rightOffset"><apiName>rightOffset</apiName><shortdesc>
      Décalage, en pixels, à affecter au coin inférieur droit du contrôle List du contenu défini par la propriété ListBase.listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Décalage, en pixels, à affecter au coin inférieur droit du contrôle List du contenu défini par la propriété <codeph>ListBase.listContent</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:rowInfo"><apiName>rowInfo</apiName><shortdesc>
      Tableau des objets ListRowInfo qui mettent en cache les hauteurs des rangées et d’autres informations de suivi concernant les rangées définies dans la propriété listItems.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Tableau des objets ListRowInfo qui mettent en cache les hauteurs des rangées et d’autres informations de suivi concernant les rangées définies dans la propriété <codeph>listItems</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:selectionLayer"><apiName>selectionLayer</apiName><shortdesc>
      Calque du contenu défini par la propriété :istbase.listContent, sur lequel tous les indicateurs de sélection et de surbrillance sont tracés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Calque du contenu défini par la propriété <codeph>:istbase.listContent</codeph>, sur lequel tous les indicateurs de sélection et de surbrillance sont tracés.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:topOffset"><apiName>topOffset</apiName><shortdesc>
      Décalage, en pixels, à affecter au coin supérieur gauche du contrôle List du contenu défini par la propriété ListBase.listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Décalage, en pixels, à affecter au coin supérieur gauche du contrôle List du contenu défini par la propriété <codeph>ListBase.listContent</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:visibleData"><apiName>visibleData</apiName><shortdesc>
      Tableau de hashage des rendus d’élément du fournisseur de données actuellement affichés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Tableau de hashage des rendus d’élément du fournisseur de données actuellement affichés. Le tableau est indexé par l’UID de l’élément du fournisseur de données et permet d’utiliser rapidement le rendu pour afficher un élément en particulier.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:heightExcludingOffsets:get"><apiName>heightExcludingOffsets</apiName><shortdesc>
      Hauteur, en pixels, excluant les décalages supérieur et inférieur, de la partie centrale du contenu défini par la propriété ListBase.listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Hauteur, en pixels, excluant les décalages supérieur et inférieur, de la partie centrale du contenu défini par la propriété <codeph>ListBase.listContent</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBaseContentHolder:widthExcludingOffsets:get"><apiName>widthExcludingOffsets</apiName><shortdesc>
      Largeur, en pixels, excluant les décalages supérieur et inférieur, de la partie centrale du contenu défini par la propriété ListBase.listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Largeur, en pixels, excluant les décalages supérieur et inférieur, de la partie centrale du contenu défini par la propriété <codeph>ListBase.listContent</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/listContent"><linktext>mx.controls.listClasses.ListBase.listContent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:TileListItemRenderer"><apiName>TileListItemRenderer</apiName><shortdesc>
  La classe TileListItemRenderer définit le rendu d’élément par défaut pour les contrôles HorizontalList et TileList.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls.listClasses:TileListItemRenderer" playerVersion="Flash9" type="Number">
<description>
  Nombre de pixels entre les enfants dans le sens vertical. 
  </description>
<default>6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls.listClasses:TileListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Couleur de texte du composant s’il est désactivé.
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls.listClasses:TileListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Couleur de texte de l’étiquette d’un composant. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe TileListItemRenderer définit le rendu d’élément par défaut pour les contrôles HorizontalList et TileList. Par défaut, le rendu d’élément trace le texte associé à chaque élément de la liste, ainsi qu’une icône facultative.
 
  <p>Vous pouvez remplacer le rendu d’élément par défaut en créant un rendu d’élément personnalisé.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#HorizontalList"><linktext>mx.controls.HorizontalList</linktext></link><link href="mx.controls.xml#TileList"><linktext>mx.controls.TileList</linktext></link><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><adobeApiEvent id="mx.controls.listClasses:TileListItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Distribué lorsque la propriété data change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque la propriété <codeph>data</codeph> change.
 
  <p>Lorsque vous utilisez un composant comme rendu d’élément, la propriété <codeph>data</codeph> contient les données à afficher. Vous pouvez écouter cet événement et mettre à jour le composant lorsque la propriété <codeph>data</codeph> change.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls.listClasses:TileListItemRenderer:TileListItemRenderer"><apiName>TileListItemRenderer</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:TileListItemRenderer:protected:toolTipShowHandler"><apiName>toolTipShowHandler</apiName><shortdesc>
      Place l’objet ToolTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:ToolTipEvent</apiOperationClassifier><apiDesc>Objet événement.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Place l’objet ToolTip.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:TileListItemRenderer:protected:icon"><apiName>icon</apiName><shortdesc>
      Objet IFlexDisplayObject interne qui affiche l’icône dans cette fonctionnalité de rendu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IFlexDisplayObject</apiValueClassifier></apiValueDef><apiDesc>
      Objet IFlexDisplayObject interne qui affiche l’icône dans cette fonctionnalité de rendu.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileListItemRenderer:protected:label"><apiName>label</apiName><shortdesc>
      Objet UITextField interne qui affiche le texte dans cette fonctionnalité de rendu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Objet UITextField interne qui affiche le texte dans cette fonctionnalité de rendu.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileListItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Implémentation de la propriété data, telle que définie par l’interface IDataRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Implémentation de la propriété <codeph>data</codeph>, telle que définie par l’interface IDataRenderer. Restore simplement la valeur et annule le composant pour déclencher sa redisposition.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:TileListItemRenderer:listData:get"><apiName>listData</apiName><shortdesc>
      Implémentation de la propriété listData, telle que définie par l’interface IDropInListItemRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      Implémentation de la propriété <codeph>listData</codeph>, telle que définie par l’interface IDropInListItemRenderer.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBaseSelectionData"><apiName>ListBaseSelectionData</apiName><shortdesc>
  Enregistrements utilisés par les classes List pour effectuer le suivi des éléments sélectionnés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Enregistrements utilisés par les classes List pour effectuer le suivi des éléments sélectionnés. Chaque élément sélectionné est représenté par une occurrence de cette classe. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/selectedData"><linktext>mx.controls.listClasses.ListBase.selectedData</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListBaseSelectionData:ListBaseSelectionData"><apiName>ListBaseSelectionData</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Objet de données sélectionné
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index dans le fournisseur de données de l’élément sélectionné. (peut être approximative) 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>approximate</apiItemName><apiType value="Boolean"/><apiDesc>Si la valeur est true, la propriété index est une valeur approximative, et non la valeur exacte.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListBaseSelectionData:approximate"><apiName>approximate</apiName><shortdesc>
	  Si la valeur est true, la propriété index est une valeur approximative, et non la valeur exacte.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Si la valeur est true, la propriété index est une valeur approximative, et non la valeur exacte.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseSelectionData:data"><apiName>data</apiName><shortdesc>
	  Objet de données sélectionné (selectedItem)
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Objet de données sélectionné (selectedItem)
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseSelectionData:index"><apiName>index</apiName><shortdesc>
	  Index dans le fournisseur de données de l’élément sélectionné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Index dans le fournisseur de données de l’élément sélectionné. (peut être approximative)
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListItemRenderer"><apiName>ListItemRenderer</apiName><shortdesc>
  La classe ListItemRenderer définit le rendu d’élément par défaut d’un contrôle List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls.listClasses:ListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Couleur de texte du composant s’il est désactivé.
  
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls.listClasses:ListItemRenderer" playerVersion="Flash9" type="uint">
<description>
  Couleur de texte de l’étiquette d’un composant. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ListItemRenderer définit le rendu d’élément par défaut d’un contrôle List. Par défaut, le rendu d’élément trace le texte associé à chaque élément de la liste, ainsi qu’une icône facultative.
 
  <p>Vous pouvez remplacer le rendu d’élément par défaut en créant un rendu d’élément personnalisé.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links><adobeApiEvent id="mx.controls.listClasses:ListItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Distribué lorsque la propriété data change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque la propriété <codeph>data</codeph> change.
 
  <p>Lorsque vous utilisez un composant comme rendu d’élément, la propriété <codeph>data</codeph> contient les données à afficher. Vous pouvez écouter cet événement et mettre à jour le composant lorsque la propriété <codeph>data</codeph> change.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls.listClasses:ListItemRenderer:ListItemRenderer"><apiName>ListItemRenderer</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:ListItemRenderer:protected:toolTipShowHandler"><apiName>toolTipShowHandler</apiName><shortdesc>
      Place l’objet ToolTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:ToolTipEvent</apiOperationClassifier><apiDesc>Objet événement.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Place l’objet ToolTip.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:ListItemRenderer:protected:icon"><apiName>icon</apiName><shortdesc>
      Objet IFlexDisplayObject interne qui affiche l’icône dans cette fonctionnalité de rendu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IFlexDisplayObject</apiValueClassifier></apiValueDef><apiDesc>
      Objet IFlexDisplayObject interne qui affiche l’icône dans cette fonctionnalité de rendu.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:protected:label"><apiName>label</apiName><shortdesc>
      Objet UITextField interne qui affiche le texte dans cette fonctionnalité de rendu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Objet UITextField interne qui affiche le texte dans cette fonctionnalité de rendu.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Implémentation de la propriété data, telle que définie par l’interface IDataRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Implémentation de la propriété <codeph>data</codeph>, telle que définie par l’interface IDataRenderer. Quand elle est définie, elle stocke la valeur et annule le composant pour déclencher sa redisposition.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Fabrique de module qui fournit le contexte des polices de ce composant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Fabrique de module qui fournit le contexte des polices de ce composant.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListItemRenderer:listData:get"><apiName>listData</apiName><shortdesc>
      Implémentation de la propriété listData, telle que définie par l’interface IDropInListItemRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      Implémentation de la propriété <codeph>listData</codeph>, telle que définie par l’interface IDropInListItemRenderer.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:TileBaseDirection"><apiName>TileBaseDirection</apiName><shortdesc>
  Valeurs de la propriété direction du composant TileList.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Valeurs de la propriété <codeph>direction</codeph> du composant TileList.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.listClasses.xml#TileBase/direction"><linktext>mx.controls.listClasses.TileBase.direction</linktext></link></related-links><apiValue id="mx.controls.listClasses:TileBaseDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
	  Dispose les enfants horizontalement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Dispose les enfants horizontalement. Pour les contrôles comme TileList, qui disposent les enfants en deux dimensions, disposez les enfants en remplissant une rangée avant de passer à la suivante.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:TileBaseDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
	  Dispose les enfants verticalement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Dispose les enfants verticalement. Pour les contrôles comme TileList, qui disposent les enfants en deux dimensions, disposez les enfants en remplissant une colonne avant de passer à la suivante.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListItemDragProxy"><apiName>ListItemDragProxy</apiName><shortdesc>
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
   Un proxy de glissement est un composant qui est le parent des objets ou copies des objets en cours de glissement
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridDragProxy"><linktext>mx.controls.dataGridClasses.DataGridDragProxy</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListItemDragProxy:ListItemDragProxy"><apiName>ListItemDragProxy</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBase"><apiName>ListBase</apiName><shortdesc>
  La classe ListBase est la classe de base des contrôles qui représentent des listes d’éléments pouvant contenir un ou plusieurs éléments sélectionnés et qui peuvent défiler à travers les éléments.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="String">
<description>
  Alignement vertical d’un rendu dans une rangée. Les valeurs possibles sont <codeph>"top"</codeph>, <codeph>"middle"</codeph> et <codeph>"bottom"</codeph>. L’objet DataGrid place les rendus dans une rangée en fonction de ce style et des styles <codeph>paddingTop</codeph> et <codeph>paddingBottom</codeph>. Si l’élément dans les colonnes d’une rangée a différentes hauteurs, les autres classes List n’utilisent pas <codeph>verticalAlign</codeph>, mais les rendus d’élément peuvent examiner cette propriété de style et ajuster leur mise en forme en fonction.
 
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="useRollOver" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Boolean">
<description>
  Indicateur contrôlant si les éléments sont mis en surbrillance lorsque la souris les survole. Si la valeur est <codeph>true</codeph>, les rangées sont mises en surbrillance lorsque la souris les survole. Si la valeur est <codeph>false</codeph>, les rangées sont mises en surbrillance uniquement lorsqu’elles sont sélectionnées.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Couleur de texte d’un rendu lorsque l’utilisateur le sélectionne. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Couleur de texte d’un rendu lorsque l’utilisateur le survole avec sa souris. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Function">
<description>
  Objet easingFunction de l’effet de sélection. Lorsqu’un élément est sélectionné, un effet est activé sur la couleur de l’arrière-plan. L’effet par défaut est un fondu linéraire de la couleur. Un objet easingFunction permet de contrôler l’effet de sélection.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="selectionDuration" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Durée de l’effet de sélection. Lorsqu’un élément est sélectionné, un effet est activé sur la couleur de l’arrière-plan. Définissez la valeur sur 0 pour désactiver l’effet.
  
  </description>
<default>250
  
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionDisabledColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Couleur d’arrière-plan d’un rendu lorsque le composant est désactivé.
 
  </description>
<default>0xDDDDDD
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Couleur d’arrière-plan d’un rendu lorsque l’utilisateur le sélectionne. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="uint">
<description>
  Couleur d’arrière-plan d’un rendu lorsque l’utilisateur le survole avec sa souris. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Nombre de pixels entre la partie supérieure de la rangée et la partie supérieure du rendu de la rangée.
  
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Nombre de pixels entre la partie inférieure de la rangée et la partie inférieure du rendu de la rangée.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropIndicatorSkin" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Class">
<description>
  Habillage à utiliser pour indiquer où déposer un élément en cours de glissement. Lorsqu’un composant dérivé de ListBase constitue un emplacement cible dans une opération Glisser-déposer, un appel de la méthode <codeph>showDropFeedback()</codeph> crée une occurrence de cette classe et la positionne à un pixel au-dessus du itemRenderer de l’élément à l’endroit où, si l’opération déposer a lieu, l’élément est placé.
 
  </description>
<default>mx.controls.listClasses.ListDropIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Array">
<description>
  Couleurs à utiliser pour les arrière-plans des éléments de la liste. La valeur est un tableau de deux couleurs ou plus. Les arrière-plans des éléments de liste prennent les couleurs du tableau par alternance. 
 
  <p>Pour les contrôles DataGrid, tous les éléments d’une rangée ont la même couleur d’arrière-plan et chaque couleur d’arrière-plan des rangées est déterminée par le tableau de couleurs.</p>
 
  <p>Pour le contrôle TileList, qui utilise une seule liste pour remplir un affichage à deux dimensions, le style peut donner un aspect de damier, des rayures et d’autres motifs en fonction du nombre de colonnes et de rangées et du nombre de couleurs spécifiées. TileList naviguent à travers les couleurs, plaçant les couleurs d’arrière-plan de chaque élément selon le sens de la mise en forme. Si vous avez un numéro d’événement des couleurs et un numéro d’événement des colonnes pour un TileList disposé horizontalement, vous obtiendrez des rayures. Si le nombre de colonne est un nom impair, vous obtiendrez un motif de damier.
  </p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Nombre de pixels entre la bordure droite du composant et le bord droit de sa zone de contenu.
  <p>La valeur par défaut est 0.</p>
  <p/>
  <p>La valeur par défaut d’un contrôle ComboBox est 5.</p>
  <p>La valeur par défaut d’un conteneur Form est 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls.listClasses:ListBase" playerVersion="Flash9" type="Number">
<description>
  Nombre de pixels entre la bordure gauche du composant et le bord gauche de sa zone de contenu.
  <p>La valeur par défaut est 0.</p>
  <p/>
  <p>La valeur par défaut d’un contrôle ComboBox est 5.</p>
  <p>La valeur par défaut d’un conteneur Form est 16.</p>
  <p>La valeur par défaut d’un contrôle Tree est 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The ListBase class inherits all of the tag properties of its superclasses,
  and adds the following tag properties:</p>
  
  <pre>
  &lt;mx:<i>tagname</i>
    <b>Properties</b>
    allowDragSelection="false|true"
    allowMultipleSelection="false|true"
    columnCount="4"
    columnWidth="NaN"
    dataProvider="null"
    dataTipField="label"
    dataTipFunction="null"
    dragEnabled="false|true"
    dragMoveEnabled="false|true"
    dropEnabled="false|true"
    iconField="null"
    iconFunction="null"
    itemRenderer="null"
    labelField="label"
    labelFunction="null"
    menuSelectionMode="false|true"
    offscreenExtraRowsOrColumns="0"
    rowCount="-1"
    rowHeight="NaN"
    selectable="true|false"
    selectedIndex="-1"
    selectedIndices="null"
    selectedItem="null"
    selectedItems="null"
    showDataTips="false|true"
    variableRowHeight="false|true"
    wordWrap="false|true"
 
    <b>Styles</b>
    alternatingItemColors="undefined"
    itemsChangeEffect="undefined"
    dropIndicatorSkin="ListDropIndicator"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    paddingBottom="2"
    paddingLeft="2"
    paddingRight="0"
    paddingTop="2"
    rollOverColor="0xEEFEE6"
    selectionColor="0x7FCEFF"
    selectionDisabledColor="0xDDDDDD"
    selectionDuration="250"
    selectionEasingFunction="undefined"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    useRollOver="true|false"
    verticalAlign="top|middle|bottom"
 
    <b>Events</b>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
    itemClick="<i>No default</i>"
    itemDoubleClick="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
   /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.effects:IEffectTargetHost</apiBaseInterface><apiBaseClassifier>mx.core:ScrollControlBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ListBase est la classe de base des contrôles qui représentent des listes d’éléments pouvant contenir un ou plusieurs éléments sélectionnés et qui peuvent défiler à travers les éléments. Les éléments sont fournis à l’aide de la propriété <codeph>dataProvider</codeph> et affichés via les rendus d’élément.
 
  <p>Dans une architecture de modèle/d’affichage, la classe dérivée de ListBase représente l’affichage et l’objet dataProvider représente le modèle.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.collections.xml#ICollectionView"><linktext>mx.collections.ICollectionView</linktext></link></related-links><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><shortdesc>
  Distribué lorsque l’utilisateur double-clique sur un élément du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque l’utilisateur double-clique sur un élément du contrôle.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Distribué lorsque l’utilisateur clique sur un élément du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque l’utilisateur clique sur un élément du contrôle.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Distribué lorsque le pointeur de la souris cesse de survoler un élément du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque le pointeur de la souris cesse de survoler un élément du contrôle.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Distribué lorsque le pointeur de la souris survole un élément du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque le pointeur de la souris survole un élément du contrôle.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Distribué lorsque la propriété data change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque la propriété <codeph>data</codeph> change.
 
  <p>Lorsque vous utilisez un composant comme rendu d’élément, la propriété <codeph>data</codeph> contient les données à afficher. Vous pouvez écouter cet événement et mettre à jour le composant lorsque la propriété <codeph>data</codeph> change.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls.listClasses:ListBase_mx.events.ListEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Distribué lorsque la propriété selectedIndex ou selectedItem change après une interaction de l’utilisateur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque la propriété <codeph>selectedIndex</codeph> ou <codeph>selectedItem</codeph> change après une interaction de l’utilisateur.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls.listClasses:ListBase:ListBase"><apiName>ListBase</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls.listClasses:ListBase:protected:UIDToItemRenderer"><apiName>UIDToItemRenderer</apiName><shortdesc>
      Recherche un rendu d’élément en fonction de son UID s’il est visible.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Rendu d’élément.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID de l’élément.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Recherche un rendu d’élément en fonction de son UID s’il est visible.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:addDataEffectItem"><apiName>addDataEffectItem</apiName><shortdesc>
      
      Ajoute un rendu d’élément si un effet de changement des données est en cours d’exécution.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Rendu d’élément à ajouter à la mise en forme du contrôle.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Ajoute un rendu d’élément si un effet de changement des données est en cours d’exécution. Le rendu d’élément doit correspondre à un élément de données récemment ajouté dans la collection du fournisseur de données et qui n’a pas encore été affiché.
     
      <p>Cette fonction sera appelée par un effet <codeph>AddItemAction</codeph> dans le cadre d’un effet de changement des données pour indiquer le point auquel un élément de données ajouté à une collection commence à être affiché par le contrôle, à l’aide d’un rendu d’élément.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:addDragData"><apiName>addDragData</apiName><shortdesc>
      Ajoute les éléments sélectionnés à l’objet DragSource dans le cadre d’une opération glisser-déposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>dragSource</apiItemName><apiType value="Object"/><apiDesc>Objet DragSource auquel ajouter les données.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ajoute les éléments sélectionnés à l’objet DragSource dans le cadre d’une opération glisser-déposer. Remplacez cette méthode pour ajouter d’autres données à la source du glissement.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:addToFreeItemRenderers"><apiName>addToFreeItemRenderers</apiName><shortdesc>
      Ajoute le rendu à la liste des rendus recyclés, ce qui le rend invisible et nettoie toutes ses références.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu à ajouter.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ajoute le rendu à la liste des rendus recyclés, ce qui le rend invisible et nettoie toutes ses références. Si un effet de données est en cours d’exécution, le rendu est réservé pour une utilisation ultérieure de ces données. Sinon, il est ajouté à la pile freeItemRenderers générale.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:addToRowArrays"><apiName>addToRowArrays</apiName><shortdesc>
      Ajoutez une rangée vide au début des tableaux stockant les références aux rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Ajoutez une rangée vide au début des tableaux stockant les références aux rangées.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      Appelé par la méthode updateDisplayList() pour ajuster la taille et la position de l’objet listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData></apiParam></apiOperationDef><apiDesc>
      Appelé par la méthode <codeph>updateDisplayList()</codeph> pour ajuster la taille et la position de l’objet listContent.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:applySelectionEffect"><apiName>applySelectionEffect</apiName><shortdesc>
      Configure l’effet pour l’application de l’indicateur de sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Sprite contenant les graphiques qui décrivent la sélection.
      
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID de l’élément actuellement sélectionné, qui peut être utilisé pour indexer dans un tableau et suivre plusieurs effets de sélection.
      
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément actuellement affiché comme étant sélectionné.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Configure l’effet pour l’application de l’indicateur de sélection. La valeur par défaut est une interpolation Alpha basique.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:calculateDropIndex"><apiName>calculateDropIndex</apiName><shortdesc>
      Retourne l’index où les éléments déposés doivent être ajoutés à l’emplacement cible.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index où les éléments déposés doivent être ajoutés.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiData>null</apiData><apiDesc>DragEvent contenant des informations sur la position de la souris. Si la valeur est <codeph>null</codeph>, la méthode doit retourner la valeur <codeph>dropIndex</codeph> depuis le dernière événement valide.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne l’index où les éléments déposés doivent être ajoutés à l’emplacement cible.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:calculateDropIndicatorY"><apiName>calculateDropIndicatorY</apiName><shortdesc>
      Calcule la position y de l’indicateur de dépôt lors d’une opération Glisser-déposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Coordonnée de l’axe y de l’indicateur de dépôt.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>rowCount</apiItemName><apiType value="Number"/><apiDesc>Nombre de rangées visibles du contrôle.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Numéro de rangée du contrôle où l’indicateur de dépôt doit apparaître.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Calcule la position y de l’indicateur de dépôt lors d’une opération Glisser-déposer.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearCaretIndicator"><apiName>clearCaretIndicator</apiName><shortdesc>
      Efface le signe d’insertion dans l’objet Sprite donné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Objet Sprite devant contenir les graphiques qui permettent de mettre un rendu en surbrillance.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément actuellement en surbrillance.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Efface le signe d’insertion dans l’objet Sprite donné.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearHighlightIndicator"><apiName>clearHighlightIndicator</apiName><shortdesc>
      Efface l’indication de surbrillance dans l’objet Sprite donné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Objet Sprite devant contenir les graphiques qui permettent de mettre un rendu en surbrillance.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément actuellement en surbrillance.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Efface l’indication de surbrillance dans l’objet Sprite donné.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearIndicators"><apiName>clearIndicators</apiName><shortdesc>
      Supprime tous les indicateurs de sélection, les indicateurs de surbrillance et les signes d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Supprime tous les indicateurs de sélection, les indicateurs de surbrillance et les signes d’insertion.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearSelected"><apiName>clearSelected</apiName><shortdesc>
      Efface le jeu d’éléments sélectionnés et supprime tous les graphiques décrivant l’état sélectionné de ces éléments.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>La valeur est <codeph>true</codeph> si les graphiques doivent avoir un effet de fondu en sortie.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Efface le jeu d’éléments sélectionnés et supprime tous les graphiques décrivant l’état sélectionné de ces éléments.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:clearVisibleData"><apiName>clearVisibleData</apiName><shortdesc>
      Vide le tableau de hashage visibleData.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Vide le tableau de hashage visibleData.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:collectionChangeHandler"><apiName>collectionChangeHandler</apiName><shortdesc>
      Gère la distribution des événements CollectionEvent depuis le fournisseur de données lorsque les données changent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>CollectionEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère la distribution des événements CollectionEvent depuis le fournisseur de données lorsque les données changent. Met à jour les rendus, les index sélectionnés et les barres de défilement selon les besoins.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:commitProperties"><apiName>commitProperties</apiName><shortdesc>
      Calcule la largeur des colonnes, la hauteur des rangées et le nom des rangées et des colonnes si les propriétés comme columnCount, columnWidth, rowHeight et rowCount ont été explicitement définies.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Calcule la largeur des colonnes, la hauteur des rangées et le nom des rangées et des colonnes si les propriétés comme <codeph>columnCount</codeph>, <codeph>columnWidth</codeph>, <codeph>rowHeight</codeph> et <codeph>rowCount</codeph> ont été explicitement définies.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:configureScrollBars"><apiName>configureScrollBars</apiName><shortdesc>
      Configure les barres de défilement en fonction du nombre de rangées et colonnes et du nombre de rangées et colonnes affichables.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Configure les barres de défilement en fonction du nombre de rangées et colonnes et du nombre de rangées et colonnes affichables. Cette méthode est appelée depuis la méthode <codeph>updateDisplayList()</codeph> après la mise à jour des rangées et colonnes. La méthode doit déterminer les paramètres à transmettre à la méthode <codeph>setScrollBarProperties()</codeph> afin de configurer correctement les barres de défilement.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:copyItemWithUID"><apiName>copyItemWithUID</apiName><shortdesc>
      Effectue une copie profonde de l’objet en appelant la méthode ObjectUtil.copy() et remplace la propriété UID de la copie (si elle est présente) par une nouvelle valeur en appelant la méthode UIDUtil.createUID().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Copie de l’objet.
     
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Elément à copier.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Effectue une copie profonde de l’objet en appelant la méthode <codeph>ObjectUtil.copy()</codeph> et remplace la<codeph>propriété UID</codeph> de la copie (si elle est présente) par une nouvelle valeur en appelant la méthode <codeph>UIDUtil.createUID()</codeph>.
     
      <p>Cette méthode est utilisée pour copier avec l’opération Glisser-déposer.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.utils.xml#ObjectUtil"><linktext>mx.utils.ObjectUtil</linktext></link><link href="mx.utils.xml#UIDUtil"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:copySelectedItems"><apiName>copySelectedItems</apiName><shortdesc>
      Copie les éléments sélectionnés selon leur ordre de sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Tableau d’éléments sélectionnés.
      
      </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>useDataField</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>La valeur est <codeph>true</codeph> si le tableau doit être rempli avec les éléments réels ou <codeph>false</codeph> si le tableau doit être rempli avec les index des éléments.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Copie les éléments sélectionnés selon leur ordre de sélection.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:createChildren"><apiName>createChildren</apiName><shortdesc>
      Crée des objets enfant de cet objet ListBase. Il s’agit dans ce cas de l’objet listContent qui contiendra tous les rendus d’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Crée des objets enfant de cet objet <codeph>ListBase</codeph>. Il s’agit dans ce cas de l’objet listContent qui contiendra tous les rendus d’élément. Les éléments de rendu ne sont pas créés immédiatement, mais plus tard lorsque la méthode <codeph>updateDisplayList</codeph> est appelée.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:createItemRenderer"><apiName>createItemRenderer</apiName><shortdesc>
      Crée un rendu d’élément en fonction de l’objet de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Rendu d’élément.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>objet de données.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Crée un rendu d’élément en fonction de l’objet de données.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:destroyRow"><apiName>destroyRow</apiName><shortdesc>
      Recycle une rangée qui n’est pas requise et supprime ses indicateurs.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Index de la rangée à supprimer.
      </apiDesc></apiParam><apiParam><apiItemName>numCols</apiItemName><apiType value="int"/><apiDesc>Nombre de colonnes de la rangée.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Recycle une rangée qui n’est pas requise et supprime ses indicateurs.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      Gère les événements DragEvent.DRAG_COMPLETE.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>DragEvent.DRAG_COMPLETE</codeph>. Cette méthode supprime l’élément du fournisser de données.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      Gère les événements DragEvent.DRAG_DROP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les <codeph>événements DragEvent.DRAG_DROP</codeph>. Cette méthode masque le résultats du dépôt en appelant la méthode <codeph>hideDropFeedback()</codeph>.
     
      <p>Si l’action est de type <codeph>COPY</codeph>, cette méthode réalise une copie profonde de l’objet en appelant la méthode <codeph>ObjectUtil.copy()</codeph> et remplace la propriété <codeph>uid</codeph> de la copie (si elle est présente) par une nouvelle valeur en appelant la méthode <codeph>UIDUtil.createUID()</codeph>.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.utils.xml#ObjectUtil"><linktext>mx.utils.ObjectUtil</linktext></link><link href="mx.utils.xml#UIDUtil"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragEnterHandler"><apiName>dragEnterHandler</apiName><shortdesc>
      Gère les événements DragEvent.DRAG_ENTER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>DragEvent.DRAG_ENTER</codeph>. Cette méthode détermine si l’objet DragSource contient des éléments valides et utilise la méthode <codeph>showDropFeedback()</codeph> pour configurer le résultat d’interface.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragExitHandler"><apiName>dragExitHandler</apiName><shortdesc>
      Gère les événements DragEvent.DRAG_EXIT.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>DragEvent.DRAG_EXIT</codeph>. Cette méthode masque le résultat d’interface en appelant la méthode <codeph>hideDropFeedback()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragOverHandler"><apiName>dragOverHandler</apiName><shortdesc>
      Gère les événements DragEvent.DRAG_OVER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>DragEvent.DRAG_OVER</codeph>. Cette méthode détermine si l’objet DragSource contient des éléments valides et utilise la méthode <codeph>showDropFeedback()</codeph> pour configurer le résultat d’interface.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragScroll"><apiName>dragScroll</apiName><shortdesc>
      Fonction d’intervalle qui fait défiler la liste vers le haut ou le bas si la souris passe au-dessus ou au-dessous de la liste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Fonction d’intervalle qui fait défiler la liste vers le haut ou le bas si la souris passe au-dessus ou au-dessous de la liste.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:dragStartHandler"><apiName>dragStartHandler</apiName><shortdesc>
      Gestionnaire par défaut de l’événement dragStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gestionnaire par défaut de l’événement <codeph>dragStart</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawCaretIndicator"><apiName>drawCaretIndicator</apiName><shortdesc>
      Trace le signe d’insertion dans l’objet Sprite donné aux position, largeur et hauteur définies avec la couleur spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Objet Sprite devant contenir les graphiques qui permettent de mettre un rendu en surbrillance.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Position x suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Position y suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Largeur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Hauteur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Couleur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément actuellement en surbrillance.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Trace le signe d’insertion dans l’objet Sprite donné aux position, largeur et hauteur définies avec la couleur spécifiée.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawHighlightIndicator"><apiName>drawHighlightIndicator</apiName><shortdesc>
      Trace l’indicateur de surbrillance dans l’objet Sprite donné aux position, largeur et hauteur définies avec la couleur spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Objet Sprite devant contenir les graphiques qui permettent de mettre un rendu en surbrillance.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Position x suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Position y suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Largeur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Hauteur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Couleur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément actuellement en surbrillance.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Trace l’indicateur de surbrillance dans l’objet Sprite donné aux position, largeur et hauteur définies avec la couleur spécifiée.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawItem"><apiName>drawItem</apiName><shortdesc>
      Trace le rendu avec des indicateurs signalant qu’il est en surbrillance, sélectionné ou qu’il agit en tant que signe d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Fonctionnalité de rendu.
      </apiDesc></apiParam><apiParam><apiItemName>selected</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>La valeur est <codeph>true</codeph> si la fonctionnalité de rendu doit être tracée dans son état sélectionné.
      </apiDesc></apiParam><apiParam><apiItemName>highlighted</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>La valeur est <codeph>true</codeph> si la fonctionnalité de rendu doit être tracée dans son état de surbrillance.
      </apiDesc></apiParam><apiParam><apiItemName>caret</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>La valeur est <codeph>true</codeph> si la fonctionnalité de rendu doit être tracée comme s’il s’agissait du signe d’insertion.
      </apiDesc></apiParam><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>La valeur est <codeph>true</codeph> si l’état de sélection doit s’estomper via un effet.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Trace le rendu avec des indicateurs signalant qu’il est en surbrillance, sélectionné ou qu’il agit en tant que signe d’insertion.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawRowBackgrounds"><apiName>drawRowBackgrounds</apiName><shortdesc>
      Trace les couleurs des rangées alternées, bordures et arrière-plans des rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Trace les couleurs des rangées alternées, bordures et arrière-plans des rangées.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:drawSelectionIndicator"><apiName>drawSelectionIndicator</apiName><shortdesc>
      Trace l’indicateur de sélection dans l’objet Sprite donné aux position, largeur et hauteur définies avec la couleur spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>indicator</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Objet Sprite devant contenir les graphiques qui permettent de mettre un rendu en surbrillance.
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Position x suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Position y suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Largeur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Hauteur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Couleur suggérée pour l’indicateur.
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément actuellement en surbrillance.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Trace l’indicateur de sélection dans l’objet Sprite donné aux position, largeur et hauteur définies avec la couleur spécifiée.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:findKey"><apiName>findKey</apiName><shortdesc>
      Tente de trouver l’élément suivant dans le fournisseur de données qui commence par le caractère dans le paramètre eventCode.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si une correspondance est trouvée.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>eventCode</apiItemName><apiType value="int"/><apiDesc>Touche qui a été activée sur le clavier.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Tente de trouver l’élément suivant dans le fournisseur de données qui commence par le caractère dans le paramètre <codeph>eventCode</codeph>. Vous pouvez le remplacer pour réaliser des recherches plus originales. La recherche commence à l’emplacement <codeph>selectedIndex</codeph>. Si elle atteint la fin du fournisseur de données, elle recommence depuis le début.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:findString"><apiName>findString</apiName><shortdesc>
      Recherche un élément de la liste en fonction d’une chaîne et déplace la sélection dessus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si une correspondance est trouvée.
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>str</apiItemName><apiType value="String"/><apiDesc>Chaîne à rechercher.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Recherche un élément de la liste en fonction d’une chaîne et déplace la sélection dessus. La recherche commence à l’emplacement <codeph>selectedIndex</codeph>. Si elle atteint la fin du fournisseur de données, elle recommence depuis le début.
     
      <p>Pour un contrôle DataGrid, cette méthode recherche par défaut la première colonne du contrôle. Pour rechercher une autre colonne, définissez la propriété <codeph>sort</codeph> de la collection utilisée pour renseigner le contrôle sur le ou les champ spécifiques que vous voulez rechercher. Chaque champ correspond à une seule colonne du contrôle.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.collections.xml#ListCollectionView"><linktext>mx.collections.ListCollectionView</linktext></link><link href="mx.collections.xml#ArrayCollection"><linktext>mx.collections.ArrayCollection</linktext></link><link href="mx.collections.xml#XMLListCollection"><linktext>mx.collections.XMLListCollection</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:finishDataChangeEffect"><apiName>finishDataChangeEffect</apiName><shortdesc>
      Lorsque l’exécution d’un effet de changement des données est terminée, nettoie en rétablissant la collection et l’itérateur d’origine et en supprimant les valeurs mises en cache utilisées par l’effet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:EffectEvent</apiOperationClassifier><apiDesc>EffectEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Lorsque l’exécution d’un effet de changement des données est terminée, nettoie en rétablissant la collection et l’itérateur d’origine et en supprimant les valeurs mises en cache utilisées par l’effet. Cette méthode est appelée par la structure Flex. Vous n’avez pas besoin de l’appeler depuis votre code.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:finishKeySelection"><apiName>finishKeySelection</apiName><shortdesc>
      Définit les éléments sélectionnés en fonction des propriétés caretIndex et anchorIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Définit les éléments sélectionnés en fonction des propriétés <codeph>caretIndex</codeph> et <codeph>anchorIndex</codeph>. Cette méthode est appelée par les gestionnaires de sélection du clavier et par la méthode <codeph>updateDisplayList()</codeph> au cas où le gestionnaire de sélection du clavier aurait reçu une erreur de page lors de son défilement pour obtenir plus d’éléments.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:getItemRendererFactory"><apiName>getItemRendererFactory</apiName><shortdesc>
      Retourne la fabrique appropriée et utilise la fabrique par défaut si aucune n’est spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Si la propriété <codeph>data</codeph> a la valeur null, le rendu d’élément par défaut est retourné. Sinon, le rendu d’élément personnalisé est retourné.
      
      </apiDesc><apiOperationClassifier>mx.core:IFactory</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Données que le rendu d’élément doit présenter.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne la fabrique appropriée et utilise la fabrique par défaut si aucune n’est spécifiée.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:getRendererSemanticValue"><apiName>getRendererSemanticValue</apiName><shortdesc> 
      
      Retourne la valeur true ou false pour indiquer si l’effet doit être lu sur la cible.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph> ou <codeph>false</codeph> pour indiquer si l’effet doit être lu sur la cible. 
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="Object"/><apiDesc>Rendu d’élément
     
      </apiDesc></apiParam><apiParam><apiItemName>semanticProperty</apiItemName><apiType value="String"/><apiDesc>Propriété sémantique du rendu dont la valeur va être retournée.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc> 
      
      Retourne la valeur <codeph>true</codeph> ou <codeph>false</codeph> pour indiquer si l’effet doit être lu sur la cible. La classe EffectTargetFilter appelle cette méthode lorsque vous définissez la propriété <codeph>filter</codeph> sur un effet de données. Définissez par exemple la propriété <codeph>filter</codeph> sur <codeph>addItem</codeph> ou <codeph>removeItem</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:getReservedOrFreeItemRenderer"><apiName>getReservedOrFreeItemRenderer</apiName><shortdesc>
      Récupère un rendu d’élément déjà créé, mais qui n’est pas en cours d’utilisation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Données que le rendu d’élément doit présenter.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Récupère un rendu d’élément déjà créé, mais qui n’est pas en cours d’utilisation. Si un effet de données est en cours d’utilisation, il essaie d’abord de récupérer ceux de l’association reservedItemRenderers. Sinon (ou si aucun rendu réservé n’est trouvé) il les récupère de la pile freeItemRenderers.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:hideDropFeedback"><apiName>hideDropFeedback</apiName><shortdesc>
      Masque l’indicateur de dépôt sous le pointeur de la souris qui indique qu’une opération Glisser-déposer est autorisée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent contenant des informations sur l’emplacement de la souris.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Masque l’indicateur de dépôt sous le pointeur de la souris qui indique qu’une opération Glisser-déposer est autorisée.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:indexToColumn"><apiName>indexToColumn</apiName><shortdesc>
      Colonne de l’élément du fournisseur de données à l’index donné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Colonne dans laquelle l’élément serait affiché dans le composant. -1 si l’élément n’est pas affichable dans le conteneur listContent.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Décalage dans le fournisseur de données.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Colonne de l’élément du fournisseur de données à l’index donné.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:indexToItemRenderer"><apiName>indexToItemRenderer</apiName><shortdesc>
      Récupérez un rendu d’élément pour l’index d’un élément dans le fournisseur de données, s’il en existe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Rendu d’élément qui affiche l’élément ou la valeur <codeph>null</codeph> si l’élément n’est pas en cours d’affichage.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Décalage d’un élément dans le fournisseur de données.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Récupérez un rendu d’élément pour l’index d’un élément dans le fournisseur de données, s’il en existe. Comme les éléments de rendu n’existent que pour les éléments au sein du jeu d’éléments de rangées affichables, vous ne pouvez pas utiliser cette méthode pour des éléments non visibles.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:indexToRow"><apiName>indexToRow</apiName><shortdesc>
      Rangée de l’élément du fournisseur de données à l’index donné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Rangée dans laquelle l’élément serait affiché dans le composant. -1 si l’élément n’est pas affichable dans le conteneur listContent.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Décalage dans le fournisseur de données.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Rangée de l’élément du fournisseur de données à l’index donné.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:indicesToIndex"><apiName>indicesToIndex</apiName><shortdesc>
      Calcule le décalage dans le fournisseur de données de l’élément aux emplacements colIndex et rowIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Décalage dans le fournisseur de données.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Index basé sur 0 de la rangée, incluant les rangées au delà de la partie supérieure. Par conséquent, si la valeur de <codeph>verticalScrollPosition</codeph> est 2, la valeur de rowIndex pour la première rangée visible est 2.
     
      </apiDesc></apiParam><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Index basé sur 0 de la colonne, incluant les colonnes au delà de la partie gauche. Si la valeur de <codeph>horizontalScrollPosition</codeph> est 2, alors la valeur de columnIndex pour la première colonne sur la gauche est 2.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Calcule le décalage dans le fournisseur de données de l’élément aux emplacements colIndex et rowIndex. L’emplacement de la 9e rangée et de la 3e colonne d’un objet TileList peut correspondre à des éléments différents dans le fournisseur de données selon la direction dans laquelle les fenêtres sont disposées et le nombre de rangées et de colonnes contenues dans l’objet TileList.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:initiateDataChangeEffect"><apiName>initiateDataChangeEffect</apiName><shortdesc>
      Initialise un effet de changement des données lorsque des modifications ont eu lieu dans le fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Largeur du contrôle avant l’application des dimensionnements externes.
      
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Hauteur du contrôle avant l’application des dimensionnements externes.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Initialise un effet de changement des données lorsque des modifications ont eu lieu dans le fournisseur de données.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:invalidateList"><apiName>invalidateList</apiName><shortdesc>
      Actualise toutes les rangées lors de la prochaine mise à jour.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Actualise toutes les rangées lors de la prochaine mise à jour.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemHighlighted"><apiName>isItemHighlighted</apiName><shortdesc>
      Détermine si le rendu d’élément d’un élément du fournisseur de données est mis en surbrillance (s’il est survolé par la souris ou se trouve sous le signe d’insertion à cause de la navigation par clavier).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si l’élément est en surbrillance.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine si le rendu d’élément d’un élément du fournisseur de données est mis en surbrillance (s’il est survolé par la souris ou se trouve sous le signe d’insertion à cause de la navigation par clavier).
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemSelectable"><apiName>isItemSelectable</apiName><shortdesc>
      Détermine si le rendu d’élément d’un élément du fournisseur de données peut être sélectionné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si l’élément est sélectionnable.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine si le rendu d’élément d’un élément du fournisseur de données peut être sélectionné.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemSelected"><apiName>isItemSelected</apiName><shortdesc>
      Détermine si le rendu d’élément d’un élément du fournisseur de données est sélectionné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si l’élément est sélectionné.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine si le rendu d’élément d’un élément du fournisseur de données est sélectionné.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemShowingCaret"><apiName>isItemShowingCaret</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph/>
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:isItemVisible"><apiName>isItemVisible</apiName><shortdesc>
      Détermine si un élément est actuellement affiché par un rendu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si l’élément est actuellement affiché.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine si un élément est actuellement affiché par un rendu.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:isRendererUnconstrained"><apiName>isRendererUnconstrained</apiName><shortdesc>
      Retourne la valeur true si un rendu d’élément n’est plus positionné par l’algorithme de mise en forme de l’objet List, tandis qu’un effet de changement des données est en cours d’exécution à la suite d’un appel de la méthode unconstrainRenderer().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si un rendu d’élément n’est plus positionné par l’algorithme de mise en forme de l’objet List.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Rendu d’élément.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne la valeur <codeph>true</codeph>si un rendu d’élément n’est plus positionné par l’algorithme de mise en forme de l’objet List, tandis qu’un effet de changement des données est en cours d’exécution à la suite d’un appel de la méthode <codeph>unconstrainRenderer()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemRendererContains"><apiName>itemRendererContains</apiName><shortdesc>
      Détermine si un rendu contient (ou possède) un objet d’affichage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph> si le rendu contient ou possède un objet d’affichage.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>renderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu pouvant contenir ou posséder l’objet d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>object</apiItemName><apiType value="flash.display:DisplayObject"/><apiDesc>Objet d’affichage pouvant être associé au rendu.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine si un rendu contient (ou possède) un objet d’affichage. La propriété signifie que l’objet d’affichage n’est actuellement pas apparenté au rendu, mais lui est associé d’une autre manière. Les menus contextuels doivent être la propriété des rendus, afin que cette activité dans le menu contextuel soit associée au rendu, et ne soit pas vue comme une activité au sein d’un autre composant.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemRendererToIndex"><apiName>itemRendererToIndex</apiName><shortdesc>
      Retourne l’index de l’élément dans le fournisseur de données de l’élément actuellement rendu par ce rendu d’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Index de l’élément dans le fournisseur de données.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément qui affiche l’élément pour lequel vous voulez connaître l’index du fournisseur de données.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne l’index de l’élément dans le fournisseur de données de l’élément actuellement rendu par ce rendu d’élément. Comme les éléments de rendu n’existent que pour les éléments qui se trouvent au sein du jeu de rangées affichables, vous ne pouvez pas utiliser cette méthode pour des éléments non visibles.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:itemRendererToIndices"><apiName>itemRendererToIndices</apiName><shortdesc>
      Retourne un objet Point contenant les propriétés columnIndex et rowIndex d’un rendu d’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Point. La propriété <codeph>x</codeph> correspond à columnIndex et la propriété <codeph>y</codeph> à rowIndex.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne un objet Point contenant les propriétés columnIndex et rowIndex d’un rendu d’élément. Comme les éléments de rendu sont uniquement créés pour les éléments au sein du jeu de rangées affichables, vous ne pouvez pas utiliser cette méthode pour obtenir les index d’éléments non visibles. Notez également que les rendus d’élément sont recyclés de sorte que les index que vous obtenez pour un élément peuvent changer si ce rendu d’élément est réutilisé pour afficher un autre élément. Généralement, cette méthode est appelée lors de la gestion de la souris et du clavier lorsque le jeu de données affiché par les rendus d’éléments n’a pas encore changé.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToDataTip"><apiName>itemToDataTip</apiName><shortdesc>
      Retourne la chaîne dataTip normalement affichée par l’objet de rendu pour l’objet de données fourni en fonction des propriétés dataTipField et dataTipFunction.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Chaîne affichable en fonction des données.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Objet à afficher.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne la chaîne dataTip normalement affichée par l’objet de rendu pour l’objet de données fourni en fonction des propriétés dataTipField et dataTipFunction. Si la méthode ne peut pas convertir le paramètre en chaîne, elle retourne un espace unique.
      <p>A utiliser par les développeurs qui créent des sous-classes de ListBase ou ses enfants. Non utilisé par les développeurs d’application.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToIcon"><apiName>itemToIcon</apiName><shortdesc>
      Retourne la classe d’une icône, le cas échant, d’un élément de données, en fonction des propriétés iconField et iconFunction.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Icône de l’élément, comme référence de classe ou <codeph>null</codeph> si aucune n’existe.
      
      </apiDesc><apiType value="Class"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Elément à partir duquel extraire la classe d’une icône.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne la classe d’une icône, le cas échant, d’un élément de données, en fonction des propriétés iconField et iconFunction. Le champ de l’élément peut retourner une chaîne tant que cette chaîne représente le nom d’une classe dans l’application. Le champ de l’élément peut également être une chaîne qui est le nom d’une variable dans le document qui contient la classe de l’icône.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToItemRenderer"><apiName>itemToItemRenderer</apiName><shortdesc>
      Retourne le rendu d’élément pour un élément donné dans le fournisseur de données, s’il en existe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Rendu d’élément ou la valeur <codeph>null</codeph> si l’élément n’est pas en cours d’affichage.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne le rendu d’élément pour un élément donné dans le fournisseur de données, s’il en existe. Comme les éléments de rendu n’existent que pour les éléments qui se trouvent au sein du jeu de rangées affichables, cette méthode retourne la valeur <codeph>null</codeph> si l’élément n’est pas visible. Pour DataGrid, la fonctionnalité de rendu de la première colonne sera retournée.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Retourne la chaîne que la fonctionnalité de rendu doit afficher pour l’objet de données spécifié, en fonction des propriétés labelField et labelFunction.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Chaîne à afficher en fonction des données.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Objet à afficher.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne la chaîne que la fonctionnalité de rendu doit afficher pour l’objet de données spécifié, en fonction des propriétés labelField et labelFunction. Si la méthode ne peut pas convertir le paramètre en chaîne, elle retourne un espace unique.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:itemToUID"><apiName>itemToUID</apiName><shortdesc>
      Détermine l’UID d’un élément du fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>UID comme chaîne.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Elément du fournisseur de données.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine l’UID d’un élément du fournisseur de données. Tous les éléments d’un fournisseur de données doivent comporter un identifiant unique (UID). Sinon, un identifiant sera généré pour leur être associé. Cela signifie qu’un objet ou une valeur scalaire ne peut pas appaître deux fois dans un fournisseur de données. 
     
      <p>Par exemple, le fournisseur de données suivant n’est pas pris en charge, car la valeur « foo » apparaît deux fois et l’UID d’une chaîne est la chaîne elle-même :</p>
     
      <pre>var sampleDP:Array = ["foo", "bar", "foo"]</pre>
     
      <p>Les objets dynamiques simples peuvent apparaître deux fois s’ils constituent deux occurrences distinctes. Le cas suivant est pris en charge, car chacune des occurrences aura un UID différent parce qu’il s’agit d’objets différents :</p>
     
      <pre>var sampleDP:Array = [{label: "foo"}, {label: "foo"}]</pre>
     
      <p>Notez que le cas suivant n’est pas pris en charge, car la même occurrence apparaît deux fois.</p>
     
      <pre>
      var foo:Object = {label: "foo"};
      sampleDP:Array = [foo, foo];</pre>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:makeRowsAndColumns"><apiName>makeRowsAndColumns</apiName><shortdesc>
      Créez assez de rangées et de colonnes pour remplir la zone décrite par les paramètres left, top, right et bottom.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Point contenant le nombre de rangées et de colonnes créées.
      
      </apiDesc><apiType value="flash.geom:Point"/></apiReturn><apiParam><apiItemName>left</apiItemName><apiType value="Number"/><apiDesc>Décalage horizontal en pixels de la zone à remplir.
     
      </apiDesc></apiParam><apiParam><apiItemName>top</apiItemName><apiType value="Number"/><apiDesc>Décalage vertical en pixels de la zone à remplir.
     
      </apiDesc></apiParam><apiParam><apiItemName>right</apiItemName><apiType value="Number"/><apiDesc>Décalage horizontal en pixels de la zone à remplir (à partir du côté gauche du composant).
     
      </apiDesc></apiParam><apiParam><apiItemName>bottom</apiItemName><apiType value="Number"/><apiDesc>Décalage vertical en pixels de la zone à remplir (à partir du haut du composant).
     
      </apiDesc></apiParam><apiParam><apiItemName>firstColumn</apiItemName><apiType value="int"/><apiDesc>Décalage dans <codeph>listItems</codeph> pour stocker le premier rendu à créer.
     
      </apiDesc></apiParam><apiParam><apiItemName>firstRow</apiItemName><apiType value="int"/><apiDesc>Décalage dans <codeph>listItems</codeph> pour stocker le premier rendu à créer.
     
      </apiDesc></apiParam><apiParam><apiItemName>byCount</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Si la valeur est, crée le nombre de rangées <codeph>rowsNeeded</codeph> et ignore le paramètre <codeph>bottom</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowsNeeded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre de rangées à créer si <codeph>byCount</codeph> a la valeur true.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Créez assez de rangées et de colonnes pour remplir la zone décrite par les paramètres left, top, right et bottom. Les rendus sont créés et insérés dans le tableau <codeph>listItems</codeph> à partir de <codeph>(firstColumn, firstRow)(</codeph> et en se déplaçant vers le bas.
     
      <p>Si les paramètres <codeph>byCount</codeph> et <codeph>rowsNeeded</codeph> sont spécifiés, créez ce nombre de rangées et ignorez les paramètres <codeph>bottom</codeph> et <codeph>right</codeph>.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:measure"><apiName>measure</apiName><shortdesc>
      Calcule la largeur et la hauteur mesurées du composant en fonction des propriétés rowCount, columnCount, rowHeight et columnWidth.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Calcule la largeur et la hauteur mesurées du composant en fonction des propriétés <codeph>rowCount</codeph>, <codeph>columnCount</codeph>, <codeph>rowHeight</codeph> et <codeph>columnWidth</codeph>.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:measureHeightOfItems"><apiName>measureHeightOfItems</apiName><shortdesc>
      Mesure un jeu d’éléments à partir du fournisseur de données à l’aide du rendu d’élément actuel et retourne la somme des hauteurs de ces éléments.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Somme de la hauteur des éléments mesurés.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Elément du fournisseur de données à partir duquel calculer la hauteur.
     
      </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Nombre d’éléments à utiliser pour calculer la hauteur.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Mesure un jeu d’éléments à partir du fournisseur de données à l’aide du rendu d’élément actuel et retourne la somme des hauteurs de ces éléments.
     
      <p>Cette méthode n’est pas implémentée dans la classe ListBase et doit l’être dans la classe enfant.</p>
     
      <p>Une valeur <codeph>index</codeph> négative peut être utilisée pour inclure les en-têtes dans le calcul de la hauteur.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:measureWidthOfItems"><apiName>measureWidthOfItems</apiName><shortdesc>
      Mesure un jeu d’éléments à partir du fournisseur de données à l’aide du rendu d’élément actuel et retourne la largeur maximale trouvée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Largeur maximale des éléments mesurés.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Elément du fournisseur de données à partir duquel commencer à mesure la largeur.
     
      </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Nombre d’éléments à mesurer dans le calcul de la largeur.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Mesure un jeu d’éléments à partir du fournisseur de données à l’aide du rendu d’élément actuel et retourne la largeur maximale trouvée. Cette est méthode est utilisée pour calculer la largeur du composant. Les différentes classes dérivées de ListBase ont des implémentations légèrement différentes. DataGrid mesure ses colonnes au lieu des éléments du fournisseur de données et TileList se contente de mesurer le premier élément en supposant que tous les éléments auront la même taille.
     
      <p>Cette méthode n’est pas implémentée dans la classe ListBase et doit l’être dans la classe enfant.</p>
     
      <p>Une valeur <codeph>index</codeph> négative peut être utilisée pour inclure les en-têtes dans le calcul de la largeur.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseClickHandler"><apiName>mouseClickHandler</apiName><shortdesc>
      Gère les événements MouseEvent.MOUSE_CLICK à partir des cibles de souris contenues dans la liste, y compris les rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>MouseEvent.MOUSE_CLICK</codeph> à partir des cibles de souris contenues dans la liste, y compris les rendus. Cette méthode détermine quel rendu a été activé et distribue un événement <codeph>ListEvent.ITEM_CLICK</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseDoubleClickHandler"><apiName>mouseDoubleClickHandler</apiName><shortdesc>
      Gère les événements MouseEvent.MOUSE_DOUBLE_CLICK à partir des cibles de souris contenues dans la liste, y compris les rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>MouseEvent.MOUSE_DOUBLE_CLICK</codeph> à partir des cibles de souris contenues dans la liste, y compris les rendus. Cette méthode détermine quel rendu a été activé et distribue un événement <codeph>ListEvent.ITEM_DOUBLE_CLICK</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc>
      Gère les événements MouseEvent.MOUSE_DOWN à partir des cibles de souris contenues dans la liste, y compris les rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>MouseEvent.MOUSE_DOWN</codeph> à partir des cibles de souris contenues dans la liste, y compris les rendus. Cette méthode trouve le rendu qui a été activé et se prépare à recevoir un événément <codeph>MouseEvent.MOUSE_UP</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseEventToItemRenderer"><apiName>mouseEventToItemRenderer</apiName><shortdesc>
      Détermine quel rendu d’élément se trouve sous la souris.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Rendu d’élément survolé par la souris ou valeur <codeph>null</codeph> si aucun n’existe.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>MouseEvent contenant la position de la souris et l’objet qu’elle survole.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine quel rendu d’élément se trouve sous la souris. Les rendus d’élément peuvent être constitués de plusieurs cibles de souris. Ils peuvent également avoir des zones visibles qui ne sont pas des cibles pour la souris. Cette méthode vérifie les cibles et la position pour déterminer quel rendu d’élément la souris survole du point de vue de l’utilisateur, ce qui peut être différent des informations fournies par l’événement de la souris.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseMoveHandler"><apiName>mouseMoveHandler</apiName><shortdesc>
      Gère les événements MouseEvent.MOUSE_MOVE à partir des cibles de souris contenues dans la liste, y compris les rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>MouseEvent.MOUSE_MOVE</codeph> à partir des cibles de souris contenues dans la liste, y compris les rendus. Cette méthode recherche un gestion qui constitue le début d’une opération Glisser-déposer et envoie un événement <codeph>DragEvent.DRAG_START</codeph>. Elle regarde également si la souris survole une zone qui ne constitue pas une cible d’un rendu afin que Flex puisse essayer de faire croire que ce rendu était la cible.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseOutHandler"><apiName>mouseOutHandler</apiName><shortdesc>
      Gère les événements MouseEvent.MOUSE_OUT à partir des cibles de souris contenues dans la liste, y compris les rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>MouseEvent.MOUSE_OUT</codeph> à partir des cibles de souris contenues dans la liste, y compris les rendus. Cette méthode découvre quel rendu la souris a quitté et supprime les mises en surbrillance.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseOverHandler"><apiName>mouseOverHandler</apiName><shortdesc>
      Gère les événements MouseEvent.MOUSE_OVER à partir des cibles de souris contenues dans la liste, y compris les rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>MouseEvent.MOUSE_OVER</codeph> à partir des cibles de souris contenues dans la liste, y compris les rendus. Cette méthode découvre quel rendu la souris survole et le met en surbrillance.
     
      <p>Les classe List appellent également cette méthode depuis un événement <codeph>MouseEvent.MOUSE_MOVE</codeph>. Cet événement permet de détecter les mouvements dans des zones qui ne constituent pas des cibles des rendus et dans les zones remplies autour des rendus.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc>
      Gère les événements MouseEvent.MOUSE_DOWN à partir des cibles de souris contenues dans la liste, y compris les rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>MouseEvent.MOUSE_DOWN</codeph> à partir des cibles de souris contenues dans la liste, y compris les rendus. Cette méthode trouve le rendu qui a été activé et se prépare à recevoir un événément <codeph>MouseEvent.MOUSE_UP</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:mouseWheelHandler"><apiName>mouseWheelHandler</apiName><shortdesc>
      Gère les événements mouseWheel en modifiant les positions du défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Objet MouseEvent.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gère les événements <codeph>mouseWheel</codeph> en modifiant les positions du défilement. Il s’agit d’une copie de la version dans la classe ScrollControlBase, modifiée pour changer la propriété horizontalScrollPosition si la cible est exécutée horizontalement.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase/mouseWheelHandler()"><linktext>mx.core.ScrollControlBase.mouseWheelHandler()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveIndicatorsHorizontally"><apiName>moveIndicatorsHorizontally</apiName><shortdesc>
      Déplace la sélection et les indicateurs de surbrillance horizontalement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID utiliser pour rechercher les indicateurs.
      </apiDesc></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/><apiDesc>Distance du déplacement horizontal.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Déplace la sélection et les indicateurs de surbrillance horizontalement.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveIndicatorsVertically"><apiName>moveIndicatorsVertically</apiName><shortdesc>
      Déplace la sélection et les indicateurs de surbrillance verticalement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID utiliser pour rechercher les indicateurs.
      </apiDesc></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/><apiDesc>Distance du déplacement vertical.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Déplace la sélection et les indicateurs de surbrillance verticalement.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveRowVertically"><apiName>moveRowVertically</apiName><shortdesc>
      Déplacez verticalement une rangée et mettez à jour l’enregisrtement rowInfo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Index de la rangée.
      </apiDesc></apiParam><apiParam><apiItemName>numCols</apiItemName><apiType value="int"/><apiDesc>Nombre de colonnes de la rangée.
      </apiDesc></apiParam><apiParam><apiItemName>moveBlockDistance</apiItemName><apiType value="Number"/><apiDesc>Distance du déplacement.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Déplacez verticalement une rangée et mettez à jour l’enregisrtement rowInfo.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveSelectionHorizontally"><apiName>moveSelectionHorizontally</apiName><shortdesc>
      Déplace la sélection horizontalement en réponse à la sélection d’éléments par l’utilisateur avec les touches fléchées vers la gauche ou vers la droite et des modificateurs comme les touches Maj et Ctrl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="uint"/><apiDesc>Touche qui a été activée (par exemple, <codeph>Keyboard.LEFT</codeph>).
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc>La valeur est <codeph>true</codeph> si la touche Maj a été maintenue enfoncée lors de l’activation de la touche du clavier.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph> si la touche Ctrl a été maintenue enfoncée lors de l’activation de la touche du clavier.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Déplace la sélection horizontalement en réponse à la sélection d’éléments par l’utilisateur avec les touches fléchées vers la gauche ou vers la droite et des modificateurs comme les touches Maj et Ctrl. Cette méthode peut changer les propriétés <codeph>horizontalScrollPosition</codeph>, <codeph>verticalScrollPosition</codeph> et <codeph>caretIndex</codeph> et appeler la méthode <codeph>finishKeySelection()</codeph> pour mettre à jour la sélection.
     
      <p>Non implémenté dans ListBase, car l’objet List par défaut est une colonne seule et ne défile par conséquent pas horizontalement.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:moveSelectionVertically"><apiName>moveSelectionVertically</apiName><shortdesc>
      Déplace la sélection verticalement en réponse à la sélection d’éléments par l’utilisateur avec les touches fléchées vers le haut ou vers le bas et des modificateurs comme les touches Maj et Ctrl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="uint"/><apiDesc>Touche qui a été activée (par exemple, <codeph>Keyboard.DOWN</codeph>).
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc>La valeur est <codeph>true</codeph> si la touche Maj a été maintenue enfoncée lors de l’activation de la touche du clavier.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph> si la touche Ctrl a été maintenue enfoncée lors de l’activation de la touche du clavier.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Déplace la sélection verticalement en réponse à la sélection d’éléments par l’utilisateur avec les touches fléchées vers le haut ou vers le bas et des modificateurs comme les touches Maj et Ctrl. Cette méthode peut changer les propriétés <codeph>horizontalScrollPosition</codeph>, <codeph>verticalScrollPosition</codeph> et <codeph>caretIndex</codeph> et appeler la méthode <codeph>finishKeySelection()</codeph> pour mettre à jour la sélection.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:prepareDataEffect"><apiName>prepareDataEffect</apiName><shortdesc>
      Prépare l’effet de données pour l’événement de collection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>ce</apiItemName><apiOperationClassifier>mx.events:CollectionEvent</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
      Prépare l’effet de données pour l’événement de collection.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:purgeItemRenderers"><apiName>purgeItemRenderers</apiName><shortdesc>
      Appelé par la méthode updateDisplayList() pour supprimer les rendus d’élément existants et nettoyer les différentes structures de chache lorsque le rendu change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Appelé par la méthode <codeph>updateDisplayList()</codeph> pour supprimer les rendus d’élément existants et nettoyer les différentes structures de chache lorsque le rendu change.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:reKeyVisibleData"><apiName>reKeyVisibleData</apiName><shortdesc>
      Met à jour les touches dans le tableau de hasage visibleData.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Met à jour les touches dans le tableau de hasage visibleData.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:removeDataEffectItem"><apiName>removeDataEffectItem</apiName><shortdesc>
      
      Supprime un rendu d’élément si un effet de changement des données est en cours d’exécution.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Rendu d’élément à supprimer de la mise en forme du contrôle.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Supprime un rendu d’élément si un effet de changement des données est en cours d’exécution. Le rendu d’élément doit correspondre aux données qui ont déjà été supprimées de la collection du fournisseur de données. Cette fonction sera appelée par un effet <codeph>RemoveItemAction</codeph> dans le cadre d’un effet de changement des données pour indiquer le point auquel un élément de données cesse d’être affiché par le contrôle, à l’aide d’un rendu d’élément.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:removeFromRowArrays"><apiName>removeFromRowArrays</apiName><shortdesc>
      Supprimez une rangée des tableaux stockant les références à la rangée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>i</apiItemName><apiType value="int"/><apiDesc>Index de la rangée.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Supprimez une rangée des tableaux stockant les références à la rangée.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:removeIndicators"><apiName>removeIndicators</apiName><shortdesc>
      Nettoie les surbrillances de sélection et tout autre graphique associé pour un élément donné du fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>UID de l’élément du fournisseur de données.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Nettoie les surbrillances de sélection et tout autre graphique associé pour un élément donné du fournisseur de données.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:restoreRowArrays"><apiName>restoreRowArrays</apiName><shortdesc>
      Supprimez le nombre voulu de rangées au début des tableaux stockant les références aux rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>modDeltaPos</apiItemName><apiType value="int"/><apiDesc>Nombre de rangées à supprimer.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Supprimez le nombre voulu de rangées au début des tableaux stockant les références aux rangées.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:scrollHorizontally"><apiName>scrollHorizontally</apiName><shortdesc>
      Ajuste les rendus en fonction d’un changement de la position du défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Nouvelle position du défilement.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Changement de position. Cette valeur est toujours un nombre positif.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc>La valeur est <codeph>true</codeph> si la position du défilement se réduit.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ajuste les rendus en fonction d’un changement de la position du défilement.
     
      <p>Les classes List tentent d’optimiser le défilement lorsque la position du défilement a été modifié d’un nombre inférieur à celui des rangées visibles. Dans ce cas, certaines rangées restent inchangées et ont juste besoin d’être déplacées. D’autres rangées sont supprimées et de nouvelles rangées sont ajoutées. Si la position du défilement change trop, toutes les anciennes rangées sont supprimées et de nouvelles rangées sont ajoutées en appellant la méthode <codeph>makeRowsAndColumns()</codeph> pour l’intégralité de la zone d’affichage.</p>
     
      <p>Non implémenté dans ListBase, car l’objet List par défaut est une colonne seule et ne défile par conséquent pas horizontalement.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:scrollPositionToIndex"><apiName>scrollPositionToIndex</apiName><shortdesc>
      Retourne l’index du fournisseur de données correspondant à l’élément sur les premières rangée et colonne visibles, pour les positions de défilement données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Index du fournisseur de données.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>horizontalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Valeur de la propriété <codeph>horizontalScrollPosition</codeph> correspondant à la position du défilement.
      </apiDesc></apiParam><apiParam><apiItemName>verticalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Valeur de la propriété <codeph>verticalScrollPosition</codeph> correspondant à la position du défilement.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Retourne l’index du fournisseur de données correspondant à l’élément sur les premières rangée et colonne visibles, pour les positions de défilement données.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:scrollToIndex"><apiName>scrollToIndex</apiName><shortdesc>
      S’assure que l’élément du fournisseur de données à l’index donné est visible.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si <codeph>verticalScrollPosition</codeph> a changé.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index de l’élément dans le fournisseur de données.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      S’assure que l’élément du fournisseur de données à l’index donné est visible. Si l’élément est visible, la propriété <codeph>verticalScrollPosition</codeph> reste intacte, même si l’élément n’est pas le premier élément visible. Si l’élément n’est actuellement pas visible, la propriété <codeph>verticalScrollPosition</codeph> est modifiée pour faire de l’élément le premier élément visible, sauf si le nombre de rangées est insuffisant parce que la valeur <codeph>verticalScrollPosition</codeph> est limitée par la propriété <codeph>maxVerticalScrollPosition</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:scrollVertically"><apiName>scrollVertically</apiName><shortdesc>
      Ajuste les rendus en fonction d’un changement de la position du défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Nouvelle position du défilement.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Changement de position. Cette valeur est toujours un nombre positif.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc>La valeur est <codeph>true</codeph> si la position du défilement se réduit.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ajuste les rendus en fonction d’un changement de la position du défilement.
     
      <p>Les classes List tentent d’optimiser le défilement lorsque la position du défilement a été modifié d’un nombre inférieur à celui des rangées visibles. Dans ce cas, certaines rangées restent inchangées et ont juste besoin d’être déplacées. D’autres rangées sont supprimées et de nouvelles rangées sont ajoutées. Si la position du défilement change trop, toutes les anciennes rangées sont supprimées et de nouvelles rangées sont ajoutées en appellant la méthode <codeph>makeRowsAndColumns()</codeph> pour l’intégralité de la zone d’affichage.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:seekPendingFailureHandler"><apiName>seekPendingFailureHandler</apiName><shortdesc>
      Gestionnaire d’échec par défaut lorsqu’une recherche échoue en raison d’une erreur de page.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Données qui ont provoquées l’erreur. 
      
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBaseSeekPending</apiOperationClassifier><apiDesc>Données concernant une opérateur de recherche qui a été interrompue par une erreur ItemPendingError.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gestionnaire d’échec par défaut lorsqu’une recherche échoue en raison d’une erreur de page.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:seekPendingResultHandler"><apiName>seekPendingResultHandler</apiName><shortdesc>
      Gestionnaire de résultat par défaut lorsqu’une recherche échoue en raison d’une erreur de page.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Données qui ont provoquées l’erreur.
      
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBaseSeekPending</apiOperationClassifier><apiDesc>Données concernant une opérateur de recherche qui a été interrompue par une erreur ItemPendingError.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gestionnaire de résultat par défaut lorsqu’une recherche échoue en raison d’une erreur de page. Cette méthode vérifie si elle contient le résultat d’erreur de page la plus récente. Si elle ne comporte pas l’erreur de page la plus récente, elle renvoie le contrôle à l’appelant. Si elle comporte l’erreur de page la plus récente, elle définit l’itérateur à la position appropriée.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:seekPositionSafely"><apiName>seekPositionSafely</apiName><shortdesc>
      Recherche une position et gère une erreur ItemPendingError si nécessaire.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>false</codeph> si un objet ItemPendingError est généré.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Index dans la collection.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Recherche une position et gère une erreur ItemPendingError si nécessaire.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:selectItem"><apiName>selectItem</apiName><shortdesc>
      Met à jour le jeu d’éléments sélectionnés, étant donné que le rendu d’élément fourni a été activé par la souris et que les modificateurs clavier sont dans l’état donné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>La valeur est <codeph>true</codeph> si le jeu d’éléments sélectionnés a changé. Le fait de cliquer sur un élément déjà sélectionné ne change pas toujours le jeu d’éléments sélectionnés.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiDesc>Rendu d’élément sur lequel l’utilisateur a cliqué.
      </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph> si la touche Maj a été maintenue enfoncée lors de l’activation de la souris.
      </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph> si la touche Ctrl a été maintenue enfoncée lors de l’activation de la souris.
      </apiDesc></apiParam><apiParam><apiItemName>transition</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>La valeur est <codeph>true</codeph> si les graphiques de l’état sélectionné doivent s’estomper à l’aide d’un effet.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Met à jour le jeu d’éléments sélectionnés, étant donné que le rendu d’élément fourni a été activé par la souris et que les modificateurs clavier sont dans l’état donné. Cette méthode met également à jour l’affichage des rendus d’élément selon leur état sélectionné mis à jour.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:setRowCount"><apiName>setRowCount</apiName><shortdesc>
      Définit la propriété rowCount sans provoquer d’invalidation ou définir la propriété explicitRowCount, qui verrouille de façon permanente le nombre de rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="int"/><apiDesc>Nombre de rangées.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Définit la propriété <codeph>rowCount</codeph> sans provoquer d’invalidation ou définir la propriété <codeph>explicitRowCount</codeph>, qui verrouille de façon permanente le nombre de rangées.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:setRowHeight"><apiName>setRowHeight</apiName><shortdesc>
      Définit la propriété rowHeight sans provoquer d’invalidation ou définir la propriété explicitRowHeight, qui verrouille de façon permanente la hauteur des rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>v</apiItemName><apiType value="Number"/><apiDesc>Hauteur de rangée, en pixels.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Définit la propriété <codeph>rowHeight</codeph> sans provoquer d’invalidation ou définir la propriété <codeph>explicitRowHeight</codeph>, qui verrouille de façon permanente la hauteur des rangées.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:shiftRow"><apiName>shiftRow</apiName><shortdesc>
      Décale une rangée dans les tableaux référençant les rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldIndex</apiItemName><apiType value="int"/><apiDesc>Ancien index des tableaux.
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="int"/><apiDesc>Nouveaux index des tableaux.
      </apiDesc></apiParam><apiParam><apiItemName>numCols</apiItemName><apiType value="int"/><apiDesc>Nombre de colonnes de la rangée.
      </apiDesc></apiParam><apiParam><apiItemName>shiftItems</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph> si nous déplaçons réellement l’élément. <codeph>false</codeph> si nous changeons simplement la valeur rowIndex de l’élément.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Décale une rangée dans les tableaux référençant les rangées.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:showDropFeedback"><apiName>showDropFeedback</apiName><shortdesc>
      Affiche un indicateur de dépôt sous le pointeur de la souris pour indiquer qu’une opération Glisser-déposer est autorisée et l’emplacement où les éléments seront déposés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Objet DragEvent contenant des informations sur la position de la souris.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Affiche un indicateur de dépôt sous le pointeur de la souris pour indiquer qu’une opération Glisser-déposer est autorisée et l’emplacement où les éléments seront déposés.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:sumRowHeights"><apiName>sumRowHeights</apiName><shortdesc>
      Détermine la hauteur du jeu de rangées requis.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Hauteur totale des rangées.
      
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>startRowIdx</apiItemName><apiType value="int"/><apiDesc>Index de la première rangée.
      </apiDesc></apiParam><apiParam><apiItemName>endRowIdx</apiItemName><apiType value="int"/><apiDesc>Index de la dernière rangée.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Détermine la hauteur du jeu de rangées requis.
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:truncateRowArrays"><apiName>truncateRowArrays</apiName><shortdesc>
      Supprimez toutes les rangées restantes à la fin des tableaux stockant les références aux rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>numRows</apiItemName><apiType value="int"/><apiDesc>Index de rangée à partir duquel effet la troncation.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Supprimez toutes les rangées restantes à la fin des tableaux stockant les références aux rangées.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:unconstrainRenderer"><apiName>unconstrainRenderer</apiName><shortdesc>
      
      Appelé par un effet UnconstrainItemAction dans le cadre d’un effet de changement des données si les rendus d’élément correspondant à certains éléments de données doivent être déplacés hors des positions normales des rendus d’élément dans le contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Rendu d’élément qui constitue la cible de l’effet.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Appelé par un effet <codeph>UnconstrainItemAction</codeph> dans le cadre d’un effet de changement des données si les rendus d’élément correspondant à certains éléments de données doivent être déplacés hors des positions normales des rendus d’élément dans le contrôle. Le contrôle n’essaie pas de placer le rendu d’élément pour la durée de l’effet.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Ajoute ou supprime les rendus d’élément si le nombre d’éléments affichables a changé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Indique la largeur du composant, en pixels, des coordonnées du composant, quelle que soit la valeur de la propriété <codeph>scaleX</codeph> du composant.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Indique la hauteur du composant, en pixels, des coordonnées du composant, quelle que soit la valeur de la propriété <codeph>scaleY</codeph> du composant.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Ajoute ou supprime les rendus d’élément si le nombre d’éléments affichables a changé. Actualise les rendus d’élément s’il est possible qu’ils aient changé. Applique la sélection si un changement par programme a eu lieu.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#ScrollControlBase"><linktext>mx.core.ScrollControlBase</linktext></link></related-links></apiOperation><apiOperation id="mx.controls.listClasses:ListBase:protected:updateList"><apiName>updateList</apiName><shortdesc>
      Actualise toutes les rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Actualise toutes les rangées. L’appel de cette méthode peut nécessiter un traitement important, car elle retrace complètement tous les rendus de la liste et ne retourne rien tant que le traitement n’est pas terminé.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls.listClasses:ListBase:protected:actualCollection"><apiName>actualCollection</apiName><shortdesc>
      Copie de la valeur normalement stockée dans la collection utilisée lors de l’exécution des effets de changement des données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:ICollectionView</apiValueClassifier></apiValueDef><apiDesc>
      Copie de la valeur normalement stockée dans la <codeph>collection</codeph> utilisée lors de l’exécution des effets de changement des données. Cette valeur doit être nulle lorsqu’aucun effet de changement des données n’est en cours d’exécution.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:actualIterator"><apiName>actualIterator</apiName><shortdesc>
      Copie de la valeur normalement stockée dans la propriété iterator utilisée lors de l’exécution des effets de changement des données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Copie de la valeur normalement stockée dans la propriété <codeph>iterator</codeph> utilisée lors de l’exécution des effets de changement des données.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:allowDragSelection"><apiName>allowDragSelection</apiName><shortdesc>
      Indicateur précisant si la sélection par glissement est activée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si la sélection par glissement est activée. La sélection par glissement est la capacité à sélectionner un élément en faisant glisser, par opposition à la sélection normale lors de laquelle vous ne pouvez pas avoir le bouton de la souris enfoncé lorsque votre souris survole l’élément à sélectionner. Cette fonctionnalité est utilisée dans les boutons déroulants ComboBox pour prendre en charge l’activation du bouton de la souris lorsque la souris survole le bouton déroulant, puis le glissement de la souris sur le bouton déroulant pour sélectionner un élément.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:anchorBookmark"><apiName>anchorBookmark</apiName><shortdesc>
      Signet sur l’élément correspondant à l’ancrage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:CursorBookmark</apiValueClassifier></apiValueDef><apiDesc>
      Signet sur l’élément correspondant à l’ancrage. Un signet permet au composant de rechercher rapidement une position dans la collection des éléments. Cette propriété est utilisée lors de la sélection d’un jeu d’éléments entre l’ancrage et l’élément d’insertion ou l’élément mis en surbrillance, et lors de la recherche de l’élément sélectionné lorsqu’un tri ou un filtre est appliqué.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:anchorIndex"><apiName>anchorIndex</apiName><shortdesc>
      Décalage de l’élément dans le fournisseur de données, qui correspond au point d’ancrage de la sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Décalage de l’élément dans le fournisseur de données, qui correspond au point d’ancrage de la sélection.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:cachedItemsChangeEffect"><apiName>cachedItemsChangeEffect</apiName><shortdesc>
      Effet lu lorsque des changements se produisent dans le fournisseur de données du contrôle, défini par le style itemsChangeEffect.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>null</apiData><apiValueClassifier>mx.effects:IEffect</apiValueClassifier></apiValueDef><apiDesc>
      Effet lu lorsque des changements se produisent dans le fournisseur de données du contrôle, défini par le style itemsChangeEffect.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretBookmark"><apiName>caretBookmark</apiName><shortdesc>
      Signet sur l’élément sous le signe d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:CursorBookmark</apiValueClassifier></apiValueDef><apiDesc>
      Signet sur l’élément sous le signe d’insertion. Un signet permet au composant de rechercher rapidement une position dans la collection des éléments.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretIndex"><apiName>caretIndex</apiName><shortdesc>
      Décalage de l’élément dans le fournisseur de données qui constitue le signe d’insertion de la sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Décalage de l’élément dans le fournisseur de données qui constitue le signe d’insertion de la sélection.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBase/caretItemRenderer"><linktext>mx.controls.listClasses.ListBase.caretItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretIndicator"><apiName>caretIndicator</apiName><shortdesc>
      DisplayObject qui contient les graphiques indiquant quel rendu est le signe d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      DisplayObject qui contient les graphiques indiquant quel rendu est le signe d’insertion.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretItemRenderer"><apiName>caretItemRenderer</apiName><shortdesc>
      Rendu de l’élément sous le signe d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Rendu de l’élément sous le signe d’insertion. Dans le modèle de sélection se trouvent un ancrage, un signe d’insertion et un élément en surbrillance. Lorsque vous utilisez la souris pour sélectionner, l’élément qui se trouve sous la souris est mis en surbrillance lorsqu’elle le survole. Lorsque vous cliquez avec la souris sans touches de modificateur (Maj ou Ctrl), le jeu d’éléments sélectionnés est effacé, et l’élément qui se trouve sous la surbrillance est sélectionné et devient l’ancrage. Le signe d’insertion n’est pas utilisé dans la sélection avec la souris. Si un ancrage ou un autre élément est sélectionné alors que vous utilisez la touche Maj, l’ancien jeu d’éléments sélectionnés est effacé et tous les éléments qui se trouvent entre l’élément et l’ancrage sont sélectionnés. Cliquez sur les éléments tout en utilisant la touche Ctrl pour faire basculer la sélection de chaque élément. L’ancrage n’est pas déplacé.
     
      <p>Lorsque vous sélectionnez des éléments à l’aide du clavier, si les touches fléchées sont utilisées sans touches de modificateur, l’ancienne sélection est effacée et le nouvel élément est sélectionné et devient le point d’ancrage et d’insertion. Un signe d’insertion apparaît autour de la surbrillance de sélection. Si l’utilisateur utilise les touches fléchées avec la touche Maj, l’ancienne sélection est effacée et les éléments situés entre l’ancrage et le nouvel élément sont sélectionnés. Le signe d’insertion passe sur l’élément suivant. Si les touches fléchées sont utilisées avec la touche Ctrl, seul le signe d’insertion est déplacé. L’utilisateur peut utiliser la touche d’espacement pour faire basculer la sélection de l’élément sous le signe d’insertion.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:caretUID"><apiName>caretUID</apiName><shortdesc>
      UID de l’élément sous le signe d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      UID de l’élément sous le signe d’insertion.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:collection"><apiName>collection</apiName><shortdesc>
      ICollectionView représentant le fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:ICollectionView</apiValueClassifier></apiValueDef><apiDesc>
      ICollectionView représentant le fournisseur de données. Lorsque vous définissez la propriété <codeph>dataProvider</codeph>, Flex enroule les fournisseurs de données comme il convient pour prendre en charge l’interface ICollectionView et définit cette propriété sur le résultat. La classe ListBase utilise ensuite cette propriété pour accéder aux données du fournisseur. Lorsque vous obtenez la propriété <codeph>dataProvider</codeph>, Flex retourne cette valeur.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dataEffectCompleted"><apiName>dataEffectCompleted</apiName><shortdesc>
      Indicateur précisant qu’un effet de changement des données vient de se termine.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant qu’un effet de changement des données vient de se termine. Le composant réagit généralement en nettoyant les structures de données internes lors du prochain appel de <codeph>updateDisplayList()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dataItemWrappersByRenderer"><apiName>dataItemWrappersByRenderer</apiName><shortdesc>
      Rendus d’élément d’association de dictionnaire vers le ItemWrappers utilisé pour fournir les données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Rendus d’élément d’association de dictionnaire vers le ItemWrappers utilisé pour fournir les données. Applicable uniquement si un effet de données est en cours d’exécution.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:defaultColumnCount"><apiName>defaultColumnCount</apiName><shortdesc>
      Nombre par défaut de colonnes à afficher.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>4</apiData><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre par défaut de colonnes à afficher. Cette valeur est utilisée si le calcul du nombre de rangées donne une valeur inférieure à 1 lorsque vous essayez de calculer l’objet columnCount en fonction de la taille ou du contenu.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:defaultRowCount"><apiName>defaultRowCount</apiName><shortdesc>
      Nombre par défaut de rangées à afficher.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>4</apiData><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre par défaut de rangées à afficher. Cette valeur est utilisée si le calcul du nombre de rangées donne une valeur inférieure à 1 lorsque vous essayez de calculer l’objet rowCount en fonction de la taille ou du contenu.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitColumnCount"><apiName>explicitColumnCount</apiName><shortdesc>
      Nombre de colonnes demandé par définition explicite de la propriété columnCount.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Nombre de colonnes demandé par définition explicite de la propriété <codeph>columnCount</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitColumnWidth"><apiName>explicitColumnWidth</apiName><shortdesc>
      Largeur de colonnes demandée par définition explicite de la propriété columnWidth.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Largeur de colonnes demandée par définition explicite de la propriété <codeph>columnWidth</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitRowCount"><apiName>explicitRowCount</apiName><shortdesc>
      Nombre de rangées demandé par définition explicite de la propriété rowCount.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>-1</apiData><apiType value="int"/></apiValueDef><apiDesc>
      Nombre de rangées demandé par définition explicite de la propriété <codeph>rowCount</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:explicitRowHeight"><apiName>explicitRowHeight</apiName><shortdesc>
      Hauteur de rangées demandée par définition explicite de la propriété rowHeight.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Hauteur de rangées demandée par définition explicite de la propriété <codeph>rowHeight</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:factoryMap"><apiName>factoryMap</apiName><shortdesc>
      Association des rendus d’élément par fabrique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Association des rendus d’élément par fabrique. Cette propriété est un dictionnaire indexé par itemRenderers où les valeurs sont IFactory.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:freeItemRenderers"><apiName>freeItemRenderers</apiName><shortdesc>
      Pile de rendus d’élément inutilisés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
      Pile de rendus d’élément inutilisés. La plupart des classes List recyclent les rendus qu’elles ont déjà créés lorsque le défilement sort de la zone d’affichage. Cela permet de gagner du temps lors du défilement. Les fonctionnalités de rendu recyclées sont stockées ici.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:freeItemRenderersByFactory"><apiName>freeItemRenderersByFactory</apiName><shortdesc>
      Association des rendus d’élément libres par fabrique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Association des rendus d’élément libres par fabrique. Cette propriété est un dictionnaire indexé par fabriques où les valeurs sont des dictionnaires d’itemRenderers.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:highlightIndicator"><apiName>highlightIndicator</apiName><shortdesc>
      DisplayObject qui contient les graphiques indiquant quel rendu est mis en surbrillance.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      DisplayObject qui contient les graphiques indiquant quel rendu est mis en surbrillance.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:highlightItemRenderer"><apiName>highlightItemRenderer</apiName><shortdesc>
      Rendu qui passe actuellement sur ou sous le signe d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Rendu qui passe actuellement sur ou sous le signe d’insertion.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:highlightUID"><apiName>highlightUID</apiName><shortdesc>
      UID de l’élément qui passe actuellement sur ou sous le signe d’insertion.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      UID de l’élément qui passe actuellement sur ou sous le signe d’insertion.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:itemsNeedMeasurement"><apiName>itemsNeedMeasurement</apiName><shortdesc>
      Indicateur précisant si les propriétés columnWidth et rowHeight doivent être calculées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant si les propriétés <codeph>columnWidth</codeph> et <codeph>rowHeight</codeph> doivent être calculées. Cette propriété est définie si un style change et risque d’affecter les mesures du rendu ou si le fournisseur de données est modifié.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:itemsSizeChanged"><apiName>itemsSizeChanged</apiName><shortdesc>
      Indicateur précisant que la taille des rendus peut avoir changé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant que la taille des rendus peut avoir changé. Le composant réagit généralement en réappliquant les éléments de données à tous les rendus lors du prochain appel de <codeph>updateDisplayList()</codeph>. On suppose que réappliquer les éléments aura pour effet d’invalider les rendus d’élément et de provoquer un nouveau calcul de leur mesure.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:iterator"><apiName>iterator</apiName><shortdesc>
      Occurrence IViewCursor principale utilisée pour récupérer les éléments du fournisseur de données et les transmettre aux rendus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Occurrence IViewCursor principale utilisée pour récupérer les éléments du fournisseur de données et les transmettre aux rendus. A la fin d’une séquence de code, il doit toujours être placé sur l’élément visible le plus en haut actuellement affiché.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:iteratorValid"><apiName>iteratorValid</apiName><shortdesc>
      Indicateur précisant qu’une erreur de page s’est produite et que la position de l’itérateur n’est pas valide (n’apparaît pas sur l’élément le plus en haut actuellement affiché).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant qu’une erreur de page s’est produite et que la position de l’itérateur n’est pas valide (n’apparaît pas sur l’élément le plus en haut actuellement affiché). Si le composant obtient une erreur de page (une erreur ItemPending), il définit <codeph>iteratorValid</codeph> sur <codeph>false</codeph>. Le code qui gère normalement le rendu des éléments vérifie cet indicateur et ne s’exécute pas tant que la page de données n’est pas sortie du serveur.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:keySelectionPending"><apiName>keySelectionPending</apiName><shortdesc>
      Indicateur précisant si la sélection par le clavier a été interrompue par une erreur de page.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant si la sélection par le clavier a été interrompue par une erreur de page. Le composant réagit en suspendant le rendu des éléments jusqu’à l’arrivée de la page de données. La méthode <codeph>finishKeySelection()</codeph> sera appelée à l’arrivée des données de la page.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:lastDropIndex"><apiName>lastDropIndex</apiName><shortdesc>
      Index le plus récemment calculé dans lequel l’élément déplacé par glissement doit être ajouté à l’emplacement cible.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index le plus récemment calculé dans lequel l’élément déplacé par glissement doit être ajouté à l’emplacement cible.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:lastSeekPending"><apiName>lastSeekPending</apiName><shortdesc>
      Recherche la plus récente qui a déclenché une erreur de page.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:ListBaseSeekPending</apiValueClassifier></apiValueDef><apiDesc>
      Recherche la plus récente qui a déclenché une erreur de page. S’il existe plusieurs erreurs de page, seule la plus récente est intéressante, car elle indique où positionner l’itérateur et recommencer le rendu des rangées.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:listContent"><apiName>listContent</apiName><shortdesc>
      Objet d’affichage interne qui est le parent de tous les rendus d’élément, indicateurs de sélection et de surbrillance et autres graphiques de support.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:ListBaseContentHolder</apiValueClassifier></apiValueDef><apiDesc>
      Objet d’affichage interne qui est le parent de tous les rendus d’élément, indicateurs de sélection et de surbrillance et autres graphiques de support. Ceci est pratiquement équivalent à <codeph>contentPane</codeph> dans la classe Container et permet de gérer le défilement.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:menuSelectionMode"><apiName>menuSelectionMode</apiName><shortdesc>
      Indicateur précisant si la sélection du style de menu doit être utilisée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant si la sélection du style de menu doit être utilisée. Dans un menu, le glissement d’un rendu vers un autre a pour effet de sélectionner le nouveau rendu et de désélectionner l’ancen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:modifiedCollectionView"><apiName>modifiedCollectionView</apiName><shortdesc>
      Affichage des collections qui préserve temporairement l’état du fournisseur de données précédent pour faciliter l’exécuter des effets de changement des données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="mx.collections:ModifiedCollectionView"/></apiValueDef><apiDesc>
      Affichage des collections qui préserve temporairement l’état du fournisseur de données précédent pour faciliter l’exécuter des effets de changement des données.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraColumns"><apiName>offscreenExtraColumns</apiName><shortdesc>
      Nombre cible de colonnes supplémentaires des rendus d’élément utilisés dans la mise en forme du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre cible de colonnes supplémentaires des rendus d’élément utilisés dans la mise en forme du contrôle. La moitié de ces colonnes est créée à gauche des colonnes visibles à l’écran et l’autre moitié est créée à droite. Cette propriété est généralement définie indirectement lorsque vous définissez la propriété <codeph>offscreenExtraRowsOrColumns</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraColumnsLeft"><apiName>offscreenExtraColumnsLeft</apiName><shortdesc>
      Nombre de colonnes hors écran qui se trouvent actuellement à gauche de la colonne visible la plus à gauche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre de colonnes hors écran qui se trouvent actuellement à gauche de la colonne visible la plus à gauche. Cette valeur sera &lt;= <codeph>offscreenExtraColumns</codeph> / 2.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraColumnsRight"><apiName>offscreenExtraColumnsRight</apiName><shortdesc>
      Nombre de colonnes hors écran qui se trouvent actuellement à droite de la colonne visible la plus à droite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre de colonnes hors écran qui se trouvent actuellement à droite de la colonne visible la plus à droite. Cette valeur sera &lt;= <codeph>offscreenExtraColumns</codeph> / 2.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRows"><apiName>offscreenExtraRows</apiName><shortdesc>
      Nombre cible de rangées supplémentaires des rendus d’élément à utiliser dans la mise en forme du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre cible de rangées supplémentaires des rendus d’élément à utiliser dans la mise en forme du contrôle. La moitié de ces rangées est créée au-dessus des rangées visibles à l’écran et l’autre moitié est créée au-dessous. Cette propriété est généralement définie indirectement lorsque vous définissez la propriété <codeph>offscreenExtraRowsOrColumns</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRowsBottom"><apiName>offscreenExtraRowsBottom</apiName><shortdesc>
      Nombre de rangées hors écran qui se trouvent actuellement sous le rendu d’élément visible le plus en bas.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre de rangées hors écran qui se trouvent actuellement sous le rendu d’élément visible le plus en bas. Cette valeur sera &lt;= <codeph>offscreenExtraRows</codeph> / 2.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRowsOrColumnsChanged"><apiName>offscreenExtraRowsOrColumnsChanged</apiName><shortdesc>
      Indicateur précisant que le nombre de rangées ou de colonnes hors écran a peut-être changé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant que le nombre de rangées ou de colonnes hors écran a peut-être changé.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:offscreenExtraRowsTop"><apiName>offscreenExtraRowsTop</apiName><shortdesc>
      Nombre de rangées hors écran qui se trouvent actuellement sur la rangée visible la plus en haut.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre de rangées hors écran qui se trouvent actuellement sur la rangée visible la plus en haut. Cette valeur sera &lt;= <codeph>offscreenExtraRows</codeph> / 2. Elle permet de calculer la relation des tableaux <codeph>listItems</codeph> et <codeph>rowInfo</codeph> avec les éléments du fournisseur de données (en collaboration avec la propriété <codeph>verticalScrollPosition</codeph>).
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:rendererChanged"><apiName>rendererChanged</apiName><shortdesc>
      Indicateur précisant que le rendu a changé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant que le rendu a changé. Le composant réagit généralement en détruisant les rendus et en traçant tous les éléments de données à tous les rendus lors du prochain appel de <codeph>updateDisplayList()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:reservedItemRenderers"><apiName>reservedItemRenderers</apiName><shortdesc>
      Table de hashage des rendus d’éléments actuellement inutilisés susceptibles d’être à nouveau utilisés à un avenir proche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Table de hashage des rendus d’éléments actuellement inutilisés susceptibles d’être à nouveau utilisés à un avenir proche. Utilisé lors de l’exécution d’effets de données. L’association est indexée par l’UID de l’élément du fournisseur de données.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:rowMap"><apiName>rowMap</apiName><shortdesc>
      Table de hashage des rendus d’élément avec leur objet ListRowInfo respectif.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Table de hashage des rendus d’élément avec leur objet ListRowInfo respectif. L’objet ListRowInfo est indexé par le nom DisplayObject du rendu d’élément.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:runDataEffectNextUpdate"><apiName>runDataEffectNextUpdate</apiName><shortdesc>
      Indicateur précisant si un effet de données doit être initialisé lors de la prochaine mise à jour de l’affichage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant si un effet de données doit être initialisé lors de la prochaine mise à jour de l’affichage.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:runningDataEffect"><apiName>runningDataEffect</apiName><shortdesc>
      Indicateur précisant si un effet de changement des données est en cours d’exécution.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant si un effet de changement des données est en cours d’exécution.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectedData"><apiName>selectedData</apiName><shortdesc>
      Tableau de hashage des objets ListBaseSelectionData qui suivent les éléments actuellement sélectionnés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Tableau de hashage des objets ListBaseSelectionData qui suivent les éléments actuellement sélectionnés. Le tableau est indexé par l’UID des éléments.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#ListBaseSelectionData"><linktext>mx.controls.listClasses.ListBaseSelectionData</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectionIndicators"><apiName>selectionIndicators</apiName><shortdesc>
      Tableau de hashage des indicateurs de sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Tableau de hashage des indicateurs de sélection. Ce tableau permet au composant de rechercher rapidement et de supprimer les indicateurs lorsque le jeu d’éléments sélectionnés est effacé. Le tableau est indexé par l’UID de l’élément.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectionLayer"><apiName>selectionLayer</apiName><shortdesc>
      Calque de listContent, sur lequel tous les indicateurs de sélection et de surbrillance sont tracés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Sprite"/></apiValueDef><apiDesc>
      Calque de <codeph>listContent</codeph>, sur lequel tous les indicateurs de sélection et de surbrillance sont tracés.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:selectionTweens"><apiName>selectionTweens</apiName><shortdesc>
      Tableau de hashage des interpolations de sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
      Tableau de hashage des interpolations de sélection. Ce tableau permet au composant de rechercher rapidement et de nettoyer les interpolations en cours si le jeu d’éléments sélectionnés est effacé. Le tableau est indexé par l’UID de l’élément.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:showCaret"><apiName>showCaret</apiName><shortdesc>
      Indicateur précisant si le signe d’insertion doit être affiché.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant si le signe d’insertion doit être affiché. Cette propriété est généralement définie sur <codeph>false</codeph> lorsque l’activité de la souris est détectée et redéfinie sur <codeph>true</codeph> lorsque le clavier est utilisé pour sélectionner.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:unconstrainedRenderers"><apiName>unconstrainedRenderers</apiName><shortdesc>
      Table de hashage de rendus d’élément qui ne sont pas soumis aux algorithmes de mise en forme de la liste.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      Table de hashage de rendus d’élément qui ne sont pas soumis aux algorithmes de mise en forme de la liste.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:wordWrapChanged"><apiName>wordWrapChanged</apiName><shortdesc>
      Indicateur précisant si la valeur de la propriété wordWrap a changé depuis la dernière mise à jour de la liste d’affichage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indicateur précisant si la valeur de la propriété <codeph>wordWrap</codeph> a changé depuis la dernière mise à jour de la liste d’affichage. Cette propriété est définie lorsque vous modifiez la valeur de la propriété <codeph>wordWrap</codeph> et est redéfinie sur <codeph>false</codeph> par la méthode <codeph>updateDisplayList()</codeph>. Le composant réagit généralement en réappliquant les éléments de données à tous les rendus lors du prochain appel de <codeph>updateDisplayList()</codeph>. Ceci est différent de itemsSizeChanged, car il indique en plus que la réapplication des éléments de données aux rendus peut ne pas les invalider puisque la seule chose qui a changé est le fait que le rendu doit ou non utiliser wordWrap comme facteur dans ses calculs de taille.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:allowMultipleSelection:get"><apiName>allowMultipleSelection</apiName><shortdesc>
      Indicateur signifiant que plusieurs éléments peuvent être sélectionnés à la fois.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur signifiant que plusieurs éléments peuvent être sélectionnés à la fois. Si la valeur est <codeph>true</codeph>, les utilisateurs peuvent sélectionner plusieurs éléments. Aucune option ne permet d’interdire la sélection discontiguë. Les options de sélection complexes standard sont toujours en vigueur (Maj-clic, Ctrl-clic).
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:columnCount:get"><apiName>columnCount</apiName><shortdesc>
      Nombre de colonnes à afficher dans un contrôle TileList ou d’éléments dans un contrôle HorizontalList.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre de colonnes à afficher dans un contrôle TileList ou d’éléments dans un contrôle HorizontalList. Pour l’objet DataGrid, indique le nombre de colonnes visibles. <b>Remarque</b> : la définition de cette propriété n’a aucun effet sur un contrôle DataGrid, qui base le nombre de colonnes sur la largeur du contrôle et sur la largeur de chaque colonne.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:columnWidth:get"><apiName>columnWidth</apiName><shortdesc>
      Largeur des colonnes du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>50
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Largeur des colonnes du contrôle. Cette propriété est utilisée par les contrôles TileList et HorizontalList. Elle n’a aucun effet sur les contrôles DataGrid, pour lesquels vous définissez la largeur de chaque DataGridColumn.
      
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:data:get"><apiName>data</apiName><shortdesc>
      Elément du fournisseur de données que ce composant doit rendre lorsque ce composant est utilisé comme rendu d’élément ou éditeur d’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Elément du fournisseur de données que ce composant doit rendre lorsque ce composant est utilisé comme rendu d’élément ou éditeur d’élément. La classe List définit cette propriété sur chaque rendu ou éditeur et le composant affiche les données. Les classes dérivées de ListBase prennent en charge cette propriété pour les situations complexes (par exemple pour une liste de DataGrids ou lorsqu’une colonne d’un DataGrid est une liste).
     
      <p>Ces classes List utilisent la propriété <codeph>listData</codeph> en plus de la propriété <codeph>data</codeph> pour déterminer les éléments à afficher. Si la classe List se trouve dans un DataGrid, elle s’attend à ce que la propriété <codeph>dataField</codeph> de la colonne s’associe à une propriété des données et elle définit la valeur <codeph>selectedItem</codeph> sur cette propriété. Si elle se trouve dans un contrôle List ou TileList, elle s’attend à ce que la propriété <codeph>labelField</codeph> de la liste s’associe à une propriété des données, et elle définit la valeur <codeph>selectedItem</codeph> sur cette propriété. Sinon, elle définit le <codeph>selectedItem</codeph> pour les données elles-mêmes.</p>
     
      <p>Cette propriété utilise le fournisseur de données mais elle ne le définit pas. Dans tous les cas, vous devez définir le fournisseur de données autrement.</p>
     
      <p>Vous ne pouvez pas définir cette propriété dans MXML.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Ensemble de données à afficher.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Ensemble de données à afficher. Cette propriété vous permet d’utiliser la plupart des types d’objets comme fournisseurs de données. Si vous définissez la propriété <codeph>dataProvider</codeph> sur un objet Array (tableau), il sera converti en un ArrayCollection. Si vous définissez la propriété sur un objet XML, il sera converti en un XMLListCollection doté d’un seul élément. Si vous définissez la propriété sur un XMLList, il sera converti en un XMLListCollection. Si vous définissez la propriété sur un objet qui implémente l’interface IList ou ICollectionView, l’objet sera utilisé directement.
     
      <p>A la suite des conversions, lorsque vous obtenez la propriété <codeph>dataProvider</codeph>, il s’agira toujours d’un objet ICollectionView, et donc pas forcément le type d’objet que vous avez utilisé pour définir la propriété. Il est important de comprendre ce comportement si vous souhaitez modifier les données du fournisseur de données : les modifications apportées aux données d’origine peuvent ne pas être détectées, mais les modifications apportées à l’objet ICollectionView que vous recevez de la propriété <codeph>dataProvider</codeph> seront détectées.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.collections.xml#ICollectionView"><linktext>mx.collections.ICollectionView</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:dataTipField:get"><apiName>dataTipField</apiName><shortdesc>
      Nom du champ dans les éléments du fournisseur de données à afficher comme astuce sur les données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nom du champ dans les éléments du fournisseur de données à afficher comme astuce sur les données. Par défaut, le contrôle List recherche la propriété <codeph>label</codeph> sur chaque élément et l’affiche. Toutefois, si les objets de données ne contiennent pas de propriété <codeph>label</codeph>, vous pouvez définir la propriété <codeph>dataTipField</codeph> pour qu’elle utilise une autre propriété dans l’objet de données. L’utilisation de « FullName » lors de l’affichage d’un jeu de noms de personnes extraits d’une base de données en est un exemple.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dataTipFunction:get"><apiName>dataTipFunction</apiName><shortdesc>
      Fonction fournie par l’utilisateur et à exécuter sur chaque élément pour en déterminer l’astuce sur les données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Fonction fournie par l’utilisateur et à exécuter sur chaque élément pour en déterminer l’astuce sur les données. Par défaut, le contrôle List recherche la propriété <codeph>label</codeph> sur chaque élément du fournisseur de données et l’affiche. Toutefois, certains éléments n’ont pas de propriété <codeph>label</codeph> ni une autre propriété que vous pouvez utiliser pour l’affichage dans les rangées. Un jeu de données présentant les champs lastName et firstName mais dont vous souhaitez afficher les noms complets en est un exemple. Vous pouvez fournir une propriété <codeph>dataTipFunction</codeph> qui recherche les champs appropriés et retourne une chaîne affichable. La propriété <codeph>dataTipFunction</codeph> permet également de gérer la mise en forme et la localisation.
     
      <p>La propriété dataTipFunction prend un unique argument correspondant à l’élément du fournisseur de données et renvoie une chaîne, comme l’illustre l’exemple suivant :</p>
     
      <pre>myDataTipFunction(item:Object):String</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dragEnabled:get"><apiName>dragEnabled</apiName><shortdesc>
      Indicateur précisant si vous pouvez faire glisser les éléments hors du contrôle et les déposer dans d’autres contrôles.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si vous pouvez faire glisser les éléments hors du contrôle et les déposer dans d’autres contrôles. Si la valeur est <codeph>true</codeph>, vous pouvez utiliser le glissement pour ce contrôle. Si la propriété <codeph>dropEnabled</codeph> a également la valeur <codeph>true</codeph>, vous pouvez faire glisser les éléments et les déposer dans ce contrôle pour les réorganiser.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dragImage:get"><apiName>dragImage</apiName><shortdesc>
      Obtient une occurrence de classe qui affiche les effets visuels lors d’une opération Glisser-déposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier><apiDefaultValue>mx.controls.listClasses.ListItemDragProxy
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Obtient une occurrence de classe qui affiche les effets visuels lors d’une opération Glisser-déposer.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:dragImageOffsets:get"><apiName>dragImageOffsets</apiName><shortdesc>
      Obtient le décalage de l’image glissée pour une opération Glisser-déposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.geom:Point"/></apiValueDef><apiDesc>
      Obtient le décalage de l’image glissée pour une opération Glisser-déposer.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      Indicateur précisant si les éléments peuvent être déplacés au lieu d’être simplement copiés du contrôle dans le cadre d’une opération Glisser-déposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si les éléments peuvent être déplacés au lieu d’être simplement copiés du contrôle dans le cadre d’une opération Glisser-déposer. Si la valeur est <codeph>true</codeph> et si la propriété <codeph>dragEnabled</codeph> a la valeur <codeph>true</codeph>, les éléments peuvent être déplacés. Il arrive souvent que les éléments du fournisseur de données ne puissent pas ou ne doivent pas être supprimés. Une opération de déplacement (MOVE) ne doit donc pas être autorisée lors d’une opération Glisser-déposer.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:dropEnabled:get"><apiName>dropEnabled</apiName><shortdesc>
      Indicateur précisant si les éléments glissés peuvent être déposés dans le contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si les éléments glissés peuvent être déposés dans le contrôle.
     
      <p>Si vous définissez cette propriété sur <codeph>true</codeph>, le contrôle accepte tous les formats de données et suppose que le format des données glissées correspond à celui des données résidant dans le fournisseur de données. Pour vérifier explicitement le format des données en cours de glissement, vous devez gérer un ou plusieurs des événements de glissement, comme <codeph>dragOver</codeph>, puis appeler la méthode <codeph>preventDefault()</codeph> de l’événement DragEvent pour personnaliser la façon dont la classe List accepte les données déposées.</p>
     
      <p>Lorsque vous définissez <codeph>dropEnabled</codeph> sur <codeph>true</codeph>, Flex appelle automatiquement les méthodes <codeph>showDropFeedback()</codeph> et <codeph>hideDropFeedback()</codeph> pour afficher l’indicateur de dépôt.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:iconField:get"><apiName>iconField</apiName><shortdesc>
      Le nom du champ de l’objet fournisseur de données qui détermine ce qui doit s’afficher en tant qu’icône.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Le nom du champ de l’objet fournisseur de données qui détermine ce qui doit s’afficher en tant qu’icône. Par défaut, la classe List n’essaie pas d’afficher les icônes avec le texte dans les rangées. En revanche, en spécifiant un champ d’icône, vous pouvez définir un graphique qui est créé et affiché en tant qu’icône dans la rangée. Cette propriété est ignorée par DataGrid.
     
      <p>Les rendus rechercheront dans l’objet du fournisseur de données une propriété dont le nom est fourni comme iconField. Si la valeur de la propriété est une classe, cette dernière sera instantiée et sera probablement une occurrence d’un objet IFlexDisplayObject. Si la valeur de la propriété est une chaîne, elle regardera si une classe de ce nom existe dans l’application. Si elle n’en trouve pas, elle recherchera également une propriété de ce nom dans le document et s’attendra à ce que cette propriété s’associe à une classe.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:iconFunction:get"><apiName>iconFunction</apiName><shortdesc>
      Une fonction fournie par l’utilisateur et à exécuter sur chaque élément pour en déterminer leur icône.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Une fonction fournie par l’utilisateur et à exécuter sur chaque élément pour en déterminer leur icône. Par défaut, List n’essaie pas d’afficher les icônes avec le texte dans les rangées. En revanche, en spécifiant une fonction d’icône, vous pouvez définir une classe pour un graphique qui sera créé et affiché en tant qu’icône dans la rangée. Cette propriété est ignorée par DataGrid.
     
      <p>La propriété iconFunction prend un unique argument correspondant à l’élément du fournisseur de données et renvoie une classe, comme l’illustre l’exemple suivant :</p>
     
      <pre>iconFunction(item:Object):Class</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:itemRenderer:get"><apiName>itemRenderer</apiName><shortdesc>
      Rendu de l’élément personnalisé du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      Rendu de l’élément personnalisé du contrôle. Vous pouvez spécifier un rendu d’élément personnalisé supplémentaire, intégré ou personnalisé.
     
      <p>Le rendu d’élément par défaut dépend de la classe du composant. Les classes TileList et HorizontalList utilisent TileListItemRenderer ; la classe List utilise ListItemRenderer. La classe DataGrid utilise DataGridItemRenderer de DataGridColumn.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:labelField:get"><apiName>labelField</apiName><shortdesc>
      Le nom du champ des éléments du fournisseur de données à afficher en tant qu’étiquette.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Le nom du champ des éléments du fournisseur de données à afficher en tant qu’étiquette. Par défaut, le contrôle List recherche la propriété <codeph>label</codeph> sur chaque élément et l’affiche. Toutefois, si les objets de données ne contiennent pas de propriété <codeph>label</codeph>, vous pouvez définir la propriété <codeph>labelField</codeph> pour qu’elle utilise une autre propriété dans l’objet de données. L’utilisation de « FullName » lors de l’affichage d’un jeu de noms de personnes extraits d’une base de données en est un exemple.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Fonction fournie par l’utilisateur à exécuter sur chaque élément pour en déterminer le libellé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Fonction fournie par l’utilisateur à exécuter sur chaque élément pour en déterminer le libellé. Par défaut, le contrôle List recherche la propriété <codeph>label</codeph> sur chaque élément du fournisseur de données et l’affiche. Toutefois, certains jeux de données n’ont pas de propriété <codeph>label</codeph> ni une autre propriété à afficher. Un jeu de données présentant les champs lastName et firstName mais dont vous souhaitez afficher les noms complets en est un exemple.
     
      <p>Vous pouvez fournir une propriété <codeph>labelFunction</codeph> qui recherche les champs appropriés et retourne une chaîne affichable. La propriété <codeph>labelFunction</codeph> permet également de gérer la mise en forme et la localisation. </p>
     
      <p>Pour la plupart des composants, la fonction label prend un unique argument correspondant à l’élément du fournisseur de données et retourne une chaîne.</p>
      <pre>
      myLabelFunction(item:Object):String</pre>
     
      <p>La signature de la méthode des classes DataGrid et DataGridColumn est :</p>
      <pre>
      myLabelFunction(item:Object, column:DataGridColumn):String</pre>
     
      <p>dans laquelle <codeph>item</codeph> contient l’objet d’élément DataGrid et <codeph>column</codeph> indique la colonne DataGrid.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:listContentStyleFilters:get"><apiName>listContentStyleFilters</apiName><shortdesc>
      Jeu de styles à transmettre du contrôle ListBase au contrôle listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Jeu de styles à transmettre du contrôle ListBase au contrôle listContent.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:listData:get"><apiName>listData</apiName><shortdesc>
      
      Lorsqu’un composant est utilisé en tant que rendu d’élément supplémentaire ou éditeur d’élément supplémentaire, Flex initialise la propriété listData du composant avec les données supplémentaires du contrôle List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      
      Lorsqu’un composant est utilisé en tant que rendu d’élément supplémentaire ou éditeur d’élément supplémentaire, Flex initialise la propriété <codeph>listData</codeph> du composant avec les données supplémentaires du contrôle List. Le composant peut ensuite utiliser la propriété <codeph>listData</codeph> et la propriété <codeph>data</codeph> pour afficher les informations appropriées sous forme de rendu d’élément supplémentaire ou d’éditeur d’élément supplémentaire.
     
      <p>Vous ne définissez pas cette propriété dans MXML ou ActionScript. Flex la définit lorsque le composant est utilisé comme rendu d’élément supplémentaire ou éditeur d’élément supplémentaire.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:listItems:get"><apiName>listItems</apiName><shortdesc>
      Tableau de tableaux contenant les occurrences itemRenderer qui rend chaque élément du fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Tableau de tableaux contenant les occurrences itemRenderer qui rend chaque élément du fournisseur de données. Il s’agit d’un tableau à deux dimensions, constitué de rangées qui sont des tableaux de colonnes.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:nullItemRenderer:get"><apiName>nullItemRenderer</apiName><shortdesc>
      Rendu de l’élément personnalisé du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      Rendu de l’élément personnalisé du contrôle. Vous pouvez spécifier un rendu d’élément personnalisé supplémentaire, intégré ou personnalisé.
     
      <p>Le rendu d’élément par défaut dépend de la classe du composant. Les classes TileList et HorizontalList utilisent TileListItemRenderer ; la classe List utilise ListItemRenderer. La classe DataGrid utilise DataGridItemRenderer de DataGridColumn.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:offscreenExtraRowsOrColumns:get"><apiName>offscreenExtraRowsOrColumns</apiName><shortdesc>
      Nombre cible de rangées ou colonnes supplémentaires des rendus d’élément à utiliser dans la mise en forme du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre cible de rangées ou colonnes supplémentaires des rendus d’élément à utiliser dans la mise en forme du contrôle. La moitié de ces rangées/colonnes est créée au-dessus ou à gauche des rangées/colonnes visibles à l’écran et l’autre moitié est créée au-dessous ou à droite.
     
      <p>Le contrôle et ses propriétés déterminent si des rangées sont créées ou si des colonnes sont créées. En général les rangées sont utilisées, sauf pour les composants TileBase où <codeph>direction</codeph> est définie sur <codeph>TileBaseDirection.VERTICAL</codeph>. Dans ce cas, les colonnes sont créées.</p>
     
      <p>Définissez cette propriété sur une valeur non nulle principalement lorsque vous appliquez des effets de données aux contrôles List ou TileList. Les modifications qui affectent l’élément du fournisseur de données correspondant aux éléments actuellement visibles ou les modifications qui affectent l’élément du fournisseur de données pour le nombre d’éléments spécifié avant ou après les éléments visibles, déclenchent l’effet des données. Les éléments du fournisseur de données qui se trouvent hors de cette plage risquent de ne pas être animés parfaitement par les effets des données.</p>
     
      <p>Cette propriété est utile, car les effets des données fonctionnent en déterminant d’abord une mise en forme antéreure (’avant’) du contrôle basé sur List, puis en déterminant ensuite une mise en forme ultérieure (’après’), et enfin en définissant les propriétés de l’effet pour créer une animation de la mise en forme avant à la mise en forme après. Comme plusieurs effets rendent visibles les éléments actuellement invisibles, ou rendent invisibles les éléments actuellement visibles, cette propriété configure le contrôle pour créer les rendus d’élément hors écran afin qu’ils existent déjà lorsque l’effet des données est lu. </p>
     
      <p>La valeur raisonnable de cette propriété peut être le nombre de rangées visibles à l’écran. Si vous définissez cette propriété sur une valeur importante et l’utilisez avec un fournisseur de données contenant un grand nombre d’éléments, des problèmes de performances risquent d’apparaître.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:rowCount:get"><apiName>rowCount</apiName><shortdesc>
      Nombre de rangées à afficher.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>4
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Nombre de rangées à afficher. Si la hauteur du composant a été définie explicitement, cette propriété risque de ne pas avoir d’effet.
     
      <p>Pour un contrôle DataGrid, la propriété <codeph>rowCount</codeph> inclut la rangée d’en-tête. Ainsi, pour le contrôle DataGrid doté de trois rangées corps et d’une rangée d’en-tête, la valeur de la propriété <codeph>rowCount</codeph> est 4.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:rowHeight:get"><apiName>rowHeight</apiName><shortdesc>
      Hauteur des rangées en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Hauteur des rangées en pixels. Sauf si la propriété <codeph>variableRowHeight</codeph> est <codeph>true</codeph>, toutes les rangées sont de même hauteur. Si la hauteur des rangées n’est pas spécifiée, elle est basée sur la taille de police et d’autres propriétés du rendu.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:rowInfo:get"><apiName>rowInfo</apiName><shortdesc>
      Tableau des objets ListRowInfo qui mettent en cache les hauteurs des rangées et d’autres informations de suivi concernant les rangées de la propriété listItems.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
      Tableau des objets ListRowInfo qui mettent en cache les hauteurs des rangées et d’autres informations de suivi concernant les rangées de la propriété listItems.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectable:get"><apiName>selectable</apiName><shortdesc>
      Indicateur précisant si List affiche les éléments sélectionnés comme étant sélectionnés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si List affiche les éléments sélectionnés comme étant sélectionnés. Si la valeur est <codeph>true</codeph>, le contrôle prend en charge la sélection. La classe Menu, avec les sous-classes ListBase, définit cette propriété sur <codeph>false</codeph> par défaut, car elle n’affiche pas l’élément de menu choisi tel qu’il est sélectionné.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Index dans le fournisseur de données de l’élément sélectionné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Index dans le fournisseur de données de l’élément sélectionné.
     
      <p>La valeur par défaut est -1 (aucun élément sélectionné).</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedIndices:get"><apiName>selectedIndices</apiName><shortdesc>
      Tableau d’index dans le fournisseur de données des éléments sélectionnés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Tableau d’index dans le fournisseur de données des éléments sélectionnés. Les éléments sont dans l’ordre inverse de celui dans lequel l’utilisateur a sélectionné les éléments.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      Référence à l’élément sélectionné dans le fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Référence à l’élément sélectionné dans le fournisseur de données.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedItems:get"><apiName>selectedItems</apiName><shortdesc>
      Tableau de références aux éléments sélectionnés dans le fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Tableau de références aux éléments sélectionnés dans le fournisseur de données. Les éléments sont dans l’ordre inverse de celui dans lequel l’utilisateur a sélectionné les éléments.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:selectedItemsCompareFunction:get"><apiName>selectedItemsCompareFunction</apiName><shortdesc>
      Fonction utilisée pour comparer les éléments de la propriété selectedItems aux éléments du fournisseur de données. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Fonction utilisée pour comparer les éléments de la propriété <codeph>selectedItems</codeph> aux éléments du fournisseur de données. Si une correspondance est détectée, l’élément dans le fournisseur de données devient une partie de la sélection. Par défaut, ou si la fonction <codeph>selectedItemsCompareFunction</codeph> est définie sur <codeph>null</codeph>, la fonction de comparaison utilise l’égalité stricte (===). Notez que les versions antérieures de Flex utilisaient l’égalité simple (==) ce qui peut, dans certains cas, être à l’origine de différences de comportement. Une fonction de comparaison courante peut simplement comparer les uid d’objets ou vérifier qu’une propriété spécifique corresponde. 
     
      <p>La fonction de comparaison se compose de deux arguments. Le premier argument est l’objet dans le fournisseur de données. Le second argument est un objet de la propriété <codeph>selectedItems</codeph>. La fonction renvoie <codeph>true</codeph> si l’élément du fournisseur de données doit être sélectionné. </p>
     
      <pre>
      myCompareFunction(itemInDataProvider:Object, itemInSelectedItems):Boolean</pre>
     
      <p>La valeur par défaut est <codeph>null</codeph> et utilise l’égalité stricte. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:showDataTips:get"><apiName>showDataTips</apiName><shortdesc>
      Indicateur précisant si les astuces sur les données s’affichent pour le texte des rangées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si les astuces sur les données s’affichent pour le texte des rangées. Si la valeur est <codeph>true</codeph>, les astuces sur les données s’affichent. Les astuces sur les données sont des infos-bulles conçues pour afficher le texte qui est trop long pour la rangée. Si vous définissez une fonction dataTipFunction, les astuces sur les données s’affichent même si le texte est trop long pour la rangée.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:value:get"><apiName>value</apiName><shortdesc>
      Elément sélectionné ou les données ou le champ d’étiquette de l’élément sélectionné.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Elément sélectionné ou les données ou le champ d’étiquette de l’élément sélectionné. Si l’élément sélectionné est un nombre ou une chaîne, la valeur est l’élément. Si l’élément est un objet, la valeur est la propriété data si elle existe, ou la propriété label si elle existe.
     
      <p>Remarque : il est souvent préférable d’utiliser <codeph>selectedItem</codeph>. Cette propriété existe pour la comptabilité descendante avec des applications antérieures.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:variableRowHeight:get"><apiName>variableRowHeight</apiName><shortdesc>
      Indicateur précisant si chaque rangée peut avoir une hauteur différente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si chaque rangée peut avoir une hauteur différente. Cette propriété est ignorée par TileList et HorizontalList. Si la valeur est <codeph>true</codeph>, chaque rangée peut avoir une hauteur différente.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:visibleData:get"><apiName>visibleData</apiName><shortdesc>
      Tableau de hashage des rendus d’élément du fournisseur de données actuellement affichés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Tableau de hashage des rendus d’élément du fournisseur de données actuellement affichés. Le tableau est indexé par l’UID de l’élément du fournisseur de données et permet d’utiliser rapidement le rendu pour afficher un élément en particulier.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:wordWrap:get"><apiName>wordWrap</apiName><shortdesc>
      Indicateur précisant si le texte de la rangée doit être enroulé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indicateur précisant si le texte de la rangée doit être enroulé. Si la valeur est <codeph>true</codeph>, le texte peut être enroulé dans les rangées. Ne prend effet que si la propriété <codeph>variableRowHeight</codeph> a également la valeur <codeph>true</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBase:protected:allowItemSizeChangeNotification:set"><apiName>allowItemSizeChangeNotification</apiName><shortdesc>
      Si la valeur est false, les rendus ne peuvent pas annuler la taille de List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Si la valeur est false, les rendus ne peuvent pas annuler la taille de List. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:ListBaseSeekPending"><apiName>ListBaseSeekPending</apiName><shortdesc>
  Objet stockant les données concernant une opérateur de recherche qui a été interrompue par une erreur ItemPendingError.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Objet stockant les données concernant une opérateur de recherche qui a été interrompue par une erreur ItemPendingError.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.collections.errors.xml#ItemPendingError"><linktext>mx.collections.errors.ItemPendingError</linktext></link><link href="mx.controls.listClasses.xml#ListBase/lastSeekPending"><linktext>mx.controls.listClasses.ListBase.lastSeekPending</linktext></link></related-links><apiConstructor id="mx.controls.listClasses:ListBaseSeekPending:ListBaseSeekPending"><apiName>ListBaseSeekPending</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>bookmark</apiItemName><apiOperationClassifier>mx.collections:CursorBookmark</apiOperationClassifier><apiDesc>Signet utilisé dans l’opération de recherche.
	  </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="int"/><apiDesc>Décalage du signet qui a été la cible de l’opération de recherche.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls.listClasses:ListBaseSeekPending:bookmark"><apiName>bookmark</apiName><shortdesc>
	  Signet utilisé dans l’opération de recherche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.collections:CursorBookmark</apiValueClassifier></apiValueDef><apiDesc>
	  Signet utilisé dans l’opération de recherche.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls.listClasses:ListBaseSeekPending:offset"><apiName>offset</apiName><shortdesc>
	  Décalage du signet qui a été la cible de l’opération de recherche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Décalage du signet qui a été la cible de l’opération de recherche.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls.listClasses:IListItemRenderer"><apiName>IListItemRenderer</apiName><shortdesc>
  Les rendus d’élément et les éditeurs d’élément des composants List doivent implémenter l’interface IListItemRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseInterface>mx.core:IFlexDisplayObject</apiBaseInterface><apiBaseInterface>mx.managers:ILayoutManagerClient</apiBaseInterface><apiBaseInterface>mx.styles:ISimpleStyleClient</apiBaseInterface><apiBaseInterface>mx.core:IUIComponent</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Les rendus d’élément et les éditeurs d’élément des composants List doivent implémenter l’interface IListItemRenderer. L’interface IListItemRenderer est un jeu de plusieurs autres interfaces. Elle ne définit aucune nouvelle méthode ou propriété de classe. 
 
  <p>Le jeu d’interfaces inclut les interfaces suivantes : IDataRenderer, IFlexDisplayObject, ILayoutManagerClient, ISimpleStyleClient, IUIComponent. La classe UIComponent implémente toutes ces interfaces, à l’exception de l’interface IDataRenderer. Par conséquent, si vous créez un rendu d’élément ou un éditeur d’élément personnalisé comme sous-class de la classe UIComponent, vous ne devez implémenter que l’interface IDataRenderer. Vous pouvez ensuite indiquer dans la définition de classe que la classe implémente IDataRenderer et IListItemRenderer.</p>
 
 <p>Les interfaces IListItemRenderers sont généralement dédiées à l’affichage d’un champ particulier à partir de l’élément du fournisseur de données et ne peuvent pas être réutilisées dans d’autres colonnes DataGrid ou d’autres listes avec d’autres champs. Pour créer un rendu qui peut être réutilisé, vous pouvez également implémenter l’interface IDropInListItemRenderer. La liste transmettra alors plus de données au rendu et lui permettra d’être réutilisé avec différents champs de données.</p>
 
  <p>Les données des rendus d’élément et des éditeurs d’élément sont transmises à partir d’un fournisseur de données d’une classe List à l’aide de l’interface IDataRenderer. Les rendus et les éditeurs qui implémentent l’interface IDropInListItemRenderer reçoivent d’autres informations de la classe List. Le rendu d’élément ou l’éditeur d’élément utilise une ou plusieurs informations pour afficher les données.</p>
 
  <p>Les rendus et les éditeurs sont souvent recyclés. Une fois créés, ils peuvent être réutilisés simplement en leur affectant de nouvelles données et une propriété <codeph>listData</codeph> facultative. Par conséquent, vous devez vous assurer que les propriétés des composants dans votre implémentation ne sont pas censées contenir leurs valeurs d’origine ou leurs valeurs par défaut.</p>
  
  </apiDesc></apiClassifierDetail></apiClassifier></apiPackage>