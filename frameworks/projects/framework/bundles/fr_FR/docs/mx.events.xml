<?xml version="1.0"?>
<apiPackage id="mx.events"><apiName>mx.events</apiName><apiDetail/><apiClassifier id="mx.events:PropertyChangeEventKind"><apiName>PropertyChangeEventKind</apiName><shortdesc>
  La classe PropertyChangeEventKind définit les valeurs de constante de la propriété kind de la classe PropertyChangeEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe PropertyChangeEventKind définit les valeurs de constante de la propriété <codeph>kind</codeph> de la classe PropertyChangeEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>mx.events.PropertyChangeEvent</linktext></link></related-links><apiValue id="mx.events:PropertyChangeEventKind:DELETE"><apiName>DELETE</apiName><shortdesc>
	  Indique que la propriété a été supprimée de l’objet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>delete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la propriété a été supprimée de l’objet.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
	  Indique que la valeur de la propriété a été modifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la valeur de la propriété a été modifiée.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
  Représente les objets d’événement distribués lorsqu’un composant Flex est déplacé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les objets d’événement distribués lorsqu’un composant Flex est déplacé.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:MoveEvent:MOVE_move"><apiName>move</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MoveEvent:MOVE</apiEventType><adobeApiEventClassifier>mx.events:MoveEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MoveEvent:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Coordonnée x précédente de l’objet, en pixels.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Coordonnée y précédente de l’objet, en pixels.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MoveEvent:MOVE"><apiName>MOVE</apiName><shortdesc>
	  La constante MoveEvent.MOVE définit la valeur de la propriété type de l’objet d’événement d’un événement move.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>MoveEvent.MOVE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>move</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>oldX</codeph></entry><entry>Coordonnée x précédente de l’objet, en pixels.</entry></row><row><entry><codeph>oldY</codeph></entry><entry>Coordonnée y précédente de l’objet, en pixels.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldX"><apiName>oldX</apiName><shortdesc>
	  Coordonnée x précédente de l’objet, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Coordonnée <codeph>x</codeph> précédente de l’objet, en pixels.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldY"><apiName>oldY</apiName><shortdesc>
	  Coordonnée y précédente de l’objet, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Coordonnée <codeph>y</codeph> précédente de l’objet, en pixels.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ColorPickerEvent"><apiName>ColorPickerEvent</apiName><shortdesc>
  Représente les événements propres au contrôle ColorPicker, par exemple lorsque l’utilisateur place le pointeur de la souris au-dessus d’un nuancier dans un panneau de nuancier, ou au contraire, éloigne le pointeur du nuancier.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les événements propres au contrôle ColorPicker, par exemple lorsque l’utilisateur place le pointeur de la souris au-dessus d’un nuancier dans un panneau de nuancier, ou au contraire, éloigne le pointeur du nuancier.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ColorPickerEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ENTER_enter"><apiName>enter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ENTER</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ColorPickerEvent:ColorPickerEvent"><apiName>ColorPickerEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de base zéro dans le fournisseur de données de couleur, correspondant à la couleur qui a fait l’objet d’un survol, d’une sortie de survol ou d’une sélection.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0xFFFFFFFF</apiData><apiDesc>Couleur RVB qui a fait l’objet d’un survol, d’une sortie de survol, d’une sélection ou d’une saisie.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ColorPickerEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  La constante ColorPickerEvent.CHANGE définit la valeur de la propriété type de l’événement distribué lorsque l’utilisateur sélectionne une couleur dans le contrôle ColorPicker.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ColorPickerEvent.CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’événement distribué lorsque l’utilisateur sélectionne une couleur dans le contrôle ColorPicker.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Couleur RVB sélectionnée.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Index de base zéro dans le fournisseur de données de couleur, correspondant à la couleur sélectionnée.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ENTER"><apiName>ENTER</apiName><shortdesc>
	  La constante ColorPickerEvent.ENTER définit la valeur de la propriété type de l’événement distribué lorsque l’utilisateur appuie sur la touche Entrée après avoir saisi une valeur dans la zone de sélection de couleur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enter</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ColorPickerEvent.ENTER</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’événement distribué lorsque l’utilisateur appuie sur la touche Entrée après avoir saisi une valeur dans la zone de sélection de couleur.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Couleur RVB entrée.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Toujours -1.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
 	  La constante ColorPickerEvent.ITEM_ROLL_OUT définit la valeur de la propriété type de l’événement distribué lorsque l’utilisateur éloigne le pointeur de la souris d’un nuancier dans le panneau de nuancier.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
 	  La constante <codeph>ColorPickerEvent.ITEM_ROLL_OUT</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’événement distribué lorsque l’utilisateur éloigne le pointeur de la souris d’un nuancier dans le panneau de nuancier.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Couleur RVB survolée.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Index de base zéro dans le fournisseur de données de couleur, correspondant à la couleur survolée.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
 	  La constante ColorPickerEvent.ITEM_ROLL_OVER définit la valeur de la propriété type de l’événement distribué lorsque l’utilisateur place le pointeur de la souris au-dessus d’un nuancier dans le panneau de nuancier.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
 	  La constante <codeph>ColorPickerEvent.ITEM_ROLL_OVER</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’événement distribué lorsque l’utilisateur place le pointeur de la souris au-dessus d’un nuancier dans le panneau de nuancier.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Couleur RVB que l’utilisateur a arrêté de survoler.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Index de base zéro dans le fournisseur de données de couleur, correspondant à la couleur que l’utilisateur a arrêté de survoler.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:color"><apiName>color</apiName><shortdesc>
	  Couleur RVB qui a fait l’objet d’un survol, d’une sortie de survol, d’une sélection ou d’une saisie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc>
	  Couleur RVB qui a fait l’objet d’un survol, d’une sortie de survol, d’une sélection ou d’une saisie.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:index"><apiName>index</apiName><shortdesc>
	  Index de base zéro dans le fournisseur de données de couleur, correspondant à la couleur qui a fait l’objet d’un survol, d’une sortie de survol ou d’une sélection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Index de base zéro dans le fournisseur de données de couleur, correspondant à la couleur qui a fait lobjet d’un survol, d’une sortie de survol ou d’une sélection. Si le type d’événement est <codeph>ColorPickerEvent.ENTER</codeph>, la valeur par défaut est -1. Dans ce cas, elle n’est pas définie, car l’utilisateur a entré une chaîne RVB qui ne correspond à aucune couleur dans le fournisseur de données.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEventKind"><apiName>CollectionEventKind</apiName><shortdesc>
  La classe CollectionEventKind contient les constantes des valeurs valides de la propriété kind de la classe mx.events.CollectionEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe CollectionEventKind contient les constantes des valeurs valides de la propriété <codeph>kind</codeph> de la classe mx.events.CollectionEvent. Ces constantes indiquent le type de modification apportée à la collection.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#CollectionEvent"><linktext>mx.events.CollectionEvent</linktext></link></related-links><apiValue id="mx.events:CollectionEventKind:ADD"><apiName>ADD</apiName><shortdesc>
      Indique que la collection a ajouté un ou plusieurs éléments.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que la collection a ajouté un ou plusieurs éléments.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:MOVE"><apiName>MOVE</apiName><shortdesc>
      Indique que l’élément a été déplacé de la position identifiée par la propriété oldLocation de la classe CollectionEvent vers la position identifiée par la propriété location.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que l’élément a été déplacé de la position identifiée par la propriété <codeph>oldLocation</codeph> de la classe CollectionEvent vers la position identifiée par la propriété <codeph>location</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REFRESH"><apiName>REFRESH</apiName><shortdesc>
      Indique que la collection a appliqué un tri, un filtrage ou les deux à la fois.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>refresh</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que la collection a appliqué un tri, un filtrage ou les deux à la fois. Il se peut que cette modification soit plus facile à traiter qu’une constante RESET.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      Indique que la collection a supprimé un ou plusieurs éléments.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que la collection a supprimé un ou plusieurs éléments.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REPLACE"><apiName>REPLACE</apiName><shortdesc>
      Indique que l’élément qui se trouve à la position identifiée par la propriété location de la classe CollectionEvent a été remplacé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>replace</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que l’élément qui se trouve à la position identifiée par la propriété <codeph>location</codeph> de la classe CollectionEvent a été remplacé.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:RESET"><apiName>RESET</apiName><shortdesc>
      Indique que la collection a été modifiée de façon si importante qu’une réinitialisation est nécessaire.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que la collection a été modifiée de façon si importante qu’une réinitialisation est nécessaire.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
      Indique qu’un ou plusieurs éléments ont été mis à jour dans la collection.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique qu’un ou plusieurs éléments ont été mis à jour dans la collection. Le ou les éléments concernés sont stockés dans la propriété <codeph>items</codeph>. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
  Demande envoyée par une classe SystemManager vers la classe SystemManager d’une autre application par le biais de leur pont, afin d’ajouter ou supprimer de votre part un écouteur dans un événement spécifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:SWFBridgeRequest</apiBaseClassifier></apiClassifierDef><apiDesc>
  Demande envoyée par une classe SystemManager vers la classe SystemManager d’une autre application par le biais de leur pont, afin d’ajouter ou supprimer de votre part un écouteur dans un événement spécifié. La propriété <codeph>data</codeph> n’est pas utilisée. Seuls certains événements peuvent être demandés. Lorsque l’événement est déclenché dans l’autre application, cet événement est distribué à nouveau par le biais du pont, où la classe SystemManager demandeuse récupère l’événement et le distribue à nouveau. En général, cette demande est générée parce qu’une autre séquence de code a appelé la méthode <codeph>addEventListener()</codeph> pour l’un des événements approuvés sur sa classe SystemManager. Cette requête est également distribuée par la classe SystemManager pour autoriser l’implémentation marshal à gérer l’ajout ou la suppression des écouteurs différemment. Lorsque distribué par la classe SystemManager, la propriété écouteur n’est pas null ; 
  
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:EventListenerRequest:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
	  Crée une nouvelle demande visant à ajouter ou supprimer un écouteur d’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement, indiquant quelle action a déclenché l’événement. <codeph>EventListenerRequest.ADD</codeph> ou <codeph>EventListenerRequest.REMOVE</codeph>.
         
          </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’événement peut se propager vers le haut de la hiérarchie de la liste d’affichage.
         
          </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
         
	  </apiDesc></apiParam><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Type de message que vous transmettriez normalement à la méthode <codeph>addEventListener()</codeph>.
         
	  </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Détermine si l’écouteur est actif pendant la phase de capture ou pendant les phases cible et de propagation vers le haut.
         
	  </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Niveau de priorité de l’écouteur d’événement. La priorité est désignée par un entier de 32 bits.
         
	  </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Détermine si la référence à l’écouteur est forte ou faible.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef><apiDesc>
	  Crée une nouvelle demande visant à ajouter ou supprimer un écouteur d’événement.
	 
	  </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiConstructor><apiOperation id="mx.events:EventListenerRequest:marshal"><apiName>marshal</apiName><shortdesc>
	  Sérialise un événement en copiant les paramètres pertinents de l’événement dans un nouvel événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Demande EventListenerRequest définissant le nouvel événement.
	  
	  </apiDesc><apiOperationClassifier>mx.events:EventListenerRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Evénement à sérialiser.
     	 
     	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Sérialise un événement en copiant les paramètres pertinents de l’événement dans un nouvel événement.
     	 
     	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:EventListenerRequest:ADD_EVENT_LISTENER_REQUEST"><apiName>ADD_EVENT_LISTENER_REQUEST</apiName><shortdesc>
	  Demande d’ajout d’écouteur d’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Demande d’ajout d’écouteur d’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:REMOVE_EVENT_LISTENER_REQUEST"><apiName>REMOVE_EVENT_LISTENER_REQUEST</apiName><shortdesc>
	  Demande de suppression d’écouteur d’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Demande de suppression d’écouteur d’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:eventType:get"><apiName>eventType</apiName><shortdesc>
	  Type d’événement à écouter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	  Type d’événement à écouter.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#Event/type"><linktext>flash.events.Event.type</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:listener:get"><apiName>listener</apiName><shortdesc>
	  La méthode ou fonction à appeler
     
	  </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Function"/></apiValueDef><apiDesc>
	  La méthode ou fonction à appeler
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:priority:get"><apiName>priority</apiName><shortdesc>
	  Paramètre priority de la méthode addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
	  Paramètre <codeph>priority</codeph> de la méthode <codeph>addEventListener()</codeph>.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useCapture:get"><apiName>useCapture</apiName><shortdesc>
	  Paramètre useCapture de la méthode addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Paramètre <codeph>useCapture</codeph> de la méthode <codeph>addEventListener()</codeph>.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useWeakReference:get"><apiName>useWeakReference</apiName><shortdesc>
	  Paramètre useWeakReference de la méthode addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Paramètre <codeph>useWeakReference</codeph> de la méthode <codeph>addEventListener()</codeph>.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
  La classe StyleEvent représente un objet d’événement utilisé par la classe StyleManager lorsqu’un fichier SWF de style est téléchargé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe StyleEvent représente un objet d’événement utilisé par la classe StyleManager lorsqu’un fichier SWF de style est téléchargé.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.styles.xml#StyleManager"><linktext>mx.styles.StyleManager</linktext></link></related-links><adobeApiEvent id="mx.events:StyleEvent:COMPLETE_styleComplete"><apiName>styleComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:ERROR_styleError"><apiName>styleError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:PROGRESS_styleProgress"><apiName>styleProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StyleEvent:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement. Valeurs possibles :
      <ul>
         <li>« progress » (<codeph>StyleEvent.PROGRESS</codeph>)</li>
         <li>« complete » (<codeph>StyleEvent.COMPLETE</codeph>)</li>
         <li>« error » (<codeph>StyleEvent.ERROR</codeph>)</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre d’octets chargés lors du traitement de l’événement par l’écouteur.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre total d’octets qui seront finalement chargés si le processus de chargement aboutit.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Message d’erreur de l’erreur lorsque le type est StyleEvent.ERROR.
     
      </apiDesc></apiParam><apiTipTexts><apiTipText>Constructeur des objets <codeph>StyleEvent</codeph>.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StyleEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      Distribué lorsque le téléchargement du fichier SWF de style est terminé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsque le téléchargement du fichier SWF de style est terminé. La constante <codeph>StyleEvent.COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>styleComplete</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Vide</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Distribué lorsqu’une erreur se produit lors du téléchargement du fichier SWF de style.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsqu’une erreur se produit lors du téléchargement du fichier SWF de style. La constante <codeph>StyleEvent.ERROR</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>styleError</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Vide</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Vide</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Message d’erreur.<entry/></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Distribué pendant le téléchargement du fichier SWF de style.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué pendant le téléchargement du fichier SWF de style. La constante <codeph>StyleEvent.PROGRESS</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>styleProgress</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Nombre d’octets chargés.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Nombre total d’octets à charger.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Vide<entry/></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Message d’erreur si le type est ERROR, null dans le cas contraire.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Message d’erreur si le <codeph>type</codeph> est <codeph>ERROR</codeph>, <codeph>null</codeph> dans le cas contraire.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
  Cette sous-classe de la classe Event étant dynamique, vous pouvez définir des propriétés d’événement arbitraires sur ses occurrences à l’exécution.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Cette sous-classe de la classe Event étant dynamique, vous pouvez définir des propriétés d’événement arbitraires sur ses occurrences à l’exécution.
 
  <p>En revanche, la classe Event et ses autres sous-classes ne sont pas dynamiques et par conséquent, vous pouvez uniquement définir les propriétés déclarées dans ces classes. Lorsque vous mettez au point le prototype d’une application, il est parfois plus simple d’utiliser une sous-classe DynamicEvent, car il n’est alors pas nécessaire d’écrire une sous-classe de la classe Event pour déclarer à l’avance les propriétés. Cependant, vous devrez par la suite éliminer les événements DynamicEvent et écrire des sous-classes Event, car elles sont plus rapides et plus sûres. Les événements DynamicEvent sont si polyvalents que le compilateur ne peut pas vous aider à détecter les erreurs lorsque vous affectez une propriété incorrecte ou lorsque vous lui affectez une valeur de type incorrect.</p>
 
  <p>Exemple :</p>
 
  <pre>
  var event:DynamicEvent = new DynamicEvent("credentialsChanged");
  event.name = name;
  event.passsword = password; // misspelling won't be caught!
  dispatchEvent(event);
  </pre>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:DynamicEvent:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.events:DataGridEventReason"><apiName>DataGridEventReason</apiName><shortdesc>
  La classe DataGridEventReason définit les constantes des valeurs de la propriété reason d’un objet DataGridEvent lorsque la propriété type est itemEditEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe DataGridEventReason définit les constantes des valeurs de la propriété <codeph>reason</codeph> d’un objet DataGridEvent lorsque la propriété <codeph>type</codeph> est <codeph>itemEditEnd</codeph>.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.events:DataGridEventReason:CANCELLED"><apiName>CANCELLED</apiName><shortdesc>
      Indique que l’utilisateur a annulé la modification et qu’il ne souhaite pas enregistrer les données modifiées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancelled</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que l’utilisateur a annulé la modification et qu’il ne souhaite pas enregistrer les données modifiées. Même si vous appelez la méthode <codeph>preventDefault()</codeph> à partir de l’écouteur d’événement de l’événement <codeph>itemEditEnd</codeph>, Flex appelle toujours l’éditeur <codeph>destroyItemEditor()</codeph> pour fermer l’éditeur.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:NEW_COLUMN"><apiName>NEW_COLUMN</apiName><shortdesc>
      Indique que l’utilisateur a déplacé le focus dans une nouvelle colonne de la même ligne.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newColumn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que l’utilisateur a déplacé le focus dans une nouvelle colonne de la même ligne. Dans un écouteur d’événement, vous pouvez laisser le changement de focus se produire ou l’empêcher de se produire. Par exemple, l’écouteur d’événement peut vérifier si l’utilisateur a saisi une valeur valide pour l’élément en cours de modification. Si la valeur n’est pas valide, vous pouvez empêcher l’utilisateur de passer à un autre élément en appelant la méthode <codeph>preventDefault()</codeph>. Dans ce cas, l’éditeur d’éléments demeure ouvert et l’utilisateur poursuit sa modification de l’élément en cours. Si vous appelez la méthode <codeph>preventDefault()</codeph> et également la méthode <codeph>destroyItemEditor()</codeph>, vous empêchez l’utilisateur de passer à un autre élément, mais l’éditeur se ferme. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:NEW_ROW"><apiName>NEW_ROW</apiName><shortdesc>
      Indique que l’utilisateur a déplacé le focus sur une nouvelle ligne.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newRow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que l’utilisateur a déplacé le focus sur une nouvelle ligne. Ce motif se gère de la même manière que <codeph>NEW_COLUMN</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:OTHER"><apiName>OTHER</apiName><shortdesc>
      Indique que le contrôle de liste a perdu le focus, a subi un défilement ou est dans un état qui interdit toute modification.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>other</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que le contrôle de liste a perdu le focus, a subi un défilement ou est dans un état qui interdit toute modification. Même si vous appelez la méthode <codeph>preventDefault()</codeph> à partir de l’écouteur d’événement de l’événement <codeph>itemEditEnd</codeph>, Flex appelle toujours l’éditeur <codeph>destroyItemEditor()</codeph> pour fermer l’éditeur.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DragEvent"><apiName>DragEvent</apiName><shortdesc>
  La classe DragEvent représente les objets d’événement distribués dans le cadre des opérations de glisser-déposer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe DragEvent représente les objets d’événement distribués dans le cadre des opérations de glisser-déposer.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#DragManager"><linktext>mx.managers.DragManager</linktext></link><link href="mx.core.xml#DragSource"><linktext>mx.core.DragSource</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:DragEvent:DRAG_COMPLETE_dragComplete"><apiName>dragComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_DROP_dragDrop"><apiName>dragDrop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_DROP</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_ENTER_dragEnter"><apiName>dragEnter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_ENTER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_EXIT_dragExit"><apiName>dragExit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_EXIT</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_OVER_dragOver"><apiName>dragOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_OVER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_START_dragStart"><apiName>dragStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_START</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DragEvent:DragEvent"><apiName>DragEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>Interface IUIComponent spécifiant le composant qui initie l’opération de glissement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>Objet DragSource contenant les données qui font l’objet du glissement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Action de dépôt spécifiée, par exemple <codeph>DragManager.MOVE</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Ctrl</codeph> a été enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Alt</codeph> a été enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Maj</codeph> a été enfoncée.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur. Normalement appelé par le contrôle Flex et non utilisé dans le code de l’application.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DragEvent:DRAG_COMPLETE"><apiName>DRAG_COMPLETE</apiName><shortdesc>
	  La constante DragEvent.DRAG_COMPLETE définit la valeur de la propriété type de l’objet d’événement d’un événement dragComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DragEvent.DRAG_COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dragComplete</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Action ayant provoqué l’événement : <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> ou <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Composant qui a initié l’opération de glissement.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Objet DragSource contenant les données qui font l’objet du glissement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_DROP"><apiName>DRAG_DROP</apiName><shortdesc>
	  La constante DragEvent.DRAG_DROP définit la valeur de la propriété type de l’objet d’événement d’un événement dragDrop.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragDrop</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DragEvent.DRAG_DROP</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dragDrop</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Action ayant provoqué l’événement : <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> ou <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Composant qui a initié l’opération de glissement.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Objet DragSource contenant les données qui font l’objet du glissement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_ENTER"><apiName>DRAG_ENTER</apiName><shortdesc>
	  La constante DragEvent.DRAG_ENTER définit la valeur de la propriété type de l’objet d’événement d’un événement dragEnter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragEnter</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DragEvent.DRAG_ENTER</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dragEnter</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Action à l’origine de l’événement, c’est-à-dire <codeph>DragManager.MOVE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Composant qui a initié l’opération de glissement.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Objet DragSource contenant les données qui font l’objet du glissement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_EXIT"><apiName>DRAG_EXIT</apiName><shortdesc>
	  La constante DragEvent.DRAG_EXIT définit la valeur de la propriété type de l’objet d’événement d’un événement dragExit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragExit</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DragEvent.DRAG_EXIT</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dragExit</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Action ayant provoqué l’événement : <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> ou <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Composant qui a initié l’opération de glissement.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Objet DragSource contenant les données qui font l’objet du glissement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_OVER"><apiName>DRAG_OVER</apiName><shortdesc>
	  La constante DragEvent.DRAG_OVER définit la valeur de la propriété type de l’objet d’événement d’un événement dragOver.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DragEvent.DRAG_OVER</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dragOver</codeph>.
     
	 <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	 <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Action ayant provoqué l’événement : <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> ou <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Composant qui a initié l’opération de glissement.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Objet DragSource contenant les données qui font l’objet du glissement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_START"><apiName>DRAG_START</apiName><shortdesc>
	  La constante DragEvent.DRAG_START définit la valeur de la propriété type de l’objet d’événement d’un événement dragStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante DragEvent.DRAG_START définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dragStart</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Action ayant provoqué l’événement : <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> ou <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Composant qui a initié l’opération de glissement.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Objet DragSource contenant les données qui font l’objet du glissement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:action"><apiName>action</apiName><shortdesc>
	  Action demandée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Action requise. <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> ou <codeph>DragManager.NONE</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragInitiator"><apiName>dragInitiator</apiName><shortdesc>
	  Composant qui a initié l’opération de glissement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
	  Composant qui a initié l’opération de glissement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragSource"><apiName>dragSource</apiName><shortdesc>
	  Objet DragSource contenant les données qui font l’objet du glissement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:DragSource</apiValueClassifier></apiValueDef><apiDesc>
	  Objet DragSource contenant les données qui font l’objet du glissement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:draggedItem"><apiName>draggedItem</apiName><shortdesc>
	  Si la propriété dragInitiator contient un objet IAutomationObject, cette propriété contient l’objet enfant IAutomationObject qui se trouve près du pointeur de la souris.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Si la propriété <codeph>dragInitiator</codeph> contient un objet IAutomationObject, cette propriété contient l’objet enfant IAutomationObject qui se trouve près du pointeur de la souris. Si la propriété <codeph>dragInitiator</codeph> ne contient pas d’objet IAutomationObject, la valeur de cette propriété est <codeph>null</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
  La classe FlexEvent représente l’objet d’événement transmis à l’écouteur d’événement pour de nombreux événements Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe FlexEvent représente l’objet d’événement transmis à l’écouteur d’événement pour de nombreux événements Flex.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexEvent:ADD_add"><apiName>add</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ADD</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ADD_FOCUS_MANAGER_addFocusManager"><apiName>addFocusManager</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType/><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:APPLICATION_COMPLETE_applicationComplete"><apiName>applicationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:APPLICATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:BUTTON_DOWN_buttonDown"><apiName>buttonDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:BUTTON_DOWN</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE_contentCreationComplete"><apiName>contentCreationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CONTENT_CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CREATION_COMPLETE_creationComplete"><apiName>creationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CURSOR_UPDATE_cursorUpdate"><apiName>cursorUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CURSOR_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:DATA_CHANGE_dataChange"><apiName>dataChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_enter"><apiName>enter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_FRAME_flexEventEnterFrame"><apiName>flexEventEnterFrame</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_FRAME</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_STATE_enterState"><apiName>enterState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:EXIT_STATE_exitState"><apiName>exitState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:EXIT_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE_flexWindowActivate"><apiName>flexWindowActivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType/><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE_flexWindowDeactivate"><apiName>flexWindowDeactivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType/><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:HIDE_hide"><apiName>hide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:HIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:IDLE_idle"><apiName>idle</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:IDLE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INITIALIZE_initialize"><apiName>initialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_COMPLETE_initComplete"><apiName>initComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_PROGRESS_initProgress"><apiName>initProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:LOADING_loading"><apiName>loading</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:LOADING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:MUTED_CHANGE_mutedChange"><apiName>mutedChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:MUTED_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:PREINITIALIZE_preinitialize"><apiName>preinitialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:PREINITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REMOVE_remove"><apiName>remove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REMOVE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:RENDER_flexEventRender"><apiName>flexEventRender</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:RENDER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_repeat"><apiName>repeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_END_repeatEnd"><apiName>repeatEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_START_repeatStart"><apiName>repeatStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SELECTION_CHANGE_deferredContentCreate"><apiName>deferredContentCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SELECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SHOW_show"><apiName>show</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SHOW</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSFORM_CHANGE_transformChange"><apiName>transformChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSFORM_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:UPDATE_COMPLETE_updateComplete"><apiName>updateComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:UPDATE_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:URL_CHANGED_urlChanged"><apiName>urlChanged</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:URL_CHANGED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALUE_COMMIT_valueCommit"><apiName>valueCommit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALUE_COMMIT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexEvent:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexEvent:ADD"><apiName>ADD</apiName><shortdesc>
      La constante FlexEvent.ADD définit la valeur de la propriété type de l’objet d’événement d’un événement add.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.ADD</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>add</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ADD_FOCUS_MANAGER"><apiName>ADD_FOCUS_MANAGER</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addFocusManager</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph/><codeph/><codeph/> 
     
      <p>Les propriétés de l’objet de l’événement sont les valeurs suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:APPLICATION_COMPLETE"><apiName>APPLICATION_COMPLETE</apiName><shortdesc>
      La constante FlexEvent.APPLICATION_COMPLETE définit la valeur de la propriété type de l’objet d’événement d’un événement applicationComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.APPLICATION_COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>applicationComplete</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:BUTTON_DOWN"><apiName>BUTTON_DOWN</apiName><shortdesc>
      La constante FlexEvent.BUTTON_DOWN définit la valeur de la propriété type de l’objet d’événement d’un événement buttonDown.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buttonDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.BUTTON_DOWN</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>buttonDown</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      La constante FlexEvent.CHANGING définit la valeur de la propriété type de l’objet d’événement d’un événement changing.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.CHANGING</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>changing</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE"><apiName>CONTENT_CREATION_COMPLETE</apiName><shortdesc>
      La constante FlexEvent.CONTENT_CREATION_COMPLETE définit la valeur de la propriété type de l’objet d’événement d’un événement contentCreationComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>contentCreationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.CONTENT_CREATION_COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>contentCreationComplete</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CREATION_COMPLETE"><apiName>CREATION_COMPLETE</apiName><shortdesc>
      La constante FlexEvent.CREATION_COMPLETE définit la valeur de la propriété type de l’objet d’événement d’un événement creationComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>creationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.CREATION_COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>creationComplete</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CURSOR_UPDATE"><apiName>CURSOR_UPDATE</apiName><shortdesc>
      La constante FlexEvent.CURSOR_UPDATE définit la valeur de la propriété type de l’objet d’événement d’un événement cursorUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.CURSOR_UPDATE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>cursorUpdate</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:DATA_CHANGE"><apiName>DATA_CHANGE</apiName><shortdesc>
      La constante FlexEvent.DATA_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement dataChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dataChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.DATA_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dataChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER"><apiName>ENTER</apiName><shortdesc>
      La constante FlexEvent.ENTER définit la valeur de la propriété type de l’objet d’événement d’un événement enter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enter</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.ENTER</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>enter</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_FRAME"><apiName>ENTER_FRAME</apiName><shortdesc>
      La constante FlexEvent.ENTER_FRAME définit la valeur de la propriété type de l’objet d’événement d’un événement Event.ENTER_FRAMER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventEnterFrame</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.ENTER_FRAME</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>Event.ENTER_FRAMER</codeph>. L’ajout d’un écouteur à la constante ENTER_FRAME sur la classe <codeph>SystemManager</codeph> ajoute un écouteur pour l’événement Event.ENTER_FRAME sur la classe <codeph>stage</codeph>, si l’accès est autorisé, ou sur la classe <codeph>SystemManager</codeph> si l’accès à la classe <codeph>stage</codeph> n’est pas autorisé. L’écouteur s’attend à recevoir des événements Event.ENTER_FRAME.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_STATE"><apiName>ENTER_STATE</apiName><shortdesc>
      La constante FlexEvent.ENTER_STATE définit la valeur de la propriété type de l’objet d’événement d’un événement enterState.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enterState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.ENTER_STATE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>enterState</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:EXIT_STATE"><apiName>EXIT_STATE</apiName><shortdesc>
      La constante FlexEvent.EXIT_STATE définit la valeur de la propriété type de l’objet d’événement d’un événement exitState.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>exitState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.EXIT_STATE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>exitState</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE"><apiName>FLEX_WINDOW_ACTIVATE</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph/><codeph/><codeph/>  
     
      <p>Les propriétés de l’objet de l’événement sont les valeurs suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE"><apiName>FLEX_WINDOW_DEACTIVATE</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      <codeph/><codeph/><codeph/>  
     
      <p>Les propriétés de l’objet de l’événement sont les valeurs suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:HIDE"><apiName>HIDE</apiName><shortdesc>
      La constante FlexEvent.HIDE définit la valeur de la propriété type de l’objet d’événement d’un événement hide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hide</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.HIDE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>hide</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:IDLE"><apiName>IDLE</apiName><shortdesc>
      La constante FlexEvent.IDLE définit la valeur de la propriété type de l’objet d’événement d’un événement idle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>idle</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.IDLE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>idle</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INITIALIZE"><apiName>INITIALIZE</apiName><shortdesc>
      La constante FlexEvent.INITIALIZE définit la valeur de la propriété type de l’objet d’événement d’un événement initialize.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.INITIALIZE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>initialize</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INIT_COMPLETE"><apiName>INIT_COMPLETE</apiName><shortdesc>
      Distribuée au terme de l’initialisation d’une application Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribuée au terme de l’initialisation d’une application Flex. Utilisez cet événement lorsque vous créez une barre de progression de téléchargement personnalisée.
     
      <p>Cet événement est toujours distribué une seule fois par la classe Preloader. Il s’agit du dernier événement distribué par cette classe. Lorsque cet événement est distribué, l’écouteur d’événement distribue normalement un événement Event.COMPLETE.</p>
     
      <p>Une barre de progression de téléchargement doit distribuer un événement <codeph>complete</codeph> après la réception d’un événement <codeph>init_complete</codeph>. L’événement <codeph>complete</codeph> signale à la classe Preloader que la barre de progression de téléchargement a terminé toutes les opérations et peut être abandonnée.</p>
      
      <p>Une barre de progression de téléchargement peut réaliser d’autres tâches (lecture d’une animation, par exemple) après la réception d’un événement <codeph>init_complete</codeph> et avant la distribution de l’événement <codeph>complete</codeph>. La distribution de l’événement <codeph>complete</codeph> doit être la dernière action réalisée par la barre de progression de téléchargement.</p>
     
      <p>La constante FlexEvent.INIT_COMPLETE définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>initComplete</codeph>.</p>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INIT_PROGRESS"><apiName>INIT_PROGRESS</apiName><shortdesc>
      Distribuée lorsque l’application Flex termine une phase d’initialisation, définie par l’appel des méthodes measure(), commitProperties() ou updateDisplayList().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribuée lorsque l’application Flex termine une phase d’initialisation, définie par l’appel des méthodes <codeph>measure()</codeph>, <codeph>commitProperties()</codeph> ou <codeph>updateDisplayList()</codeph>. Cet événement décrit la progression de l’application au cours de la phase d’initialisation. Utilisez cet événement lorsque vous créez une barre de progression de téléchargement personnalisée.
     
      <p>La constante FlexEvent.INIT_PROGRESS définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>initProgress</codeph>.</p>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
      La constante FlexEvent.INVALID définit la valeur de la propriété type de l’objet d’événement d’un événement invalid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.INVALID</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>invalid</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:LOADING"><apiName>LOADING</apiName><shortdesc>
      La constante FlexEvent.LOADING définit la valeur de la propriété type de l’objet d’événement d’un événement loading.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.LOADING</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>loading</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:MUTED_CHANGE"><apiName>MUTED_CHANGE</apiName><shortdesc>
      La constante FlexEvent.MUTED_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement mutedChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mutedChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.MUTED_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>mutedChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:PREINITIALIZE"><apiName>PREINITIALIZE</apiName><shortdesc>
      La constante FlexEvent.PREINITIALIZE définit la valeur de la propriété type de l’objet d’événement d’un événement preinitialize.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>preinitialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.PREINITIALIZE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>preinitialize</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      La constante FlexEvent.REMOVE définit la valeur de la propriété type de l’objet d’événement d’un événement remove.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.REMOVE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>remove</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:RENDER"><apiName>RENDER</apiName><shortdesc>
      La constante FlexEvent.RENDER définit la valeur de la propriété type de l’objet d’événement d’un événement Event.RENDER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventRender</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.RENDER</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>Event.RENDER</codeph>. L’ajout d’un écouteur à la classe <codeph>SystemManager</codeph> ajoute un écouteur pour les événements FlexEvent.RENDER sur la classe <codeph>stage</codeph> ou <codeph>SystemManager</codeph> si l’application n’a pas accès à la classe <codeph>stage</codeph>. L’écouteur générera également un événement Event.RENDER. La fonction d’écouteur s’attend à recevoir des événements Event.RENDER.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT"><apiName>REPEAT</apiName><shortdesc>
      La constante FlexEvent.REPEAT définit la valeur de la propriété type de l’objet d’événement d’un événement repeat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.REPEAT</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>repeat</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_END"><apiName>REPEAT_END</apiName><shortdesc>
      La constante FlexEvent.REPEAT_END définit la valeur de la propriété type de l’objet d’événement d’un événement repeatEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.REPEAT_END</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>repeatEnd</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_START"><apiName>REPEAT_START</apiName><shortdesc>
      La constante FlexEvent.REPEAT_START définit la valeur de la propriété type de l’objet d’événement d’un événement repeatStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.REPEAT_START</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>repeatStart</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SELECTION_CHANGE"><apiName>SELECTION_CHANGE</apiName><shortdesc>
      La constante FlexEvent.SELECTION_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement selectionChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.SELECTION_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>selectionChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SHOW"><apiName>SHOW</apiName><shortdesc>
      La constante FlexEvent.SHOW définit la valeur de la propriété type de l’objet d’événement d’un événement show.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>show</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.SHOW</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>show</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSFORM_CHANGE"><apiName>TRANSFORM_CHANGE</apiName><shortdesc>
      La constante FlexEvent.TRANSFORM_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement transformChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transformChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.TRANSFORM_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>transformChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:UPDATE_COMPLETE"><apiName>UPDATE_COMPLETE</apiName><shortdesc>
      La constante FlexEvent.UPDATE_COMPLETE définit la valeur de la propriété type de l’objet d’événement d’un événement updateComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>updateComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.UPDATE_COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>updateComplete</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:URL_CHANGED"><apiName>URL_CHANGED</apiName><shortdesc>
      La constante FlexEvent.URL_CHANGED définit la valeur de la propriété type de l’objet d’événement d’un événement urlChanged.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.URL_CHANGED</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>urlChanged</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:VALID"><apiName>VALID</apiName><shortdesc>
      La constante FlexEvent.VALID définit la valeur de la propriété type de l’objet d’événement d’un événement valid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.VALID</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>valid</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:VALUE_COMMIT"><apiName>VALUE_COMMIT</apiName><shortdesc>
      La constante FlexEvent.VALUE_COMMIT définit la valeur de la propriété type de l’objet d’événement d’un événement valueCommit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valueCommit</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>FlexEvent.VALUE_COMMIT</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>valueCommit</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
  Evénement envoyé entre des classes DragManager qui se trouvent dans des domaines ApplicationDomain distincts mais approuvés, en vue de traiter la distribution d’événements DragEvent vers les cibles du glissement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:DragEvent</apiBaseClassifier></apiClassifierDef><apiDesc> 
  Evénement envoyé entre des classes DragManager qui se trouvent dans des domaines ApplicationDomain distincts mais approuvés, en vue de traiter la distribution d’événements DragEvent vers les cibles du glissement. Une classe DragManager dispose d’un objet DragProxy qui se déplace avec la souris et recherche les modifications dans l’objet dropTarget. Elle ne peut pas distribuer directement l’événement DragEvent vers une cible potentielle d’un autre domaine ApplicationDomain, car le code de ce domaine ApplicationDomain n’est pas de même type que celui de l’événement DragEvent. En revanche, la classe DragManager distribue un événement InterDragManagerEvent écouté par la classe DragManager de l’autre domaine ApplicationDomain, puis sérialise l’événement DragEvent et le distribue vers l’objet dropTarget potentiel.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterDragManagerEvent:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Référence à un objet de la liste d’affichage qui est associé à l’événement.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Ctrl</codeph> a été enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Alt</codeph> a été enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Maj</codeph> a été enfoncée.	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si l’utilisateur appuie (true) ou non (false) sur le bouton principal de la souris.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Indique le nombre de lignes qui doivent défiler chaque fois que l’utilisateur fait tourner la molette de sa souris d’un cran.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dropTarget</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Cible de dépôt potentielle de l’autre domaine d’application (c’est la raison pour laquelle il s’agit d’un objet DisplayObject et pas d’une autre classe).
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragEventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Type d’événement de l’événement DragEvent à utiliser par la classe DragManager de réception lors de la création de l’événement DragEvent sérialisé.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>Interface IUIComponent spécifiant le composant qui initie l’opération de glissement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>Objet DragSource contenant les données qui font l’objet du glissement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Action de dépôt spécifiée, par exemple <codeph>DragManager.MOVE</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>draggedItem</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Objet représentant l’élément qui a fait l’objet du glissement.
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterDragManagerEvent:DISPATCH_DRAG_EVENT"><apiName>DISPATCH_DRAG_EVENT</apiName><shortdesc>
	 Distribue un événement DragEvent vers une cible qui se trouve dans un autre domaine ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dispatchDragEvent</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Distribue un événement DragEvent vers une cible qui se trouve dans un autre domaine ApplicationDomain. La classe DragManager de réception sérialise l’événement DragEvent et le distribue vers la cible spécifiée dans la propriété <codeph>dropTarget</codeph>.
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterDragManagerEvent:dragEventType"><apiName>dragEventType</apiName><shortdesc>
	  Type d’événement de l’événement DragEvent à utiliser par la classe DragManager de réception lors de la création de l’événement DragEvent sérialisé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Type d’événement de l’événement DragEvent à utiliser par la classe DragManager de réception lors de la création de l’événement DragEvent sérialisé.
	  
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DragEvent"><linktext>mx.events.DragEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:InterDragManagerEvent:dropTarget"><apiName>dropTarget</apiName><shortdesc>
	  Cible de dépôt potentielle de l’autre domaine ApplicationDomain (c’est la raison pour laquelle il s’agit d’un objet DisplayObject et pas d’une autre classe).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  Cible de dépôt potentielle de l’autre domaine ApplicationDomain (c’est la raison pour laquelle il s’agit d’un objet DisplayObject et pas d’une autre classe).
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CalendarLayoutChangeEvent"><apiName>CalendarLayoutChangeEvent</apiName><shortdesc>
  La classe CalendarLayoutChangeEvent représente l’objet d’événement transmis à l’écouteur d’événement pour l’événement change des contrôles DateChooser et DateField.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe CalendarLayoutChangeEvent représente l’objet d’événement transmis à l’écouteur d’événement pour l’événement <codeph>change</codeph> des contrôles DateChooser et DateField.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link></related-links><adobeApiEvent id="mx.events:CalendarLayoutChangeEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CalendarLayoutChangeEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:CalendarLayoutChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CalendarLayoutChangeEvent:CalendarLayoutChangeEvent"><apiName>CalendarLayoutChangeEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut se propager vers le haut de la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newDate</apiItemName><apiType value="Date"/><apiData>null</apiData><apiDesc>Date sélectionnée dans le contrôle.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Evénement qui a déclenché cet événement de modification. Il s’agit généralement d’un événement <codeph>change</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CalendarLayoutChangeEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  La constante CalendarLayoutChangeEvent.CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>CalendarLayoutChangeEvent.CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>change</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>newDate</codeph></entry><entry>Date sélectionnée dans le contrôle.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Evénement qui a déclenché cet événement de modification. Il s’agit généralement d’un événement <codeph>change</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CalendarLayoutChangeEvent:newDate"><apiName>newDate</apiName><shortdesc>
	  Date sélectionnée dans le contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Date"/></apiValueDef><apiDesc>
	  Date sélectionnée dans le contrôle.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CalendarLayoutChangeEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Evénement qui a déclenché la modification de la date. Il s’agit généralement d’un événement change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Evénement qui a déclenché la modification de la date. Il s’agit généralement d’un événement <codeph>change</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
  Représente les événements distribués lorsque l’utilisateur clique sur un élément de navigation dans une barre de navigation, par exemple des objets ButtonBar, LinkBar ou TabBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les événements distribués lorsque l’utilisateur clique sur un élément de navigation dans une barre de navigation, par exemple des objets ButtonBar, LinkBar ou TabBar.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#NavBar"><linktext>mx.controls.NavBar</linktext></link><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links><adobeApiEvent id="mx.events:ItemClickEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ItemClickEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ItemClickEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ItemClickEvent:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Libellé de l’élément de navigation associé. 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de l’élément de navigation associé.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Objet enfant qui a généré l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Elément correspondant à l’élément de navigation associé dans le fournisseur de données.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ItemClickEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
	  La constante ItemClickEvent.ITEM_CLICK définit la valeur de la propriété type de l’objet d’événement d’un événement itemClick.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ItemClickEvent.ITEM_CLICK</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>itemClick</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>index</codeph></entry><entry>Index de l’élément de navigation sur lequel l’utilisateur a cliqué.</entry></row><row><entry><codeph>item</codeph></entry><entry>Elément correspondant à l’élément de navigation sur lequel l’utilisateur a cliqué dans le fournisseur de données.</entry></row><row><entry><codeph>label</codeph></entry><entry>Libellé de l’élément de navigation sur lequel l’utilisateur a cliqué.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Objet enfant qui a généré l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:index"><apiName>index</apiName><shortdesc>
	  Index de l’élément de navigation associé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Index de l’élément de navigation associé.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:item"><apiName>item</apiName><shortdesc>
	  Elément correspondant à l’élément de navigation associé dans le fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Elément correspondant à l’élément de navigation associé dans le fournisseur de données.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:label"><apiName>label</apiName><shortdesc>
	  Libellé de l’élément de navigation associé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Libellé de l’élément de navigation associé.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  Objet enfant qui a généré l’événement, par exemple le bouton sur lequel l’utilisateur a cliqué dans un contrôle ButtonBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:InteractiveObject"/></apiValueDef><apiDesc>
	  Objet enfant qui a généré l’événement, par exemple le bouton sur lequel l’utilisateur a cliqué dans un contrôle ButtonBar.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
  La classe MetadataEvent définit le type d’événement des événements de métadonnées et de point de repère.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe MetadataEvent définit le type d’événement des événements de métadonnées et de point de repère. Ces événements sont principalement utilisés par le contrôle VideoDisplay.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:MetadataEvent:ACTION_SCRIPT_actionscript"><apiName>actionscript</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:ACTION_SCRIPT</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MetadataEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MetadataEvent:METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MetadataEvent:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Pour les événements de type <codeph>ACTION_SCRIPT</codeph> et <codeph>CUE_POINT</codeph>, index du point de repère dans le tableau <codeph>VideoDisplay.cuePoint</codeph>. Pour les événements de type <codeph>METADATA_RECEIVED</codeph>, objet décrivant le fichier FLV, incluant les éventuels points de repère, correspondant aux informations de la propriété <codeph>VideoDisplay.metadata</codeph>.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MetadataEvent:ACTION_SCRIPT"><apiName>ACTION_SCRIPT</apiName><shortdesc>
      La constante MetadataEvent.ACTION_SCRIPT définit la valeur de la propriété type de l’objet d’événement d’un événement actionscript.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>actionscript</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante MetadataEvent.ACTION_SCRIPT définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>actionscript</codeph>. Ces points de repère ne sont pas incorporés au fichier FLV, mais ils sont définis à l’aide d’ActionScript à l’exécution.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>info</codeph></entry><entry>Index du point de repère dans le tableau VideoDisplay.cuePoint.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
      La constante MetadataEvent.CUE_POINT définit la valeur de la propriété type de l’objet d’événement d’un événement cuePoint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante MetadataEvent.CUE_POINT définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>cuePoint</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>info</codeph></entry><entry>Index du point de repère dans le tableau VideoDisplay.cuePoint.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:METADATA_RECEIVED"><apiName>METADATA_RECEIVED</apiName><shortdesc>
     La constante MetadataEvent.METADATA_RECEIVED définit la valeur de la propriété type d’un événement metadataReceived.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>metadataReceived</apiData><apiType value="String"/></apiValueDef><apiDesc>
     La constante MetadataEvent.METADATA_RECEIVED définit la valeur de la propriété <codeph>type</codeph> d’un événement <codeph>metadataReceived</codeph>.
     
     <p>Les propriétés de cet événement sont les suivantes :</p>
     <adobetable class="innertable">
         
         
         
         
         
         
             
     <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>info</codeph></entry><entry>Objet décrivant le fichier FLV, incluant les éventuels points de repère. Cette propriété contient les mêmes informations que la propriété <codeph>VideoDisplay.metadata</codeph>. Pour plus d’informations, voir la propriété <codeph>VideoDisplay.metadata</codeph>.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Index de l’objet VideoPlayer.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:info"><apiName>info</apiName><shortdesc>
      Pour les événements de type ACTION_SCRIPT et CUE_POINT, index du point de repère dans le tableau VideoDisplay.cuePoint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Pour les événements de type <codeph>ACTION_SCRIPT</codeph> et <codeph>CUE_POINT</codeph>, index du point de repère dans le tableau <codeph>VideoDisplay.cuePoint</codeph>.
     
      <p>Pour les événements de type <codeph>METADATA_RECEIVED</codeph>, objet décrivant le fichier FLV, incluant les éventuels points de repère, correspondant aux informations de la propriété <codeph>VideoDisplay.metadata</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/metadata"><linktext>mx.controls.VideoDisplay.metadata</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
  La classe IndexChangedEvent représente les événements distribués lorsqu’un index change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe IndexChangedEvent représente les événements distribués lorsqu’un index change. Cet événement peut indiquer que la valeur d’index de l’enfant d’un conteneur a changé, que l’enfant affiché d’un conteneur de navigateur tel qu’un contrôle Accordion ou ViewStack a changé, ou encore que l’ordre des en-têtes de colonne d’un contrôle DataGrid a changé.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#Container"><linktext>mx.core.Container</linktext></link></related-links><adobeApiEvent id="mx.events:IndexChangedEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE_childIndexChange"><apiName>childIndexChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:HEADER_SHIFT_headerShift"><apiName>headerShift</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:HEADER_SHIFT</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:IndexChangedEvent:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Objet enfant associé à la modification d’index.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Index de base zéro avant la modification.
     
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Index de base zéro après la modification.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Evénement qui a déclenché cet événement.
      
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur. Normalement appelé par un contrôle Flex et non utilisé dans le code de l’application.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:IndexChangedEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      La constante IndexChangedEvent.CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement change, qui indique qu’un index a changé (par exemple lorsqu’un contrôle Accordion change le panneau affiché ou qu’un contrôle ViewStack change de vues).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante IndexChangedEvent.CHANGE définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>change</codeph>, qui indique qu’un index a changé (par exemple lorsqu’un contrôle Accordion change le panneau affiché ou qu’un contrôle ViewStack change de vues). 
     
      <p>Les propriétés de l’objet de l’événement sont les valeurs suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Indique si cet événement a été provoqué par une interaction de clavier ou de souris.</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Index de base zéro après la modification.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Index de base zéro avant la modification.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Contient une référence à l’objet enfant correspondant au nouvel index.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>Evénement qui a déclenché cet événement.</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangedEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE"><apiName>CHILD_INDEX_CHANGE</apiName><shortdesc>
      La constante IndexChangedEvent.CHILD_INDEX_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement childIndexChange, qui indique que l’index d’un composant dans l’enfant d’un conteneur a changé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childIndexChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante IndexChangedEvent.CHILD_INDEX_CHANGE définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement childIndexChange, qui indique que l’index d’un composant dans l’enfant d’un conteneur a changé.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Indique si cet événement a été provoqué par une interaction de clavier ou de souris.</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Index de base zéro de l’enfant, après la modification.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Index de base zéro de l’enfant, avant la modification.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Contient une référence à l’objet enfant dont l’index a changé.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>null</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangedEvent.CHILD_INDEX_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:HEADER_SHIFT"><apiName>HEADER_SHIFT</apiName><shortdesc>
      La constante IndexChangedEvent.HEADER_SHIFT définit la valeur de la propriété type de l’objet d’événement d’un événement headerShift, qui indique que l’index d’un en-tête a changé, par exemple parce qu’un utilisateur a fait glisser une colonne DataGrid vers une nouvelle position.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headerShift</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante IndexChangedEvent.HEADER_SHIFT définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>headerShift</codeph>, qui indique que l’index d’un en-tête a changé, par exemple parce qu’un utilisateur a fait glisser une colonne DataGrid vers une nouvelle position.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Indique si cet événement a été provoqué par une interaction de clavier ou de souris.</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Index de base zéro de l’en-tête, après la modification.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Index de base zéro de l’en-tête, avant la modification.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>Evénement qui a déclenché cet événement.</entry></row><row><entry><codeph>Type</codeph></entry><entry>IndexChangedEvent.HEADER_SHIFT</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:newIndex"><apiName>newIndex</apiName><shortdesc>
      Index de base zéro après la modification.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Index de base zéro après la modification. Dans le cas des événements <codeph>change</codeph>, il s’agit de l’index de l’enfant actuel. Dans le cas des événements <codeph>childIndexChange</codeph>, il s’agit du nouvel index de l’enfant. Dans le cas des événements <codeph>headerShift</codeph>, il s’agit du nouvel index de l’en-tête.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:oldIndex"><apiName>oldIndex</apiName><shortdesc>
      Index de base zéro avant la modification.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Index de base zéro avant la modification. Dans le cas des événements <codeph>change</codeph>, il s’agit de l’index de l’enfant précédent. Dans le cas des événements <codeph>childIndexChange</codeph>, il s’agit de l’index précédent de l’enfant. Dans le cas des événements <codeph>headerShift</codeph>, il s’agit de l’index précédent de l’en-tête.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
      Objet enfant dont l’index a changé ou objet associé au nouvel index.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
      Objet enfant dont l’index a changé ou objet associé au nouvel index. Cette propriété n’est pas définie pour les modifications d’en-tête. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Evénement qui a déclenché cet événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Evénement qui a déclenché cet événement. Indique si cet événement a été provoqué par une interaction de clavier ou de souris. La valeur est <codeph>null</codeph> lorsqu’un conteneur distribue un événement <codeph>childIndexChanged</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
  Il s’agit d’un événement envoyé entre les applications qui se trouvent dans des sandbox de sécurité différents.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Il s’agit d’un événement envoyé entre les applications qui se trouvent dans des sandbox de sécurité différents. L’événement permet aux objets présents dans d’autres sandbox de savoir ce qui se passe dans ce sandbox. Les événements sont de nature informative, par opposition à une demande SWFBridgeRequest, qui demande à un objet de réaliser une opération de sa part.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SWFBridgeEvent:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Objet dont la valeur est null par défaut, mais qui peut contenir des informations sur l’événement, en fonction du type d’événement.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeEvent:marshal"><apiName>marshal</apiName><shortdesc>
      Sérialise une classe SWFBridgeRequest à partir d’un domaine ApplicationDomain distant vers le domaine ApplicationDomain actuel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Classe SWFBridgeEvent créée dans le domaine ApplicationDomain de l’appelant.
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Classe SWFBridgeRequest éventuellement créée dans un autre domaine ApplicationDomain.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Sérialise une classe SWFBridgeRequest à partir d’un domaine ApplicationDomain distant vers le domaine ApplicationDomain actuel.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_ACTIVATE"><apiName>BRIDGE_AIR_WINDOW_ACTIVATE</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_DEACTIVATE"><apiName>BRIDGE_AIR_WINDOW_DEACTIVATE</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_ACTIVATE"><apiName>BRIDGE_APPLICATION_ACTIVATE</apiName><shortdesc>
	 Distribuée vers un pont parent ou une racine de sandbox pour signaler qu’une autre application a été activée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Distribuée vers un pont parent ou une racine de sandbox pour signaler qu’une autre application a été activée.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_UNLOADING"><apiName>BRIDGE_APPLICATION_UNLOADING</apiName><shortdesc>
      Envoyée par le biais d’un pont vers la classe SystemManager d’une application enfant pour signaler que le fichier SWF est sur le point d’être déchargé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationUnloading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Envoyée par le biais d’un pont vers la classe SystemManager d’une application enfant pour signaler que le fichier SWF est sur le point d’être déchargé. La classe SystemManager sérialise et distribue à nouveau l’événement, de sorte que le code de l’application puisse supprimer les références susceptibles d’empêcher le déchargement du fichier SWF.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_FOCUS_MANAGER_ACTIVATE"><apiName>BRIDGE_FOCUS_MANAGER_ACTIVATE</apiName><shortdesc>
	  Distribuée par le biais de ponts vers toutes les autres classes FocusManager pour leur signaler qu’une autre classe FocusManager est désormais active.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeFocusManagerActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Distribuée par le biais de ponts vers toutes les autres classes FocusManager pour leur signaler qu’une autre classe FocusManager est désormais active.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_NEW_APPLICATION"><apiName>BRIDGE_NEW_APPLICATION</apiName><shortdesc>
	  Distribuée par le biais d’un pont parent vers sa classe SWFLoader pour signaler qu’une nouvelle classe SystemManager a été initialisée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeNewApplication</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Distribuée par le biais d’un pont parent vers sa classe SWFLoader pour signaler qu’une nouvelle classe SystemManager a été initialisée. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_ACTIVATE"><apiName>BRIDGE_WINDOW_ACTIVATE</apiName><shortdesc>
	 Distribuée vers un pont parent ou une racine de sandbox pour signaler qu’une fenêtre a été activée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Distribuée vers un pont parent ou une racine de sandbox pour signaler qu’une fenêtre a été activée. Dans le cas d’une application compatible, la propriété <codeph>data</codeph> est un objet doté de deux propriétés, <codeph>window</codeph> et <codeph>notifier</codeph>. La propriété <codeph>data.window</codeph> correspond à la classe proxy SystemManager qui a été activée. Dans le cas d’une application non approuvée, la propriété <codeph>data.window</codeph> est un ID de chaîne de la fenêtre. La propriété <codeph>data.notifier</codeph> est le pont de l’application distribuant l’événement. L’événement pouvant être distribué directement vers une racine de sandbox et pas par le biais d’un pont, la propriété <codeph>event.target</codeph> peut ne pas être le pont de l’application distribuant l’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_DEACTIVATE"><apiName>BRIDGE_WINDOW_DEACTIVATE</apiName><shortdesc>
	 Distribuée vers un pont parent ou une racine de sandbox pour signaler que la classe proxy SystemManager a été désactivée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>brdigeWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Distribuée vers un pont parent ou une racine de sandbox pour signaler que la classe proxy SystemManager a été désactivée. Dans le cas d’une application compatible, la propriété <codeph>data</codeph> est un objet doté de deux propriétés, <codeph>window</codeph> et <codeph>notifier</codeph>. La propriété <codeph>data.window</codeph> correspond à la classe proxy SystemManager qui a été activée. Dans le cas d’une application non approuvée, la propriété <codeph>data.window</codeph> est un ID de chaîne de la fenêtre. La propriété <codeph>data.notifier</codeph> est le pont de l’application distribuant l’événement. L’événement pouvant être distribué directement vers une racine de sandbox et pas par le biais d’un pont, la propriété <codeph>event.target</codeph> peut ne pas être le pont de l’application distribuant l’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:data"><apiName>data</apiName><shortdesc>
	  Informations sur l’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Informations sur l’événement.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FocusRequestDirection"><apiName>FocusRequestDirection</apiName><shortdesc>
  La classe FocusDirection définit les valeurs de constante vers lesquelles le focus de direction peut être déplacé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe FocusDirection définit les valeurs de constante vers lesquelles le focus de direction peut être déplacé. La valeur est utilisée par la demande SWFBridgeRequest.MOVE_FOCUS_REQUEST et avec la méthode <codeph>moveFocus()</codeph> de la classe FocusManager.
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#SWFBridgeRequest"><linktext>SWFBridgeRequest</linktext></link></related-links><apiValue id="mx.events:FocusRequestDirection:BACKWARD"><apiName>BACKWARD</apiName><shortdesc>
      Déplace le focus en arrière vers le contrôle précédent de la boucle de tabulation, comme si les touches Maj+Tab avaient été enfoncées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>backward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Déplace le focus en arrière vers le contrôle précédent de la boucle de tabulation, comme si les touches Maj+Tab avaient été enfoncées.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
      Déplace le focus vers le contrôle du bas/le dernier contrôle de la boucle de tabulation, comme si les touches Maj+Tab avaient été enfoncées alors qu’aucun objet n’avait le focus dans la boucle de tabulation.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Déplace le focus vers le contrôle du bas/le dernier contrôle de la boucle de tabulation, comme si les touches Maj+Tab avaient été enfoncées alors qu’aucun objet n’avait le focus dans la boucle de tabulation.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:FORWARD"><apiName>FORWARD</apiName><shortdesc>
      Déplace le focus en avant vers le contrôle suivant de la boucle de tabulation, comme si la touche Tab avait été enfoncée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>forward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Déplace le focus en avant vers le contrôle suivant de la boucle de tabulation, comme si la touche Tab avait été enfoncée.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:TOP"><apiName>TOP</apiName><shortdesc>
      Déplace le focus vers le contrôle du haut/le premier contrôle de la boucle de tabulation, comme si la touche Tab avait été enfoncée alors qu’aucun objet n’avait le focus dans la boucle de tabulation.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Déplace le focus vers le contrôle du haut/le premier contrôle de la boucle de tabulation, comme si la touche Tab avait été enfoncée alors qu’aucun objet n’avait le focus dans la boucle de tabulation.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
  La classe ResourceEvent représente un objet d’événement distribué lorsque la classe ResourceManager charge des regroupements de ressources dans un module de ressources en appelant la méthode loadResourceModule().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ResourceEvent représente un objet d’événement distribué lorsque la classe ResourceManager charge des regroupements de ressources dans un module de ressources en appelant la méthode <codeph>loadResourceModule()</codeph>.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.resources.xml#ResourceManager"><linktext>mx.resources.ResourceManager</linktext></link></related-links><adobeApiEvent id="mx.events:ResourceEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResourceEvent:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Valeur de la propriété <codeph>type</codeph> de l’objet d’événement. Valeurs possibles :
      <ul>
         <li><codeph>"progress"</codeph> (<codeph>ResourceEvent.PROGRESS</codeph>)</li>
         <li><codeph>"complete"</codeph> (<codeph>ResourceEvent.COMPLETE</codeph>)</li>
         <li><codeph>"error"</codeph> (<codeph>ResourceEvent.ERROR</codeph>)</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre d’octets chargés lors du traitement de l’événement par l’écouteur.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre total d’octets qui seront finalement chargés si le processus de chargement aboutit.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Message d’erreur de l’erreur lorsque le <codeph>type</codeph> est <codeph>ResourceEvent.ERROR</codeph>.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResourceEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      Distribuée au terme du chargement du fichier SWF du module de ressources.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribuée au terme du chargement du fichier SWF du module de ressources. La constante ResourceEvent.COMPLETE définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>complete</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, <codeph>myButton</codeph> a la même valeur que <codeph>currentTarget</codeph>. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Vide</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Distribué lorsqu’une erreur se produit lors du chargement du fichier SWF du module de ressources.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsqu’une erreur se produit lors du chargement du fichier SWF du module de ressources. La constante ResourceEvent.ERROR définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>error</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Vide</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Vide</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet définissant l’écouteur d’événement qui traite l’événement. Par exemple, si vous utilisez la méthode <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, <codeph>myButton</codeph> a la même valeur que <codeph>currentTarget</codeph>. </entry></row><row><entry><codeph>errorText</codeph></entry>Message d’erreur.<entry/></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (il ne s’agit pas toujours de l’objet qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Distribuée pendant le chargement du fichier SWF du module de ressources.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribuée pendant le chargement du fichier SWF du module de ressources. La constante ResourceEvent.PROGRESS définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>progress</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Nombre d’octets chargés.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Nombre total d’octets à charger.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet définissant l’écouteur d’événement qui traite l’événement. Par exemple, si vous utilisez la méthode <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, <codeph>myButton</codeph> a la même valeur que <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>errorText</codeph></entry>Vide<entry/></row><row><entry><codeph>target</codeph></entry><entry>Objet ayant distribué l’événement ; il ne s’agit pas toujours de l’objet qui écoute l’événement. Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Message d’erreur si le type est ERROR, null dans le cas contraire.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Message d’erreur si le <codeph>type</codeph> est <codeph>ERROR</codeph>, <codeph>null</codeph> dans le cas contraire.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
  La classe VideoEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements distribués par le contrôle VideoDisplay et définit les valeurs de la propriété VideoDisplay.state.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe VideoEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements distribués par le contrôle VideoDisplay et définit les valeurs de la propriété <codeph>VideoDisplay.state</codeph>.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:VideoEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:REWIND_rewind"><apiName>rewind</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:REWIND</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:STATE_CHANGE_stateChange"><apiName>stateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:VideoEvent:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>playheadTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Position de la tête de lecture au moment où l’événement se produit. 	
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:VideoEvent:BUFFERING"><apiName>BUFFERING</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state immédiatement après l’appel de la méthode play() ou load().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buffering</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> immédiatement après l’appel de la méthode <codeph>play()</codeph> ou <codeph>load()</codeph>.
     
      <p>Il s’agit d’un état réactif. A l’état réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont exécutés immédiatement.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
	  La constante VideoEvent.CLOSE définit la valeur de la propriété type de l’objet d’événement d’un événement close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>VideoEvent.CLOSE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>close</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Position de la tête de lecture au moment où l’événement se produit.</entry></row><row><entry><codeph>state</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.stateResponsive</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
	  La constante VideoEvent.COMPLETE définit la valeur de la propriété type de l’objet d’événement d’un événement complete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>VideoEvent.COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>complete</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Position de la tête de lecture au moment où l’événement se produit.</entry></row><row><entry><codeph>state</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.stateResponsive</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:CONNECTION_ERROR"><apiName>CONNECTION_ERROR</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state au moment où le contrôle VideoDisplay n’a pas réussi à charger le flux vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>connectionError</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où le contrôle VideoDisplay n’a pas réussi à charger le flux vidéo. Cet état peut se produire lorsqu’aucune connexion à un serveur n’est établie, lorsque le flux vidéo est introuvable ou encore pour d’autres raisons.
     
      <p>Il s’agit d’un état non réactif. Si le contrôle est non réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont mis en file d’attente, puis exécutés lorsque le contrôle passe à l’état réactif.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:DISCONNECTED"><apiName>DISCONNECTED</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state au moment où le flux vidéo a expiré ou est devenu inactif.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>disconnected</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où le flux vidéo a expiré ou est devenu inactif.
     
      <p>Il s’agit d’un état réactif. A l’état réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont exécutés immédiatement.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:EXEC_QUEUED_CMD"><apiName>EXEC_QUEUED_CMD</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state au moment de l’exécution de la commande mise en file d’attente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>execQueuedCmd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment de l’exécution de la commande mise en file d’attente. Aucun événement <codeph>stateChange</codeph> n’est distribué pour cet état. Il s’agit d’un état à usage interne uniquement.
     
      <p>Il s’agit d’un état non réactif. Si le contrôle est non réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont mis en file d’attente, puis exécutés lorsque le contrôle passe à l’état réactif.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:LOADING"><apiName>LOADING</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state immédiatement après l’appel de la méthode play() ou load().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> immédiatement après l’appel de la méthode <codeph>play()</codeph> ou <codeph>load()</codeph>.
     
      <p>Il s’agit d’un état non réactif. Si le contrôle est non réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont mis en file d’attente, puis exécutés lorsque le contrôle passe à l’état réactif.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PAUSED"><apiName>PAUSED</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state lorsqu’un fichier FLV est chargé, mais que la lecture est en pause.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>paused</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> lorsqu’un fichier FLV est chargé, mais que la lecture est en pause. Cet état entre en vigueur lorsque vous appelez la méthode <codeph>pause()</codeph> ou <codeph>load()</codeph>.
     
      <p>Il s’agit d’un état réactif. A l’état réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont exécutés immédiatement.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PLAYHEAD_UPDATE"><apiName>PLAYHEAD_UPDATE</apiName><shortdesc>
	  La constante VideoEvent.PLAYHEAD_UPDATE définit la valeur de la propriété type de l’objet d’événement d’un événement playheadUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playheadUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>VideoEvent.PLAYHEAD_UPDATE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>playheadUpdate</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Position de la tête de lecture au moment où l’événement se produit.</entry></row><row><entry><codeph>state</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.stateResponsive</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PLAYING"><apiName>PLAYING</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state lorsqu’un fichier FLV est chargé et en cours de lecture.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> lorsqu’un fichier FLV est chargé et en cours de lecture. Cet état entre en vigueur lorsque vous appelez la méthode <codeph>play()</codeph>.
     
      <p>Il s’agit d’un état réactif. A l’état réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont exécutés immédiatement.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:READY"><apiName>READY</apiName><shortdesc>
	  La constante VideoEvent.READY définit la valeur de la propriété type de l’objet d’événement d’un événement ready.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>VideoEvent.READY</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>ready</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Position de la tête de lecture au moment où l’événement se produit.</entry></row><row><entry><codeph>state</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.stateResponsive</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:RESIZING"><apiName>RESIZING</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state pendant le redimensionnement du contrôle VideoDisplay.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resizing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> pendant le redimensionnement du contrôle VideoDisplay.
     
      <p>Il s’agit d’un état non réactif. Si le contrôle est non réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont mis en file d’attente, puis exécutés lorsque le contrôle passe à l’état réactif.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:REWIND"><apiName>REWIND</apiName><shortdesc>
	  La constante VideoEvent.REWIND définit la valeur de la propriété type de l’objet d’événement d’un événement rewind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewind</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>VideoEvent.REWIND</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>rewind</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Position de la tête de lecture au moment où l’événement se produit.</entry></row><row><entry><codeph>state</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.stateResponsive</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:REWINDING"><apiName>REWINDING</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state pendant un rembobinage automatique déclenché à l’arrêt de la lecture.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewinding</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> pendant un rembobinage automatique déclenché à l’arrêt de la lecture. Au terme du rembobinage, l’état devient <codeph>STOPPED</codeph>.
     
      <p>Il s’agit d’un état non réactif. Si le contrôle est non réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont mis en file d’attente, puis exécutés lorsque le contrôle passe à l’état réactif.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:SEEKING"><apiName>SEEKING</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state lors d’une recherche déclenchée par la définition de la propriété VideoDisplay.playHeadTime.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>seeking</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> lors d’une recherche déclenchée par la définition de la propriété <codeph>VideoDisplay.playHeadTime</codeph>.
     
      <p>Il s’agit d’un état non réactif. Si le contrôle est non réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont mis en file d’attente, puis exécutés lorsque le contrôle passe à l’état réactif.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:STATE_CHANGE"><apiName>STATE_CHANGE</apiName><shortdesc>
	  La constante VideoEvent.STATE_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement stateChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>VideoEvent.STATE_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>stateChange</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Position de la tête de lecture au moment où l’événement se produit.</entry></row><row><entry><codeph>state</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Valeur de la propriété <codeph>VideoDisplay.stateResponsive</codeph> au moment où l’événement se produit.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:STOPPED"><apiName>STOPPED</apiName><shortdesc>
      Valeur de la propriété VideoDisplay.state lorsqu’un fichier FLV est chargé, mais que la lecture est arrêtée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stopped</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Valeur de la propriété <codeph>VideoDisplay.state</codeph> lorsqu’un fichier FLV est chargé, mais que la lecture est arrêtée. Cet état entre en vigueur lorsque vous appelez la méthode <codeph>stop()</codeph> ou lorsque la tête de lecture atteint la fin du flux vidéo.
     
      <p>Il s’agit d’un état réactif. A l’état réactif, les appels des méthodes <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> et <codeph>pause()</codeph> sont exécutés immédiatement.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:playheadTime"><apiName>playheadTime</apiName><shortdesc>
	  Position de la tête de lecture du contrôle VideoDisplay au moment où l’événement se produit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Position de la tête de lecture du contrôle VideoDisplay au moment où l’événement se produit.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:state"><apiName>state</apiName><shortdesc>
	  Valeur de la propriété VideoDisplay.state au moment où l’événement se produit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Valeur de la propriété <codeph>VideoDisplay.state</codeph> au moment où l’événement se produit.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/state"><linktext>mx.controls.VideoDisplay.state</linktext></link></related-links></apiValue><apiValue id="mx.events:VideoEvent:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
	  Valeur de la propriété VideoDisplay.stateResponsive au moment où l’événement se produit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Valeur de la propriété <codeph>VideoDisplay.stateResponsive</codeph> au moment où l’événement se produit.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/stateResponsive"><linktext>mx.controls.VideoDisplay.stateResponsive</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
  Représente les objets d’événement propres aux effets Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les objets d’événement propres aux effets Flex. Les effets Flex distribuent les types d’événements suivants :
  <ul>
    <li><codeph>effectStart</codeph></li>
    <li><codeph>effectStop</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
    <li><codeph>effectEnd</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links><adobeApiEvent id="mx.events:EffectEvent:EFFECT_END_effectEnd"><apiName>effectEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_END</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_REPEAT_effectRepeat"><apiName>effectRepeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_REPEAT</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_START_effectStart"><apiName>effectStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_START</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_STOP_effectStop"><apiName>effectStop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_STOP</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_UPDATE_effectUpdate"><apiName>effectUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><apiConstructor id="mx.events:EffectEvent:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>effectInstance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiData>null</apiData><apiDesc>Occurrence d’effet qui a déclenché l’événement.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:EffectEvent:EFFECT_END"><apiName>EFFECT_END</apiName><shortdesc>
      La constante EffectEvent.EFFECT_END définit la valeur de la propriété type de l’objet d’événement d’un événement effectEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>EffectEvent.EFFECT_END</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>effectEnd</codeph>. 
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Objet d’occurrence d’effet de l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_REPEAT"><apiName>EFFECT_REPEAT</apiName><shortdesc>
      La constante EffectEvent.EFFECT_REPEAT définit la valeur de la propriété type de l’objet d’événement d’un événement effectRepeat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectRepeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>EffectEvent.EFFECT_REPEAT</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>effectRepeat</codeph>. 
      
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Objet d’occurrence d’effet de l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_START"><apiName>EFFECT_START</apiName><shortdesc>
      La constante EffectEvent.EFFECT_START définit la valeur de la propriété type de l’objet d’événement d’un événement effectStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>EffectEvent.EFFECT_START</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>effectStart</codeph>. 
      
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Objet d’occurrence d’effet de l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_STOP"><apiName>EFFECT_STOP</apiName><shortdesc>
      La constante EffectEvent.EFFECT_STOP définit la valeur de la propriété type de l’objet d’événement d’un événement effectStop.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStop</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>EffectEvent.EFFECT_STOP</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>effectStop</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Objet d’occurrence d’effet de l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_UPDATE"><apiName>EFFECT_UPDATE</apiName><shortdesc>
      La constante EffectEvent.EFFECT_UPDATE définit la valeur de la propriété type de l’objet d’événement d’un événement effectUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>EffectEvent.EFFECT_UPDATE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>effectUpdate</codeph>. 
      
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Objet d’occurrence d’effet de l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:effectInstance"><apiName>effectInstance</apiName><shortdesc>
	  Objet d’occurrence d’effet de l’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.effects:IEffectInstance</apiValueClassifier></apiValueDef><apiDesc>
	  Objet d’occurrence d’effet de l’événement. Vous pouvez utiliser cette propriété pour accéder aux propriétés de l’objet d’occurrence d’effet à partir de l’écouteur d’événement.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
  La classe ValidationResultEvent représente l’objet d’événement transmis à l’écouteur de l’événement de validation valid ou invalid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ValidationResultEvent représente l’objet d’événement transmis à l’écouteur de l’événement de validation <codeph>valid</codeph> ou <codeph>invalid</codeph>. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.validators.xml#Validator"><linktext>mx.validators.Validator</linktext></link><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link><link href="mx.validators.xml#RegExpValidationResult"><linktext>mx.validators.RegExpValidationResult</linktext></link></related-links><adobeApiEvent id="mx.events:ValidationResultEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ValidationResultEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ValidationResultEvent:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nom du champ dont la validation a échoué et qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>results</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Tableau d’objets ValidationResult (un par champ validé). 
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ValidationResultEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
	  La constante ValidationResultEvent.INVALID définit la valeur de la propriété type de l’objet d’événement d’un événement invalid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ValidationResultEvent.INVALID</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>invalid</codeph>. La valeur de cette constante est « invalid ».
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>field</codeph></entry><entry>Nom du champ dont la validation a échoué.</entry></row><row><entry><codeph>message</codeph></entry><entry>Chaîne unique contenant tous les messages d’erreur issus de tous les objets ValidationResult du tableau de résultats.</entry></row><row><entry><codeph>results</codeph></entry><entry>Tableau d’objets ValidationResult (un par champ validé).</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:VALID"><apiName>VALID</apiName><shortdesc>
	  La constante ValidationResultEvent.VALID définit la valeur de la propriété type de l’objet d’événement d’un événement valid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ValidationResultEvent.VALID</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>valid</codeph>. La valeur de cette constante est « valid ».
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>field</codeph></entry><entry>Chaîne vide.</entry></row><row><entry><codeph>message</codeph></entry><entry>Chaîne vide.</entry></row><row><entry><codeph>results</codeph></entry><entry>Tableau vide.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:field"><apiName>field</apiName><shortdesc>
	  Nom du champ dont la validation a échoué et qui a déclenché l’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Nom du champ dont la validation a échoué et qui a déclenché l’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:results"><apiName>results</apiName><shortdesc>
	  Tableau d’objets ValidationResult (un par champ validé).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
	  Tableau d’objets ValidationResult (un par champ validé). 
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link></related-links></apiValue><apiValue id="mx.events:ValidationResultEvent:message:get"><apiName>message</apiName><shortdesc>
	  Chaîne unique contenant tous les messages d’erreur issus de tous les objets ValidationResult du tableau de résultats.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	  Chaîne unique contenant tous les messages d’erreur issus de tous les objets ValidationResult du tableau de résultats.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:NumericStepperEvent"><apiName>NumericStepperEvent</apiName><shortdesc>
  Représente les événements propres au contrôle NumericStepper.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les événements propres au contrôle NumericStepper.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#NumericStepper"><linktext>mx.controls.NumericStepper</linktext></link></related-links><adobeApiEvent id="mx.events:NumericStepperEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:NumericStepperEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:NumericStepperEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:NumericStepperEvent:NumericStepperEvent"><apiName>NumericStepperEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Valeur du contrôle NumericStepper au moment de la distribution de l’événement.
         
          </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Si la valeur a changé suite à une action entreprise par l’utilisateur, ce paramètre contient une valeur indiquant le type d’action entrée, c’est-à-dire soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:NumericStepperEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  La constante NumericStepperEvent.CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>NumericStepperEvent.CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>change</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Valeur du contrôle NumericStepper au moment de la distribution de l’événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:NumericStepperEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Si la valeur a changé suite à une action entreprise par l’utilisateur, cette propriété contient une valeur indiquant le type d’action entrée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Si la valeur a changé suite à une action entreprise par l’utilisateur, cette propriété contient une valeur indiquant le type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:NumericStepperEvent:value"><apiName>value</apiName><shortdesc>
	 Valeur du contrôle NumericStepper au moment de la distribution de l’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	 Valeur du contrôle NumericStepper au moment de la distribution de l’événement.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MenuEvent"><apiName>MenuEvent</apiName><shortdesc>
  La classe MenuEvent représente les événements associés à des activités de menu dans des contrôles tels que Menu, MenuBar et PopUpMenuButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:ListEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe MenuEvent représente les événements associés à des activités de menu dans des contrôles tels que Menu, MenuBar et PopUpMenuButton. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link></related-links><adobeApiEvent id="mx.events:MenuEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:MENU_HIDE_menuHide"><apiName>menuHide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:MENU_SHOW_menuShow"><apiName>menuShow</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MenuEvent:MenuEvent"><apiName>MenuEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>menuBar</apiItemName><apiOperationClassifier>mx.controls:MenuBar</apiOperationClassifier><apiData>null</apiData><apiDesc>Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou null si le contrôle Menu cible n’est pas apparenté à un contrôle MenuBar.
     
      </apiDesc></apiParam><apiParam><apiItemName>menu</apiItemName><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier><apiData>null</apiData><apiDesc>Occurrence Menu spécifique associée à l’événement, par exemple le menu ou sous-menu masqué ou ouvert. La valeur de cette propriété est null si un élément MenuBar distribue l’événement. 
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Elément correspondant à l’élément de navigation associé dans le fournisseur dataProvider.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Fonctionnalité de rendu ListItemRenderer de l’élément de menu associé.
     
      </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Texte du libellé de l’élément de menu associé.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de l’élément de menu associé dans le menu. 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur. Normalement appelé par l’objet Menu. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MenuEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      La constante de type d’événement MenuEvent.CHANGE indique que la sélection a changé suite à une interaction de l’utilisateur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type d’événement MenuEvent.CHANGE indique que la sélection a changé suite à une interaction de l’utilisateur.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Index de l’élément de menu sélectionné dans le menu.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Elément sélectionné dans le fournisseur dataProvider.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Fonctionnalité de rendu d’élément de l’élément de menu sélectionné.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Texte du libellé de l’élément de menu sélectionné.</entry></row><row><entry><codeph>menu</codeph></entry>
             <entry>Occurrence Menu spécifique associée à cet événement ou <codeph>null</codeph> si un élément MenuBar distribue l’événement.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou <codeph>null</codeph> si le contrôle Menu n’est pas apparenté à un contrôle MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
      La constante de type d’événement MenuEvent.ITEM_CLICK indique que l’utilisateur a sélectionné un élément de menu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type d’événement MenuEvent.ITEM_CLICK indique que l’utilisateur a sélectionné un élément de menu.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Index de l’élément de menu sélectionné dans le menu.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Elément sélectionné dans le fournisseur dataProvider.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Fonctionnalité de rendu ListItemRenderer de l’élément de menu sélectionné.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Texte du libellé de l’élément de menu sélectionné.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Occurrence Menu spécifique associée à cet événement ou <codeph>null</codeph> si un élément MenuBar distribue l’événement.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou <codeph>null</codeph> si le contrôle Menu n’est pas apparenté à un contrôle MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      La constante de type MenuEvent.ITEM_ROLL_OUT indique que le pointeur de la souris s’est éloigné d’un élément de menu après l’avoir survolé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type MenuEvent.ITEM_ROLL_OUT indique que le pointeur de la souris s’est éloigné d’un élément de menu après l’avoir survolé.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Index dans le menu de l’élément de menu qui a fait l’objet d’une sortie de survol.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Elément du fournisseur dataProvider correspondant à l’élément de menu qui a fait l’objet d’une sortie de survol.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Fonctionnalité de rendu ListItemRenderer de l’élément de menu qui a fait l’objet d’une sortie de survol.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Texte du libellé de l’élément de menu qui a fait l’objet d’une sortie de survol.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Occurrence Menu spécifique associée à cet événement ou <codeph>null</codeph> si un élément MenuBar distribue l’événement.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou <codeph>null</codeph> si le contrôle Menu n’est pas apparenté à un contrôle MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      La constante de type MenuEvent.ITEM_ROLL_OVER indique que le pointeur de la souris a survolé un élément de menu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type MenuEvent.ITEM_ROLL_OVER indique que le pointeur de la souris a survolé un élément de menu.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Index dans le menu de l’élément de menu survolé.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Elément associé à l’élément de navigation survolé dans le fournisseur dataProvider.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Fonctionnalité de rendu ListItemRenderer de l’élément de menu survolé.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Texte du libellé de l’élément de menu survolé.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Occurrence Menu spécifique associée à cet événement ou <codeph>null</codeph> si un élément MenuBar distribue l’événement.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou <codeph>null</codeph> si le contrôle Menu n’est pas apparenté à un contrôle MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:MENU_HIDE"><apiName>MENU_HIDE</apiName><shortdesc>
      La constante de type MenuEvent.MENU_HIDE indique qu’un menu ou un sous-menu s’est fermé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuHide</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type MenuEvent.MENU_HIDE indique qu’un menu ou un sous-menu s’est fermé.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>-1. Cette propriété n’est pas définie pour ce type d’événement. </entry></row><row><entry><codeph>item</codeph></entry>
             <entry>null. Cette propriété n’est pas définie pour ce type d’événement.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>null. Cette propriété n’est pas définie pour ce type d’événement.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>null. Cette propriété n’est pas définie pour ce type d’événement.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Occurrence Menu spécifique associée à cet événement ou <codeph>null</codeph> si un élément MenuBar distribue l’événement.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou <codeph>null</codeph> si le contrôle Menu n’est pas apparenté à un contrôle MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.MENU_HIDE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:MENU_SHOW"><apiName>MENU_SHOW</apiName><shortdesc>
      La constante de type MenuEvent.MENU_SHOW indique que le pointeur de la souris a survolé un menu ou un sous-menu ouvert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuShow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type MenuEvent.MENU_SHOW indique que le pointeur de la souris a survolé un menu ou un sous-menu ouvert.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>-1. Cette propriété n’est pas définie pour ce type d’événement.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>null. Cette propriété n’est pas définie pour ce type d’événement.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>null. Cette propriété n’est pas définie pour ce type d’événement.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry><codeph>null. Cette propriété n’est pas définie pour ce type d’événement.</codeph></entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Occurrence Menu spécifique associée à cet événement ou <codeph>null</codeph> si un élément MenuBar distribue l’événement.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou <codeph>null</codeph> si le contrôle Menu n’est pas apparenté à un contrôle MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.MENU_SHOW</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:index"><apiName>index</apiName><shortdesc>
      Index de l’élément de menu associé dans le menu ou sous-menu parent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de l’élément de menu associé dans le menu ou sous-menu parent. La valeur est -1 pour les événements menuShow et menuHide.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:item"><apiName>item</apiName><shortdesc>
      Elément spécifique dans le fournisseur dataProvider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Elément spécifique dans le fournisseur dataProvider. La valeur est null pour les événements menuShow et menuHide. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:label"><apiName>label</apiName><shortdesc>
      Texte du libellé de l’élément de menu associé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Texte du libellé de l’élément de menu associé. La valeur est null pour les événements menuShow et menuHide. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:menu"><apiName>menu</apiName><shortdesc>
      Occurrence Menu spécifique associée à l’événement, par exemple le menu ou sous-menu masqué ou ouvert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls:Menu</apiValueClassifier></apiValueDef><apiDesc>
      Occurrence Menu spécifique associée à l’événement, par exemple le menu ou sous-menu masqué ou ouvert. La valeur de cette propriété est null si un élément MenuBar distribue l’événement. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:menuBar"><apiName>menuBar</apiName><shortdesc>
      Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou null si le contrôle Menu cible n’est pas apparenté à un contrôle MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls:MenuBar</apiValueClassifier></apiValueDef><apiDesc>
      Occurrence MenuBar constituant le parent du contrôle Menu sélectionné ou null si le contrôle Menu cible n’est pas apparenté à un contrôle MenuBar.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
  La classe CloseEvent représente les objets d’événement propres aux fenêtres contextuelles, par exemple le contrôle Alert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe CloseEvent représente les objets d’événement propres aux fenêtres contextuelles, par exemple le contrôle Alert.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Alert"><linktext>mx.controls.Alert</linktext></link></related-links><adobeApiEvent id="mx.events:CloseEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CloseEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:CloseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CloseEvent:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Valeur de la propriété detail. Identifie le bouton sur lequel l’utilisateur a cliqué dans le contrôle contextuel.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CloseEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      La constante CloseEvent.CLOSE définit la valeur de la propriété type de l’objet d’événement d’un événement close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>CloseEvent.CLOSE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>close</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>detail</codeph></entry><entry>Dans le cas de contrôles comportant plusieurs boutons, <codeph>detail</codeph> identifie le bouton sur lequel l’utilisateur a cliqué dans le contrôle contextuel.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CloseEvent:detail"><apiName>detail</apiName><shortdesc>
      Identifie le bouton sur lequel l’utilisateur a cliqué dans le contrôle contextuel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Identifie le bouton sur lequel l’utilisateur a cliqué dans le contrôle contextuel. Cette propriété concerne les contrôles comportant plusieurs boutons. Le contrôle Alert définit cette propriété en utilisant l’une des constantes suivantes :
      <ul>
        <li><codeph>Alert.YES</codeph></li>
        <li><codeph>Alert.NO</codeph></li>
        <li><codeph>Alert.OK</codeph></li>
        <li><codeph>Alert.CANCEL</codeph></li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
  La classe ModuleEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements liés à des modules chargés de manière dynamique.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ModuleEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements liés à des modules chargés de manière dynamique. 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ModuleEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:SETUP_setup"><apiName>setup</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:SETUP</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:UNLOAD_unload"><apiName>unload</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:UNLOAD</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ModuleEvent:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement. Valeurs possibles :
      <ul>
         <li>« progress » (<codeph>ModuleEvent.PROGRESS</codeph>)</li>
         <li>« ready » (<codeph>ModuleEvent.READY</codeph>)</li>
         <li>« setup » (<codeph>ModuleEvent.SETUP</codeph>)</li>
         <li>« error » (<codeph>ModuleEvent.ERROR</codeph>)</li>
         <li>« unload » (<codeph>ModuleEvent.UNLOAD</codeph>)</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé pendant la propagation de l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre d’octets chargés lors du traitement de l’événement par l’écouteur.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Nombre total d’octets qui seront chargés si le processus de chargement aboutit.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Message d’erreur lorsque le type d’événement est <codeph>ModuleEvent.ERROR</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>module</apiItemName><apiOperationClassifier>mx.modules:IModuleInfo</apiOperationClassifier><apiData>null</apiData></apiParam><apiTipTexts><apiTipText>Constructeur des objets <codeph>ModuleEvent</codeph>.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ModuleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Distribué lorsqu’une erreur se produit lors du téléchargement du module.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsqu’une erreur se produit lors du téléchargement du module. La constante <codeph>ModuleEvent.ERROR</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>error</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Vide</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Vide</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Message d’erreur.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Distribué lorsque le module est en cours de téléchargement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsque le module est en cours de téléchargement. Le module est distribué à intervalle régulier pendant le processus de téléchargement. La constante <codeph>ModuleEvent.PROGRESS</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>progress</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Nombre d’octets chargés.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Nombre total d’octets à charger.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Vide</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:READY"><apiName>READY</apiName><shortdesc>
      Distribué lorsque le téléchargement du module est terminé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsque le téléchargement du module est terminé. La constante <codeph>ModuleEvent.READY</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>complete</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Nombre d’octets chargés.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Nombre total d’octets à charger.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Vide</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:SETUP"><apiName>SETUP</apiName><shortdesc>
      Distribué lorsque le téléchargement d’un module est suffisamment avancé qu’il est possible d’obtenir des informations sur le module.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setup</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsque le téléchargement d’un module est suffisamment avancé qu’il est possible d’obtenir des informations sur le module. Pour ce faire, appelez la méthode <codeph>IFlexModuleFactory.info()</codeph> sur le module. La constante <codeph>ModuleEvent.SETUP</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>setup</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Vide</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Vide</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Message d’erreur.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:UNLOAD"><apiName>UNLOAD</apiName><shortdesc>
      Distribué lorsque le module est déchargé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Distribué lorsque le module est déchargé. La constante <codeph>ModuleEvent.UNLOAD</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>unload</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Vide</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Vide</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Message d’erreur.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Message d’erreur si le type est ModuleEvent.ERROR, null dans le cas contraire.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Message d’erreur si le type est <codeph>ModuleEvent.ERROR</codeph>, <codeph>null</codeph> dans le cas contraire.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:module:get"><apiName>module</apiName><shortdesc>
      Elément target, qui est une occurrence d’une interface d’un module particulier.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.modules:IModuleInfo</apiValueClassifier></apiValueDef><apiDesc>
      Elément <codeph>target</codeph>, qui est une occurrence d’une interface d’un module particulier.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
  Il s’agit d’un événement envoyé entre les domaines ApplicationDomain pour indiquer aux écouteurs approuvés qu’une activité a eu lieu dans un gestionnaire particulier.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Il s’agit d’un événement envoyé entre les domaines ApplicationDomain pour indiquer aux écouteurs approuvés qu’une activité a eu lieu dans un gestionnaire particulier.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterManagerRequest:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nom d’une propriété ou d’une méthode, ou nom d’un gestionnaire à instancier.
     	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Valeur d’une propriété ou tableau de paramètres d’une méthode (si la valeur n’est pas null).
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur. Il ne retourne rien, mais la propriété <codeph>value</codeph> peut être modifiée de manière à représenter la valeur de retour d’une méthode.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterManagerRequest:CURSOR_MANAGER_REQUEST"><apiName>CURSOR_MANAGER_REQUEST</apiName><shortdesc>
      Les communications entre des classes CursorManager utilisent ce type de demande.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Les communications entre des classes CursorManager utilisent ce type de demande. La propriété <codeph>name</codeph> est le nom d’une propriété de la classe CursorManager. La propriété <codeph>value</codeph> est la valeur de cette propriété.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:DRAG_MANAGER_REQUEST"><apiName>DRAG_MANAGER_REQUEST</apiName><shortdesc>
      Les communications entre des classes DragManager utilisent ce type de demande.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Les communications entre des classes DragManager utilisent ce type de demande. La propriété <codeph>name</codeph> est le nom d’une propriété de la classe DragManager. La propriété <codeph>value</codeph> est la valeur de cette propriété.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:INIT_MANAGER_REQUEST"><apiName>INIT_MANAGER_REQUEST</apiName><shortdesc>
      Demande à l’autre domaine ApplicationDomain d’instancier un gestionnaire dans ce domaine ApplicationDomain (s’il n’est pas déjà instancié), de sorte qu’il soit disponible pour écouter les classes InterManagerRequest suivantes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Demande à l’autre domaine ApplicationDomain d’instancier un gestionnaire dans ce domaine ApplicationDomain (s’il n’est pas déjà instancié), de sorte qu’il soit disponible pour écouter les classes InterManagerRequest suivantes. La propriété <codeph>name</codeph> est le nom du gestionnaire à instancier.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:SYSTEM_MANAGER_REQUEST"><apiName>SYSTEM_MANAGER_REQUEST</apiName><shortdesc>
      Demande à la classe SystemManager de réaliser une action.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>systemManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Demande à la classe SystemManager de réaliser une action. La propriété <codeph>name</codeph> est le nom d’une action à réaliser. La propriété <codeph>value</codeph> est la valeur nécessaire pour réaliser cette action.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:TOOLTIP_MANAGER_REQUEST"><apiName>TOOLTIP_MANAGER_REQUEST</apiName><shortdesc>
      Les communications entre des classes ToolTipManager utilisent ce type de demande.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tooltipManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Les communications entre des classes ToolTipManager utilisent ce type de demande. La propriété <codeph>name</codeph> est le nom d’une propriété de la classe ToolTipManager. La propriété <codeph>value</codeph> est la valeur de cette propriété.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:name"><apiName>name</apiName><shortdesc>
      Nom d’une propriété, d’une méthode ou d’un gestionnaire à instancier.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Nom d’une propriété, d’une méthode ou d’un gestionnaire à instancier.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:value"><apiName>value</apiName><shortdesc>
      Valeur de la propriété ou tableau de paramètres de la méthode.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Valeur de la propriété ou tableau de paramètres de la méthode.		
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:Request"><apiName>Request</apiName><shortdesc>
  Il s’agit d’un événement qui attend de ses propriétés de données qu’elles soient définies par un écouteur répondant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Il s’agit d’un événement qui attend de ses propriétés de données qu’elles soient définies par un écouteur répondant.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:Request:Request"><apiName>Request</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Nom d’une propriété ou d’une méthode, ou nom d’un gestionnaire à instancier.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur. Il ne retourne rien, mais la propriété <codeph>value</codeph> peut être modifiée de manière à représenter la valeur de retour d’une méthode.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:Request:GET_FLEX_MODULE_FACTORY_REQUEST"><apiName>GET_FLEX_MODULE_FACTORY_REQUEST</apiName><shortdesc>
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getFlexModuleFactoryRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
        
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:Request:value"><apiName>value</apiName><shortdesc>
      Valeur de la propriété ou tableau de paramètres de la méthode.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Valeur de la propriété ou tableau de paramètres de la méthode.       
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
  Evénement envoyé entre des applications par le biais du répartiteur sharedEvents reliant les fichiers SWF de deux applications.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Evénement envoyé entre des applications par le biais du répartiteur sharedEvents reliant les fichiers SWF de deux applications. L’événement décrit une demande forçant l’écouteur de l’autre fichier SWF à réaliser une action sur les objets de son fichier SWF et à renvoyer éventuellement des données au fichier SWF de distribution. Contrairement aux événements courants, les classes SWFBridgeRequest constituent une exception vis-à-vis du modèle d’événement, car les propriétés de l’événement sont modifiées de manière à renvoyer des données vers le fichier SWF de distribution.
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.xml#LoaderInfo/sharedEvents"><linktext>flash.display.LoaderInfo.sharedEvents</linktext></link></related-links><apiConstructor id="mx.events:SWFBridgeRequest:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>requestor</apiItemName><apiType value="flash.events:IEventDispatcher"/><apiData>null</apiData><apiDesc>Pont envoyant le message.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Données associées à l’événement.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeRequest:marshal"><apiName>marshal</apiName><shortdesc>
      Sérialise une classe SWFBridgeRequest à partir d’un domaine ApplicationDomain distant vers le domaine ApplicationDomain actuel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Classe SWFBridgeRequest créée dans le domaine ApplicationDomain de l’appelant.
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Classe SWFBridgeRequest éventuellement créée dans un autre domaine ApplicationDomain.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Sérialise une classe SWFBridgeRequest à partir d’un domaine ApplicationDomain distant vers le domaine ApplicationDomain actuel.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_FOCUS_REQUEST"><apiName>ACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  Envoyée à partir d’un gestionnaire de focus de niveau supérieur vers des gestionnaires de focus subordonnés, de sorte que tous les gestionnaires de focus impliqués dans une boucle de tabulation soient activés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Envoyée à partir d’un gestionnaire de focus de niveau supérieur vers des gestionnaires de focus subordonnés, de sorte que tous les gestionnaires de focus impliqués dans une boucle de tabulation soient activés.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_POP_UP_REQUEST"><apiName>ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
      Demande l’activation de la fenêtre contextuelle d’une application enfant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Demande l’activation de la fenêtre contextuelle d’une application enfant. Cette demande est envoyée par une classe SystemManager de niveau supérieur vers une classe SystemManager enfant par le biais du pont. La propriété <codeph>data</codeph> contient l’identificateur de la fenêtre contextuelle. Il ne s’agit pas toujours d’une référence réelle à la fenêtre contextuelle. Aucune donnée n’est retournée.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_PLACE_HOLDER_REQUEST"><apiName>ADD_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  Ajoute un espace réservé pour une fenêtre contextuelle hébergée par une classe SystemManager enfant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Ajoute un espace réservé pour une fenêtre contextuelle hébergée par une classe SystemManager enfant. La fenêtre contextuelle n’étant pas approuvée, elle doit rester hébergée par une classe enfant qui l’approuve. Un espace réservé est envoyé à la classe SystemManager racine de niveau supérieur, de sorte que l’activation et la désactivation de toutes les fenêtres contextuelles puissent être gérées à cet endroit.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_REQUEST"><apiName>ADD_POP_UP_REQUEST</apiName><shortdesc>
	  Ajoute une fenêtre contextuelle à l’application ciblée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Ajoute une fenêtre contextuelle à l’application ciblée. La demande n’est pas honorée par l’application ciblée, sauf si les applications de distribution et de réception sont mutuellement approuvées.
	  
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CAN_ACTIVATE_POP_UP_REQUEST"><apiName>CAN_ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
	  Vérifie si une fenêtre contextuelle donnée peut être activée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>canActivateRequestPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Vérifie si une fenêtre contextuelle donnée peut être activée. Si une fenêtre contextuelle n’est pas visible ou activée, elle ne peut pas être activée. Ce message est toujours envoyé par la classe SystemManager de niveau supérieur vers la classe SystemManager propriétaire de la fenêtre contextuelle, par le biais du pont. La propriété <codeph>data</codeph> est un identificateur de la fenêtre contextuelle. Il ne s’agit pas toujours d’une référence réelle à la fenêtre contextuelle. La classe SystemManager de réception définit la propriété <codeph>data</codeph> de la demande sur <codeph>true</codeph> si la fenêtre contextuelle peut être activée. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CREATE_MODAL_WINDOW_REQUEST"><apiName>CREATE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Crée une fenêtre modale.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>createModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Crée une fenêtre modale. La propriété <codeph>show</codeph> peut être utilisée pour afficher la fenêtre modale après sa création. La valeur <codeph>true</codeph> affiche la fenêtre modale. La valeur <codeph>false</codeph> conserve la fenêtre modale masquée, jusqu’à ce qu’une demande <codeph>ModalWindowRequest.SHOW</codeph> soit distribuée. La propriété <codeph>data</codeph> peut être associée à un objet Rectangle décrivant la zone à exclure de la fenêtre modale. Les coordonnées de l’objet Rectangle sont des coordonnées globales. Le paramètre est présent uniquement lorsque le destinataire de la demande est approuvé pour le demandeur.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_FOCUS_REQUEST"><apiName>DEACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  Envoyée à partir d’un gestionnaire de focus de niveau supérieur vers des gestionnaires de focus subordonnés, de sorte que tous les gestionnaires de focus impliqués dans une boucle de tabulation soient désactivés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Envoyée à partir d’un gestionnaire de focus de niveau supérieur vers des gestionnaires de focus subordonnés, de sorte que tous les gestionnaires de focus impliqués dans une boucle de tabulation soient désactivés.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_POP_UP_REQUEST"><apiName>DEACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
          Demande la désactivation de la fenêtre contextuelle d’une application enfant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
          Demande la désactivation de la fenêtre contextuelle d’une application enfant. Cette demande est envoyée par une classe SystemManager enfant vers la classe SystemManager de niveau supérieur par le biais du pont. La propriété data contient un identificateur de la fenêtre contextuelle. Il ne s’agit pas toujours d’une référence réelle à la fenêtre contextuelle. Aucune donnée n’est retournée.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_SIZE_REQUEST"><apiName>GET_SIZE_REQUEST</apiName><shortdesc>
	  Obtient la taille de la classe SystemManager enfant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Obtient la taille de la classe SystemManager enfant. Distribuée par le contrôle SWFLoader vers la classe SystemManager enfant pour obtenir la taille de son contenu. La classe SystemManager enfant met à jour les propriétés <codeph>width</codeph> et <codeph>height</codeph> dans l’objet d’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_VISIBLE_RECT_REQUEST"><apiName>GET_VISIBLE_RECT_REQUEST</apiName><shortdesc>
      Demande à la classe SystemManager parent de calculer la partie visible du fichier SWF demandeur, en fonction des éventuels objets DisplayObject susceptibles d’écrêter le fichier SWF demandeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getVisibleRectRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Demande à la classe SystemManager parent de calculer la partie visible du fichier SWF demandeur, en fonction des éventuels objets DisplayObject susceptibles d’écrêter le fichier SWF demandeur. Les demandes sont envoyées vers une classe SystemManager parent par le biais du pont. Les résultats sont retournés dans la propriété <codeph>data</codeph>, qui est un objet Rectangle associé à des coordonnées globales.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MODAL_WINDOW_REQUEST"><apiName>HIDE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Masque une fenêtre modale.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Masque une fenêtre modale. La propriété <codeph>remove</codeph> détermine si la fenêtre modale est supprimée des listes d’affichage et masquée. La valeur <codeph>true</codeph> supprime la fenêtre modale. La valeur <codeph>false</codeph> masque la fenêtre modale. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MOUSE_CURSOR_REQUEST"><apiName>HIDE_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Demande de masquer le pointeur de la souris lorsqu’il survole cette application.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Demande de masquer le pointeur de la souris lorsqu’il survole cette application. Cette demande est envoyée au pont partagé avec l’application parent et propagée vers le haut, jusqu’à la racine de niveau supérieur. La propriété <codeph>data</codeph> n’est pas utilisée.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:INVALIDATE_REQUEST"><apiName>INVALIDATE_REQUEST</apiName><shortdesc>
	  Demande au chargeur de l’application actuelle d’invalider ses propriétés, sa taille ou sa liste d’affichage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalidateRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Demande au chargeur de l’application actuelle d’invalider ses propriétés, sa taille ou sa liste d’affichage. Cette demande est envoyée par une classe SystemManager vers sa classe SystemManager parent. La propriété <codeph>data</codeph> est une combinaison d’indicateurs InvalidationRequestData. Aucune donnée n’est retournée.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:IS_BRIDGE_CHILD_REQUEST"><apiName>IS_BRIDGE_CHILD_REQUEST</apiName><shortdesc>
	  Vérifie si un objet DisplayObject donné est l’enfant d’un fichier SWF ou l’un de ses fichiers SWF enfant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>isBridgeChildRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Vérifie si un objet DisplayObject donné est l’enfant d’un fichier SWF ou l’un de ses fichiers SWF enfant. Cette demande est envoyée par une classe SystemManager vers une ou plusieurs classes SystemManager enfant, par le biais de leurs ponts. La propriété <codeph>data</codeph> est une référence à l’objet DisplayObject. La classe SystemManager de réception définit la propriété <codeph>data</codeph> de la demande sur <codeph>true</codeph> si l’objet DisplayObject est un enfant du fichier SWF ou l’un de ses fichiers SWF enfant. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:MOVE_FOCUS_REQUEST"><apiName>MOVE_FOCUS_REQUEST</apiName><shortdesc>
	  Demande à déplacer le focus vers une autre classe FocusManager et demande à cette classe de donner le focus à un contrôle qu’elle gère, en fonction de la propriété direction de l’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>moveFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Demande à déplacer le focus vers une autre classe FocusManager et demande à cette classe de donner le focus à un contrôle qu’elle gère, en fonction de la propriété <codeph>direction</codeph> de l’événement. Lorsque le focus est replacé vers la classe FocusManager des fichiers SWF parent, la propriété <codeph>direction</codeph> est définie sur <codeph>FocusDirection.FORWARD</codeph> ou <codeph>FocusDirection.BACKWARD</codeph>. Lorsque le focus est replacé vers la classe FocusManager des fichiers SWF parent, la propriété <codeph>direction</codeph> est définie sur <codeph>FocusDirection.TOP</codeph> ou <codeph>FocusDirection.BOTTOM</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_PLACE_HOLDER_REQUEST"><apiName>REMOVE_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  Supprime un espace réservé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Supprime un espace réservé.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_REQUEST"><apiName>REMOVE_POP_UP_REQUEST</apiName><shortdesc>
	  Supprime une fenêtre contextuelle de la classe SystemManager de l’attribut sandboxRoot.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Supprime une fenêtre contextuelle de la classe SystemManager de l’attribut sandboxRoot.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:RESET_MOUSE_CURSOR_REQUEST"><apiName>RESET_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Demande de réinitialiser la logique afficher/masquer du pointeur de la souris pour un nouvel événement de souris, de sorte que les différentes applications puissent demander si le pointeur doit être masqué ou affiché.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resetMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Demande de réinitialiser la logique afficher/masquer du pointeur de la souris pour un nouvel événement de souris, de sorte que les différentes applications puissent demander si le pointeur doit être masqué ou affiché. Cette demande est envoyée au pont partagé avec l’application parent et propagée vers le haut, jusqu’à la racine de niveau supérieur. La propriété data n’est pas utilisée.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_ACTUAL_SIZE_REQUEST"><apiName>SET_ACTUAL_SIZE_REQUEST</apiName><shortdesc>
	  Définit la taille de l’objet child.systemManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setActualSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Définit la taille de l’objet <codeph>child.systemManager</codeph>. Distribuée par le contrôle SWFLoader à la classe SystemManager. La classe SystemManager enfant met normalement à jour la taille de ses enfants en fonction des propriétés <codeph>width</codeph> et <codeph>height</codeph> de l’objet d’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_SHOW_FOCUS_INDICATOR_REQUEST"><apiName>SET_SHOW_FOCUS_INDICATOR_REQUEST</apiName><shortdesc> 
      Définit la valeur de la propriété showFocusIndicator de la classe FocusManager de chaque application.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setShowFocusIndicatorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Définit la valeur de la propriété showFocusIndicator de la classe FocusManager de chaque application. La propriété data est une valeur booléenne contenant la valeur sur laquelle la propriété showFocusIndicator sera définie. Cette demande est initialement envoyée par la classe FocusManager dont la propriété showFocusIndicator est définie. La demande est ensuite relayée vers chaque classe FocusManager du système.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MODAL_WINDOW_REQUEST"><apiName>SHOW_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Affiche une fenêtre modale.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Affiche une fenêtre modale. La propriété <codeph>skip</codeph> est utilisée avec cette demande. La valeur <codeph>true</codeph> indique que le destinataire doit simplement faire suivre la demande le long de la chaîne de parents, sans la traiter. La propriété <codeph>data</codeph> peut être associée à un objet Rectangle décrivant la zone à exclure, en fonction du parent actuel. Les coordonnées sont des coordonnées d’écran. Le paramètre est présent uniquement lorsque le destinataire du message fait partie des destinataires approuvés du demandeur.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MOUSE_CURSOR_REQUEST"><apiName>SHOW_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Demande à la racine de niveau supérieur si le pointeur de la souris doit être masqué, étant donné sa position actuelle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Demande à la racine de niveau supérieur si le pointeur de la souris doit être masqué, étant donné sa position actuelle. Envoyée au pont partagé avec l’application parent et propagée vers le haut, jusqu’à la racine de niveau supérieur. La valeur de la propriété data est true si le pointeur de la souris doit être affiché à cette position.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:data"><apiName>data</apiName><shortdesc>
	  Données associées à l’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Données associées à l’événement. Pour plus d’informations sur la manière dont cet objet peut être utilisé, voir chaque type d’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:requestor"><apiName>requestor</apiName><shortdesc>
	  Pont envoyant le message.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:IEventDispatcher"/></apiValueDef><apiDesc>
	  Pont envoyant le message. Cette propriété est utilisée par le fichier SWF de réception pour savoir quelle classe SWFLoader détient le fichier SWF demandeur.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DataGridEvent"><apiName>DataGridEvent</apiName><shortdesc>
   La classe DataGridEvent représente les objets d’événement propres au contrôle DataGrid, par exemple l’événement distribué lorsqu’un élément de grille modifiable obtient le focus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
   La classe DataGridEvent représente les objets d’événement propres au contrôle DataGrid, par exemple l’événement distribué lorsqu’un élément de grille modifiable obtient le focus.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DataGrid"><linktext>mx.controls.DataGrid</linktext></link></related-links><adobeApiEvent id="mx.events:DataGridEvent:COLUMN_STRETCH_columnStretch"><apiName>columnStretch</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:COLUMN_STRETCH</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:HEADER_RELEASE_headerRelease"><apiName>headerRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:HEADER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDITOR_CREATE_itemEditorCreate"><apiName>itemEditorCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDITOR_CREATE</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DataGridEvent:DataGridEvent"><apiName>DataGridEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de base zéro de la colonne dans laquelle l’événement s’est produit.
     
      </apiDesc></apiParam><apiParam><apiItemName>dataField</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc> Nom du champ ou de la propriété des données associées à la colonne.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de base zéro de l’élément dans le fournisseur de données.
     
      </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Cause d’un événement <codeph>itemEditEnd</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Fonctionnalité de rendu d’élément en cours de modification ou fonctionnalité de rendu d’en-tête sur laquelle l’utilisateur a cliqué.
     
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Position de la colonne sur l’axe X pour la réexécution des événements <codeph>columnStretch</codeph>.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur. Normalement appelé par l’objet DataGrid et non utilisé dans le code de l’application.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DataGridEvent:COLUMN_STRETCH"><apiName>COLUMN_STRETCH</apiName><shortdesc>
      La constante DataGridEvent.COLUMN_STRETCH définit la valeur de la propriété type de l’objet d’événement d’un événement columnStretch, qui indique qu’un utilisateur a élargi une colonne horizontalement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>columnStretch</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.COLUMN_STRETCH définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>columnStretch</codeph>, qui indique qu’un utilisateur a élargi une colonne horizontalement.
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Nom du champ ou de la propriété des données associées à la colonne.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>null</entry></row><row><entry><codeph>localX</codeph></entry><entry>Position x de la souris</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément dans le fournisseur de données.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.COLUMN_STRETCH</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:HEADER_RELEASE"><apiName>HEADER_RELEASE</apiName><shortdesc>
      La constante DataGridEvent.HEADER_RELEASE définit la valeur de la propriété type de l’objet d’événement d’un événement headerRelease, qui indique que l’utilisateur a appuyé sur le bouton de la souris alors qu’il survolait un en-tête de colonne, puis relâché le bouton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headerRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.HEADER_RELEASE définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>headerRelease</codeph>, qui indique que l’utilisateur a appuyé sur le bouton de la souris alors qu’il survolait un en-tête de colonne, puis relâché le bouton.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Nom du champ ou de la propriété des données associées à la colonne.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu d’en-tête en cours de publication.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.HEADER_RELEASE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDITOR_CREATE"><apiName>ITEM_EDITOR_CREATE</apiName><shortdesc>
      La constante DataGridEvent.ITEM_EDITOR_CREATE définit la valeur de la propriété type de l’objet événement pour un événement itemEditorCreate, ce qui indique que l’objet datagrid a terminé la création de l’éditeur d’élément. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditorCreate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.ITEM_EDITOR_CREATE définit la valeur de la propriété <codeph>type</codeph> de l’objet événement pour un événement <codeph>itemEditorCreate</codeph>, ce qui indique que l’objet datagrid a terminé la création de l’éditeur d’élément.
     
      <p>Il n’existe aucun écouteur par défaut pour cet événement.</p>
     
      <p>En règle générale, vous écrivez votre propre écouteur d’événement pour cet événement pour autoriser l’apport de modifications personnalisées à l’objet <codeph>itemEditor</codeph> avant que l’utilisateur ne commence la modification.</p>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>null</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément dans le fournisseur de données.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDITOR_CREATE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_BEGIN"><apiName>ITEM_EDIT_BEGIN</apiName><shortdesc>
      La constante DataGridEvent.ITEM_EDIT_BEGIN définit la valeur de la propriété type de l’objet d’événement d’un événement itemEditBegin, qui indique qu’un élément est sur le point d’être modifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBegin</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.ITEM_EDIT_BEGIN définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>itemEditBegin</codeph>, qui indique qu’un élément est sur le point d’être modifié. 
     
      <p>L’écouteur par défaut de cet événement réalise les actions suivantes :</p>
     
      <ul>
        <li>Crée un objet d’éditeur d’éléments en appelant la méthode <codeph>createItemEditor()</codeph>.</li>
        <li>Copie la propriété <codeph>data</codeph> de l’élément vers l’éditeur. Par défaut, l’objet d’éditeur d’éléments est une occurrence du contrôle TextInput. Utilisez la propriété <codeph>itemEditor</codeph> du contrôle de liste pour spécifier une classe d’éditeur d’éléments personnalisé.</li>
     
        <li>Définissez la propriété <codeph>itemEditorInstance</codeph> du contrôle de liste de sorte qu’elle fasse référence à l’occurrence d’éditeur d’éléments.</li>
      </ul>
     
      <p>Vous pouvez écrire un écouteur d’événement pour cet événement, afin de modifier les données transmises à l’éditeur d’éléments. Vous pouvez par exemple modifier les données, le format ou toute autre information utilisée par l’éditeur d’éléments.</p>
     
      <p>Vous pouvez également créer un écouteur d’événement pour spécifier l’éditeur d’éléments utilisé pour modifier l’élément. Par exemple, vous pouvez disposer de deux éditeurs d’élément différents. Dans l’écouteur d’événement, vous pouvez examiner les données à modifier et d’autres informations et ouvrir l’éditeur d’éléments approprié en suivant la procédure ci-dessous :</p>
     
      <ol>
         <li>Appelez <codeph>preventDefault()</codeph> pour que Flex arrête d’appeler la méthode <codeph>createItemEditor()</codeph> dans le cadre de l’écouteur d’événement par défaut.</li>
         <li>Définissez la propriété <codeph>itemEditor</codeph> sur l’éditeur approprié.</li>
         <li>Appelez la méthode <codeph>createItemEditor()</codeph>.</li>
      </ol>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu de l’élément en cours de modification.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément dans le fournisseur de données.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_BEGINNING"><apiName>ITEM_EDIT_BEGINNING</apiName><shortdesc>
      La constante DataGridEvent.ITEM__EDIT_BEGINNING définit la valeur de la propriété type de l’objet d’événement d’un événement itemEditBeginning, qui indique que l’utilisateur s’est préparé à modifier un élément, par exemple en relâchant le bouton de la souris sur l’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBeginning</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.ITEM__EDIT_BEGINNING définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>itemEditBeginning</codeph>, qui indique que l’utilisateur s’est préparé à modifier un élément, par exemple en relâchant le bouton de la souris sur l’élément. 
     
      <p>L’écouteur par défaut de cet événement définit la propriété <codeph>DataGrid.editedItemPosition</codeph> sur l’élément qui a le focus, qui démarre la session de modification d’élément.</p>
     
      <p>En règle générale, vous écrivez votre propre écouteur d’événement pour cet événement afin d’empêcher la modification d’un ou de plusieurs éléments. Le fait d’appeler la méthode <codeph>preventDefault()</codeph> à partir de votre propre écouteur d’événement pour cet événement empêche l’exécution de l’écouteur par défaut.</p>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Nom du champ ou de la propriété des données associées à la colonne de l’élément.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu de l’élément qui sera modifié. La valeur de cette propriété est null si cet événement est généré par le clavier, car l’élément à modifier peut être hors écran.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément dans le fournisseur de données.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_BEGINNING</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_END"><apiName>ITEM_EDIT_END</apiName><shortdesc>
      La constante DataGridEvent.ITEM_EDIT_END définit la valeur de la propriété type de l’objet d’événement d’un événement itemEditEnd, qui indique qu’une session de modification se termine.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.ITEM_EDIT_END définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>itemEditEnd</codeph>, qui indique qu’une session de modification se termine.  
     
      <p>Les composants de liste disposent d’un gestionnaire par défaut pour cet événement, qui copie les données de l’éditeur d’éléments vers le fournisseur de données du contrôle de liste. L’écouteur d’événement par défaut réalise les actions suivantes :</p>
     
      <ul>
        <li>Utilise la propriété <codeph>editorDataField</codeph> de la classe DataGridColumn associée à cet événement pour déterminer la propriété de l’éditeur d’éléments contenant les nouvelles données et met à jour l’élément du fournisseur de données en utilisant ces nouvelles données. L’éditeur d’éléments par défaut étant le contrôle TextInput, la valeur par défaut de la propriété <codeph>editorDataField</codeph> est <codeph>"text"</codeph>, pour indiquer que la propriété <codeph>text</codeph> du contrôle TextInput contient les nouvelles données d’élément.</li>
     
        <li>Appelle la méthode <codeph>destroyItemEditor()</codeph> pour fermer l’éditeur d’éléments.</li>
      </ul>
     
      <p>En général, le fait d’écrire un écouteur d’événement permet à cet événement de réaliser les actions suivantes :</p>
      <ul>
        <li>Dans l’écouteur d’événement, vous pouvez modifier les données retournées par l’éditeur vers le composant de liste. Vous pouvez par exemple formater à nouveau les données avant de les renvoyer vers le contrôle de liste. Par défaut, un éditeur d’éléments peut seulement renvoyer une valeur unique. Vous devez écrire un écouteur d’événement pour l’événement <codeph>itemEditEnd</codeph> si vous souhaitez renvoyer plusieurs valeurs.</li> 
     
        <li>Dans l’écouteur d’événement, vous pouvez examiner les données saisies dans l’éditeur d’éléments. Si les données ne sont pas correctes, vous pouvez appeler la méthode <codeph>preventDefault()</codeph> pour empêcher Flex de transmettre les nouvelles données au contrôle de liste et de fermer l’éditeur. </li>
      </ul>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Nom du champ ou de la propriété des données associées à la colonne de l’élément.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu de l’élément en cours de modification.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>Constante qui justifie l’événement. La valeur doit être membre de la classe <codeph>DataGridEventReason</codeph>.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément dans le fournisseur de données.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_END</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_FOCUS_IN"><apiName>ITEM_FOCUS_IN</apiName><shortdesc>
      La constante DataGridEvent.ITEM_FOCUS_IN définit la valeur de la propriété type de l’objet d’événement d’un événement itemFocusIn, qui indique qu’un élément a reçu le focus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.ITEM_FOCUS_IN définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>itemFocusIn</codeph>, qui indique qu’un élément a reçu le focus. 
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Occurrence d’éditeur d’éléments de l’élément en cours de modification.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément dans le fournisseur de données.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_FOCUS_IN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_FOCUS_OUT"><apiName>ITEM_FOCUS_OUT</apiName><shortdesc>
      La constante DataGridEvent.ITEM_FOCUS_OUT définit la valeur de la propriété type de l’objet d’événement d’un événement itemFocusOut, qui indique qu’un élément a perdu le focus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante DataGridEvent.ITEM_FOCUS_OUT définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>itemFocusOut</codeph>, qui indique qu’un élément a perdu le focus. 
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne de l’élément dans le tableau <codeph>columns</codeph> de l’objet DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Occurrence d’éditeur d’éléments de l’élément en cours de modification.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément dans le fournisseur de données.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_FOCUS_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      Index de base zéro de la colonne associée à l’événement dans le tableau de colonnes de l’objet DataGrid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de base zéro de la colonne associée à l’événement dans le tableau <codeph>columns</codeph> de l’objet DataGrid.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:dataField"><apiName>dataField</apiName><shortdesc>
      Nom du champ ou de la propriété des données associées à la colonne.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Nom du champ ou de la propriété des données associées à la colonne.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Fonctionnalité de rendu de l’élément en cours de modification ou rendu d’en-tête qui est agrandi ou qui fait l’objet d’un clic de souris.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Fonctionnalité de rendu de l’élément en cours de modification ou rendu d’en-tête qui est agrandi ou qui fait l’objet d’un clic de souris. Vous pouvez accéder à l’élément du fournisseur de données à l’aide de cette propriété. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:localX"><apiName>localX</apiName><shortdesc>
      Position x de la colonne, utilisée pour réexécuter des événements d’extension de colonne.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Position x de la colonne, utilisée pour réexécuter des événements d’extension de colonne.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:reason"><apiName>reason</apiName><shortdesc>
      Cause de la distribution de l’événement itemEditEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Cause de la distribution de l’événement <codeph>itemEditEnd. </codeph> Valide uniquement pour les événements de type <codeph>ITEM_EDIT_END</codeph>. Les valeurs possibles sont définies dans la classe DataGridEventReason.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DataGridEventReason"><linktext>DataGridEventReason</linktext></link></related-links></apiValue><apiValue id="mx.events:DataGridEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Index de base zéro de l’élément dans le fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de base zéro de l’élément dans le fournisseur de données.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
  La classe BrowserChangeEvent représente les objets d’événement propres à la classe BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe BrowserChangeEvent représente les objets d’événement propres à la classe BrowserManager.
 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE_applicationURLChange"><apiName>applicationURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE_browserURLChange"><apiName>browserURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:URL_CHANGE_urlChange"><apiName>urlChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:BrowserChangeEvent:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>URL actuelle dans le navigateur.
      
      </apiDesc></apiParam><apiParam><apiItemName>lastURL</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>URL précédente dans le navigateur.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE"><apiName>APPLICATION_URL_CHANGE</apiName><shortdesc>
      La constante BrowserChangeEvent.APPLICATION_URL_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement applicationURLChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>BrowserChangeEvent.APPLICATION_URL_CHANGE</codeph> définit la valeur de la propriété <codeph>type de l’objet</codeph> d’événement d’un événement <codeph>applicationURLChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Valeur précédente de la propriété <codeph>url</codeph> de la classe BrowserManager.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>url</codeph></entry><entry>Nouvelle valeur de la propriété <codeph>url</codeph> de la classe BrowserManager.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE"><apiName>BROWSER_URL_CHANGE</apiName><shortdesc>
      La constante BrowserChangeEvent.BROWSER_URL_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement browserURLChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>browserURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>BrowserChangeEvent.BROWSER_URL_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>browserURLChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Valeur précédente de la propriété <codeph>url</codeph> de la classe BrowserManager.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>url</codeph></entry><entry>Nouvelle valeur de la propriété <codeph>url</codeph> de la classe BrowserManager.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:URL_CHANGE"><apiName>URL_CHANGE</apiName><shortdesc>
      La constante BrowserChangeEvent.URL_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement urlChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>BrowserChangeEvent.URL_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>urlChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Valeur précédente de la propriété <codeph>url</codeph> de la classe BrowserManager.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>url</codeph></entry><entry>Nouvelle valeur de la propriété <codeph>url</codeph> de la classe BrowserManager.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:lastURL"><apiName>lastURL</apiName><shortdesc>
      Valeur précédente de la propriété url de la classe BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Valeur précédente de la propriété <codeph>url</codeph> de la classe BrowserManager.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:url"><apiName>url</apiName><shortdesc>
      Nouvelle valeur de la propriété url de la classe BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Nouvelle valeur de la propriété <codeph>url</codeph> de la classe BrowserManager.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CuePointEvent"><apiName>CuePointEvent</apiName><shortdesc>
  La classe CuePointEvent représente l’objet d’événement transmis à l’écouteur d’événement pour différents événements de point de repère distribués par le contrôle VideoDisplay.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe CuePointEvent représente l’objet d’événement transmis à l’écouteur d’événement pour différents événements de point de repère distribués par le contrôle VideoDisplay.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:CuePointEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CuePointEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events:CuePointEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CuePointEvent:CuePointEvent"><apiName>CuePointEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nom du point de repère.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Position du point de repère, en secondes.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Chaîne <codeph>"actionscript"</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CuePointEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
	  La constante CuePointEvent.CUE_POINT définit la valeur de la propriété type de l’objet d’événement d’un événement cuePoint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>CuePointEvent.CUE_POINT</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>cuePoint</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>cuePointName</codeph></entry><entry>Nom du point de repère.</entry></row><row><entry><codeph>cuePointTime</codeph></entry><entry>Position du point de repère, en secondes.</entry></row><row><entry><codeph>cuePointType</codeph></entry><entry>Chaîne <codeph>"actionscript"</codeph>.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointName"><apiName>cuePointName</apiName><shortdesc>
	  Nom du point de repère à l’origine de l’événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Nom du point de repère à l’origine de l’événement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointTime"><apiName>cuePointTime</apiName><shortdesc>
	  Position du point de repère à l’origine de l’événement, en secondes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Position du point de repère à l’origine de l’événement, en secondes.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointType"><apiName>cuePointType</apiName><shortdesc>
	  Chaîne « actionscript ».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Chaîne <codeph>"actionscript"</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc>
  Il s’agit d’un événement envoyé entre des applications qui se trouvent dans des sandbox de sécurité différents pour informer les écouteurs des activités de souris survenues dans l’autre sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Il s’agit d’un événement envoyé entre des applications qui se trouvent dans des sandbox de sécurité différents pour informer les écouteurs des activités de souris survenues dans l’autre sandbox. Pour des raisons de sécurité, certains champs d’un objet MouseEvent ne sont pas envoyés dans l’objet SandboxMouseEvent.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SandboxMouseEvent:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc> 
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Ctrl</codeph> a été enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Alt</codeph> a été enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche <codeph>Maj</codeph> a été enfoncée.	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si l’utilisateur appuie (true) ou non (false) sur le bouton principal de la souris.
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  Constructeur.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SandboxMouseEvent:marshal"><apiName>marshal</apiName><shortdesc>
      Sérialise une classe SWFBridgeRequest à partir d’un domaine ApplicationDomain distant vers le domaine ApplicationDomain actuel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Classe SandboxMouseEvent créée dans le domaine ApplicationDomain de l’appelant.
      
      </apiDesc><apiOperationClassifier>mx.events:SandboxMouseEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Classe SWFBridgeRequest éventuellement créée dans un autre domaine ApplicationDomain.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Sérialise une classe SWFBridgeRequest à partir d’un domaine ApplicationDomain distant vers le domaine ApplicationDomain actuel.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SandboxMouseEvent:CLICK_SOMEWHERE"><apiName>CLICK_SOMEWHERE</apiName><shortdesc>
	  Un clic de souris a été réalisé à l’extérieur du sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>clickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Un clic de souris a été réalisé à l’extérieur du sandbox.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:DOUBLE_CLICK_SOMEWHERE"><apiName>DOUBLE_CLICK_SOMEWHERE</apiName><shortdesc>
	  Un double-clic de souris a été réalisé à l’extérieur du sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>coubleClickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Un double-clic de souris a été réalisé à l’extérieur du sandbox.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_DOWN_SOMEWHERE"><apiName>MOUSE_DOWN_SOMEWHERE</apiName><shortdesc>
	  Le bouton de la souris a été enfoncé à l’extérieur du sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Le bouton de la souris a été enfoncé à l’extérieur du sandbox.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_MOVE_SOMEWHERE"><apiName>MOUSE_MOVE_SOMEWHERE</apiName><shortdesc>
	  La souris a été déplacée à l’extérieur du sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseMoveSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La souris a été déplacée à l’extérieur du sandbox.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_UP_SOMEWHERE"><apiName>MOUSE_UP_SOMEWHERE</apiName><shortdesc>
	  Le bouton de la souris a été relâché à l’extérieur du sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseUpSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Le bouton de la souris a été relâché à l’extérieur du sandbox.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_WHEEL_SOMEWHERE"><apiName>MOUSE_WHEEL_SOMEWHERE</apiName><shortdesc>
	  La molette de la souris a été utilisée à l’extérieur du sandbox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La molette de la souris a été utilisée à l’extérieur du sandbox.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:altKey"><apiName>altKey</apiName><shortdesc>
	  Indique si la touche Alt a été enfoncée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Indique si la touche <codeph>Alt</codeph> a été enfoncée.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/altkey"><linktext>flash.events.MouseEvent.altkey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:buttonDown"><apiName>buttonDown</apiName><shortdesc>
	  Indique si l’utilisateur appuie (true) ou non (false) sur le bouton principal de la souris.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Indique si l’utilisateur appuie (true) ou non (false) sur le bouton principal de la souris.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/buttonDown"><linktext>flash.events.MouseEvent.buttonDown</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:ctrlKey"><apiName>ctrlKey</apiName><shortdesc>
	  Indique si la touche Ctrl a été enfoncée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Indique si la touche <codeph>Ctrl</codeph> a été enfoncée.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/ctrlKey"><linktext>flash.events.MouseEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:shiftKey"><apiName>shiftKey</apiName><shortdesc>
	  Indique si la touche Maj a été enfoncée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Indique si la touche <codeph>Maj</codeph> a été enfoncée.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/shiftKey"><linktext>flash.events.MouseEvent.shiftKey</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:ListEventReason"><apiName>ListEventReason</apiName><shortdesc>
  Constantes des valeurs de la propriété reason d’un objet ListEvent, où la valeur de la propriété type est ListEvent.ITEM_EDIT_END.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Constantes des valeurs de la propriété <codeph>reason</codeph> d’un objet ListEvent, où la valeur de la propriété <codeph>type</codeph> est <codeph>ListEvent.ITEM_EDIT_END</codeph>.

  

  </apiDesc></apiClassifierDetail><apiValue id="mx.events:ListEventReason:CANCELLED"><apiName>CANCELLED</apiName><shortdesc>
      Indique que l’utilisateur a annulé la modification et qu’il ne souhaite pas enregistrer les données modifiées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancelled</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que l’utilisateur a annulé la modification et qu’il ne souhaite pas enregistrer les données modifiées. Même si vous appelez la méthode <codeph>preventDefault()</codeph> à partir de l’écouteur d’événement de l’événement <codeph>itemEditEnd</codeph>, Flex appelle systématiquement la méthode <codeph>destroyItemEditor()</codeph> pour fermer l’éditeur.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEventReason:NEW_ROW"><apiName>NEW_ROW</apiName><shortdesc>
      Indique que l’utilisateur a déplacé le focus vers une nouvelle ligne du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newRow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que l’utilisateur a déplacé le focus vers une nouvelle ligne du contrôle. Dans un écouteur d’événement, vous pouvez laisser le changement de focus se produire ou l’empêcher de se produire. Par exemple, l’écouteur d’événement peut vérifier si l’utilisateur a saisi une valeur valide pour l’élément en cours de modification. Si la valeur n’est pas valide, vous pouvez empêcher l’utilisateur de passer à un autre élément en appelant la méthode <codeph>preventDefault()</codeph>. Dans ce cas, l’éditeur d’éléments demeure ouvert et l’utilisateur poursuit sa modification de l’élément en cours. Si vous appelez la méthode <codeph>preventDefault()</codeph> et également la méthode <codeph>destroyItemEditor()</codeph>, vous empêchez l’utilisateur de passer à un autre élément, mais l’éditeur se ferme.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEventReason:OTHER"><apiName>OTHER</apiName><shortdesc>
      Indique que le contrôle de liste a perdu le focus, a subi un défilement ou est dans un état qui interdit toute modification.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>other</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Indique que le contrôle de liste a perdu le focus, a subi un défilement ou est dans un état qui interdit toute modification. Même si vous appelez la méthode <codeph>preventDefault()</codeph> à partir de l’écouteur d’événement de l’événement <codeph>itemEditEnd</codeph>, Flex appelle systématiquement la méthode <codeph>destroyItemEditor()</codeph> pour fermer l’éditeur.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
  La classe RSLEvent représente un objet d’événement utilisé par la classe DownloadProgressBar pendant qu’une bibliothèque RSL est téléchargée par la classe Preloader.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe RSLEvent représente un objet d’événement utilisé par la classe DownloadProgressBar pendant qu’une bibliothèque RSL est téléchargée par la classe Preloader. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link><link href="mx.preloaders.xml#Preloader"><linktext>mx.preloaders.Preloader</linktext></link></related-links><adobeApiEvent id="mx.events:RSLEvent:RSL_COMPLETE_rslComplete"><apiName>rslComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_ERROR_rslError"><apiName>rslError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_ERROR</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_PROGRESS_rslProgress"><apiName>rslProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:RSLEvent:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement. Valeurs possibles :
	  <ul>
	     <li>« rslProgress » (<codeph>RSLEvent.RSL_PROGRESS</codeph>)</li>
	     <li>« rslComplete » (<codeph>RSLEvent.RSL_COMPLETE</codeph>)</li>
	     <li>« rslError » (<codeph>RSLEvent.RSL_ERROR</codeph>)</li>
	  </ul>
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si l’objet Event peut être annulé.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Nombre d’octets chargés lors du traitement de l’événement par l’écouteur.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Nombre total d’octets qui seront finalement chargés si le processus de chargement aboutit.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>rslIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Numéro d’index de la bibliothèque RSL par rapport au total. Il s’agit d’une valeur comprise entre 0 et <codeph>total - 1</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>rslTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Nombre total de bibliothèques RSL en cours de chargement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="flash.net:URLRequest"/><apiData>null</apiData><apiDesc>Emplacement de la bibliothèque RSL.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Message d’erreur de l’erreur lorsque le type est RSLEvent.RSL_ERROR.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>isResourceModule</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>True si l’événement s’est produit lors du chargement d’un module ResourceModule. 
	 
	  </apiDesc></apiParam><apiTipTexts><apiTipText>Constructeur des objets <codeph>RSLEvent</codeph>.
	  
	  </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:RSLEvent:RSL_COMPLETE"><apiName>RSL_COMPLETE</apiName><shortdesc>
	  Distribué au terme du téléchargement de la bibliothèque RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Distribué au terme du téléchargement de la bibliothèque RSL. La constante <codeph>RSLEvent.RSL_COMPLETE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>rslComplete</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Nombre d’octets chargés.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Nombre total d’octets à charger.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Vide</entry></row><row><entry><codeph>isResourceModule</codeph></entry><entry>True si un module resourceModule a été chargé au lieu d’une RSL </entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Numéro d’index de la bibliothèque RSL en cours de téléchargement. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Nombre total de bibliothèques RSL en cours de téléchargement. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>url</codeph></entry><entry>Objet URLRequest représentant l’emplacement de la bibliothèque RSL en cours de téléchargement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_ERROR"><apiName>RSL_ERROR</apiName><shortdesc>
	  Distribuée lorsqu’une erreur se produit lors du téléchargement de la bibliothèque RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslError</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Distribuée lorsqu’une erreur se produit lors du téléchargement de la bibliothèque RSL. La constante <codeph>RSLEvent.RSL_ERROR</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>rslError</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Vide</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Vide</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Message d’erreur.<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>True si un module resourceModule a été chargé au lieu d’une RSL </entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Numéro d’index de la bibliothèque RSL en cours de téléchargement. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Nombre total de bibliothèques RSL en cours de téléchargement. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>url</codeph></entry><entry>Objet URLRequest représentant l’emplacement de la bibliothèque RSL en cours de téléchargement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_PROGRESS"><apiName>RSL_PROGRESS</apiName><shortdesc>
	  Distribuée pendant le téléchargement de la bibliothèque RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Distribuée pendant le téléchargement de la bibliothèque RSL. La constante <codeph>RSLEvent.RSL_PROGRESS</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>rslProgress</codeph>.
     
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Nombre d’octets chargés.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Nombre total d’octets à charger.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Vide<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>True si un module resourceModule a été chargé au lieu d’une RSL </entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Numéro d’index de la bibliothèque RSL en cours de téléchargement. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Nombre total de bibliothèques RSL en cours de téléchargement. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>url</codeph></entry><entry>Objet URLRequest représentant l’emplacement de la bibliothèque RSL en cours de téléchargement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:errorText"><apiName>errorText</apiName><shortdesc>
	  Message d’erreur si le type est RSL_ERROR, null dans le cas contraire.
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Message d’erreur si le type est RSL_ERROR, null dans le cas contraire.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:isResourceModule"><apiName>isResourceModule</apiName><shortdesc>
	  True si l’événement est pour le chargement d’un module resourceModule au lieu d’une RSL 
	 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  True si l’événement est pour le chargement d’un module resourceModule au lieu d’une RSL 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:loaderInfo"><apiName>loaderInfo</apiName><shortdesc>
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:LoaderInfo"/></apiValueDef><apiDesc>
        
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslIndex"><apiName>rslIndex</apiName><shortdesc>
	  Numéro d’index de la bibliothèque RSL en cours de téléchargement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Numéro d’index de la bibliothèque RSL en cours de téléchargement. Nombre compris entre 0 et <codeph>rslTotal - 1</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslTotal"><apiName>rslTotal</apiName><shortdesc>
	  Nombre total de bibliothèques RSL en cours de téléchargement par la classe Preloader.
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Nombre total de bibliothèques RSL en cours de téléchargement par la classe Preloader.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:url"><apiName>url</apiName><shortdesc>
	  Objet URLRequest représentant l’emplacement de la bibliothèque RSL en cours de téléchargement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.net:URLRequest"/></apiValueDef><apiDesc>
	  Objet URLRequest représentant l’emplacement de la bibliothèque RSL en cours de téléchargement.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
  La classe ToolTipEvent représente les événements ToolTip, qui sont générés par la classe ToolTipManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ToolTipEvent représente les événements ToolTip, qui sont générés par la classe ToolTipManager. Pour distribuer l’événement, la classe ToolTipManager appelle la méthode <codeph>dispatchEvent()</codeph> de l’objet auquel s’applique l’info-bulle.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#ToolTipManager"><linktext>mx.managers.ToolTipManager</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_CREATE_toolTipCreate"><apiName>toolTipCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_CREATE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_END_toolTipEnd"><apiName>toolTipEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_END</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_HIDE_toolTipHide"><apiName>toolTipHide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_HIDE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOW_toolTipShow"><apiName>toolTipShow</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOW</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN_toolTipShown"><apiName>toolTipShown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOWN</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_START_toolTipStart"><apiName>toolTipStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_START</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ToolTipEvent:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>toolTip</apiItemName><apiOperationClassifier>mx.core:IToolTip</apiOperationClassifier><apiData>null</apiData><apiDesc>Objet ToolTip auquel s’applique cet événement.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_CREATE"><apiName>TOOL_TIP_CREATE</apiName><shortdesc>
	  La constante ToolTipEvent.TOOL_TIP_CREATE définit la valeur de la propriété type de l’objet d’événement d’un événement toolTipCreate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipCreate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ToolTipEvent.TOOL_TIP_CREATE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>toolTipCreate</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Objet ToolTip auquel s’applique cet événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_END"><apiName>TOOL_TIP_END</apiName><shortdesc>
	  La constante ToolTipEvent.TOOL_TIP_END définit la valeur de la propriété type de l’objet d’événement d’un événement toolTipEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ToolTipEvent.TOOL_TIP_END</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>toolTipEnd</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Objet ToolTip auquel s’applique cet événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_HIDE"><apiName>TOOL_TIP_HIDE</apiName><shortdesc>
	  La constante ToolTipEvent.TOOL_TIP_HIDE définit la valeur de la propriété type de l’objet d’événement d’un événement toolTipHide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipHide</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ToolTipEvent.TOOL_TIP_HIDE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>toolTipHide</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Objet ToolTip auquel s’applique cet événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOW"><apiName>TOOL_TIP_SHOW</apiName><shortdesc>
	  La constante ToolTipEvent.TOOL_TIP_SHOW définit la valeur de la propriété type de l’objet d’événement d’un événement toolTipShow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShow</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ToolTipEvent.TOOL_TIP_SHOW</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>toolTipShow</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Objet ToolTip auquel s’applique cet événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN"><apiName>TOOL_TIP_SHOWN</apiName><shortdesc>
	  La constante ToolTipEvent.TOOL_TIP_SHOWN définit la valeur de la propriété type de l’objet d’événement d’un événement toolTipShown.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ToolTipEvent.TOOL_TIP_SHOWN</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>toolTipShown</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Objet ToolTip auquel s’applique cet événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_START"><apiName>TOOL_TIP_START</apiName><shortdesc>
	  La constante ToolTipEvent.TOOL_TIP_START définit la valeur de la propriété type de l’objet d’événement d’un événement toolTipStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ToolTipEvent.TOOL_TIP_START</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>toolTipStart</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Objet ToolTip auquel s’applique cet événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:toolTip"><apiName>toolTip</apiName><shortdesc>
	  Objet ToolTip auquel s’applique cet événement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IToolTip</apiValueClassifier></apiValueDef><apiDesc>
	  Objet ToolTip auquel s’applique cet événement. Cet objet est normalement une occurrence de l’objet ToolTip, mais il peut s’agir de tout objet UIComponent.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SliderEvent"><apiName>SliderEvent</apiName><shortdesc>
  La classe SliderEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements change, thumbDrag, thumbPress et thumbRelease des classes HSlider et VSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe SliderEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements <codeph>change</codeph>, <codeph>thumbDrag</codeph>, <codeph>thumbPress</codeph> et <codeph>thumbRelease</codeph> des classes HSlider et VSlider.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#HSlider"><linktext>mx.controls.HSlider</linktext></link><link href="mx.controls.xml#VSlider"><linktext>mx.controls.VSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.events.xml#SliderEventClickTarget"><linktext>mx.events.SliderEventClickTarget</linktext></link></related-links><adobeApiEvent id="mx.events:SliderEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_DRAG_thumbDrag"><apiName>thumbDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_DRAG</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_PRESS_thumbPress"><apiName>thumbPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_PRESS</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_RELEASE_thumbRelease"><apiName>thumbRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:SliderEvent:SliderEvent"><apiName>SliderEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>thumbIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de base zéro du curseur dont la position a changé.
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Nouvelle valeur du curseur.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>clickTarget</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Spécifie si l’utilisateur a cliqué sur le rail ou sur le curseur.
     
      </apiDesc></apiParam><apiParam><apiItemName>keyCode</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Si l’événement a été déclenché par un appui sur une touche, il s’agit du code de la touche.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:SliderEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      La constante SliderEvent.CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>SliderEvent.CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>change</codeph>. 
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Spécifie si l’utilisateur a cliqué sur le rail ou sur le curseur.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Si l’événement a été déclenché par un appui sur une touche, il s’agit du code de la touche.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Index de base zéro du curseur dont la position a changé.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Contient une valeur indiquant le type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Nouvelle valeur du curseur.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_DRAG"><apiName>THUMB_DRAG</apiName><shortdesc>
      La constante SliderEvent.THUMB_DRAG définit la valeur de la propriété type de l’objet d’événement d’un événement thumbDrag.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>SliderEvent.THUMB_DRAG</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>thumbDrag</codeph>. 
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Spécifie si l’utilisateur a cliqué sur le rail ou sur le curseur.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Si l’événement a été déclenché par un appui sur une touche, il s’agit du code de la touche.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Index de base zéro du curseur dont la position a changé.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Contient une valeur indiquant le type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Nouvelle valeur du curseur.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_PRESS"><apiName>THUMB_PRESS</apiName><shortdesc>
      La constante SliderEvent.THUMB_PRESS définit la valeur de la propriété type de l’objet d’événement d’un événement thumbPress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>SliderEvent.THUMB_PRESS</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>thumbPress</codeph>. 
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Spécifie si l’utilisateur a cliqué sur le rail ou sur le curseur.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Si l’événement a été déclenché par un appui sur une touche, il s’agit du code de la touche.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Index de base zéro du curseur dont la position a changé.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Contient une valeur indiquant le type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Nouvelle valeur du curseur.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_RELEASE"><apiName>THUMB_RELEASE</apiName><shortdesc>
      La constante SliderEvent.THUMB_RELEASE définit la valeur de la propriété type de l’objet d’événement d’un événement thumbRelease.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>SliderEvent.THUMB_RELEASE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>thumbRelease</codeph>. 
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Spécifie si l’utilisateur a cliqué sur le rail ou sur le curseur.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Si l’événement a été déclenché par un appui sur une touche, il s’agit du code de la touche.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Index de base zéro du curseur dont la position a changé.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Contient une valeur indiquant le type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Nouvelle valeur du curseur.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:clickTarget"><apiName>clickTarget</apiName><shortdesc>
      Spécifie si l’utilisateur a cliqué sur le rail ou sur le curseur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Spécifie si l’utilisateur a cliqué sur le rail ou sur le curseur. La valeur de cette propriété est soit <codeph>SliderEventClickTarget.THUMB</codeph>, soit <codeph>SliderEventClickTarget.TRACK</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#SliderEventClickTarget"><linktext>mx.events.SliderEventClickTarget</linktext></link></related-links></apiValue><apiValue id="mx.events:SliderEvent:keyCode"><apiName>keyCode</apiName><shortdesc>
      Si l’événement a été déclenché par un appui sur une touche, il s’agit du code de la touche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Si l’événement a été déclenché par un appui sur une touche, il s’agit du code de la touche.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:thumbIndex"><apiName>thumbIndex</apiName><shortdesc>
      Index de base zéro du curseur dont la position a changé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de base zéro du curseur dont la position a changé. S’il n’y a qu’un seul curseur, la valeur est 0. S’il y a deux curseurs, la valeur est 0 ou 1.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Indique le type d’action entrée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Indique le type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:value"><apiName>value</apiName><shortdesc>
      Nouvelle valeur du curseur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Nouvelle valeur du curseur.  
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DividerEvent"><apiName>DividerEvent</apiName><shortdesc>
  Représente les événements distribués lorsqu’un utilisateur appuie sur un séparateur, le fait glisser ou relâche la souris sur le séparateur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les événements distribués lorsqu’un utilisateur appuie sur un séparateur, le fait glisser ou relâche la souris sur le séparateur. Ces événements sont distribués par le contrôle DividedBox et ses enfants.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#DividedBox"><linktext>mx.containers.DividedBox</linktext></link></related-links><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_DRAG_dividerDrag"><apiName>dividerDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_DRAG</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_PRESS_dividerPress"><apiName>dividerPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_PRESS</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_RELEASE_dividerRelease"><apiName>dividerRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DividerEvent:DividerEvent"><apiName>DividerEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dividerIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index du séparateur qui a généré l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Nombre de pixels correspondant au déplacement du séparateur.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DividerEvent:DIVIDER_DRAG"><apiName>DIVIDER_DRAG</apiName><shortdesc>
	  La constante DividerEvent.DIVIDER_DRAG définit la valeur de la propriété type de l’objet d’événement d’un événement dividerDrag.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DividerEvent.DIVIDER_DRAG</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dividerDrag</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Contient le nombre de pixels correspondant au déplacement du séparateur. Les nombres positifs représentent un déplacement vers la droite ou le bas et les nombres négatifs représentent un déplacement vers la gauche ou le haut.</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>Contient l’index de base zéro du séparateur déplacé. Le séparateur le plus à gauche ou le plus en haut a une valeur <codeph>dividerIndex</codeph> de 0.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:DIVIDER_PRESS"><apiName>DIVIDER_PRESS</apiName><shortdesc>
	  La constante DividerEvent.DIVIDER_PRESS définit la valeur de la propriété type de l’objet d’événement d’un événement dividerPress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DividerEvent.DIVIDER_PRESS</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dividerPress</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Contient le nombre de pixels correspondant au déplacement du séparateur. Les nombres positifs représentent un déplacement vers la droite ou le bas et les nombres négatifs représentent un déplacement vers la gauche ou le haut.</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>Contient l’index de base zéro du séparateur déplacé. Le séparateur le plus à gauche ou le plus en haut a une valeur <codeph>dividerIndex</codeph> de 0.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:DIVIDER_RELEASE"><apiName>DIVIDER_RELEASE</apiName><shortdesc>
	  La constante DividerEvent.DIVIDER_RELEASE définit la valeur de la propriété type de l’objet d’événement d’un événement dividerRelease.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DividerEvent.DIVIDER_RELEASE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>dividerRelease</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Contient le nombre de pixels correspondant au déplacement du séparateur. Les nombres positifs représentent un déplacement vers la droite ou le bas et les nombres négatifs représentent un déplacement vers la gauche ou le haut.</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>Contient l’index de base zéro du séparateur déplacé. Le séparateur le plus à gauche ou le plus en haut a une valeur <codeph>dividerIndex</codeph> de 0.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:delta"><apiName>delta</apiName><shortdesc>
	  Nombre de pixels correspondant au déplacement du séparateur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Nombre de pixels correspondant au déplacement du séparateur. Les nombres positifs représentent un déplacement vers la droite ou le bas et les nombres négatifs représentent un déplacement vers la gauche ou le haut.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:dividerIndex"><apiName>dividerIndex</apiName><shortdesc>
	  Index de base zéro du séparateur sur lequel l’utilisateur appuie ou qu’il déplace.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Index de base zéro du séparateur sur lequel l’utilisateur appuie ou qu’il déplace. Le séparateur le plus à gauche ou le plus en haut a une valeur <codeph>dividerIndex</codeph> de 0.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEventDetail"><apiName>ScrollEventDetail</apiName><shortdesc>
  Constantes des valeurs de la propriété detail d’une classe ScrollEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Constantes des valeurs de la propriété <codeph>detail</codeph> d’une classe ScrollEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#ScrollEvent"><linktext>mx.events.ScrollEvent</linktext></link></related-links><apiValue id="mx.events:ScrollEventDetail:AT_BOTTOM"><apiName>AT_BOTTOM</apiName><shortdesc>
	  Indique que la barre de défilement se trouve au bas de la plage de défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atBottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement se trouve au bas de la plage de défilement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_LEFT"><apiName>AT_LEFT</apiName><shortdesc>
	  Indique que la barre de défilement se trouve à gauche de la plage de défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement se trouve à gauche de la plage de défilement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_RIGHT"><apiName>AT_RIGHT</apiName><shortdesc>
	  Indique que la barre de défilement se trouve à droite de la plage de défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement se trouve à droite de la plage de défilement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_TOP"><apiName>AT_TOP</apiName><shortdesc>
	  Indique que la barre de défilement se trouve en haut de la plage de défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atTop</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement se trouve en haut de la plage de défilement.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_DOWN"><apiName>LINE_DOWN</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers le bas.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers le bas.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_LEFT"><apiName>LINE_LEFT</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers la gauche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers la gauche.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_RIGHT"><apiName>LINE_RIGHT</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers la droite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers la droite.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_UP"><apiName>LINE_UP</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers le haut.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une ligne vers le haut.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_DOWN"><apiName>PAGE_DOWN</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une page vers le bas.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une page vers le bas.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_LEFT"><apiName>PAGE_LEFT</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une page vers la gauche.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une page vers la gauche.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_RIGHT"><apiName>PAGE_RIGHT</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une page vers la droite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une page vers la droite.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_UP"><apiName>PAGE_UP</apiName><shortdesc>
	  Indique que la barre de défilement a été déplacée d’une page vers le haut.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que la barre de défilement a été déplacée d’une page vers le haut.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:THUMB_POSITION"><apiName>THUMB_POSITION</apiName><shortdesc>
	  Indique que le curseur de la barre de défilement s’est arrêté.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPosition</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que le curseur de la barre de défilement s’est arrêté.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:THUMB_TRACK"><apiName>THUMB_TRACK</apiName><shortdesc>
	  Indique que le curseur de la barre de défilement est en mouvement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbTrack</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que le curseur de la barre de défilement est en mouvement.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TreeEvent"><apiName>TreeEvent</apiName><shortdesc>
  La classe TreeEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements associés aux activités survenant dans une arborescence, par exemple lorsqu’une branche est ouverte ou fermée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe TreeEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements associés aux activités survenant dans une arborescence, par exemple lorsqu’une branche est ouverte ou fermée.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Tree"><linktext>mx.controls.Tree</linktext></link></related-links><adobeApiEvent id="mx.events:TreeEvent:ITEM_CLOSE_itemClose"><apiName>itemClose</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_CLOSE</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TreeEvent:ITEM_OPEN_itemOpen"><apiName>itemOpen</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_OPEN</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TreeEvent:ITEM_OPENING_itemOpening"><apiName>itemOpening</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_OPENING</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:TreeEvent:TreeEvent"><apiName>TreeEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Nœud de l’arborescence (élément) auquel s’applique cet événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Objet de fonctionnalité de rendu d’élément de la cellule.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Si le nœud a été ouvert ou fermé suite à une action entreprise par l’utilisateur, cette propriété indique le type d’action entrée.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur. Normalement appelé par le contrôle Flex Tree et non utilisé dans le code de l’application.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TreeEvent:ITEM_CLOSE"><apiName>ITEM_CLOSE</apiName><shortdesc>
      La constante de type d’événement TreeEvent.ITEM_CLOSE indique qu’une branche d’arborescence a été fermée ou réduite.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClose</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type d’événement TreeEvent.ITEM_CLOSE indique qu’une branche d’arborescence a été fermée ou réduite.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Classe ListItemRenderer du nœud fermé</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>Si le nœud a été fermé suite à une action entreprise par l’utilisateur, cette propriété indique s’il s’agit d’une action de clavier ou de souris.</entry></row><row><entry><codeph>item</codeph></entry><entry>Elément d’arborescence (nœud) fermé</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_CLOSE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:ITEM_OPEN"><apiName>ITEM_OPEN</apiName><shortdesc>
      La constante de type d’événement TreeEvent.ITEM_OPEN indique qu’une branche d’arborescence a été ouverte ou développée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemOpen</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type d’événement TreeEvent.ITEM_OPEN indique qu’une branche d’arborescence a été ouverte ou développée.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Classe ListItemRenderer de l’élément (nœud) ouvert</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>Si l’élément (nœud) a été ouvert suite à une action entreprise par l’utilisateur, cette propriété indique s’il s’agit d’une action de clavier ou de souris.</entry></row><row><entry><codeph>item</codeph></entry><entry>Nœud d’arborescence ouvert.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_OPEN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:ITEM_OPENING"><apiName>ITEM_OPENING</apiName><shortdesc>
      La constante de type d’événement TreeEvent.ITEM_OPENING est distribuée immédiatement avant l’ouverture ou la fermeture d’une arborescence.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemOpening</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante de type d’événement TreeEvent.ITEM_OPENING est distribuée immédiatement avant l’ouverture ou la fermeture d’une arborescence.
     
      <p>Les valeurs des propriétés de l’objet d’événement de ce type d’événement sont les suivantes. Toutes les propriétés ne sont pas pertinentes pour chaque catégorie d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>animation</codeph></entry><entry>Indique si l’opération d’ouverture ou de fermeture doit faire l’objet d’une animation.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton.</entry></row><row><entry><codeph>dispatchEvent</codeph></entry><entry>Indique s’il faut distribuer un événement <codeph>ITEM_OPEN</codeph> ou <codeph>ITEM_CLOSE</codeph> au terme de l’animation d’ouverture ou de fermeture. true</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Classe ListItemRenderer de l’élément (nœud) ouvert</entry></row><row><entry><codeph>item</codeph></entry><entry>Nœud d’arborescence ouvert.</entry></row><row><entry><codeph>opening</codeph></entry><entry>true si l’élément s’ouvre, false s’il se ferme.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>Si l’élément a été ouvert suite à une action entreprise par l’utilisateur, cette propriété indique s’il s’agit d’une action de clavier ou de souris.</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_OPENING</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:animate"><apiName>animate</apiName><shortdesc>
      Indique si l’opération d’ouverture ou de fermeture doit faire l’objet d’une animation. Cette propriété est utilisée uniquement pour les événements de type ITEM_OPENING.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indique si l’opération d’ouverture ou de fermeture doit faire l’objet d’une animation. Cette propriété est utilisée uniquement pour les événements de type ITEM_OPENING.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
      Indique s’il faut distribuer un événement (ITEM_OPEN ou ITEM_CLOSE) au terme de l’animation d’ouverture ou de fermeture.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Indique s’il faut distribuer un événement (<codeph>ITEM_OPEN</codeph> ou <codeph>ITEM_CLOSE</codeph>) au terme de l’animation d’ouverture ou de fermeture. Cette propriété est utilisée uniquement pour les événements de type ITEM_OPENING.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:item"><apiName>item</apiName><shortdesc>
      Stockage de la propriété item.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Stockage de la propriété item. Si vous remplissez l’arborescence à l’aide de données XML, accédez aux propriétés du nœud en tant que <codeph>event.item.@<i>nom_attribut</i></codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Classe ListItemRenderer du nœud fermé ou ouvert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Classe ListItemRenderer du nœud fermé ou ouvert.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:opening"><apiName>opening</apiName><shortdesc>
      Cette propriété est utilisée uniquement pour les événements de type ITEM_OPENING.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Cette propriété est utilisée uniquement pour les événements de type <codeph>ITEM_OPENING</codeph>. Indique si l’élément s’ouvre (<codeph>true</codeph>) ou se ferme (<codeph>false</codeph>).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Objet de bas niveau MouseEvent ou KeyboardEvent qui a déclenché cet événement, ou null si l’événement a été déclenché par programmation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Objet de bas niveau MouseEvent ou KeyboardEvent qui a déclenché cet événement, ou <codeph>null</codeph> si l’événement a été déclenché par programmation.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
 La classe PropertyChangeEvent représente l’objet d’événement transmis à l’écouteur d’événement lorsque l’une des propriétés d’un objet a changé et fournit des informations sur la modification en question.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
 La classe PropertyChangeEvent représente l’objet d’événement transmis à l’écouteur d’événement lorsque l’une des propriétés d’un objet a changé et fournit des informations sur la modification en question. Cet événement est utilisé par les classes de collection et constitue le seul moyen d’informer les collections que les données qu’elles représentent ont changé. Cet événement est également utilisé par le mécanisme de liaison de données de Flex.
 
 </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEventKind"><linktext>PropertyChangeEventKind</linktext></link></related-links><adobeApiEvent id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE_propertyChange"><apiName>propertyChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:PropertyChangeEvent:PROPERTY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:PropertyChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:PropertyChangeEvent:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut se propager vers le haut de la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Spécifie le type de modification. Les valeurs possibles sont <codeph>PropertyChangeEventKind.UPDATE</codeph>, <codeph>PropertyChangeEventKind.DELETE</codeph> et <codeph>null</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Chaîne, valeur QName ou entier indiquant la propriété modifiée.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Valeur de la propriété avant la modification.
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Valeur de la propriété après la modification.
     
      </apiDesc></apiParam><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Objet sur lequel la modification a été réalisée.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:PropertyChangeEvent:createUpdateEvent"><apiName>createUpdateEvent</apiName><shortdesc>
      Renvoie un nouvel événement PropertyChangeEvent de type PropertyChangeEventKind.UPDATE contenant les propriétés spécifiées.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Evénement PropertyChangeEvent nouvellement créé, contenant les propriétés spécifiées. 
      
      </apiDesc><apiOperationClassifier>mx.events:PropertyChangeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiDesc>Objet sur lequel la modification a été réalisée.
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiDesc>Chaîne, valeur QName ou entier indiquant la propriété modifiée.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiDesc>Valeur de la propriété avant la modification.
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiDesc>Valeur de la propriété après la modification.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Renvoie un nouvel événement PropertyChangeEvent de type <codeph>PropertyChangeEventKind.UPDATE</codeph> contenant les propriétés spécifiées. Cette méthode est utilisée pour des raisons de commodité.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE"><apiName>PROPERTY_CHANGE</apiName><shortdesc>
      La constante PropertyChangeEvent.PROPERTY_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement PropertyChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>propertyChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante <codeph>PropertyChangeEvent.PROPERTY_CHANGE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>PropertyChange</codeph>.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>Valeur déterminée par le constructeur, false par défaut.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>Valeur déterminée par le constructeur, false par défaut.</entry></row><row><entry><codeph>kind</codeph></entry><entry>Type de modification : PropertyChangeEventKind.UPDATE ou PropertyChangeEventKind.DELETE.</entry></row><row><entry><codeph>oldValue</codeph></entry><entry>Valeur d’origine de la propriété.</entry></row><row><entry><codeph>newValue</codeph></entry><entry>Nouvelle valeur de la propriété, le cas échéant.</entry></row><row><entry><codeph>property</codeph></entry><entry>Propriété modifiée.</entry></row><row><entry><codeph>source</codeph></entry><entry>Objet contenant la propriété modifiée.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:kind"><apiName>kind</apiName><shortdesc>
      Spécifie le type de modification.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Spécifie le type de modification. Les valeurs possibles sont <codeph>PropertyChangeEventKind.UPDATE</codeph>, <codeph>PropertyChangeEventKind.DELETE</codeph> et <codeph>null</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:newValue"><apiName>newValue</apiName><shortdesc>
      Valeur de la propriété après la modification.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Valeur de la propriété après la modification.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:oldValue"><apiName>oldValue</apiName><shortdesc>
      Valeur de la propriété avant la modification.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Valeur de la propriété avant la modification.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:property"><apiName>property</apiName><shortdesc>
      Chaîne, valeur QName ou entier indiquant la propriété modifiée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Chaîne, valeur QName ou entier indiquant la propriété modifiée.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:source"><apiName>source</apiName><shortdesc>
      Objet sur lequel la modification a été réalisée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Objet sur lequel la modification a été réalisée.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
  Représente les objets d’événement distribués lorsque la taille d’un composant Flex change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les objets d’événement distribués lorsque la taille d’un composant Flex change.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ResizeEvent:RESIZE_resize"><apiName>resize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResizeEvent:RESIZE</apiEventType><adobeApiEventClassifier>mx.events:ResizeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResizeEvent:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldWidth</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Largeur précédente de l’objet, en pixels.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldHeight</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Hauteur précédente de l’objet, en pixels.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResizeEvent:RESIZE"><apiName>RESIZE</apiName><shortdesc>
	  La constante ResizeEvent.RESIZE définit la valeur de la propriété type de l’objet d’événement d’un événement resize.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resize</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ResizeEvent.RESIZE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>resize</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>oldHeight</codeph></entry><entry>Hauteur précédente de l’objet, en pixels.</entry></row><row><entry><codeph>oldWidth</codeph></entry><entry>Largeur précédente de l’objet, en pixels.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldHeight"><apiName>oldHeight</apiName><shortdesc>
	  Hauteur précédente de l’objet, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Valeur <codeph>height</codeph> précédente de l’objet, en pixels.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldWidth"><apiName>oldWidth</apiName><shortdesc>
	  Largeur précédente de l’objet, en pixels.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Valeur <codeph>width</codeph> précédente de l’objet, en pixels.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
  La classe DropdownEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements open et close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe DropdownEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les événements <codeph>open</codeph> et <codeph>close</codeph>.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:DropdownEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DropdownEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:OPEN</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DropdownEvent:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Valeur indiquant le type d’action entrée qui a déclenché l’événement.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DropdownEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
	  La constante DropdownEvent.CLOSE définit la valeur de la propriété type de l’objet d’événement d’un événement close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DropdownEvent.CLOSE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>close</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Valeur indiquant le type d’action entrée qui a déclenché l’événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
	  La constante DropdownEvent.OPEN définit la valeur de la propriété type de l’objet d’événement d’un événement open.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DropdownEvent.OPEN</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>open</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Valeur indiquant le type d’action entrée qui a déclenché l’événement.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Si le contrôle est ouvert ou fermé suite à une action entreprise par l’utilisateur, cette propriété contient une valeur indiquant le type d’action entrée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Si le contrôle est ouvert ou fermé suite à une action entreprise par l’utilisateur, cette propriété contient une valeur indiquant le type d’action entrée. La valeur est soit <codeph>InteractionInputType.MOUSE</codeph>, soit <codeph>InteractionInputType.KEYBOARD</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
  Représente les objets d’événement propres aux effets d’interpolation Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les objets d’événement propres aux effets d’interpolation Flex. Les effets Flex distribuent deux types d’événements d’interpolation :
  <ul>
    <li><codeph>tweenUpdate</codeph></li>
    <li><codeph>tweenEnd</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link></related-links><adobeApiEvent id="mx.events:TweenEvent:TWEEN_END_tweenEnd"><apiName>tweenEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_END</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_START_tweenStart"><apiName>tweenStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_START</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_UPDATE_tweenUpdate"><apiName>tweenUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:TweenEvent:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Dans le cas d’un événement <codeph>tweenStart</codeph> ou <codeph>tweenUpdate</codeph>, valeur transmise à la méthode <codeph>onTweenUpdate()</codeph>. Dans le cas d’un événement <codeph>tweenEnd</codeph>, valeur transmise à la méthode <codeph>onTweenEnd()</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TweenEvent:TWEEN_END"><apiName>TWEEN_END</apiName><shortdesc>
	  La constante TweenEvent.TWEEN_END définit la valeur de la propriété type de l’objet d’événement d’un événement tweenEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>TweenEvent.TWEEN_END</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>tweenEnd</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Valeur transmise à la méthode <codeph>onTweenEnd</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_START"><apiName>TWEEN_START</apiName><shortdesc>
	  La constante TweenEvent.TWEEN_START définit la valeur de la propriété type de l’objet d’événement d’un événement tweenStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>TweenEvent.TWEEN_START</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>tweenStart</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Valeur transmise à la méthode <codeph>onTweenUpdate</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_UPDATE"><apiName>TWEEN_UPDATE</apiName><shortdesc>
	  La constante TweenEvent.TWEEN_UPDATE définit la valeur de la propriété type de l’objet d’événement d’un événement tweenUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>TweenEvent.TWEEN_UPDATE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>tweenUpdate</codeph>. 
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Valeur transmise à la méthode <codeph>onTweenUpdate()</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:value"><apiName>value</apiName><shortdesc>
	  Dans le cas d’un événement tweenStart ou tweenUpdate, valeur transmise à la méthode onTweenUpdate(). Dans le cas d’un événement tweenEnd, valeur transmise à la méthode onTweenEnd().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Dans le cas d’un événement <codeph>tweenStart</codeph> ou <codeph>tweenUpdate</codeph>, valeur transmise à la méthode <codeph>onTweenUpdate()</codeph>. Dans le cas d’un événement <codeph>tweenEnd</codeph>, valeur transmise à la méthode <codeph>onTweenEnd()</codeph>.
	 
	  <p>Pour connaître la valeur exacte de cette propriété, voir la classe d’occurrence de chaque effet d’interpolation.</p>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.effectClasses.xml#ActionEffectInstance"><linktext>mx.effects.effectClasses.ActionEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#BlurInstance"><linktext>mx.effects.effectClasses.BlurInstance</linktext></link><link href="mx.effects.effectClasses.xml#DissolveInstance"><linktext>mx.effects.effectClasses.DissolveInstance</linktext></link><link href="mx.effects.effectClasses.xml#FadeInstance"><linktext>mx.effects.effectClasses.FadeInstance</linktext></link><link href="mx.effects.effectClasses.xml#GlowInstance"><linktext>mx.effects.effectClasses.GlowInstance</linktext></link><link href="mx.effects.effectClasses.xml#MaskEffectInstance"><linktext>mx.effects.effectClasses.MaskEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#MoveInstance"><linktext>mx.effects.effectClasses.MoveInstance</linktext></link><link href="mx.effects.effectClasses.xml#ResizeInstance"><linktext>mx.effects.effectClasses.ResizeInstance</linktext></link><link href="mx.effects.effectClasses.xml#RotateInstance"><linktext>mx.effects.effectClasses.RotateInstance</linktext></link><link href="mx.effects.effectClasses.xml#ZoomInstance"><linktext>mx.effects.effectClasses.ZoomInstance</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:InvalidateRequestData"><apiName>InvalidateRequestData</apiName><shortdesc>
  La classe InvalidateRequestData définit les constantes des valeurs de la propriété data d’un objet SWFBridgeRequest, lorsque la demande SWFBridgeRequest.INVALIDATE_REQUEST est utilisée.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe InvalidateRequestData définit les constantes des valeurs de la propriété <codeph>data</codeph> d’un objet SWFBridgeRequest, lorsque la demande <codeph>SWFBridgeRequest.INVALIDATE_REQUEST</codeph> est utilisée.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.events:InvalidateRequestData:DISPLAY_LIST"><apiName>DISPLAY_LIST</apiName><shortdesc>
      Bit permettant d’indiquer que le gestionnaire de demandes doit invalider la liste d’affichage.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Bit permettant d’indiquer que le gestionnaire de demandes doit invalider la liste d’affichage.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:PROPERTIES"><apiName>PROPERTIES</apiName><shortdesc>
      Bit permettant d’indiquer que le gestionnaire de demandes doit invalider les propriétés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Bit permettant d’indiquer que le gestionnaire de demandes doit invalider les propriétés.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:SIZE"><apiName>SIZE</apiName><shortdesc>
      Bit permettant d’indiquer que le gestionnaire de demandes doit invalider la taille.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Bit permettant d’indiquer que le gestionnaire de demandes doit invalider la taille.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SliderEventClickTarget"><apiName>SliderEventClickTarget</apiName><shortdesc>
  La classe SliderEventClickTarget définit les constantes des valeurs de la propriété clickTarget de la classe SliderEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe SliderEventClickTarget définit les constantes des valeurs de la propriété <codeph>clickTarget</codeph> de la classe SliderEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#SliderEvent"><linktext>mx.events.SliderEvent</linktext></link></related-links><apiValue id="mx.events:SliderEventClickTarget:THUMB"><apiName>THUMB</apiName><shortdesc>
	  Indique que l’utilisateur a cliqué sur le curseur du contrôle Slider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumb</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que l’utilisateur a cliqué sur le curseur du contrôle Slider.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEventClickTarget:TRACK"><apiName>TRACK</apiName><shortdesc>
	  Indique que l’utilisateur a cliqué sur le rail du contrôle Slider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>track</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que l’utilisateur a cliqué sur le rail du contrôle Slider.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DateChooserEvent"><apiName>DateChooserEvent</apiName><shortdesc>
  La classe DateChooserEvent représente l’objet d’événement transmis à l’écouteur d’événement pour lévénement scroll des contrôles DateChooser et DateField.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe DateChooserEvent représente l’objet d’événement transmis à l’écouteur d’événement pour l’événement <codeph>scroll</codeph> des contrôles DateChooser et DateField.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link><link href="mx.events.xml#DateChooserEventDetail"><linktext>mx.events.DateChooserEventDetail</linktext></link></related-links><adobeApiEvent id="mx.events:DateChooserEvent:SCROLL_scroll"><apiName>scroll</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DateChooserEvent:SCROLL</apiEventType><adobeApiEventClassifier>mx.events:DateChooserEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DateChooserEvent:DateChooserEvent"><apiName>DateChooserEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut se propager vers le haut de la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Indique l’unité et la direction du défilement. Valeurs possibles : <codeph>DateChooserEventDetail.NEXT_MONTH</codeph>, <codeph>DateChooserEventDetail.NEXT_YEAR</codeph>, <codeph>DateChooserEventDetail.PREVIOUS_MONTH</codeph> et <codeph>DateChooserEventDetail.PREVIOUS_YEAR</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Evénement qui a déclenché cet événement de modification. Il s’agit généralement d’un événement <codeph>scroll</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur. Normalement appelé par l’objet DateChooser et non utilisé dans le code de l’application.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DateChooserEvent:SCROLL"><apiName>SCROLL</apiName><shortdesc>
	  La constante DateChooserEvent.SCROLL définit la valeur de la propriété type de l’objet d’événement d’un événement scroll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>DateChooserEvent.SCROLL</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>scroll</codeph>.
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>detail</codeph></entry><entry>Direction de défilement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Evénement qui a déclenché cet événement de modification. Il s’agit généralement d’un événement <codeph>scroll</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEvent:detail"><apiName>detail</apiName><shortdesc>
      Indique la direction du défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Indique la direction du défilement. Les valeurs sont définies par la classe DateChooserEventDetail. Valeurs possibles : <codeph>DateChooserEventDetail.NEXT_MONTH</codeph>, <codeph>DateChooserEventDetail.NEXT_YEAR</codeph>, <codeph>DateChooserEventDetail.PREVIOUS_MONTH</codeph> et <codeph>DateChooserEventDetail.PREVIOUS_YEAR</codeph>.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DateChooserEventDetail"><linktext>mx.events.DateChooserEventDetail</linktext></link></related-links></apiValue><apiValue id="mx.events:DateChooserEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Evénement qui a déclenché la modification. Il s’agit généralement d’un événement scroll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Evénement qui a déclenché la modification. Il s’agit généralement d’un événement <codeph>scroll</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
  La classe mx.events.CollectionEvent représente un événement distribué lorsque la collection associée change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe mx.events.CollectionEvent représente un événement distribué lorsque la collection associée change.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#FlexEvent/CURSOR_UPDATE"><linktext>FlexEvent.CURSOR_UPDATE</linktext></link></related-links><adobeApiEvent id="mx.events:CollectionEvent:COLLECTION_CHANGE_collectionChange"><apiName>collectionChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CollectionEvent:COLLECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:CollectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CollectionEvent:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut se propager vers le haut de la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Indique le type d’événement survenu. La valeur du paramètre peut être l’une des valeurs de la classe CollectionEventKind ou <codeph>null</codeph>, ce qui indique que la catégorie est inconnue.
     
      </apiDesc></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.ADD</codeph>, <codeph>CollectionEventKind.MOVE</codeph>, <codeph>CollectionEventKind.REMOVE</codeph> ou <codeph>CollectionEventKind.REPLACE</codeph>, cette valeur indique l’emplacement dans la collection cible du ou des éléments spécifiés dans la propriété <codeph>items</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldLocation</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.MOVE</codeph>, cette valeur indique l’ancien emplacement dans la collection cible du ou des éléments spécifiés dans la propriété <codeph>items</codeph>.
      
      </apiDesc></apiParam><apiParam><apiItemName>items</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Tableau d’objets contenant des informations sur les éléments affectés par l’événement, décrits dans la propriété <codeph>items</codeph>. Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.REFRESH</codeph> ou <codeph>CollectionEventKind.RESET</codeph>, la longueur de ce tableau est égale à zéro.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur.
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CollectionEvent:COLLECTION_CHANGE"><apiName>COLLECTION_CHANGE</apiName><shortdesc>
      La constante CollectionEvent.COLLECTION_CHANGE définit la valeur de la propriété type de l’objet d’événement d’un événement distribué lorsqu’une collection a changé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>collectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante CollectionEvent.COLLECTION_CHANGE définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement distribué lorsqu’une collection a changé.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes : Les propriétés ne sont pas toutes significatives pour tous les types d’événements. Pour plus d’informations, voir les descriptions détaillées des propriétés.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>items</codeph></entry><entry>Tableau d’objets contenant des informations sur les éléments affectés par l’événement. Le contenu de ce champ dépend du type d’événement. Pour plus d’informations, voir la propriété <codeph>items</codeph>.</entry></row><row><entry><codeph>kind</codeph></entry><entry>Type d’événement. Les valeurs valides sont définies dans la classe CollectionEventKind sous forme de constantes.</entry></row><row><entry><codeph>location</codeph></entry><entry>Emplacement dans la collection cible du ou des éléments spécifiés dans la propriété <codeph>items</codeph>.</entry></row><row><entry><codeph>oldLocation</codeph></entry><entry>Ancien emplacement dans la collection de l’élément spécifié dans la propriété <codeph>items</codeph>.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>CollectionEvent.COLLECTION_CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEvent:items"><apiName>items</apiName><shortdesc>
	  Lorsque la valeur de kind est CollectionEventKind.ADD ou CollectionEventKind.REMOVE, la propriété items est un tableau d’éléments ajoutés/supprimés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/><apiDefaultValue>[ ]
     
      </apiDefaultValue></apiValueDef><apiDesc>
	  Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.ADD</codeph> ou <codeph>CollectionEventKind.REMOVE</codeph>, la propriété <codeph>items</codeph> est un tableau d’éléments ajoutés/supprimés. Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.REPLACE</codeph> ou <codeph>CollectionEventKind.UPDATE</codeph>, la propriété <codeph>items</codeph> est un tableau d’objets PropertyChangeEvent contenant des informations sur les éléments affectés par l’événement. Lorsqu’une valeur change, interrogez les champs <codeph>newValue</codeph> et <codeph>oldValue</codeph> des objets PropertyChangeEvent pour connaître l’ancienne valeur et la nouvelle valeur. Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.REFRESH</codeph> ou <codeph>CollectionEventKind.RESET</codeph>, la longueur de ce tableau est égale à zéro.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>PropertyChangeEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:kind"><apiName>kind</apiName><shortdesc>
      Indique le type d’événement survenu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/><apiDefaultValue>null
	 
	  </apiDefaultValue></apiValueDef><apiDesc>
      Indique le type d’événement survenu. La valeur de la propriété peut être l’une des valeurs de la classe CollectionEventKind ou <codeph>null</codeph>, ce qui indique que la catégorie est inconnue.
	 
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:location"><apiName>location</apiName><shortdesc>
      Lorsque la valeur de kind est CollectionEventKind.ADD, CollectionEventKind.MOVE, CollectionEventKind.REMOVE ou CollectionEventKind.REPLACE, cette propriété est l’index de base zéro dans la collection cible du ou des éléments spécifiés dans la propriété items.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.ADD</codeph>, <codeph>CollectionEventKind.MOVE</codeph>, <codeph>CollectionEventKind.REMOVE</codeph> ou <codeph>CollectionEventKind.REPLACE</codeph>, cette propriété est l’index de base zéro dans la collection cible du ou des éléments spécifiés dans la propriété <codeph>items</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:oldLocation"><apiName>oldLocation</apiName><shortdesc>
      Lorsque la valeur de kind est CollectionEventKind.MOVE, cette propriété est l’index de base zéro dans la collection cible de l’emplacement du ou des éléments spécifiés par la propriété items.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Lorsque la valeur de <codeph>kind</codeph> est <codeph>CollectionEventKind.MOVE</codeph>, cette propriété est l’index de base zéro dans la collection cible de l’emplacement du ou des éléments spécifiés par la propriété <codeph>items</codeph>.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
  La classe FlexMouseEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les activités de souris propres à Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe FlexMouseEvent représente l’objet d’événement transmis à l’écouteur d’événement pour les activités de souris propres à Flex.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE_mouseDownOutside"><apiName>mouseDownOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE_mouseWheelOutside"><apiName>mouseWheelOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexMouseEvent:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Position horizontale à laquelle l’événement est survenu.
	 
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Position verticale à laquelle l’événement est survenu.
	 
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Objet de liste d’affichage associé à l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche Control est enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche Alt est enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche Maj est enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Indique si la touche Control est enfoncée.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Nombre de lignes devant défiler chaque fois que l’utilisateur fait tourner la molette de sa souris d’un cran.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE"><apiName>MOUSE_DOWN_OUTSIDE</apiName><shortdesc>
	  La constante FlexMouseEvent.MOUSE_DOWN_OUTSIDE définit la valeur de la propriété type de l’objet d’événement d’un événement mouseDownOutside.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>FlexMouseEvent.MOUSE_DOWN_OUTSIDE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>mouseDownOutside</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Indique si la touche Alt est enfoncée (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>Indique si le bouton principal de la souris est enfoncé (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Indique si la touche Ctrl est enfoncée (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet définissant l’écouteur d’événement qui traite l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. Dans le cas des événements PopUpManager, l’objet est la fenêtre contextuelle.</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>Indique le nombre de lignes devant défiler chaque fois que l’utilisateur fait tourner la molette de sa souris d’un cran. Pour les événements PopUpManager, cette valeur est 0.</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>Position horizontale à laquelle l’événement est survenu. Dans le cas des événements PopUpManager, la valeur dépend du contrôle de la fenêtre contextuelle.</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>Position verticale à laquelle l’événement est survenu. Dans le cas des événements PopUpManager, la valeur dépend du contrôle de la fenêtre contextuelle.</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>Référence à un objet de la liste d’affichage qui est associé à l’événement. Dans le cas des événements PopUpManager, l’objet est le conteneur survolé par le pointeur de la souris.</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Indique si la touche Maj est enfoncée (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (il ne s’agit pas toujours de l’objet qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>. Dans le cas des événements PopUpManager, l’objet est la fenêtre contextuelle.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE"><apiName>MOUSE_WHEEL_OUTSIDE</apiName><shortdesc>
	  La constante FlexMouseEvent.MOUSE_WHEEL_OUTSIDE définit la valeur de la propriété type de l’objet d’événement d’un événement mouseWheelOutside.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>FlexMouseEvent.MOUSE_WHEEL_OUTSIDE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>mouseWheelOutside</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Indique si la touche Alt est enfoncée (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>Indique si le bouton principal de la souris est enfoncé (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Indique si la touche Ctrl est enfoncée (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>currentTarget</codeph></entry>
	         <entry>Objet définissant l’écouteur d’événement qui traite l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. Dans le cas des événements PopUpManager, l’objet est la fenêtre contextuelle.</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>Indique le nombre de lignes devant défiler chaque fois que l’utilisateur fait tourner la molette de sa souris d’un cran. Pour les événements PopUpManager, cette valeur est 0.</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>Position horizontale à laquelle l’événement est survenu. Dans le cas des événements PopUpManager, la valeur dépend du contrôle de la fenêtre contextuelle.</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>Position verticale à laquelle l’événement est survenu. Dans le cas des événements PopUpManager, la valeur dépend du contrôle de la fenêtre contextuelle.</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>Référence à un objet de la liste d’affichage qui est associé à l’événement. Dans le cas des événements PopUpManager, l’objet est le conteneur survolé par le pointeur de la souris.</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Indique si la touche Maj est enfoncée (<codeph>true</codeph>) ou non (<codeph>false</codeph>).</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (il ne s’agit pas toujours de l’objet qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>. Dans le cas des événements PopUpManager, l’objet est la fenêtre contextuelle.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ListEvent"><apiName>ListEvent</apiName><shortdesc>
   La classe ListEvent représente les événements associés aux éléments qui se trouvent dans des contrôles utilisant des listes, tels que List, Tree, Menu et DataGrid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
   La classe ListEvent représente les événements associés aux éléments qui se trouvent dans des contrôles utilisant des listes, tels que List, Tree, Menu et DataGrid.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.controls.listClasses.xml#ListBase"><linktext>mx.controls.listClasses.ListBase</linktext></link></related-links><adobeApiEvent id="mx.events:ListEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ListEvent:ListEvent"><apiName>ListEvent</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de base zéro de la colonne qui contient la fonctionnalité de rendu.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Index de base zéro de la ligne contenant la fonctionnalité de rendu ou, dans le cas des événements de modification, index de l’élément en cours de modification dans le fournisseur de données.
     
      </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Cause d’un événement <codeph>itemEditEnd</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Fonctionnalité de rendu d’élément de l’élément du fournisseur de données.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Constructeur. Normalement appelé par le contrôle Flex et non utilisé dans le code de l’application.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ListEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      La constante ListEvent.CHANGE définit la valeur de la propriété type de l’objet ListEvent d’un événement change, qui indique que la sélection a changé suite à une interaction de l’utilisateur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.CHANGE définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>change</codeph>, qui indique que la sélection a changé suite à une interaction de l’utilisateur.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu d’élément sur laquelle l’utilisateur a cliqué.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
      La constante ListEvent.ITEM_CLICK définit la valeur de la propriété type de l’objet ListEvent d’un événement itemClick, qui indique que l’utilisateur a cliqué sur un élément visuel du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_CLICK définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemClick</codeph>, qui indique que l’utilisateur a cliqué sur un élément visuel du contrôle.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu d’élément sur laquelle l’utilisateur a cliqué.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_DOUBLE_CLICK"><apiName>ITEM_DOUBLE_CLICK</apiName><shortdesc>
      La constante ListEvent.ITEM_DOUBLE_CLICK définit la valeur de la propriété type de l’objet ListEvent d’un événement itemDoubleClick, qui indique que l’utilisateur a double-cliqué sur un élément visuel du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemDoubleClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_DOUBLE_CLICK définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemDoubleClick</codeph>, qui indique que l’utilisateur a double-cliqué sur un élément visuel du contrôle.
     
      <p>Pour recevoir les événements itemDoubleClick, vous devez définir la propriété <codeph>doubleClickEnabled</codeph> du composant sur <codeph>true</codeph>.</p>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu d’élément sur laquelle l’utilisateur a double-cliqué.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_DOUBLE_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_BEGIN"><apiName>ITEM_EDIT_BEGIN</apiName><shortdesc>
      La constante ListEvent.ITEM_EDIT_BEGIN définit la valeur de la propriété type de l’objet d’événement d’un événement itemEditBegin, qui indique qu’un élément est sur le point d’être modifié.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBegin</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_EDIT_BEGIN définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>itemEditBegin</codeph>, qui indique qu’un élément est sur le point d’être modifié. 
     
      <p>L’écouteur par défaut de cet événement réalise les actions suivantes :</p>
     
      <ul>
        <li>Crée un objet d’éditeur d’éléments en appelant la méthode <codeph>createItemEditor()</codeph>.</li>
        <li>Copie la propriété <codeph>data</codeph> de l’élément vers l’éditeur. Par défaut, l’objet d’éditeur d’éléments est une occurrence du contrôle TextInput. Utilisez la propriété <codeph>itemEditor</codeph> du contrôle de liste pour spécifier une classe d’éditeur d’éléments personnalisé.</li>
     
        <li>Définissez la propriété <codeph>itemEditorInstance</codeph> du contrôle de liste de sorte qu’elle fasse référence à l’occurrence d’éditeur d’éléments.</li>
      </ul>
     
      <p>Vous pouvez écrire un écouteur d’événement pour cet événement, afin de modifier les données transmises à l’éditeur d’éléments. Vous pouvez par exemple modifier les données, le format ou toute autre information utilisée par l’éditeur d’éléments.</p>
     
      <p>Vous pouvez également créer un écouteur d’événement pour spécifier l’éditeur d’éléments utilisé pour modifier l’élément. Par exemple, vous pouvez disposer de deux éditeurs d’élément différents. Dans l’écouteur d’événement, vous pouvez examiner les données à modifier et d’autres informations et ouvrir l’éditeur d’éléments approprié en suivant la procédure ci-dessous :</p>
     
      <ol>
         <li>Appelez <codeph>preventDefault()</codeph> pour que Flex arrête d’appeler la méthode <codeph>createItemEditor()</codeph> dans le cadre de l’écouteur d’événement par défaut.</li>
         <li>Définissez la propriété <codeph>itemEditor</codeph> sur l’éditeur approprié.</li>
         <li>Appelez la méthode <codeph>createItemEditor()</codeph>.</li>
      </ol>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu de l’élément en cours de modification.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_BEGINNING"><apiName>ITEM_EDIT_BEGINNING</apiName><shortdesc>
      La constante ListEvent.ITEM_EDIT_BEGINNING définit la valeur de la propriété type de l’objet ListEvent d’un événement itemEditBeginning, qui indique que l’utilisateur s’est préparé à modifier un élément, par exemple en relâchant le bouton de la souris sur l’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBeginning</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_EDIT_BEGINNING définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemEditBeginning</codeph>, qui indique que l’utilisateur s’est préparé à modifier un élément, par exemple en relâchant le bouton de la souris sur l’élément. 
     
      <p>L’écouteur par défaut de cet événement définit la propriété <codeph>List.editedItemPosition</codeph> sur l’élément qui a le focus, ce qui démarre la session de modification d’élément.</p>
     
      <p>En règle générale, vous écrivez votre propre écouteur d’événement pour cet événement afin d’empêcher la modification d’un ou de plusieurs éléments. Le fait d’appeler la méthode <codeph>preventDefault()</codeph> à partir de votre propre écouteur d’événement pour cet événement empêche l’exécution de l’écouteur par défaut.</p>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu de l’élément qui sera modifié. La valeur de cette propriété est null si cet événement est généré par le clavier, car l’élément à modifier peut être hors écran.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_END"><apiName>ITEM_EDIT_END</apiName><shortdesc>
      La constante ListEvent.ITEM_EDIT_END définit la valeur de la propriété type de l’objet ListEvent d’un événement itemEditEnd, qui indique qu’une session de modification se termine.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_EDIT_END définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemEditEnd</codeph>, qui indique qu’une session de modification se termine. 
     
      <p>Les composants de liste disposent d’un gestionnaire par défaut pour cet événement, qui copie les données de l’éditeur d’éléments vers le fournisseur de données du contrôle de liste. L’écouteur d’événement par défaut réalise les actions suivantes :</p>
     
      <ul>
        <li>Utilise la propriété <codeph>editorDataField</codeph> du contrôle de liste pour déterminer la propriété de l’éditeur d’éléments contenant les nouvelles données et met à jour l’élément du fournisseur de données en utilisant ces nouvelles données. L’éditeur d’éléments par défaut étant le contrôle TextInput, la valeur par défaut de la propriété <codeph>editorDataField</codeph> est <codeph>"text"</codeph>, pour indiquer que la propriété <codeph>text</codeph> du contrôle TextInput contient les nouvelles données d’élément.</li>
     
        <li>Appelle la méthode <codeph>destroyItemEditor()</codeph> pour fermer l’éditeur d’éléments.</li>
      </ul>
     
      <p>En général, le fait d’écrire un écouteur d’événement permet à cet événement de réaliser les actions suivantes :</p>
      <ul>
        <li>Dans l’écouteur d’événement, vous pouvez modifier les données retournées par l’éditeur vers le composant de liste. Vous pouvez par exemple formater à nouveau les données avant de les renvoyer vers le contrôle de liste. Par défaut, un éditeur d’éléments peut seulement renvoyer une valeur unique. Vous devez écrire un écouteur d’événement pour l’événement <codeph>itemEditEnd</codeph> si vous souhaitez renvoyer plusieurs valeurs.</li> 
     
        <li>Dans l’écouteur d’événement, vous pouvez examiner les données saisies dans l’éditeur d’éléments. Si les données ne sont pas correctes, vous pouvez appeler la méthode <codeph>preventDefault()</codeph> pour empêcher Flex de transmettre les nouvelles données au contrôle de liste et de fermer l’éditeur. </li>
      </ul>
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu d’élément de l’élément modifié.</entry></row><row><entry><codeph>reason</codeph></entry><entry>Constante qui justifie l’événement. La valeur doit être membre de la classe <codeph>ListEventReson</codeph>.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_EDIT_END</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_FOCUS_IN"><apiName>ITEM_FOCUS_IN</apiName><shortdesc>
      La constante ListEvent.ITEM_FOCUS_IN définit la valeur de la propriété type de l’objet ListEvent d’un événement itemFocusIn, qui indique qu’un élément a reçu le focus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_FOCUS_IN définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemFocusIn</codeph>, qui indique qu’un élément a reçu le focus.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Occurrence d’éditeur d’éléments de l’élément en cours de modification.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_FOCUS_IN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_FOCUS_OUT"><apiName>ITEM_FOCUS_OUT</apiName><shortdesc>
      La constante ListEvent.ITEM_FOCUS_OUT définit la valeur de la propriété type de l’objet ListEvent d’un événement itemFocusOut, qui indique qu’un élément a perdu le focus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_FOCUS_OUT définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemFocusOut</codeph>, qui indique qu’un élément a perdu le focus.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Occurrence d’éditeur d’éléments de l’élément modifié.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_FOCUS_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      La constante ListEvent.ITEM_ROLL_OUT définit la valeur de la propriété type de l’objet ListEvent d’un événement itemRollOut, qui indique que l’utilisateur a éloigné le pointeur de la souris d’un élément visuel du contrôle après l’avoir survolé.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_ROLL_OUT définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemRollOut</codeph>, qui indique que l’utilisateur a éloigné le pointeur de la souris d’un élément visuel du contrôle après l’avoir survolé.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu d’élément que l’utilisateur a arrêté de survoler.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      La constante ListEvent.ITEM_ROLL_OVER définit la valeur de la propriété type de l’objet ListEvent d’un événement itemRollOver, qui indique que l’utilisateur a placé le pointeur de la souris au-dessus d’un élément visuel du contrôle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      La constante ListEvent.ITEM_ROLL_OVER définit la valeur de la propriété <codeph>type</codeph> de l’objet ListEvent d’un événement <codeph>itemRollOver</codeph>, qui indique que l’utilisateur a placé le pointeur de la souris au-dessus d’un élément visuel du contrôle.
     
      <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Index de base zéro de la colonne associée à l’événement.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Fonctionnalité de rendu d’élément survolée.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Index de base zéro de l’élément associé à l’événement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>Type</codeph></entry><entry>ListEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      Index de base zéro de la colonne contenant la fonctionnalité de rendu d’élément dans laquelle l’événement s’est produit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de base zéro de la colonne contenant la fonctionnalité de rendu d’élément dans laquelle l’événement s’est produit.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Fonctionnalité de rendu d’élément dans laquelle l’événement s’est produit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Fonctionnalité de rendu d’élément dans laquelle l’événement s’est produit. Vous pouvez accéder à l’élément du fournisseur de données à l’aide de cette propriété. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:reason"><apiName>reason</apiName><shortdesc>
      Cause de la distribution de l’événement itemEditEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Cause de la distribution de l’événement <codeph>itemEditEnd. </codeph> Valide uniquement pour les événements de type <codeph>ITEM_EDIT_END</codeph>. Les valeurs possibles sont définies dans la classe ListEventReason.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ListEventReason"><linktext>ListEventReason</linktext></link></related-links></apiValue><apiValue id="mx.events:ListEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Index de base zéro de la ligne contenant la fonctionnalité de rendu d’élément ou, dans le cas des événements de modification, index de l’élément en cours de modification dans le fournisseur de données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Index de base zéro de la ligne contenant la fonctionnalité de rendu d’élément ou, dans le cas des événements de modification, index de l’élément en cours de modification dans le fournisseur de données.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DateChooserEventDetail"><apiName>DateChooserEventDetail</apiName><shortdesc>
  Constantes définissant les valeurs de la propriété detail d’un objet DateChooserEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Constantes définissant les valeurs de la propriété <codeph>detail</codeph> d’un objet DateChooserEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#DateChooserEvent"><linktext>mx.events.DateChooserEvent</linktext></link></related-links><apiValue id="mx.events:DateChooserEventDetail:NEXT_MONTH"><apiName>NEXT_MONTH</apiName><shortdesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers le mois suivant.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>nextMonth</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers le mois suivant.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:NEXT_YEAR"><apiName>NEXT_YEAR</apiName><shortdesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers l’année suivante.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>nextYear</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers l’année suivante.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:PREVIOUS_MONTH"><apiName>PREVIOUS_MONTH</apiName><shortdesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers le mois précédent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>previousMonth</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers le mois précédent.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:PREVIOUS_YEAR"><apiName>PREVIOUS_YEAR</apiName><shortdesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers l’année précédente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>previousYear</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Indique que l’utilisateur a fait défiler le calendrier vers l’année précédente.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
  Représente les événements distribués lorsque l’enfant d’un contrôle est créé ou détruit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les événements distribués lorsque l’enfant d’un contrôle est créé ou détruit. 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_ADD_childAdd"><apiName>childAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_ADD</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE_childRemove"><apiName>childRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_REMOVE</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED_overlayCreated"><apiName>overlayCreated</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ChildExistenceChangedEvent:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Référence à l’objet enfant créé ou détruit.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_ADD"><apiName>CHILD_ADD</apiName><shortdesc>
	  La constante ChildExistenceChangedEvent.CHILD_ADD définit la valeur de la propriété type de l’objet d’événement d’un événement childAdd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ChildExistenceChangedEvent.CHILD_ADD</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>childAdd</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Contient une référence à l’objet enfant créé.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE"><apiName>CHILD_REMOVE</apiName><shortdesc>
	  La constante ChildExistenceChangedEvent.CHILD_REMOVE définit la valeur de la propriété type de l’objet d’événement d’un événement childRemove.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ChildExistenceChangedEvent.CHILD_REMOVE</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>childRemove</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Contient une référence à l’objet enfant sur le point d’être supprimé.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED"><apiName>OVERLAY_CREATED</apiName><shortdesc>
	  La constante ChildExistenceChangedEvent.OVERLAY_CREATED définit la valeur de la propriété type de l’objet d’événement d’un événement overlayCreated.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>overlayCreated</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ChildExistenceChangedEvent.OVERLAY_CREATED</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement <codeph>overlayCreated</codeph>.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Contient une référence à l’objet enfant dont l’incrustation a été créée.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  Référence à l’objet enfant créé ou détruit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  Référence à l’objet enfant créé ou détruit.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
  La classe StateChangeEvent représente un événement distribué lorsque la propriété currentState d’un composant change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe StateChangeEvent représente un événement distribué lorsque la propriété <codeph>currentState</codeph> d’un composant change.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link><link href="mx.states.xml#State"><linktext>mx.states.State</linktext></link></related-links><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE_currentStateChange"><apiName>currentStateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING_currentStateChanging"><apiName>currentStateChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGING</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StateChangeEvent:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nom de l’état d’affichage que le composant est sur le point de quitter.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Nom de l’état d’affichage que le composant est sur le point d’adopter.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur. Normalement appelé par un contrôle Flex et non utilisé dans le code de l’application.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE"><apiName>CURRENT_STATE_CHANGE</apiName><shortdesc>
	  La constante StateChangeEvent.CURRENT_STATE_CHANGE définit la valeur de la propriété type de l’événement distribué lorsque l’état d’affichage change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante StateChangeEvent.CURRENT_STATE_CHANGE définit la valeur de la propriété <codeph>type</codeph> de l’événement distribué lorsque l’état d’affichage change. La valeur de cette constante est « currentStateChange ».
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>newState</codeph></entry><entry>Nom de l’état d’affichage adopté.</entry></row><row><entry><codeph>oldState</codeph></entry><entry>Nom de l’état d’affichage quitté.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent.CURRENT_STATE_CHANGE</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING"><apiName>CURRENT_STATE_CHANGING</apiName><shortdesc>
	  La constante StateChangeEvent.CURRENT_STATE_CHANGING définit la valeur de la propriété type de l’événement distribué lorsque l’état d’affichage est sur le point de changer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante StateChangeEvent.CURRENT_STATE_CHANGING définit la valeur de la propriété <codeph>type</codeph> de l’événement distribué lorsque l’état d’affichage est sur le point de changer. La valeur de cette constante est « currentStateChanging ».
	 
	  <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>newState</codeph></entry><entry>Nom de l’état d’affichage en cours d’adoption.</entry></row><row><entry><codeph>oldState</codeph></entry><entry>Nom de l’état d’affichage en cours d’abandon.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent.CURRENT_STATE_CHANGING</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:newState"><apiName>newState</apiName><shortdesc>
	  Nom de l’état d’affichage que le composant est en train d’adopter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Nom de l’état d’affichage que le composant est en train d’adopter.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:oldState"><apiName>oldState</apiName><shortdesc>
	  Nom de l’état d’affichage que le composant est en train de quitter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Nom de l’état d’affichage que le composant est en train de quitter.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEventDirection"><apiName>ScrollEventDirection</apiName><shortdesc>
  Constantes des valeurs de la propriété direction d’un objet ScrollEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Constantes des valeurs de la propriété <codeph>direction</codeph> d’un objet ScrollEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#ScrollEvent"><linktext>mx.events.ScrollEvent</linktext></link></related-links><apiValue id="mx.events:ScrollEventDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
	  L’utilisateur a effectué un défilement horizontal.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  L’utilisateur a effectué un défilement horizontal.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
	  L’utilisateur a effectué un défilement vertical.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  L’utilisateur a effectué un défilement vertical.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEvent"><apiName>ScrollEvent</apiName><shortdesc>
  Représente les événements distribués par la classe ScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Représente les événements distribués par la classe ScrollBar.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ScrollEvent:SCROLL_scroll"><apiName>scroll</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ScrollEvent:SCROLL</apiEventType><adobeApiEventClassifier>mx.events:ScrollEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ScrollEvent:ScrollEvent"><apiName>ScrollEvent</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Type d’événement ; indique l’action qui a déclenché l’événement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Spécifie si l’événement peut propager vers le haut la hiérarchie de la liste d’affichage.
         
          </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Détermine si le comportement associé à l’événement peut être évité.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Fournit des détails sur le type d’activité de défilement. Les constantes des valeurs possibles sont fournies dans la classe ScrollEventDetail.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>position</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Nouvelle position de défilement.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Direction du défilement, c’est-à-dire soit <codeph>ScrollEventDirection.HORIZONTAL</codeph>, soit <codeph>ScrollEventDirection.VERTICAL</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Changement de la position du défilement, exprimé en pixels.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Constructeur.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ScrollEvent:SCROLL"><apiName>SCROLL</apiName><shortdesc>
	  La constante ScrollEvent.SCROLL définit la valeur de la propriété type de l’objet d’événement d’un événement scroll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  La constante <codeph>ScrollEvent.SCROLL</codeph> définit la valeur de la propriété <codeph>type</codeph> de l’objet d’événement d’un événement scroll.
	 
     <p>Les valeurs des propriétés de l’objet d’événement sont les suivantes :</p>
	  <adobetable class="innertable">
	     
         
         
         
 	       
	       
 	       
         
	  <tgroup cols="2"><thead><row><entry>Propriété</entry><entry>Valeur</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Objet qui définit l’écouteur d’événement qui gère l’événement. Par exemple, si vous utilisez <codeph>myButton.addEventListener()</codeph> pour enregistrer un écouteur d’événement, la valeur de la propriété <codeph>currentTarget</codeph> est myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Contient le changement de position du défilement, en pixels. Une valeur positive indique que le défilement a été réalisé vers le bas ou la droite. Une valeur négative indique que le défilement a été réalisé vers le haut ou la gauche.</entry></row><row><entry><codeph>direction</codeph></entry><entry>Contient la direction du défilement, c’est-à-dire soit <codeph>ScrollEventDirection.HORIZONTAL</codeph>, soit <codeph>ScrollEventDirection.VERTICAL</codeph>.</entry></row><row><entry><codeph>position</codeph></entry><entry>Contient la nouvelle position de défilement.</entry></row><row><entry><codeph>target</codeph></entry><entry>Objet qui a distribué l’événement (ce n’est pas toujours celui qui écoute l’événement). Pour accéder systématiquement à l’objet qui écoute l’événement, utilisez la propriété <codeph>currentTarget</codeph>.</entry></row></tbody></tgroup></adobetable>
         
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEvent:delta"><apiName>delta</apiName><shortdesc>
	  Modification de la valeur de position de défilement résultant du défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Modification de la valeur de position de défilement résultant du défilement. Valeur, exprimée en pixels. Une valeur positive indique que le défilement a été réalisé vers le bas ou la droite. Une valeur négative indique que le défilement a été réalisé vers le haut ou la gauche.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEvent:detail"><apiName>detail</apiName><shortdesc>
	  Fournit des détails sur l’activité de défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Fournit des détails sur l’activité de défilement. Les constantes des valeurs possibles sont fournies dans la classe ScrollEventDetail.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ScrollEventDetail"><linktext>mx.events.ScrollEventDetail</linktext></link></related-links></apiValue><apiValue id="mx.events:ScrollEvent:direction"><apiName>direction</apiName><shortdesc>
	  Direction du mouvement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Direction du mouvement. Valeurs possibles : <codeph>ScrollEventDirection.VERTICAL</codeph> et <codeph>ScrollEventDirection.HORIZONTAL</codeph>.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ScrollEventDirection"><linktext>mx.events.ScrollEventDirection</linktext></link></related-links></apiValue><apiValue id="mx.events:ScrollEvent:position"><apiName>position</apiName><shortdesc>
	  Nouvelle position de défilement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Nouvelle position de défilement.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>