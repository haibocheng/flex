<?xml version="1.0"?>
<apiPackage id="mx.controls"><apiName>mx.controls</apiName><apiDetail/><apiClassifier id="mx.controls:ProgressBarLabelPlacement"><apiName>ProgressBarLabelPlacement</apiName><shortdesc>
  ProgressBarLabelPlacement クラスは、ProgressBar クラスの labelPlacement プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  ProgressBarLabelPlacement クラスは、ProgressBar クラスの <codeph>labelPlacement</codeph> プロパティの値を定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarLabelPlacement:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
	  プログレスバーの下側にラベルを配置します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プログレスバーの下側にラベルを配置します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:CENTER"><apiName>CENTER</apiName><shortdesc>
	  プログレスバー内部の中央に配置します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>center</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プログレスバー内部の中央に配置します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:LEFT"><apiName>LEFT</apiName><shortdesc>
	  プログレスバーの左側にラベルを配置します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プログレスバーの左側にラベルを配置します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  プログレスバーの右側にラベルを配置します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プログレスバーの右側にラベルを配置します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:TOP"><apiName>TOP</apiName><shortdesc>
	  プログレスバーの上側にラベルを配置します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  プログレスバーの上側にラベルを配置します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TextArea"><apiName>TextArea</apiName><shortdesc>
  TextArea コントロールは複数行のテキストフィールドで、境界線とオプションのスクロールバーが含まれます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Alternative owner="mx.controls:TextArea" replacement="spark.components.TextArea" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:TextArea" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効である場合の色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの上の境界と、コンテンツ領域の上端との間のピクセル数です。
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの下の境界と、コンテンツ領域の下端との間のピクセル数です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右の境界とコンテンツ領域の右端との間のピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:TextArea" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TextArea&gt;</code> tag inherits the attributes
  of its superclass and adds the following attributes:</p>
 
  <pre>
  &lt;mx:TextArea
    <b>Properties</b>
    condenseWhite="false|true"
    data="undefined"
    displayAsPassword="false|true"
    editable="true|false"
    horizontalScrollPolicy="auto|on|off"
    horizontalScrollPosition="0"
    htmlText="null"
    imeMode="null"
    length="0"
    listData="null"
    maxChars="0"
    restrict="null"
    selectionBeginIndex="0"
    selectionEndIndex="0"
    styleSheet="null"
    text=""
    textHeight="<i>height of text</i>" [read-only]
    textWidth="<i>width of text</i>" [read-only]
    verticalScrollPolicy="auto|on|off"
    verticalScrollPosition="0"
    wordWrap="true|false"
    &nbsp;
    <b>Styles</b>
    disabledColor="0xAAB3B3"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    paddingLeft="0""
    paddingRight="0""
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:ScrollControlBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  TextArea コントロールは複数行のテキストフィールドで、境界線とオプションのスクロールバーが含まれます。 TextArea コントロールは、Flash Player と AIR の HTML レンダリング機能をサポートします。
 
  <p>TextArea コントロールを無効にすると、その中のコンテンツは、<codeph>disabledColor</codeph> スタイルで指定された色で表示されます。 TextArea コントロールを読み取り専用に設定すると、テキストの編集を禁止できます。 入力されるテキストを隠し、文字をアスタリスクで表示するには、TextArea の <codeph>displayAsPassword</codeph> プロパティを設定します。</p>
 
  <p>TextArea コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>幅：160 ピクセル、高さ：44 ピクセル</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>10000 × 10000 ピクセル</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextAreaExample.mxml"><swfblock conref="examples/TextAreaExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label</linktext></link><link href="mx.controls.xml#Text"><linktext>mx.controls.Text</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange</linktext></link></related-links><adobeApiEvent id="mx.controls:TextArea_flash.events.TextEvent.TEXT_INPUT_textInput"><apiName>textInput</apiName><shortdesc>
  ユーザーがコントロールに対してテキストの入力、削除またはペーストを実行したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.TEXT_INPUT</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがコントロールに対してテキストの入力、削除またはペーストを実行したときに送出されます。ユーザーが Delete キーまたは Backspace キーを押したときは、イベントは送出されません。
 
  <p><codeph>TextEvent.bubbles</codeph> プロパティのデフォルト値が <codeph>true</codeph> でも、このコントロールは <codeph>TextEvent.bubbles</codeph> プロパティを <codeph>false</codeph> に設定してイベントを送出します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_flash.events.TextEvent.LINK_link"><apiName>link</apiName><shortdesc> 
  htmlText プロパティで定義されているテキストのハイパーリンクをユーザーがクリックしたときに送出されます（URL は "event:" で始まります）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.LINK</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
  <codeph>htmlText</codeph> プロパティで定義されているテキストのハイパーリンクをユーザーがクリックしたときに送出されます（URL は <codeph>"event:"</codeph> で始まります）。 URL の <codeph>"event:"</codeph> の後の残りの部分は、<codeph>link</codeph> イベントオブジェクトの text プロパティ内に配置されます。
 
  <p><codeph>link</codeph> イベントを扱う場合、ハイパーリンクは自動的には実行されません。イベントハンドラー内から手動でハイパーリンクを実行する必要があります。 通常、<codeph>navigateToURL()</codeph> メソッドを使用してハイパーリンクを実行します。 これにより、アプリケーション内でハイパーリンクを変更することができ、場合によってはハイパーリンクの実行を禁止することもできます。 </p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使う場合、<codeph>data</codeph> プロパティは表示するデータを保持します。 このイベントを受け取って、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新することができます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  TextArea コントロール内のテキストがユーザーの入力によって変化したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  TextArea コントロール内のテキストがユーザーの入力によって変化したときに送出されます。データバインディングまたは ActionScript コードを使用してテキストを変更した場合、このイベントは生成されません。
 
  <p><codeph>Event.bubbles</codeph> プロパティのデフォルト値が <codeph>true</codeph> でも、このコントロールは <codeph>Event.bubbles</codeph> プロパティを <codeph>false</codeph> に設定してイベントを送出します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TextArea:TextArea"><apiName>TextArea</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:TextArea:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      コントロール内のテキスト行のテキストの位置と測定に関する情報を持つ TextLineMetrics オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>コントロール内の指定されたテキスト行のテキストの位置と測定に関する情報を含むオブジェクトです。
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>メトリックを取得する行の 0 から始まるインデックスです。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      コントロール内のテキスト行のテキストの位置と測定に関する情報を持つ TextLineMetrics オブジェクトを返します。正しい数値を取得するには、コンポーネントを検証する必要があります。<codeph>text</codeph> または <codeph>htmlText</codeph> プロパティを設定し、その直後に <codeph>getLineMetrics()</codeph> を呼び出した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、<codeph>validateNow()</codeph> を呼び出します。 この動作は、値を直ちに更新する flash.text.TextField クラスの動作とは異なります。
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextArea:setSelection"><apiName>setSelection</apiName><shortdesc>
      パラメーターで指定された範囲のテキストを選択します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginIndex</apiItemName><apiType value="int"/><apiDesc>選択範囲の先頭の文字の 0 ベースのインデックスです。つまり、先頭の文字が 0 で、2 番目の文字が 1 です（以下同様）。
     
      </apiDesc></apiParam><apiParam><apiItemName>endIndex</apiItemName><apiType value="int"/><apiDesc>選択範囲の最後の文字の<i>直後</i>の位置を示す 0 ベースのインデックスです。つまり、最後の文字の位置を示す 1 ベースインデックスと同じです。パラメーターが 5 の場合、選択範囲の最後の文字は 5 番目の文字です。 TextArea コントロールがフォーカスを取得したとき、<codeph>selectionBeginIndex</codeph> プロパティと <codeph>selectionEndIndex</codeph> プロパティが両方とも設定されている場合は、選択範囲が表示されます。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      パラメーターで指定された範囲のテキストを選択します。 コントロールがフォーカスを持っていない場合、選択範囲は、コントロールがフォーカスを取得するまではハイライト表示されません。また、コントロールのクリックによってフォーカスが取得された場合、それまでのすべての選択範囲は失われます。2 つのパラメーターが同一の場合、新しい選択範囲が挿入ポイントです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:TextArea:protected:textField"><apiName>textField</apiName><shortdesc>
      この TextArea のテキストを表示するための内部 UITextField です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      この TextArea のテキストを表示するための内部 UITextField です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      HTML テキストの TextArea コントロールから余分な空白文字（スペースや改行など）を削除するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      HTML テキストの TextArea コントロールから余分な空白文字（スペースや改行など）を削除するかどうかを指定します。
      
      <p><codeph>condenseWhite</codeph> プロパティは、<codeph>htmlText</codeph> プロパティで設定されたテキストにのみ影響し、<codeph>text</codeph> プロパティで設定されたテキストには影響しません。 <codeph>text</codeph> プロパティでテキストを設定した場合、<codeph>condenseWhite</codeph> は無視されます。</p>
     
      <p><codeph>condenseWhite</codeph> プロパティを <codeph>true</codeph> に設定した場合は、テキストフィールド内で改行を指定するときに <codeph>&lt;br></codeph> や <codeph>&lt;p></codeph> などの標準の HTML コマンドを使用する必要があります。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:data:get"><apiName>data</apiName><shortdesc>
      アイテムレンダラーまたはアイテムエディターでコンポーネントを使用するときに、コンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーまたはアイテムエディターでコンポーネントを使用するときに、そのコンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてコントロールを使用すると、アイテムの現在の値が、このコントロールの <codeph>text</codeph> プロパティに自動的に書き込まれます。</p>
     
      <p>MXML でこのプロパティを設定することはありません。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:displayAsPassword:get"><apiName>displayAsPassword</apiName><shortdesc>
      このコントロールがパスワードの入力で使用されるかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3177
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue><apiTipTexts><apiTipText>実際の文字の代わりに ' を表示するかどうかを指定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      このコントロールがパスワードの入力で使用されるかどうかを示します。 <codeph>true</codeph> の場合、入力されたテキストはフィールドには表示されません。代わりに、コントロールに入力された各テキストの文字は、文字「*」として表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:editable:get"><apiName>editable</apiName><shortdesc>
      このコントロール内のテキストをユーザーが編集できるかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3176
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true;
     
      </apiDefaultValue><apiTipTexts><apiTipText>コンポーネントが編集可能かどうかを指定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      このコントロール内のテキストをユーザーが編集できるかどうかを示します。 <codeph>true</codeph> の場合、ユーザーがテキストを編集できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:horizontalScrollPolicy:get"><apiName>horizontalScrollPolicy</apiName><shortdesc>
      水平スクロールバーを常にオンにするか（ScrollPolicy.ON）、常にオフにするか（ScrollPolicy.OFF）、または必要に応じてオンにするか（ScrollPolicy.AUTO）を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ScrollPolicy.AUTO
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      水平スクロールバーを常にオンにするか（<codeph>ScrollPolicy.ON</codeph>）、常にオフにするか（<codeph>ScrollPolicy.OFF</codeph>）、または必要に応じてオンにするか（<codeph>ScrollPolicy.AUTO</codeph>）を指定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      TextArea コントロールによって表示されるテキストを指定します。テキストのスタイルを表す HTML マークアップを含めて指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      TextArea コントロールによって表示されるテキストを指定します。テキストのスタイルを表す HTML マークアップを含めて指定します。 このプロパティで HTML テキストを指定する場合は、Flash TextField コントロールでサポートされている HTML タグのサブセットを使用できます。
     
      <p>このプロパティを設定すると、TextArea インスタンスに CSS スタイルが適用された後に HTML マークアップが適用されます。このプロパティを取得すると、HTML マークアップに CSS スタイルが含まれます。</p>
      
      <p>例えば、<codeph>"This is an example of &lt;b>bold&lt;/b> markup"</codeph> という文字列を設定した場合、TextArea には、通常適用される CSS スタイルが適用された「This is an example of <b>bold</b> markup」というテキストが表示されます。 また、<codeph>&lt;b></codeph> マークアップによって、「bold」という単語がボールド体のフォントで表示されます。</p>
     
      <p>HTML マークアップでは、&lt; や > などの文字を使用します。これらの文字は、XML では特別な意味を持っています（MXML でも同じです）。 したがって、次のようなコードはコンパイルされません。</p>
      
      <pre>
      &lt;mx:TextArea htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>この問題を回避するには、3 つの方法があります。</p>
      
      <ul>
      
      <li>
      
      <p>ActionScript メソッドの <codeph>htmlText</codeph> プロパティを設定します（ActionScript は、<codeph>initialize</codeph> ハンドラーとして呼び出されます）。</p>
      
      <pre>
      &lt;mx:TextArea id="myTextArea" initialize="myTextArea_initialize()"/>
      </pre>
      
      <p><codeph>myTextArea_initialize</codeph> メソッドは、スクリプトの CDATA セクションに指定します。</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myTextArea_initialize():void {
          myTextArea.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>HTML マークアップの読みやすさが保たれるので、これが最も単純な方法です。 TextArea には <codeph>id</codeph> を割り当てる必要があります。これにより、<codeph>initialize</codeph> ハンドラーで TextArea を参照できるようになります。</p>
      
      </li>
      
      <li>
      
      <p>CDATA セクションで子タグを使用して、<codeph>htmlText</codeph> プロパティを指定します。 XML の CDATA セクションには、&lt; や > などの文字が特別な意味を持たない文字データが含まれます。</p>
      
      <pre>
      &lt;mx:TextArea>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:TextArea/>
      </pre>
      
      <p>XML では属性の値に CDATA を使用できないため、<codeph>htmlText</codeph> プロパティを属性ではなく子タグとして記述する必要があります（<codeph>&lt;mx:TextArea></codeph> タグにおいて）。 マークアップは読み取れますが、CDATA セクションではこの方法は複雑になります。</p>
      
      </li>
      
      <li>
      
      <p>次のように、<codeph>hmtlText</codeph> 属性に、HTML マークアップ文字で &lt; と > を記述する部分に XML エンティティの <codeph>&amp;lt;</codeph> と <codeph>&amp;gt;</codeph> を使用した値を指定して使用します。</p>
      
      <pre>
      &lt;mx:TextArea htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      HTML マークアップの読み取りがほとんど不可能になるので、この方法はお勧めしません。
      
      </li>
      
      </ul>
      
      <p><codeph>condenseWhite</codeph> プロパティが <codeph>true</codeph> の場合、<codeph>htmlText</codeph> プロパティが設定されていると、複数の空白文字は、HTML 対応ブラウザーと同じように圧縮されます。例えば、3 つの連続するスペースは、1 つのスペースとして表示されます。 <codeph>condenseWhite</codeph> の既定値は <codeph>false</codeph> なので、空白文字を圧縮するには <codeph>condenseWhite</codeph> を <codeph>true</codeph> に設定する必要があります。</p>
      
      <p><codeph>htmlText</codeph> プロパティの設定直後にそれを読み込んだ場合は、設定したものと同じストリングが取得されます。 ただし、LayoutManager の実行後には、値は変更され、CSS スタイルを含むマークアップが追加されます。</p>
      
      <p><codeph>htmlText</codeph> プロパティの設定は、様々な方法で <codeph>text</codeph> プロパティに影響を与えます。 <codeph>text</codeph> プロパティの読み込みを<codeph>htmlText</codeph> プロパティの設定直後に行うと、<codeph>null</codeph> が取得されます。これは、<codeph>text</codeph>（新しい <codeph>htmlText</codeph> に対応）がまだ決定されていないことを示します。 ただし、LayoutManager の実行後には、<codeph>text</codeph> プロパティの値はすべての HTML マークアップが削除された <codeph>htmlText</codeph> 文字列に変更されます。つまり、値は、TextArea が実際に表示する文字になります。</p>
       
      <p>逆に、<codeph>text</codeph> プロパティを設定すると、前に設定された <codeph>htmlText</codeph> プロパティが適切でなくなります。 <codeph>htmlText</codeph> プロパティの読み込みを <codeph>text</codeph> プロパティの設定直後に行うと、<codeph>null</codeph> が取得されます。これは、<codeph>htmlText</codeph>（新しい <codeph>text</codeph> に対応）がまだ決定されていないことを示します。 ただし、LayoutManager の実行後には、<codeph>htmlText</codeph> プロパティの値は変更され、新しいテキストに CSS スタイル用の HTML マークアップが追加されたものになります。</p>
     
      <p>LayoutManager を直ちに実行させるには、TextArea で <codeph>validateNow()</codeph> メソッドを呼び出します。 例えば、何らかの <codeph>htmlText</codeph> を設定し、<codeph>validateNow()</codeph> メソッドを呼び出し、HTML マークアップを含まない、対応する <codeph>text</codeph> を直ちに取得できます。</p>
      
      <p>ActionScript の中に <codeph>text</codeph> プロパティと <codeph>htmlText</codeph> プロパティの両方を設定した場合は、最後に設定されたプロパティが有効になります。 MXML では両方設定しないでください。これは、MXML ではインスタンスのプロパティの取得を特定の順序で設定することが保証されていないためです。</p>
      
      <p><codeph>text</codeph> プロパティまたは <codeph>htmlText</codeph> プロパティをループの中に設定すると処理が速くなります。これは、テキストを実際に表示する TextField が、LayoutManager が実行されるまでは更新されないためです。</p>
     
      <p>このプロパティを <codeph>null</codeph> に設定しようとした場合は、代わりに空のストリングに設定されます。 このプロパティの値が一時的に <codeph>null</codeph> になった場合、<codeph>text</codeph> が設定されたばかりで、対応する <codeph>htmlText</codeph> がまだ認識されていないことを意味します。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      IME（入力メソッドエディター）のモードを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
     </apiDefaultValue></apiValueDef><apiDesc>
      IME（入力メソッドエディター）のモードを指定します。 IME を使用することによって、ユーザーは中国語、日本語、および韓国語のテキストを入力できます。Flex では、コントロールにフォーカスが置かれたときに、IME を指定されたモードに設定し、コントロールからフォーカスが離れたときに、元のモードに戻します。
     
      <p>flash.system.IMEConversionMode クラスで、このプロパティの有効な値の定数を定義します。IME を指定しない場合は、<codeph>null</codeph> を指定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:length:get"><apiName>length</apiName><shortdesc>
      TextArea に表示されるテキストの文字数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3173
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>TextArea 内の文字数です。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      TextArea に表示されるテキストの文字数です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの listData プロパティが、リストコントロールからの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの <codeph>listData</codeph> プロパティが、リストコントロールからの該当するデータで初期化されます。 その後、コンポーネントでこの <codeph>listData</codeph> プロパティを使用して、ドロップインアイテムレンダラーまたはドロップインアイテムエディターの <codeph>data</codeph> プロパティを初期化できます。
     
      <p>MXML および ActionScript でこのプロパティを設定することはありません。このコンポーネントがドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用されるときに、Flex でプロパティが設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      テキストフィールドにユーザーが入力できる最大文字数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3172
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiTipTexts><apiTipText>TextArea に入る最大文字数です。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      テキストフィールドにユーザーが入力できる最大文字数です。 コントロールの <codeph>text</codeph> または <codeph>htmlText</codeph> プロパティの設定によって指定されるテキストの長さが、このプロパティによって制限されることはありません。
     
      <p>デフォルト値は 0 です。これは、制限がないことを意味します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:restrict:get"><apiName>restrict</apiName><shortdesc>
      ユーザーがコントロールに入力できる文字のセットを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3174
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue><apiTipTexts><apiTipText>TextArea に入力できる文字のセットです。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      ユーザーがコントロールに入力できる文字のセットを示します。 <codeph>restrict</codeph> プロパティの値が <codeph>null</codeph> である場合は、任意の文字を入力できます。<codeph>restrict</codeph> プロパティの値が空のストリングである場合は、いずれの文字も入力できません。このプロパティはユーザーの操作のみを制限します。スクリプトでテキストフィールドに入力するテキストは制限しません。 <codeph>restrict</codeph> プロパティの値が文字のストリングである場合は、そのストリング内の文字のみをテキストフィールドに入力できます。
     
      <p>ストリングは左から右へスキャンされます。 ハイフン（-）文字を使用して、範囲を指定できます。ストリングがキャレット（^）文字で始まる場合、そのストリングに含まれる文字を除いて、すべての文字を入力できます。ストリングがキャレット（^）文字以外で始まる場合は、そのストリングに含まれる文字のみを入力できます。</p>
     
      <p>一部の文字は <codeph>restrict</codeph> プロパティで使用すると特殊な意味を持つため、リテラル文字の -、^ および \ を指定するには、円記号を使用する必要があります。 <codeph>restrict</codeph> プロパティを MXML タグで属性として使用する場合は、\^\-\\ のように、単一の円記号を使います。 <codeph>restrict</codeph> を ActionScript 式に設定する場合、\\^\\-\\\ のように、円記号を 2 つ続けて指定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:selectable:get"><apiName>selectable</apiName><shortdesc>
      テキストが選択可能であるかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      テキストが選択可能であるかどうかを指定します。 テキストを選択可能にすると、コントロールからテキストをコピーできます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:selectionBeginIndex:get"><apiName>selectionBeginIndex</apiName><shortdesc>
      現在の選択範囲の最初の文字を示す 0 ベースのインデックス値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>選択範囲の最初の文字を示す、0 から始まるインデックス値です。
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      現在の選択範囲の最初の文字を示す 0 から始まるインデックス値です。たとえば、最初の文字が 0、次の文字が 1 と続きます（以下同様）。コントロールがフォーカスを取得したとき、<codeph>selectionBeginIndex</codeph> プロパティと <codeph>selectionEndIndex</codeph> プロパティが両方とも設定されている場合は選択範囲が表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:selectionEndIndex:get"><apiName>selectionEndIndex</apiName><shortdesc>
      現在の選択範囲の最後の文字の直後の位置を示す 0 ベースのインデックスです。つまり、最後の文字の位置を示す 1 ベースインデックスと同じです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>選択範囲の最後の文字を示す 0 ベースのインデックス値です。
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      現在の選択範囲の最後の文字の<i>直後</i>の位置を示す 0 ベースのインデックスです。つまり、最後の文字の位置を示す 1 ベースインデックスと同じです。 例えば、選択範囲の最後の文字が 5 番目の文字の場合、このプロパティの値は 5 になります。 コントロールがフォーカスを取得したとき、<codeph>selectionBeginIndex</codeph> プロパティと <codeph>selectionEndIndex</codeph> プロパティが両方とも設定されている場合は選択範囲が表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
     TextArea コントロールのテキスト上でレンダリングを実行できる flash.text.StyleSheet オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:StyleSheet"/><apiDefaultValue>null
     
     </apiDefaultValue></apiValueDef><apiDesc>
     TextArea コントロールのテキスト上でレンダリングを実行できる flash.text.StyleSheet オブジェクトです。 テキストに対する HTML スタイルを詳細に制御する場合に使用します。詳細については、flash.text.StyleSheet クラスの説明を参照してください。
    
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.StyleSheet.xml"><linktext>flash.text.StyleSheet</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:text:get"><apiName>text</apiName><shortdesc>
      コントロールに表示されるプレーンテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3179
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>TextArea のコンテンツを取得または設定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      コントロールに表示されるプレーンテキストです。その外観は、この Label コントロールの CSS スタイルによって決定されます。
      
      <p>テキストストリング内の HTML タグはすべて無視され、ストリングに入力したとおりに表示されます。 HTML タグを使用してフォーマットされたテキストを表示するには、<codeph>htmlText</codeph> プロパティを使用します。 <codeph>htmlText</codeph> プロパティを設定している場合は、その HTML で、設定されたテキストが置き換えられ、<codeph>text</codeph> プロパティは、HTML テキストから HTML タグを除いたプレーンテキストを返します。 詳細については、「<codeph>htmlText</codeph> プロパティ」を参照してください。</p>
     
      <p>特殊文字である左山括弧（&lt;）、右山括弧（>）、アンパサンド（&amp;）をテキストに含める場合は、CDATA タグでテキストストリングを囲む必要があります。 特殊文字の代わりに、<codeph>&amp;lt;</codeph> などの HTML 文字エンティティを使用できます。</p>
     
      <p>このプロパティを <codeph>null</codeph> に設定しようとした場合は、代わりに空のストリングに設定されます。 <codeph>text</codeph> プロパティには、値 <codeph>null</codeph> を一時的に設定できます。これは、<codeph>htmlText</codeph> が最近設定され、対応する <codeph>text</codeph> 値がまだ決定されていないことを示します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      テキストの高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      テキストの高さです。
     
      <p><codeph>textHeight</codeph> プロパティの値は、コンポーネントが検証された後でのみ正しい値になります。 <codeph>text</codeph> を設定し、その直後に <codeph>textHeight</codeph> を取得した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、値を取得する前に <codeph>validateNow()</codeph> メソッドを呼び出します。 この動作は、値を直ちに更新する flash.text.TextField コントロールの動作とは異なります。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      テキストの幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      テキストの幅です。
     
      <p><codeph>textWidth</codeph> プロパティの値は、コンポーネントが検証された後でのみ正しい値になります。 <codeph>text</codeph> を設定し、その直後に <codeph>textWidth</codeph> を取得した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、値を取得する前に <codeph>validateNow()</codeph> メソッドを呼び出します。 この動作は、値を直ちに更新する flash.text.TextField コントロールの動作とは異なります。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:verticalScrollPolicy:get"><apiName>verticalScrollPolicy</apiName><shortdesc>
      垂直スクロールバーを常にオンにするか（ScrollPolicy.ON）、常にオフにするか（ScrollPolicy.OFF）、必要なときにオンにするか（ScrollPolicy.AUTO）を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3428
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ScrollPolicy.AUTO
      </apiDefaultValue><apiTipTexts><apiTipText>垂直スクロールバーがオン、オフまたは自動調整のいずれであるかを指定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      垂直スクロールバーを常にオンにするか（<codeph>ScrollPolicy.ON</codeph>）、常にオフにするか（<codeph>ScrollPolicy.OFF</codeph>）、必要なときにオンにするか（<codeph>ScrollPolicy.AUTO</codeph>）を指定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:wordWrap:get"><apiName>wordWrap</apiName><shortdesc>
      テキストを行末で自動的に折り返すかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3175
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue><apiTipTexts><apiTipText>true の場合、行は折り返されます。 false の場合、長い行は切り詰められます。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      テキストを行末で自動的に折り返すかどうかを示します。 <codeph>true</codeph> の場合、テキストは折り返されて複数の行に表示されます（必要な場合）。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:horizontalScrollPosition:set"><apiName>horizontalScrollPosition</apiName><shortdesc>
      現在表示されているコンテンツ領域の一番左にあるピクセルのピクセル位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      現在表示されているコンテンツ領域の一番左にあるピクセルのピクセル位置です （コンテンツ領域には、現在表示されている部分だけではなく、コントロールのすべての内容が含まれます）。 このプロパティは常に 0 に設定されており、<codeph>wordWrap</codeph> が <codeph>true</codeph> に設定されている場合は変更も無視されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:verticalScrollPosition:set"><apiName>verticalScrollPosition</apiName><shortdesc>
      現在表示されている一番上の文字行の行番号です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3181
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiTipTexts><apiTipText>上端からコンテンツへのピクセルオフセットです。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      現在表示されている一番上の文字行の行番号です。デフォルト値は 0 です。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:VRule"><apiName>VRule</apiName><shortdesc>
  VRule コントロールは単一の垂直の線を作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:VRule" replacement="spark.primitives.Line" since="4.0">
	</Alternative><styles><style format="Length" inherit="yes" name="strokeWidth" owner="mx.controls:VRule" playerVersion="Flash9" type="Number">
<description>
  罫線の太さです（ピクセル単位）。 
  <ul>
    <li><codeph>strokeWidth</codeph> が 1 の場合、罫線は 1 ピクセル幅の線です。</li>
    <li><codeph>strokeWidth</codeph> が 2 の場合、罫線は 1 ピクセル幅の垂直線を 2 本並べたものになります。</li>
    <li><codeph>strokeWidth</codeph> が 2 より大きい場合、罫線は 1 ピクセル幅のエッジを持つ中空の長方形です。</li>
  </ul>
  
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="strokeColor" owner="mx.controls:VRule" playerVersion="Flash9" type="uint">
<description>
  線の色です。 
  <ul>
    <li><codeph>strokeWidth</codeph> が 1 の場合、strokeColor は線全体の色になります。</li>
    <li><codeph>strokeWidth</codeph> が 2 の場合、strokeColor は左側の線の色になります。</li>
    <li><codeph>strokeWidth</codeph> が 2 より大きい場合は、strokeColor は長方形の上辺および左辺の色になります。</li>
  </ul>
  
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="shadowColor" owner="mx.controls:VRule" playerVersion="Flash9" type="uint">
<description>
  線の影の色です。 
  <ul>
    <li><codeph>strokeWidth</codeph> が 1 の場合、shadowColor は使用されません。</li>
    <li><codeph>strokeWidth is 2</codeph> が 2 の場合、shadowColor は右側の線の色になります。</li>
    <li><codeph>strokeWidth</codeph> が 2 より大きい場合、shadowColor は長方形の下辺および右辺の色になります。</li>
  </ul>
  
  </description>
<default>0xEEEEEE
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VRule&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:VRule
    <strong>Styles</strong>
    strokeColor="0xC4CCCC"
    shadowColor="0xEEEEEE"
    strokeWidth="2"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  VRule コントロールは単一の垂直の線を作成します。 このコントロールは通常、コンテナ内に境界線を作成するために使用します。
 
  <p>HRule コントロールには、次のデフォルトプロパティがあります。</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>デフォルトでは、高さが 100 ピクセル、幅は 2 ピクセルになります。デフォルトでは、VRule コントロールのサイズは不変です。サイズ変更を有効にするには、width と height にパーセント値を指定します。</entry>
        </row><row>
           <entry>strokeWidth</entry>
           <entry>2 ピクセル</entry>
        </row><row>
           <entry>strokeColor</entry>
           <entry>0xC4CCCC</entry>
        </row><row>
           <entry>shadowColor</entry>
           <entry>0xEEEEEE</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleVRule.mxml"><swfblock conref="examples/SimpleVRule.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#HRule"><linktext>mx.controls.HRule</linktext></link></related-links><apiConstructor id="mx.controls:VRule:VRule"><apiName>VRule</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Alert"><apiName>Alert</apiName><shortdesc>
  Alert コントロールは、メッセージ、タイトル、ボタン（「OK」、「キャンセル」、「はい」、「いいえ」の任意の組み合わせ）およびアイコンを含むことができるポップアップダイアログボックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="titleStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Alert タイトルテキストのスタイルを指定する CSS スタイル宣言の名前です。 
 
  <p>タイプセレクターを使用してこのスタイルを設定するだけで、アプリケーション内のすべての Alert コントロールのスタイルが設定されます。 Alert コントロールの特定のインスタンスでスタイルを設定すると、コントロールが不適切なサイズになる場合があります。</p>
 
  </description>
<default>"windowStyles" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="messageStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Alert メッセージテキストのスタイルを指定する CSS スタイル宣言の名前です。 
 
  <p>タイプセレクターを使用してこのスタイルを設定するだけで、アプリケーション内のすべての Alert コントロールのスタイルが設定されます。 Alert コントロールの特定のインスタンスでスタイルを設定すると、コントロールが不適切なサイズになる場合があります。</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="buttonStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Alert ボタンのスタイルを指定する CSS スタイル宣言の名前です。 
 
  </description>
<default>"alertButtonStyle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Panel</apiBaseClassifier></apiClassifierDef><apiDesc>
  Alert コントロールは、メッセージ、タイトル、ボタン（「OK」、「キャンセル」、「はい」、「いいえ」の任意の組み合わせ）およびアイコンを含むことができるポップアップダイアログボックスです。Alert コントロールはモーダルです。これは、ユーザーが閉じるまでフォーカスを保持することを意味します。
 
  <p>mx.controls.Alert クラスをアプリケーションに読み込み、次に ActionScript で静的な <codeph>show()</codeph> メソッドを呼び出し、Alert コントロールを表示します。 Alert コントロールは MXML では作成できません。</p>
 
  <p>Alert コントロールは、ユーザーがこのコントロールのボタンを選択したとき、または Esc キーを押したときに閉じます。</p>
 
  </apiDesc><example conref="SimpleAlert.mxml"><swfblock conref="examples/SimpleAlert.swf"/></example></apiClassifierDetail><related-links><link href="mx.managers.xml#SystemManager"><linktext>mx.managers.SystemManager</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><apiConstructor id="mx.controls:Alert:Alert"><apiName>Alert</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Alert:show"><apiName>show</apiName><shortdesc>
      Alert コントロールをポップアップする静的メソッドです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Alert コントロールへの参照です。 
     
      </apiDesc><apiOperationClassifier>mx.controls:Alert</apiOperationClassifier></apiReturn><apiParam><apiItemName>text</apiItemName><apiType value="String"/><apiData/><apiDesc>Alert コントロールに表示されるテキストストリングです。このテキストは警告ダイアログボックスの中央に配置されます。
     
      </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiType value="String"/><apiData/><apiDesc>タイトルバーに表示されるテキストストリングです。このテキストは左揃えされます。
     
      </apiDesc></apiParam><apiParam><apiItemName>flags</apiItemName><apiType value="uint"/><apiData>0x4</apiData><apiDesc>Alert コントロールに配置するボタンを指定します。 有効な値は、<codeph>Alert.OK</codeph>、<codeph>Alert.CANCEL</codeph>、<codeph>Alert.YES</codeph> および <codeph>Alert.NO</codeph> です。 デフォルト値は <codeph>Alert.OK</codeph> です。 複数のボタンを表示する場合は、ビット単位の OR 演算子を使用します。 例えば、<codeph>(Alert.YES | Alert.NO)</codeph> を渡すと「はい」および「いいえ」ボタンが表示されます。ボタンが指定される順序にかかわらず、ボタンは常に左から「OK」、「はい」、「いいえ」、「キャンセル」の順に表示されます。
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:Sprite"/><apiData>null</apiData><apiDesc>Alert コントロールが中央揃えされるオブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>closeHandler</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Alert コントロール上の任意のボタンが押されたときに呼び出されるイベントハンドラーです。 このハンドラーに渡されるイベントオブジェクトは、CloseEvent のインスタンスです。このオブジェクトの <codeph>detail</codeph> プロパティには、値 <codeph>Alert.OK</codeph>、<codeph>Alert.CANCEL</codeph>、<codeph>Alert.YES</codeph> または <codeph>Alert.NO</codeph> が含まれます。
     
      </apiDesc></apiParam><apiParam><apiItemName>iconClass</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>Alert コントロール内のテキストの左に配置されるアイコンのクラスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>defaultButtonFlag</apiItemName><apiType value="uint"/><apiData>0x4</apiData><apiDesc>デフォルトボタンを指定するビットフラグです。 <codeph>Alert.OK</codeph>、<codeph>Alert.CANCEL</codeph>、<codeph>Alert.YES</codeph> または <codeph>Alert.NO</codeph> のいずれか 1 つを指定できます。 デフォルト値は <codeph>Alert.OK</codeph> です。 Enter キーを押すと、デフォルトボタンが（クリックされた場合と同じように）トリガーされます。 Esc キーを押すと、「キャンセル」または「いいえ」ボタンが（選択された場合と同じように）トリガーされます。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Alert コントロールをポップアップする静的メソッドです。Alert コントロールは、ユーザーがこのコントロールのボタンを選択したとき、または Esc キーを押したときに閉じます。
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#CloseEvent"><linktext>mx.events.CloseEvent</linktext></link></related-links></apiOperation><apiValue id="mx.controls:Alert:CANCEL"><apiName>CANCEL</apiName><shortdesc>
      show() メソッドの flags パラメーターとして渡されたときに、Alert コントロールの「キャンセル」ボタンを有効にする値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0008</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      <codeph>flags</codeph> パラメーター（<codeph>show()</codeph> メソッドのパラメーター）として渡されたときに、Alert コントロールの「キャンセル」ボタンを有効にする値です。 | 演算子を使用すると、このビットフラグを <codeph>OK</codeph>、<codeph>YES</codeph>、<codeph>NO</codeph> および <codeph>NONMODAL</codeph> フラグと組み合わせることができます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:NO"><apiName>NO</apiName><shortdesc>
      show() メソッドの flags パラメーターとして渡されたときに、Alert コントロールの「いいえ」ボタンを有効にする値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      <codeph>flags</codeph> パラメーター（<codeph>show()</codeph> メソッドのパラメーター）として渡されたときに、Alert コントロールの「いいえ」ボタンを有効にする値です。 | 演算子を使用すると、このビットフラグを <codeph>OK</codeph>、<codeph>CANCEL</codeph>、<codeph>YES</codeph> および <codeph>NONMODAL</codeph> フラグと組み合わせることができます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:NONMODAL"><apiName>NONMODAL</apiName><shortdesc>
      show() メソッドの flags パラメーターとして渡されたときに、Alert を非モーダルにする値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x8000</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      <codeph>flags</codeph> パラメーター（<codeph>show()</codeph> メソッドのパラメーター）として渡されたときに、Alert を非モーダルにする値です。 | 演算子を使用すると、このビットフラグを <codeph>OK</codeph>、<codeph>CANCEL</codeph>、<codeph>YES</codeph> および <codeph>NO</codeph> フラグと組み合わせることができます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:OK"><apiName>OK</apiName><shortdesc>
      show() メソッドの flags パラメーターとして渡されたときに、Alert コントロールの「OK」ボタンを有効にする値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      <codeph>flags</codeph> パラメーター（<codeph>show()</codeph> メソッドのパラメーター）として渡されたときに、Alert コントロールの「OK」ボタンを有効にする値です。 | 演算子を使用すると、このビットフラグを <codeph>CANCEL</codeph>、<codeph>YES</codeph>、<codeph>NO</codeph> および <codeph>NONMODAL</codeph> フラグと組み合わせることができます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:YES"><apiName>YES</apiName><shortdesc>
      show() メソッドの flags パラメーターとして渡されたときに、Alert コントロールの「はい」ボタンを有効にする値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      の <codeph>flags</codeph> パラメーター（<codeph>show()</codeph> メソッドのパラメーター）として渡されたときに、Alert コントロールの「はい」ボタンを有効にする値です。 | 演算子を使用すると、このビットフラグを <codeph>OK</codeph>、<codeph>CANCEL</codeph>、<codeph>NO</codeph> および <codeph>NONMODAL</codeph> フラグと組み合わせることができます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonFlags"><apiName>buttonFlags</apiName><shortdesc>
      Alert コントロールで使用できるボタンを示す Alert.OK、Alert.CANCEL、Alert.YES、Alert.NO を含むビットマスクです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0x0004</apiData><apiType value="uint"/><apiDefaultValue>Alert.OK
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Alert コントロールで使用できるボタンを示す <codeph>Alert.OK</codeph>、<codeph>Alert.CANCEL</codeph>、<codeph>Alert.YES</codeph>、<codeph>Alert.NO</codeph> を含むビットマスクです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonHeight"><apiName>buttonHeight</apiName><shortdesc>
      ピクセル単位で表した各 Alert ボタンの高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>22</apiData><apiType value="Number"/><apiDefaultValue>22
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ピクセル単位で表した各 Alert ボタンの高さです。 すべてのボタンが同じ高さであることが必要です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonWidth"><apiName>buttonWidth</apiName><shortdesc>
      ピクセル単位で表した各 Alert ボタンの幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="Number"/><apiDefaultValue>60
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ピクセル単位で表した各 Alert ボタンの幅です。 すべてのボタンが同じ幅であることが必要です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:defaultButtonFlag"><apiName>defaultButtonFlag</apiName><shortdesc>
      デフォルトボタンを指定する Alert.OK、Alert.CANCEL、Alert.YES、または Alert.NO を含むビットフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0x0004</apiData><apiType value="uint"/><apiDefaultValue>Alert.OK
      
      </apiDefaultValue></apiValueDef><apiDesc>
      デフォルトボタンを指定する <codeph>Alert.OK</codeph>、<codeph>Alert.CANCEL</codeph>、<codeph>Alert.YES</codeph> または <codeph>Alert.NO</codeph> を含むビットフラグです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:iconClass"><apiName>iconClass</apiName><shortdesc>
      表示するアイコンのクラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Class"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      表示するアイコンのクラスです。 通常は JPEG や GIF などのアセットを埋め込んでから、埋め込みアセットに関連付けられた変数を使用してこのプロパティの値を指定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:text"><apiName>text</apiName><shortdesc>
      この警告ダイアログボックスに表示するテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      この警告ダイアログボックスに表示するテキストです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:cancelLabel:get"><apiName>cancelLabel</apiName><shortdesc>
      「キャンセル」ボタンのラベルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      「キャンセル」ボタンのラベルです。
     
      <p>別のラベルを使用する場合は、完全に表示するために <codeph>buttonWidth</codeph> プロパティを調整する必要がある場合があります。</p>
     
      英語のリソースバンドルでは、このプロパティが "CANCEL" に設定されます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:noLabel:get"><apiName>noLabel</apiName><shortdesc>
      「いいえ」ボタンのラベルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      「いいえ」ボタンのラベルです。
     
      <p>別のラベルを使用する場合は、完全に表示するために <codeph>buttonWidth</codeph> プロパティを調整する必要がある場合があります。</p>
     
      英語のリソースバンドルでは、このプロパティが "NO" に設定されます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:okLabel:get"><apiName>okLabel</apiName><shortdesc>
      「OK」ボタンのラベルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      「OK」ボタンのラベルです。
     
      <p>別のラベルを使用する場合は、ラベルを完全に表示するために <codeph>buttonWidth</codeph> プロパティを調整する必要がある場合があります。</p>
     
      英語のリソースバンドルでは、このプロパティが "OK" に設定されます。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:yesLabel:get"><apiName>yesLabel</apiName><shortdesc>
      「はい」ボタンのラベルです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      「はい」ボタンのラベルです。
     
      <p>別のラベルを使用する場合は、ラベルを完全に表示するために <codeph>buttonWidth</codeph> プロパティを調整する必要がある場合があります。</p>
     
      英語のリソースバンドルでは、このプロパティが "YES" に設定されます。 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:IFlexContextMenu"><apiName>IFlexContextMenu</apiName><shortdesc>
  IFlexContextMenu インターフェイスは、Flex コンテキストメニューのインターフェイスを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  IFlexContextMenu インターフェイスは、Flex コンテキストメニューのインターフェイスを定義します。  
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent/flexContextMenu"><linktext>mx.core.UIComponent.flexContextMenu</linktext></link></related-links><apiOperation id="mx.controls:IFlexContextMenu:mx.controls:IFlexContextMenu:setContextMenu"><apiName>setContextMenu</apiName><shortdesc>
      InteractiveObject のコンテキストメニューを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/><apiDesc>コンテキストメニューを設定する InteractiveObject です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      InteractiveObject のコンテキストメニューを設定します。これにより、リスナーの追加など、InteractiveObject をこの InteractiveObject のコンテキストメニューとして追加するために必要なすべての手順が実行されます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:IFlexContextMenu:mx.controls:IFlexContextMenu:unsetContextMenu"><apiName>unsetContextMenu</apiName><shortdesc>
      InteractiveObject のコンテキストメニューの設定を解除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/><apiDesc>InteractiveObject コンテキストメニューの設定が解除される InteractiveObject です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      InteractiveObject のコンテキストメニューの設定を解除します。これにより、リスナーの削除など、InteractiveObject をこの InteractiveObject のコンテキストメニューとして削除するために必要な手順がすべて実行されます。
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.controls:Text"><apiName>Text</apiName><shortdesc>
  Text コントロールは複数行の編集不能なテキストを表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalAlign"/><Exclude kind="style" name="horizontalAlign"/><styles><style format="Length" inherit="yes" name="leading" owner="mx.controls:Text" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Text&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Text
  leading="2"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Label</apiBaseClassifier></apiClassifierDef><apiDesc>
  Text コントロールは複数行の編集不能なテキストを表示します。テキストを 1 行だけ表示する必要がある場合は、Label コントロールを使用します。
 
  <p>Text コントロールでは、スクロールバーはサポートされていません。スクロールする必要がある場合は、編集可能でない TextArea コントロールを使用します。</p>
 
  <p>HTML タグを使用して、Text コントロールのテキストをフォーマットできます。コントロールの CSS スタイルが適用された後に HTML タグが適用されます。テキストの上下左右にスペースを追加することもできます。</p>
 
  <p>デフォルトでは Text コントロール内のテキストは選択可能ですが、<codeph>selectable</codeph> プロパティを <codeph>false</codeph> に設定することにより選択不可に設定できます。</p>
 
  <p>テキストの長さがコントロールの幅を超える場合は、テキストを折り返します。 テキストは、コントロール内で常に左上揃えで表示されます。</p>
 
  <p>Text コンポーネントのサイズを設定するには、通常では、幅を明示的に指定し、すべてのテキストが表示されるように高さを自動調整します。明示的な高さを指定すると、一部のテキストが切り詰められる場合があります。Label とは異なり、Text では切り詰められたテキストに対して "..." が表示されません。また、Text では、パーセント値を使用して幅と高さを設定することもよくあります。</p>
 
  <p>幅と高さを未指定のままにすると、行の折り返しなしに、テキスト内の明示的な改行に基づいて幅と高さが計算されます。 例えば、<codeph>text</codeph> プロパティを設定した場合は、改行文字 <codeph>"\n"</codeph> によって改行が発生します。 <codeph>htmlText</codeph> プロパティを設定した場合は、HTML マークアップ <codeph>&lt;br></codeph> によって改行が生じます。 <codeph>text</codeph> または <codeph>htmlText</codeph> が長く、改行が含まれていない場合、Text コンポーネントの幅が非常に長くなる可能性があります。<codeph>maxWidth</codeph> を設定して、コンポーネントの幅を制限できます。</p>
 
  <p>Text コントロールには、背景や境界線がなく、フォーカスを取得できません。</p>
 
  <p>Text コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>コントロールのサイズはテキストに合わせて設定されます。コントロールの幅は一番長いテキスト行の長さに、高さは行数に合わせて調整されます。ピクセル幅を指定しない場合、高さはテキストストリング内の明示的な改行の数によって決まります。テキストの長さが変わると、コントロールのサイズも新しいテキストに合わせて変更されます。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>ChMaximum sizear03</entry>
           <entry>10000 × 10000 ピクセル</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextExample.mxml"><swfblock conref="examples/TextExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link></related-links><apiConstructor id="mx.controls:Text:Text"><apiName>Text</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ProgressBar"><apiName>ProgressBar</apiName><shortdesc>
  ProgressBar コントロールは、時間の経過に伴うタスクの進捗状況を視覚的に表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><effects><effect event="complete" name="completeEffect" owner="mx.controls:ProgressBar">
<description>
  ロードが完了したときに発生する <codeph>complete</codeph> イベントが送出されたときに呼び出されるエフェクトです。
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><styles><style format="Length" inherit="yes" name="labelWidth" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  ラベルの幅です（ピクセル単位）。 この値が NaN の場合は、ProgressBar コントロールの幅に設定されます。
 
  </description>
<default>NaN
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="trackHeight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  トラックの高さです（ピクセル単位）。 この値が NaN の場合は、<codeph>trackSkin</codeph> プロパティで指定されているスキンの高さを使用します。 
  
  </description>
<default>NaN
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="trackColors" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  2 色の配列としてトラックの色を指定します。 単色のトラックの場合は同じ色を 2 回使用できます。
 
  </description>
<default>[ 0xE6EEEE, 0xE6EEEE ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="themeColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  ProgressBar コントロールのテーマカラーです。有効な値は haloGreen、haloBlue および haloOrange です。 テーマカラーは、コントロールで個別に設定せず、<codeph>&lt;mx:Application></codeph> タグの <codeph>themeColor</codeph> スタイルで設定することをお勧めします。 
 
  </description>
<default>"haloBlue"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="trackSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  プログレスインジケータートラックのスキンスタイルです。
 
  </description>
<default>mx.skins.halo.ProgressTrackSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="maskSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  確定モードおよび不確定モードのバーのマスクとして使用するスキンスタイルです。
 
  </description>
<default>mx.skins.halo.ProgressMaskSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indeterminateSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  不確定モードのプログレスバーのスキンスタイルです。
 
  </description>
<default>mx.skins.halo.ProgressIndeterminateSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indeterminateMoveInterval" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  各不確定ループで不確定モードのプログレスバーを移動するピクセル数です。指定されたピクセル数だけプログレスバーが移動すると、開始点に再配置されます。値を 0 にすると、バーが移動しなくなります。 
 
  </description>
<default>26
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  3 次元境界の黒い区画または 2 次元境界の色区画の色です。
  </description>
<default>0xB7BABC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="barSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  確定モードのプログレスバーのスキンスタイルです。
 
  </description>
<default>mx.skins.halo.ProgressBarSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右境界線からコンテンツ領域の右端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  子同士の垂直方向の間隔を示すピクセル数です。デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合のデフォルト値は 6 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  子同士の水平方向の間隔を示すピクセル数です。デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合のデフォルト値は 8 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="barColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  ProgressBar の色を特定します。ProgressBar は、この色とそれを基に計算されるより明るい色の垂直方向のグラデーションで塗りつぶされます。このスタイルは、他のコンポーネントに対して無効ですが、コンテナに対して設定することで、コンテナ内部にあるすべてのプログレスバーの外観を制御できます。 デフォルト値は <codeph>undefined</codeph> で、未定義であることを意味します。 この場合は、代わりに <codeph>themeColor</codeph> スタイルプロパティを使用します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ProgressBar&gt;</code> tag inherits all of the tag attributes 
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ProgressBar
    <strong>Properties</strong>
    conversion="1"
    direction="right|left"
    indeterminate="false|true"
    label="<i>No default</i>"
    labelPlacement="bottom|top|left|right|center"
    maximum="0"
    minimum="0"
    mode="event|polled|manual"
    source="<i>No default</i>"
  
    <strong>Styles</strong>
    barColor="undefined"
    barSkin="ProgressBarSkin"
    borderColor="0xAAB3B3"
    color="0x0B333C"
    disabledColor="0xAAB3B3"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontThickness="0"
    fontStyle="normal|italic"
    fontWeight="normal|bold"
    horizontalGap="8"
    indeterminateMoveInterval="26"
    indeterminateSkin="ProgressIndeterminateSkin"
    labelWidth="Computed"
    leading="0"
    maskSkin="ProgressMaskSkin"
    paddingLeft="0"
    paddingRight="0"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    themeColor="haloGreen|haloBlue|haloOrange"
    trackColors="[0xE6EEEE,0xE6EEEE]"
    trackHeight="Calculated"
    trackSkin="ProgressTrackSkin"
    verticalGap="6"
  
    <strong>Events</strong>
    complete="<i>No default</i>"
    hide="<i>No default</i>"
    progress="<i>No default</i>"
    show="<i>No default</i>"
  
    <strong>Effects</strong>
    completeEffect="<i>No default</i>"
  /&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  ProgressBar コントロールは、時間の経過に伴うタスクの進捗状況を視覚的に表示します。 ProgressBar コントロールには、確定モードと不確定モードの 2 つの種類があります。
 
  <p>確定モードの ProgressBar コントロールは、時間の経過に伴うタスクの進捗状況を直線的に表示します。タスクの範囲がわかっている場合は、確定モードの ProgressBar を使用します。タスクの終了までユーザーが長時間待たなければならないときに表示します。</p>
 
  <p>不確定モードの ProgressBar コントロールは、範囲が不明な時間ベースのプロセスを表示します。処理の規模が明らかな場合は、確定モードの ProgressBar コントロールを使用することをお勧めします。</p>
 
  <p>ProgressBar コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>幅 150 ピクセル、高さ 4 ピクセル</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>未定義</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleProgressBar.mxml"><swfblock conref="examples/SimpleProgressBar.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBarDirection"><linktext>mx.controls.ProgressBarDirection</linktext></link><link href="mx.controls.xml#ProgressBarLabelPlacement"><linktext>mx.controls.ProgressBarLabelPlacement</linktext></link><link href="mx.controls.xml#ProgressBarMode"><linktext>mx.controls.ProgressBarMode</linktext></link></related-links><adobeApiEvent id="mx.controls:ProgressBar_mx.events.FlexEvent.SHOW_show"><apiName>show</apiName><shortdesc>
  コンポーネントが表示されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.SHOW</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  コンポーネントが表示されたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  イベントモードまたはポーリングモードでコンテンツがロードされたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  イベントモードまたはポーリングモードでコンテンツがロードされたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_mx.events.FlexEvent.HIDE_hide"><apiName>hide</apiName><shortdesc>
  オブジェクトの状態が可視から不可視に変化したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.HIDE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  オブジェクトの状態が可視から不可視に変化したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  ロードが完了したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ロードが完了したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ProgressBar:ProgressBar"><apiName>ProgressBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ProgressBar:setProgress"><apiName>setProgress</apiName><shortdesc>
      手動モードを使用したときの進捗量を反映するように、バーの状態を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>現在の値です。
     
      </apiDesc></apiParam><apiParam><apiItemName>total</apiItemName><apiType value="Number"/><apiDesc>合計値またはターゲット値です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      手動モードを使用したときの進捗量を反映するように、バーの状態を設定します。<codeph>value</codeph> パラメーターは <codeph>value</codeph> プロパティに割り当てられ、<codeph>maximum</codeph> パラメーターは <codeph>maximum</codeph> プロパティに割り当てられます。<codeph>minimum</codeph> プロパティは変更されません。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ProgressBar:conversion:get"><apiName>conversion</apiName><shortdesc>
      現在ロードしているバイト数と、ロードされた合計バイト数を変換するための数字です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      現在ロードしているバイト数と、ロードされた合計バイト数を変換するための数字です。 現在の値と合計値をこのプロパティ値で割り算し、それぞれの値以下で最も近い整数値がラベルストリングに使用されます。値が 1 の場合は変換されません。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:direction:get"><apiName>direction</apiName><shortdesc>
      タスクの完了に向かって ProgressBar が伸びていく方向です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarDirection.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      タスクの完了に向かって ProgressBar が伸びていく方向です。 MXML での有効な値は <codeph>"right"</codeph> と <codeph>"left"</codeph> です。
     
      <p>ActionScript では、定数 <codeph>ProgressBarDirection.RIGHT</codeph> および <codeph>ProgressBarDirection.LEFT</codeph> を使用してこのプロパティを設定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarDirection"><linktext>mx.controls.ProgressBarDirection</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:indeterminate:get"><apiName>indeterminate</apiName><shortdesc>
      ProgressBar コントロールの外観を確定モードとするか不確定モードとするかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ProgressBar コントロールの外観を確定モードとするか不確定モードとするかを指定します。 進捗状況を判断できない場合は、不確定モードの外観を使用します。 <codeph>true</codeph> を指定すると不確定モードの外観になります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:label:get"><apiName>label</apiName><shortdesc>
      プログレスバーの近くに表示するテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"LOADING %3%%"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      プログレスバーの近くに表示するテキストです。 このテキストストリングには次の特殊文字を使用できます。
     
      <ul>
        <li>%1 = 現在までにロードされたバイト数</li>
        <li>%2 = 合計バイト数</li>
        <li>%3 = ロードされたバイト数のパーセンテージ</li>
        <li>%% = "%" 文字</li>
      </ul>
     
      <p>不明なフィールドは "??" に置き換えられます。このストリングを定義しない場合はラベルが表示されません。</p>
      
      <p>手動モードの場合、これらの特殊文字の値は、<codeph>setProgress()</codeph> メソッドを使用して設定できます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      ラベルの配置位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarLabelPlacement.BOTTOM
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ラベルの配置位置です。 MXML での有効な値は、<codeph>"right"</codeph>、<codeph>"left"</codeph>、<codeph>"bottom"</codeph>、<codeph>"center"</codeph> および <codeph>"top"</codeph> です。
     
      <p>ActionScript では、定数 <codeph>ProgressBarLabelPlacement.RIGHT</codeph>、<codeph>ProgressBarLabelPlacement.LEFT</codeph>、<codeph>ProgressBarLabelPlacement.BOTTOM</codeph>、<codeph>ProgressBarLabelPlacement.CENTER</codeph> および <codeph>ProgressBarLabelPlacement.TOP</codeph> を使用してこのプロパティを設定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarLabelPlacement"><linktext>mx.controls.ProgressBarLabelPlacement</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:maximum:get"><apiName>maximum</apiName><shortdesc>
      ProgressBar の最大進捗量を示す値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ProgressBar の最大進捗量を示す値です。 このプロパティは手動モードでのみ使用できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:minimum:get"><apiName>minimum</apiName><shortdesc>
      ProgressBar の最小進捗量を示す値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ProgressBar の最小進捗量を示す値です。 このプロパティは、開発者が手動モードでのみ設定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:mode:get"><apiName>mode</apiName><shortdesc>
      バーの状態を更新する方法を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarMode.EVENT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      バーの状態を更新する方法を指定します。 MXML では次のいずれかの値を使用します。
     
      <ul>
        <li><codeph>event</codeph>：<codeph>source</codeph> プロパティで指定したコントロールから、進捗と完了のイベントを送出する必要があります。 ProgressBar コントロールはこれらのイベントを使用して、状態を更新します。 ProgressBar コントロールが更新されるのは、<codeph>source</codeph> プロパティの値が EventDispatcher クラスを拡張する場合だけです。</li>
     
        <li><codeph>polled</codeph>：<codeph>source</codeph> プロパティで、<codeph>bytesLoaded</codeph> プロパティと <codeph>bytesTotal</codeph> プロパティを公開するオブジェクトを指定する必要があります。 ProgressBar コントロールは、これらのメソッドを呼び出して、状態を更新します。</li>
     
        <li><codeph>manual</codeph>：手動で ProgressBar 状態を更新します。 このモードでは、<codeph>maximum</codeph> プロパティと <codeph>minimum</codeph> プロパティを指定し、<codeph>setProgress()</codeph> メソッドを使用して状態を指定します。 このモードは、<codeph>indeterminate</codeph> プロパティが <codeph>true</codeph> の場合によく使用されます。</li>
      </ul>
     
      <p>ActionScript では、定数 <codeph>ProgressBarMode.EVENT</codeph>、<codeph>ProgressBarMode.POLLED</codeph> および <codeph>ProgressBarMode.MANUAL</codeph> を使用してこのプロパティを設定できます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarMode"><linktext>mx.controls.ProgressBarMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:percentComplete:get"><apiName>percentComplete</apiName><shortdesc>
      完了したプロセスのパーセンテージで、0 ～ 100 の範囲の数値で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      完了したプロセスのパーセンテージで、0 ～ 100 の範囲の数値で表します。このパーセンテージ値を変更するには、<codeph>setProgress()</codeph> メソッドを使用します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:source:get"><apiName>source</apiName><shortdesc>
      ProgressBar で進捗の測定対象とするコントロールを指します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      ProgressBar で進捗の測定対象とするコントロールを指します。このプロパティは、イベントモードおよびポーリングモードのみで使用します。普通は、このプロパティを Loader コントロールに設定します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:value:get"><apiName>value</apiName><shortdesc>
      得られた進捗量を格納する読み取り専用プロパティです。最小値から最大値の範囲の値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      得られた進捗量を格納する読み取り専用プロパティです。最小値から最大値の範囲の値です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ButtonLabelPlacement"><apiName>ButtonLabelPlacement</apiName><shortdesc>
  ButtonLabelPlacement クラスは、Button、CheckBox、LinkButton または RadioButton コントロールの labelPlacement プロパティに設定できる有効な値の定数を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  ButtonLabelPlacement クラスは、Button、CheckBox、LinkButton または RadioButton コントロールの <codeph>labelPlacement</codeph> プロパティに設定できる有効な値の定数を定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#CheckBox"><linktext>mx.controls.CheckBox</linktext></link><link href="mx.controls.xml#LinkButton"><linktext>mx.controls.LinkButton</linktext></link><link href="mx.controls.xml#RadioButton"><linktext>mx.controls.RadioButton</linktext></link></related-links><apiValue id="mx.controls:ButtonLabelPlacement:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
	  アイコンの下にラベルが表示されるように指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  アイコンの下にラベルが表示されるように指定します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:LEFT"><apiName>LEFT</apiName><shortdesc>
	  アイコンの左にラベルが表示されるように指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  アイコンの左にラベルが表示されるように指定します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  アイコンの右にラベルが表示されるように指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  アイコンの右にラベルが表示されるように指定します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:TOP"><apiName>TOP</apiName><shortdesc>
	  アイコンの上にラベルが表示されるように指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  アイコンの上にラベルが表示されるように指定します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Button"><apiName>Button</apiName><shortdesc>
  Button コントロールはきわめて使用頻度の高い四角形のボタンです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:Button" replacement="spark.components.Button" since="4.0">
	</Alternative><styles><style inherit="no" name="selectedDisabledIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択され、無効であるときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDownIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択され、マウスボタンが押されているときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedOverIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択され、マウスがコントロール上にあるときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedUpIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択され、マウスボタンが押されていないときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが無効で、選択されていないときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択されず、マウスボタンが押されているときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択されず、マウスがコントロール上にあるときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  トグルボタンが選択されず、マウスがボタン上にないときに、アイコンとして使用するクラスの名前です。
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="icon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  デフォルトアイコンとして使用されるクラスの名前です。他のアイコンスタイルを設定すると、この設定がオーバーライドされます。
  
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDisabledSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  トグルボタンが選択され、無効であるときに、背景と境界のスキンとして使用するクラスの名前です。
 
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDownSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  トグルボタンが選択され、マウスボタンが押されているときに、背景と境界のスキンとして使用するクラスの名前です。
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedOverSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  トグルボタンが選択され、マウスがコントロール上にあるときに、背景と境界のスキンとして使用するクラスの名前です。
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedUpSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  トグルボタンが選択され、マウスがコントロール上にないときに、背景と境界のスキンとして使用するクラスの名前です。
 
  </description>
<default>"mx.skins.halo.ButtonSkin" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択されず、無効であるときに、背景と境界のスキンとして使用するクラスの名前です。
 
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択されず、マウスボタンが押されているときに、背景と境界のスキンとして使用するクラスの名前です。
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択されず、マウスがコントロール上にあるときに、背景と境界のスキンとして使用するクラスの名前です。
  
  </description>
<default>"mx.skins.halo.ButtonSkin" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  ボタンが選択されず、マウスがコントロール上にないときに、背景と境界のスキンとして使用するクラスの名前です。
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  背景と境界のデフォルトのスキンとして使用するクラスの名前です。 
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  <codeph>labelPlacement</codeph> プロパティが <codeph>"top"</codeph> または <codeph>"bottom"</codeph> の場合のボタンのラベルとアイコンとの間隔です。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  ユーザーがラベルを選択したときのラベルのテキストの色です。
  
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  マウスポインターをボタンに合わせたときのラベルのテキストの色です。
  
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  ユーザーがマウスでボタンを押し続けた場合に、<codeph>buttonDown</codeph> イベントを繰り返すミリ秒単位の間隔です。
  
  </description>
<default>35
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  最初の <codeph>buttonDown</codeph> イベントから、<codeph>buttonDown</codeph> イベントの繰り返しを各 <codeph>repeatInterval</codeph> で 開始するまでの待機時間（ミリ秒単位）です。
 
  </description>
<default>500
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの上の境界と、コンテンツ領域の上部との間のピクセル数です。
  
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの下の境界と、コンテンツ領域の下部との間のピクセル数です。
  
  </description>
<default>2 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="labelVerticalOffset" owner="mx.controls:Button" playerVersion="Flash10" type="Number">
<description>
  ラベルの位置に適用する垂直方向オフセットのピクセル数です。正の数値を指定するとラベルが下に移動します。
  
  </description>
<default>1 
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  <codeph>labelPlacement</codeph> プロパティが <codeph>left</codeph> または <codeph>right</codeph> の場合のラベルとアイコンとの間隔です。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:Button" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントにフォーカスがある場合のフォーカスリングのカラーです。
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:Button" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:Button" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:Button" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:Button" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールのハイライトの塗りつぶしで使用するアルファ透明度値です。最初の値はハイライトの上端の透明度を指定し、2 番目の値はハイライトの下端の透明度を指定します。ハイライトは、スキンの上半分に適用されます。
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の着色に使用されるカラーです。フラットな外観のコントロールを作成するには、どちらの値にも同じカラーを渡します。
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の塗りつぶしで使用するアルファ値です。[1, 1] を使うと、コントロールの背景が不透明になります。
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。 このスタイルは、Alert、Button、ComboBox、LinkButton、MenuBar、NumericStepper、Panel、ScrollBar、Tab、TitleWindow の各コンポーネントおよび <codeph>borderStyle</codeph> プロパティを <codeph>"solid"</codeph> に設定できるすべてのコンポーネントによってサポートされます。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされない場合、デフォルト値は <codeph>0</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="uint">
<description>
  境界線の色です。 このスタイルは、Button、CheckBox、ComboBox、MenuBar、NumericStepper、ProgressBar、RadioButton、ScrollBar、Slider の各コントロールおよび <codeph>borderStyle</codeph> スタイルをサポートするすべてのコンポーネントによってサポートされます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右の境界とコンテンツ領域の右端との間のピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Button&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Button
    <b>Properties</b>
    autoRepeat="false|true"
    emphasized="false|true"
    fontContext="<i>IFontModuleFactory</i>"
    label=""
    labelPlacement="right|left|bottom|top"
    selected="false|true"
    selectedField="null"
    stickyHighlighting="false|true"
    toggle="false|true"
 
    <b>Styles</b>
    borderColor="0xAAB3B3"
    color="0x0B333C"
    cornerRadius="4"
    disabledColor="0xAAB3B3"
    disabledIcon="null"
    disabledSkin="mx.skins.halo.ButtonSkin"
    downIcon="null"
    downSkin="mx.skins.halo.ButtonSkin"
    fillAlphas="[0.6, 0.4]"
    fillColors="[0xE6EEEE, 0xFFFFFF]"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="bold|normal"
    highlightAlphas="[0.3, 0.0]"
    horizontalGap="2"
    icon="null"
    kerning="false|true"
    leading="2"
    letterSpacing="0"
    overIcon="null"
    overSkin="mx.skins.halo.ButtonSkin"
    paddingBottom="2"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="2"
    repeatDelay="500"
    repeatInterval="35"
    selectedDisabledIcon="null"
    selectedDisabledSkin="mx.skins.halo.ButtonSkin"
    selectedDownIcon="null"
    selectedDownSkin="mx.skins.halo.ButtonSkin"
    selectedOverIcon="null"
    selectedOverSkin="mx.skins.halo.ButtonSkin"
    selectedUpIcon="null"
    selectedUpSkin="mx.skins.halo.ButtonSkin"
    skin="mx.skins.halo.ButtonSkin"
    textAlign="center|left|right"
    textDecoration="none|underline"
    textIndent="0"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x000000"
    upIcon="null"
    upSkin="mx.skins.halo.ButtonSkin"
    verticalGap="2"
 
    <b>Events</b>
    buttonDown="<i>No default</i>"
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseInterface>mx.core:IButton</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Button コントロールはきわめて使用頻度の高い四角形のボタンです。 Button コントロールは押し下げ可能に見えます。表面には、テキストラベル、アイコンのいずれか、または両方を表示できます。
 
  <p>通常、ボタンはイベントリスナを使用して、ユーザーがコントロールを選択したときのアクションを実行します。 Button コントロールのマウスをクリックしたときに Button コントロールが有効である場合は、<codeph>click</codeph> イベントと <codeph>buttonDown</codeph> イベントが送出されます。 ボタンは、有効か無効かにかかわらず、<codeph>mouseMove</codeph>、<codeph>mouseOver</codeph>、<codeph>mouseOut</codeph>、<codeph>rollOver</codeph>、<codeph>rollOut</codeph>、<codeph>mouseDown</codeph>、<codeph>mouseUp</codeph> などのイベントを必ず送出します。</p>
 
  <p>Button コントロールは、外観のカスタマイズや、プッシュボタンからトグルボタンへの機能変更などが可能です。 ボタンの各状態に対応するスキンを使用することによって、ボタンの外観を変更できます。</p>
 
  <p>ボールド書体を使用している Button コントロールのラベルです。Button コントロールのラベルに使用するフォントを埋め込む場合は、次のようにボールド書体を埋め込む必要があります。</p>
 
  <pre>
  &lt;mx:style>
    @font-face {
      src:url("../MyFont-Bold.ttf");        
      fontFamily: myFont;
      fontWeight: bold;
    }
   .myBoldStyle {
      fontFamily: myFont;
      fontWeight: bold;
    } 
  &lt;/mx:style>
  ...
  &lt;mx:Button ... styleName="myBoldStyle"/>
  </pre>
  
  <p>Button コントロールには、次のデフォルトの特性があります。</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row><entry>デフォルトサイズ</entry><entry>ラベルテキストやアイコンを表示するために必要なサイズです。</entry></row><row><entry>最小サイズ</entry><entry>0 ピクセル</entry></row><row><entry>最大サイズ</entry><entry>制限なし</entry></row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ButtonExample.mxml"><swfblock conref="examples/ButtonExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:Button_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使う場合、<codeph>data</codeph> プロパティは表示するデータを保持します。 このイベントを受け取って、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新することができます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Button_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  トグル Button コントロールに対して selected プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  トグル Button コントロールの <codeph>selected</codeph> プロパティが変更されたときに送出されます。 トグル Button コントロールでは、<codeph>toggle</codeph> プロパティが <codeph>true</codeph> に設定されています。 RadioButton コントロールの場合は、<codeph>selected</codeph> プロパティが変更されたときにこのイベントが送出されます。 CheckBox コントロールの場合は、ユーザーがマウスでコントロールを操作した場合にのみ、このイベントが送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Button_mx.events.FlexEvent.BUTTON_DOWN_buttonDown"><apiName>buttonDown</apiName><shortdesc>
  ユーザーが Button コントロールを押したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.BUTTON_DOWN</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが Button コントロールを押したときに送出されます。 <codeph>autoRepeat</codeph> プロパティが <codeph>true</codeph> の場合、ボタンが押されている間は、このイベントが繰り返し送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Button:Button"><apiName>Button</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Button:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      MouseEvent.CLICK イベントのデフォルトハンドラーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>イベントオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>MouseEvent.CLICK</codeph> イベントのデフォルトハンドラーです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc>
      MouseEvent.MOUSE_DOWN イベントのデフォルトハンドラーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>イベントオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>MouseEvent.MOUSE_DOWN</codeph> イベントのデフォルトハンドラーです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc>
      MouseEvent.MOUSE_UP イベントのデフォルトハンドラーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>イベントオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>MouseEvent.MOUSE_UP</codeph> イベントのデフォルトハンドラーです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:rollOutHandler"><apiName>rollOutHandler</apiName><shortdesc>
      MouseEvent.ROLL_OUT イベントのデフォルトハンドラーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>イベントオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>MouseEvent.ROLL_OUT</codeph> イベントのデフォルトハンドラーです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:rollOverHandler"><apiName>rollOverHandler</apiName><shortdesc>
      MouseEvent.ROLL_OVER イベントのデフォルトハンドラーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>イベントオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>MouseEvent.ROLL_OVER</codeph> イベントのデフォルトハンドラーです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Button:selectedField"><apiName>selectedField</apiName><shortdesc>
      Button コントロールの selected プロパティの値を指定する data プロパティのフィールドの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>null</apiData><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Button コントロールの <codeph>selected</codeph> プロパティの値を指定する <codeph>data</codeph> プロパティのフィールドの名前です。 アイテムレンダラーの Button コントロールを使用するときに、このプロパティを設定できます。 デフォルト値は null です。つまり、Button コントロールは <codeph>data</codeph> プロパティのプロパティに基づいて選択状態に設定されません。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:stickyHighlighting"><apiName>stickyHighlighting</apiName><shortdesc>
      false の場合、ボタンをクリックするとダウン状態のスキンが表示され、ボタンからマウスを離すとオーバー状態のスキンが表示されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>false</codeph> の場合、ボタンをクリックするとダウン状態のスキンが表示され、ボタンからマウスを離すとオーバー状態のスキンが表示されます。 <codeph>true</codeph> の場合、ボタンをクリックするとダウン状態のスキンが表示され、ボタンからマウスを離しても引き続きこのスキンが表示されます。
     
      <p>SliderThumb サブクラスおよび ScrollThumb サブクラスなどのボタンサブクラスまたは ScrollBar の上下の矢印は、このプロパティを <codeph>true</codeph> に設定します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:protected:textField"><apiName>textField</apiName><shortdesc>
      この Button のラベルを表示するための内部 UITextField オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier><apiDefaultValue>null 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      この Button のラベルを表示するための内部 UITextField オブジェクトです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:autoRepeat:get"><apiName>autoRepeat</apiName><shortdesc>
      ユーザーがマウスボタンを押したままのときに buttonDown イベントを繰り返し送出するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ユーザーがマウスボタンを押したままのときに <codeph>buttonDown</codeph> イベントを繰り返し送出するかどうかを指定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:data:get"><apiName>data</apiName><shortdesc>
      コンポーネントをアイテムレンダラーまたはアイテムエディターとして使う場合、data プロパティを使用して、そのコンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      コンポーネントをアイテムレンダラーまたはアイテムエディターとして使う場合、<codeph>data</codeph> プロパティを使用して、そのコンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてコントロールを使用すると、アイテムの現在の値が、このコントロールの <codeph>selected</codeph> プロパティに自動的に書き込まれます。</p>
     
      <p>MXML でこのプロパティを設定することはありません。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Button:emphasized:get"><apiName>emphasized</apiName><shortdesc>
      emphasized が true の場合、アップ状態の Button コントロールが太枠で囲まれます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>emphasized</codeph> が <codeph>true</codeph> の場合、アップ状態の Button コントロールが太枠で囲まれます。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      このコンポーネントのフォントコンテキストを提供するモジュールファクトリです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      このコンポーネントのフォントコンテキストを提供するモジュールファクトリです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:label:get"><apiName>label</apiName><shortdesc>
      Button コントロールに表示されるテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Button コントロールに表示されるテキストです。
     
      <p>Button コントロールよりラベルの幅の方が大きい場合、ラベルは省略記号（...）で切り詰められ、最後まで表示されません。マウスを Button コントロール上に移動すると、ラベル全体がツールヒントとして表示されます。 <codeph>tooltip</codeph> プロパティを使用してツールヒントを設定している場合は、ラベルテキストではなくツールヒントが表示されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      指定されたアイコンを基準にしたラベルの向きです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ButtonLabelPlacement.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      指定されたアイコンを基準にしたラベルの向きです。 有効な MXML 値は、<codeph>right</codeph>、<codeph>left</codeph>、<codeph>bottom</codeph> および <codeph>top</codeph> です。
     
      <p>ActionScript では、このプロパティを設定するために、<codeph>ButtonLabelPlacement.RIGHT</codeph>、<codeph>ButtonLabelPlacement.LEFT</codeph>、<codeph>ButtonLabelPlacement.BOTTOM</codeph> および <codeph>ButtonLabelPlacement.TOP</codeph> の各定数を使用できます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの listData プロパティが、リストコントロールからの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの <codeph>listData</codeph> プロパティが、リストコントロールからの該当するデータで初期化されます。 その後、コンポーネントでこの <codeph>listData</codeph> プロパティを使用して、ドロップインアイテムレンダラーまたはドロップインアイテムエディターの <codeph>data</codeph> プロパティを初期化できます。
     
      <p>MXML および ActionScript でこのプロパティを設定することはありません。このコンポーネントがドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用されるときに、Flex でプロパティが設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Button:selected:get"><apiName>selected</apiName><shortdesc>
      トグルボタンがオン（true）またはオフ（false）のどちらであるかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      トグルボタンがオン（<codeph>true</codeph>）またはオフ（<codeph>false</codeph>）のどちらであるかを示します。 このプロパティは、<codeph>toggle</codeph> プロパティが <codeph>true</codeph> に設定されている場合にのみ設定できます。
     
      <p>CheckBox コントロールの場合は、ボックスにチェックマークが表示されているかどうかを示します。 RadioButton コントロールの場合は、コントロールが選択されているかどうかを示します。</p>
     
      <p>ユーザーはコントロールをクリックすることでこのプロパティを変更できますが、このプロパティはプログラムによって設定することも可能です。</p>
     
      <p>旧バージョンでは、<codeph>toggle</codeph> プロパティが <codeph>true</codeph> に設定されている場合、このプロパティを変更すると、<codeph>change</codeph> イベントも送出されました。 バージョン 3.0 からは、プログラムでこのプロパティを設定した場合は、<codeph>valueCommit</codeph> イベントのみが送出されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:toggle:get"><apiName>toggle</apiName><shortdesc>
      Button を toggle 状態にするかどうかを制御します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Button を toggle 状態にするかどうかを制御します。 <codeph>true</codeph> の場合、ボタンのクリックに応じて、選択状態と非選択状態が切り替わります。 プログラムで <codeph>selected</codeph> プロパティを使用してこの状態を取得または設定できます。 <codeph>false</codeph> の場合、ユーザーがボタンを離すと、ボタンは押されたままの状態ではなくなります。 この場合の <codeph>selected</codeph> プロパティは常に <codeph>false</codeph> です。 このようなタイプのボタンはアクションを実行するために使用されます。 <codeph>toggle</codeph> が <codeph>false</codeph> に設定されると、選択状態になれるのはトグルボタンのみなので、<codeph>selected</codeph> は自動的に <codeph>false</codeph> になります。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:CheckBox"><apiName>CheckBox</apiName><shortdesc>
  CheckBox コントロールは、オプションのラベルと、チェックマークの表示と非表示の状態を保持する小さなボックスから構成されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="toggle"/><Exclude kind="property" name="emphasized"/><Alternative owner="mx.controls:CheckBox" replacement="spark.components.CheckBox" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:CheckBox" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのシンボルのカラーです。CheckBox のチェックマークや ScrollBar ボタンの矢印などがあります。
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:CheckBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:CheckBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされていない場合は <codeph>0x111111</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:CheckBox&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:CheckBox
    <strong>Styles</strong>
    disabledIconColor="0x999999"
    iconColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IToggleButton</apiBaseInterface><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  CheckBox コントロールは、オプションのラベルと、チェックマークの表示と非表示の状態を保持する小さなボックスから構成されます。 オプションのテキストラベルは、CheckBox の左、右、上、または下に配置できます。ユーザーが CheckBox コントロールまたは対応するテキストをクリックすると、チェックマークが表示された状態から表示されていない状態へ、またはチェックマークが表示されていない状態から表示された状態に変化します。 CheckBox コントロールは、相互排他的でない一連のブール値（true または false）を収集します。
 
  <p>CheckBox コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>ラベルを表示するために必要なサイズです。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>制限なし</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="CheckBoxExample.mxml"><swfblock conref="examples/CheckBoxExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:CheckBox:CheckBox"><apiName>CheckBox</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Spacer"><apiName>Spacer</apiName><shortdesc>
  Spacer コントロールは、親コンテナ内で子をレイアウトするために役立ちます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:Spacer&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds no new tag attributes.</p>
  
  <pre>
  &lt;mx:Spacer/&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Spacer コントロールは、親コンテナ内で子をレイアウトするために役立ちます。Spacer コントロールは何も描画しませんが、親コンテナ内で自分自身にスペースを割り当てます。 
  
  <p>次の例では、Button コントロールを右に移動して HBox コンテナの右端に揃えるために、柔軟な Spacer コントロールを使用しています。</p>
 
  <pre>
  &lt;mx:HBox>
      &lt;mx:Image source="Logo.jpg"/>
      &lt;mx:Label text="Company XYZ"/>
      &lt;mx:Spacer width="100%"/>
      &lt;mx:Button label="Close"/>
  &lt;/mx:HBox>
  </pre>
 
  </apiDesc><example conref="SpacerExample.mxml"><swfblock conref="examples/SpacerExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:Spacer:Spacer"><apiName>Spacer</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:DateField"><apiName>DateField</apiName><shortdesc>
  DateField コントロールは日付を表示するテキストフィールドで、右側にカレンダーアイコンが表示されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="editableDisabledSkin"/><Exclude kind="style" name="editableDownSkin"/><Exclude kind="style" name="editableOverSkin"/><Exclude kind="style" name="editableUpSkin"/><Exclude kind="style" name="borderThickness"/><Exclude kind="property" name="selectedItem"/><Exclude kind="property" name="selectedIndex"/><styles><style deprecatedReplacement="dateChooserStyleName" deprecatedSince="3.0" inherit="no" name="weekDayStyleName" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  このコントロールの曜日名に適用されるスタイルシート定義の名前です。省略した場合、曜日名はこのコントロールのテキストスタイルを継承します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="dateChooserStyleName" deprecatedSince="3.0" inherit="no" name="todayStyleName" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  現在の日付の数値テキストの外観を設定するためのスタイルシート定義の名前です。現在の日付は <codeph>showToday</codeph> プロパティが <codeph>true</codeph> のときにコントロールでハイライト表示されます。 フォントの色を変更するには <codeph>color</codeph> スタイルを指定します。 省略した場合、現在の日付テキストはこのコントロールのテキストスタイルを継承します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="todayColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  DateChooser コントロールにおける今日の日付のハイライト表示の色です。 デフォルト値は <codeph>0x2B333</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:DateField" playerVersion="Flash9" type="Class">
<description>
  背景と境界のデフォルトのスキンとして使用するクラスの名前です。 DateField クラスにはデフォルト値がありません。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  DateChooser コントロールで現在選択されている日付のハイライト領域の色です。
  </description>
<default>0xCDFFC1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  ユーザーが DateChooser コントロール内の日付にマウスポインターを合わせたときの日付のハイライト領域の色です。
  </description>
<default>0xE3FFD6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" deprecatedReplacement="dateChooserStyleName" deprecatedSince="3.0" inherit="no" name="highlightAlphas" owner="mx.controls:DateField" playerVersion="Flash9" type="Array">
<description>
  コントロールのハイライトの塗りつぶしで使用するアルファ透明度値です。最初の値はハイライトの上端の透明度を指定し、2 番目の値はハイライトの下端の透明度を指定します。ハイライトは、スキンの上半分に適用されます。
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="dateChooserStyleName" deprecatedSince="3.0" inherit="no" name="headerStyleName" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  コントロールのテキスト（月名および年）とヘッダー領域の外観に適用されるスタイルシート定義の名前です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" deprecatedReplacement="dateChooserStyleName" deprecatedSince="3.0" format="Color" inherit="yes" name="headerColors" owner="mx.controls:DateField" playerVersion="Flash9" type="Array">
<description>
  DateChooser コントロールの最上部の領域の色です。 デフォルト値は <codeph>[ 0xE6EEEE, 0xFFFFFF ]</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" deprecatedReplacement="nextMonthStyleFilters, prevMonthStyleFilters, dateChooserStyleName" deprecatedSince="3.0" format="Color" inherit="no" name="fillColors" owner="mx.controls:DateField" playerVersion="Flash9" type="Array">
<description>
  コントロールの背景の着色に使用される色です。 フラットな外観のコントロールを作成するには、どちらの値にも同じカラーを渡します。
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" deprecatedReplacement="nextMonthStyleFilters, prevMonthStyleFilters, dateChooserStyleName" deprecatedSince="3.0" inherit="no" name="fillAlphas" owner="mx.controls:DateField" playerVersion="Flash9" type="Array">
<description>
  コントロールの背景の塗りつぶしで使用するアルファ値です。[1, 1] を使うと、コントロールの背景が不透明になります。
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dateChooserStyleName" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  DateChooser コントロールのドロップダウンリストのスタイルで使用する CSS スタイル宣言の名前です。デフォルトでは、DateChooser コントロールは DateField コントロールの継承可能なスタイルを使用します。 
  
  <p>このクラスセレクターを使用すると、<codeph>cornerRadius</codeph>、<codeph>fillAlphas</codeph>、<codeph>fillColors</codeph>、<codeph>headerColors</codeph>、<codeph>headerStyleName</codeph>、<codeph>highlightAlphas</codeph>、<codeph>todayStyleName</codeph>、<codeph>weekdayStyleName</codeph> など、DateChooser クラスのすべてのスタイルプロパティの値を設定できます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="dateChooserStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="cornerRadius" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。 このスタイルは、Alert、Button、ComboBox、LinkButton、MenuBar、NumericStepper、Panel、ScrollBar、Tab、TitleWindow の各コンポーネントおよび <codeph>borderStyle</codeph> プロパティを <codeph>"solid"</codeph> に設定できるすべてのコンポーネントによってサポートされます。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされない場合、デフォルト値は <codeph>0</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="Number">
<description>
  DateChooser コントロールの境界ボックスの境界線の幅です。デフォルト値は 1 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  境界線の色です。 このスタイルは、Button、CheckBox、ComboBox、MenuBar、NumericStepper、ProgressBar、RadioButton、ScrollBar、Slider の各コントロールおよび <codeph>borderStyle</codeph> スタイルをサポートするすべてのコンポーネントによってサポートされます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:DateField" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:DateField" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:DateField" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:DateField" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右境界線からコンテンツ領域の右端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x111111</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:DateField&gt</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:DateField
    <strong>Properties</strong>
    dayNames="["S", "M", "T", "W", "T", "F", "S"]"
    disabledDays="<i>No default</i>"
    disabledRanges="<i>No default</i>"
    displayedMonth="<i>Current month</i>"
    displayedYear="<i>Current year</i>"
    dropdownFactory="<i>ClassFactory that creates an mx.controls.DateChooser</i>"
    firstDayOfWeek="0"
    formatString="MM/DD/YYYY"
    labelFunction="<i>Internal formatter</i>"
    maxYear="2100"
    minYear="1900"
    monthNames="["January", "February", "March", "April", "May",
    "June", "July", "August", "September", "October", "November",
    "December"]"
    monthSymbol=""
    parseFunction="<i>Internal parser</i>"
    selectableRange="<i>No default</i>"
    selectedDate="<i>No default</i>"
    showToday="true|false"
    yearNavigationEnabled="false|true"
    yearSymbol=""
  
   <strong>Styles</strong>
    borderColor="0xAAB3B3"
    borderThickness="1"
    color="0x0xB333C"
    dateChooserStyleName="dateFieldPopup"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    iconColor="0x111111"
    leading="2"
    paddingLeft="0"
    paddingRight="0"
    rollOverColor="0xE3FFD6"
    selectionColor="0xB7F39B"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    todayColor="0x2B333C"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    close="<i>No default</i>"
    dataChange="<i>No default</i>"
    open="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  DateField コントロールは日付を表示するテキストフィールドで、右側にカレンダーアイコンが表示されます。 ユーザーがこのコントロールの境界ボックス内をクリックすると、DateChooser コントロールがポップアップし、現在の日付の月に含まれる日が一覧表示されます。 日が選択されない場合、このテキストフィールドは空になり、DateChooser コントロールには現在の日付の月が表示されます。
 
  <p>DateChooser コントロールが開いているときは、ユーザーは月と年をスクロールして、日付を選択できます。 日付が選択されると、DateChooser コントロールが閉じ、選択された日付がこのテキストフィールドに表示されます。</p>
 
  <p>DateField コントロールの <codeph>editable</codeph> プロパティが <codeph>true</codeph> に設定されている場合、ユーザーはテキストフィールドにも日付を入力できます。</p>
 
  <p>DateField には、拡張された日付選択用カレンダー向けに DateChooser と同じ以下のようなデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>カレンダーを表示するのに十分なサイズで、曜日名を表示するのに十分な幅です。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>制限なし</entry>
        </row></tbody></tgroup></adobetable>
 
 <p>DateField には、折り畳まれたコントロールについて次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>フォーマットした日付とカレンダーアイコンを表示するのに十分なサイズです。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>制限なし</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="DateFieldExample.mxml"><swfblock conref="examples/DateFieldExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link></related-links><adobeApiEvent id="mx.controls:DateField_mx.events.DateChooserEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  ユーザー操作により月が変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3616
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DateChooserEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.DateChooserEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザー操作により月が変更されたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  ユーザーがドロップダウンリストを開くためにフィールドを選択したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3614
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがドロップダウンリストを開くためにフィールドを選択したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使う場合、<codeph>data</codeph> プロパティは表示するデータを保持します。 このイベントを受け取って、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新することができます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  日付が選択されたとき、またはユーザーによりドロップダウンリストの外側がクリックされたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3615
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  日付が選択されたとき、またはユーザーによりドロップダウンリストの外側がクリックされたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.CalendarLayoutChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  日付が選択または変更されたとき、および DateChooser コントロールが閉じたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3613
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CalendarLayoutChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.CalendarLayoutChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  日付が選択または変更されたとき、および DateChooser コントロールが閉じたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DateField:DateField"><apiName>DateField</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:DateField:close"><apiName>close</apiName><shortdesc>
      DateChooser コントロールを閉じます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3621
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      DateChooser コントロールを閉じます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:dateToString"><apiName>dateToString</apiName><shortdesc>
      outputFormat 引数に従って、日付をストリング内に書式設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>ストリングとして書式設定された日付です。
     
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Date"/><apiDesc>書式設定する日付値です。
     
      </apiDesc></apiParam><apiParam><apiItemName>outputFormat</apiItemName><apiType value="String"/><apiDesc>日付形式を定義するストリングです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>outputFormat</codeph> 引数に従って、日付をストリング内に書式設定します。<codeph>outputFormat</codeph> 引数には、<codeph>value</codeph> ストリングを書式設定するパターンを含めます。 <codeph>"M"</codeph>、<codeph>"D"</codeph>、<codeph>"Y"</codeph>、区切り記号および句読点を含めることができます。
     
      </apiDesc><example><pre>var todaysDate:String = DateField.dateToString(new Date(), "MM/DD/YYYY");</pre>
      
      </example></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:open"><apiName>open</apiName><shortdesc>
      DateChooser コントロールを開きます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3620
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      DateChooser コントロールを開きます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:stringToDate"><apiName>stringToDate</apiName><shortdesc>
      日付を含むストリングオブジェクトを解析し、このストリングに対応する Date オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Date オブジェクトとして書式設定された日付です。
     
      
      </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>valueString</apiItemName><apiType value="String"/><apiDesc>書式設定する日付値です。
     
      </apiDesc></apiParam><apiParam><apiItemName>inputFormat</apiItemName><apiType value="String"/><apiDesc>日付形式を定義するストリングです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      日付を含むストリングオブジェクトを解析し、このストリングに対応する Date オブジェクトを返します。<codeph>inputFormat</codeph> 引数には、<codeph>valueString</codeph> ストリングを書式設定するパターンを含めます。<codeph>"M"</codeph>、<codeph>"D"</codeph>、<codeph>"Y"</codeph>、区切り記号および句読点を含めることができます。
     
      <p>この関数は、Date オブジェクトの有効性をチェックしません。日、月または年の値が NaN の場合、このメソッドは null を返します。</p>
     
      <p>次に実際の使用例を示します。
      <pre>var dob:Date = DateField.stringToDate("06/30/2005", "MM/DD/YYYY");</pre>        
      </p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:DateField:data:get"><apiName>data</apiName><shortdesc>
      アイテムレンダラーまたはアイテムエディターで data プロパティを使用すると、コンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーまたはアイテムエディターで <codeph>data</codeph> プロパティを使用すると、コンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてコントロールを使用すると、アイテムの現在の値が、このコントロールの <codeph>selectedDate</codeph> プロパティに自動的に書き込まれます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:dayNames:get"><apiName>dayNames</apiName><shortdesc>
      DateChooser コントロール用の曜日名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3626
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "S", "M", "T", "W", "T", "F", "S" ]
      </apiDefaultValue></apiValueDef><apiDesc>
      DateChooser コントロール用の曜日名です。 このプロパティを設定すると、DateChooser コントロールの日付ラベルが変更されます。日曜日が最初の曜日（インデックス 0）です。以降の曜日が通常の順序で続きます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:disabledDays:get"><apiName>disabledDays</apiName><shortdesc>
      無効にする曜日です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3627
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      </apiDefaultValue></apiValueDef><apiDesc>
      無効にする曜日です。 指定した曜日に該当するその月のすべての日付が無効になります。このプロパティの設定は、DateChooser コントロールのユーザーインターフェイスに即座に反映されます。この配列のエレメントは 0（日曜日）から 6（土曜日）の範囲の値です。 例えば、<codeph>[0, 6]</codeph> という値を設定すると、日曜日と土曜日が無効になります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:disabledRanges:get"><apiName>disabledRanges</apiName><shortdesc>
      1 日または複数の日を無効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3629
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      </apiDefaultValue></apiValueDef><apiDesc>
      1 日または複数の日を無効にします。
     
      <p>このプロパティは、パラメーターとしてオブジェクトの配列を受け入れます。 この配列にあるオブジェクトはそれぞれ Date オブジェクトです。無効にする 1 日を指定するか、あるいは、Date オブジェクトの値を持つ <codeph>rangeStart</codeph> プロパティおよび <codeph>rangeEnd</codeph> プロパティのいずれか一方または両方を含むオブジェクトを指定します。 これらのプロパティの値は、日付範囲の先頭と末尾を示します。 いずれかのプロパティを省略した場合、そちら側の境界には制限がなくなります。 <codeph>rangeStart</codeph> のみを指定した場合は、<codeph>rangeStart</codeph> の日付を含めて、指定した日付より後の日付がすべて無効になります。 <codeph>rangeEnd</codeph> のみを指定した場合は、<codeph>rangeEnd</codeph> の日付を含めて、指定した日付より前の日付がすべて無効になります。 1 日のみを無効にするには、配列内の日付を指定する単一の Date オブジェクトを使用します。 時間の値が存在する場合は、Date オブジェクトからゼロ設定されます。</p>
     
      <p>次の例では、2006 年 1 月 11 日と、2006 年 1 月 23 日 ～ 2 月 10 日の範囲および 2006 年 3 月 1 日以降のすべての日付を無効にしています。</p>
     
      <pre>disabledRanges="{[new Date(2006,0,11), {rangeStart:
      new Date(2006,0,23), rangeEnd: new Date(2006,1,10)},
      {rangeStart: new Date(2006,2,1)}]}"</pre>
     
      <p>このプロパティを設定すると、DateChooser コントロールの外観が直ちに変更されます（無効にされた日付が <codeph>displayedMonth</codeph> および <codeph>displayedYear</codeph> プロパティに含まれる場合）。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:displayedMonth:get"><apiName>displayedMonth</apiName><shortdesc>
      displayedMonth プロパティは、displayedYear プロパティと共に、DateChooser コントロールに表示される月を指定するために使用します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3624
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>displayedYear</codeph> プロパティは、<codeph>displayedMonth</codeph> プロパティと共に、DateChooser コントロールに表示される月を指定するために使用します。 月を表す数字は 0 から始まるので、1 月は 0 で 12 月は 11 です。 このプロパティを設定すると、DateChooser コントロールの外観が直ちに変更されます。 デフォルト値は今日の日付の月番号です。
     
      <p>デフォルト値は現在の月です。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:displayedYear:get"><apiName>displayedYear</apiName><shortdesc>
      displayedYear プロパティは、displayedMonth プロパティと共に、DateChooser コントロールに表示される年を決定するために使用します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3625
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>displayedMonth</codeph> プロパティは、<codeph>displayedYear</codeph> プロパティと共に、DateChooser コントロールに表示される年を決定するために使用します。 このプロパティを設定すると、DateChooser コントロールの外観が直ちに変更されます。
      
      <p>デフォルト値は現在の年です。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:dropdown:get"><apiName>dropdown</apiName><shortdesc>
      DateField コントロールに含まれる DateChooser コントロールへの参照が含まれます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls:DateChooser</apiValueClassifier></apiValueDef><apiDesc>
      DateField コントロールに含まれる DateChooser コントロールへの参照が含まれます。 使用されるクラスは <codeph>dropdownFactory</codeph> で設定できます。これは、<codeph>DateChooser</codeph> を拡張する限り可能です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:dropdownFactory:get"><apiName>dropdownFactory</apiName><shortdesc>
      日付選択用カレンダーとして使用するために、DateChooser から派生したインスタンスを生成する IFactory です。デフォルト値は DateChooser の IFactory です。
     
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      日付選択用カレンダーとして使用するために、DateChooser から派生したインスタンスを生成する IFactory です。デフォルト値は DateChooser の IFactory です。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:firstDayOfWeek:get"><apiName>firstDayOfWeek</apiName><shortdesc>
      DateChooser コントロールの最初の列に表示する曜日です（0 ～ 6。0 は dayNames 配列の最初のエレメント）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3623
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>0 (Sunday)
      </apiDefaultValue></apiValueDef><apiDesc>
      DateChooser コントロールの最初の列に表示する曜日です（0 ～ 6。0 は dayNames 配列の最初のエレメント）。 このプロパティを設定すると、日付列の順序が変更されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:formatString:get"><apiName>formatString</apiName><shortdesc>
      テキストフィールドに表示される日付の形式です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"MM/DD/YYYY"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      テキストフィールドに表示される日付の形式です。 このプロパティは、<codeph>"MM"</codeph>、<codeph>"DD"</codeph>、<codeph>"YY"</codeph>、<codeph>"YYYY"</codeph>、区切り文字および句読点を組み合わせて指定できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      DateField コントロールのテキストフィールドに表示される日付に、書式設定する場合に使用する関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3618
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      DateField コントロールのテキストフィールドに表示される日付に、書式設定する場合に使用する関数です。 関数を指定しない場合は、デフォルトの形式が使用されます。
      
      <p>この関数は引数として Date オブジェクトを取り、次の例に示すように表示する書式のストリングを返します。</p>
      <pre>
      public function formatDate(currentDate:Date):String {
          ...
          return dateString;
      }</pre>
     
      <p>DateField コントロールのテキストフィールドにユーザーが日付を入力することを許可し、<codeph>labelFunction</codeph> プロパティを使用してフォーマット関数を定義する場合、入力テキストストリングを DateField コントロールで使用するための Date オブジェクトに変換する関数を <codeph>parseFunction</codeph> プロパティに指定するか、<codeph>parseFunction</codeph> プロパティを null に設定する必要があります。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#DateField/parseFunction"><linktext>mx.controls.DateField.parseFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの listData プロパティが、List コントロールからの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてこのコンポーネントを使用すると、その <codeph>listData</codeph> プロパティが、List コントロールの該当するデータで初期化されます。 その後、このコンポーネントでは、この <codeph>listData</codeph> プロパティを使用して、ドロップインアイテムレンダラーまたはドロップインアイテムエディターの <codeph>data</codeph> プロパティを初期化できます。
     
      <p>MXML および ActionScript でこのプロパティを設定することはありません。このコンポーネントがドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用されるときに、Flex でプロパティが設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:maxYear:get"><apiName>maxYear</apiName><shortdesc>
      コントロール内で選択可能な最後の年です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>2100
     
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロール内で選択可能な最後の年です。
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:minYear:get"><apiName>minYear</apiName><shortdesc>
      コントロール内で選択可能な最初の年です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1900
     
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロール内で選択可能な最初の年です。
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:monthNames:get"><apiName>monthNames</apiName><shortdesc>
      コントロールの最上部に表示される月の名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "January", "February", "March", "April", "May", "June", 
      "July", "August", "September", "October", "November", "December" ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロールの最上部に表示される月の名前です。 <codeph>monthSymbol</codeph> プロパティは、<codeph>monthNames</codeph> プロパティによって指定された値の後ろに追加されます。これは、日本語などの言語で役に立ちます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:monthSymbol:get"><apiName>monthSymbol</apiName><shortdesc>
      このプロパティは、monthNames プロパティによって定義された値の後ろに追加され、コントロールの最上部に表示される月の名前を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      このプロパティは、<codeph>monthNames</codeph> プロパティによって定義された値の後ろに追加され、コントロールの最上部に表示される月の名前を定義します。 日本語などの一部の言語では、月の名前の後ろに文字を追加します。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:parseFunction:get"><apiName>parseFunction</apiName><shortdesc>
      DateField コントロールのテキストフィールド領域にテキストとして入力される日付を解析し、その DateField コントロールに Date オブジェクトを返す関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      DateField コントロールのテキストフィールド領域にテキストとして入力される日付を解析し、その DateField コントロールに Date オブジェクトを返す関数です。関数を指定しない場合、デフォルト関数が使用されます。 <codeph>parseFunction</codeph> プロパティが設定されている場合、通常、<codeph>labelFunction</codeph> プロパティに指定されている関数の反転を実行する必要があります。
      
      <p>この関数は引数として 2 つの引数を取り、次の例に示すように DateField コントロールに Date オブジェクトを返します。</p>
      <pre>
      public function parseDate(valueString:String, inputFormat:String):Date {
          ...
          return newDate
      }</pre>
     
      <p>ここで、<codeph>valueString</codeph> 引数は、ユーザーがテキストフィールドに入力するテキストストリングを含み、<codeph>inputFormat</codeph> 引数はストリング形式を含みます。 例えば、月、日、年の 2 文字を使用してテキストストリングを入力できる場合は、<codeph>inputFormat</codeph> 引数に「MM/DD/YY」を渡します。 </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#DateField/labelFunction"><linktext>mx.controls.DateField.labelFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:selectableRange:get"><apiName>selectableRange</apiName><shortdesc>
      選択可能な日付の範囲です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3628
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      選択可能な日付の範囲です。 例えば、2006 年 12 月 04 日から 2007 年 12 月 04 日までの日付を選択可能にし、この範囲外の日付を無効にします。
     
      <p>このプロパティは、パラメーターとして 1 つのオブジェクトを受け入れます。 このオブジェクトには、<codeph>rangeStart</codeph> と <codeph>rangeEnd</codeph> の 2 つの Date 型プロパティが含まれます。 <codeph>rangeStart</codeph> のみを指定した場合は、指定した日付以降の日付がすべて有効になります。 <codeph>rangeEnd</codeph> のみを指定した場合は、指定した日付より前の日付がすべて有効になります。 DateChooser コントロールで 1 つの日付のみを有効にするには、Date オブジェクトを直接渡します。 時間の値が存在する場合は、Date オブジェクトからゼロ設定されます。</p>
     
      <p>次の例では、2006 年 1 月 1 日 ～ 2006 年 6 月 30 日の範囲のみを有効にしています。1 月より前、および 6 月より後の月は DateChooser に表示されません。</p>
     
      <pre>selectableRange="{{rangeStart : new Date(2006,0,1),
      rangeEnd : new Date(2006,5,30)}}"</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:selectedDate:get"><apiName>selectedDate</apiName><shortdesc>
      DateChooser コントロールで選択されている日付です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3630
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      DateChooser コントロールで選択されている日付です。 パラメーターとして 1 つの Date オブジェクトを受け入れます。 受け入れる Date オブジェクトが時間の値を持っている場合、それらの値はゼロ設定されます。
     
      <p>Ctrl キーを押しながら現在選択されている日付を選択すると、その日付の選択が解除され、<codeph>selectedDate</codeph> プロパティが <codeph>null</codeph> に設定されて、<codeph>change</codeph> イベントが送出されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:showToday:get"><apiName>showToday</apiName><shortdesc>
      true の場合、DateChooser コントロールで今日の日付が強調表示されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3622
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、DateChooser コントロールで今日の日付が強調表示されます。 このプロパティを設定すると、DateChooser コントロールの外観が直ちに変更されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:yearNavigationEnabled:get"><apiName>yearNavigationEnabled</apiName><shortdesc>
      年ナビゲーションを有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      年ナビゲーションを有効にします。 <codeph>true</codeph> である場合、表示された年の右側に上下のボタンが表示されます。 これらのボタンを使用して、今年を変更できます。 これらのボタンは、年が月の前に来る日付形式を使用するロケールでは、年の左側に表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:yearSymbol:get"><apiName>yearSymbol</apiName><shortdesc>
      このプロパティは、コントロールの最上部に表示される年の後ろに追加されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      このプロパティは、コントロールの最上部に表示される年の後ろに追加されます。 日本語などの一部の言語では、年の後ろに文字を追加します。 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ColorPicker"><apiName>ColorPicker</apiName><shortdesc>
  ColorPicker コントロールは、ユーザーが色見本リストから色を選択する手段を提供するものです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="highlightAlphas"/><Exclude kind="style" name="fillColors"/><Exclude kind="style" name="fillAlphas"/><Exclude kind="property" name="text"/><styles><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="verticalGap" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  グリッド内の色見本間の垂直方向の間隔です。デフォルト値は 0 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="textFieldWidth" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本グリッドに表示されるテキストボックスの幅です。デフォルト値は 72 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" inherit="no" name="textFieldStyleName" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  テキスト入力コントロールに適用されるスタイルシート定義の名前です。デフォルト値は "swatchPanelTextField" です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="swatchWidth" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  各色見本の幅です。デフォルト値は 12 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="swatchPanelStyleName" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  色見本パネルのスタイルプロパティを定義するクラスセレクターの名前です。 デフォルト値は <codeph>undefined</codeph> です。次の例は、<codeph>swatchPanelStyleName</codeph> で定義されたデフォルトのスタイルプロパティを示します。 
  <pre>
  ColorPicker {
      swatchPanelStyleName:mySwatchPanelStyle;
  }
  
  .mySwatchPanelStyle {
      backgroundColor:#E5E6E7;
      columnCount:20;
      horizontalGap:0;
      previewHeight:22;
      previewWidth:45;
      swatchGridBackgroundColor:#000000;
      swatchGridBorderSize:0;
      swatchHeight:12;
      swatchHighlightColor:#FFFFFF;
      swatchHighlightSize:1;
      swatchWidth:12;
      textFieldWidth:72;
      verticalGap:0;
  }
  </pre>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="swatchHighlightSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  ユーザーが色見本に合わせたときに、色見本の周囲に表示されるハイライトのサイズです。 デフォルト値は 1 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Color" inherit="no" name="swatchHighlightColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  ユーザーが色見本に合わせたときに、色見本の周囲に表示されるハイライトカラーです。 デフォルト値は <codeph>0xFFFFFF</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="swatchHeight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  各色見本の高さです。 デフォルト値は 12 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="swatchGridBorderSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本グリッドを囲む単一境界線のサイズです。デフォルト値は 0 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Color" inherit="no" name="swatchGridBackgroundColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  色見本グリッドの背面にある背景矩形の色です。 デフォルト値は <codeph>0x000000</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="swatchBorderSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本境界線のアウトラインのサイズです。 デフォルト値は 1 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="swatchBorderColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  色見本境界線の色です。 デフォルト値は <codeph>0x000000</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="previewWidth" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  大きなプレビュー色見本の幅です。 デフォルト値は 45 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="previewHeight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  SwatchPanel オブジェクトの左上隅の色見本グリッドに表示される大きなプレビュー色見本の高さです。デフォルト値は 22 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本グリッドの上側の SwatchPanel オブジェクトの追加スペースです。デフォルト値は 4 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本グリッドの右側の SwatchPanel オブジェクトの追加スペースです。デフォルト値は 5 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本グリッドの左側の SwatchPanel オブジェクトの追加スペースです。デフォルト値は 5 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本グリッドの下側の SwatchPanel オブジェクトの追加スペースです。デフォルト値は 5 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Function">
<description>
  コンポーネントトゥイーンを制御するためのイージング関数です。 デフォルト値は <codeph>undefined</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  開いた状態へのトランジションにかかる時間の長さ（ミリ秒単位）です。 デフォルト値は 250 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Length" inherit="no" name="horizontalGap" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  色見本グリッド内にある色見本の間の間隔（水平方向）です。デフォルト値は 0 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の着色に使用される色です。 フラットな外観のコントロールを作成するには、どちらの値にも同じカラーを渡します。デフォルト値は <codeph>[ 0xFFFFFF, 0xCCCCCC ]</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の塗りつぶしで使用するアルファ値です。デフォルト値は <codeph>[ 0.6, 0.4 ]</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" inherit="no" name="columnCount" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="int">
<description>
  色見本グリッド内の列の数です。デフォルト値は 20 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Function">
<description>
  コンポーネントトゥイーンを制御するためのイージング関数です。 デフォルト値は <codeph>undefined</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  閉じた状態へのトランジションにかかる時間の長さ（ミリ秒単位）です。 デフォルト値は 250 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  SwatchPanel オブジェクト外側の境界線の色です。 デフォルト値は <codeph>0xA5A9AE</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="swatchPanelStyleName" deprecatedSince="3.0" format="Color" inherit="no" name="backgroundColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  SwatchPanel オブジェクトの背景色です。 デフォルト値は <codeph>0xE5E6E7</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x111111</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ColorPicker&gt;</code> tag inherits all of the properties of its
  superclass, and the following properties:</p>
 
  <pre>
  &lt;mx:ColorPicker
    <b>Properties</b>
    colorField="color"
    labelField="label"
    selectedColor="0x000000"
    selectedIndex="0"
    showTextField="true|false"
 
    <b>Styles</b>
    borderColor="0xA5A9AE"
    closeDuration="250"
    closeEasingFunction="undefined"
    color="0x0B333C"
    disabledIconColor="0x999999"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontfamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0""
    fontSize="10"
    fontStyle="normal"
    fontThickness="0"
    fontWeight="normal"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x000000"
    leading="2"
    openDuration="250"
    openEasingFunction="undefined"
    paddingBottom="5"
    paddingLeft="5"
    paddingRight="5"
    paddingTop="4"
    swatchBorderColor="0x000000"
    swatchBorderSize="1"
    swatchPanelStyleName="undefined"
    textAlign="left"
    textDecoration="none"
    textIndent="0"
 
    <b>Events</b>
    change="<i>No default</i>"
    close="<i>No default</i>"
    enter="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
    open="<i>No default</i>"
    /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  ColorPicker コントロールは、ユーザーが色見本リストから色を選択する手段を提供するものです。コンポーネントのデフォルトのモードでは、正方形のボタンに単一の色見本が表示されます。ユーザーが色見本のボタンをクリックすると、色見本パネルが開き、色見本リスト全体が表示されます。
 
  <p>ColorPicker コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>ColorPicker：22 × 22 ピクセル、色見本パネル：ColorPicker コントロールの幅に合わせて設定</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 × 0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>未定義</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ColorPickerExample.mxml"><swfblock conref="examples/ColorPickerExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><adobeApiEvent id="mx.controls:ColorPicker_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  色見本パネルが開いたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4920
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  色見本パネルが開いたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  ユーザーが SwatchPanel オブジェクト内の色見本にマウスを合わせたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4923
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが SwatchPanel オブジェクト内の色見本にマウスを合わせたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  ユーザーが SwatchPanel オブジェクト内の色見本からマウスを移動したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4924
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが SwatchPanel オブジェクト内の色見本からマウスを移動したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  ColorPicker の editable プロパティが true に設定されている場合に、ユーザーが 16 進数のカラー値を入力した後、Enter キーを押すと送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4919
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ColorPicker の <codeph>editable</codeph> プロパティが <codeph>true</codeph> に設定されている場合に、ユーザーが 16 進数のカラー値を入力した後、Enter キーを押すと送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  色見本パネルが閉じたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4921
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  色見本パネルが閉じたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  ユーザー操作の結果として選択された色が変化したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4918
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザー操作の結果として選択された色が変化したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ColorPicker:ColorPicker"><apiName>ColorPicker</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ColorPicker:close"><apiName>close</apiName><shortdesc>
      ドロップダウン形式の SwatchPanel オブジェクトを非表示にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4926
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>trigger</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
      ドロップダウン形式の SwatchPanel オブジェクトを非表示にします。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ColorPicker:open"><apiName>open</apiName><shortdesc>
      ユーザーが選択できる色を表示するドロップダウン形式の SwatchPanel オブジェクトを表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4925
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      ユーザーが選択できる色を表示するドロップダウン形式の SwatchPanel オブジェクトを表示します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ColorPicker:colorField:get"><apiName>colorField</apiName><shortdesc>
      色見本パネルで表示される色の 16 進数を指定する dataProvider 配列のオブジェクト内のフィールド名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4927
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"color"
      </apiDefaultValue></apiValueDef><apiDesc>
      色見本パネルで表示される色の 16 進数を指定する dataProvider 配列のオブジェクト内のフィールド名です。
     
      <p>dataProvider オブジェクトにカラーフィールドが含まれない場合は、<codeph>colorField</codeph> プロパティを使用して正しいフィールド名を設定します。 dataProvider が 16 進数のカラー値の配列である場合、このプロパティは使用可能ですが意味を持ちません。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:labelField:get"><apiName>labelField</apiName><shortdesc>
      SwatchPanel オブジェクトテキストボックス内のラベルとして表示するテキストを含む dataProvider 配列のオブジェクト内のフィールド名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4928
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      </apiDefaultValue></apiValueDef><apiDesc>
      SwatchPanel オブジェクトテキストボックス内のラベルとして表示するテキストを含む dataProvider 配列のオブジェクト内のフィールド名です。
     
      <p>dataProvider オブジェクトにラベル フィールドが含まれない場合は、<codeph>labelField</codeph> プロパティを使用して正しいフィールド名を設定します。 dataProvider が 16 進数のカラー値の配列である場合、このプロパティは使用可能ですが意味を持ちません。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:selectedColor:get"><apiName>selectedColor</apiName><shortdesc>
      SwatchPanel オブジェクト内で現在選択されている色の値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4932
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
      SwatchPanel オブジェクト内で現在選択されている色の値です。このプロパティは、&lt;mx:ColorPicker> タグのみで、"blue" などの標準ストリングの色名に設定できます。dataProvider に黒（0x000000）のエントリが含まれている場合は、デフォルト値は 0 です。それ以外の場合は、デフォルト値は data provider のインデックス 0 にあるアイテムの色です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:showTextField:get"><apiName>showTextField</apiName><shortdesc>
      カラーラベルまたは 16 進数のカラー値を示すテキストボックスを表示するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      カラーラベルまたは 16 進数のカラー値を示すテキストボックスを表示するかどうかを指定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:protected:swatchStyleFilters:get"><apiName>swatchStyleFilters</apiName><shortdesc>
      ColorPicker からプレビュー色見本に渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      ColorPicker からプレビュー色見本に渡すスタイルのセットです。 
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ColorPicker:selectedIndex:set"><apiName>selectedIndex</apiName><shortdesc>
      SwatchPanel オブジェクト内で選択されたアイテムの dataProvider 内のインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4931
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      SwatchPanel オブジェクト内で選択されたアイテムの dataProvider 内のインデックスです。 このプロパティを設定すると、選択した色がインデックスに対応する色に設定され、ドロップダウン色見本の選択されたインデックスが <codeph>selectedIndex</codeph> プロパティの値に設定され、関連付けられたラベルがテキストボックスに表示されます。 デフォルト値は、黒（0x000000）が検出された場合は黒に対応するインデックス、それ以外の場合は 0 です。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:SWFLoader"><apiName>SWFLoader</apiName><shortdesc>
  SWFLoader コントロールは、指定した SWF ファイルをロードおよび表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><effects><effect event="complete" name="completeEffect" owner="mx.controls:SWFLoader">
<description>
  complete イベントが送出されたときに開始されるエフェクトです。
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><styles><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="String">
<description>
  縦横比が 1 対 1 でないときのコンテンツの垂直方向の配置です。 有効な値は、<codeph>"top"</codeph>、<codeph>"middle"</codeph> および <codeph>"bottom"</codeph> です。
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="String">
<description>
  縦横比が 1 対 1 でないときのコンテンツの水平方向の配置です。 有効な値は、<codeph>"left"</codeph>、<codeph>"center"</codeph> および <codeph>"right"</codeph> です。
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="brokenImageSkin" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="Class">
<description>
  コントロールがコンテンツをロードできない場合に SWFLoader のスキンとして使用するクラスの名前です。デフォルト値は、Assets.swf ファイル内の "__brokenImage" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="brokenImageBorderSkin" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="Class">
<description>
  コントロールがコンテンツをロードできない場合に SWFLoader の境界のスキンとして使用するクラスの名前です。
  </description>
<default>BrokenImageBorderSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The &lt;mx:SWFLoader&gt; tag inherits all of the tag attributes
  of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:SWFLoader
    <strong>Properties</strong>
    autoLoad="true|false"
    loadForCompatibility="false|true"
    loaderContext="null"
    maintainAspectRatio="true|false"
    scaleContent="true|false"
    showBusyCursor="false|true"
    source="<i>No default</i>"
    trustContent="false|true"
  
    <strong>Styles</strong>
    brokenImageBorderSkin="BrokenImageBorderSkin"
    brokenImageSkin="<i>'__brokenImage' symbol in Assets.swf</i>"
    horizontalAlign="left|center|right"
    verticalAlign="top|middle|bottom"
  
    <strong>Effects</strong>
    completeEffect="<i>No default</i>"
    
    <strong>Events</strong>
    complete="<i>No default</i>"
    httpStatus="<i>No default</i>"
    init="<i>No default</i>"
    ioError="<i>No default</i>"
    open="<i>No default</i>"
    progress="<i>No default</i>"
    securityError="<i>No default</i>"
    unload="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:ISWFLoader</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  SWFLoader コントロールは、指定した SWF ファイルをロードおよび表示します。 一般的に、SWFLoader は Flex アプリケーションをホストの Flex アプリケーションにロードする場合に使用します。
 
  <p><b>メモ：</b>SWFLoader コントロールを使用して、実行時の GIF、JPEG または PNG イメージファイルの読み込み、SWF、GIF、JPEG または PNG イメージを表す ByteArray の読み込みまたはコンパイル時の <codeph>@Embed(source='filename')</codeph> を使用したこれらのタイプのファイルの埋め込みバージョンとSVG ファイルの読み込みを行うことができます。 ただし、Image コントロールの方がこの機能に適しており、大半のイメージのロードに使用されます。 Image コントロールは、カスタムアイテムレンダラーとアイテムエディターでも使用できるように設計されています。 SVG ファイルで SWFLoader または Image を使用するときは、Embed ステートメントを使用して SVG をアプリケーションに埋め込んだ場合にのみ、SVG をロードできます。実行時にネットワークから SVG をロードすることはできません。</p>
 
  <p>SWFLoader コントロールでは、そのコンテンツを拡大および縮小し、そのサイズを設定できます。また、コンテンツのサイズに合わせてコントロール自身が拡大 / 縮小することもできます。デフォルトでは、SWFLoader コントロールのサイズに合うようにコンテンツが拡大 / 縮小されます。また、プログラムを使って要求時にコンテンツをロードし、ロードの進行状況を監視できます。</p>  
 
  <p>SWFLoader コントロールはフォーカスを取得できません。ただし、SWFLoader コントロールのコンテンツ自体は、フォーカスの取得やフォーカス操作が可能です。</p>
 
  <p>SWFLoader コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>ロードしたコンテンツ全体を表示するのに必要な幅と高さです。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>未定義</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="local.mxml"/><example conref="SimpleLoader.mxml"><swfblock conref="examples/SimpleLoader.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Image"><linktext>mx.controls.Image</linktext></link></related-links><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.UNLOAD_unload"><apiName>unload</apiName><shortdesc>
  ロードされたオブジェクトが削除されるたびに送出されます。または 2 番目のロードが同じ SWFLoader コントロールによって実行され、新たなロードの開始前に元のコンテンツが削除された場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.UNLOAD</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ロードされたオブジェクトが削除されるたびに送出されます。または 2 番目のロードが同じ SWFLoader コントロールによって実行され、新たなロードの開始前に元のコンテンツが削除された場合に送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"><apiName>securityError</apiName><shortdesc>
  コンテンツのロード中にセキュリティエラーが発生すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier>flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  コンテンツのロード中にセキュリティエラーが発生すると送出されます。詳細については、SecurityErrorEvent クラスを参照してください。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  コンテンツのロード中に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  コンテンツのロード中に送出されます。
 
  <p>このイベントは、ロードが autoload によってトリガーされたか、<codeph>load()</codeph> メソッドの明示的な呼び出しによってトリガーされたかにかかわらず、送出されます。</p>
 
  <p><b>メモ：</b><codeph>progress</codeph> イベントが送出されることは保証されていません。 <codeph>complete</codeph> イベントを、<codeph>progress</codeph> イベントが 1 つも送出されないまま受け取る場合もあります。 これは、ローカルファイルをロードする場合によく発生します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.OPEN_open"><apiName>open</apiName><shortdesc>
  ネットワーク操作が開始したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ネットワーク操作が開始したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.IOErrorEvent.IO_ERROR_ioError"><apiName>ioError</apiName><shortdesc>
  入出力エラーが発生すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier>flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  入出力エラーが発生すると送出されます。
  </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="flash.events.IOErrorEvent.xml"><linktext>flash.events.IOErrorEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.INIT_init"><apiName>init</apiName><shortdesc>
  ロードされた SWF ファイルのプロパティおよびメソッドにアクセスできる場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.INIT</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ロードされた SWF ファイルのプロパティおよびメソッドにアクセスできる場合に送出されます。このイベントが送出されるためには、次に示す 2 つの条件に適合する必要があります。
 
  <ul>
    <li>ロードされたオブジェクトに関係したすべてのプロパティ、メソッドおよびコントロールに関係したすべてのプロパティとメソッドにアクセスできます。</li>
    <li>すべての子オブジェクトのコンストラクターが完了済みです。</li>
  </ul>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"><apiName>httpStatus</apiName><shortdesc>
  ネットワーク要求が HTTP 上で行われ、Flash Player または AIR が HTTP 状況コードを検出できる場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier>flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ネットワーク要求が HTTP 上で行われ、Flash Player または AIR が HTTP 状況コードを検出できる場合に送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  コンテンツのロードが完了したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  コンテンツのロードが完了したときに送出されます。
 
  <p>このイベントは、ロードが autoload によってトリガーされたか、<codeph>load()</codeph> メソッドの明示的な呼び出しによってトリガーされたかにかかわらず、送出されます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:SWFLoader:SWFLoader"><apiName>SWFLoader</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:SWFLoader:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      MouseEvent.CLICK イベントのデフォルトハンドラーです。</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>イベントオブジェクトです。
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>MouseEvent.CLICK</codeph> イベントのデフォルトハンドラーです。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:getVisibleApplicationRect"><apiName>getVisibleApplicationRect</apiName><shortdesc>
      
      ユーザーが画面で参照できる、ロードされたアプリケーションの境界を取得します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>このオブジェクトの可視部分を含む <codeph>Rectangle</codeph> です。矩形では、グローバル座標が使用されます。
      
      </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>allApplications</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>可視矩形がこのアプリケーションの表示オブジェクトにのみ基づいて計算されるか、すべての親アプリケーションにも基づいて計算されるかを決定します。多くの親アプリケーションを含めると、返される表示可能領域が減少します。<codeph>true</codeph> の場合はすべてのアプリケーションを使用して可視領域が検索され、それ以外の場合は、このアプリケーションの表示オブジェクトのみ使用されます。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      ユーザーが画面で参照できる、ロードされたアプリケーションの境界を取得します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:load"><apiName>load</apiName><shortdesc>
      イメージまたは SWF ファイルをロードします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>ロードする GIF ファイル、JPEG ファイル、PNG ファイルまたは SWF ファイルの絶対 URL または相対 URL です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      イメージまたは SWF ファイルをロードします。<codeph>url</codeph> 引数では、GIF、JPEG、PNG または SWF の各ファイルを参照できます。このメソッドは、SVG ファイルをロードするために使用することはできません。その代わりに、<codeph>source</codeph> プロパティと共に Embed ステートメントを使用してロードする必要があります。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:unloadAndStop"><apiName>unloadAndStop</apiName><shortdesc>
      イメージまたは SWF ファイルをアンロードします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invokeGarbageCollector</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc> 子 SWF オブジェクトでガベージコレクターが実行されるようにヒントを提供するかどうかを指定します（<codeph>true</codeph> または <codeph>false</codeph>）。多数のオブジェクトを非同期でアンロードする場合は、<codeph>gc</codeph> パラメーターを <codeph>false</codeph> に設定するとアプリケーションのパフォーマンスが向上する可能性があります。ただし、このパラメーターを <codeph>false</codeph> に設定した場合は、子 SWF のアンロード後も子 SWF ファイルのメディアオブジェクトおよび表示オブジェクトがメモリに残ることがあります。  
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      イメージまたは SWF ファイルをアンロードします。このメソッドが戻った後 <codeph>source</codeph> プロパティは null になります。これは、ホスト Flash Player がバージョン 10 以降の場合にのみサポートされます。ホスト Flash Player がバージョン 10 未満の場合、このメソッドは <codeph>source</codeph> が null に設定されている場合と同様の方法でコンテンツをアンロードします。このメソッドは、子 SWF ファイルの EventDispatcher、NetConnection、Timer、Sound または Video オブジェクトへの参照を削除することにより、SWF ファイルのアンロードを試みます。この結果、子 SWF ファイルおよび子 SWF ファイルの表示リストで以下が行われます。 
      <ul>
      <li>サウンドが停止されます。</li>
      <li>Stage イベントリスナーが削除されます。</li>
      <li><codeph>enterFrame</codeph>、<codeph>frameConstructed</codeph>、<codeph>exitFrame</codeph>、<codeph>activate</codeph>、および <codeph>deactivate</codeph> のイベントリスナーが削除されます。</li>
      <li>タイマーが停止されます。</li>
      <li>Camera インスタンスおよび Microphone インスタンスがデタッチされます。</li>
      <li>ムービークリップが停止されます。</li>
      </ul>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:SWFLoader:autoLoad:get"><apiName>autoLoad</apiName><shortdesc>
      コンテンツのロードを自動的に開始するか、load() メソッドが呼び出されるまで待機するかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コンテンツのロードを自動的に開始するか、<codeph>load()</codeph> メソッドが呼び出されるまで待機するかを示すフラグです。<codeph>true</codeph> の場合、コンテンツが自動的にロードされます。 <codeph>false</codeph> の場合、<codeph>load()</codeph> メソッドを呼び出す必要があります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
      既にロードされた SWF またはイメージファイルのバイト数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      既にロードされた SWF またはイメージファイルのバイト数です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
      SWF またはイメージファイルの合計サイズです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      SWF またはイメージファイルの合計サイズです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:childAllowsParent:get"><apiName>childAllowsParent</apiName><shortdesc>
     
      子が親に、子の表示オブジェクトへのアクセスまたは子で生成されたメッセージの監視を許可するかどうかをテストします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     
      子が親に、子の表示オブジェクトへのアクセスまたは子で生成されたメッセージの監視を許可するかどうかをテストします。アクセスが許可されている場合は <codeph>true</codeph>、許可されていない場合は <codeph>false</codeph> です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:content:get"><apiName>content</apiName><shortdesc>
      このプロパティには、SWFLoader コントロールにロードされたコンテンツを表すオブジェクトが設定されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3134
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/><apiTipTexts><apiTipText>SWFLoader のコンテンツを返します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      このプロパティには、SWFLoader コントロールにロードされたコンテンツを表すオブジェクトが設定されます。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
      コントロールによりロードされた、拡大 / 縮小されたコンテンツの高さをピクセル単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロールによりロードされた、拡大 / 縮小されたコンテンツの高さをピクセル単位で表します。 これはコントロール自体の高さではなく、ロードされたコンテンツの高さです。 高さを取得するには、コントロールの <codeph>height</codeph> プロパティを使用します。
     
      <p><codeph>complete</codeph> イベントがトリガーされているときは、このプロパティの値は最終値ではありません。 <codeph>updateComplete</codeph> イベントがトリガーされた後で、値を取得できます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
      コントロールによりロードされた、拡大 / 縮小されたコンテンツの幅をピクセル単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロールによりロードされた、拡大 / 縮小されたコンテンツの幅をピクセル単位で表します。 これはコントロール自体の幅ではなく、ロードされたコンテンツの幅です。 幅を取得するには、コントロールの <codeph>width</codeph> プロパティを使用します。
     
      <p><codeph>complete</codeph> イベントがトリガーされているときは、このプロパティの値は最終値ではありません。 <codeph>updateComplete</codeph> イベントがトリガーされた後で、値を取得できます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:loadForCompatibility:get"><apiName>loadForCompatibility</apiName><shortdesc>
      Flex コンパイラーの異なるバージョンでビルドされたアプリケーションと相互運用できるようにコンテンツをロードするかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Flex コンパイラーの異なるバージョンでビルドされたアプリケーションと相互運用できるようにコンテンツをロードするかどうかを示すフラグです。他の Flex アプリケーションとの互換性は、アプリケーションを兄弟 (またはピア) ApplicationDomain にロードすることで実現されます。このフラグは、コンテンツを異なる SecurityDomain にロードする必要がある場合は無視されます。<codeph>true</codeph> の場合、コンテンツは、兄弟 ApplicationDomain にロードされます。<codeph>false</codeph> の場合、コンテンツは、子 ApplicationDomain にロードされます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:loaderContext:get"><apiName>loaderContext</apiName><shortdesc>
      コンテンツのロードの管理に使用する LoaderContext オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.system:LoaderContext"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      コンテンツのロードの管理に使用する LoaderContext オブジェクトです。 これは高度なプロパティです。 ほとんどの場合、<codeph>trustContent</codeph> プロパティを使用できます。
     
      <p>デフォルト値は <codeph>null</codeph> です。つまり、コントロールは <codeph>trustContent</codeph> プロパティを使用して LoaderContext オブジェクトを作成します。ロードの開始後にこのオブジェクトを戻すことができます。</p>
     
      <p>カスタムの LoaderContext オブジェクトを使用するには、SecurityDomain クラスおよび ApplicationDomain クラスを理解する必要があります。 このプロパティの設定により、ロードは開始しません。このプロパティは、ロードを開始する前に設定する必要があります。 これは、<codeph>autoLoad</codeph> プロパティを <codeph>false</codeph> に設定する必要があるということではありません。実際にはロードはすぐには開始されませんが、<codeph>creationComplete</codeph> イベントで設定されるのを待っていると遅すぎるためです。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.LoaderContext.xml"><linktext>flash.system.LoaderContext</linktext></link><link href="" invalidHref="flash.system.ApplicationDomain.xml"><linktext>flash.system.ApplicationDomain</linktext></link><link href="" invalidHref="flash.system.SecurityDomain.xml"><linktext>flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="mx.controls:SWFLoader:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      ロードしたコンテンツの縦横比を維持するかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ロードしたコンテンツの縦横比を維持するかどうかを示すフラグです。 <codeph>true</codeph> の場合、元のイメージと同じ縦横比を持つイメージを表示します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:parentAllowsChild:get"><apiName>parentAllowsChild</apiName><shortdesc>
     
      親が子に、親の表示オブジェクトへのアクセスまたは親で生成されたメッセージの監視を許可するかどうかをテストします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     
      親が子に、親の表示オブジェクトへのアクセスまたは親で生成されたメッセージの監視を許可するかどうかをテストします。アクセスが許可されている場合は <codeph>true</codeph>、許可されていない場合は <codeph>false</codeph> です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:percentLoaded:get"><apiName>percentLoaded</apiName><shortdesc>
      イメージファイルまたは SWF ファイルのロードが何パーセント完了したかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      イメージファイルまたは SWF ファイルのロードが何パーセント完了したかを示します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:scaleContent:get"><apiName>scaleContent</apiName><shortdesc>
      コントロールのサイズに合わせてコンテンツを拡大または縮小するか、コンテンツのサイズに合わせてコントロールのサイズを変更するかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロールのサイズに合わせてコンテンツを拡大または縮小するか、コンテンツのサイズに合わせてコントロールのサイズを変更するかを示すフラグです。 <codeph>true</codeph> の場合、SWFLoader コントロールのサイズに合わせてコンテンツが拡大 / 縮小されます。 <codeph>false</codeph> の場合、コンテンツに合わせて Loader が拡大 / 縮小されます。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:showBusyCursor:get"><apiName>showBusyCursor</apiName><shortdesc>
      コンテンツのロード中にビジーカーソルを表示するかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      コンテンツのロード中にビジーカーソルを表示するかどうかを示すフラグです。 <codeph>true</codeph> の場合、コンテンツのロード中にビジーカーソルを表示します。 デフォルトのビジーカーソルは、CursorManager クラスの <codeph>busyCursor</codeph> プロパティによって定義された mx.skins.halo.BusyCursor です。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.managers.xml#CursorManager"><linktext>mx.managers.CursorManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:SWFLoader:smoothBitmapContent:get"><apiName>smoothBitmapContent</apiName><shortdesc>
      拡大 / 縮小する際にコンテンツをスムージングするかどうかを示すフラグです。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     </apiDefaultValue></apiValueDef><apiDesc>
      拡大 / 縮小する際にコンテンツをスムージングするかどうかを示すフラグです。スムージングできるのは Bitmap コンテンツのみです。この値が <codeph>true</codeph> で、コンテンツが Bitmap の場合、コンテンツのスムージングプロパティは <codeph>true</codeph> に設定されます。<codeph>false</codeph> の場合、コンテンツはスムージングされません。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:source:get"><apiName>source</apiName><shortdesc>
      コンテンツとしてロードする URL、オブジェクト、クラスまたはクラスストリング名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コンテンツとしてロードする URL、オブジェクト、クラスまたはクラスストリング名です。 <codeph>source</codeph> プロパティは次の形式をとります。
     
      <p><pre>
      <codeph>source="<i>URLOrPathOrClass</i>"</codeph></pre></p>
     
      <p><pre>
      <codeph>source="@Embed(source='<i>PathOrClass</i>')"</codeph></pre></p>
     
      <p><codeph>source</codeph> プロパティの値は、相対 URL または 絶対 URL、SWF、GIF、JPEG または PNG を表す ByteArray、IFlexDisplayObject を実装するオブジェクト、IFlexDisplayObject を実装するタイプのクラスまたはクラスを表すストリングを表すことができます。 </p> 
     
      <p>SWF、GIF、JPEG、PNG または SVG の各ファイルへのパスを指定すると、SWFLoader コントロールと共に使用するための正しいデータ型に自動的に変換されます。</p> 
     
      <p>Embed ステートメントを省略した場合、参照されたファイルは、生成済み SWF ファイルの一部としてパッケージ化されるのではなく、実行時に Flex によってロードされます。 <codeph>source</codeph> プロパティでは、実行時に GIF、JPEG、PNG の各イメージ、および SWF ファイルのロードのみがサポートされます。</p>
     
      <p>Flex Data Services ユーザーは、次の形式で SWFLoader コントロールを使用して Flex アプリケーションをロードできます。</p>
     
      <p><pre>
      <codeph>source="<i>MXMLPath</i>.mxml.swf"</codeph></pre></p>
     
      <p>Flex Data Services は、MXML ファイルをコンパイルし、SWF ファイルをメインアプリケーションに返します。この手法は、主に、アプリケーションにグラフィックやアニメーションを追加する SWF ファイルを扱うものです。複雑な操作を実装した SWF ファイルには向いていません。複雑な操作を要求する SWF ファイルを読み込む場合は、カスタムコンポーネントを作成することをお勧めします。 </p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:swfBridge:get"><apiName>swfBridge</apiName><shortdesc>
     
      このインターフェイスの実装者に関連付けられているアプリケーションへのブリッジです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.events:IEventDispatcher"/></apiValueDef><apiDesc>
     
      このインターフェイスの実装者に関連付けられているアプリケーションへのブリッジです。異なる ApplicationDomain または異なるサンドボックス内のアプリケーションにイベントを送信するために使用できる IEventDispatcher です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:trustContent:get"><apiName>trustContent</apiName><shortdesc>
      true の場合、コンテンツはセキュリティドメインにロードされます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、コンテンツはセキュリティドメインにロードされます。 つまり、コンテンツが他のドメインにあり、そのドメインに自分のドメインにアクセスできる crossdomain.xml ファイルがない場合は、ロードが失敗します。 このプロパティは次のロードでのみ有効で、既にロード済みのコンテンツでは新しくロードを開始しません。
     
      <p>デフォルト値は <codeph>false</codeph> です。このデフォルト値では、失敗することなくどんなコンテンツもロードしますが、コンテンツにアクセスすることはできません。 最も重要なこととして、ロードされたコンテンツからはオブジェクトとコードにアクセスできません。これは最も安全なシナリオです。 ロードされたコンテンツが安全であることに確信がある場合以外、特に SWF ファイルなどのアクティブコンテンツではこのプロパティを <codeph>true</codeph> に設定しないでください。</p>
     
      <p>また、<codeph>loaderContext</codeph> プロパティを使用して、<codeph>trustContent</codeph> を設定してもニーズに正確に一致しない場合に、コンテンツがロードされる方法を正確に特定することもできます。 <codeph>loaderContext</codeph> プロパティを設定すると、SWFLoader は <codeph>trustContent</codeph> プロパティの値を無視します。 しかし、<codeph>loaderContext</codeph> プロパティを使用するには、SecurityDomain クラスおよび ApplicationDomain クラスについての知識が必要です。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.SecurityDomain.xml"><linktext>flash.system.SecurityDomain</linktext></link><link href="" invalidHref="flash.system.ApplicationDomain.xml"><linktext>flash.system.ApplicationDomain</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:NavBar"><apiName>NavBar</apiName><shortdesc>
  NavBar コントロールは、LinkBar コントロールや TabBar コントロールなどのナビゲーターコントロールに対するスーパークラスです。このコントロールは直接インスタンス化できません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="label"/><Exclude kind="property" name="icon"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Exclude kind="property" name="defaultButton"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code><mx:NavBar></code> tag inherits all of the tag attributes
  of its superclass, with the exception of scrolling-related
  attributes, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:<i>tagname</i>
    <strong>Properties</strong>
    dataProvider="<i>No default</i>"
    iconField="icon"
    labeField="label"
    selectedIndex="-1"
    toolTipField="toolTip"
     
    <strong>Events</strong>
    itemClick="<i>No default</i>"
    &gt;
     ...
       <i>child tags</i>
     ...
    &lt;/mx:<i>tagname</i>&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  NavBar コントロールは、LinkBar コントロールや TabBar コントロールなどのナビゲーターコントロールに対するスーパークラスです。このコントロールは直接インスタンス化できません。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.collections.xml#IList"><linktext>mx.collections.IList</linktext></link><link href="mx.containers.xml#ViewStack"><linktext>mx.containers.ViewStack</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link><link href="mx.controls.xml#TabBar"><linktext>mx.controls.TabBar</linktext></link><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link></related-links><adobeApiEvent id="mx.controls:NavBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  ナビゲーションアイテムが選択されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ナビゲーションアイテムが選択されたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:NavBar:NavBar"><apiName>NavBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:NavBar:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      NavBar コントロール内のアイテムに対する MouseEvent.CLICK イベントを処理します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>イベントオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      NavBar コントロール内のアイテムに対する <codeph>MouseEvent.CLICK</codeph> イベントを処理します。このハンドラーは、NavBar コントロールに対して <codeph>itemClick</codeph> イベントを送出します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:createNavItem"><apiName>createNavItem</apiName><shortdesc>
      個々のナビゲーターアイテムを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>作成されたナビゲーターアイテムです。
      
      </apiDesc><apiOperationClassifier>mx.core:IFlexDisplayObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>作成されたナビゲーターアイテムのラベルです。 
     
      </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>作成されたナビゲーターアイテムのアイコンです。 通常これは、アプリケーションに埋め込んだアイコンです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      個々のナビゲーターアイテムを作成します。 デフォルトでは、このメソッドはアクションを実行しません。サブクラス内のナビゲーターアイテムのタイプに基づいてナビゲーターアイテムを作成するために、サブクラス内でこのメソッドをオーバーライドできます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:hiliteSelectedNavItem"><apiName>hiliteSelectedNavItem</apiName><shortdesc>
      選択したナビゲーターアイテムをハイライトします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>NavBar コントロール内で選択されたアイテムのインデックスです。最初のアイテムはインデックス 0 にあります。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      選択したナビゲーターアイテムをハイライトします。 デフォルトでは、このメソッドはアクションを実行しません。選択されたナビゲーターアイテムをハイライト表示するために、サブクラス内でこのメソッドをオーバーライドできます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      labelField プロパティと labelFunction プロパティに基づいて、レンダラーが指定のデータオブジェクトに対して表示するストリングを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>データに基づいて表示されるストリングです。
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>レンダリングされるオブジェクトです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      labelField プロパティと labelFunction プロパティに基づいて、レンダラーが指定のデータオブジェクトに対して表示するストリングを返します。 このメソッドは、パラメーターをストリングに変換できない場合にスペースを 1 つ返します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:resetNavItems"><apiName>resetNavItems</apiName><shortdesc>
      ナビゲーターバーをデフォルトの状態にリセットします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      ナビゲーターバーをデフォルトの状態にリセットします。 デフォルトでは、このメソッドはアクションを実行しません。ナビゲーターバーをデフォルトの状態にリセットするために、サブクラス内でこのメソッドをオーバーライドできます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:updateNavItemIcon"><apiName>updateNavItemIcon</apiName><shortdesc>
      NavBar コントロール内のナビゲーターアイテムのアイコンをリセットします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>NavBar コントロール内のナビゲーターアイテムのインデックスです。 最初のナビゲーターアイテムはインデックス 0 にあります。
     
      </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiDesc>ナビゲーターアイテムの新しいアイコンです。 通常これは、アプリケーションに埋め込んだアイコンです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      NavBar コントロール内のナビゲーターアイテムのアイコンをリセットします。 サブクラス内のナビゲーターアイテムのタイプに基づいてナビゲーターアイテムのアイコンを設定するために、サブクラス内でこのメソッドをオーバーライドできます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:updateNavItemLabel"><apiName>updateNavItemLabel</apiName><shortdesc>
      NavBar コントロール内のナビゲーターアイテムのラベルプロパティを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>NavBar コントロール内のナビゲーターアイテムのインデックスです。 最初のナビゲーターアイテムはインデックス 0 にあります。
     
      </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>ナビゲーターアイテムの新しいラベルテキストです。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      NavBar コントロール内のナビゲーターアイテムのラベルプロパティを設定します。 サブクラス内のナビゲーターアイテムのタイプに基づいてナビゲーターアイテムのラベルを設定するために、サブクラス内でこのメソッドをオーバーライドできます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:NavBar:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      ナビゲーターコントロールに値を格納するために使用されるデータです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ナビゲーターコントロールに値を格納するために使用されるデータです。 データ型は ViewStack コンテナまたは配列です。
     
      <p>ViewStack コンテナを使用する場合は、ViewStack コンテナの子の <codeph>label</codeph> および <codeph>icon</codeph> プロパティを使用してナビゲーションアイテムが設定されます。次の例を参照してください。</p>
     
      <pre>
      &lt;mx:LinkBar dataProvider="{vs}"/>
      &lt;mx:ViewStack id="vs">
        &lt;mx:VBox label="Accounts" icon="account_icon"/>
        &lt;mx:VBox label="Leads" icon="leads_icon"/>
      &lt;/mx:ViewStack> </pre>
      
      <p>LinkBar コントロールには "Accounts" と "Leads" の 2 つのリンクが含まれます。それぞれが VBox タグで指定された独自のアイコンを持ちます。 リンクをクリックすると、対応するビューに ViewStack コンテナが移動します。</p>
     
      <p>配列を使用する場合は、各ナビゲーションアイテムのラベルとして使用される <codeph>dataProvider</codeph> フィールドの名前が <codeph>labelField</codeph> プロパティによって決定され、各ナビゲーションアイテムのアイコンとして使用される <codeph>dataProvider</codeph> フィールドの名前が <codeph>iconField</codeph> プロパティによって決定されます。 ストリングの配列を使用する場合、<codeph>labelField</codeph> プロパティは無視されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:iconField:get"><apiName>iconField</apiName><shortdesc>
      各ナビゲーションアイテムのアイコンとして表示する dataProvider オブジェクト内のフィールドの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      各ナビゲーションアイテムのアイコンとして表示する <codeph>dataProvider</codeph> オブジェクト内のフィールドの名前です。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:labelField:get"><apiName>labelField</apiName><shortdesc>
      各ナビゲーションアイテムのラベルとして表示する dataProvider オブジェクト内のフィールドの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      各ナビゲーションアイテムのラベルとして表示する <codeph>dataProvider</codeph> オブジェクト内のフィールドの名前です。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      ラベルを決定する各アイテムで実行されるユーザー指定の関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ラベルを決定する各アイテムで実行されるユーザー指定の関数です。 デフォルトでは、各データプロバイダーアイテム上の <codeph>label</codeph> という名前のプロパティが検索され、コンポーネントに表示されます。 ただし、<codeph>label</codeph> プロパティを持っておらず、表示に使用できる別のプロパティも持っていないデータセットもあります。 例えば、lastName フィールドと firstName フィールドを持つデータセットがあるときに、フルネームを表示したいとします。
     
      <p>このような場合に、適切なフィールドを検索して表示可能なストリングを返す <codeph>labelFunction</codeph> を指定できます。 また、<codeph>labelFunction</codeph> はフォーマット処理やローカライズにも使用できます。 </p>
     
      <p>ほとんどのコンポーネントの場合、ラベル関数はデータプロバイダー内のアイテムである単一の引数を受け入れて、ストリングを返します。</p>
      <pre>
      myLabelFunction(item:Object):String</pre>
     
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      アクティブなナビゲーションアイテムのインデックスで、最初のアイテムはインデックス位置 0 にあります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アクティブなナビゲーションアイテムのインデックスで、最初のアイテムはインデックス位置 0 にあります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:toolTipField:get"><apiName>toolTipField</apiName><shortdesc>
      ツールヒントのラベルとして表示する dataProvider オブジェクト内のフィールドの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"toolTip"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ツールヒントのラベルとして表示する <codeph>dataProvider</codeph> オブジェクト内のフィールドの名前です。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TextInput"><apiName>TextInput</apiName><shortdesc>
  TextInput コントロールは、必要に応じて編集可能な単一行のテキストフィールドです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:TextInput" replacement="spark.components.TextInput" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの上の境界と、コンテンツ領域の上端との間のピクセル数です。
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの下の境界と、コンテンツ領域の下端との間のピクセル数です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントにフォーカスがある場合のフォーカスリングのカラーです。
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのコンテンツ領域のカラーです。
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:TextInput" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:TextInput" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:TextInput" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:TextInput" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:TextInput" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:TextInput" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右境界線からコンテンツ領域の右端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  ドロップシャドウの幅です。このプロパティを負の値に設定すると、シャドウはコンポーネントの上に表示されます。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  ドロップシャドウの方向です。 有効な値は <codeph>"left"</codeph>、<codeph>"center"</codeph> および <codeph>"right"</codeph> です。
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  ドロップシャドウの色です。
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b/><codeph/>設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 このスタイルは <codeph>borderStyle="solid"</codeph> と共に使用します。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b>メモ：</b>ドロップシャドウをコンテナに表示するには、<codeph>backgroundColor</codeph> プロパティまたは <codeph>backgroundImage</codeph> プロパティを設定します。 設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は 0 になります。ApplicationControlBar のデフォルト値は 5 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  境界ボックスの境界線の幅です。 <codeph>borderStyle</codeph> が <codeph>"solid"</codeph> に設定されている場合にのみ使用されます。
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  境界ボックスのスタイルです。 有効な値は <codeph>"none"</codeph>、<codeph>"solid"</codeph>、<codeph>"inset"</codeph> および <codeph>"outset"</codeph> です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>"inset"</codeph> になります。 ほとんどの Container のデフォルト値は <codeph>"none"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:TextInput" playerVersion="Flash9" type="Class">
<description>
  コンポーネントの境界線のスキンクラスです。 明示的にデフォルト値が設定されている場合を除き、mx.skins.halo.HaloBorder クラスがすべてのコンポーネントのデフォルト値になります。Panel コンテナのデフォルト値は mx.skins.halo.PanelSkin です。コンポーネントのデフォルト値を確認するには、default.css ファイルを参照してください。
 
  </description>
<default>mx.skins.halo.HaloBorder
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  境界ボックスの境界線のうち、どれが表示されるかを示します。表示する境界線をスペース区切りのストリングで指定します。 ストリングには、<codeph>"left"</codeph>、<codeph>"top"</codeph>、<codeph>"right"</codeph> および <codeph>"bottom"</codeph> を任意の順序で指定できます。 デフォルト値は <codeph>"left top right bottom"</codeph> です。この場合、4 辺すべてを表示します。 このスタイルは、borderStyle が <codeph>"solid"</codeph> の場合にのみ使用されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  境界線の色です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  <codeph>backgroundImage</codeph> で指定されているイメージを、元のサイズとは異なるサイズに拡大および縮小します。 <codeph>"100%"</codeph> に設定すると、コンポーネント全体に収まるサイズにイメージを伸縮します。 パーセント値で指定する場合は、パーセント記号（%）付きで指定する必要があります。 Application コンテナのデフォルトは <codeph>100%</codeph> です。 他のすべてのコンテナのデフォルト値は <codeph>auto</codeph> で、イメージの元のサイズが維持されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Object">
<description>
  コンポーネントの背景イメージです。 これには、絶対 URL、相対 URL、絶対クラス、または相対クラスを指定できます。 <codeph/><codeph/>背景色の前面に背景イメージを表示します。 デフォルト値は <codeph>undefined</codeph> で、「未定義」であることを意味します。 このスタイルと <codeph>backgroundColor</codeph> スタイルの両方が undefined である場合、コンポーネントは透明な背景を持ちます。
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。 この結果、コンテナの背景イメージが、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントが無効になっている場合のコンポーネント背景色です。 グローバルデフォルト値は <codeph>undefined</codeph> です。 List コントロールのデフォルト値は、<codeph>0xDDDDDD</codeph>（明るい灰色）です。 コンテナが無効になっている場合は、背景がグレー表示されます。このグレー表示の度合いは、<codeph>disabledOverlayAlpha</codeph> スタイルで制御します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントの背景色です。 <codeph>backgroundColor</codeph> と <codeph>backgroundImage</codeph> の両方を設定できます。 一部のコンポーネントには背景色がありません。 DataGrid コントロールでは、このスタイル設定は無視されます。 デフォルト値は <codeph>undefined</codeph> で、未定義であることを意味します。 このスタイルと <codeph>backgroundImage</codeph> スタイルの両方が <codeph>undefined</codeph> である場合、コンポーネントは透明な背景を持ちます。
 
  <p>Application コンテナの場合、このスタイルはアプリケーションのロード時の背景色と、アプリケーションの実行時の背景のグラデーションを指定します。 指定された色よりもわずかに濃い色とわずかに薄い色の間でグラデーションパターンが計算されます。</p>
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。この結果、コンテナの背景色が、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  <codeph>backgroundColor</codeph> プロパティで定義されている、<codeph>backgroundImage</codeph> スタイルで定義されているイメージまたは SWF ファイルの背景色のアルファレベルです。 有効な値の範囲は、0.0 ～ 1.0 です。ほとんどのコントロールではデフォルト値は 1.0 ですが、ToolTip コントロールの場合デフォルト値は 0.95 であり、Alert コントロールの場合デフォルト値は 0.9 です。
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TextInput&gt;</code> tag inherits the attributes
  of its superclass and adds the following attributes:</p>
 
  <pre>
  &lt;mx:TextInput
    <b>Properties</b>
    condenseWhite="false|true"
    data="undefined"
    displayAsPassword="false|true"
    editable="true|false"
    horizontalScrollPosition="0"
    htmlText=""
    imeMode="null"
    length="0"
    listData="null"
    maxChars="0"
    parentDrawsFocus="false"
    restrict="null"
    selectionBeginIndex="0"
    selectionEndIndex="0"
    text=""
    textHeight="0"
    textWidth="0"
    &nbsp;
    <b>Styles</b>
    backgroundAlpha="1.0"
    backgroundColor="undefined"
    backgroundImage="undefined"
    backgroundSize="auto"
    borderColor="0xAAB3B3"
    borderSides="left top right bottom"
    borderSkin="mx.skins.halo.HaloBorder"
    borderStyle="inset"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    dropShadowColor="0x000000"
    dropShadowEnabled="false"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    paddingLeft="0"
    paddingRight="0"
    shadowDirection="center"
    shadowDistance="2"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
    enter="<i>No default</i>"
    textInput="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>TextInput は、編集可能な単一行のテキストフィールドです。
  
  </apiTipText></apiTipTexts><apiBaseInterface>mx.core:ITextInput</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  TextInput コントロールは、必要に応じて編集可能な単一行のテキストフィールドです。 このコントロールの、HTML テキストを除くすべてのテキストには、同じスタイル設定が使用されていることが必要です。TextInput コントロールは、Flash Player と AIR の HTML レンダリング機能をサポートします。
 
  <p>TextInput コントロールにラベルはありませんが、Label コントロールを使用するか、Form コンテナにある FormItem コントロールで TextInput コントロールをネストすればラベルを追加できます。TextInput コントロールを FormItem コントロールで使用する場合は、値が必須であるかどうかを指定できます。TextInput コントロールには、入力済み状態、選択状態、無効状態、エラー状態など多くの状態があります。TextInput コントロールでは、フォーマット、検証、およびキーボードショートカットをサポートしています。また、change イベントおよび enter イベントを送出します。</p>
 
  <p>TextInput コントロールを無効にすると、そのコンテンツは、<codeph>disabledColor</codeph> スタイルで指定された色で表示されます。 テキストの編集を禁止するには、<codeph>editable</codeph> プロパティを <codeph>false</codeph> に設定します。 入力された文字の代わりにアスタリスクを表示して入力テキストを隠すには、<codeph>displayAsPassword</codeph> プロパティを <codeph>true</codeph> に設定します。</p>
 
  <p>TextInput コントロールは、RichTextEditor、NumericStepper、ComboBox control などの他のコントロールでサブコンポーネントとして使用します。 この結果、CSS タイプセレクターを使用して TextInput コントロールにスタイルプロパティを割り当てておくと、その TextInput が他のコントロールに表示されるときは、明示的にオーバーライドしない限り、この割り当てたスタイルが適用されます。</p>
 
  <p>TextInput コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>テキストのサイズ。デフォルトの最小サイズは、高さ 22 ピクセル、幅 160 ピクセルです。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>10000 × 10000 ピクセル</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextInputExample.mxml"><swfblock conref="examples/TextInputExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label</linktext></link><link href="mx.controls.xml#Text"><linktext>mx.controls.Text</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange</linktext></link></related-links><adobeApiEvent id="mx.controls:TextInput_flash.events.TextEvent.TEXT_INPUT_textInput"><apiName>textInput</apiName><shortdesc>
  ユーザーがコントロールに対してテキストの入力、削除またはペーストを実行したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.TEXT_INPUT</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがコントロールに対してテキストの入力、削除またはペーストを実行したときに送出されます。ユーザーが Delete キーまたは Backspace キーを押したときは、イベントは送出されません。
 
  <p><codeph>TextEvent.bubbles</codeph> プロパティのデフォルト値が <codeph>true</codeph> でも、このコントロールは <codeph>TextEvent.bubbles</codeph> プロパティを <codeph>false</codeph> に設定してイベントを送出します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_mx.events.FlexEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  ユーザーが Enter キーを押したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが Enter キーを押したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使う場合、<codeph>data</codeph> プロパティは表示するデータを保持します。 このイベントを待機して、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新できます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  TextInput コントロール内のテキストがユーザーの入力によって変化したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  TextInput コントロール内のテキストがユーザーの入力によって変化したときに送出されます。データバインディングまたは ActionScript コードを使用してテキストを変更した場合、このイベントは生成されません。
 
  <p><codeph>Event.bubbles</codeph> プロパティのデフォルト値が <codeph>true</codeph> でも、このコントロールは <codeph>Event.bubbles</codeph> プロパティを <codeph>false</codeph> に設定してイベントを送出します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TextInput:TextInput"><apiName>TextInput</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:TextInput:protected:createBorder"><apiName>createBorder</apiName><shortdesc>
      このコンポーネントの境界線を作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      このコンポーネントの境界線を作成します。境界線は通常 <codeph>borderStyle</codeph> スタイルと <codeph>borderSkin</codeph> スタイルによって決まります。境界線のプロパティを境界線のインスタンスに設定する必要があります。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:TextInput:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      コントロール内のテキスト行のテキストの位置と測定に関する情報を持つ TextLineMetrics オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>コントロール内の指定されたテキスト行のテキストの位置と測定に関する情報を含むオブジェクトです。
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>メトリックを取得する行の 0 から始まるインデックスです。 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      コントロール内のテキスト行のテキストの位置と測定に関する情報を持つ TextLineMetrics オブジェクトを返します。正しい数値を取得するには、コンポーネントを検証する必要があります。<codeph>text</codeph> または <codeph>htmlText</codeph> プロパティを設定し、その直後に <codeph>getLineMetrics()</codeph> を呼び出した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、<codeph>validateNow()</codeph> を呼び出します。 この動作は、値を直ちに更新する flash.text.TextField クラスの動作とは異なります。
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextInput:selectRange"><apiName>selectRange</apiName><shortdesc>
      パラメーターで指定された範囲のテキストを選択します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchorIndex</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>activeIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
      パラメーターで指定された範囲でテキストを選択します。 <codeph/>
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#TextInput/setSelection"><linktext/></link></related-links></apiOperation><apiOperation id="mx.controls:TextInput:setSelection"><apiName>setSelection</apiName><shortdesc>
      パラメーターで指定された範囲のテキストを選択します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginIndex</apiItemName><apiType value="int"/><apiDesc>選択範囲の先頭の文字の 0 ベースのインデックスです。つまり、先頭の文字が 0 で、2 番目の文字が 1 です（以下同様）。
     
      </apiDesc></apiParam><apiParam><apiItemName>endIndex</apiItemName><apiType value="int"/><apiDesc>選択範囲の最後の文字の<i>直後</i>の位置を示す 0 ベースのインデックスです。つまり、最後の文字の位置を示す 1 ベースインデックスと同じです。このパラメーターが 5 の場合、選択範囲の最後の文字は 5 番目の文字です。 TextInput コントロールがフォーカスを取得したとき、<codeph>selectionBeginIndex</codeph> プロパティと <codeph>selectionEndIndex</codeph> プロパティが両方とも設定されていれば選択範囲が表示されます。
     
      </apiDesc></apiParam><apiTipTexts><apiTipText>新しいテキストの選択範囲を設定します。
      
      </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
      パラメーターで指定された範囲でテキストを選択します。 コントロールがフォーカスを持っていない場合、選択範囲は、コントロールがフォーカスを取得するまではハイライト表示されません。また、コントロールのクリックによってフォーカスが取得された場合、それまでのすべての選択範囲は失われます。2 つのパラメーターが同一の場合、新しい選択範囲は挿入ポイントになります。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:TextInput:showBorder"><apiName>showBorder</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>visible</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
      
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:TextInput:protected:textField"><apiName>textField</apiName><shortdesc>
      この TextInput のテキストを表示するための内部 UITextField です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      この TextInput のテキストを表示するための内部 UITextField です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      HTML テキストの TextInput コントロールから余分な空白文字（スペースや改行など）を削除するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      HTML テキストの TextInput コントロールから余分な空白文字（スペースや改行など）を削除するかどうかを指定します。
     
      <p><codeph>condenseWhite</codeph> プロパティは、<codeph>htmlText</codeph> プロパティで設定されたテキストにのみ影響し、<codeph>text</codeph> プロパティで設定されたテキストには影響しません。 <codeph>text</codeph> プロパティでテキストを設定した場合、<codeph>condenseWhite</codeph> は無視されます。</p>
     
      <p><codeph>condenseWhite</codeph> プロパティを <codeph>true</codeph> に設定した場合は、テキストフィールド内で改行を指定するには <codeph>&lt;br></codeph> や <codeph>&lt;p></codeph> などの標準の HTML コマンドを使用する必要があります。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:data:get"><apiName>data</apiName><shortdesc>
      アイテムレンダラーまたはアイテムエディターでコンポーネントを使用するときに、そのコンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーまたはアイテムエディターでコンポーネントを使用するときに、そのコンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてコントロールを使用すると、アイテムの現在の値が、このコントロールの <codeph>text</codeph> プロパティに自動的に書き込まれます。</p>
     
      <p>MXML でこのプロパティを設定することはありません。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:displayAsPassword:get"><apiName>displayAsPassword</apiName><shortdesc>
      このコントロールがパスワードの入力で使用されるかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3197
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue><apiTipTexts><apiTipText>実際の文字の代わりに ' を表示するかどうかを指定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      このコントロールがパスワードの入力で使用されるかどうかを示します。 <codeph>true</codeph> の場合、入力されたテキストはフィールドには表示されません。代わりに、コントロールに入力された各テキストの文字は、文字「*」として表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:editable:get"><apiName>editable</apiName><shortdesc>
      このコントロール内のテキストをユーザーが編集できるかどうかを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3196
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue><apiTipTexts><apiTipText>コンポーネントが編集可能かどうかを指定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      このコントロール内のテキストをユーザーが編集できるかどうかを示します。 <codeph>true</codeph> の場合、ユーザーがテキストを編集できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
       
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      このコンポーネントのフォントコンテキストを提供するモジュールファクトリです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      このコンポーネントのフォントコンテキストを提供するモジュールファクトリです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:horizontalScrollPosition:get"><apiName>horizontalScrollPosition</apiName><shortdesc>
      現在表示されているコンテンツ領域の一番左にあるピクセルのピクセル位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3194
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0

      </apiDefaultValue><apiTipTexts><apiTipText>現在表示されている一番左の文字のピクセル位置です。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      現在表示されているコンテンツ領域の一番左にあるピクセルのピクセル位置です。（コンテンツ領域には、現在表示されている部分だけではなく、コントロールのすべての内容が含まれます）。 このプロパティは常に 0 に設定されており、<codeph>wordWrap</codeph> が <codeph>true</codeph> に設定されている場合は変更も無視されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      TextInput コントロールによって表示されるテキストを指定します。テキストのスタイルを表す HTML マークアップを含めて指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      TextInput コントロールによって表示されるテキストを指定します。テキストのスタイルを表す HTML マークアップを含めて指定します。 このプロパティで HTML テキストを指定する場合は、Flash TextField コントロールでサポートされている HTML タグのサブセットを使用できます。
     
      <p> このプロパティを設定すると、TextInput インスタンスの CSS スタイルが適用された後で HTML マークアップが適用されます。このプロパティを取得すると、HTML マークアップに CSS スタイルが適用されます。</p>
      
      <p>たとえば、このプロパティに<codeph>「This is an example of &lt;b>bold&lt;/b> markup」</codeph>というストリングを設定すると、TextInput には、通常どおりに CSS スタイルが適用された 「This is an example of <b>bold</b> markup」というテキストが表示されます。 また、<codeph>&lt;b></codeph> のマークアップによって、「bold」という単語がボールド体のフォントで表示されます。</p>
     
      <p>HTML マークアップでは、&lt; や > などの文字を使用します。これらの文字は、XML では特別な意味を持っています（MXML でも同じです）。 したがって、次のようなコードはコンパイルされません。</p>
      
      <pre>
      &lt;mx:TextInput htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>この問題を回避するには、3 つの方法があります。</p>
      
      <ul>
      
      <li>
      
      <p><codeph>htmlText</codeph> プロパティを、<codeph>initialize</codeph> ハンドラーとして呼び出される Action Script メソッドで次のように設定します。</p>
      
      <pre>
      &lt;mx:TextInput id="myTextInput" initialize="myTextInput_initialize()"/>
      </pre>
      
      <p><codeph>myTextInput_initialize</codeph> メソッドは、次のようにスクリプトの CDATA セクションに記述します。</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myTextInput_initialize():void {
          myTextInput.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>マークアップの読みやすさが保たれるので、これが最も単純な方法です。 TextInput に <codeph>id</codeph> を割り当てて、<codeph>initialize</codeph> ハンドラーでそのラベルを参照できるようにする必要があります。</p>
      
      </li>
      
      <li>
      
      <p>CDATA セクションを持つ子タグを使用して、<codeph>htmlText</codeph> プロパティを指定します。 XML の CDATA セクションには、&lt; や > などの文字が特別な意味を持たない文字データが含まれます。</p>
      
      <pre>
      &lt;mx:TextInput>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:TextInput/>
      </pre>
      
      <p><codeph>htmlText</codeph> プロパティは、<codeph>&lt;mx:TextInput></codeph> タグでは属性ではなく子タグとして記述する必要があります。これは、XML では属性の値に CDATA を使用できないためです。 この方法でもマークアップは読み取れますが、CDATA セクションが存在することで複雑になります。</p>
      
      </li>
      
      <li>
      
      <p>属性値内の HTML マークアップ文字 &lt; と > が書き込まれるところでは、<codeph>hmtlText</codeph> 属性を使用します。XML エンティティの <codeph>&amp;lt;</codeph> と <codeph>&amp;gt;</codeph> は使用しません。</p>
      
      <pre>
      &lt;mx:TextInput htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      HTML マークアップの読み取りがほとんど不可能になるので、この方法はお勧めしません。
      
      </li>
      
      </ul>
      
      <p><codeph>condenseWhite</codeph> プロパティが <codeph>true</codeph> の場合、<codeph>htmlText</codeph> プロパティが設定されていると、複数の空白文字は、HTML 対応ブラウザーと同じように圧縮されます。例えば、3 つの連続するスペースは、1 つのスペースとして表示されます。 <codeph>condenseWhite</codeph> の既定値は <codeph>false</codeph> なので、空白文字を圧縮するには <codeph>condenseWhite</codeph> を <codeph>true</codeph> に設定する必要があります。</p>
      
      <p><codeph>htmlText</codeph> プロパティの設定直後にそれを読み込んだ場合は、設定したものと同じストリングが取得されます。 ただし、LayoutManager の実行後には、値は変更され、CSS スタイルを含むマークアップが追加されます。</p>
      
      <p><codeph>htmlText</codeph> プロパティの設定は、様々な方法で <codeph>text</codeph> プロパティに影響を与えます。 <codeph>text</codeph> プロパティを、<codeph>htmlText</codeph> プロパティの設定直後に読み込むと、<codeph>null</codeph> が取得されます。これは、<codeph>text</codeph> が、新しい <codeph>htmlText</codeph> に対応するプロパティとして確定していないことを示しています。 ただし、LayoutManager を実行すると、<codeph>text</codeph> プロパティの値は、<codeph>htmlText</codeph> ストリングからすべての HTML マークアップが削除されたストリングに変更されます。つまり、TextInput に実際に表示される文字になります。</p>
       
      <p>逆に、<codeph>text</codeph> プロパティを設定しても、すでに設定されている <codeph>htmlText</codeph> はどれも無関係です。 <codeph>htmlText</codeph> プロパティの読み込みを <codeph>text</codeph> プロパティの設定直後に行うと、<codeph>null</codeph> が取得されます。これは、<codeph>htmlText</codeph>（新しい <codeph>text</codeph> に対応）がまだ決定されていないことを示します。 ただし、LayoutManager を実行すると、<codeph>htmlText</codeph> プロパティの値は、新しいテキストに CSS スタイルの HTML マークアップが追加された値に変更されます。</p>
     
      <p>LayoutManager を直ちに実行するには、TextInput に対して <codeph>validateNow()</codeph> メソッドを呼び出します。 たとえば、何らかの <codeph>htmlText</codeph> を設定した後、すぐに <codeph>validateNow()</codeph> メソッドを呼び出すと、対応する <codeph>text</codeph> が HTML マークアップを持たない状態でただちに取得できます。</p>
      
      <p>ActionScript の中に <codeph>text</codeph> プロパティと <codeph>htmlText</codeph> プロパティの両方を設定した場合は、最後に設定されたプロパティが有効になります。 MXML では両方設定しないでください。これは、MXML ではインスタンスのプロパティの取得を特定の順序で設定することが保証されていないためです。</p>
      
      <p><codeph>text</codeph> プロパティまたは <codeph>htmlText</codeph> プロパティをループの中に設定すると処理が速くなります。これは、テキストを実際に表示する TextField が、LayoutManager が実行されるまでは更新されないためです。</p>
     
      <p>このプロパティを <codeph>null</codeph> に設定しようとした場合は、代わりに空のストリングに設定されます。 このプロパティの値が一時的に <codeph>null</codeph> になった場合、<codeph>text</codeph> が設定されたばかりで、対応する <codeph>htmlText</codeph> がまだ認識されていないことを意味します。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      IME（入力メソッドエディター）のモードを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      IME（入力メソッドエディター）のモードを指定します。 IME を使用することによって、ユーザーは中国語、日本語、および韓国語のテキストを入力できます。Flex では、コントロールにフォーカスが置かれたときに、IME を指定されたモードに設定し、コントロールからフォーカスが離れたときに、元のモードに戻します。
     
      <p>flash.system.IMEConversionMode クラスで、このプロパティの有効な値の定数を定義します。IME を指定しない場合は、<codeph>null</codeph> を指定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:length:get"><apiName>length</apiName><shortdesc>
      TextArea に表示されるテキストの文字数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3192
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>0
      </apiDefaultValue><apiTipTexts><apiTipText>TextInput 内の文字数です。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      TextArea に表示されるテキストの文字数です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの listData プロパティが、リストコントロールからの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの <codeph>listData</codeph> プロパティが、リストコントロールからの該当するデータで初期化されます。 その後、コンポーネントでこの <codeph>listData</codeph> プロパティを使用して、ドロップインアイテムレンダラーまたはドロップインアイテムエディターの <codeph>data</codeph> プロパティを初期化できます。
     
      <p>MXML および ActionScript でこのプロパティを設定することはありません。このコンポーネントがドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用されるときに、Flex でプロパティが設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      テキストフィールドにユーザーが入力できる最大文字数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3191
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiTipTexts><apiTipText>TextInput に入力できる最大の文字数です。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      テキストフィールドにユーザーが入力できる最大文字数です。 コントロールの <codeph>text</codeph> プロパティまたは <codeph>htmlText</codeph> プロパティの設定で指定するテキストの長さが、このプロパティによって制限されることはありません。
     
      <p>デフォルト値は 0 で、これは制限がないことを意味する特殊なケースです。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:parentDrawsFocus:get"><apiName>parentDrawsFocus</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:restrict:get"><apiName>restrict</apiName><shortdesc>
      ユーザーがコントロールに入力できる文字のセットを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3193
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      </apiDefaultValue><apiTipTexts><apiTipText>TextInput に入力できる文字のセットです。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      ユーザーがコントロールに入力できる文字のセットを示します。 <codeph>restrict</codeph> プロパティの値が <codeph>null</codeph> である場合は、任意の文字を入力できます。<codeph>restrict</codeph> プロパティの値が空のストリングである場合は、いずれの文字も入力できません。このプロパティはユーザーの操作のみを制限します。スクリプトでテキストフィールドに入力するテキストは制限しません。 <codeph>restrict</codeph> プロパティの値が文字のストリングである場合は、そのストリング内の文字のみをテキストフィールドに入力できます。
     
      <p>ストリングは左から右へスキャンされます。 ハイフン（-）文字を使用して、範囲を指定できます。ストリングがキャレット（^）文字で始まる場合、そのストリングに含まれる文字を除いて、すべての文字を入力できます。ストリングがキャレット（^）文字以外で始まる場合は、そのストリングに含まれる文字のみを入力できます。</p>
     
      <p>一部の文字は <codeph>restrict</codeph> プロパティで使用すると特殊な意味を持つため、リテラル文字の -、^ および \ を指定するには、円記号を使用する必要があります。 <codeph>restrict</codeph> プロパティを MXML タグで属性として使用する場合は、\^\-\\ のように、単一の円記号を使います。 <codeph>restrict</codeph> を ActionScript 式に設定する場合、\\^\\-\\\ のように、円記号を 2 つ続けて指定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:selectable:get"><apiName>selectable</apiName><shortdesc>
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:selectionBeginIndex:get"><apiName>selectionBeginIndex</apiName><shortdesc>
      現在の選択範囲の最初の文字を示す、0 から始まるインデックス値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>選択範囲の最初の文字を示す、0 から始まるインデックス値です。
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      現在の選択範囲の最初の文字を示す 0 から始まるインデックス値です。たとえば、最初の文字が 0、次の文字が 1 と続きます（以下同様）。コントロールがフォーカスを取得したとき、<codeph>selectionBeginIndex</codeph> プロパティと <codeph>selectionEndIndex</codeph> プロパティが両方とも設定されている場合は選択範囲が表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:selectionEndIndex:get"><apiName>selectionEndIndex</apiName><shortdesc>
      現在の選択範囲の最後にある文字の直後の位置を 0 とするインデックスです。つまり、最後の文字の位置を 1 とするインデックスと同じです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>選択範囲の最後の文字を示す 0 ベースのインデックス値です。
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      <i/>現在の選択範囲の最後の文字の直後の位置を示す 0 ベースのインデックスです。つまり、最後の文字の位置を示す 1 ベースインデックスと同じです。 たとえば、選択範囲の最後の文字が 5 番目の文字である場合、このパラメーターは 5 になります。 コントロールがフォーカスを取得したとき、<codeph>selectionBeginIndex</codeph> プロパティと <codeph>selectionEndIndex</codeph> プロパティが両方とも設定されている場合は選択範囲が表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:text:get"><apiName>text</apiName><shortdesc>
      コントロールに表示されるプレーンテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3190
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>TextInput のコンテンツを取得または設定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      コントロールに表示されるプレーンテキストです。その外観は、この Label コントロールの CSS スタイルによって決定されます。
      
      <p>テキストストリング内の HTML タグはすべて無視され、ストリングに入力したとおりに表示されます。 HTML タグを使用してフォーマットされたテキストを表示するには、<codeph>htmlText</codeph> プロパティを使用します。 <codeph>htmlText</codeph> プロパティを設定している場合は、その HTML で、設定されたテキストが置き換えられ、<codeph>text</codeph> プロパティは、HTML テキストから HTML タグを除いたプレーンテキストを返します。 詳細については、「<codeph>htmlText</codeph> プロパティ」を参照してください。</p>
     
      <p>特殊文字である左山括弧（&lt;）、右山括弧（>）、アンパサンド（&amp;）をテキストに含める場合は、CDATA タグでテキストストリングを囲む必要があります。 特殊文字の代わりに、<codeph>&amp;lt;</codeph> などの HTML 文字エンティティを使用できます。</p>
     
      <p>このプロパティを <codeph>null</codeph> に設定しようとした場合は、代わりに空のストリングに設定されます。 <codeph>text</codeph> プロパティには、値 <codeph>null</codeph> を一時的に設定できます。これは、<codeph>htmlText</codeph> が最近設定され、対応する <codeph>text</codeph> 値がまだ決定されていないことを示します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      テキストの高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      テキストの高さです。
     
      <p><codeph>textHeight</codeph> プロパティの値は、コンポーネントが検証された後でのみ正しい値になります。 <codeph>text</codeph> を設定し、その直後に <codeph>textHeight</codeph> を取得した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、値を取得する前に <codeph>validateNow()</codeph> メソッドを呼び出します。 この動作は、値を直ちに更新する flash.text.TextField コントロールの動作とは異なります。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      テキストの幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      テキストの幅です。
     
      <p><codeph>textWidth</codeph> プロパティの値は、コンポーネントが検証された後でのみ正しい値になります。 <codeph>text</codeph> を設定し、その直後に <codeph>textWidth</codeph> を取得した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、値を取得する前に <codeph>validateNow()</codeph> メソッドを呼び出します。 この動作は、値を直ちに更新する flash.text.TextField コントロールの動作とは異なります。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:NumericStepper"><apiName>NumericStepper</apiName><shortdesc>
  NumericStepper コントロールを使用すると、一定の間隔で増減する数値をユーザーに選択させることができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:NumericStepper" replacement="spark.components.NumericStepper" since="4.0">
	</Alternative><styles><style inherit="no" name="upArrowUpSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が有効で、マウスポインターが矢印上にないときに、上矢印のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowOverSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が有効で、マウスポインターが矢印上にあるときに、上矢印のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowDownSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が有効で、ユーザーがマウスボタンを矢印上で押しているときに、上矢印のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowDisabledSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が無効のときに上矢印のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  上矢印のデフォルトのスキンとして使用するクラスの名前です。
  
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textInputClass" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="Class">
<description>
  
 
  <p/>
 
  </description>
<default>mx.controls.TextInput
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのシンボルのカラーです。CheckBox のチェックマークや ScrollBar ボタンの矢印などがあります。
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールのハイライトの塗りつぶしで使用するアルファ値です。
 
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントにフォーカスがある場合のフォーカスリングのカラーです。
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowUpSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が有効で、マウスポインターが矢印上にないときに、下矢印のスキンとして使用するクラスの名前です。 デフォルト値はありません。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowOverSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が有効で、マウスポインターが矢印上にあるときに、下矢印のスキンとして使用するクラスの名前です。
  
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowDownSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が有効で、ユーザーがマウスボタンを矢印上で押しているときに、下矢印のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowDisabledSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  矢印が無効のときに下矢印のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  下矢印のデフォルトのスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのコンテンツ領域のカラーです。
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右境界線からコンテンツ領域の右端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x111111</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  ドロップシャドウの幅です。このプロパティを負の値に設定すると、シャドウはコンポーネントの上に表示されます。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  ドロップシャドウの方向です。 有効な値は <codeph>"left"</codeph>、<codeph>"center"</codeph> および <codeph>"right"</codeph> です。
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  ドロップシャドウの色です。
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b/><codeph/>設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 このスタイルは <codeph>borderStyle="solid"</codeph> と共に使用します。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b>メモ：</b>ドロップシャドウをコンテナに表示するには、<codeph>backgroundColor</codeph> プロパティまたは <codeph>backgroundImage</codeph> プロパティを設定します。 設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は 0 になります。ApplicationControlBar のデフォルト値は 5 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  境界ボックスの境界線の幅です。 <codeph>borderStyle</codeph> が <codeph>"solid"</codeph> に設定されている場合にのみ使用されます。
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  境界ボックスのスタイルです。 有効な値は <codeph>"none"</codeph>、<codeph>"solid"</codeph>、<codeph>"inset"</codeph> および <codeph>"outset"</codeph> です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>"inset"</codeph> になります。 ほとんどの Container のデフォルト値は <codeph>"none"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  コンポーネントの境界線のスキンクラスです。 明示的にデフォルト値が設定されている場合を除き、mx.skins.halo.HaloBorder クラスがすべてのコンポーネントのデフォルト値になります。Panel コンテナのデフォルト値は mx.skins.halo.PanelSkin です。コンポーネントのデフォルト値を確認するには、default.css ファイルを参照してください。
 
  </description>
<default>mx.skins.halo.HaloBorder
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  境界ボックスの境界線のうち、どれが表示されるかを示します。表示する境界線をスペース区切りのストリングで指定します。 ストリングには、<codeph>"left"</codeph>、<codeph>"top"</codeph>、<codeph>"right"</codeph> および <codeph>"bottom"</codeph> を任意の順序で指定できます。 デフォルト値は <codeph>"left top right bottom"</codeph> です。この場合、4 辺すべてを表示します。 このスタイルは、borderStyle が <codeph>"solid"</codeph> の場合にのみ使用されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  境界線の色です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  <codeph>backgroundImage</codeph> で指定されているイメージを、元のサイズとは異なるサイズに拡大および縮小します。 <codeph>"100%"</codeph> に設定すると、コンポーネント全体に収まるサイズにイメージを伸縮します。 パーセント値で指定する場合は、パーセント記号（%）付きで指定する必要があります。 Application コンテナのデフォルトは <codeph>100%</codeph> です。 他のすべてのコンテナのデフォルト値は <codeph>auto</codeph> で、イメージの元のサイズが維持されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Object">
<description>
  コンポーネントの背景イメージです。 これには、絶対 URL、相対 URL、絶対クラス、または相対クラスを指定できます。 <codeph/><codeph/>背景色の前面に背景イメージを表示します。 デフォルト値は <codeph>undefined</codeph> で、「未定義」であることを意味します。 このスタイルと <codeph>backgroundColor</codeph> スタイルの両方が undefined である場合、コンポーネントは透明な背景を持ちます。
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。 この結果、コンテナの背景イメージが、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントが無効になっている場合のコンポーネント背景色です。 グローバルデフォルト値は <codeph>undefined</codeph> です。 List コントロールのデフォルト値は、<codeph>0xDDDDDD</codeph>（明るい灰色）です。 コンテナが無効になっている場合は、背景がグレー表示されます。このグレー表示の度合いは、<codeph>disabledOverlayAlpha</codeph> スタイルで制御します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントの背景色です。 <codeph>backgroundColor</codeph> と <codeph>backgroundImage</codeph> の両方を設定できます。 一部のコンポーネントには背景色がありません。 DataGrid コントロールでは、このスタイル設定は無視されます。 デフォルト値は <codeph>undefined</codeph> で、未定義であることを意味します。 このスタイルと <codeph>backgroundImage</codeph> スタイルの両方が <codeph>undefined</codeph> である場合、コンポーネントは透明な背景を持ちます。
 
  <p>Application コンテナの場合、このスタイルはアプリケーションのロード時の背景色と、アプリケーションの実行時の背景のグラデーションを指定します。 指定された色よりもわずかに濃い色とわずかに薄い色の間でグラデーションパターンが計算されます。</p>
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。この結果、コンテナの背景色が、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  <codeph>backgroundColor</codeph> プロパティで定義されている、<codeph>backgroundImage</codeph> スタイルで定義されているイメージまたは SWF ファイルの背景色のアルファレベルです。 有効な値の範囲は、0.0 ～ 1.0 です。ほとんどのコントロールではデフォルト値は 1.0 ですが、ToolTip コントロールの場合デフォルト値は 0.95 であり、Alert コントロールの場合デフォルト値は 0.9 です。
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  The <code>&lt;mx:NumericStepper&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:
 
  <pre>
  &lt;mx:NumericStepper
    <strong>Properties</strong>
    imeMode="null"
    maxChars="10"
    maximum="10"
    minimum="0"
    stepSize="1"
    value="0"
  
    <strong>Styles</strong>
    backgroundAlpha="1.0"
    backgroundColor="undefined"
    backgroundImage="undefined"
    backgroundSize="auto"
    borderColor="0xAAB3B3"
    borderSides="left top right bottom"
    borderSkin="HaloBorder"
    borderStyle="inset"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    downArrowDisabledSkin="NumericStepperDownSkin"
    downArrowDownSkin="NumericStepperDownSkin"
    downArrowOverSkin="NumericStepperDownSkin"
    downArrowUpSkin="NumericStepperDownSkin"
    dropShadowEnabled="false"
    dropShadowColor="0x000000"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x111111"
    leading="2"
    paddingLeft="0"
    paddingRight="0"
    shadowDirection="center"
    shadowDistance="2"
    textAlign="left|center|right"
    textDecoration="none|underline"
    textIndent="0"
    upArrowDisabledSkin="NumericStepperUpSkin"
    upArrowDownSkin="NumericStepperUpSkin"
    upArrowOverSkin="NumericStepperUpSkin"
    upArrowUpSkin="NumericStepperUpSkin"
  
    <strong>Events</strong>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  NumericStepper コントロールを使用すると、一定の間隔で増減する数値をユーザーに選択させることができます。 NumericStepper コントロールは、単一行のテキスト入力フィールドと、使用できる値を表示するための 2 つの矢印ボタンから構成されます。上矢印キーと下矢印キーを使用して値を表示することもできます。
 
  <p>NumericStepper コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>コントロールで使用される最大桁数を表示できる幅です。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>テキストのサイズに基づいて決定されます。</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>未定義</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="NumericStepperExample.mxml"><swfblock conref="examples/NumericStepperExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:NumericStepper_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使う場合、<codeph>data</codeph> プロパティは表示するデータを保持します。 このイベントを受け取って、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新することができます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:NumericStepper_mx.events.NumericStepperEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  ユーザー操作の結果として NumericStepper コントロールの値が変化したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.NumericStepperEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.NumericStepperEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザー操作の結果として NumericStepper コントロールの値が変化したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:NumericStepper:NumericStepper"><apiName>NumericStepper</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:NumericStepper:data:get"><apiName>data</apiName><shortdesc>
      アイテムレンダラーまたはアイテムエディターで data プロパティを使用すると、コンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーまたはアイテムエディターで <codeph>data</codeph> プロパティを使用すると、コンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてコントロールを使用すると、アイテムの現在の値が、このコントロールの <codeph>value</codeph> プロパティに自動的に書き込まれます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:protected:downArrowStyleFilters:get"><apiName>downArrowStyleFilters</apiName><shortdesc>
      NumericStepper から下矢印に渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      NumericStepper から下矢印に渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      IME（Input Method Editor）のモードを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      IME（Input Method Editor）のモードを指定します。 IME を使用することによって、ユーザーは中国語、日本語、および韓国語のテキストを入力できます。Flex では、コントロールにフォーカスが置かれたときに、IME を指定されたモードに設定し、コントロールからフォーカスが離れたときに、元のモードに戻します。
     
     <p>flash.system.IMEConversionMode クラスで、このプロパティの有効な値の定数を定義します。IME を指定しない場合は、<codeph>null</codeph> を指定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:protected:inputFieldStyleFilters:get"><apiName>inputFieldStyleFilters</apiName><shortdesc>
      NumericStepper から入力フィールドに渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      NumericStepper から入力フィールドに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの listData プロパティが、List コントロールからの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてこのコンポーネントを使用すると、その <codeph>listData</codeph> プロパティが、List コントロールの該当するデータで初期化されます。 その後、このコンポーネントでは、この <codeph>listData</codeph> プロパティを使用して、ドロップインアイテムレンダラーまたはドロップインアイテムエディターの <codeph>data</codeph> プロパティを初期化できます。
     
      <p>MXML および ActionScript でこのプロパティを設定することはありません。このコンポーネントがドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用されるときに、Flex でプロパティが設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      フィールドに入力できる最大の文字数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      フィールドに入力できる最大の文字数です。 値が 0 の場合は、文字をいくつでも入力できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:maximum:get"><apiName>maximum</apiName><shortdesc>
      NumericStepper の最大値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>10
      
      </apiDefaultValue></apiValueDef><apiDesc>
      NumericStepper の最大値です。 最大値には、小数値を含むあらゆる数値を指定できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:minimum:get"><apiName>minimum</apiName><shortdesc>
      NumericStepper の最小値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      NumericStepper の最小値です。 最小値には、小数値を含むあらゆる数値を指定できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:nextValue:get"><apiName>nextValue</apiName><shortdesc>
      value プロパティの現在値の 1 つ後の値です。maximum プロパティの値より大きくなることはありません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      <codeph>value</codeph> プロパティの現在値の 1 つ後の値です。<codeph>maximum</codeph> プロパティの値より大きくなることはありません。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:previousValue:get"><apiName>previousValue</apiName><shortdesc>
      value プロパティの現在値の 1 つ前の値です。maximum プロパティの値より小さくなることはありません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      <codeph>value</codeph> プロパティの現在値の 1 つ前の値です。<codeph>maximum</codeph> プロパティの値より小さくなることはありません。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:stepSize:get"><apiName>stepSize</apiName><shortdesc>
      値の変化量を示す単位です（0 を除く）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      値の変化量を示す単位です（0 を除く）。 <codeph>value</codeph> プロパティの値は、常にこの数値の倍数です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:protected:upArrowStyleFilters:get"><apiName>upArrowStyleFilters</apiName><shortdesc>
      NumericStepper から上矢印に渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      NumericStepper から上矢印に渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:value:get"><apiName>value</apiName><shortdesc>
      NumericStepper コントロールのテキスト領域に表示される現在の値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      NumericStepper コントロールのテキスト領域に表示される現在の値です。 ユーザーが、<codeph>stepSize</codeph> プロパティの値の倍数でない数値を入力した場合や、<codeph>maximum</codeph> プロパティと <codeph>minimum</codeph> プロパティの範囲の外の数値を入力した場合は、自動的に最も近い有効な値に設定されます。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ToolTip"><apiName>ToolTip</apiName><shortdesc>
  ToolTip コントロールを使用すると、役に立つ情報をユーザーに提供することができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ToolTip" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ToolTip" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ToolTip" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ToolTip" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ToolTip" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右境界線からコンテンツ領域の右端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Number">
<description>
  ドロップシャドウの幅です。このプロパティを負の値に設定すると、シャドウはコンポーネントの上に表示されます。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  ドロップシャドウの方向です。 有効な値は <codeph>"left"</codeph>、<codeph>"center"</codeph> および <codeph>"right"</codeph> です。
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="uint">
<description>
  ドロップシャドウの色です。
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b/><codeph/>設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 このスタイルは <codeph>borderStyle="solid"</codeph> と共に使用します。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b>メモ：</b>ドロップシャドウをコンテナに表示するには、<codeph>backgroundColor</codeph> プロパティまたは <codeph>backgroundImage</codeph> プロパティを設定します。 設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は 0 になります。ApplicationControlBar のデフォルト値は 5 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Number">
<description>
  境界ボックスの境界線の幅です。 <codeph>borderStyle</codeph> が <codeph>"solid"</codeph> に設定されている場合にのみ使用されます。
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  境界ボックスのスタイルです。 有効な値は <codeph>"none"</codeph>、<codeph>"solid"</codeph>、<codeph>"inset"</codeph> および <codeph>"outset"</codeph> です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>"inset"</codeph> になります。 ほとんどの Container のデフォルト値は <codeph>"none"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Class">
<description>
  コンポーネントの境界線のスキンクラスです。 明示的にデフォルト値が設定されている場合を除き、mx.skins.halo.HaloBorder クラスがすべてのコンポーネントのデフォルト値になります。Panel コンテナのデフォルト値は mx.skins.halo.PanelSkin です。コンポーネントのデフォルト値を確認するには、default.css ファイルを参照してください。
 
  </description>
<default>mx.skins.halo.HaloBorder
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  境界ボックスの境界線のうち、どれが表示されるかを示します。表示する境界線をスペース区切りのストリングで指定します。 ストリングには、<codeph>"left"</codeph>、<codeph>"top"</codeph>、<codeph>"right"</codeph> および <codeph>"bottom"</codeph> を任意の順序で指定できます。 デフォルト値は <codeph>"left top right bottom"</codeph> です。この場合、4 辺すべてを表示します。 このスタイルは、borderStyle が <codeph>"solid"</codeph> の場合にのみ使用されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  境界線の色です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  <codeph>backgroundImage</codeph> で指定されているイメージを、元のサイズとは異なるサイズに拡大および縮小します。 <codeph>"100%"</codeph> に設定すると、コンポーネント全体に収まるサイズにイメージを伸縮します。 パーセント値で指定する場合は、パーセント記号（%）付きで指定する必要があります。 Application コンテナのデフォルトは <codeph>100%</codeph> です。 他のすべてのコンテナのデフォルト値は <codeph>auto</codeph> で、イメージの元のサイズが維持されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Object">
<description>
  コンポーネントの背景イメージです。 これには、絶対 URL、相対 URL、絶対クラス、または相対クラスを指定できます。 <codeph/><codeph/>背景色の前面に背景イメージを表示します。 デフォルト値は <codeph>undefined</codeph> で、「未定義」であることを意味します。 このスタイルと <codeph>backgroundColor</codeph> スタイルの両方が undefined である場合、コンポーネントは透明な背景を持ちます。
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。 この結果、コンテナの背景イメージが、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントが無効になっている場合のコンポーネント背景色です。 グローバルデフォルト値は <codeph>undefined</codeph> です。 List コントロールのデフォルト値は、<codeph>0xDDDDDD</codeph>（明るい灰色）です。 コンテナが無効になっている場合は、背景がグレー表示されます。このグレー表示の度合いは、<codeph>disabledOverlayAlpha</codeph> スタイルで制御します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントの背景色です。 <codeph>backgroundColor</codeph> と <codeph>backgroundImage</codeph> の両方を設定できます。 一部のコンポーネントには背景色がありません。 DataGrid コントロールでは、このスタイル設定は無視されます。 デフォルト値は <codeph>undefined</codeph> で、未定義であることを意味します。 このスタイルと <codeph>backgroundImage</codeph> スタイルの両方が <codeph>undefined</codeph> である場合、コンポーネントは透明な背景を持ちます。
 
  <p>Application コンテナの場合、このスタイルはアプリケーションのロード時の背景色と、アプリケーションの実行時の背景のグラデーションを指定します。 指定された色よりもわずかに濃い色とわずかに薄い色の間でグラデーションパターンが計算されます。</p>
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。この結果、コンテナの背景色が、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Number">
<description>
  <codeph>backgroundColor</codeph> プロパティで定義されている、<codeph>backgroundImage</codeph> スタイルで定義されているイメージまたは SWF ファイルの背景色のアルファレベルです。 有効な値の範囲は、0.0 ～ 1.0 です。ほとんどのコントロールではデフォルト値は 1.0 ですが、ToolTip コントロールの場合デフォルト値は 0.95 であり、Alert コントロールの場合デフォルト値は 0.9 です。
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IToolTip</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  ToolTip コントロールを使用すると、役に立つ情報をユーザーに提供することができます。 ユーザーがグラフィックコンポーネントにマウスポインターを合わせると、ToolTip コントロールがポップアップ表示され、コンポーネントに関する情報を伝えるテキストが表示されます。 ToolTip はユーザーがアプリケーションを利用する際のガイドにできる他、ToolTip コントロールをカスタマイズして追加の機能を提供することもできます。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#ToolTipManager"><linktext>mx.managers.ToolTipManager</linktext></link><link href="mx.styles.xml#CSSStyleDeclaration"><linktext>mx.styles.CSSStyleDeclaration</linktext></link></related-links><apiConstructor id="mx.controls:ToolTip:ToolTip"><apiName>ToolTip</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:ToolTip:maxWidth"><apiName>maxWidth</apiName><shortdesc>
      新しい ToolTip コントロールの最大幅をピクセル単位で指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>300</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      新しい ToolTip コントロールの最大幅をピクセル単位で指定します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToolTip:protected:textField"><apiName>textField</apiName><shortdesc>
      この ToolTip のテキストを表示するための内部 UITextField です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      この ToolTip のテキストを表示するための内部 UITextField です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToolTip:text:get"><apiName>text</apiName><shortdesc>
      ツールヒントで表示されるテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ツールヒントで表示されるテキストです。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:MenuBar"><apiName>MenuBar</apiName><shortdesc>
  MenuBar コントロールは、1 つ以上のメニューを含む水平な最上位メニューバーを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description conref="mx.controls.Menu#style:selectionColor">
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description conref="mx.controls.Menu#style:rollOverColor">
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="menuStyleName" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  この MenuBar コントロールによって表示される Menu コントロールのスタイルを指定する CSSStyleDeclaration の名前です。デフォルトでは、Menu コントロールは MenuBar コントロールの継承可能なスタイルを使用します。 
  
  <p>このクラスセレクターを使用すると、<codeph>backgroundAlpha</codeph>、<codeph>backgroundColor</codeph> など、Menu クラスのすべてのスタイルプロパティの値を設定できます。</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemDownSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  MenuBar アイテムが選択されたときのスキンです。 
 
  </description>
<default>mx.skins.halo.ActivatorSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemOverSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  フォーカスが MenuBar アイテムの上にあるときのスキンです。 
 
  </description>
<default>mx.skins.halo.ActivatorSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemUpSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  MenuBar アイテムが選択されていないときのスキンです。
 
  </description>
<default>mx.skins.halo.ActivatorSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  MenuBar アイテムのデフォルトのスキンです。
 
  </description>
<default>mx.skins.halo.ActivatorSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  MenuBar コントロールの背景のスキンです。 
   
  </description>
<default>mx.skins.halo.MenuBarBackgroundSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="menuStyleName" deprecatedSince="3.0" format="Color" inherit="no" name="backgroundColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description>
  コンポーネントの背景色です。 デフォルト値は <codeph>undefined</codeph> で未定義です。これは、コンポーネントの背景が透明であることを意味します。
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。 この結果、コンテナの背景色が、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  </p>
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>>
  </pre>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="menuStyleName" deprecatedSince="3.0" inherit="no" name="backgroundAlpha" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  <codeph>backgroundColor</codeph> プロパティで定義されている色のアルファレベルです。 有効な値の範囲は 0.0 ～ 1.0 です。
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:MenuBar" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:MenuBar" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:MenuBar" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールのハイライトの塗りつぶしで使用するアルファ透明度値です。最初の値はハイライトの上端の透明度を指定し、2 番目の値はハイライトの下端の透明度を指定します。ハイライトは、スキンの上半分に適用されます。
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の着色に使用されるカラーです。フラットな外観のコントロールを作成するには、どちらの値にも同じカラーを渡します。
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の塗りつぶしで使用するアルファ値です。[1, 1] を使うと、コントロールの背景が不透明になります。
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。 このスタイルは、Alert、Button、ComboBox、LinkButton、MenuBar、NumericStepper、Panel、ScrollBar、Tab、TitleWindow の各コンポーネントおよび <codeph>borderStyle</codeph> プロパティを <codeph>"solid"</codeph> に設定できるすべてのコンポーネントによってサポートされます。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされない場合、デフォルト値は <codeph>0</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  境界線の色です。 このスタイルは、Button、CheckBox、ComboBox、MenuBar、NumericStepper、ProgressBar、RadioButton、ScrollBar、Slider の各コントロールおよび <codeph>borderStyle</codeph> スタイルをサポートするすべてのコンポーネントによってサポートされます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:MenuBar&gt</code> tag inherits all of the tag attributes of its superclass, and
  adds the following tag attributes:
  </p>
  
  <pre>
  &lt;mx:MenuBar
    <b>Properties</b>
    dataDescriptor="<i>mx.controls.treeClasses.DefaultDataDescriptor</i>"
    dataProvider="<i>undefined</i>"
    iconField="icon"
    labelField="label"
    labelFunction="<i>undefined</i>"
    menuBarItemRenderer="<i>mx.controls.menuClasses.MenuBarItem</i>"
    menuBarItems="[]"
    menus="[]"
    selectedIndex="-1"
    showRoot="true"
  
    <b>Styles</b>
    backgroundSkin="mx.skins.halo.MenuBarBackgroundSkin"
    borderColor="0xAAB3B3"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    itemDownSkin="mx.skins.halo.ActivatorSkin"
    itemOverSkin="mx.skins.halo.ActivatorSkin"
    itemUpSkin="mx.skins.halo.ActivatorSkin"
    leading="2"
    menuStyleName="<i>No default</i>"
    rollOverColor="0xB2E1FF"
    selectionColor="0x7FCEFF"
    textAlign="left"
    textDecoration="none"
    textIndent="0"
  
    <b>Events</b>
    itemClick="<i>No default"</i>
    itemRollOut="<i>No default"</i>
    itemRollOver="<i>No default"</i>
    menuHide="<i>No default"</i>
    menuShow="<i>No default"</i>
  /&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  MenuBar コントロールは、1 つ以上のメニューを含む水平な最上位メニューバーを定義します。最上位メニューアイテムをクリックすると、Menu コントロールのインスタンスであるポップアップサブメニューが開きます。
 
  <p>MenuBar コントロールの最上位メニューバーは、通常は常に表示されています。これはポップアップメニューとして使用することを目的としていません。個々のサブメニューは、ユーザーがマウスまたはキーボードを使用して選択したときにポップアップします。開いたサブメニューは、メニューアイテムが選択されたとき、またはメニューの外側がクリックされたときに消えます。</p>
 
  <p>MenuBar コントロールのデータプロバイダーで使用できる属性の詳細および例については、Menu コントロールを参照してください。</p>
 
  <p>MenuBar コントロールには、次のようなサイズ設定の特性があります。
  </p>
     <adobetable class="innertable">
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>幅はメニューテキストによって決まります。幅の最小値は 27 ピクセルです。高さのデフォルト値は 22 ピクセルです。</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="MenuBarExample.mxml"><swfblock conref="examples/MenuBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link><link href="mx.controls.menuClasses.xml#IMenuBarItemRenderer"><linktext>mx.controls.menuClasses.IMenuBarItemRenderer</linktext></link><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link><link href="mx.controls.menuClasses.xml#IMenuDataDescriptor"><linktext>mx.controls.menuClasses.IMenuDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link></related-links><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  メニューアイテム上にマウスポインターが置かれたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  メニューアイテム上にマウスポインターが置かれたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  カーソルがメニューアイテムから離れるときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  カーソルがメニューアイテムから離れるときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.MENU_SHOW_menuShow"><apiName>menuShow</apiName><shortdesc>
  ポップアップサブメニューが開かれたとき、またはドロップダウンメニューを持たないメニューバーアイテムをユーザーが選択したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ポップアップサブメニューが開かれたとき、またはドロップダウンメニューを持たないメニューバーアイテムをユーザーが選択したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.MENU_HIDE_menuHide"><apiName>menuHide</apiName><shortdesc>
  ポップアップサブメニューが閉じたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ポップアップサブメニューが閉じたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  ユーザーがポップアップサブメニューからアイテムを選択したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがポップアップサブメニューからアイテムを選択したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  ユーザー操作の結果として選択が変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザー操作の結果として選択が変更されたときに送出されます。また、このイベントはユーザーがポップアップサブメニューで現在のメニュー選択を変更したときにも送出されます。 メニューバーでイベントが発生するとき、MenuEvent オブジェクトの <codeph>menu</codeph> プロパティは <codeph>null</codeph> です。 ポップアップサブメニューでイベントが発生するとき、<codeph>menu</codeph> プロパティにはポップアップサブメニューである Menu オブジェクトへの参照が含まれます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:MenuBar:MenuBar"><apiName>MenuBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:MenuBar:getMenuAt"><apiName>getMenuAt</apiName><shortdesc>
      指定した MenuBar アイテムインデックスの Menu オブジェクトへの参照を返します。0 は、左端の MenuBar アイテムインデックスの位置にある Menu です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定されたインデックス位置にある Menu への参照です。
      
      </apiDesc><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>返される Menu インスタンスのインデックスです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      指定した MenuBar アイテムインデックスの Menu オブジェクトへの参照を返します。0 は、左端の MenuBar アイテムインデックスの位置にある Menu です。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:itemToIcon"><apiName>itemToIcon</apiName><shortdesc>
      データアイテムにクラスのアイコンがあれば、iconField プロパティに基づいてそのクラスを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>クラス参照としての、アイテム用のアイコンです。アイコンがない場合は <codeph>null</codeph> です。
      
      </apiDesc><apiType value="Class"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>アイコンクラスの抽出元であるアイテムです。
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      データアイテムにクラスのアイコンがあれば、<codeph>iconField</codeph> プロパティに基づいてそのクラスを返します。アイテム内のフィールドは、ストリングがアプリケーション内のクラスの名前を表している限り、そのストリングを返すことができます。アイテム内のフィールドは、アイコンのクラスを保持するドキュメント内の変数の名前を表すストリングにすることもできます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:itemToLabel"><apiName>itemToLabel</apiName><shortdesc conref="mx.controls.listClasses.ListBase#itemToLabel()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>データに基づいて表示されるストリングです。
      
      </apiDesc></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>レンダリングされるオブジェクトです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.listClasses.ListBase#itemToLabel()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:protected:measure"><apiName>measure</apiName><shortdesc>
      MenuBar アイテムのデフォルトの幅に基づいて、MenuBar の適切な幅と高さを計算します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      MenuBar アイテムのデフォルトの幅に基づいて、MenuBar の適切な幅と高さを計算します。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:protected:updateBackground"><apiName>updateBackground</apiName><shortdesc>
      MenuBar コントロールの背景のスキンを更新します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      MenuBar コントロールの背景のスキンを更新します。このメソッドは、MenuBar の子が作成された、または MenuBar のスタイルが変更されたときに呼び出されます。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:MenuBar:labelFunction"><apiName>labelFunction</apiName><shortdesc>
      各メニューアイテムに表示するテキストを判定する関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      各メニューアイテムに表示するテキストを判定する関数です。 ラベル関数でデータプロバイダー内の適切なフィールドを検索し、表示可能なストリングを返す必要があります。 このプロパティを省略すると、<codeph>labelField</codeph> プロパティで指定したフィールドまたは属性の値が使用されます。 このプロパティを指定した場合、<codeph>labelField</codeph> プロパティの値は無視されます。 <codeph>labelFunction</codeph> プロパティは、フォーマット処理やローカライズにも使用できます。
     
      <p>このラベル関数は単一のパラメーターを取得します。このパラメーターは、データプロバイダー内のアイテムであり、ストリングを返します。</p>
      <pre>
      <codeph>myLabelFunction(item:Object):String</codeph> </pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:menuBarItems"><apiName>menuBarItems</apiName><shortdesc>
      MenuBar コントロールの最上位メニューバーで、各アイテムをレンダリングする MenuBarItem オブジェクトを含む配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/><apiDefaultValue>[ ]
     
      </apiDefaultValue></apiValueDef><apiDesc>
      MenuBar コントロールの最上位メニューバーで、各アイテムをレンダリングする MenuBarItem オブジェクトを含む配列です。 デフォルトでは、このプロパティには MenuBarItem クラスのインスタンスが含まれます。 アイテムは、<codeph>menuBarItems</codeph> 配列に直接追加しないでください。 新しいメニューバーアイテムを追加するには、MenuBar コントロールのデータプロバイダーに直接追加します。 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:menus"><apiName>menus</apiName><shortdesc>
      この MenuBar コントロールのポップアップサブメニューに対応する Menu オブジェクトを含む配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/><apiDefaultValue>[ ] 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      この MenuBar コントロールのポップアップサブメニューに対応する Menu オブジェクトを含む配列です。 各 MenuBar アイテムは、ポップアップサブメニューを持たない場合でも、この配列内に対応する Menu オブジェクトを持つことができます。 <codeph>menus</codeph> 配列は最初から設定されるのではなく、必要に応じてメニューが動的に作成されます。 アイテムは、<codeph>menus</codeph> 配列に直接追加しないでください。 新しいドロップダウンメニューを追加するには、MenuBar コントロールのデータプロバイダーに直接追加します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      データプロバイダー内のデータにアクセスして操作するオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      データプロバイダー内のデータにアクセスして操作するオブジェクトです。 MenuBar コントロールは、データに関する情報について、データ記述子に委任します。次に、このデータはデータソースに関する解析と移動のために使用されます。MenuBar に対して定義されたデータ記述子は、すべての子メニューおよびサブメニューで使用されます。 
     
      <p>このプロパティを MXML の属性として指定する場合、記述子のストリング名ではなく、データ記述子への参照を使用する必要があります。プロパティを設定するには次の形式を使用します。</p>
     
     <pre>&lt;mx:MenuBar id="menubar" dataDescriptor="{new MyCustomDataDescriptor()}"/></pre>
     
      <p>また、次の例に示すように、ネストしたサブタグとして MXML のプロパティを指定できます。</p>
     
      <pre>&lt;mx:MenuBar>
      &lt;mx:dataDescriptor>
         &lt;myCustomDataDescriptor>
      &lt;/mx:dataDescriptor>
      ...</pre>
     
      <p>デフォルト値は、DefaultDataDescriptor クラスの内部インスタンスです。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      MenuBar のアイテムとメニューとして表示されるオブジェクトの階層です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      MenuBar のアイテムとメニューとして表示されるオブジェクトの階層です。 最上位の子はすべて MenuBar アイテムになり、その子はメニューとサブメニュー内のアイテムになります。MenuBar コントロールは、ソースデータオブジェクトを次のように処理します。
      <p>
      <ul>
      <li>有効な XML テキストを含むストリングが XML オブジェクトに変換されます。</li>
      <li>XMLNode は、XML オブジェクトに変換されます。</li>
      <li>また XMLList は、XMLListCollection に変換されます。</li>
      <li>ICollectionView インターフェイスを実装するすべてのオブジェクトが ICollectionView にキャストされます。</li>
      <li>Array は ArrayCollection に変換されます。</li>
      <li>他のタイプのオブジェクトは、Array 内でその単一エントリとしてラップされます。</li>
      </ul>
      </p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:hasRoot:get"><apiName>hasRoot</apiName><shortdesc conref="mx.controls.Menu#hasRoot">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.controls.Menu#hasRoot">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:iconField:get"><apiName>iconField</apiName><shortdesc>
      各メニューアイテムに表示されるアイコンを決定するデータプロバイダーのフィールド名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      各メニューアイテムに表示されるアイコンを決定するデータプロバイダーのフィールド名です。 デフォルトでは、MenuBar は、メニューアイテム内のテキストにアイコンを表示しません。アイコンフィールドを指定することで、メニューアイテムのアイコンとして作成、表示されるグラフィックを定義できます。 
     
      <p>MenuItemRenderer は、<codeph>iconField</codeph> プロパティによって定義された名前のプロパティのデータプロバイダーを調べます。 プロパティの値が Class である場合は、そのクラスをインスタンス化し、それが IFlexDisplayObject のインスタンスになると想定します。 プロパティの値がストリングである場合は、その名前を持つクラスがアプリケーションに存在するかどうかを確認します。該当するクラスが見つからない場合は、その名前を持つプロパティをドキュメントで確認し、そのプロパティがクラスにマップされると想定します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:labelField:get"><apiName>labelField</apiName><shortdesc>
      各メニューアイテムに表示されるテキストを決定するデータプロバイダーのフィールド名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><label>to specify the label attribute in an E4X XML Object 
      as the text to display for each menu item. 
     
      Setting the <code>labelFunction</code> property overrides this property.
     
      </label></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      各メニューアイテムに表示されるテキストを決定するデータプロバイダーのフィールド名です。 データプロバイダーがストリングの配列である場合、各ストリング値がラベルとして使用されます。 データプロバイダーが E4X XML オブジェクトの場合、このプロパティを明示的に設定する必要があります。 例えば、 </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:menuBarItemRenderer:get"><apiName>menuBarItemRenderer</apiName><shortdesc>
      MenuBar コントロールの最上位メニューバーのための、MenuBar コントロールによって使用されるアイテムレンダラーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier><apiDefaultValue>"mx.controls.menuClasses.MenuBarItem"
     
      </apiDefaultValue></apiValueDef><apiDesc>
      MenuBar コントロールの最上位メニューバーのための、MenuBar コントロールによって使用されるアイテムレンダラーです。 
     
      <p>MenuBar コントロールのポップアップサブメニューのアイテムレンダラーを定義できます。 各ポップアップサブメニューは Menu コントロールのインスタンスであるため、MenuItemRenderer クラスを使用して、ポップアップサブメニューのアイテムレンダラーを定義します。 ポップアップサブメニューのアイテムレンダラーを設定するには、<codeph>menus</codeph> プロパティを使用して Menu オブジェクトにアクセスします。 </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:protected:menuBarItemStyleFilters:get"><apiName>menuBarItemStyleFilters</apiName><shortdesc>
      MenuBar から menuBar アイテムに渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      MenuBar から menuBar アイテムに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      現在開いている Menu、または現在開いている Menu がない場合は最後に開いていた Menu の MenuBar コントロールのインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      現在開いている Menu、または現在開いている Menu がない場合は最後に開いていた Menu の MenuBar コントロールのインデックスです。    
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      データプロバイダーのルートノードを表示するかどうかを指定するブール値のフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      データプロバイダーのルートノードを表示するかどうかを指定するブール値のフラグです。 データプロバイダーにルートノードがあり、<codeph>showRoot</codeph> プロパティが <codeph>false</codeph> に設定されている場合、MenuBar コントロールのアイテムはルートノードの直下の子孫に対応します。 このフラグは、リストや配列などのルートノードがないデータプロバイダーには影響しません。 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#MenuBar/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:VSlider"><apiName>VSlider</apiName><shortdesc>	
  VSlider コントロールを使用すると、スライダートラックの両端の間でスライダーサムを移動することで値を選択できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:VSlider" replacement="spark.components.VSlider" since="4.0">
	</Alternative><styles><style enumeration="left,top,right,bottom" inherit="no" name="dataTipPlacement" owner="mx.controls:VSlider" playerVersion="Flash9" type="String">
<description>
  サムに関連するデータヒントの場所です。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph>、<codeph>"top"</codeph> および <codeph>"bottom"</codeph> です。
  
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VSlider&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:VSlider
    <strong>Styles</strong>
    dataTipPlacement="top"
  /&gt;
  </pre>
  </p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.sliderClasses:Slider</apiBaseClassifier></apiClassifierDef><apiDesc>	
  VSlider コントロールを使用すると、スライダートラックの両端の間でスライダーサムを移動することで値を選択できます。 スライダーの現在の値は、スライダーの両終点の間におけるサムの相対位置によって決定されます。スライダーの両終点は、スライダーの最小値と最大値に対応します。
 
  <p>スライダーは、最小値から最大値までの範囲を無段階に移動できるか、または最小値から最大値までの範囲内で段階的にのみ移動できます。 トラックに沿って指定された間隔で目盛りが表示されます。目盛りは、スライダーに設定できる値とは関係なく設定できます。 現在の値を表示するデータヒントを使用することもできます。</p>
  	
  <p>VSlider は縦向きです。スライダートラックは下から上に伸び、ラベルと目盛りはトラックの右または左に配置されます。</p>
 
  <p>VSlider コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>高さは 250 ピクセル、幅はスライダーとそのラベルを表示できるだけのサイズになります。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>なし</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>なし</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleImageVSlider.mxml"><swfblock conref="examples/SimpleImageVSlider.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#HSlider"><linktext>mx.controls.HSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.controls.sliderClasses.xml#SliderThumb"><linktext>mx.controls.sliderClasses.SliderThumb</linktext></link><link href="mx.controls.sliderClasses.xml#SliderDataTip"><linktext>mx.controls.sliderClasses.SliderDataTip</linktext></link><link href="mx.controls.sliderClasses.xml#SliderLabel"><linktext>mx.controls.sliderClasses.SliderLabel</linktext></link></related-links><apiConstructor id="mx.controls:VSlider:VSlider"><apiName>VSlider</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  コンストラクターです。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ProgressBarDirection"><apiName>ProgressBarDirection</apiName><shortdesc>
  ProgressBarDirection クラスは、ProgressBar クラスの direction プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  ProgressBarDirection クラスは、ProgressBar クラスの <codeph>direction</codeph> プロパティの値を定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarDirection:LEFT"><apiName>LEFT</apiName><shortdesc>
	  右から左にプログレスバーを塗りつぶします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  右から左にプログレスバーを塗りつぶします。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarDirection:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  左から右にプログレスバーを塗りつぶします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  左から右にプログレスバーを塗りつぶします。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HScrollBar"><apiName>HScrollBar</apiName><shortdesc>
  HScrollBar（水平の ScrollBar）コントロールを使用すると、データが多すぎて表示領域に収まらない場合に、表示される部分のデータを制御できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HScrollBar" replacement="spark.components.HScrollBar" since="4.0">
	</Alternative><styles><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:HScrollBar" playerVersion="Flash9" type="Number">
<description>
  ユーザーがマウスのボタンを押し続けた場合に、<codeph>buttonDown</codeph> イベントを繰り返す間隔（ミリ秒）です。 デフォルト値は 35 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:HScrollBar" playerVersion="Flash9" type="Number">
<description>
  最初の <codeph>buttonDown</codeph> イベントから、<codeph>buttonDown</codeph> イベントの繰り返しを <codeph>repeatInterval</codeph> で開始するまでの待機時間（ミリ秒単位）です。 デフォルト値は 500 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:HScrollBar&gt;</code> tag inherits all of the
  tag attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:HScrollBar
    <strong>Styles</strong>
    repeatDelay="500"
    repeatInterval="35"
 
    <strong>Events</strong>
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.scrollClasses:ScrollBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  HScrollBar（水平の ScrollBar）コントロールを使用すると、データが多すぎて表示領域に収まらない場合に、表示される部分のデータを制御できます。このコントロールは、基本の ScrollBar コントロールを拡張したものです。 
  
  <p>HScrollBar コントロールは単独のコントロールとしても使用できますが、通常はコンポーネントの他のグループに構成部分として組み込み、スクロール機能を実現します。</p>
 
  <p>ScrollBar コントロールは、2 つの矢印ボタン、1 つのトラック、および 1 つのサムの合計 4 つのパーツで構成されます。サムの位置と矢印ボタンの表示は、コントロールの現在の状態で決まります。ScrollBar コントロールでは、次の 4 つのパラメーターを使用して表示状態を計算します。</p>
 
  <ul>
    <li>範囲の最小値</li>
    <li>範囲の最大値</li>
    <li>現在の位置 (最大値と最小値の範囲内)</li>
    <li>ビューポートサイズ：範囲全体のうち一度に表示できるアイテムの数を表します。アイテムの数は、範囲に該当する数以下であることが必要です。ここで、範囲とは、範囲の最小値と最大値の間に存在する値の集合です。</li>
  </ul>
 
  </apiDesc><example conref="HScrollBarExample.mxml"><swfblock conref="examples/HScrollBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.scrollClasses.xml#ScrollBar"><linktext>mx.controls.scrollClasses.ScrollBar</linktext></link></related-links><adobeApiEvent id="mx.controls:HScrollBar_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  ユーザーが開始したアクションまたはプログラムによって ScrollBar がスクロールされたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが開始したアクションまたはプログラムによって ScrollBar がスクロールされたときに送出されます。 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:HScrollBar:HScrollBar"><apiName>HScrollBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ProgressBarMode"><apiName>ProgressBarMode</apiName><shortdesc>
  ProgressBarMode クラスは、ProgressBar クラスの mode プロパティの値を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  ProgressBarMode クラスは、ProgressBar クラスの <codeph>mode</codeph> プロパティの値を定義します。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarMode:EVENT"><apiName>EVENT</apiName><shortdesc>
	  ：source プロパティで指定したコントロールから、progress イベントと completed イベントを送出する必要があります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>event</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  <codeph>source</codeph> プロパティで指定されたコントロールから、<codeph>progress</codeph> イベントと <codeph>completed</codeph> イベントを送出する必要があります。 ProgressBar はこれらのイベントを使用して、状態を更新します。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarMode:MANUAL"><apiName>MANUAL</apiName><shortdesc>
	  手動で ProgressBar 状態を更新します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>manual</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  手動で ProgressBar 状態を更新します。 このモードでは、<codeph>maximum</codeph> プロパティと <codeph>minimum</codeph> プロパティを指定し、<codeph>setProgress()</codeph> メソッドを使用して状態を指定します。 このモードは、<codeph>indeterminate</codeph> プロパティが <codeph>true</codeph> の場合によく使用されます。
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarMode:POLLED"><apiName>POLLED</apiName><shortdesc>
	  source プロパティで、getBytesLoaded() メソッドと getBytesTotal() メソッドを実装するオブジェクトを指定する必要があります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>polled</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  ：<codeph>source</codeph> プロパティで、<codeph>getBytesLoaded()</codeph> メソッドと <codeph>getBytesTotal()</codeph> メソッドを実装するオブジェクトを指定する必要があります。 ProgressBar コントロールは、これらのメソッドを呼び出して、状態を更新します。
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Tree"><apiName>Tree</apiName><shortdesc>
  Tree コントロールを使用すると、展開可能なツリー形式で階層データを表示できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  ユーザーが行を選択したときのテキストの色です。
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  マウスポインターが行の上に置かれているときのテキストの色です。
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:Tree" playerVersion="Flash9" type="Function">
<description>
  プログラムによるトゥイーンの制御に使用される <codeph>easingFunction</codeph> 関数への参照です。
 
  <p>デフォルト値は <codeph>undefined</codeph> です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionDisabledColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  リストアイテムの無効にされた色を指定します。
 
  </description>
<default>0xDDDDDD
 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  ユーザーがリンクを選択したときのリンクの背景色です。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  マウスポインターが置かれているときのリンクの背景色です。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:Tree" playerVersion="Flash9" type="Function">
<description>
  コンポーネントトゥイーンを制御するためのイージング関数です。
 
  <p>デフォルト値は <codeph>undefined</codeph> です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  開いた状態や閉じた状態へのトランジションにかかる時間の長さです（ミリ秒単位）。
 
  </description>
<default>250
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indentation" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  ツリーの各レベルのインデントです（ピクセル単位）。
 
  </description>
<default>17
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="folderClosedIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  ツリーのブランチアイテムで使用する、フォルダーが閉じた状態のアイコンを指定します。 MXML では、構文 <codeph>folderClosedIcon="@Embed(source='b.jpg');"</codeph> を使用してこのプロパティを設定できます。デフォルト値は、Assets.swf ファイルの「TreeFolderClosed」シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="folderOpenIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  ツリーのブランチアイテムで使用する、フォルダーが開いた状態のアイコンを指定します。 MXML では、構文 <codeph>folderOpenIcon="@Embed(source='a.jpg');"</codeph> を使用してこのプロパティを設定できます。デフォルト値は、Assets.swf ファイルの「TreeFolderOpen」シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="disclosureClosedIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  子を表示せず、閉じている (サブツリーが折り畳まれている) 親アイテムの隣りに表示されているアイコンを指定します。デフォルト値は、Assets.swf ファイル内の "TreeDisclosureClosed" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="disclosureOpenIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  開いて子を表示している親アイテムの隣りに表示されているアイコンを指定します。デフォルト値は、Assets.swf ファイル内の "TreeDisclosureOpen" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="defaultLeafIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  リーフアイテムのデフォルトのアイコンを指定します。MXML では、構文 <codeph>defaultLeafIcon="@Embed(source='c.jpg');"</codeph> を使用してこのプロパティを設定できます。デフォルト値は、Assets.swf ファイルの「TreeNodeIcon」シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="depthColors" owner="mx.controls:Tree" playerVersion="Flash9" type="Array">
<description>
  Tree コントロールで使用される色の配列です（降順）。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:Tree" playerVersion="Flash9" type="Array">
<description>
  切り替えパターンで行を表示する場合に使用する色です。値には、複数の色の配列を指定します。 <codeph>backgroundColor</codeph> プロパティが指定されていない場合のみ使用されます。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右の境界とコンテンツ領域の右端との間のピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The &lt;mx:Tree&gt; tag inherits all the tag attributes of its superclass, and
  adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:Tree
    <b>Properties</b>
    dataDescriptor="<i>Instance of DefaultDataDescriptor</i>"
    dataProvider="null"
    dragMoveEnabled="true|false"
    firstVisibleItem="<i>First item in the control</i>"
    hasRoot="false|true"
    itemIcons="null"
    maxHorizontalScrollPosition="0"
    openItems="null"
    showRoot="true|false"
    &nbsp;
    <b>Styles</b>
    alternatingItemColors="undefined"
    backgroundDisabledColor="0xDDDDDD"
    defaultLeafIcon="<i>'TreeNodeIcon' symbol in Assets.swf</i>"
    depthColors="undefined"
    disclosureClosedIcon="<i>'TreeDisclosureClosed' symbol in Assets.swf</i>"
    disclosureOpenIcon="<i>'TreeDisclosureOpen' symbol in Assets.swf</i>"
    folderClosedIcon="<i>'TreeFolderClosed' symbol in Assets.swf</i>"
    folderOpenIcon="<i>'TreeFolderOpen' symbol in Assets.swf</i>"
    indentation="17"
    openDuration="250"
    openEasingFunction="undefined"
    paddingLeft="2"
    paddingRight="0"
    rollOverColor="0xAADEFF"
    selectionColor="0x7FCDFE"
    selectionDisabledColor="0xDDDDDD"
    selectionEasingFunction="undefined"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
    itemClose="<i>No default</i>"
    itemOpen="<i>No default</i>"
    itemOpening="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls:List</apiBaseClassifier></apiClassifierDef><apiDesc>
  Tree コントロールを使用すると、展開可能なツリー形式で階層データを表示できます。 ツリー内の各アイテムはリーフかブランチのいずれかである可能性があります。リーフアイテムとは、ツリー内の各末端にあるノードです。ブランチアイテムとは、リーフアイテムまたはブランチアイテムを含んだノードです。また、空になる場合もあります。
 
  <p>デフォルトでは、リーフは、ファイルアイコンの横のテキストラベルで表されます。ブランチは、フォルダーアイコンの横のテキストラベルで表されます。ブランチにはユーザーが開いて子を表示できる展開用矢印が付いています。</p>
  
  <p>Tree クラスでは、データプロバイダーを解析および操作するために ITreeDataDescriptor オブジェクトまたは ITreeDataDescriptor2 オブジェクトを使用します。 デフォルトのツリーデータ記述子である DefaultDataDescriptor クラスのオブジェクトは、XML クラスおよび Object クラスをサポートします。Object クラスのデータプロバイダーは、<codeph>children</codeph> フィールドにすべての子を持つ必要があります。
  </p>
 
  <p>Tree コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>幅は最初に表示される 7 つの行（折り畳みなし）の中で最も幅の広いノードのアイコン、ラベルおよび展開用矢印（ある場合）が収まるだけの広さ、高さは各行を 20 ピクセルとして 7 行分の高さです。スクロールバーが必要な場合、スクロールバーの幅はこの幅の計算に含まれません。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>5000 × 5000</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TreeExample.mxml"><swfblock conref="examples/TreeExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.treeClasses.xml#ITreeDataDescriptor"><linktext>mx.controls.treeClasses.ITreeDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#ITreeDataDescriptor2"><linktext>mx.controls.treeClasses.ITreeDataDescriptor2</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link></related-links><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_OPENING_itemOpening"><apiName>itemOpening</apiName><shortdesc>
  ブランチが開かれたときまたは閉じられたときに送出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_OPENING</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ブランチが開かれたときまたは閉じられたときに送出します。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_OPEN_itemOpen"><apiName>itemOpen</apiName><shortdesc>
  ブランチが開かれた（展開された）ときに送出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_OPEN</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ブランチが開かれた（展開された）ときに送出します。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_CLOSE_itemClose"><apiName>itemClose</apiName><shortdesc>
  ブランチが閉じられた（畳まれた）ときに送出します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_CLOSE</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ブランチが閉じられた（畳まれた）ときに送出します。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Tree:Tree"><apiName>Tree</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Tree:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      DragEvent.DRAG_COMPLETE イベントを処理します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>DragEvent オブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>DragEvent.DRAG_COMPLETE</codeph> イベントを処理します。 このメソッドは、データプロバイダーからアイテムを削除します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      DragEvent.DRAG_DROP イベントを処理します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>DragEvent オブジェクトです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>DragEvent.DRAG_DROP</codeph> イベントを処理します。 このメソッドは、<codeph>hideDropFeedback()</codeph> メソッドを呼び出して、ドロップフィードバックを非表示にします。
     
      <p>アクションが <codeph>COPY</codeph> の場合、このメソッドは <codeph>ObjectUtil.copy()</codeph> メソッドを呼び出してオブジェクトのディープコピーを作成し、そのコピーの <codeph>uid</codeph> プロパティ（存在する場合）を新しい値に置き換えます。これは、<codeph>UIDUtil.createUID()</codeph> メソッドを呼び出すことによって行われます。</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.utils.xml#ObjectUtil"><linktext>mx.utils.ObjectUtil</linktext></link><link href="mx.utils.xml#UIDUtil"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:Tree:expandChildrenOf"><apiName>expandChildrenOf</apiName><shortdesc>
      指定したアイテムの配下にあるすべてのツリーを開くか、または閉じます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>開始アイテムです。
     
      </apiDesc></apiParam><apiParam><apiItemName>open</apiItemName><apiType value="Boolean"/><apiDesc>開く操作と閉じる操作を切り替えます。アイテムを開く場合は <codeph>true</codeph>、閉じる場合は <codeph>false</codeph> を指定します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      指定したアイテムの配下にあるすべてのツリーを開くか、または閉じます。<codeph>dataProvider</codeph> を設定し、その直後に <codeph>expandChildrenOf()</codeph> を呼び出した場合は、不適切な動作が起こる可能性があります。コンポーネントが検証されるまで待つか、<codeph>validateNow()</codeph> メソッドを呼び出します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:expandItem"><apiName>expandItem</apiName><shortdesc>
      ブランチアイテムを開くまたは閉じます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>設定の対象とするアイテムです。
     
      </apiDesc></apiParam><apiParam><apiItemName>open</apiItemName><apiType value="Boolean"/><apiDesc>開く場合は <codeph>true</codeph>、閉じる場合は <codeph>false</codeph> を指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>animate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>トランジションをアニメーション化する場合は <codeph>true</codeph> を指定します （メモ：ブランチの子の数が 20 を上回る場合は、パフォーマンスを向上させるために、初回のオープン時はアニメーション化されません）。
     
      </apiDesc></apiParam><apiParam><apiItemName>dispatchEvent</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>開くアニメーションの終了後に、<codeph>open</codeph> イベントを発行するかどうかを制御します。
     
      </apiDesc></apiParam><apiParam><apiItemName>cause</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>このイベントは、存在する場合にアイテムの開くアクションを起動します。
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ブランチアイテムを開くまたは閉じます。ブランチアイテムを開くと、子ブランチが既に開かれている場合は、子ブランチの開閉の状態が復元されます。<codeph>dataProvider</codeph> を設定し、その直後に <codeph>expandItem()</codeph> を呼び出した場合は、不適切な動作が起こる可能性があります。 コンポーネントが検証されるまで待つか、<codeph>validateNow()</codeph> を呼び出します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:getParentItem"><apiName>getParentItem</apiName><shortdesc>
      子アイテムの既知の親を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>アイテムの親です。
      
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>親を取得するアイテムです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      子アイテムの既知の親を返します。このメソッドは、アイテムが表示されていたかまたは現在表示されている場合のみ、値を返します。 最上位アイテムは <codeph>null</codeph> 値の親を持ちます。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:initListData"><apiName>initListData</apiName><shortdesc>
      ツリーアイテムレンダラーが使用する TreeListData オブジェクトを初期化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>レンダリングされるアイテムです。
      </apiDesc></apiParam><apiParam><apiItemName>treeListData</apiItemName><apiOperationClassifier>mx.controls.treeClasses:TreeListData</apiOperationClassifier><apiDesc>アイテムをレンダリングするために使用する TreeListDataItem です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ツリーアイテムレンダラーが使用する TreeListData オブジェクトを初期化します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:isItemOpen"><apiName>isItemOpen</apiName><shortdesc>
      指定したアイテムのブランチが開いている（子が表示されている）場合は true を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>開いている場合は true、そうでない場合は false です。
     
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>調べるアイテムです。
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      指定したアイテムのブランチが開いている（子が表示されている）場合は <codeph>true</codeph> を返します。
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      新しい TreeListData インスタンスを作成し、入力されたデータプロバイダーアイテムに基づいてフィールドに値を格納します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>新しく作成した ListData オブジェクトです。
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>ListData の設定に使用するデータプロバイダーアイテムです。
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>アイテムの UID です。
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>データプロバイダー内のアイテムのインデックスです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      新しい TreeListData インスタンスを作成し、入力されたデータプロバイダーアイテムに基づいてフィールドに値を格納します。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:setItemIcon"><apiName>setItemIcon</apiName><shortdesc>
      アイテムに関連付けるアイコンを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>設定の対象とするアイテムです。
      </apiDesc></apiParam><apiParam><apiItemName>iconID</apiItemName><apiType value="Class"/><apiDesc>閉じた状態のアイコン（またはリーフのアイコン）のリンケージ識別子です。
      </apiDesc></apiParam><apiParam><apiItemName>iconID2</apiItemName><apiType value="Class"/><apiDesc>開いた状態のアイコンのリンケージ識別子です。
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      アイテムに関連付けるアイコンを設定します。このメソッドを呼び出すと、アイテムがリーフアイテムである場合にその <codeph>iconField</codeph> プロパティおよび <codeph>iconFunction</codeph> プロパティがオーバーライドされます。ブランチアイテムでは、<codeph>iconField</codeph> プロパティおよび <codeph>iconFunction</codeph> プロパティを使用しません。このノードでは、<codeph>folderOpenIcon</codeph> プロパティおよび <codeph>folderClosedIcon</codeph> プロパティを使用します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Tree:itemIcons"><apiName>itemIcons</apiName><shortdesc>
      アイテムのアイコンを指定するオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/><apiDefaultValue>undefined
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムのアイコンを指定するオブジェクトです。 オブジェクトの各エントリには、アイテム UID であるフィールド名と次の形式のオブジェクトである値があります。
      <pre>
      {iconID: <i>Class</i>, iconID2: <i>Class</i>}
      </pre>
      <codeph>iconID</codeph> フィールド値は閉じたアイテムまたはリーフアイテムのアイコンのクラスです。<codeph>iconID2</codeph> は開いたアイテムのアイコンのクラスです。
     
      <p>このプロパティでは、アイテムアイコンの初期化を許可することが想定されています。 初期化後のこの配列への変更は自動的に検出されません。 アイコンを動的に変更するには <codeph>setItemIcon()</codeph> メソッドを使用します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/setItemIcon()"><linktext>setItemIcon()</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      現在の ITreeDataDescriptor を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.treeClasses:ITreeDataDescriptor</apiValueClassifier><apiDefaultValue>DefaultDataDescriptor
      
      </apiDefaultValue></apiValueDef><apiDesc>
      現在の ITreeDataDescriptor を返します。
     
       </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      ドラッグ＆ドロップ操作の一部として、アイテムを Tree コントロールから単にコピーするのではなく移動できることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ドラッグ＆ドロップ操作の一部として、アイテムを Tree コントロールから単にコピーするのではなく移動できることを示します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:firstVisibleItem:get"><apiName>firstVisibleItem</apiName><shortdesc>
      ツリーの一番上の行に現在表示されているアイテムです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      ツリーの一番上の行に現在表示されているアイテムです。ブランチが開閉およびスクロールされた状態に応じて、例えば、現在表示可能なアイテムのうちリスト内では 9 番目であったり、ルートのひ孫にあたるようなアイテムであっても、一番上の行に表示されることがあります。このプロパティを設定することは、List コントロールの verticalScrollPosition を設定するのに似ています。現在表示可能な状態にないアイテム（例えば、展開されていないアイテムの下にあるアイテムなど）に対しては、このプロパティを設定しても効果はありません。
     
      <p>メモ：Flex 1.0 では、このプロパティは実際には XMLNode または TreeNode のいずれかでしたが、XMLNode として型付けされていました。2.0 では、これは汎用タイプの Object になり、dataProvider に含まれているデータと同じタイプのオブジェクトが返されるようになりました。</p>
     
      <p>デフォルト値は Tree コントロール内の最初のアイテムです。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:hasRoot:get"><apiName>hasRoot</apiName><shortdesc>
      現在の dataProvider にルートアイテム（例：階層構造の単一の最上位ノード）があることを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      現在の dataProvider にルートアイテム（例：階層構造の単一の最上位ノード）があることを示します。XML とオブジェクトは、ルートがあるタイプの例です。リストと配列にはありません。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/showRoot"><linktext>showRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:maxHorizontalScrollPosition:get"><apiName>maxHorizontalScrollPosition</apiName><shortdesc>
      Tree コントロールの maxHorizontalScrollPosition プロパティの最大値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Tree コントロールの <codeph>maxHorizontalScrollPosition</codeph> プロパティの最大値です。 このプロパティは、List コントロールの <codeph>maxHorizontalScrollPosition</codeph> プロパティとは異なり、アイテムが開閉したとき、およびそれ以外の場合にツリーのアイテムが表示または非表示になったときに（例えばスクロールなど）、Tree コントロールにより変更されます。
     
      <p>このプロパティを dataProvider 内で既知の最も幅の広いアイテムを設定すると、たとえそのアイテムが 4 段階下のレベルにあるような場合でも、ユーザーがスクロールしてアイテムを表示できるように値が調整されます。 この結果、<codeph>maxHorizontalScrollPosition</codeph> プロパティの値を読み込むと、設定したのと同じ値が読み込まれますが、その値は必ずしも Tree コントロールが実際に使用する値とは限りません。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:openItems:get"><apiName>openItems</apiName><shortdesc>
      開かれた状態のアイテムまたは開くように設定されたアイテムです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      開かれた状態のアイテムまたは開くように設定されたアイテムです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      ルートアイテムの可視性を設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      ルートアイテムの可視性を設定します。 dataProvider データにルートノードがあるときに、<codeph>false</codeph> に設定された場合、Tree コントロールはルートアイテムを表示しません。 ルートアイテムの子孫だけが表示されます。 このフラグは、リストや配列などのルートを持たない dataProviders では無効です。 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:dataProvider:set"><apiName>dataProvider</apiName><shortdesc>
      表示するデータを含むオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      表示するデータを含むオブジェクトです。 このプロパティに値を割り当てると、Tree クラスにより次のようにソースデータオブジェクトが処理されます。
      <p>
      <ul><li>有効な XML テキストを含むストリングが XMLListCollection に変換されます。</li>
      <li>また XMLNode は XMLListCollection に変換されます。</li>
      <li>また XMLList は、XMLListCollection に変換されます。</li>
      <li>ICollectionView インターフェイスを実装するすべてのオブジェクトが ICollectionView にキャストされます。</li>
      <li>Array は ArrayCollection に変換されます。</li>
      <li>他のタイプのオブジェクトは、Array 内でその単一エントリとしてラップされます。</li></ul>
      </p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ComboBase"><apiName>ComboBase</apiName><shortdesc>
  ComboBase クラスは、テキストを表示するフィールドのほか、ユーザーが選択するテキストを表示するドロップダウンリストを表示するためのボタンを持つコントロールの基本クラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="textInputStyleName" owner="mx.controls:ComboBase" playerVersion="Flash9" type="String">
<description>
  現在の選択範囲を表示する内部 TextInput サブコンポーネントのスタイル宣言です。値を指定していない場合、TextInput サブコンポーネントでは ComboBase クラスで定義されているデフォルトのテキストスタイルが使用されます。
 
  </description>
<default>""
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textInputClass" owner="mx.controls:ComboBase" playerVersion="Flash10" type="Class">
<description>
  
 
  <p/>
 
  </description>
<default>mx.controls.TextInput
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableDisabledSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  コントロールが無効で、<codeph>editable</codeph> プロパティが <codeph>true</codeph> の場合に、背景と境界のスキンとして使用するクラスの名前です。 このスキンは、ComboBox クラスでのみ使用されます。 ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableDownSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  <codeph>editable</codeph> プロパティが <codeph>true</codeph> の場合に、ユーザーがマウスボタンを押したままにしたときの背景と境界のスキンとして使用するクラスの名前です。 このスキンは、ComboBox クラスでのみ使用されます。 ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableOverSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  マウスがコントロール上にあり、<codeph>editable</codeph> プロパティが <codeph>true</codeph> の場合に、背景と境界のスキンとして使用するクラスの名前です。 このスキンは、ComboBox クラスでのみ使用されます。 ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableUpSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  マウスがコントロール上になく、<codeph>editable</codeph> プロパティが <codeph>true</codeph> の場合に、背景と境界のスキンとして使用するクラスの名前です。 このスキンは、ComboBox クラスでのみ使用されます。 ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  コントロールが無効であるときに、背景と境界のスキンとして使用するクラスの名前です。ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。ColorPicker クラスのデフォルト値は、ColorPickerSkin クラスです。DateField クラスのデフォルト値は、ScrollArrowDownSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  ユーザーがマウスボタンを押したままにしているときに、背景と境界のスキンとして使用するクラスの名前です。 ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。ColorPicker クラスのデフォルト値は、ColorPickerSkin クラスです。DateField クラスのデフォルト値は、ScrollArrowDownSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  マウスがコントロール上にあるときに、背景と境界のスキンとして使用するクラスの名前です。ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。ColorPicker クラスのデフォルト値は、ColorPickerSkin クラスです。DateField クラスのデフォルト値は、ScrollArrowDownSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  マウスがコントロール上にないときに、背景と境界のスキンとして使用するクラスの名前です。ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  背景と境界のデフォルトのスキンとして使用するクラスの名前です。ComboBase クラスにはデフォルト値がありません。ComboBox クラスのデフォルト値は、ComboBoxArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのシンボルのカラーです。CheckBox のチェックマークや ScrollBar ボタンの矢印などがあります。
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントにフォーカスがある場合のフォーカスリングのカラーです。
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのコンテンツ領域のカラーです。
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ComboBase&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;<i>mx:tagname</i>
    <b>Properties</b>
    dataProvider="null"
    editable="false|true"
    imeMode="null"
    restrict="null"
    selectedIndex="-1"
    selectedItem="null"
    text=""
    &nbsp;
    <b>Styles</b>
    disabledSkin="<i>Depends on class</i>"
    downSkin="<i>Depends on class</i>"
    editableDisabledSkin="<i>Depends on class</i>"
    editableDownSkin="<i>Depends on class</i>"
    editableOverSkin="<i>Depends on class</i>"
    editableUpSkin="<i>Depends on class</i>"
    overSkin="<i>Depends on class</i>"
    textInputStyleName="" 
    upSkin="<i>Depends on class</i>"
 
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  ComboBase クラスは、テキストを表示するフィールドのほか、ユーザーが選択するテキストを表示するドロップダウンリストを表示するためのボタンを持つコントロールの基本クラスです。ComboBase クラスを MXML タグとして直接使用することはありません。
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.collections.xml#ICollectionView"><linktext>mx.collections.ICollectionView</linktext></link></related-links><apiConstructor id="mx.controls:ComboBase:ComboBase"><apiName>ComboBase</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ComboBase:protected:calculatePreferredSizeFromData"><apiName>calculatePreferredSizeFromData</apiName><shortdesc>
      ドロップダウンリストのエントリで使用する高さと幅のデフォルト値を決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>width</codeph> プロパティと <codeph>height</codeph> プロパティを持つオブジェクトです。
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>numItems</apiItemName><apiType value="int"/><apiDesc>サイズを決定するためにチェックするアイテムの数です。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ドロップダウンリストのエントリで使用する高さと幅のデフォルト値を決定します。ComboBase の各サブクラスはこのメソッドを実装し、<codeph>width</codeph> と <codeph>height</codeph> の 2 つのプロパティを持つオブジェクトを返す必要があります。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:collectionChangeHandler"><apiName>collectionChangeHandler</apiName><shortdesc>
      データプロバイダーに対する変更に応答します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>コレクションから送出される CollectionEvent.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      データプロバイダーに対する変更に応答します。 コンポーネントで選択したアイテムの前でアイテムを追加または削除すると、そのコンポーネントでは <codeph>selectedIndex</codeph> プロパティが調整されます。
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#CollectionEvent"><linktext>mx.events.CollectionEvent</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:ComboBase:protected:downArrowButton_buttonDownHandler"><apiName>downArrowButton_buttonDownHandler</apiName><shortdesc>
      ドロップダウンボタンが押されたときに、何らかのアクションを実行します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:FlexEvent</apiOperationClassifier><apiDesc>ドロップダウンボタンが押されたときにトリガーされるイベントです。     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      ドロップダウンボタンが押されたときに、何らかのアクションを実行します。これは抽象基本クラスの実装なので何も実行されず、サブクラスによってオーバーライドされます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:itemToUID"><apiName>itemToUID</apiName><shortdesc>
      dataProvider アイテムの UID を決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>一意の識別子です。
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>dataProvider アイテムです。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      dataProvider アイテムの UID を決定します。すべての dataProvider アイテムに、一意の識別子（UID）を割り当てる必要があります。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:measure"><apiName>measure</apiName><shortdesc>
      コントロールの measuredWidth プロパティと measuredHeight プロパティを求めます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      コントロールの <codeph>measuredWidth</codeph> プロパティと <codeph>measuredHeight</codeph> プロパティを求めます。得られる幅は、<codeph>dataProvider</codeph> にあるテキストの最大幅とドロップダウンボタンの幅を合計した数値です。得られる高さは、ボタンとテキストのうち、高いほうの値です。 データプロバイダーが設定されていない場合、またはデータプロバイダーにアイテムが存在しない場合、<codeph>measuredWidth</codeph> プロパティは <codeph>UIComponent.DEFAULT_MEASURED_WIDTH</codeph> に設定され、<codeph>measuredHeight</codeph> プロパティは <codeph>UIComponent.DEFAULT_MEASURED_HEIGHT</codeph> に設定されます
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/measure()"><linktext>mx.core.UIComponent.measure()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:ComboBase:protected:textInput_changeHandler"><apiName>textInput_changeHandler</apiName><shortdesc>
      コンポーネントの編集可能テキストフィールドとして機能する TextInput の変更を処理します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>コントロール内のテキストが変更されるたびにトリガーされるイベントです。     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      コンポーネントの編集可能テキストフィールドとして機能する TextInput の変更を処理します。このメソッドは、<codeph>selectedIndex</codeph> を -1 に設定します（したがって、<codeph>selectedItem</codeph> は <codeph>null</codeph> に設定されます）。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      内部コンポーネントの幅と高さを、指定された値に設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>コンポーネントの <codeph>scaleX</codeph> プロパティの値にかかわらず、コンポーネントの座標系でコンポーネントの幅をピクセル単位で指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>コンポーネントの <codeph>scaleY</codeph> プロパティの値にかかわらず、コンポーネントの座標系でコンポーネントの高さをピクセル単位で指定します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      内部コンポーネントの幅と高さを、指定された値に設定します。ドロップダウンボタンは右端に配置され、テキストフィールドは残された領域に配置されます。
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.controls:ComboBase:protected:collection"><apiName>collection</apiName><shortdesc>
      このコンポーネントで表示するアイテムの ICollectionView です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:ICollectionView</apiValueClassifier></apiValueDef><apiDesc>
      このコンポーネントで表示するアイテムの ICollectionView です。  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:iterator"><apiName>iterator</apiName><shortdesc>
      dataProvider からアイテムを取得し、そのアイテムをレンダラーに渡すために使用するメイン IViewCursor です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      dataProvider からアイテムを取得し、そのアイテムをレンダラーに渡すために使用するメイン IViewCursor です。 コードシーケンスの最後で、画面の一番上に表示されるアイテムにメイン IViewCursor が必ず配置される必要があります。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:textInput"><apiName>textInput</apiName><shortdesc>
      現在の選択範囲を表示する内部 TextInput サブコンポーネントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:ITextInput</apiValueClassifier></apiValueDef><apiDesc>
      現在の選択範囲を表示する内部 TextInput サブコンポーネントです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:arrowButtonStyleFilters:get"><apiName>arrowButtonStyleFilters</apiName><shortdesc>
      ComboBase から下矢印ボタンに渡すスタイルのセットです。
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      ComboBase から下矢印ボタンに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:protected:borderMetrics:get"><apiName>borderMetrics</apiName><shortdesc>
      left、top、rihgt および bottom の 4 つのプロパティを持つ EdgeMetrics オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:EdgeMetrics</apiValueClassifier></apiValueDef><apiDesc>
      <codeph>left</codeph>、<codeph>top</codeph>、<codeph>right</codeph> および <codeph>bottom</codeph> の 4 つのプロパティを持つ EdgeMetrics オブジェクトを返します。 各プロパティの値は、それに対応する側の境界の太さをピクセル単位で表した数値に等しくなります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      このコンポーネントが表示するアイテムのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      このコンポーネントが表示するアイテムのセットです。このプロパティから派生したクラスでは、Array、XML、ICollectionView の各クラスなどのさまざまなデータ型を処理できるので、このプロパティは Object 型です。このプロパティの値を取得した場合は、すべてが ICollectionView に変換され、その ICollectionView が返されます。設定した値が ICollectionView ではなかった場合、変換前の値は取得できません。
     
      <p>このプロパティを設定すると、<codeph>selectedIndex</codeph> プロパティが調整され、<codeph>selectedItem</codeph> プロパティも調整されます。ただし、<codeph>selectedIndex</codeph> プロパティが別途設定されている場合は除きます。 <codeph>prompt</codeph> プロパティが存在しない場合、<codeph>selectedIndex</codeph> プロパティは 0 に設定されます。それ以外の場合は、-1 のままになります。-1 はプロンプトのストリングに使用されるインデックスです。 <codeph>selectedIndex</codeph> プロパティが設定済みで、その値が新しいデータプロバイダーの範囲を超えている場合は、予想外の動作が発生する可能性があります。</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:editable:get"><apiName>editable</apiName><shortdesc>
      コントロールが編集可能であるかどうかを示すフラグです。編集可能な場合は、dataProvider に指定されていないエントリをユーザーが直接入力できます。編集できない場合は、dataProvider 内のアイテムから選択する必要があります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false.
      This property is ignored by the DateField control.
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロールが編集可能であるかどうかを示すフラグです。編集可能な場合は、dataProvider に指定されていないエントリをユーザーが直接入力できます。編集できない場合は、dataProvider 内のアイテムから選択する必要があります。
     
      <p><codeph>true</codeph> の場合、キーボードからの入力が、編集可能なテキストフィールドに表示されます。true ではない場合は、キーボード入力は dataProvider のアイテムを選択するためのショートカットとして機能します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
       
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:imeMode:get"><apiName>imeMode</apiName><shortdesc conref="mx.controls.TextInput#imeMode">
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.TextInput#imeMode">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:restrict:get"><apiName>restrict</apiName><shortdesc>
      ユーザーがテキストフィールドに入力できる文字、または入力できない文字のセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      ユーザーがテキストフィールドに入力できる文字、または入力できない文字のセットです。
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      選択されたアイテムのデータプロバイダー内のインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      選択されたアイテムのデータプロバイダー内のインデックスです。 <codeph>prompt</codeph> プロパティが存在する場合は、<codeph>selectedIndex</codeph> の値を -1 に設定してプロンプトを表示できます。 <codeph>prompt</codeph> プロパティが存在しない場合、<codeph>selectedIndex</codeph> は、<codeph>dataProvider</codeph> が設定されていれば 0 に設定されます。
     
      <p>ComboBox コントロールが編集可能な場合は、ユーザーがテキストフィールドにテキストを入力すると、<codeph>selectedIndex</codeph> プロパティは -1 になります。</p>
     
      <p>設定後にただちに有効にはならない他の多くの Flex プロパティとは異なり、<codeph>selectedIndex</codeph> プロパティと <codeph>selectedItem</codeph> プロパティは同期しているので、一方のプロパティを設定すると、もう一方のプロパティもただちに影響を受けます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      selectedIndex の位置にあるデータプロバイダー内のアイテムです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      selectedIndex の位置にあるデータプロバイダー内のアイテムです。
     
      <p>データがオブジェクトまたはクラスインスタンスの場合、そのプロパティを変更すると <codeph>dataProvider</codeph> オブジェクトが変更されますが、インスタンスが Bindable でないか IPropertyChangeNotifier を実装していない場合、または dataProvider.itemUpdated() への呼び出しが発生しない場合は、表示が更新されない可能性があります。</p>
     
      <codeph>selectedItem</codeph> プロパティを設定すると、該当のアイテムがデータプロバイダーに存在していれば、ComboBox コントロールでそのアイテムが選択されます。つまり、テキストフィールドにそのアイテムが表示され、<codeph>selectedIndex</codeph> が設定されます。 ComboBox コントロールが編集可能な場合に、ユーザーがテキストフィールドにテキストを入力すると、<codeph>selectedItem</codeph> プロパティは <codeph>null</codeph> になります。
     
      <p>設定後にただちに有効にはならない他の多くの Flex プロパティとは異なり、<codeph>selectedIndex</codeph> と <codeph>selectedItem</codeph> は同期しているので、一方のプロパティを設定すると、もう一方のプロパティもただちに影響を受けます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:text:get"><apiName>text</apiName><shortdesc>
      テキストフィールドの内容です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      テキストフィールドの内容です。 コントロールが編集可能でない場合、このプロパティの設定は無効です。コントロールが編集可能な場合は、このプロパティを設定すると、テキストフィールドの内容が設定されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:textInputStyleFilters:get"><apiName>textInputStyleFilters</apiName><shortdesc>
      ComboBase からテキスト入力に渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      ComboBase からテキスト入力に渡すスタイルのセットです。 <codeph>textInputStyleName</codeph> スタイルプロパティを設定すると、これらのスタイルは無視されます。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:value:get"><apiName>value</apiName><shortdesc>
      選択されたアイテムの値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      選択されたアイテムの値です。アイテムが数値またはストリングの場合、値はアイテムと同じになります。 アイテムがオブジェクトの場合、その値は、<codeph>data</codeph> プロパティが存在していればその値になり、<codeph>label</codeph> プロパティが存在していればその値になります。
     
      <p><b>メモ：</b> 通常は、このプロパティではなく、<codeph>selectedItem</codeph> プロパティの使用をお勧めします。 <codeph>value</codeph> プロパティは、以前のアプリケーションとの下位互換性を保つために用意されています。</p>
     
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TileList"><apiName>TileList</apiName><shortdesc>
  TileList コントロールは、タイル状に配置された多数のアイテムを表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:TileList" replacement="spark.components.List" since="4.0">
<description>
  Flex 3 のレイアウト固有の List コンポーネントは、汎用レイアウトを使用する、より汎用的な List コンポーネントで置き換えられています。新しい List コンポーネントから同様の動作を取得するには、<codeph>layout</codeph> プロパティを <codeph>TileLayout</codeph> に設定します。
 </description>
	</Alternative><effects><effect event="itemsChange" name="itemsChangeEffect" owner="mx.controls:TileList">
<description>
  コントロールのデータプロバイダーへの変更が発生したときに再生するデータエフェクトです。
 
  <p>デフォルトでは、TileList コントロールはデータエフェクトを使用しません。TileList コントロールの場合、DefaultTileListEffect クラスのインスタンスを使用します。</p>
 
 </description>
<default>undefined
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:TileList&gt;</code> tag inherits
  all of the tag attributes of its superclass, but ignores the
  <code>variableRowHeight</code> and <code>wordWrap</code> tag attributes.  
  It adds no additional tag attributes.</p>
  
  <pre>
  &lt;mx:TileList/&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:TileBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  TileList コントロールは、タイル状に配置された多数のアイテムを表示します。 リスト内のすべてのアイテムにアクセスできるように、<codeph>direction</codeph> プロパティに応じて縦、横いずれか一方のスクロールバーを表示します。 タイルのサイズは、<codeph>rowHeight</codeph> プロパティおよび <codeph>columnWidth</codeph> プロパティを使用して設定できます。 または、Flex で測定された dataProvider 内の最初のアイテムのアイテムレンダラーのサイズをすべてのタイルで使用することもできます。
  
  <p>TileList コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>4 列、4 行。デフォルトのアイテムレンダラーを使用した場合、合計サイズは 66 x 126 ピクセルになります。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>5000 × 5000</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TileListExample.mxml"><swfblock conref="examples/TileListExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:TileList:TileList"><apiName>TileList</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:FormItemLabel"><apiName>FormItemLabel</apiName><shortdesc>
  FormItem コンテナのラベル部分の表示には、FormItemLabel オブジェクトが使用されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Label</apiBaseClassifier></apiClassifierDef><apiDesc>
  FormItem コンテナのラベル部分の表示には、FormItemLabel オブジェクトが使用されます。
 
  <p>FormItemLabel クラスには、そのスーパークラスである Label から継承された機能以外に追加された機能はありません。このクラスの目的は、FormItemLabel タイプセレクターでスタイルを設定できるようにすること、およびすべての FormItem コンテナのラベルに影響するスタイルを設定できるようにすることです。</p>
 
  <p><b>メモ：</b>このクラスは使用されなくなりました。 FormItem ラベルのスタイルを設定する場合は、FormItem クラスの <codeph>labelStyleName</codeph> スタイルプロパティを使用することをお勧めします。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#FormItem"><linktext>mx.containers.FormItem</linktext></link></related-links><apiConstructor id="mx.controls:FormItemLabel:FormItemLabel"><apiName>FormItemLabel</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:List"><apiName>List</apiName><shortdesc>
  List コントロールでは、アイテムを垂直方向に並べて表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:List" replacement="spark.components.List" since="4.0">
	</Alternative><effects><effect event="itemsChange" name="itemsChangeEffect" owner="mx.controls:List">
<description>
  コントロールのデータプロバイダーへの変更が発生したときに再生するデータエフェクトです。
 
  <p>デフォルトでは、List コントロールはデータエフェクトを使用しません。List コントロールの場合、DefaultListEffect クラスのインスタンスを使用してデータエフェクトを設定します。 </p>
 
 </description>
<default>undefined
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:List&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:List
    <b>Properties</b>
    editable="false|true"
    editedItemPosition="<i>No default</i>"
    editorDataField="text"
    editorHeightOffset="0"
    editorUsesEnterKey="false|true"
    editorWidthOffset="0"
    editorXOffset="0"
    editorYOffset="0"
    imeMode="null"    
    itemEditor="TextInput"
    itemEditorInstance="<i>Current item editor</i>"
    rendererIsEditor="false|true"
    
    <b>Styles</b>
    backgroundDisabledColor="0xDDDDDD"
    
    <b>Events</b>
    itemEditBegin="<i>No default</i>"
    itemEditEnd="<i>No default</i>"
    itemEditBeginning="<i>No default</i>"
    itemFocusIn="<i>No default</i>"
    itemFocusOut="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls.listClasses:ListBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  List コントロールでは、アイテムを垂直方向に並べて表示します。 その機能は、HTML の SELECT フォームエレメントによく似ています。一度にすべてのアイテムを表示できない場合は、垂直スクロールバーが表示され、ユーザーがリストのすべてのアイテムにアクセスできるようになります。オプションの水平スクロールバーは、リストアイテムが水平方向に収まらない場合に、ユーザーがアイテムを表示するために使用します。 <codeph>allowMultipleSelection</codeph> プロパティの値に応じて、ユーザーはリストから単一または複数のアイテムを選択できます。
 
  <p>List コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>幅は表示される最初の 7 アイテム（アイテムが 7 つ以下の場合はリスト内の表示されるすべてのアイテム）の中で最も幅が広いラベルが収まるだけの幅、高さは 1 行 20 ピクセルとして 7 行分の高さです。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>5000 × 5000</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleList.mxml"><swfblock conref="examples/SimpleList.swf"/></example></apiClassifierDetail><related-links><link href="mx.events.xml#ListEvent"><linktext>mx.events.ListEvent</linktext></link></related-links><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><shortdesc>
  アイテムレンダラーがフォーカスを失ったときに送出されます。ユーザーが List コントロール内またはリストの外部にある別のアイテムをクリックするか、キーボードを使用して List コントロールの内部または外部にある別のアイテムに移動した場合に発生する可能性があります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  アイテムレンダラーがフォーカスを失ったときに送出されます。ユーザーが List コントロール内またはリストの外部にある別のアイテムをクリックするか、キーボードを使用して List コントロールの内部または外部にある別のアイテムに移動した場合に発生する可能性があります。リストアイテムが編集可能な場合にのみ送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><shortdesc>
  アイテムレンダラーがフォーカスを得たときに送出されます。ユーザーが List コントロールのアイテムをクリックするか、キーボードを使用してアイテムに移動した場合に発生する可能性があります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  アイテムレンダラーがフォーカスを得たときに送出されます。ユーザーが List コントロールのアイテムをクリックするか、キーボードを使用してアイテムに移動した場合に発生する可能性があります。リストアイテムが編集可能な場合にのみ送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><shortdesc>
  何らかの理由でアイテム編集セッションが終了するときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  何らかの理由でアイテム編集セッションが終了するときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><shortdesc>
  editedItemPosition プロパティが設定され、アイテムが編集可能になったときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>editedItemPosition</codeph> プロパティが設定され、アイテムが編集可能になったときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><shortdesc>
  ユーザーが、アイテム上、リストのタブ上またはリスト内でマウスボタンを離したとき、またはその他の方法でアイテムを編集しようと試みたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが、アイテム上、リストのタブ上またはリスト内でマウスボタンを離したとき、またはその他の方法でアイテムを編集しようと試みたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:List:List"><apiName>List</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:List:createItemEditor"><apiName>createItemEditor</apiName><shortdesc>
      itemEditor プロパティで指定されたエディターを使用して editedItemPosition のアイテムレンダラーに対応するアイテムエディターを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>列インデックスです。List コントロールについては、このプロパティの値は 0 に設定されます。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>編集されるアイテムのデータプロバイダー内でのインデックスです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>editedItemPosition</codeph> のアイテムレンダラーに対応するアイテムエディターを、<codeph>itemEditor</codeph> プロパティで指定されたエディターを使用して作成します。
     
      <p>このメソッドは、エディターインスタンスを <codeph>itemEditorInstance</codeph> プロパティとして設定します。</p>
     
      <p><codeph>itemEditBegin</codeph> イベントに対するイベントリスナ内からのみ、このメソッドを呼び出すことができます。これ以外の時点でエディターを作成するには、<codeph>itemEditBegin</codeph> イベントを生成するように <codeph>editedItemPosition</codeph> プロパティを設定します。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:createItemRenderer"><apiName>createItemRenderer</apiName><shortdesc>
      適切なレンダラーを取得します。レンダラーが指定されていない場合は、デフォルトのレンダラーを使用します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>レンダラーです。
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>アイテムレンダラーが作成されるオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      適切なレンダラーを取得します。レンダラーが指定されていない場合は、デフォルトのレンダラーを使用します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:destroyItemEditor"><apiName>destroyItemEditor</apiName><shortdesc>
      アイテムに対して現在開かれているアイテムエディターを閉じます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      アイテムに対して現在開かれているアイテムエディターを閉じます。 通常、このメソッドは、<codeph>preventDefault()</codeph> メソッドを呼び出してデフォルトイベントリスナの実行を防止した後に、<codeph>itemEditEnd</codeph> イベントのイベントリスナ内からのみ呼び出されます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:drawRowBackground"><apiName>drawRowBackground</apiName><shortdesc>
      位置と高さの指定に従って行の背景を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>その行のグラフィックが含まれている表示オブジェクトを格納する Sprite オブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>表示行のセット内における行インデックスです。ヘッダーを除いて最も上に表示されている行の行インデックスが 0 となります。背景の描画に使用するオブジェクトは、このインデックスに基づいて管理されます。これにより、特定の行でレンダリングするアイテムのインデックスが変更された場合でも、同じ表示オブジェクトをその行で再使用することが可能です。
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>背景の y 方向位置の候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>インジケーターの高さの候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>インジケーターの色の候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>dataIndex</apiItemName><apiType value="int"/><apiDesc>データプロバイダー内における、その行のインデックスです。 例えば、これを使用して 10 番目のアイテムに違う色を指定できます。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      位置と高さの指定に従って行の背景を描画します。このメソッドは、入力された Sprite オブジェクトの子として Shape オブジェクトを作成し、適切な色で塗り潰します。このメソッドでは、<codeph>backgroundAlpha</codeph> スタイルプロパティの設定に基づいて、背景色の透明度を決定します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:endEdit"><apiName>endEdit</apiName><shortdesc>
      データプロバイダー内のアイテムの編集を停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc><codeph>true</codeph> を返します（<codeph>preventDefault()</codeph> が呼び出されない場合）。  それ以外の場合は <codeph>false</codeph> を返します。
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>イベントの理由を定義する定数です。"CANCELLED"、"NEW_ROW"、"OTHER" などがあります。 この値は、ListEventReason クラスのメンバーであることが必要です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      データプロバイダー内のアイテムの編集を停止します。 ユーザーがアイテムの編集を終了したとき、コントロールでこのメソッドが呼び出されます。 <codeph>itemEditEnd</codeph> イベントを送出して、編集したデータを <codeph>itemEditorInstance</codeph> からデータプロバイダーにコピーし、<codeph>itemEditorInstance</codeph> を非表示にするプロセスを開始します。
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#ListEventReason"><linktext>mx.events.ListEventReason</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:List:isItemEditable"><apiName>isItemEditable</apiName><shortdesc>
      データプロバイダーアイテムのアイテムレンダラーが編集可能かどうかを判別します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>アイテムが編集可能な場合は <codeph>true</codeph> になります。
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>データプロバイダーアイテムです。
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      データプロバイダーアイテムのアイテムレンダラーが編集可能かどうかを判別します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:layoutEditor"><apiName>layoutEditor</apiName><shortdesc>
      候補の位置に候補のサイズでアイテムエディターインスタンスを配置します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/><apiDesc>インジケーターの x 方向位置の候補です。
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/><apiDesc>インジケーターの x 方向位置の候補です。
      </apiDesc></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="int"/><apiDesc>インジケーターの幅の候補です。
      </apiDesc></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="int"/><apiDesc>インジケーターの高さの候補です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      候補の位置に候補のサイズでアイテムエディターインスタンスを配置します。 Tree コントロールではこのメソッドをオーバーライドし、位置を調整してレンダラーのインデントを補正します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      新しい ListData インスタンスを作成し、入力されたデータプロバイダーアイテムに基づいてフィールドに値を格納します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>新しく作成した ListData オブジェクトです。
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>ListData の設定に使用するデータプロバイダーアイテムです。
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>アイテムの UID です。
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>データプロバイダー内のアイテムのインデックスです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      新しい ListData インスタンスを作成し、入力されたデータプロバイダーアイテムに基づいてフィールドに値を格納します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:List:editorDataField"><apiName>editorDataField</apiName><shortdesc>
      リストアイテムの新しいデータを格納するアイテムエディターのプロパティの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>text</apiData><apiType value="String"/></apiValueDef><apiDesc>
      リストアイテムの新しいデータを格納するアイテムエディターのプロパティの名前です。 例えば、デフォルトの <codeph>itemEditor</codeph> は TextInput であるため、<codeph>editorDataField</codeph> プロパティのデフォルト値は <codeph>"text"</codeph> となり、TextInput コントロールの <codeph>text</codeph> プロパティが指定されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorHeightOffset"><apiName>editorHeightOffset</apiName><shortdesc>
      アイテムレンダラーのサイズに対するアイテムエディターの高さです（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーのサイズに対するアイテムエディターの高さです（ピクセル単位）。 このプロパティを使うと、エディターをアイテムレンダラーと数ピクセル分オーバーラップさせて、エディターの周囲の境界線を補正することができます。  
      <p>エディターの表示中にこれらの値を変更しても、それらの変更は現在のエディターに反映されませんが、次のアイテムレンダラーでエディターが開かれたときに反映されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorUsesEnterKey"><apiName>editorUsesEnterKey</apiName><shortdesc>
      アイテムエディターで Enter キーを使用するかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムエディターで Enter キーを使用するかどうかを示すフラグです。 このプロパティを <codeph>true</codeph> に設定すると、アイテムエディターで Enter キーを使用できます。この場合、List は Enter キーを検索せず、その操作に反応してエディターを移動します。
      <p>エディターの表示中にこの値を変更しても、それらの変更は現在のエディターに反映されませんが、次のアイテムレンダラーでエディターが開かれたときに反映されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorWidthOffset"><apiName>editorWidthOffset</apiName><shortdesc>
      アイテムレンダラーのサイズに対するアイテムエディターの幅です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーのサイズに対するアイテムエディターの幅です（ピクセル単位）。 このプロパティを使うと、エディターをアイテムレンダラーと数ピクセル分オーバーラップさせて、エディターの周囲の境界線を補正することができます。
      <p>エディターの表示中にこれらの値を変更しても、それらの変更は現在のエディターに反映されませんが、次のアイテムレンダラーでエディターが開かれたときに反映されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorXOffset"><apiName>editorXOffset</apiName><shortdesc>
      アイテムの左上隅の位置に対するアイテムエディターの左上隅の x 軸上の位置です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムの左上隅の位置に対するアイテムエディターの左上隅の x 軸上の位置です（ピクセル単位）。 このプロパティを使うと、エディターをアイテムレンダラーと数ピクセル分オーバーラップさせて、エディターの周囲の境界線を補正することができます。
      <p>エディターの表示中にこれらの値を変更しても、それらの変更は現在のエディターに反映されませんが、次のアイテムレンダラーでエディターが開かれたときに反映されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorYOffset"><apiName>editorYOffset</apiName><shortdesc>
      アイテムの左上隅の位置に対するアイテムエディターの左上隅の y 軸上の位置です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムの左上隅の位置に対するアイテムエディターの左上隅の y 軸上の位置です（ピクセル単位）。 このプロパティを使うと、エディターをアイテムレンダラーと数ピクセル分オーバーラップさせて、エディターの周囲の境界線を補正することができます。
      <p>エディターの表示中にこれらの値を変更しても、それらの変更は現在のエディターに反映されませんが、次のアイテムレンダラーでエディターが開かれたときに反映されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:itemEditor"><apiName>itemEditor</apiName><shortdesc>
      editable プロパティが true に設定されている場合にコントロールに使用するアイテムエディターのクラスファクトリです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IFactory</apiValueClassifier><apiDefaultValue>new ClassFactory(mx.controls.TextInput)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>editable</codeph> プロパティが <codeph>true</codeph> に設定されている場合にコントロールに使用するアイテムエディターのクラスファクトリです。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:itemEditorInstance"><apiName>itemEditorInstance</apiName><shortdesc>
      現在アクティブなアイテムエディターのインスタンスへの参照です（存在する場合）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      現在アクティブなアイテムエディターのインスタンスが存在する場合に、そのインスタンスへの参照です。
     
      <p>アイテムの編集中にアイテムエディターのインスタンスと新しいアイテム値にアクセスするには、<codeph>itemEditorInstance</codeph> プロパティを使用します。 <codeph>itemEditorInstance</codeph> プロパティは、<codeph>itemEditBegin</codeph> イベントのイベントリスナーの実行後に初めて有効になります。したがって通常は、<codeph>itemEditorInstance</codeph> プロパティにのみ、<codeph>itemEditEnd</codeph> イベントのイベントリスナ内からアクセスします。</p>
     
      <p><codeph>itemEditor</codeph> プロパティは、アイテムエディターのクラス（つまり、アイテムエディターインスタンスのデータ型）を定義します。</p>
     
      <p>MXML でこのプロパティを設定することはありません。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:protected:measuringObjects"><apiName>measuringObjects</apiName><shortdesc>
      ファクトリによる測定オブジェクトのキャッシュです。
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      ファクトリによる測定オブジェクトのキャッシュです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:rendererIsEditor"><apiName>rendererIsEditor</apiName><shortdesc>
      アイテムレンダラーがアイテムエディターであるかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーがアイテムエディターであるかどうかを指定します。 このプロパティが <codeph>true</codeph> の場合、<codeph>itemEditor</codeph> プロパティの設定は無視されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editable:get"><apiName>editable</apiName><shortdesc>
      データプロバイダー内のアイテムをユーザーが編集できるかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      データプロバイダー内のアイテムをユーザーが編集できるかどうかを示すフラグです。 <codeph>true</codeph> の場合、コントロール内のアイテムレンダラーが編集可能です。 ユーザーは、アイテムレンダラーをクリックすることでエディターを開くことができます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editedItemPosition:get"><apiName>editedItemPosition</apiName><shortdesc>
      編集中のデータプロバイダーアイテムに対応するアイテムレンダラーの列と行のインデックスです（存在する場合）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      編集中のデータプロバイダーアイテムに対応するアイテムレンダラーの列と行のインデックスです（存在する場合）。
     
      <p>このオブジェクトには、アイテムの 0 から始まる列とアイテムのインデックスを示す <codeph>columnIndex</codeph> と <codeph>rowIndex</codeph> の 2 つのフィールドがあります。 List コントロールでは、<codeph>columnIndex</codeph> プロパティは常に 0 です（例：<codeph>{columnIndex:0, rowIndex:3}</codeph>）。</p>
     
      <p>このプロパティを設定すると、アイテムが表示されるまでスクロールし、<codeph>itemEditBegin</codeph> イベントを送出して、指定されたアイテムでアイテムエディターが開きます。
      </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editedItemRenderer:get"><apiName>editedItemRenderer</apiName><shortdesc>
      編集中のアイテムが位置する DataGrid コントロール内のアイテムレンダラーへの参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      編集中のアイテムが位置する DataGrid コントロール内のアイテムレンダラーへの参照です。
     
      <p><codeph>itemEditBegin</codeph> イベントと <codeph>itemEditEnd</codeph> イベントのイベントリスナーから、<codeph>editedItemRenderer.data</codeph> プロパティを使用して、編集中であるアイテムの現在の値にアクセスできます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      IME（入力メソッドエディター）のモードを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      IME（入力メソッドエディター）のモードを指定します。 IME を使用することによって、ユーザーは中国語、日本語、および韓国語のテキストを入力できます。Flex では、コントロールにフォーカスが置かれたときに、IME を指定されたモードに設定し、コントロールからフォーカスが離れたときに、元のモードに戻します。
     
     <p>flash.system.IMEConversionMode クラスで、このプロパティの有効な値の定数を定義します。IME をまったく指定しない場合は、<codeph>null</codeph> を指定します。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IME.xml"><linktext>flash.system.IME</linktext></link><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:LinkButton"><apiName>LinkButton</apiName><shortdesc>
  LinkButton コントロールは境界のない Button コントロールであり、ユーザーがマウスをコンテンツ上に移動したときにコンテンツがハイライト表示されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="highlightAlphas"/><Exclude kind="style" name="fillColors"/><Exclude kind="style" name="fillAlphas"/><Exclude kind="style" name="borderColor"/><Exclude kind="property" name="emphasized"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  ユーザーが LinkButton を選択したときの LinkButton のテキストの色です。
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  ユーザーが LinkButton にマウスポインターを置いたときの LinkButton のテキストの色です。
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  ユーザーが LinkButton を選択したときの LinkButton の背景色です。
 
  </description>
<default>0xB7F39B
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  ユーザーが LinkButton にマウスポインターを置いたときの LinkButton の色です。
 
  </description>
<default>0xEEFEE6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:LinkButton" playerVersion="Flash9" type="Number">
<description>
  LinkButton の周囲にハイライト表示される長方形の角丸の半径です。
 
  </description>
<default>4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:LinkButton&gt;</code> tag inherits all of the tag attributes 
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:LinkButton
    <b>Styles</b>
    cornerRadius="4""
    rollOverColor="0xEEFEE6"
    selectionColor="0xB7F39B"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  LinkButton コントロールは境界のない Button コントロールであり、ユーザーがマウスをコンテンツ上に移動したときにコンテンツがハイライト表示されます。一般的に、これらの特徴はブラウザーページに含まれる HTML リンクなどに見られます。 LinkButton コントロールが何らかのアクションを実行できるようにするには、Button コントロールの場合と同様、<codeph>click</codeph> イベントハンドラーを指定する必要があります。
 
  <p>LinkButton コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>テキスト全体を表示できるだけの幅と高さです。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>未定義</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LinkButtonExample.mxml"><swfblock conref="examples/LinkButtonExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><apiConstructor id="mx.controls:LinkButton:LinkButton"><apiName>LinkButton</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  コンストラクターです。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ButtonBar"><apiName>ButtonBar</apiName><shortdesc>
  ButtonBar コントロールは、共通の外観と操作性を持つ論理的に関連するプッシュボタンの水平または垂直方向のグループを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Alternative owner="mx.controls:ButtonBar" replacement="spark.components.ButtonBar" since="4.0">
	</Alternative><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  子同士の垂直方向の間隔を示すピクセル数です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="top,middle,bottom" inherit="no" name="verticalAlign" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
 ButtonBar に含まれるすべてのボタンの垂直方向の配置です。個々のボタンは ButtonBar 全体まで引き伸ばされるため、このスタイルは、buttonHeight スタイルを使用し、ボタンを組み合わせた高さが ButtonBar の幅よりも小さい場合にのみ役立ちます。 有効な値は、<codeph>"top"</codeph>、<codeph>"middle"</codeph> および <codeph>"bottom"</codeph> です。
 
 </description>
<default>"middle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="lastButtonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
 ButtonBar に含まれるすべてのボタンの垂直方向の配置です。 個々のボタンは ButtonBar 全体まで引き伸ばされるため、このスタイルは、buttonHeight スタイルを使用し、ボタンを組み合わせた高さが ButtonBar の幅よりも小さい場合にのみ役立ちます。 有効な値は、<codeph>"top"</codeph>、<codeph>"middle"</codeph> および <codeph>"bottom"</codeph> です。
 
 </description>
<default>"middle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  子同士の水平方向の間隔を示すピクセル数です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
 ButtonBar に含まれるすべてのボタンの水平方向の配置です。個々のボタンは ButtonBar 全体まで引き伸ばされるため、このスタイルは、buttonWidth スタイルを使用し、ボタンを組み合わせた幅が ButtonBar の幅よりも小さい場合にのみ役立ちます。 有効な値は、<codeph>"left"</codeph>、<codeph>"center"</codeph> および <codeph>"right"</codeph> です。
 
 </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="firstButtonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  最初のボタンのスタイルを指定する CSS スタイル宣言の名前です。 指定されていない場合は、<codeph>buttonStyleName</codeph> スタイルプロパティのデフォルト値が使用されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="buttonWidth" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  ピクセル単位で表した各ボタンの幅です。 定義されていない場合は、各ボタンのデフォルトの幅は、ラベルテキストから計算されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="buttonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  ボタンのスタイルを指定する CSS スタイル宣言の名前です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="buttonHeight" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  ピクセル単位で表した各ボタンの高さです。定義されていない場合は、各ボタンの高さは、コンテナに適用されるフォントスタイルによって決定されます。このプロパティを設定すると、この計算よりも設定値が優先されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ButtonBar&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:ButtonBar
    <b>Styles</b>
    buttonHeight="undefined"
    buttonStyleName="<i>Name of CSS style declaration, which specifies
    styles for the buttons</i>"
    buttonWidth="undefined"
    firstButtonStyleName="<i>The value of</i> <code>buttonStyleName</code>"
    horizontalAlign="center|left|right"
    horizontalGap="0"
    lastButtonStyleName="<i>The value of</i> <code>buttonStyleName</code>"
    verticalAlign="middle|top|bottom"
    verticalGap="0"
     
    <b>Events</b>
    itemClick="<i>No default</i>"
    &gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:ButtonBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.controls:NavBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  ButtonBar コントロールは、共通の外観と操作性を持つ論理的に関連するプッシュボタンの水平または垂直方向のグループを定義します。
 
  <p>プッシュボタンは、選択されたときに選択状態を記憶しないボタンです。 通常、ボタンバーのプッシュボタンは、関連するボタンをグループ化して共通の外観と操作性を提供し、1 か所で <codeph>click</codeph> イベントのロジックを処理するために使用します。 </p>
 
  <p>ButtonBar コントロールは、その <codeph>dataProvider</codeph> プロパティの値に基づいて Button コントロールを作成します。 ButtonBar は Container のサブクラスですが、<codeph>Container.addChild()</codeph> や <codeph>Container.removeChild()</codeph> などのメソッドを使用して Button コントロールの追加や削除を行わないでください。 代わりに、<codeph>addItem()</codeph>、<codeph>removeItem()</codeph> などのメソッドを使用して <codeph>dataProvider</codeph> プロパティを操作してください。 ButtonBar コントロールは、<codeph>dataProvider</codeph> プロパティへの変更に基づいて、自動的に必要な子を追加または削除します。</p>
 
  <p>ButtonBar コントロールのボタンスタイルを操作するには、<codeph>buttonStyleName</codeph>、<codeph>firstButtonStyleName</codeph> および <codeph>lastButtonStyleName</codeph> スタイルプロパティを使用します。ButtonBar コントロールを構成する個々の Button コントロールには、スタイルを設定しないでください。</p>
 
  <p>ToggleButtonBar コントロールを使用して、トグルボタンのグループを定義できます。</p>
 
  <p>ButtonBar コントロールには、次のデフォルトの特性があります。</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
        <entry>推奨サイズ</entry>
        <entry>ラベルテキストを含むすべてのボタンとアイコンを、必要な追加スペースおよびセパレーターと共に表示できる幅です。</entry>
     </row><row>
        <entry>コントロールのサイズ変更規則</entry>
        <entry>デフォルトでは、コントロールのサイズは変更されません。親コンテナのサイズに合わせて ButtonBar のサイズを変更する場合は、パーセント値でサイズを指定します。</entry>
     </row><row>
        <entry>パディング</entry>
        <entry>top、bottom、left および right の各プロパティは 0 ピクセルに設定されています。</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ButtonBarExample.mxml"><swfblock conref="examples/ButtonBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><adobeApiEvent id="mx.controls:ButtonBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  ユーザーがボタンをクリックしたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがボタンをクリックしたときに送出されます。 このイベントは、<codeph>dataProvider</codeph> プロパティが ViewStack コンテナを参照しない場合にのみ送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ButtonBar:ButtonBar"><apiName>ButtonBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Label"><apiName>Label</apiName><shortdesc>
  Label コントロールは、編集できないテキストの単一行を表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="method" name="setFocus"/><Exclude kind="style" name="themeColor"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="property" name="tabEnabled"/><Exclude kind="property" name="mouseFocusEnabled"/><Exclude kind="property" name="focusPane"/><Exclude kind="property" name="focusEnabled"/><Alternative owner="mx.controls:Label" replacement="spark.components.Label" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  ラベルの上部とテキストの上部の間隔を示すピクセル数です。 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  ラベルの下部とテキストの下部の間隔を示すピクセル数です。 
  
  </description>
<default>0 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  ラベルの右側とテキストの右側の間隔を示すピクセル数です。 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  ラベルの左側とテキストの左側の間隔を示すピクセル数です。 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:Label" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:Label" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:Label" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:Label" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:Label" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:Label" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Label&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Label
    <b>Properties</b>
    condenseWhite="true|false"
    data="null"
    htmlText=""
    listData="null"
    selectable="true|false"
    text=""
    truncateToFit="true|false"
    &nbsp;
    <b>Styles</b>
    color="0x0B333C"
    disabledColor="0xAAB3B3"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="0"
    paddingBottom="0"
    styleSheet="null"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    &nbsp;
    <b>Events</b>
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Label コントロールは、編集できないテキストの単一行を表示します。 複数行にわたる編集不可能なテキストのブロックを作成するには、Text コントロールを使用します。
 
  <p>HTML タグを使用して、Label のテキストをフォーマットできます。Label コントロールの CSS スタイルが適用された後に HTML タグが適用されます。テキストの上下左右にスペースを追加することもできます。デフォルトでは、Label のテキストは選択不可ですが、選択可能に設定することもできます。</p>
 
  <p>Label のサイズがテキストより小さい場合は、テキストを単に切り詰めるか、または "..." などのローカライズ可能なストリングを使用して省略した表示とするかを制御できます （メモ：プレーンテキストは切り詰めることができますが、HTML は切り詰めることができません）。Label のテキストがプレーンテキストまたは HTML のいずれであっても、Label のテキスト全体が完全に表示されておらず、ラベルにツールヒントが割り当てられていない場合、ユーザーがこの Label コントロールの上にマウスを移動すると、自動表示される「切り詰めヒント」にプレーンテキスト全体が表示されます。</p>
 
  <p>Label コントロールは境界線を持たず、フォーカスを取得できません。</p>
 
  <p>Label コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>テキスト全体を表示できるだけの幅と高さです。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>10000 x 10000 ピクセル</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LabelExample.mxml"><swfblock conref="examples/LabelExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Text"><linktext>mx.controls.Text</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link></related-links><adobeApiEvent id="mx.controls:Label_flash.events.TextEvent.LINK_link"><apiName>link</apiName><shortdesc> 
  HTML が有効になっているテキストフィールドで、URL が「event:」で始まるハイパーリンクをユーザーがクリックしたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.LINK</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
  HTML が有効になっているテキストフィールドで、URL が <codeph>"event:"</codeph> で始まるハイパーリンクをユーザーがクリックしたときに送出されます。 <codeph>"event"</codeph> の後の URL の部分は、<codeph>link</codeph> イベントオブジェクトの text プロパティ内に配置されます。
 
  <p><codeph>link</codeph> イベントを扱う場合、ハイパーリンクは自動的には実行されません。イベントハンドラー内から手動でハイパーリンクを実行する必要があります。 通常、<codeph>navigateToURL()</codeph> メソッドを使用してハイパーリンクを実行します。 これにより、アプリケーション内でハイパーリンクを変更でき、場合によってはハイパーリンクの実行を禁止することもできます。 </p>
 
  <p>Label コントロールで <codeph>selectable</codeph> プロパティを <codeph>true</codeph> に設定して <codeph>link</codeph> イベントを生成できるようにする必要があります。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Label_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使う場合、<codeph>data</codeph> プロパティは表示するデータを保持します。 このイベントを受け取って、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新することができます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Label:Label"><apiName>Label</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Label:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      コントロールにあるテキスト行のテキストの位置と寸法に関する情報を持つ TextLineMetrics オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>テキストに関する情報を含む TextLineMetrics オブジェクトです。
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>メトリックを取得する行の、0 から始まるインデックスです。1 行のみで構成する Label コントロールでは 0 でなければなりません。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      コントロールにあるテキスト行のテキストの位置と寸法に関する情報を持つ TextLineMetrics オブジェクトを返します。正しい数値を取得するには、コンポーネントを検証する必要があります。<codeph>text</codeph> を設定した直後に <codeph>getLineMetrics()</codeph> を呼び出すと、正しくない値を受け取ることがあります。 コンポーネントが検証されるまで待つか、<codeph>validateNow()</codeph> を呼び出します。 この動作は、値を直ちに更新する flash.text.TextField クラスの動作とは異なります。
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiValue id="mx.controls:Label:protected:textField"><apiName>textField</apiName><shortdesc>
      この Label のテキストを表示するための内部 UITextField です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      この Label のテキストを表示するための内部 UITextField です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:truncateToFit"><apiName>truncateToFit</apiName><shortdesc>
      このプロパティが true で、Label コントロールのサイズがテキストよりも小さい場合、Label コントロールのテキストは、"..." などのローカライズ可能なストリングを使用して省略表示されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      このプロパティが <codeph>true</codeph> で、Label コントロールのサイズがテキストよりも小さい場合、Label コントロールのテキストは、<codeph>"..."</codeph> などのローカライズ可能なストリングを使用して省略表示とされます。 このプロパティが <codeph>false</codeph> の場合、コントロールに収まらないテキストは切り捨てられます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      HTML テキストの Label コントロールから余分な空白文字（スペースや改行など）を削除するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      HTML テキストの Label コントロールから余分な空白文字（スペースや改行など）を削除するかどうかを指定します。
     
      <p><codeph>condenseWhite</codeph> プロパティは、<codeph>htmlText</codeph> プロパティで設定されたテキストにのみ影響し、<codeph>text</codeph> プロパティで設定されたテキストには影響しません。 <codeph>text</codeph> プロパティでテキストを設定した場合、<codeph>condenseWhite</codeph> は無視されます。</p>
     
      <p><codeph>condenseWhite</codeph> プロパティを <codeph>true</codeph> に設定した場合は、テキストフィールド内で改行を指定するには <codeph>&lt;br></codeph> や <codeph>&lt;p></codeph> などの標準の HTML コマンドを使用する必要があります。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:data:get"><apiName>data</apiName><shortdesc>
      アイテムレンダラーまたはアイテムエディターでコンポーネントを使用するときに、そのコンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーまたはアイテムエディターでコンポーネントを使用するときに、そのコンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてコントロールを使用すると、アイテムの現在の値が、このコントロールの <codeph>text</codeph> プロパティに自動的に書き込まれます。</p>
     
      <p>MXML でこのプロパティを設定することはありません。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      このコンポーネントのフォントコンテキストを提供するモジュールファクトリです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      このコンポーネントのフォントコンテキストを提供するモジュールファクトリです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Label コントロールで表示するテキストを、そのテキストのスタイルを表す HTML マークアップも含め、指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Label コントロールで表示するテキストを、そのテキストのスタイルを表す HTML マークアップも含め、指定します。 このプロパティで HTML テキストを指定する場合は、Flash TextField コントロールでサポートされている HTML タグのサブセットを使用できます。
     
      <p>このプロパティを設定すると、Label インスタンスに CSS スタイルが適用された後に HTML マークアップが適用されます。このプロパティを取得すると、HTML マークアップに CSS スタイルが適用されます。</p>
      
      <p>たとえば、<codeph>「This is an example of &lt;b>bold&lt;/b> markup」</codeph>,というストリングを設定した場合、Label には、通常適用される CSS スタイルが適用された 「This is an example of <b>bold</b> markup」というテキストが表示されます。 また、<codeph>&lt;b></codeph> のマークアップによって、「bold」という単語がボールド体のフォントで表示されます。</p>
     
      <p>HTML マークアップでは、&lt; や > などの文字を使用します。これらの文字は、XML では特別な意味を持っています（MXML でも同じです）。 したがって、次のようなコードはコンパイルされません。</p>
      
      <pre>
      &lt;mx:Label htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>この問題を回避するには、3 つの方法があります。</p>
      
      <ul>
      
      <li>
      
      <p><codeph>htmlText</codeph> プロパティを、<codeph>initialize</codeph> ハンドラーとして呼び出される Action Script メソッドで次のように設定します。</p>
      
      <pre>
      &lt;mx:Label id="myLabel" initialize="myLabel_initialize()"/>
      </pre>
      
      <p><codeph>myLabel_initialize</codeph> メソッドは、次のようにスクリプトの CDATA セクションに記述します。</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myLabel_initialize():void {
          myLabel.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>マークアップの読みやすさが保たれるので、これが最も単純な方法です。 ラベルに <codeph>id</codeph> を割り当てて、<codeph>initialize</codeph> ハンドラーでそのラベルを参照できるようにする必要があります。</p>
      
      </li>
      
      <li>
      
      <p>CDATA セクションを持つ子タグを使用して、<codeph>htmlText</codeph> プロパティを指定します。 XML の CDATA セクションには、&lt; や > などの文字が特別な意味を持たない文字データが含まれます。</p>
      
      <pre>
      &lt;mx:Label>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:Label/>
      </pre>
      
      <p><codeph>htmlText</codeph> プロパティは、<codeph>&lt;mx:Label></codeph> タグでは属性ではなく子タグとして記述する必要があります。これは、XML では属性の値に CDATA を使用できないためです。 この方法でもマークアップは読み取れますが、CDATA セクションが存在することで複雑になります。</p>
      
      </li>
      
      <li>
      
      <p>属性値内の HTML マークアップ文字 &lt; と > が書き込まれるところでは、<codeph>hmtlText</codeph> 属性を使用します。XML エンティティの <codeph>&amp;lt;</codeph> と <codeph>&amp;gt;</codeph> は使用しません。</p>
      
      <pre>
      &lt;mx:Label htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      HTML マークアップの読み取りがほとんど不可能になるので、この方法はお勧めしません。
      
      </li>
      
      </ul>
      
      <p><codeph>condenseWhite</codeph> プロパティが <codeph>true</codeph> の場合、<codeph>htmlText</codeph> プロパティが設定されていると、複数の空白文字は、HTML 対応ブラウザーと同じように圧縮されます。例えば、3 つの連続するスペースは、1 つのスペースとして表示されます。 <codeph>condenseWhite</codeph> の既定値は <codeph>false</codeph> なので、空白文字を圧縮するには <codeph>condenseWhite</codeph> を <codeph>true</codeph> に設定する必要があります。</p>
      
      <p><codeph>htmlText</codeph> プロパティの設定直後にそれを読み込んだ場合は、設定したものと同じストリングが取得されます。 ただし、LayoutManager の実行後には、値は変更され、CSS スタイルを含むマークアップが追加されます。</p>
      
      <p><codeph>htmlText</codeph> プロパティの設定は、様々な方法で <codeph>text</codeph> プロパティに影響を与えます。 <codeph>text</codeph> プロパティを、<codeph>htmlText</codeph> プロパティの設定直後に読み込むと、<codeph>null</codeph> が取得されます。これは、<codeph>text</codeph> が、新しい <codeph>htmlText</codeph> に対応するプロパティとして確定していないことを示しています。 ただし、LayoutManager を実行すると、<codeph>text</codeph> プロパティの値は、<codeph>htmlText</codeph> ストリングからすべての HTML マークアップが削除されたストリングに変更されます。つまり、Label に実際に表示される文字になります。</p>
       
      <p>逆に、<codeph>text</codeph> プロパティを設定しても、すでに設定されている <codeph>htmlText</codeph> はどれも無関係です。 <codeph>htmlText</codeph> プロパティの読み込みを <codeph>text</codeph> プロパティの設定直後に行うと、<codeph>null</codeph> が取得されます。これは、<codeph>htmlText</codeph>（新しい <codeph>text</codeph> に対応）がまだ決定されていないことを示します。 ただし、LayoutManager を実行すると、<codeph>htmlText</codeph> プロパティの値は、新しいテキストに CSS スタイルの HTML マークアップが追加された値に変更されます。</p>
     
      <p>LayoutManager をただちに実行するには、Label で <codeph>validateNow()</codeph> メソッドを呼び出します。 たとえば、何らかの <codeph>htmlText</codeph> を設定した後、すぐに <codeph>validateNow()</codeph> メソッドを呼び出すと、対応する <codeph>text</codeph> が HTML マークアップを持たない状態でただちに取得できます。</p>
      
      <p>ActionScript の中に <codeph>text</codeph> プロパティと <codeph>htmlText</codeph> プロパティの両方を設定した場合は、最後に設定されたプロパティが有効になります。 MXML では両方設定しないでください。これは、MXML ではインスタンスのプロパティの取得を特定の順序で設定することが保証されていないためです。</p>
      
      <p><codeph>text</codeph> プロパティまたは <codeph>htmlText</codeph> プロパティをループの中に設定すると処理が速くなります。これは、テキストを実際に表示する TextField が、LayoutManager が実行されるまでは更新されないためです。</p>
     
      <p>このプロパティを <codeph>null</codeph> に設定しようとした場合は、代わりに空のストリングに設定されます。 このプロパティの値が一時的に <codeph>null</codeph> になった場合、<codeph>text</codeph> が設定されたばかりで、対応する <codeph>htmlText</codeph> がまだ認識されていないことを意味します。</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてこのコンポーネントを使用すると、その listData プロパティが、List コントロールの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとしてこのコンポーネントを使用すると、その <codeph>listData</codeph> プロパティが、List コントロールの該当するデータで初期化されます。 その後、このコンポーネントでは、この <codeph>listData</codeph> プロパティを使用して、ドロップインアイテムレンダラーまたはドロップインアイテムエディターの <codeph>data</codeph> プロパティを初期化できます。
     
      <p>MXML および ActionScript でこのプロパティを設定することはありません。このコンポーネントがドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用されるときに、Flex でプロパティが設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:selectable:get"><apiName>selectable</apiName><shortdesc>
      テキストが選択可能であるかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      テキストが選択可能であるかどうかを指定します。 テキストを選択可能にすると、コントロールのテキストをコピーできます。
     
      <p>Label コントロールで <codeph>link</codeph> イベントが指定されている場合は、<codeph>selectable</codeph> プロパティを <codeph>true</codeph> に設定して <codeph>link</codeph> イベントを実行する必要があります。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
     Label コントロールのテキスト上でレンダリングを実行できる flash.text.StyleSheet オブジェクトです。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:StyleSheet"/><apiDefaultValue>null
    </apiDefaultValue></apiValueDef><apiDesc>
     Label コントロールのテキスト上でレンダリングを実行できる flash.text.StyleSheet オブジェクトです。このプロパティは、テキストに対する HTML スタイルを詳細に制御する場合に使用します。詳細については、flash.text.StyleSheet クラスの説明を参照してください。
    
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.StyleSheet.xml"><linktext>flash.text.StyleSheet</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:text:get"><apiName>text</apiName><shortdesc>
      このコントロールで表示されるプレーンテキストを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3907
     
     </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>Label コンテンツを取得または設定します。
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      このコントロールで表示されるプレーンテキストを指定します。その外観は、この Label コントロールの CSS スタイルによって決定されます。
     
      <p>このプロパティを設定すると、ストリングの中では HTML マークアップのように見える文字であっても特別な意味を持たなくなり、単に入力されたとおりの文字として表示されます。</p>
     
      <p>HTML タグを使用してフォーマットされたテキストを表示するには、代わりに <codeph>htmlText</codeph> プロパティを使用します。 <codeph>htmlText</codeph> プロパティを設定している場合は、このプロパティを使用して設定したテキストがすべて HTML で置き換えられ、<codeph>text</codeph> プロパティには HTML テキストから HTML タグを除いたプレーンテキストが返されます。</p>
     
      <p>特殊文字である左山括弧（&lt;）、右山括弧（>）またはアンパサンド（&amp;）をテキストに記述する場合は、CDATA タグでそのテキストストリングを囲む必要があります。 特殊文字の代わりに、<codeph>&amp;lt;</codeph> などの HTML 文字エンティティを使用できます。</p>
     
      <p>Label コントロールよりテキストの幅の方が大きい場合、テキストは省略記号（...）で切り詰められ、最後まで表示されません。 マウスを Label コントロール上に移動すると、テキスト全体がツールヒントとして表示されます。 <codeph>tooltip</codeph> プロパティを使用してツールヒントを設定した場合にも、テキストでなくツールヒントが表示されます。</p>
     
      <p>このプロパティに <codeph>null</codeph> を指定すると、代わりに空のストリングが設定されます。 <codeph>text</codeph> プロパティには、値 <codeph>null</codeph> を一時的に設定できます。これは、<codeph>htmlText</codeph> が最近設定され、対応する <codeph>text</codeph> 値がまだ決定されていないことを示します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      テキストの高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      テキストの高さです。
     
      <p><codeph>textHeight</codeph> プロパティの値は、コンポーネントが検証された後でのみ正しい値になります。 <codeph>text</codeph> を設定し、その直後に <codeph>textHeight</codeph> を取得した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、値を取得する前に <codeph>validateNow()</codeph> メソッドを呼び出します。 この動作は、値を直ちに更新する flash.text.TextField コントロールの動作とは異なります。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      テキストの幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      テキストの幅です。
     
      <p><codeph>textWidth</codeph> プロパティの値は、コンポーネントが検証された後でのみ正しい値になります。 <codeph>text</codeph> を設定し、その直後に <codeph>textWidth</codeph> を取得した場合は、間違った値を受け取る可能性があります。 コンポーネントが検証されるまで待つか、値を取得する前に <codeph>validateNow()</codeph> メソッドを呼び出します。 この動作は、値を直ちに更新する flash.text.TextField コントロールの動作とは異なります。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:TabBar"><apiName>TabBar</apiName><shortdesc>
  TabBar コントロールを使用すると、各タブに関連付けるラベルおよびデータを定義して、ナビゲーションアイテムの水平グループまたは垂直グループを作成することができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="lastButtonStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="firstButtonStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  タブナビゲーションアイテムの間の垂直方向の間隔を示すピクセル数です。
 
  </description>
<default>-1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="top,middle,bottom" inherit="no" name="verticalAlign" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
 TabBar に含まれるすべてのタブの垂直方向の配置です。個々のタブは TabBar 全体まで引き伸ばされるため、このスタイルは、tabHeight スタイルを使用し、タブを組み合わせた高さが TabBar の高さよりも小さい場合にのみ役立ちます。 有効な値は、<codeph>"top"</codeph>、<codeph>"middle"</codeph> および <codeph>"bottom"</codeph> です。
 
 </description>
<default>"middle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabWidth" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  ピクセル単位で表したタブナビゲーションアイテムの幅です。 undefined の場合、タブのデフォルト幅はラベルテキストから計算されます。
 
  </description>
<default>undefined 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabHeight" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  ピクセル単位で表した各タブナビゲーションアイテムの高さです。 このプロパティが <codeph>undefined</codeph> の場合、各タブの高さは、コンテナに適用されるフォントスタイルによって決定されます。 このプロパティを設定すると、この計算よりも設定値が優先されます。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="tabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  タブナビゲーションアイテムのスタイルを指定する CSS スタイル宣言の名前です。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedTabTextStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  選択されたタブナビゲーションアイテムのテキストに適用するスタイルを指定する CSS スタイル宣言の名前です。 
 
  </description>
<default>"activeTabStyle" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="lastTabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  最後のタブナビゲーションアイテムのスタイルを指定する CSS スタイル宣言の名前です。 
  
  </description>
<default>"tabStyleName" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  タブナビゲーションアイテムの間の水平方向の間隔を示すピクセル数です。
 
  </description>
<default>-1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
 TabBar に含まれるすべてのタブの水平方向の配置です。個々のタブは TabBar 全体まで引き伸ばされるため、このスタイルは、tabWidth スタイルを使用し、タブを組み合わせた幅が TabBar の幅よりも小さい場合にのみ役立ちます。 有効な値は、<codeph>"left"</codeph>、<codeph>"center"</codeph> および <codeph>"right"</codeph> です。
 
 </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="firstTabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  最初のタブナビゲーションアイテムのスタイルを指定する CSS スタイル宣言の名前です。 
  
  </description>
<default>"tabStyleName"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TabBar&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:TabBar
    <b>Styles</b>
    firstTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    horizontalAlign="left|center|right"
    horizontalGap="-1"
    lastTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    selectedTabTextStyleName="activeTabStyle"
    tabHeight="undefined"
    tabStyleName="Tab"
    tabWidth="undefined"
    verticalAlign="top|middle|bottom"
    verticalGap="-1"
 
    <b>Events</b>
    itemClick="<i>No default</i>"
    &gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:TabBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ToggleButtonBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  TabBar コントロールを使用すると、各タブに関連付けるラベルおよびデータを定義して、ナビゲーションアイテムの水平グループまたは垂直グループを作成することができます。デフォルトで複数のビューに関連付けられていないタブを作成するには、TabNavigator コンテナの代わりに TabBar コントロールを使用します。
 
  <p>TabBar コントロールを使用すると、タブがデータから直接決定されるため、ビューを様々な方法で変更できます。</p>
 
  <p>TabBar コントロールには次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>推奨サイズ</entry>
           <entry>すべてのラベルテキストを設定された追加スペースと共に表示できる幅と、ラベルテキストを表示できる高さです。デフォルトのタブの高さは、コントロールに適用されるフォント、スタイルおよびスキンによって決まります。tabHeight プロパティを使用して明示的に高さを設定すると、その値によってデフォルト値がオーバーライドされます。</entry>
        </row><row>
           <entry>コントロールのサイズ変更規則</entry>
           <entry>デフォルトでは、TabBar コントロールのサイズは変更されません。親コンテナのサイズに合わせて TabBar のサイズを変更する場合は、パーセント値でサイズを指定します。</entry>
        </row><row>
           <entry>パディング</entry>
           <entry>left および right の各プロパティは、0 ピクセルに設定されています。</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TabBarExample.mxml"><swfblock conref="examples/TabBarExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:TabBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  タブナビゲーションアイテムが選択されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  タブナビゲーションアイテムが選択されたときに送出されます。このイベントは、データプロバイダーが ViewStack コンテナではない場合のみ送信されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TabBar:TabBar"><apiName>TabBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:RadioButton"><apiName>RadioButton</apiName><shortdesc>
  RadioButton コントロールを使用すると、一連の相互排他的な選択肢の中から 1 つだけをユーザーに選択させることができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="toggle"/><Exclude kind="property" name="emphasized"/><Alternative owner="mx.controls:RadioButton" replacement="spark.components.RadioButton" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:RadioButton" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのシンボルのカラーです。CheckBox のチェックマークや ScrollBar ボタンの矢印などがあります。
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:RadioButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:RadioButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされていない場合は <codeph>0x111111</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:RadioButton&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:RadioButton
    <strong>Properties</strong>
    groupName=""
    labelPlacement="right|left|top|bottom"
  
    <strong>Styles</strong>
    disabledIconColor="0x999999"
    iconColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerGroup</apiBaseInterface><apiBaseInterface>mx.core:IToggleButton</apiBaseInterface><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  RadioButton コントロールを使用すると、一連の相互排他的な選択肢の中から 1 つだけをユーザーに選択させることができます。 RadioButton グループは、同じ <codeph>groupName</codeph> プロパティを持つ複数の RadioButton コントロールで構成されます。 RadioButton インスタンスを RadioButtonGroup にグループ化することはオプションですが、グループ化を行うと、例えば、単一のイベントハンドラーを個々のボタンではなく、ボタングループで設定できます。RadioButton グループでは、<codeph>&lt;mx:RadioButtonGroup></codeph> タグで作成したグループを参照できます。 ユーザーは、グループ内のメンバーを一度に 1 つのみ選択できます。 選択されていないグループメンバーを選択すると、同じグループ内でそれまで選択されていた RadioButton コントロールは選択解除されます。 
 
  <p>RadioButton コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>コントロールのテキストラベル全体を表示できる幅です。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>未定義</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="RadioButtonExample.mxml"><swfblock conref="examples/RadioButtonExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#RadioButtonGroup"><linktext>mx.controls.RadioButtonGroup</linktext></link></related-links><apiConstructor id="mx.controls:RadioButton:RadioButton"><apiName>RadioButton</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:RadioButton:group:get"><apiName>group</apiName><shortdesc>
      この RadioButton が属する RadioButtonGroup オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:RadioButtonGroup</apiValueClassifier><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      この RadioButton が属する RadioButtonGroup オブジェクトです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:groupName:get"><apiName>groupName</apiName><shortdesc>
      この RadioButton コントロールが属するグループの名前を指定します。または、この RadioButton が RadioButtonGroup コントロールによって定義されたグループの一部の場合は、RadioButtonGroup コントロールの id プロパティの値を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiException><apiDesc>Flex 4 以降のバージョンを使用していて、groupName が「_fx_」という文字列で始まる場合は、ArgumentError がスローされます。 
      
      </apiDesc><apiItemName>ArgumentError</apiItemName><apiOperationClassifier>ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>"undefined"
      </apiDefaultValue></apiValueDef><apiDesc>
      この RadioButton コントロールが属するグループの名前を指定します。または、この RadioButton が RadioButtonGroup コントロールによって定義されたグループの一部の場合は、RadioButtonGroup コントロールの <codeph>id</codeph> プロパティの値を指定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      RadioButton アイコンに対するラベルの配置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ButtonLabelPlacement.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      RadioButton アイコンに対するラベルの配置です。 MXML で使用できる値は <codeph>"right"</codeph>、<codeph>"left"</codeph>、<codeph>"bottom"</codeph> および <codeph>"top"</codeph> です。
     
      <p>ActionScript では、このプロパティを設定するために、<codeph>ButtonLabelPlacement.RIGHT</codeph>、<codeph>ButtonLabelPlacement.LEFT</codeph>、<codeph>ButtonLabelPlacement.BOTTOM</codeph> および <codeph>ButtonLabelPlacement.TOP</codeph> の各定数を使用します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:value:get"><apiName>value</apiName><shortdesc>
      （オプション）RadioButton コントロールに関連付けられるユーザー定義値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      （オプション）RadioButton コントロールに関連付けられるユーザー定義値です。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HorizontalList"><apiName>HorizontalList</apiName><shortdesc>
  HorizontalList コントロールには、アイテムの横並びのリストが表示されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="variableRowHeight"/><Exclude kind="property" name="maxRows"/><Exclude kind="property" name="maxColumns"/><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HorizontalList" replacement="spark.components.List" since="4.0">
<description>
  Flex 3 のレイアウト固有の List コンポーネントは、汎用レイアウトを使用する、より汎用的な List コンポーネントで置き換えられています。新しい List コンポーネントから同様の動作を取得するには、<codeph>layout</codeph> プロパティを <codeph>HorizontalLayout</codeph> に設定します。
 </description>
	</Alternative><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:HorizontalList&gt;</code> tag inherits all of the 
  tag attributes of its superclass and it adds no new tag attributes.</p>
 
  <pre>
  &lt;mx:HorizontalList/&gt
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:TileBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  HorizontalList コントロールには、アイテムの横並びのリストが表示されます。一度にすべてのアイテムを表示できない場合は、水平スクロールバーが表示され、ユーザーがリストのすべてのアイテムにアクセスできるようになります。
 
  <p>HorizontalList コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>4 列、サイズはセルのサイズによって決定されます。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>5000 × 5000</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="HorizontalListExample.mxml"><swfblock conref="examples/HorizontalListExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:HorizontalList:HorizontalList"><apiName>HorizontalList</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  コンストラクターです。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ToggleButtonBar"><apiName>ToggleButtonBar</apiName><shortdesc>
  ToggleButtonBar コントロールは、選択状態または選択解除状態を維持しているボタンが水平方向に並んだグループまたは垂直方向に並んだグループを定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Alternative owner="mx.controls:ToggleButtonBar" replacement="spark.components.ButtonBar" since="4.0">
	</Alternative><styles><style inherit="no" name="selectedButtonTextStyleName" owner="mx.controls:ToggleButtonBar" playerVersion="Flash9" type="String">
<description>
  選択されたボタンのテキストのスタイルを指定する CSS スタイル宣言の名前です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ToggleButtonBar&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ToggleButtonBar
    <b>Properties</b>
    selectedIndex="0"
    toggleOnClick="false|true"
 
    <b>Styles</b>
    selectedButtonTextStyleName="<i>Name of CSS style declaration that specifies styles for the text of the selected button.</i>"&gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:ToggleButtonBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ButtonBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  ToggleButtonBar コントロールは、選択状態または選択解除状態を維持しているボタンが水平方向に並んだグループまたは垂直方向に並んだグループを定義します。ToggleButtonBar コントロールで 1 つのボタンだけが選択状態になることができます。つまり、ToggleButtonBar コントロールでいずれかのボタンを選択すると、別のボタンを選択するまでそのボタンは選択状態を維持します。
 
  <p>ToggleButtonBar コンテナの <codeph>toggleOnClick</codeph> プロパティを <codeph>true</codeph> に設定した場合は、現在選択状態になっているボタンを選択すると、そのボタンは選択解除状態になります。 デフォルトでは、<codeph>toggleOnClick</codeph> プロパティは <codeph>false</codeph> に設定されています。</p>
 
  <p>ButtonBar コントロールを使用してプッシュボタンのグループを定義できます。</p>
 
  <p>トグルボタンの主な用途は、一連のオプションの中で選択内容を維持することです。例えば、ViewStack コンテナでビューを切り替える場合です。</p>
 
  <p>ToggleButtonBar コントロールは、その <codeph>dataProvider</codeph> プロパティの値に基づいて Button コントロールを作成します。 ToggleButtonBar は Container のサブクラスですが、<codeph>Container.addChild()</codeph> や <codeph>Container.removeChild()</codeph> などのメソッドを使用して Button コントロールを追加または削除しないでください。 代わりに、<codeph>addItem()</codeph>、<codeph>removeItem()</codeph> などのメソッドを使用して <codeph>dataProvider</codeph> プロパティを操作してください。 ToggleButtonBar コントロールは、<codeph>dataProvider</codeph> プロパティへの変更に基づいて、自動的に必要な子を追加または削除します。</p>
 
  <p>ToggleButtonBar コントロールのボタンスタイルを操作するには、<codeph>buttonStyleName</codeph>、<codeph>firstButtonStyleName</codeph> および <codeph>lastButtonStyleName</codeph> スタイルプロパティを使用します。ToggleButtonBar コントロールを構成する個々の Button コントロールには、スタイルを設定しないでください。</p>
 
  <p>ToggleButtonBar コントロールには、次のデフォルトの特性があります。</p>
  <adobetable class="innertable">
     
     
     
      
    
  <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
        <entry>推奨サイズ</entry>
        <entry>ラベルテキストを含むすべてのボタンとアイコンを、必要な追加スペースおよびセパレーターと共に表示できる幅です。</entry>
     </row><row>
        <entry>コントロールのサイズ変更規則</entry>
        <entry>デフォルトでは、コントロールのサイズは変更されません。親コンテナのサイズに合わせて ToggleButtonBar のサイズを変更する場合は、パーセント値でサイズを指定します。</entry>
     </row><row>
        <entry>selectedIndex</entry>
        <entry>コントロールが作成されたときに、どのボタンが選択された状態になるか決定します。デフォルト値は「0」で、バーの一番左のボタンが選択されます。selectedIndex を「-1」に設定すると、バーのすべてのボタンが選択解除されます。</entry>
     </row><row>
        <entry>パディング</entry>
        <entry>top、bottom、left および right の各プロパティは 0 ピクセルに設定されています。</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ToggleButtonBarExample.mxml"><swfblock conref="examples/ToggleButtonBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><apiConstructor id="mx.controls:ToggleButtonBar:ToggleButtonBar"><apiName>ToggleButtonBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:ToggleButtonBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      選択されたボタンのインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      選択されたボタンのインデックスです。インデックスは、0、1、2 ～ n - 1 の範囲で、<i>n</i> はボタンの数です。
     
      <p>デフォルト値は 0 です。値を -1 にすると、バーのすべてのボタンが選択解除されます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToggleButtonBar:toggleOnClick:get"><apiName>toggleOnClick</apiName><shortdesc>
      現在選択されているボタンをユーザーが選択解除できるかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      現在選択されているボタンをユーザーが選択解除できるかどうかを指定します。 デフォルトでは、現在選択されているボタンは、同じグループにある別のボタンを選択したときにのみ、自動的に選択解除されます。 このプロパティを <codeph>true</codeph> に設定すると、選択されているボタンをユーザーが選択解除できます。 現在選択されているボタンを選択解除すると、<codeph>selectedIndex</codeph> プロパティは <codeph>-1</codeph> に設定されます。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HRule"><apiName>HRule</apiName><shortdesc>
  HRule コントロールは単一の水平の線を作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:HRule" replacement="spark.primitives.Line" since="4.0">
	</Alternative><styles><style format="Length" inherit="yes" name="strokeWidth" owner="mx.controls:HRule" playerVersion="Flash9" type="Number">
<description>
  罫線の太さです（ピクセル単位）。
  <ul>
    <li><codeph>strokeWidth</codeph> が 1 の場合、罫線は 1 ピクセル幅の線です。</li>
    <li><codeph>strokeWidth</codeph> が 2 の場合、罫線は 1 ピクセル幅の水平線を 2 本並べたものになります。</li>
    <li><codeph>strokeWidth</codeph> が 2 より大きい場合、罫線は 1 ピクセル幅のエッジを持つ中空の長方形です。</li>
  </ul>
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="strokeColor" owner="mx.controls:HRule" playerVersion="Flash9" type="uint">
<description>
  線の色です。 
  <ul>
    <li><codeph>strokeWidth</codeph> が 1 の場合、strokeColor は線全体の色になります。</li>
    <li><codeph>strokeWidth</codeph> が 2 の場合、strokeColor は上側の線の色になります。</li>
    <li><codeph>strokeWidth</codeph> が 2 より大きい場合は、strokeColor は長方形の上辺および左辺の色になります。</li>
  </ul> 
  
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="shadowColor" owner="mx.controls:HRule" playerVersion="Flash9" type="uint">
<description>
  線の影の色です。 
  <ul>
    <li><codeph>strokeWidth</codeph> が 1 の場合、shadowColor は使用されません。</li>
    <li><codeph>strokeWidth</codeph> が 2 の場合、shadowColor は下側の線の色になります。</li>
    <li><codeph>strokeWidth</codeph> が 2 より大きい場合、shadowColor は長方形の下辺および右辺の色になります。</li>
  </ul>
 
  </description>
<default>0xEEEEEE
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HRule&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:HRule
    <strong>Styles</strong>
    strokeColor="0xC4CCCC"
    shadowColor="0xEEEEEE"
    strokeWidth="2"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  HRule コントロールは単一の水平の線を作成します。 このコントロールは通常、コンテナ内に境界線を作成するために使用します。
 
  <p>HRule コントロールには、次のデフォルトプロパティがあります。</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>デフォルトでは、幅は 100 ピクセル、高さが 2 ピクセルになります。デフォルトでは、HRule コントロールのサイズは不変です。サイズ変更を有効にするには、width と height にパーセント値を指定します。</entry>
        </row><row>
           <entry>strokeWidth</entry>
           <entry>2 ピクセル</entry>
        </row><row>
           <entry>strokeColor</entry>
           <entry>0xC4CCCC</entry>
        </row><row>
           <entry>shadowColor</entry>
           <entry>0xEEEEEE</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleHRule.mxml"><swfblock conref="examples/SimpleHRule.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#VRule"><linktext>mx.controls.VRule</linktext></link></related-links><apiConstructor id="mx.controls:HRule:HRule"><apiName>HRule</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:PopUpButton"><apiName>PopUpButton</apiName><shortdesc> 
  PopUpButton コントロールは、Button コントロールにポップアップコントロールのインターフェイスを追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="selectedUpSkin"/><Exclude kind="style" name="selectedUpIcon"/><Exclude kind="style" name="selectedOverSkin"/><Exclude kind="style" name="selectedOverIcon"/><Exclude kind="style" name="selectedDownSkin"/><Exclude kind="style" name="selectedDownIcon"/><Exclude kind="style" name="selectedDisabledSkin"/><Exclude kind="style" name="selectedDisabledIcon"/><Exclude kind="property" name="toggle"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:PopUpButton" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのシンボルのカラーです。CheckBox のチェックマークや ScrollBar ボタンの矢印などがあります。
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  コントロールのデフォルトのステートフルなスキンクラスです。
  </description>
<default>mx.skins.halo.PopUpButtonSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpOverSkin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  背景と境界線の popUpOver 状態（arrowButton の上）のスキンクラスです。
  </description>
<default>mx.skins.halo.PopUpButtonSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpIcon" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  PopUpButton の右のボタンに使用されるアイコンです。サポートされるクラスは、mx.skins.halo.PopUpIcon および mx.skins.halo.PopUpMenuIcon です。
  </description>
<default>mx.skins.halo.PopUpIcon
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="popUpGap" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  PopUpButton と指定のポップアップ UIComponent 間の垂直方向のピクセル数です。デフォルト値は 0 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpDownSkin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  背景と境界線の popUpDown 状態（arrowButton がダウン状態である場合）のスキンクラスです。
  </description>
<default>mx.skins.halo.PopUpButtonSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpStyleName" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="String">
<description>
  コントロールが使用する CSS スタイル宣言の名前です。このスタイルにより、このコントロールからポップアップされる UIComponent オブジェクトの外観を制御できます。 
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Function">
<description>
  コンポーネント開始トゥイーンを制御するためのイージング関数です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  開いた状態へのトランジションにかかる時間の長さ（ミリ秒単位）です。デフォルト値は 250 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="icon" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  メインボタンのデフォルトのアイコンクラスです。
 
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Function">
<description>
  コンポーネント終了トゥイーンを制御するためのイージング関数です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  閉じた状態へのトランジションにかかる時間の長さ（ミリ秒単位）です。デフォルト値は 250 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="arrowButtonWidth" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  境界線とコンポーネントの右端間のピクセル数です。デフォルト値は 16 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:PopUpButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:PopUpButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x111111</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:PopUpButton&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:PopUpButton
    <strong>Properties</strong> 
    openAlways="false|true
    popUp="No default"
  
    <strong>Styles</strong>
    arrowButtonWidth="16"
    closeDuration="250"
    closeEasingFunction="No default"
    disabledIconColor="0x999999"
    iconColor="0x111111"
    openDuration="250"
    openEasingFunction="No default"
    popUpDownSkin="popUpDownSkin"
    popUpGap="0"
    popUpIcon="PopUpIcon"
    popUpOverSkin="popUpOverSkin"
  
    <strong>Events</strong>
    close="No default"
    open="No default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc> 
  PopUpButton コントロールは、Button コントロールにポップアップコントロールのインターフェイスを追加します。 ポップアップボタンと呼ばれるメインボタンと小さなボタンを持ち、ユーザーがボタンをクリックすると、任意の UIComponent オブジェクトをポップアップします。 
 
  <p>PopUpMenuButton コントロールの表面には、テキストラベル、アイコンのいずれか、または両方を表示できます。 PopUpButton コントロールの左のメインボタンをユーザーがクリックすると、<codeph>click</codeph> イベントが送出されます。</p>
 
  <p>PopUpButton コントロールの一般的な使用法の 1 つとして、ポップアップボタンで、メインボタンの機能やラベルを変更する List コントロールや Menu コントロールを開くことが挙げられます。</p>
 
  <p>PopUpButton コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>メインボタンのラベルとアイコンおよびポップアップボタンのアイコンを表示するのに十分な幅です。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>未定義</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="PopUpButtonExample.mxml"><swfblock conref="examples/PopUpButtonExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:PopUpButton_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  指定した UIComponent が開いたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  指定した UIComponent が開いたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:PopUpButton_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  指定した UIComponent が閉じたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  指定した UIComponent が閉じたときに送出されます。 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:PopUpButton:PopUpButton"><apiName>PopUpButton</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:PopUpButton:close"><apiName>close</apiName><shortdesc>
      PopUpButton コントロールによって開かれた UIComponent オブジェクトを閉じます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      PopUpButton コントロールによって開かれた UIComponent オブジェクトを閉じます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:PopUpButton:open"><apiName>open</apiName><shortdesc>
      popUp プロパティによって指定された UIComponent オブジェクトを開きます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      <codeph>popUp</codeph> プロパティによって指定された UIComponent オブジェクトを開きます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:PopUpButton:closeOnActivity:get"><apiName>closeOnActivity</apiName><shortdesc>
      true の場合は、クリックまたは他のユーザー操作でポップアップコントロールが閉じることを示します。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true 
     </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合は、クリックまたは他のユーザー操作でポップアップコントロールが閉じることを示します。ポップアップコントロールは、ポップアップボタンをクリックすると開くコントロールです。
     
      <p>Menu、List または TileList などのポップアップコントロールの場合は、操作によって閉じる必要があるので、このプロパティをデフォルト値の <codeph>true</codeph> のままにできます。ただし、複数選択できるポップアップコントロールや他のタイプのポップアップコントロールの場合は、操作によって閉じないように、このプロパティを <codeph>false</codeph> に設定できます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpButton:openAlways:get"><apiName>openAlways</apiName><shortdesc>
      true の場合は、ユーザーがメインボタンをクリックしたときに popUp をポップアップするように指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合は、ユーザーがメインボタンをクリックしたときに <codeph>popUp</codeph> をポップアップするように指定します。 <codeph>popUp</codeph> は、<codeph>openAlways</codeph> プロパティの設定にかかわらず、スペースバーが押されたとき、またはポップアップボタンがクリックされたときに常に表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpButton:popUp:get"><apiName>popUp</apiName><shortdesc>
      UIComponent オブジェクトまたは UIComponent のサブクラスにより定義されるオブジェクトをポップアップすることを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier><apiDefaultValue>null 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      UIComponent オブジェクトまたは UIComponent のサブクラスにより定義されるオブジェクトをポップアップすることを指定します。 例えば、Menu コントロール、TileList コントロールまたは Tree コントロールを指定できます。 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:PopUpMenuButton"><apiName>PopUpMenuButton</apiName><shortdesc>
  PopUpMenuButton コントロールは、メインサブボタンと小さなサブボタンで構成される PopUpButton コントロールを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="selectedUpSkin"/><Exclude kind="style" name="selectedUpIcon"/><Exclude kind="style" name="selectedOverSkin"/><Exclude kind="style" name="selectedOverIcon"/><Exclude kind="style" name="selectedDownSkin"/><Exclude kind="style" name="selectedDownIcon"/><Exclude kind="style" name="selectedDisabledSkin"/><Exclude kind="style" name="selectedDisabledIcon"/><Exclude kind="property" name="toggle"/><styles><style inherit="no" name="popUpStyleName" owner="mx.controls:PopUpMenuButton" playerVersion="Flash9" type="String">
<description>
  ドロップダウンメニューが使用する CSS スタイル宣言の名前です。このプロパティによって、DateChooser コントロールの外観が変更されます。 デフォルト値では、<codeph>fontWeight</codeph> は <codeph>normal</codeph> に設定され、<codeph>textAlign</codeph> は <codeph>left</codeph> に設定されます。
 
  </description>
<default>"popUpMenu"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:PopUpMenuButton&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:PopUpMenuButton
    <strong>Properties</strong>
    dataDescriptor="<i>instance of DefaultDataDescriptor</i>"
    dataProvider="undefined"
    iconField="icon"
    iconFunction="undefined"
    labelField="label"
    labelFunction="undefined"
    showRoot="false|true"
    &nbsp;
    <strong>Event</strong>
    change=<i>No default</i>
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>メニューをポップアップする機能を提供し、ボタンとして機能します。
  </apiTipText></apiTipTexts><apiBaseClassifier>mx.controls:PopUpButton</apiBaseClassifier></apiClassifierDef><apiDesc>
  PopUpMenuButton コントロールは、メインサブボタンと小さなサブボタンで構成される PopUpButton コントロールを作成します。 2 番目（右）のサブボタンをクリックすると、<codeph>dataProvider</codeph> プロパティで指定されたメニューがドロップダウン表示されます。 Menu コントロールや MenuBar コントロールとは異なり、PopUpMenuButton コントロールは単一レベルのメニューのみをサポートします。 したがって、メニューにカスケーティングサブメニューを含めることはできません。
 
  <p>PopUpMenuButton コントロールのメインのサブボタンの表面にはテキストラベル、アイコンまたはその両方が表示されています。 ユーザーがドロップダウンメニューからアイテムを選択するか、または PopUpMenuButton コントロールのメインボタンをクリックすると、このコントロールが <codeph>itemClick</codeph> イベントを送出します。 ユーザーがこのコントロールのメインボタンをクリックしたときは、<codeph>click</codeph> イベントも送出します。 PopUpMenuButton コントロールの外観をカスタマイズできます。</p>
 
  <p>PopUpMenuButton コントロールには、次のようなサイズ設定の特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>メインボタンのラベル、アイコンおよびポップアップボタンのアイコンを表示するのに十分なサイズです。このコントロールは、メニューの領域を確保しません。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>10000 × 10000</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="PopUpButtonMenuExample.mxml"><swfblock conref="examples/PopUpButtonMenuExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link></related-links><adobeApiEvent id="mx.controls:PopUpMenuButton_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  ユーザーがポップアップメニューからアイテムを選択したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがポップアップメニューからアイテムを選択したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:PopUpMenuButton:PopUpMenuButton"><apiName>PopUpMenuButton</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:PopUpMenuButton:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      データ記述子は、データプロバイダーのデータにアクセスし、このデータを操作します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      データ記述子は、データプロバイダーのデータにアクセスし、このデータを操作します。
      <p>このプロパティを MXML の属性として指定する場合、記述子のストリング名ではなく、データ記述子への参照を使用する必要があります。次の形式のプロパティを使用します。</p>
     
      <pre>&lt;mx:PopUpMenuButton id="menubar" dataDescriptor="{new MyCustomDataDescriptor()}"/></pre>
     
      <p>また、次の例に示すように、ネストしたサブタグとして MXML のプロパティを指定できます。</p>
     
      <pre>&lt;mx:PopUpMenuButton>
      &lt;mx:dataDescriptor>
         &lt;myCustomDataDescriptor>
      &lt;/mx:dataDescriptor>
      ...</pre>
     
      <p>デフォルト値は、DefaultDataDescriptor クラスの内部インスタンスです。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      popUpMenu の DataProvider です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      popUpMenu の DataProvider です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:iconField:get"><apiName>iconField</apiName><shortdesc>
      各メニューアイテムに表示するアイコンが格納されている dataProvider 配列のフィールドの名前です。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
     </apiDefaultValue></apiValueDef><apiDesc>
      各メニューアイテムに表示するアイコンが格納されている <codeph>dataProvider</codeph> 配列のフィールドの名前です。<codeph>iconFunction</codeph> プロパティが設定されている場合、このプロパティをオーバーライドします。
     
      <p>アイテムレンダラーは、<codeph>iconField</codeph> プロパティに指定された名前のプロパティをデータプロバイダーで探します。このプロパティの値が Class の場合、そのクラスをインスタンス化し、IFlexDisplayObject のインスタンスと想定します。このプロパティの値が String の場合、その名前の Class プロパティがアプリケーションに存在するかどうかを確認します。アプリケーションにプロパティが見つからない場合は、その名前のプロパティをドキュメントで探し、そのプロパティが Class にマップされると想定します。</p>
     
      <p>データプロバイダーが E4X XML オブジェクトの場合、このプロパティを明示的に設定する必要があります。例えば、@ アイコンを使用して <codeph>icon</codeph> 属性を指定します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:iconFunction:get"><apiName>iconFunction</apiName><shortdesc>
      各メニューアイテムに表示するアイコンを判定する関数です。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
     </apiDefaultValue></apiValueDef><apiDesc>
      各メニューアイテムに表示するアイコンを判定する関数です。このプロパティを省略すると、<codeph>iconField</codeph> プロパティで指定したフィールドまたは属性の値が使用されます。このプロパティを指定した場合、<codeph>iconField</codeph> プロパティの値は無視されます。
     
      <p>デフォルトでは、メニューの行内のテキストにはアイコンは表示されません。ただし、アイコン関数を指定することにより、アイコンとして作成して行に表示するグラフィックの Class を指定できます。  </p>
     
      <p>iconFunction は、データプロバイダー内のアイテムである引数を 1 つ受け取り、Class を返します。</p>
     
      <blockquote>
      <codeph>iconFunction(item:Object):Class</codeph>
      </blockquote>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:labelField:get"><apiName>labelField</apiName><shortdesc>
      各メニューアイテムに表示するテキストが格納されている dataProvider 配列のフィールドの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      各メニューアイテムに表示するテキストが格納されている <codeph>dataProvider</codeph> 配列のフィールドの名前です。 <codeph>labelFunction</codeph> プロパティが設定されている場合、このプロパティをオーバーライドします。 データプロバイダーがストリングの配列である場合、各ストリング値がラベルとして使用されます。 データプロバイダーが E4X XML オブジェクトの場合、このプロパティを明示的に設定する必要があります。例えば、@ ラベルを使用して <codeph>label</codeph> 属性を指定します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      各メニューアイテムに表示するテキストを判定する関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      各メニューアイテムに表示するテキストを判定する関数です。 このプロパティを省略すると、<codeph>labelField</codeph> プロパティで指定したフィールドまたは属性の値が使用されます。 このプロパティを指定した場合、<codeph>labelField</codeph> プロパティの値は無視されます。
     
      <p>このプロパティを指定した場合、ラベル関数で適切なフィールドを検索し、表示可能なストリングを返す必要があります。 <codeph>labelFunction</codeph> プロパティは、フォーマット処理やローカライズにも使用できます。</p>
     
      <p>このラベル関数は、次の例に示すように、dataProvider 内のアイテムである引数を 1 つ受け取り、String を返します。</p>
     
      <pre>labelFunction(item:Object):String</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      データプロバイダーの最上位ノードを表示するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      データプロバイダーの最上位ノードを表示するかどうかを指定します。 <codeph>false</codeph> に設定されている場合、コントロールは最初の最上位ノードの子孫のみを表示します。 他の最上位ノードは無視されます。 通常、E4X 形式の XML データプロバイダーではこのプロパティを <codeph>false</codeph> に設定します。このデータプロバイダーは、最上位ノードがドキュメントオブジェクトです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:popUp:set"><apiName>popUp</apiName><shortdesc>
      ポップアップ Menu オブジェクトへの参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
      ポップアップ Menu オブジェクトへの参照です。
     
      <p>このプロパティは読み取り専用であるため、設定しても無効です。 このプロパティの代わりに、<codeph>dataProvider</codeph> プロパティを設定してください。 スーパークラスのプロパティが読み取り / 書き込みであり、このクラスが空の実装で setter をオーバーライドするため、シンタックス一覧に書き込み専用のインジケーターが表示されます。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:DateChooser"><apiName>DateChooser</apiName><shortdesc>
  DateChooser コントロールは、月の名前、年、および月の各日を示すグリッドを表示し、そのグリッドの列ラベルとして曜日を表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="weekDayStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  このコントロールの曜日名に適用されるスタイルシート定義の名前です。省略した場合、曜日名はこのコントロールのテキストスタイルを継承します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="todayStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  現在の日付を示す数値テキストの外観を設定するスタイルシート定義の名前です。<codeph>showToday</codeph> プロパティを <codeph>true</codeph> に設定すると、現在の日付がハイライト表示されます。 フォントの色を変更するには "color" スタイルを指定します。 省略した場合、現在の日付テキストはこのコントロールのテキストスタイルを継承します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="todayIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  DateChooser コントロールで今日の日付のハイライト領域のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.DateChooserIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="todayColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  今日の日付の背景色です。 デフォルト値は <codeph>0x818181</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのシンボルのカラーです。CheckBox のチェックマークや ScrollBar ボタンの矢印などがあります。
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  DateChooser コントロールで現在選択されている日付のハイライト領域のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.DateChooserIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  DateChooser コントロールで現在選択されている日付のハイライト領域のカラーです。
  </description>
<default>0xCDFFC1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="rollOverIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  DateChooser コントロール内の日付にマウスポインターを合わせたときに、日付のハイライト領域のスキンとして使用するクラスの名前です。
 
  </description>
<default>mx.skins.halo.DateChooserIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  DateChooser コントロール内の日付にマウスポインターを合わせたときの日付のハイライト領域のカラーです。
  </description>
<default>0xE3FFD6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  マウスポインターを前年の矢印に合わせていないときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  マウスポインターを前年の矢印に合わせたときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  前年の矢印をクリックしたときに、その矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  前年の矢印が無効のときにその矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  前年の矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  マウスポインターを前月の矢印に合わせていないときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  マウスポインターを前月の矢印に合わせたときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  前月の矢印をクリックしたときに、その矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  前月の矢印が無効のときにその矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  前月の矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  マウスポインターを翌年の矢印に合わせていないときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌年の矢印にマウスポインターを移動したときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌年の矢印をクリックしたときに、その矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌年の矢印が無効のときにその矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌年の矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserYearArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  マウスポインターを翌月の矢印に合わせていないときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌月の矢印にマウスポインターを移動したときに、その矢印のスキンとして使用するクラスの名前です。 デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌月の矢印をクリックしたときに、その矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌月の矢印が無効のときにその矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  翌月の矢印のスキンとして使用するクラスの名前です。デフォルト値は DateChooserMonthArrowSkin クラスです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールのハイライトの塗りつぶしで使用するアルファ透明度値です。最初の値はハイライトの上端の透明度を指定し、2 番目の値はハイライトの下端の透明度を指定します。ハイライトは、スキンの上半分に適用されます。
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  コントロールのテキスト（月名および年）とヘッダー領域の外観に適用されるスタイルシート定義の名前です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="headerColors" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Array">
<description>
  DateChooser コントロールの最上部の領域のカラーです。 デフォルト値は <codeph>[ 0xE1E5EB, 0xF4F5F7 ]</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントにフォーカスがある場合のフォーカスリングのカラーです。
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style arrayType="uint" deprecatedReplacement="nextMonthStyleFilters, prevMonthStyleFilters" deprecatedSince="3.0" format="Color" inherit="no" name="fillColors" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Array">
<description>
  コントロールの背景の着色に使用される色です。 フラットな外観のコントロールを作成するには、どちらの値にも同じカラーを渡します。
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" deprecatedReplacement="nextMonthStyleFilters, prevMonthStyleFilters" deprecatedSince="3.0" inherit="no" name="fillAlphas" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Array">
<description>
  コントロールの背景の塗りつぶしで使用するアルファ値です。[1, 1] を使うと、コントロールの背景が不透明になります。
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。 このスタイルは、Alert、Button、ComboBox、LinkButton、MenuBar、NumericStepper、Panel、ScrollBar、Tab、TitleWindow の各コンポーネントおよび <codeph>borderStyle</codeph> プロパティを <codeph>"solid"</codeph> に設定できるすべてのコンポーネントによってサポートされます。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされない場合、デフォルト値は <codeph>0</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  コンポーネントのコンテンツ領域のカラーです。
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Number">
<description>
  境界ボックスの境界線の幅です。 <codeph>borderStyle</codeph> が <codeph>"solid"</codeph> に設定されている場合にのみ使用できます。
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  境界線の色です。 このスタイルは、Button、CheckBox、ComboBox、MenuBar、NumericStepper、ProgressBar、RadioButton、ScrollBar、Slider の各コントロールおよび <codeph>borderStyle</codeph> スタイルをサポートするすべてのコンポーネントによってサポートされます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  DateChooser コントロールの背景色です。
  
  </description>
<default>0xFFFFF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Number">
<description>
  <codeph>backgroundColor</codeph> プロパティで定義されているカラーのアルファレベルです。 有効な値の範囲は 0.0 ～ 1.0 です。
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:DateChooser" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:DateChooser" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:DateChooser" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされていない場合は <codeph>0x111111</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  子どうしの垂直方向の間隔を示すピクセル数です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合のデフォルト値は 6 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  子同士の水平方向の間隔を示すピクセル数です。デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は 8 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:DateChooser&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:DateChooser
    <strong>Properties</strong>
    allowDisjointSelection="true|false"
    allowMultipleSelection="false|true"
    dayNames="["S", "M", "T", "W", "T", "F", "S"]"
    disabledDays="<i>No default</i>"
    disabledRanges="<i>No default</i>"
    displayedMonth="<i>Current month</i>"
    displayedYear="<i>Current year</i>"
    firstDayOfWeek="0"
    maxYear="2100"
    minYear="1900"
    monthNames="["January", "February", "March", "April", "May",
      "June", "July", "August", "September", "October", "November",
      "December"]"
    monthSymbol=""
    selectableRange="<i>No default</i>"
    selectedDate="<i>No default</i>"
    selectedRanges="<i>No default</i>"
    showToday="true|false"
    yearNavigationEnabled="false|true"
    yearSymbol=""
 
    <strong>Styles</strong>
    backgroundColor="0xFFFFFF"
    backgroundAlpha="1.0"
    borderColor="0xAAB3B3"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="4"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    fillAlphas="[0.6, 0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    headerColors="[0xE1E5EB, 0xF4F5F7]"
    headerStyleName="headerDateText"
    highlightAlphas="[0.3, 0.0]"
    horizontalGap="8"
    iconColor="0x111111"
    leading="2"
    nextMonthDisabledSkin="DateChooserMonthArrowSkin"
    nextMonthDownSkin="DateChooserMonthArrowSkin"
    nextMonthOverSkin="DateChooserMonthArrowSkin"
    nextMonthSkin = "DateChooserMonthArrowSkin" 
    nextMonthUpSkin="DateChooserMonthArrowSkin"
    nextYearDisabledSkin="DateChooserYearArrowSkin"
    nextYearDownSkin="DateChooserYearArrowSkin"
    nextYearOverSkin="DateChooserYearArrowSkin"
    nextYearSkin = "DateChooserYearArrowSkin"
    nextYearUpSkin="DateChooserYearArrowSkin"
    prevMonthDisabledSkin="DateChooserMonthArrowSkin"
    prevMonthDownSkin="DateChooserMonthArrowSkin"
    prevMonthOverSkin="DateChooserMonthArrowSkin"
    prevMonthSkin = "DateChooserMonthArrowSkin"
    prevMonthUpSkin="DateChooserMonthArrowSkin"
    prevYearDisabledSkin="DateChooserYearArrowSkin"
    prevYearDownSkin="DateChooserYearArrowSkin"
    prevYearOverSkin="DateChooserYearArrowSkin"
    prevYearSkin = "DateChooserYearArrowSkin"
    prevYearUpSkin="DateChooserYearArrowSkin"
    rollOverColor="0xEEFEE6"
    rollOverIndicatorSkin="DateChooserIndicator"
    selectionColor="0xB7F39B"
    selectionIndicatorSkin="DateChooserIndicator"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    todayColor="0x818181"
    todayIndicatorSkin="DateChooserIndicator"
    todayStyleName="todayStyle"
    verticalGap="6"
    weekDayStyleName="weekDayStyle"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  DateChooser コントロールは、月の名前、年、および月の各日を示すグリッドを表示し、そのグリッドの列ラベルとして曜日を表示します。ユーザーはある日付、日付の範囲、または複数の日付を選択できます。 このコントロールには、月と年を前後に移動するための矢印ボタンがあります。ユーザーが複数の日付を選択できるようにしたり、特定の日付を選択できないようにしたり、表示される日付を一定の範囲に制限したりすることができます。
 
  <p>DateChooser コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>カレンダーを表示するのに十分なサイズで、曜日名を表示するのに十分な幅です。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>制限なし</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="DateChooserExample.mxml"><swfblock conref="examples/DateChooserExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link></related-links><adobeApiEvent id="mx.controls:DateChooser_mx.events.DateChooserEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  ユーザー操作により月が変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DateChooserEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.DateChooserEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザー操作により月が変更されたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateChooser_mx.events.CalendarLayoutChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  日付が選択または変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CalendarLayoutChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.CalendarLayoutChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  日付が選択または変更されたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DateChooser:DateChooser"><apiName>DateChooser</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:DateChooser:allowDisjointSelection:get"><apiName>allowDisjointSelection</apiName><shortdesc>
      true の場合、DateChooser コントロール内で非連続な（分断した）選択を許可します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、DateChooser コントロール内で非連続な（分断した）選択を許可します。 このプロパティは、<codeph>allowMultipleSelection</codeph> プロパティが <codeph>true</codeph> である場合にのみ有効です。 このプロパティを設定すると、DateChooser コントロールの外観が変化します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:allowMultipleSelection:get"><apiName>allowMultipleSelection</apiName><shortdesc>
      true の場合、DateChooser コントロールで複数の選択を許可します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、DateChooser コントロールで複数の選択を許可します。 このプロパティを設定すると、DateChooser コントロールの外観が変化します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:protected:calendarLayoutStyleFilters:get"><apiName>calendarLayoutStyleFilters</apiName><shortdesc>
      DateChooser からカレンダーのレイアウトに渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      DateChooser からカレンダーのレイアウトに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:dayNames:get"><apiName>dayNames</apiName><shortdesc>
      DateChooser コントロール用の曜日名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "S", "M", "T", "W", "T", "F", "S" ].
      
      </apiDefaultValue></apiValueDef><apiDesc>
      DateChooser コントロール用の曜日名です。このプロパティを変更すると、DateChooser コントロールの曜日ラベルが変化します。日曜日を週の最初の曜日（インデックス 0）とします。以降の曜日が通常の順序で続きます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:disabledDays:get"><apiName>disabledDays</apiName><shortdesc>
      無効にする曜日です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      無効にする曜日です。指定した曜日に該当するその月のすべての日付が無効になります。このプロパティによって DateChooser コントロールの外観が変化します。この配列のエレメントには、0（日曜日）から 6（土曜日）の範囲の値を指定できます。 例えば、<codeph>[ 0, 6 ]</codeph> という値を設定すると、日曜日と土曜日が無効になります。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:disabledRanges:get"><apiName>disabledRanges</apiName><shortdesc>
      1 日または複数の日を無効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      1 日または複数の日を無効にします。
     
      <p>このプロパティは、パラメーターとしてオブジェクトの配列を受け入れます。 この配列にあるオブジェクトはそれぞれ Date オブジェクトです。無効にする 1 日を指定するか、あるいは、Date オブジェクトの値を持つ <codeph>rangeStart</codeph> プロパティおよび <codeph>rangeEnd</codeph> プロパティのいずれか一方または両方を含むオブジェクトを指定します。 これらのプロパティの値は、日付範囲の先頭と末尾を示します。 いずれかのプロパティを省略した場合、そちら側の境界には制限がなくなります。 <codeph>rangeStart</codeph> のみを指定した場合は、<codeph>rangeStart</codeph> の日付を含めて、指定した日付より後の日付がすべて無効になります。 <codeph>rangeEnd</codeph> のみを指定した場合は、<codeph>rangeEnd</codeph> 以前の日付がすべて無効になります。 1 日のみを無効にするには、日付を指定する単一の Date オブジェクトを配列に使用します。 Date オブジェクトに時間値が存在する場合、それらはゼロに設定されます。</p>
     
      <p>次の例では、2006 年 1 月 11 日と、2006 年 1 月 23 日 ～ 2 月 10 日の範囲、および 2006 年 3 月 1 日以降のすべての日付を無効にしています。</p>
     
      <p><codeph>disabledRanges="{[ new Date(2006,0,11), {rangeStart: new Date(2006,0,23), rangeEnd: new Date(2006,1,10)}, {rangeStart: new Date(2006,2,1)} ]}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:displayedMonth:get"><apiName>displayedMonth</apiName><shortdesc>
      displayedYear プロパティとの組み合わせで、displayedMonth プロパティは、DateChooser コントロールに表示する月を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>displayedYear</codeph> プロパティとの組み合わせで、<codeph>displayedMonth</codeph> プロパティは、DateChooser コントロールに表示する月を指定します。 月を表す数字は 0 から始まるので、1 月は 0 で、12 月は 11 です。このプロパティを設定すると、DateChooser コントロールの外観が変化します。
     
      <p>デフォルト値は現在の月です。</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:displayedYear:get"><apiName>displayedYear</apiName><shortdesc>
      displayedMonth プロパティとの組み合わせで、displayedYear プロパティは、DateChooser コントロールに表示する年を指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      <codeph>displayedMonth</codeph> プロパティとの組み合わせで、<codeph>displayedYear</codeph> プロパティは、DateChooser コントロールに表示する年を指定します。このプロパティを設定すると、DateChooser コントロールの外観が変化します。
     
      <p>デフォルト値は現在の年です。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:firstDayOfWeek:get"><apiName>firstDayOfWeek</apiName><shortdesc>
      DateChooser コントロールの最初の列に表示する曜日を表す数字です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>0 (Sunday)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      DateChooser コントロールの最初の列に表示する曜日を表す数字です。 この値は 0 ～ 6 の範囲で指定します。0 は <codeph>dayNames</codeph> 配列の最初のエレメントである日曜日に対応します。
     
      <p>このプロパティを設定すると、日付列の順序が変更されます。 例えば、このプロパティを 1 に設定すると、コントロールの最初の列が月曜日になります。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:maxYear:get"><apiName>maxYear</apiName><shortdesc>
      コントロール内で選択可能な最後の年です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>2100
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロール内で選択可能な最後の年です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:minYear:get"><apiName>minYear</apiName><shortdesc>
      コントロール内で選択可能な最初の年です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1900
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロール内で選択可能な最初の年です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:monthNames:get"><apiName>monthNames</apiName><shortdesc>
      DateChooser コントロールの最上部に表示される月の名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "January", "February", "March", "April", "May", "June", 
      "July", "August", "September", "October", "November", "December" ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      DateChooser コントロールの最上部に表示される月の名前です。 <codeph>monthSymbol</codeph> プロパティは、<codeph>monthNames</codeph> プロパティで指定された値の後ろに付加されます。これは、日本語などの言語で役に立ちます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:monthSymbol:get"><apiName>monthSymbol</apiName><shortdesc>
      monthNames プロパティで指定した値の後ろにこのプロパティを付加することで、DateChooser コントロールの最上部に表示される月の名前を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>monthNames</codeph> プロパティで指定した値の後ろにこのプロパティを付加することで、DateChooser コントロールの最上部に表示される月の名前を定義します。 日本語などの一部の言語では、月の名前の後ろに文字を追加します。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:protected:nextMonthStyleFilters:get"><apiName>nextMonthStyleFilters</apiName><shortdesc>
      DateChooser から次月ボタンに渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      DateChooser から次月ボタンに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:nextYearStyleFilters:get"><apiName>nextYearStyleFilters</apiName><shortdesc>
      DateChooser から次年ボタンに渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      DateChooser から次年ボタンに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:prevMonthStyleFilters:get"><apiName>prevMonthStyleFilters</apiName><shortdesc>
      DateChooser から前月ボタンに渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      DateChooser から前月ボタンに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:prevYearStyleFilters:get"><apiName>prevYearStyleFilters</apiName><shortdesc>
      DateChooser から前年ボタンに渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      DateChooser から前年ボタンに渡すスタイルのセットです。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:selectableRange:get"><apiName>selectableRange</apiName><shortdesc>
      選択可能な日付の範囲です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      選択可能な日付の範囲です。 例えば、2006 年 12 月 04 日から 2007 年 12 月 04 日までの日付を選択可能にし、この範囲外の日付を無効にします。
     
      <p>このプロパティは、パラメーターとして 1 つのオブジェクトを受け入れます。 このオブジェクトには、<codeph>rangeStart</codeph> と <codeph>rangeEnd</codeph> の 2 つの Date 型プロパティが含まれます。 <codeph>rangeStart</codeph> のみを指定した場合は、指定した日付以降の日付がすべて有効になります。 <codeph>rangeEnd</codeph> のみを指定した場合は、指定した日付より前の日付がすべて有効になります。 DateChooser コントロールで 1 つの日付のみを有効にするには、Date オブジェクトを直接渡します。 時間の値が存在する場合は、Date オブジェクトからゼロ設定されます。</p>
     
      <p>次の例では、2006 年 1 月 1 日 ～ 2006 年 6 月 30 日の範囲のみを選択可能にしています。2005 年 12 月以前および 2006 年 7 月以降の月は DateChooser に表示されません。</p>
     
      <p><codeph>selectableRange="{{rangeStart : new Date(2006,0,1), rangeEnd : new Date(2006,5,30)}}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:selectedDate:get"><apiName>selectedDate</apiName><shortdesc>
      DateChooser コントロールで選択されている日付です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      DateChooser コントロールで選択されている日付です。 受け取った Date オブジェクトに時間値がある場合、それらはゼロに設定されます。
     
      <p>Ctrl キーを押しながら現在選択されている日付を選択すると、その日付の選択が解除され、<codeph>selectedDate</codeph> プロパティが <codeph>null</codeph> に設定されて、<codeph>change</codeph> イベントが送出されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:selectedRanges:get"><apiName>selectedRanges</apiName><shortdesc>
      選択した日付範囲です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      選択した日付範囲です。
     
      <p>このプロパティは、パラメーターとしてオブジェクトの配列を受け入れます。 この配列内の各オブジェクトは、2 つの日付オブジェクトである <codeph>rangeStart</codeph> および <codeph>rangeEnd</codeph> を持ちます。 <codeph>rangeStart</codeph> から <codeph>rangeEnd</codeph> までの日付の範囲が選択されます。 1 日のみを選択するには、<codeph>rangeStart</codeph> と <codeph>rangeEnd</codeph> の両方に同じ日付を設定します。 Date オブジェクトに時間値が存在する場合、それらはゼロに設定されます。</p>
     
      <p>次の例では、2006 年 1 月 11 日と、2006 年 1 月 23 日 ～ 2 月 10 日の範囲の日付を選択しています。 </p>
     
      <p><codeph>selectedRanges="{[ {rangeStart: new Date(2006,0,11), rangeEnd: new Date(2006,0,11)}, {rangeStart:new Date(2006,0,23), rangeEnd: new Date(2006,1,10)} ]}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:showToday:get"><apiName>showToday</apiName><shortdesc>
      true の場合、DateChooser コントロールで今日の日付がハイライト表示されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、DateChooser コントロールで今日の日付がハイライト表示されます。 このプロパティを設定すると、DateChooser コントロールの外観が変化します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:yearNavigationEnabled:get"><apiName>yearNavigationEnabled</apiName><shortdesc>
      年ナビゲーションを有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      年ナビゲーションを有効にします。 <codeph>true</codeph> である場合、表示された年の右側に上下のボタンが表示されます。 これらのボタンを使用して、今年を変更できます。 これらのボタンは、年を月の前に置く日付形式を使用するロケールでは、年の左側に表示されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:yearSymbol:get"><apiName>yearSymbol</apiName><shortdesc>
      このプロパティは、DateChooser コントロールの最上部に表示される年の後ろに付加されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      このプロパティは、DateChooser コントロールの最上部に表示される年の後ろに付加されます。 日本語などの一部の言語では、年の後ろに文字を追加します。 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ComboBox"><apiName>ComboBox</apiName><shortdesc>
  ComboBox コントロールには、ユーザーが 1 つの値を選択できるドロップダウンリストが含まれています。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  ドロップダウンリストの textSelectedColor です。
 
  </description>
<default>#2B333C
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  ドロップダウンリストの textRollOverColor です。
 
  </description>
<default>#2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  ドロップダウンリストの selectionEasingFunction です。
 
  </description>
<default>undefined
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Time" inherit="no" name="selectionDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  ドロップダウンリストの selectionDuration です。
 
  </description>
<default>250
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  ドロップダウンリストの selectionColor です。

  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  ドロップダウンリストの rollOverColor です。

  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  コントロールの上の境界と、コンテンツ領域の上部との間のピクセル数です。 <codeph>editable</codeph> プロパティが <codeph>true</codeph> の場合、<codeph>paddingTop</codeph> および <codeph>paddingBottom</codeph> は ComboBox コントロールのサイズに影響しますが、編集可能テキストフィールドの位置には影響しません。
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  コントロールの下の境界と、コンテンツ領域の下部との間のピクセル数です。 <codeph>editable</codeph> プロパティが <codeph>true</codeph> の場合、<codeph>paddingTop</codeph> および <codeph>paddingBottom</codeph> は ComboBox コントロールのサイズに影響しますが、編集可能テキストフィールドの位置には影響しません。
  
  </description>
<default>0 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  開いた状態へのトランジションを制御するイージング関数です。 イージング関数を使用して、トランジションの加速と減速を制御できます。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  ドロップダウンリストが開くときのトランジションの時間です（ミリ秒単位）。デフォルトのトランジションは、ComboBox から下方向に表示されるドロップダウンスライドです。
 
  </description>
<default>250
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropdownStyleName" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  ドロップダウンリストで使用される CSSStyleDeclaration の名前です。これにより、ドロップダウンリストまたはそのアイテムレンダラーの外観を制御できます。
 
  </description>
<default>"comboDropdown"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="dropdownStyleName" inherit="no" name="dropDownStyleName" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  ドロップダウンリストで使用される CSSStyleDeclaration の名前です。これにより、ドロップダウンリストまたはそのアイテムレンダラーの外観を制御できます。 [非推奨]
 
  </description>
<default>"comboDropDown"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropdownBorderColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  ComboBox の境界線の色です。 <codeph>undefined</codeph> の場合、ドロップダウンリストでは通常の borderColor スタイルが使用されます。 このスタイルは、ComboBox をエラー状態で表示するためにバリデーターによって使用されます。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  閉じた状態へのトランジションを制御するイージング関数です。イージング関数を使用して、トランジションの加速と減速を制御できます。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  ドロップダウンリストが閉じるときのトランジションの時間です（ミリ秒単位）。デフォルトのトランジションは、ComboBox に向かって上方向に閉じていくドロップダウンスライドです。
 
  </description>
<default>250
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  ドロップダウンリストの境界線の幅です（ピクセル単位）。 <codeph>borderThickness</codeph> を定義すると（<codeph>dropdownStyleName</codeph> CSSStyleDeclaration の設定時に定義すると）、この値は上書きされます。 
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="arrowButtonWidth" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  ピクセル単位で表した矢印ボタンの幅です。
  </description>
<default>22
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Array">
<description>
  切り替えパターンでドロップダウンリストの行を表示する場合の BackgroundColors のセットです。値には、複数の色の配列を指定します。 <codeph>undefined</codeph> の場合、行では、ドロップダウンリストの backgroundColor スタイルが使用されます。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  テキストの 1 行目のコンテナ左端からのオフセット（ピクセル単位）です。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ComboBox" playerVersion="Flash10" type="Class">
<description>
  IUITextField を実装するクラスです。このクラスはテキストをレンダリングするためにこのコンポーネントで使用されます。
 
  <p>mx.core.UITextField クラス（Flash Player に組み込まれている標準の TextField を使用する場合）または mx.core.UITLFTextField クラス（Text Layout Framework を使用して、双方向レイアウトなどの向上したテキストレンダリングを取得する場合）のいずれかに設定できます。</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  テキストに下線を表示するかどうかを指定します。 可能な値は、<codeph>"none"</codeph> および <codeph>"underline"</codeph> です。
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  コンテナ内のテキストの整列。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph> または <codeph>"center"</codeph> です。
 
  <p>ほとんどのコンポーネントのデフォルト値は <codeph>"left"</codeph> です。 FormItem コンポーネントの場合、デフォルト値は <codeph>"right"</codeph> です。 Button、LinkButton および AccordionHeader コンポーネントでは、デフォルト値は <codeph>"center"</codeph> です。このプロパティは <codeph>labelPlacement</codeph> プロパティが <codeph>"left"</codeph> または <codeph>"right"</codeph> に設定されている場合のみ認識されます。 <codeph>labelPlacement</codeph> が <codeph>"top"</codeph> または <codeph>"bottom"</codeph> に設定されている場合は、テキストおよびアイコンが中央に配置されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ComboBox" playerVersion="Flash10" type="String">
<description>
  
 
  <p/>
 
  <p><codeph/></p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  各文字間に表示される追加のピクセル数。 正の値を指定すると文字間隔が通常より広くなり、負の値を指定すると文字間隔が通常より狭くなります。
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Boolean">
<description>
  カーニングが有効（<codeph>true</codeph>）か無効（<codeph>false</codeph>）かを示すブール値です。カーニングでは、読みやすくするために、特定の文字ペア間の間隔を調整します。ただし、カーニングは見出しを大きなフォントにする場合など、必要な場合に限って使用してください。 カーニングは、埋め込みフォントに対してのみサポートされています。Verdana や、Courier New などの等幅フォントなど、特定のフォントではカーニングはサポートされていません。
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  テキストをボールド体にするかどうかを指定します。 有効な値は <codeph>normal</codeph> と <codeph>bold</codeph> です。 Button コントロールのデフォルト値は <codeph>bold</codeph> です。 他のすべてのコントロールのデフォルト値は <codeph>normal</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>thickness</codeph> プロパティを設定します。 このプロパティは字形のエッジの太さを指定します。 有効な値は -200 ～ 200 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルは、システムフォントには影響を与えません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  テキストをイタリック体にするかどうかを指定します。 認識される値は <codeph>"normal"</codeph> と <codeph>"italic"</codeph> です。
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  テキストの高さ（ピクセル単位）です。 ColorPicker コントロール以外のすべてのコントロールのデフォルト値は 10 です。 ColorPicker コントロールのデフォルト値は 11 です。 
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>sharpness</codeph> プロパティを設定します。 このプロパティは字形のエッジのシャープネスを指定します。 有効な値は -400 ～ 400 までの数値です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Flex コントロール内のテキストを表す内部 TextField の <codeph>gridFitType</codeph> プロパティを設定します。 有効な値は、<codeph>"none"</codeph>（<codeph>flash.text.GridFitType.NONE</codeph>）、<codeph>"pixel"</codeph>（<codeph>flash.text.GridFitType.PIXEL</codeph>） および <codeph>"subpixel"</codeph>（<codeph>flash.text.GridFitType.SUBPIXEL</codeph>）です。 
  
  <p>このプロパティが適用されるのは、埋め込みフォントを使用していて、<codeph>fontAntiAliasType</codeph> プロパティが <codeph>"advanced"</codeph> に設定されている場合のみです。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
 
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  使用するフォントの名前です。 完全な CSS 実装と異なり、カンマ区切りリストはサポートされません。 任意のフォントファミリ名を使用できます。 汎用フォント名を指定した場合、適切なデバイスフォントに置換されます。
 
  </description>
<default>"Verdana"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  内部 TextField の <codeph>antiAliasType</codeph> プロパティを設定します。 有効な値は、<codeph>"normal"</codeph>（<codeph>flash.text.AntiAliasType.NORMAL</codeph>）および <codeph>"advanced"</codeph>（<codeph>flash.text.AntiAliasType.ADVANCED</codeph>）です。 
  
  <p>デフォルト値は <codeph>"advanced"</codeph> であり、フォントについて高度なアンチエイリアスが有効になります。 <codeph>"normal"</codeph> に設定すると、高度なアンチエイリアスが無効になります。</p>
  
  <p>このスタイルはシステムフォントには影響しません。</p>
  
  <p>このスタイルは TextField サブコントロール内のすべてのテキストに適用されます。一部の文字だけに適用することはできません。</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  コンポーネントが無効な場合のテキストの色です。
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ComboBox" playerVersion="Flash10" type="String">
<description>
  
 
  <p><codeph/><codeph/></p>
 
  <p/>
 
  <p><codeph/></p>
 
  <p><codeph/></p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  コンポーネントのラベルを含めたコンポーネント内のテキストの色です。
 
  </description>
<default>0x0B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールのハイライトの塗りつぶしで使用するアルファ透明度値です。最初の値はハイライトの上端の透明度を指定し、2 番目の値はハイライトの下端の透明度を指定します。ハイライトは、スキンの上半分に適用されます。
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の着色に使用されるカラーです。フラットな外観のコントロールを作成するには、どちらの値にも同じカラーを渡します。
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  コントロールの背景の塗りつぶしで使用するアルファ値です。[1, 1] を使うと、コントロールの背景が不透明になります。
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。 このスタイルは、Alert、Button、ComboBox、LinkButton、MenuBar、NumericStepper、Panel、ScrollBar、Tab、TitleWindow の各コンポーネントおよび <codeph>borderStyle</codeph> プロパティを <codeph>"solid"</codeph> に設定できるすべてのコンポーネントによってサポートされます。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされない場合、デフォルト値は <codeph>0</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  境界線の色です。 このスタイルは、Button、CheckBox、ComboBox、MenuBar、NumericStepper、ProgressBar、RadioButton、ScrollBar、Slider の各コントロールおよび <codeph>borderStyle</codeph> スタイルをサポートするすべてのコンポーネントによってサポートされます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの右の境界とコンテンツ領域の右端との間のピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  コンポーネントの左境界線からコンテンツ領域の左端までのピクセル数です。
  <p>デフォルト値は 0 です。</p>
  <p>Button コントロールのデフォルト値は 10 です。</p>
  <p>ComboBox コントロールのデフォルト値は 5 です。</p>
  <p>Form コンテナのデフォルト値は 16 です。</p>
  <p>Tree コントロールのデフォルト値は 2 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  追加の行間を表します。
 
  <p>デフォルト値は 2 です。</p>
  <p>ComboBox コントロールのデフォルト値は 0 です。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x111111</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  フォーカス矩形のどの角を丸くするかを指定します。 この値は、スペースで区切られた String です。<codeph>"tl"</codeph>、<codeph>"tr"</codeph>、<codeph>"bl"</codeph> および <codeph>"br"</codeph> の任意の組み合わせを含めることができます。 例えば、右の角を丸くし、左の角を直角にするように指定するには、<codeph>"tr br"</codeph> とします。 <codeph>cornerRadius</codeph> スタイルプロパティは、角の丸みの半径を指定します。 デフォルト値は、コンポーネントのクラスによって異なります。クラスでオーバーライドされていない場合、デフォルト値は <codeph>"tl tr bl br"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  フォーカススキンのアルファ透明度値を指定します。
  
  </description>
<default>0.4
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ComboBox&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ComboBox
    <b>Properties</b>
    dataProvider="null"
    dropdownFactory="<i>ClassFactory that creates an mx.controls.List</i>"
    dropdownWidth="<i>100 or width of the longest text in the dataProvider</i>"
    itemRenderer="null"
    labelField="label"
    labelFunction="null"
    prompt="null"
    rowCount="5"
    selectedIndex="-1"
    selectedItem="null"
    
    <b>Styles</b>
    alternatingItemColors="undefined"
    arrowButtonWidth="22"
    borderColor="0xB7BABC"
    borderThickness="1"
    closeDuration="250"
    closeEasingFunction="undefined"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x919999"
    dropdownBorderColor="undefined"
    dropdownStyleName="comboDropdown"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.4"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x111111"
    leading="0"
    openDuration="250"
    openEasingFunction="undefined"
    paddingTop="0"
    paddingBottom="0"
    paddingLeft="5"
    paddingRight="5"
    rollOverColor="<i>Depends on theme color"</i>
    selectionColor="<i>Depends on theme color"</i>
    selectionDuration="250"
    selectionEasingFunction="undefined"
    textAlign="left|center|right"
    textDecoration="none|underline"
    textIndent="0"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    
    <b>Events</b>
    change="<i>No default</i>"
    close="<i>No default</i>"
    dataChange="<i>No default</i>"
    enter="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
    open="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  ComboBox コントロールには、ユーザーが 1 つの値を選択できるドロップダウンリストが含まれています。 その機能は、HTML の SELECT フォームエレメントによく似ています。ComboBox は編集可能にできます。この場合、リストに含まれないエントリを、ユーザーが ComboBox の TextInput 部分に入力できます。
 
  <p>ComboBox コントロールには、次のデフォルトのサイズ設定属性があります。</p>
     <adobetable class="innertable">
        
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>メインコントロールの表示領域のドロップダウンリストに含まれる最も長い項目、およびドロップダウンボタンを表示するのに十分な幅です。ドロップダウンリストが非表示の状態のデフォルトの高さは、ラベルのテキストサイズによって決まります。 
 
               <p>デフォルトのドロップダウンリストの高さは 5 行またはドロップダウンリストの項目数の行のいずれか小さい方になります。ドロップダウンリストの各項目のデフォルトの高さは 22 ピクセルです。</p></entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>5000 × 5000</entry>
        </row><row>
           <entry>dropdownWidth</entry>
           <entry>ComboBox コントロールの幅</entry>
        </row><row>
           <entry>rowCount</entry>
           <entry>5 行</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleComboBox.mxml"><swfblock conref="examples/SimpleComboBox.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><adobeApiEvent id="mx.controls:ComboBox_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  ユーザーが ComboBox コントロールのドロップダウンリストをスクロールしたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが ComboBox コントロールのドロップダウンリストをスクロールしたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  ユーザーがドロップダウンボタンをクリックしてドロップダウンリストを表示したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがドロップダウンボタンをクリックしてドロップダウンリストを表示したときに送出されます。これは、ユーザーがキーボードで Ctrl キーを押しながら下矢印キーを押してドロップダウンを開いた場合にも送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  ユーザーがドロップダウンリストアイテムの上にマウスを移動したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがドロップダウンリストアイテムの上にマウスを移動したときに送出されます。 イベントオブジェクトの <codeph>target</codeph> プロパティには、ドロップダウンリストではなく ComboBox への参照が含まれます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  ユーザーがドロップダウンリストアイテムの外側にマウスを移動したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがドロップダウンリストアイテムの外側にマウスを移動したときに送出されます。 イベントオブジェクトの <codeph>target</codeph> プロパティには、ドロップダウンリストではなく ComboBox への参照が含まれます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.FlexEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  editable プロパティが true に設定されている場合に、編集可能なテキストフィールドへの入力中にユーザーが Enter キーを押すと送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>editable</codeph> プロパティが <codeph>true</codeph> に設定されている場合に、ユーザーが編集可能なテキストフィールドへの入力中に Enter キーを押すと送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使用すると、<codeph>data</codeph> プロパティには dataProvider のアイテムが含まれます。 このイベントを受け取って、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新することができます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  ユーザーの操作（ドロップダウンリストのアイテムを選択する、ドロップダウンリストの外側をクリックする、ドロップダウンリストが表示されているときにドロップダウンボタンをクリックする、ドロップダウンリストが表示されているときに ESC キーを押す）によってドロップダウンリストが消えたときに送出されます。
  
 
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  次に示すユーザーの操作によってドロップダウンリストが消えたときに送出されます。
  <ul>
      <li>ドロップダウンリストのアイテムを選択する</li>
      <li>ドロップダウンリストの外側をクリックする</li>
      <li>ドロップダウンリストが表示されているときにドロップダウンボタンをクリックする</li>
      <li>ドロップダウンリストが表示されているときに ESC キーを押す</li>
  </ul>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  送出されるのは、ユーザー操作の結果として ComboBox の内容が変化したとき、selectedIndex プロパティまたは selectedItem プロパティが変更されたとき、および ComboBox コントロールが編集可能な状態で、キーストロークがボックスに入力されたときです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  送出されるのは、ユーザー操作の結果として ComboBox の内容が変化したとき、<codeph>selectedIndex</codeph> プロパティまたは <codeph>selectedItem</codeph> プロパティが変更されたとき、および ComboBox コントロールが編集可能な状態で、キーストロークがボックスに入力されたときです。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ComboBox:ComboBox"><apiName>ComboBox</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ComboBox:protected:calculatePreferredSizeFromData"><apiName>calculatePreferredSizeFromData</apiName><shortdesc>
      データプロバイダー内の最初の numItems アイテムのラベルテキストの最大サイズに基づいて、ドロップダウンリスト内の各エントリに適用するデフォルトの高さと幅を決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>width プロパティと height プロパティの 2 つを持つオブジェクトです。
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiDesc>値を決定するためにチェックするアイテムの数です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      データプロバイダー内の最初の <codeph>numItems</codeph> アイテムのラベルテキストの最大サイズに基づいて、ドロップダウンリスト内の各エントリに適用するデフォルトの高さと幅を決定します。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:close"><apiName>close</apiName><shortdesc>
      ドロップダウンリストを非表示にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>trigger</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
      ドロップダウンリストを非表示にします。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      item パラメーターを表すストリングを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>ラベルに変換する値を含むオブジェクトです。アイテムが null の場合、このメソッドは空のストリングを返します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>item</codeph> パラメーターを表すストリングを返します。
      
      <p>このメソッドは、次の順序で確認して、返す値を見つけます。</p>
      
      <ol>
        <li><codeph>labelFunction</codeph> プロパティが指定されている場合、アイテムを関数に渡した結果を返します。</li>
        <li>アイテムがストリング、数値、ブール値または関数の場合、そのアイテムを返します。</li>
        <li>コントロールの <codeph>labelField</codeph> プロパティで指定された名前のプロパティをアイテムが持つ場合、そのプロパティの内容を返します。</li>
        <li>アイテムにラベルプロパティがある場合、その値を返します。</li>
      </ol>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:protected:measure"><apiName>measure</apiName><shortdesc>
      コントロールの幅が最低でも 40 ピクセルあり、コントロールの TextInput 部分に 1 行のテキストが入るだけの高さがある（ただし最低でも 22 ピクセル必要です）ことを確認します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      コントロールの幅が最低でも 40 ピクセルあり、コントロールの TextInput 部分に 1 行のテキストが入るだけの高さがある（ただし最低でも 22 ピクセル必要です）ことを確認します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:open"><apiName>open</apiName><shortdesc>
      ドロップダウンリストを表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      ドロップダウンリストを表示します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ComboBox:data:get"><apiName>data</apiName><shortdesc>
      アイテムレンダラーまたはアイテムエディターで data プロパティを使用すると、コンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      アイテムレンダラーまたはアイテムエディターで <codeph>data</codeph> プロパティを使用すると、コンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>ComboBox コントロールでは、<codeph>listData</codeph> プロパティと <codeph>data</codeph> プロパティを次のように使用します。 ComboBox が DataGrid コントロール内にある場合、列の <codeph>dataField</codeph> プロパティがデータのプロパティにマッピングされ、<codeph>selectedItem</codeph> がそのプロパティに設定されます。 ComboBox コントロールが List コントロール内にある場合、リストの <codeph>labelField</codeph> がデータのプロパティにマッピングされ、<codeph>selectedItem</codeph> がそのプロパティに設定されます。 それ以外の場合は、<codeph>selectedItem</codeph> がデータそのものに設定されます。</p>
     
      <p>MXML でこのプロパティを設定することはありません。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:protected:dropDownStyleFilters:get"><apiName>dropDownStyleFilters</apiName><shortdesc>
      ComboBox から dropDown に渡すスタイルのセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      ComboBox から dropDown に渡すスタイルのセットです。これらのスタイルは、dropDownStyleName のスタイルによってオーバーライドされます。
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:dropdown:get"><apiName>dropdown</apiName><shortdesc>
      ComboBox のドロップダウンとして機能する List コントロールへの参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:ListBase</apiValueClassifier></apiValueDef><apiDesc>
      ComboBox のドロップダウンとして機能する List コントロールへの参照です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dropdownFactory:get"><apiName>dropdownFactory</apiName><shortdesc>
      ListBase から派生したインスタンスをドロップダウンリストとして使用するために生成する IFactory です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      ListBase から派生したインスタンスをドロップダウンリストとして使用するために生成する IFactory です。デフォルト値は、List の IFactory です。
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dropdownWidth:get"><apiName>dropdownWidth</apiName><shortdesc>
      ドロップダウンリストの幅をピクセル単位で表します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      ドロップダウンリストの幅をピクセル単位で表します。
      <p>デフォルト値は、100 または <codeph>dataProvider</codeph> で最も長いテキストの幅のいずれか大きいほうです。</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:itemRenderer:get"><apiName>itemRenderer</apiName><shortdesc>
      コントロールのドロップダウンリストにデータを表示するインスタンスを生成する IFactory です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      コントロールのドロップダウンリストにデータを表示するインスタンスを生成する IFactory です。このプロパティを使用して、ドロップダウンリストのカスタムアイテムレンダラーを指定できます。
     
      <p>コントロールは List コントロールを内部的に使用して、ドロップダウンリストを作成します。List コントロールのデフォルトのアイテムレンダラーは、ListItemRenderer クラスであり、リスト内の各アイテムに関連付けられているテキストとオプションのアイコンを描画します。 </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.controls.listClasses.xml#ListItemRenderer"><linktext>mx.controls.listClasses.ListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:labelField:get"><apiName>labelField</apiName><shortdesc>
      dataProvider 配列内のアイテムのうち、TextInput 部分とドロップダウンリストのラベルとして表示するフィールドの名前です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      <codeph>dataProvider</codeph> 配列内のアイテムのうち、TextInput 部分とドロップダウンリストのラベルとして表示するフィールドの名前です。 デフォルトでは、各配列オブジェクトの <codeph>label</codeph> という名前のプロパティが使用され、コントロールに表示されます。
      <p>ただし、<codeph>dataProvider</codeph> アイテムに <codeph>label</codeph> プロパティが含まれない場合は、別のプロパティを使用するように <codeph>labelField</codeph> プロパティを設定できます。</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      ラベルを決定するために各アイテムに対して実行されるユーザー指定の関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      ラベルを決定するために各アイテムに対して実行されるユーザー指定の関数です。 デフォルトでは、<codeph>label</codeph> という名前のプロパティを各 <codeph>dataProvider</codeph> アイテムで使用して、ラベルが決定されます。 ただし、<codeph>label</codeph> プロパティも存在せず、ラベル表示に使用できる別のプロパティも存在しないデータセットもあります。
      <p>例えば、データセットに <codeph>lastName</codeph> と <codeph>firstName</codeph> のフィールドがあり、フルネームを表示したい場合などです。 <codeph>labelFunction</codeph> では、適切なフィールドを使用するコールバック関数を指定して、表示可能なストリングを返すことができます。</p>
     
      <p>labelFunction は単一のパラメーターを取ります。このパラメーターは、dataProvider 内のアイテムであり、ストリングを返します。</p>
      <pre>
      myLabelFunction(item:Object):String
      </pre>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの listData プロパティが、List コントロールからの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの <codeph>listData</codeph> プロパティが、List コントロールからの該当するデータで初期化されます。 コンポーネントは、<codeph>listData</codeph> プロパティと <codeph>data</codeph> プロパティを使用して、ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして適切な情報を表示します。
     
      <p>MXML または ActionScript でこのプロパティを設定することはありません。このプロパティは、コンポーネントをドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用するときに、Flex によって設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:prompt:get"><apiName>prompt</apiName><shortdesc>
      ComboBox コントロールのプロンプトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      ComboBox コントロールのプロンプトです。 プロンプトは、<codeph>selectedIndex</codeph> = -1 であるときに ComboBox の TextInput 部分に表示されるストリングです。 これは通常、「Select one...」などのストリングです。 プロンプトを使用しない場合は、ComboBox コントロールにより <codeph>selectedIndex</codeph> が 0 に設定され、<codeph>dataProvider</codeph> 内の最初のアイテムが表示されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:rowCount:get"><apiName>rowCount</apiName><shortdesc>
      ComboBox コントロールのリストに表示される行の最大数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>5
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ComboBox コントロールのリストに表示される行の最大数です。 dataProvider に存在するアイテム数がデフォルト値より少ない場合、ComboBox では dataProvider と同数のアイテムのみを表示します。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedLabel:get"><apiName>selectedLabel</apiName><shortdesc>
      ComboBox の TextInput 部分に表示するストリングです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      ComboBox の TextInput 部分に表示するストリングです。 これは、<codeph>labelField</codeph> または <codeph>labelFunction</codeph> を使用してデータから計算されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dataProvider:set"><apiName>dataProvider</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedIndex:set"><apiName>selectedIndex</apiName><shortdesc>
      ドロップダウンリスト内で現在選択されているアイテムのインデックスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      ドロップダウンリスト内で現在選択されているアイテムのインデックスです。このプロパティを設定すると現在のインデックスが設定され、関連付けられたラベルが TextInput 部分に表示されます。
      <p>デフォルト値は -1 ですが、<codeph>dataProvider</codeph> が割り当てられ、プロンプトが存在しない場合は 0 に設定されます。 コントロールが編集可能の場合、ユーザーが TextInput の部分に入力すると、<codeph>selectedIndex</codeph> プロパティの値は -1 になります。 <codeph>selectedIndex</codeph> プロパティの値が範囲外の場合、<codeph>selectedIndex</codeph> プロパティは <codeph>dataProvider</codeph> にある最後のアイテムに設定されます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedItem:set"><apiName>selectedItem</apiName><shortdesc>
      dataProvider 内の選択したアイテムへの参照を含みます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      <codeph>dataProvider</codeph> 内の選択したアイテムへの参照を含みます。 データがオブジェクトまたはクラスインスタンスの場合、そのオブジェクトまたはインスタンスのプロパティを変更すると、<codeph>dataProvider</codeph> とそのビューが変更されます。 アイテムが dataProvider 内に存在する場合に、selectedItem そのものを設定すると、ComboBox がそのアイテムを選択します（TextInput 部分にアイテムを表示し、selectedIndex を設定します）。
      <p>ComboBox コントロールが編集可能な場合に、ユーザーが TextInput にテキストを入力すると、<codeph>selectedItem</codeph> プロパティは <codeph>null</codeph> になります。 このプロパティが値を持つのは、ユーザーがドロップダウンリストから項目を選択した場合と、値がプログラムによって設定された場合のみです。</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Image"><apiName>Image</apiName><shortdesc>
  実行時に、JPEG、PNG、GIF および SWF のファイルを読み込むには、Image コントロールを使用します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:Image&gt;</code> tag inherits the tag attributes of its superclass,  
  and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:Image
    <strong>Events</strong>
    dataChange="No default"
  /&gt
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:SWFLoader</apiBaseClassifier></apiClassifierDef><apiDesc>
  実行時に、JPEG、PNG、GIF および SWF のファイルを読み込むには、Image コントロールを使用します。 <codeph>@Embed(source='filename')</codeph> を使用して、これらのファイルと SVG ファイルをコンパイル時に埋め込むこともできます。
 
  <p><b>メモ：</b>Flex には、Flex アプリケーションをロードする SWFLoader コントロールもあります。 静止グラフィックファイルと SWF ファイルのロードには、通常 Image コントロールを使用し、Flex アプリケーションのロードには、SWFLoader コントロールを使用します。 Image コントロールは、カスタムアイテムレンダラーとアイテムエディターでも使用できるように設計されています。 </p>
 
  <p>イメージを埋め込んだ場合、埋め込まれたイメージは Flex の SWF ファイルの一部となるため、ロードは直接的に行われます。ただし、アプリケーションのサイズが増えるので、アプリケーションの初期化プロセスは遅くなります。また、埋め込みイメージは、イメージファイルに変更を加えるたびにアプリケーションを再コンパイルする必要があります。</p> 
  
  <p>リソースを埋め込まない場合は、実行時にリソースをロードします。SWF ファイルが実行されるローカルなファイルシステムからリソースをロードすることもできますし、ネットワーク上の HTTP 要求を通じて（通常の方法）、リモートリソースにアクセスすることもできます。イメージは、Flex アプリケーションとは独立しているため、イメージの名前さえ同じであれば、修正を加えたとしても再コンパイルの必要はありません。イメージの参照により、アプリケーションの初期ロード時間に余分なオーバーヘッドが生じることはありません。ただし、イメージを Flash Player または AIR にロードするときに遅延が生じる場合があります。 </p>
  
  <p>SWF ファイルは、ローカルまたはネットワーク上の両方の外部リソースにアクセスすることができません。アクセスできるのは、いずれか一方だけです。 どちらのタイプへの SWF ファイルのアクセスを許可するかを、アプリケーションのコンパイル時に <codeph>use-network</codeph> フラグを使用して決定します。 <codeph>use-network</codeph> フラグを <codeph>false</codeph> に設定すると、ローカルファイルシステムのリソースにアクセスできますが、ネットワーク上のリソースにはアクセスできません。 デフォルト値の <codeph>true</codeph> に設定すると、ネットワーク上のリソースにアクセスできますが、ローカルファイルシステムのリソースにはアクセスできません。 </p>
  
  <p>実行時にイメージをロードする場合は、Flash Player または AIR のセキュリティ制限に注意する必要があります。 例えば、URL を使用すれば Flash Player でどのドメインからでもイメージをロードできますが、デフォルトのセキュリティ設定の下では、アプリケーションと同じドメインからロードしたイメージでない限り、そのイメージのビットマップデータに対するコードからのアクセスは拒否されます。他のサーバーにあるイメージのビットマップデータにアクセスするには、crossdomain.xml ファイルを使用する必要があります。 </p>
 
  <p>アルファチャネルを使用した透明なイメージの作成は、PNG および GIF 形式でもサポートされます。</p>
 
  <p>List コントロール内でドロップインアイテムレンダラーとして Image コントロールを使用する場合は、<codeph>rowHeight</codeph> プロパティを使用して List コントロールの行の高さを明示的に指定するか、List コントロールの <codeph>variableRowHeight</codeph> プロパティを <codeph>true</codeph> に設定して、行の高さが適正になるようにします。</p>
 
  <p>Image オブジェクトに関するメモリの問題が発生する場合は、アプリケーションで Image オブジェクトの使用が完了したら、<codeph>source</codeph> プロパティを明示的に null に設定してみてください。</p>
  
  </apiDesc><example conref="SimpleImage.mxml"><swfblock conref="examples/SimpleImage.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#SWFLoader"><linktext>mx.controls.SWFLoader</linktext></link></related-links><adobeApiEvent id="mx.controls:Image_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  data プロパティが変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>data</codeph> プロパティが変更されたときに送出されます。
 
  <p>コンポーネントをアイテムレンダラーとして使う場合、<codeph>data</codeph> プロパティは表示するデータを保持します。 このイベントを受け取って、<codeph>data</codeph> プロパティが変更されたときにコンポーネントを更新することができます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Image:Image"><apiName>Image</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:Image:data:get"><apiName>data</apiName><shortdesc>
      アイテムレンダラーまたはアイテムエディターで data プロパティを使用すると、コンポーネントに値を渡すことができます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      アイテムレンダラーまたはアイテムエディターで <codeph>data</codeph> プロパティを使用すると、コンポーネントに値を渡すことができます。 通常、データバインディングを使用して、<codeph>data</codeph> プロパティのフィールドをこのコンポーネントのプロパティにバインドします。
     
      <p>コントロールをドロップインアイテムレンダラーとして使用すると、<codeph>listData.label</codeph> プロパティが存在する場合は、その値がこのコントロールの <codeph>source</codeph> プロパティの値として使用され、存在しない場合は <codeph>data</codeph> プロパティが <codeph>source</codeph> プロパティとして使用されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Image:listData:get"><apiName>listData</apiName><shortdesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの listData プロパティが、List コントロールからの該当するデータで初期化されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      ドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用すると、このコンポーネントの <codeph>listData</codeph> プロパティが、List コントロールからの該当するデータで初期化されます。 さらに、<codeph>listData</codeph> プロパティを使用して、このドロップインアイテムレンダラーの他のプロパティを初期化できます。
     
      <p>MXML および ActionScript でこのプロパティを設定することはありません。このコンポーネントがドロップインアイテムレンダラーまたはドロップインアイテムエディターとして使用されるときに、Flex でプロパティが設定されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:HSlider"><apiName>HSlider</apiName><shortdesc>	
  HSlider コントロールを使用すると、スライダートラックの両端の間でスライダーサムを移動することで値を選択できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HSlider" replacement="spark.components.HSlider" since="4.0">
	</Alternative><styles><style enumeration="left,top,right,bottom" inherit="no" name="dataTipPlacement" owner="mx.controls:HSlider" playerVersion="Flash9" type="String">
<description>
  サムに関連するデータヒントの場所です。 有効な値は、<codeph>"left"</codeph>、<codeph>"right"</codeph>、<codeph>"top"</codeph> および <codeph>"bottom"</codeph> です。
 
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HSlider&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:HSlider
    <strong>Styles</strong>
    dataTipPlacement="top"
  /&gt;
  </pre>
  </p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.sliderClasses:Slider</apiBaseClassifier></apiClassifierDef><apiDesc>	
  HSlider コントロールを使用すると、スライダートラックの両端の間でスライダーサムを移動することで値を選択できます。 スライダーの現在の値は、スライダーの両終点の間におけるサムの相対位置によって決定されます。スライダーの両終点は、スライダーの最小値と最大値に対応します。
 
  <p>スライダーは、最小値から最大値までの範囲を無段階に移動できるか、または最小値から最大値までの範囲内で段階的にのみ移動できます。 トラックに沿って指定された間隔で目盛りが表示されます。目盛りは、スライダーに設定できる値とは関係なく設定できます。 スライダーでは、現在の値を表示するデータヒントを使用することもできます。</p>
  	
  <p>HSlider コントロールの方向は水平です。スライダートラックは左から右に伸び、ラベルと目盛りはトラックの上または下に配置されます。</p>
  
  <p>HSlider コントロールには、次のデフォルトの特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>幅は 250 ピクセル、高さはスライダーとそのラベルを表示できるだけのサイズになります。</entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>なし</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>なし</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleImageHSlider.mxml"><swfblock conref="examples/SimpleImageHSlider.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#VSlider"><linktext>mx.controls.VSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.controls.sliderClasses.xml#SliderThumb"><linktext>mx.controls.sliderClasses.SliderThumb</linktext></link><link href="mx.controls.sliderClasses.xml#SliderDataTip"><linktext>mx.controls.sliderClasses.SliderDataTip</linktext></link><link href="mx.controls.sliderClasses.xml#SliderLabel"><linktext>mx.controls.sliderClasses.SliderLabel</linktext></link></related-links><apiConstructor id="mx.controls:HSlider:HSlider"><apiName>HSlider</apiName><shortdesc>
	  コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  コンストラクターです。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:DataGrid"><apiName>DataGrid</apiName><shortdesc>
  DataGrid コントロールは、List に似ていますが、複数の列のデータを表示でき、したがって複数のプロパティを持つオブジェクトの表示に適している点が異なります。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="cornerRadius"/><Exclude kind="property" name="showDataTips"/><Exclude kind="property" name="offscreenExtraRowsOrColumnsChanged"/><Exclude kind="property" name="offscreenExtraColumnsRight"/><Exclude kind="property" name="offscreenExtraColumnsLeft"/><Exclude kind="property" name="offscreenExtraColumns"/><Exclude kind="property" name="offscreenExtraRowsBottom"/><Exclude kind="property" name="offscreenExtraRowsTop"/><Exclude kind="property" name="offscreenExtraRows"/><Exclude kind="property" name="offscreenExtraRowsOrColumns"/><Exclude kind="property" name="labelField"/><Exclude kind="property" name="iconFunction"/><Exclude kind="property" name="iconField"/><Exclude kind="property" name="columnCount"/><DefaultProperty name="dataProvider"/><styles><style inherit="no" name="headerDragProxyStyleName" owner="mx.controls:DataGrid" playerVersion="Flash9" type="String">
<description>
  ユーザーが列を別の場所にドラッグしたときに列の外観要素を制御する CSS スタイル宣言の名前です。
 
  </description>
<default>"headerDragProxyStyle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnDropIndicatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  列を現在の位置にドロップできることを示すスキンとして使用するクラスです。
 
  </description>
<default>mx.skins.halo.DataGridColumnDropIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="stretchCursor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  列をサイズ変更できることを示すカーソルのスキンとして使用するクラスです。デフォルト値は、Assets.swf ファイルの "cursorStretch" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="sortArrowSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  列のソート方向を示す矢印のスキンとして使用するクラスです。
  </description>
<default>mx.skins.halo.DataGridSortArrow
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalLockedSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  DataGrid コントロールで、ロックされている列とロックされていない列の間に表示するセパレーターの外観を定義するスキンとして使用するクラスです。 デフォルトでは、セパレーターの描画に DataGrid コントロールでは <codeph>drawHorizontalLine()</codeph> メソッドと <codeph>drawVerticalLine()</codeph> メソッドを使用します。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  DataGrid コントロールで列の間に表示するセパレーターの外観を定義するスキンとして使用するクラスです。 デフォルトでは、セパレーターの描画に DataGrid コントロールでは <codeph>drawHorizontalLine()</codeph> メソッドと <codeph>drawVerticalLine()</codeph> メソッドを使用します。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalLockedSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  DataGrid コントロールで、ロックされている行とロックされていない行の間に表示するセパレーターの外観を定義するスキンとして使用するクラスです。 デフォルトでは、セパレーターの描画に DataGrid コントロールでは <codeph>drawHorizontalLine()</codeph> メソッドと <codeph>drawVerticalLine()</codeph> メソッドを使用します。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  DataGrid コントロールで行の間に表示するセパレーターの外観を定義するスキンとして使用するクラスです。 デフォルトでは、セパレーターの描画に DataGrid コントロールでは <codeph>drawHorizontalLine()</codeph> メソッドと <codeph>drawVerticalLine()</codeph> メソッドを使用します。
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  DataGrid コントロールで列ヘッダーの間に表示するセパレーターの外観を定義するスキンとして使用するクラスです。
  </description>
<default>mx.skins.halo.DataGridHeaderSeparator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerBackgroundSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  DataGrid コントロールで列ヘッダーの背景の外観を定義するスキンとして使用するクラスです。
  </description>
<default>mx.skins.halo.DataGridHeaderBackgroundSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnResizeSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  サイズ変更中の列のスキンとして使用するクラスです。
  </description>
<default>mx.skins.halo.DataGridColumnResizeSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerStyleName" owner="mx.controls:DataGrid" playerVersion="Flash9" type="String">
<description>
  列ヘッダーの他の外観要素を制御する CSS スタイル宣言の名前です。
  </description>
<default>"dataGridStyles"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  ユーザーが行内のアイテムレンダラーを選択した場合の行の背景色です。
  </description>
<default>0x7FCEFF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  マウスポインターが置かれているときの行の背景色です。
  </description>
<default>0xB2E1FF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="headerColors" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="Array">
<description>
  ヘッダーの背景グラデーションの描画に使用される 2 色の配列です。 1 つ目の色は上側の色です。2 つ目の色は下側の色です。
  </description>
<default>[0xFFFFFF, 0xE6E6E6]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="horizontalGridLineColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  水平グリッド線の色。
 </description>
<default>0xF7F7F7
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="verticalGridLineColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  垂直グリッド線の色。
  </description>
<default>0xCCCCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalGridLines" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Boolean">
<description>
  行の間に水平グリッド線を表示するかどうかを示すフラグです。 <codeph>true</codeph> の場合は水平グリッド線が表示されます。 <codeph>false</codeph> の場合は水平グリッド線が表示されません。
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalGridLines" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Boolean">
<description>
  列の間に垂直グリッド線を表示するかどうかを示すフラグです。 <codeph>true</codeph> の場合は垂直グリッド線が表示されます。 <codeph>false</codeph> の場合は垂直グリッド線が表示されません。
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="defaultDataGridItemRenderer" owner="mx.controls:DataGrid" playerVersion="Flash10" type="Class">
<description>
  列またはヘッダーのクラスが指定されていない場合に使用される itemRenderer のクラスの名前です。これは、個別に設定するかわりに、DataGrid のグループに対して itemRenderer を設定する方法です。DataGrid の itemRenderer プロパティを設定した場合は、この値より優先されます。
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="defaultDataGridItemEditor" owner="mx.controls:DataGrid" playerVersion="Flash10" type="Class">
<description>
  
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="uint">
<description>
  無効状態のスキンのアイコンの色です。例えば、CheckBoxIcon スキンクラスで無効状態の CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで無効状態の ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で無効状態の DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0x999999</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="uint">
<description>
  スキンのアイコンの色です。 例えば、CheckBoxIcon スキンクラスで CheckBox コントロールのチェックマークを描画する場合や、ComboBoxSkin クラスで ComboBox コントロールの下矢印を描画する場合、DateChooserMonthArrowSkin で DateChooser コントロールの月矢印を描画する場合などに、このスタイルが使用されます。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされていない場合は <codeph>0x111111</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:DataGrid&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except for <code>labelField</code>, 
  <code>iconField</code>, and <code>iconFunction</code>, and adds the 
  following tag attributes:
  </p>
  <pre>
  &lt;mx:DataGrid
    <b>Properties</b>
    columns="<i>From dataProvider</i>"
    draggableColumns="true|false"
    editable="false|true"
    editedItemPosition="<code>null</code>"
    horizontalScrollPosition="null"
    imeMode="null"
    itemEditorInstance="null"
    minColumnWidth="<code>NaN</code>"
    resizableColumns="true|false"
    sortableColumns="true|false"
    
    <b>Styles</b>
    backgroundDisabledColor="0xEFEEEF"
    columnDropIndicatorSkin="DataGridColumnDropIndicator"
    columnResizeSkin="DataGridColumnResizeSkin"
    disabledIconColor="0x999999"
    headerColors="[#FFFFFF, #E6E6E6]"
    headerDragProxyStyleName="headerDragProxyStyle"
    headerSeparatorSkin="DataGridHeaderSeparator"
    headerStyleName="dataGridStyles"
    horizontalGridLineColor="0xF7F7F7"
    horizontalGridLines="false|true"
    horizontalLockedSeparatorSkin="undefined"
    horizontalSeparatorSkin="undefined"
    iconColor="0x111111"
    rollOverColor="0xB2E1FF"
    selectionColor="0x7FCEFF"
    sortArrowSkin="DataGridSortArrow"
    stretchCursor="<i>"cursorStretch" symbol from the Assets.swf file</i>"
    verticalGridLineColor="0xCCCCCC"
    verticalGridLines="false|true"
    verticalLockedSeparatorSkin="undefined"
    verticalSeparatorSkin="undefined"
     
    <b>Events</b>
    columnStretch="<i>No default</i>"
    headerRelease="<i>No default</i>"
    headerShift="<i>No default</i>"
    itemEditBegin="<i>No default</i>"
    itemEditBeginning="<i>No default</i>" 
    itemEditEnd="<i>No default</i>"
    itemFocusIn="<i>No default</i>"
    itemFocusOut="<i>No default</i>"
  /&gt;
   
  <b>The following DataGrid code sample specifies the column order:</b>
  &lt;mx:DataGrid&gt;
    &lt;mx:dataProvider&gt;
        &lt;mx:Object Artist="Pavement" Price="11.99"
          Album="Slanted and Enchanted"/&gt;
        &lt;mx:Object Artist="Pavement"
          Album="Brighten the Corners" Price="11.99"/&gt;
    &lt;/mx:dataProvider&gt;
    &lt;mx:columns&gt;
        &lt;mx:DataGridColumn dataField="Album"/&gt;
        &lt;mx:DataGridColumn dataField="Price"/&gt;
    &lt;/mx:columns&gt;
  &lt;/mx:DataGrid&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls.dataGridClasses:DataGridBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  <codeph>DataGrid</codeph> コントロールは、List に似ていますが、複数の列のデータを表示でき、したがって複数のプロパティを持つオブジェクトの表示に適している点が異なります。
  <p>
  DataGrid コントロールには次の機能があります。
  <ul>
  <li>複数幅の列、または同一固定幅の列</li>
  <li>実行時にユーザーがサイズ変更可能な列 </li>
  <li>実行時にユーザーが順序変更可能な列 </li>
  <li>オプションでカスタマイズ可能な列ヘッダー</li>
  <li>任意の列にカスタムアイテムレンダラーを使用して、テキスト以外のデータを表示できる機能</li>
  <li>列のクリックによるデータソートのサポート</li>
  </ul>
  </p>
  DataGrid コントロールは、HTML テーブルのようなレイアウトツールではなく、データの表示を目的としています。mx.containers パッケージには、レイアウトツールが用意されています。
  
  <p>DataGrid コントロールには、次のデフォルトのサイズ設定特性があります。</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>列が空の場合、デフォルトの幅は 300 ピクセルです。列に情報が格納されていて明示的に幅が定義されていない場合、デフォルトの幅は 100 ピクセルです。DataGrid の幅は、可能であれば、すべての列が収まる幅に調整されます。デフォルトで表示される行数はヘッダー行を含めて 7、各行のデフォルトの高さは 20 ピクセルです。
           </entry>
        </row><row>
           <entry>最小サイズ</entry>
           <entry>0 ピクセル</entry>
        </row><row>
           <entry>最大サイズ</entry>
           <entry>5000 x 5000</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleDataGrid.mxml"><swfblock conref="examples/SimpleDataGrid.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridItemRenderer"><linktext>mx.controls.dataGridClasses.DataGridItemRenderer</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridColumn"><linktext>mx.controls.dataGridClasses.DataGridColumn</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridDragProxy"><linktext>mx.controls.dataGridClasses.DataGridDragProxy</linktext></link><link href="mx.events.xml#DataGridEvent"><linktext>mx.events.DataGridEvent</linktext></link></related-links><adobeApiEvent id="mx.controls:DataGrid_mx.events.IndexChangedEvent.HEADER_SHIFT_headerShift"><apiName>headerShift</apiName><shortdesc>
  ユーザーが列を新しい位置にドラッグした後、列ヘッダーの上でマウスボタンを離し、新しいインデックスに列が移動したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.IndexChangedEvent.HEADER_SHIFT</apiEventType><adobeApiEventClassifier>mx.events.IndexChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが列を新しい位置にドラッグした後、列ヘッダーの上でマウスボタンを離し、新しいインデックスに列が移動したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.HEADER_RELEASE_headerRelease"><apiName>headerRelease</apiName><shortdesc>
  ユーザーが列のコンテンツに基づいてグリッドコンテンツをソートするようにコントロールに要求するために、列ヘッダーの上でマウスボタンを離したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.HEADER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが列のコンテンツに基づいてグリッドコンテンツをソートするようにコントロールに要求するために、列ヘッダーの上でマウスボタンを離したときに送出されます。列が並べ替え可能であり、データプロバイダーでソートがサポートされる場合にのみ送出されます。 DataGrid コントロールには、単一列のソートを実装する、このイベントのデフォルトハンドラーがあります。 複数列のソートを実装するには、<codeph>preventDefault()</codeph> メソッドを呼び出して単一列のソートを無効にし、データプロバイダーの <codeph>sort</codeph> プロパティを設定します。
 <p>
 <b>メモ</b>：ソート矢印は、headerRelease イベントのデフォルトイベントハンドラーによって定義されます。 イベントハンドラー内で <codeph>preventDefault()</codeph> メソッドを呼び出すと、この矢印は描画されません。
 </p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.COLUMN_STRETCH_columnStretch"><apiName>columnStretch</apiName><shortdesc>
  ユーザーが列の幅を変更したときに送出され、その列に表示されるデータ量が変化したことを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.COLUMN_STRETCH</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが列の幅を変更したときに送出され、その列に表示されるデータ量が変化したことを示します。 <codeph>horizontalScrollPolicy</codeph> が <codeph>off</codeph> の場合は、サイズ変更される列に合わせて他の列のサイズが変更されます。また、これらのサイズ変更された列からもこのイベントが送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><shortdesc>
  アイテムレンダラーがフォーカスを失ったときに送出されます。フォーカスを失うのは、ユーザーが DataGrid コントロールの内部または外部にある別のアイテムをクリックしたときや、キーボードを使用して DataGrid コントロールの内部または外部にある別のアイテムに移動したときなどです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  アイテムレンダラーがフォーカスを失ったときに送出されます。フォーカスを失うのは、ユーザーが DataGrid コントロールの内部または外部にある別のアイテムをクリックしたときや、キーボードを使用して DataGrid コントロールの内部または外部にある別のアイテムに移動したときなどです。アイテムが編集可能な場合にのみ送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><shortdesc>
  アイテムレンダラーがフォーカスを得たときに送出されます。フォーカスを得るのは、ユーザーが DataGrid コントロールのアイテムをクリックしたときや、キーボードを使用してアイテムに移動したときなどです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  アイテムレンダラーがフォーカスを得たときに送出されます。フォーカスを得るのは、ユーザーが DataGrid コントロールのアイテムをクリックしたときや、キーボードを使用してアイテムに移動したときなどです。アイテムが編集可能な場合にのみ送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><shortdesc>
  何らかの理由でアイテム編集セッションが終了するときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  何らかの理由でアイテム編集セッションが終了するときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDITOR_CREATE_itemEditorCreate"><apiName>itemEditorCreate</apiName><shortdesc>
  アイテムエディターがインスタンス化されたときに送出されます。</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDITOR_CREATE</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  アイテムエディターがインスタンス化されたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><shortdesc>
  editedItemPosition プロパティが設定されていて、アイテムが編集可能であるときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  <codeph>editedItemPosition</codeph> プロパティが設定されていて、アイテムが編集可能であるときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><shortdesc>
  ユーザーが、アイテムレンダラー上、DataGrid コントロールのタブ上、または DataGrid コントロール内でマウスボタンを離したとき、またはその他の方法でアイテムを編集しようとしたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが、アイテムレンダラー上、DataGrid コントロールのタブ上、または DataGrid コントロール内でマウスボタンを離したとき、またはその他の方法でアイテムを編集しようとしたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DataGrid:DataGrid"><apiName>DataGrid</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:DataGrid:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      listContent のサイズと位置を調整するために updateDisplayList() メソッドから呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>listContent の幅です。この値は、外部コンポーネントまたは設定による幅の変更を無視します。
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>listContent の高さです。この値は、外部コンポーネントまたは設定による高さの変更を無視します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      listContent のサイズと位置を調整するために、<codeph>updateDisplayList()</codeph> メソッドから呼び出されます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:clearSeparators"><apiName>clearSeparators</apiName><shortdesc>
      列のサイズ変更時にユーザーが通常使用する列ヘッダーセパレーターを削除します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      列のサイズ変更時にユーザーが通常使用する列ヘッダーセパレーターを削除します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:createItemEditor"><apiName>createItemEditor</apiName><shortdesc>
      editedItemPosition のアイテムレンダラーに対応するアイテムエディターを、itemEditor プロパティで指定されたエディターを使用して作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>編集されるアイテムのデータプロバイダー内での列のインデックスです。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>編集されるアイテムのデータプロバイダー内での行のインデックスです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      <codeph>editedItemPosition</codeph> のアイテムレンダラーに対応するアイテムエディターを、<codeph>itemEditor</codeph> プロパティで指定されたエディターを使用して作成します。
     
      <p>このメソッドは、エディターインスタンスを <codeph>itemEditorInstance</codeph> プロパティとして設定します。</p>
     
      <p><codeph>itemEditBegin</codeph> イベントに対するイベントリスナー内からのみ、このメソッドを呼び出すことができます。これ以外の時点でエディターを作成するには、<codeph>editedItemPosition</codeph> プロパティを、<codeph>itemEditBegin</codeph> イベントを生成するように設定します。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:deriveComplexFieldReference"><apiName>deriveComplexFieldReference</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>complexFieldNameComponents</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:destroyItemEditor"><apiName>destroyItemEditor</apiName><shortdesc>
      このメソッドは、アイテムレンダラーに対して現在開いているアイテムエディターを閉じます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      このメソッドは、アイテムレンダラーに対して現在開いているアイテムエディターを閉じます。 このメソッドは通常、<codeph>itemEditEnd</codeph> イベントのイベントリスナーから、<codeph>preventDefault()</codeph> メソッドを呼び出してデフォルトのイベントリスナーが実行されないようにした後でのみ呼び出します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawColumnBackground"><apiName>drawColumnBackground</apiName><shortdesc>
      示されたカラーを使用して列の背景を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>その列のグラフィックが含まれている表示オブジェクトを格納する Sprite オブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiDesc>表示列のセット内における、列のインデックスです。一番左に表示されている列の列インデックスが 0 になります。これにより、特定の列の DataGridColumn のインデックスが変更された場合でも、同じ表示オブジェクトをその列で再使用できます。
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>インジケーターの色の候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>column</apiItemName><apiOperationClassifier>mx.controls.dataGridClasses:DataGridColumn</apiOperationClassifier><apiDesc>背景を描画する対象となる DataGrid コントロールの列です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      示されたカラーを使用して列の背景を描画します。この実装では、入力された Sprite オブジェクトの子として Shape オブジェクトを作成し、適切な色で塗り潰します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawHeaderBackground"><apiName>drawHeaderBackground</apiName><shortdesc>
      指定された UIComponent 内にヘッダーの背景を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>headerBG</apiItemName><apiOperationClassifier>mx.core:UIComponent</apiOperationClassifier><apiDesc>ヘッダーの背景グラフィックを含む UIComponent です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      指定された UIComponent 内にヘッダーの背景を描画します。 コンポーネントの幅が変更された場合、描画されたグラフィックが水平方向に拡大 / 縮小されるか、このメソッドが再度呼び出されて、異なる幅または高さで再描画が行われます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawHorizontalLine"><apiName>drawHorizontalLine</apiName><shortdesc>
      行間に線を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>その行のグラフィックが含まれている表示オブジェクトを格納する Sprite オブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>表示行のセット内における行インデックスです。ヘッダーを除外して、一番上に表示されている行の行インデックスが 0 になります。背景の描画に使用するオブジェクトは、このインデックスに基づいて管理されます。これにより、特定の行でレンダリングするアイテムのインデックスが変更された場合でも、同じ表示オブジェクトをその行で再使用できます。
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>インジケーターの色の候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>背景の y 方向位置の候補です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      行間に線を描画します。この実装では、特定の Sprite オブジェクト内に線を直接描画します。Sprite オブジェクトは、線が描画される前にクリアされます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawLinesAndColumnBackgrounds"><apiName>drawLinesAndColumnBackgrounds</apiName><shortdesc>
      列の間の線と、列の背景を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      列の間の線と、列の背景を描画します。 この実装では、必要に応じて <codeph>drawHorizontalLine()</codeph>、<codeph>drawVerticalLine()</codeph> および <codeph>drawColumnBackground()</codeph> の各メソッドが呼び出されます。 これらのグラフィックをすべて含む Sprite が作成され、z 順序の前面に listContent の子として追加されます。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawLinesAndColumnGraphics"><apiName>drawLinesAndColumnGraphics</apiName><shortdesc>
      列の間の線と、列の背景を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>contentHolder</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBaseContentHolder</apiOperationClassifier><apiDesc>DataGrid のすべてのアイテムレンダラーとアイテムエディターのコンテナです。
      </apiDesc></apiParam><apiParam><apiItemName>visibleColumns</apiItemName><apiType value="Array"/><apiDesc>DataGrid 内の可視列の配列です。
      </apiDesc></apiParam><apiParam><apiItemName>separators</apiItemName><apiType value="Object"/><apiDesc>列と行を分離する、上、下、左、および右の線を定義するオブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      列の間の線と、列の背景を描画します。この実装では、必要に応じて <codeph>drawHorizontalLine()</codeph>、<codeph>drawVerticalLine()</codeph> および <codeph>drawColumnBackground()</codeph> の各メソッドが呼び出されます。 これらのグラフィックをすべて含む Sprite が作成され、z 順序の前面に listContent の子として追加されます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawRowBackground"><apiName>drawRowBackground</apiName><shortdesc>
      位置、高さ、色の指定に従って行の背景を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>その行のグラフィックが含まれている表示オブジェクトを格納する Sprite オブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>表示行のセット内における行インデックスです。ヘッダーを除外して、一番上に表示されている行の行インデックスが 0 になります。背景の描画に使用するオブジェクトは、このインデックスに基づいて管理されます。これにより、特定の行でレンダリングするアイテムのインデックスが変更された場合でも、同じ表示オブジェクトをその行で再使用できます。
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>背景の y 方向位置の候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>インジケーターの高さの候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>インジケーターの色の候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>dataIndex</apiItemName><apiType value="int"/><apiDesc>データプロバイダー内における、その行のインデックスです。 これを使用して、例えば 10 番目のアイテムの色を変更できます。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      位置、高さ、色の指定に従って行の背景を描画します。この実装では、入力された Sprite オブジェクトの子として Shape オブジェクトを作成し、適切な色で塗り潰します。このメソッドでは、<codeph>backgroundAlpha</codeph> スタイルプロパティの設定に基づいて、背景色の透明度を決定します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawSeparators"><apiName>drawSeparators</apiName><shortdesc>
      列のサイズ変更時にユーザーが通常使用する列ヘッダーセパレーターを作成して表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      列のサイズ変更時にユーザーが通常使用する列ヘッダーセパレーターを作成して表示します。 この実装では、線および列の背景と同じ Sprite を使用し、<codeph>headerSeparatorSkin</codeph> のインスタンスを追加して、ユーザーが列をサイズ変更しようとしたときがわかるようにマウスリスナーを付加します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawVerticalLine"><apiName>drawVerticalLine</apiName><shortdesc>
      列間に線を描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>その行のグラフィックが含まれている表示オブジェクトを格納する Sprite オブジェクトです。
     
      </apiDesc></apiParam><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>表示列のセット内における、列のインデックスです。一番左に表示されている列の列インデックスが 0 になります。
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>インジケーターの色の候補です。
     
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>背景の x 方向位置の候補です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      列間に線を描画します。この実装では、特定の Sprite オブジェクト内に線を直接描画します。Sprite オブジェクトは、線が描画される前にクリアされます。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:getCurrentDataValue"><apiName>getCurrentDataValue</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:isComplexColumn"><apiName>isComplexColumn</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:isItemEditable"><apiName>isItemEditable</apiName><shortdesc>
      dataprovider アイテムを行単位で編集できるかどうかを決定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>デフォルトの動作では、DataGrid の <codeph>editable</codeph> プロパティが <codeph>true</codeph> であり、データオブジェクトが <codeph>null</codeph> 以外の場合は <codeph>true</codeph> を返します。
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>データプロバイダーアイテムです。 このメソッドのデフォルトの実装では、データオブジェクトが <codeph>null</codeph> の場合は <codeph>false</codeph> を返します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      dataprovider アイテムを行単位で編集できるかどうかを決定します。 このメソッドのデフォルトの実装では、DataGrid の <codeph>editable</codeph> プロパティだけをチェックし、<codeph>editable</codeph> が <codeph>false</codeph> の場合、または dataprovider アイテムが <codeph>null</codeph> の場合は <codeph>false</codeph> を返します。
     
      <p>このメソッドをオーバーライドして、dataprovider アイテムが編集可能である詳細な制御を実行できます。例えば、グループ化された行や概要行の編集を許可しない場合は、そのような動作を実現するカスタムロジックでこのメソッドをオーバーライドできます。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:placeSortArrow"><apiName>placeSortArrow</apiName><shortdesc>
      ソート矢印グラフィックを、現在のソートキーとなっている列に描画します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      ソート矢印グラフィックを、現在のソートキーとなっている列に描画します。この実装では、<codeph>sortArrowSkin</codeph> スタイルプロパティで指定されたスキンのインスタンスを作成または再使用し、適切な列ヘッダーに配置します。 また、ヘッダー内のテキストがソート矢印によって隠れる場合は、列ヘッダーのサイズを縮小します。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:scrollPositionToIndex"><apiName>scrollPositionToIndex</apiName><shortdesc>
      
      指定のスクロール位置で最初に表示される行と列のアイテムに対応するデータプロバイダーインデックスを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>データプロバイダーインデックスです。
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>horizontalScrollPosition</apiItemName><apiType value="int"/><apiDesc>スクロール位置に対応する <codeph>horizontalScrollPosition</codeph> プロパティ値です。
      </apiDesc></apiParam><apiParam><apiItemName>verticalScrollPosition</apiItemName><apiType value="int"/><apiDesc>スクロール位置に対応する <codeph>verticalScrollPosition</codeph> プロパティ値です。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      指定のスクロール位置で最初に表示される行と列のアイテムに対応するデータプロバイダーインデックスを返します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:scrollVertically"><apiName>scrollVertically</apiName><shortdesc>
      
      スクロール位置の変化に応じてレンダラーを調整します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>新しいスクロール位置を示します。
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>位置の変化です。 この値は、常に正の数値です。
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc>スクロール位置が小さくなりつつある場合は <codeph>true</codeph> です。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      スクロール位置の変化に応じてレンダラーを調整します。
     
      <p>リストクラスでは、スクロール位置の変化幅が表示されている行の数より少なかった場合にスクロールの最適化を試みます。 変更は行わず、移動だけが必要な行がある場合は、他の行が削除され、新しい行が追加されます。 スクロール位置の変化が大きすぎる場合は、古い行がすべて削除され、可視領域全体に対して <codeph>makeRowsAndColumns()</codeph> メソッドを呼び出すことにより新しい行が追加されます。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:setNewValue"><apiName>setNewValue</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="mx.controls:DataGrid:itemEditorInstance"><apiName>itemEditorInstance</apiName><shortdesc>
      現在アクティブなアイテムエディターのインスタンスへの参照です（存在する場合）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      現在アクティブなアイテムエディターのインスタンスが存在する場合に、そのインスタンスへの参照です。
     
      <p>アイテムの編集中にアイテムエディターのインスタンスと新しいアイテム値にアクセスするには、<codeph>itemEditorInstance</codeph> プロパティを使用します。 <codeph>itemEditorInstance</codeph> プロパティは、<codeph>itemEditBegin</codeph> イベントのイベントリスナーの実行後に初めて有効になります。したがって、<codeph>itemEditorInstance</codeph> プロパティには、<codeph>itemEditEnd</codeph> イベントのイベントリスナーからのみアクセスすることが普通です。</p>
     
      <p><codeph>DataGridColumn.itemEditor</codeph> プロパティは、アイテムエディターのクラスを定義し、必然的にアイテムエディターインスタンスのデータ型も定義します。</p>
     
      <p>MXML でこのプロパティを設定することはありません。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:resizableColumns"><apiName>resizableColumns</apiName><shortdesc>
      列のサイズをユーザーが変更できるかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      列のサイズをユーザーが変更できるかどうかを示すフラグです。 <codeph>true</codeph> の場合、ユーザーはヘッダーセル間のグリッド線をドラッグすることで DataGrid コントロールの列のサイズを変更できます。 <codeph>true</codeph> の場合、ユーザーが特定の列のサイズを変更できないようにするには、個々の列の <codeph>resizable</codeph> プロパティを <codeph>false</codeph> に設定する必要もあります。  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:sortableColumns"><apiName>sortableColumns</apiName><shortdesc>
      ユーザーが列ヘッダーセルをクリックすることでデータプロバイダーアイテムをソートできるかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue></apiValueDef><apiDesc>
      ユーザーが列ヘッダーセルをクリックすることでデータプロバイダーアイテムをソートできるかどうかを示すフラグです。 <codeph>true</codeph> の場合、ユーザーは列ヘッダーセルをクリックしてデータプロバイダーアイテムをソートできます。 列の <codeph>DataGridColumn.dataField</codeph> プロパティまたは列の <codeph>DataGridColumn.sortCompareFunction</codeph> プロパティがソートフィールドとして使用されます。 列をクリックするたびに、ソート順が昇順と降順で交互に切り替わります。 <codeph>true</codeph> の場合、個々の列の <codeph>sortable</codeph> プロパティを <codeph>false</codeph> に設定することにより、ヘッダーをクリックしても何も実行されないようにすることができます。
     
      <p>ユーザーがポインターを列のヘッダーセルに置いてマウスボタンを離すと、DataGrid コントロールから <codeph>headerRelease</codeph> イベントが送出されます。ただし、このプロパティとその列の sortable プロパティがどちらも <codeph>true</codeph> であることが必要です。 このイベントに対して <codeph>preventDefault()</codeph> メソッドを呼び出すハンドラーが存在しない場合、DataGrid では、その列の <codeph>DataGridColumn.dataField</codeph> プロパティまたは <codeph>DataGridColumn.sortCompareFunction</codeph> プロパティを使用してソートが実行されます。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridColumn/dataField"><linktext>mx.controls.dataGridClasses.DataGridColumn.dataField</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridColumn/sortCompareFunction"><linktext>mx.controls.dataGridClasses.DataGridColumn.sortCompareFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DataGrid:columns:get"><apiName>columns</apiName><shortdesc>
      表示可能なそれぞれの列に対応した DataGridColumn オブジェクトの配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      表示可能なそれぞれの列に対応した DataGridColumn オブジェクトの配列です。明示的に設定されていない場合、DataGrid コントロールは、一連のプロパティを特定してそれらをアルファベット順に表示するため、最初のデータプロパイダアイテムを調べようとします。
     
      <p>列のセットを変更する場合は、この配列を取得し、列および配列内の列順を変更した後、columns プロパティに新しい配列を割り当てる必要があります。これは、DataGrid コントロールでは列の配列の新しいコピーが返されるので、変更が発生していても認識できないためです。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:draggableColumns:get"><apiName>draggableColumns</apiName><shortdesc>
      列の順序をユーザーが変更できるかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      列の順序をユーザーが変更できるかどうかを示すフラグです。 <codeph>true</codeph> の場合、ユーザーはヘッダーセルをドラッグすることで DataGrid コントロールの列の順序を変更できます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editable:get"><apiName>editable</apiName><shortdesc>
      データプロバイダー内のアイテムをユーザーが編集できるかどうかを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      データプロバイダー内のアイテムをユーザーが編集できるかどうかを示すフラグです。 <codeph>true</codeph> の場合、コントロール内のアイテムレンダラーが編集可能です。 ユーザーは、アイテムレンダラーをクリックすることでエディターを開くことができます。
     
      <p>DataGrid コントロールの各列の編集を個別にオフにするには、<codeph>DataGridColumn.editable</codeph> プロパティを使用するか、<codeph>itemEditBeginning</codeph> イベントおよび <codeph>itemEditBegin</codeph> イベントを処理します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editedItemPosition:get"><apiName>editedItemPosition</apiName><shortdesc>
      編集中のデータプロバイダーアイテムに対応するアイテムレンダラーの列と行のインデックスです（存在する場合）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      編集中のデータプロバイダーアイテムが存在する場合に、それに対応するアイテムレンダラーの列と行のインデックスです。
     
      <p>このオブジェクトには、アイテムの 0 から始まる列インデックスと行インデックスである <codeph>columnIndex</codeph> と <codeph>rowIndex</codeph> の 2 つのフィールドがあります。 たとえば、{columnIndex:2, rowIndex:3} となります。</p>
     
      <p>このプロパティを設定すると、アイテムが表示されるまで画面がスクロールし、<codeph>itemEditBegin</codeph> イベントが送出されて、指定したアイテムレンダラーでアイテムエディターが開きます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editedItemRenderer:get"><apiName>editedItemRenderer</apiName><shortdesc>
      編集中のアイテムが位置する DataGrid コントロール内のアイテムレンダラーへの参照です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      編集中のアイテムが位置する DataGrid コントロール内のアイテムレンダラーへの参照です。
     
      <p><codeph>itemEditBegin</codeph> イベントと <codeph>itemEditEnd</codeph> イベントのイベントリスナーから、<codeph>editedItemRenderer.data</codeph> プロパティを使用して、編集中であるアイテムの現在の値にアクセスできます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      IME（入力メソッドエディター）のモードを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      IME（入力メソッドエディター）のモードを指定します。 IME を使用することによって、ユーザーは中国語、日本語、および韓国語のテキストを入力できます。Flex では、コントロールにフォーカスが置かれたときに、IME を指定されたモードに設定し、コントロールからフォーカスが離れたときに、元のモードに戻します。
     
     <p>flash.system.IMEConversionMode クラスで、このプロパティの有効な値の定数を定義します。IME を指定しない場合は、<codeph>null</codeph> を指定します。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:DataGrid:minColumnWidth:get"><apiName>minColumnWidth</apiName><shortdesc>
      列の最小幅です（ピクセル単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      列の最小幅です（ピクセル単位）。 NaN ではない場合、DataGrid コントロールではこの値がすべての列の最小幅として適用されます。それ以外の場合は、個々の列に最小幅を指定できます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:horizontalScrollPosition:set"><apiName>horizontalScrollPosition</apiName><shortdesc>
      左端からコンテンツへのオフセットです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      左端からコンテンツへのオフセットです。サブクラスによっては、ピクセル数で表したオフセットとして指定できます。また、DataGrid コントロールにある列の数のような他のメトリックを指定することもできます。 DataGrid は列単位でスクロールします。したがって、<codeph>horizontalScrollPosition</codeph> プロパティの値は必ず 0 から、最後の列を表示できる列のインデックスまでの範囲にあります。 これは、ピクセル単位でスクロールする List コントロールとは異なります。 DataGrid コントロールでは、列の左端が必ず DataGrid コントロールの左端に揃えて表示されます。
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:RichTextEditor"><apiName>RichTextEditor</apiName><shortdesc>RichTextEditor コントロールを使用すると、ユーザーはテキストを入力およびフォーマットできます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="underlineButton"/><Exclude kind="property" name="toolBar2"/><Exclude kind="property" name="toolBar"/><Exclude kind="property" name="linkTextInput"/><Exclude kind="property" name="layout"/><Exclude kind="property" name="label"/><Exclude kind="property" name="italicButton"/><Exclude kind="property" name="icon"/><Exclude kind="property" name="fontSizeCombo"/><Exclude kind="property" name="fontSizeArray"/><Exclude kind="property" name="fontFamilyCombo"/><Exclude kind="property" name="fontFamilyArray"/><Exclude kind="property" name="defaultButton"/><Exclude kind="property" name="colorPicker"/><Exclude kind="property" name="bulletButton"/><Exclude kind="property" name="boldButton"/><Exclude kind="property" name="alignButtons"/><styles><style inherit="no" name="textAreaStyleName" owner="mx.controls:RichTextEditor" playerVersion="Flash9" type="String">
<description>
          TextArea のスタイルに使用する CSS スタイル宣言の名前です。デフォルトでは、TextArea では RichTextEditor の継承可能なスタイルを使用します。
          
          </description>

<playerversion>AIR 1.1
          </playerversion>
	<prolog><asCustoms><langversion>3.0
          </langversion><productversion>Flex 3
         </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The &lt;mx:RichTextEditor&gt; tag inherits all the members
  of its parent and adds the following members:</p>
 <pre>
  &lt;RichTextEditor
    <strong>Properties</strong>
    defaultLinkProtocol="http://"
    htmlText=""
    showControlBar="true | false"
    showToolTips="false | true"
    text=""
      
    <strong>Events</strong>
    change
  /&gt;
  
 </pre>
  
 ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseClassifier>mx.containers:Panel</apiBaseClassifier></apiClassifierDef><apiDesc>RichTextEditor コントロールを使用すると、ユーザーはテキストを入力およびフォーマットできます。 ユーザーが変更できるテキストの特性には、フォントファミリー、色、サイズ、スタイルのほか、テキストの配置、箇条書き、URL リンクなどのプロパティがあります。 このコントロールは、次の 2 つの直接の子を持つ Panel コントロールで構成されています。
 <ul>
  <li>Text Area コントロールです。ユーザーはここにテキストを入力できます。</li>
  <li>フォーマットコントロールを持つコンテナです。このコントロールを使用して、ユーザーはテキストの特性を指定します。 フォーマットコントロールは、入力または選択されたテキストに作用します。</li>
 </ul>
 <p>RichTextEditor のデフォルトの高さと幅は 300 × 325 ピクセルであり、デフォルトの最小の高さと幅は 200 × 220 ピクセルです。RichTextEditor を DividedBox コントロールの中に配置する場合は、DividedBox コントロールのサイズを、最小サイズの RichTextEditor コントロールを十分に格納できる大きさとします。 また、RichTextEditor コントロールの minHeight プロパティまたは minWidth を明示的に <codeph>NaN</codeph> に設定することで、DividedBox コンテナのサイズを 0 に縮小できます。</p>
 <p>次の表に、アクセスして変更できるサブコントロールの説明を示します。</p>
 <adobetable class="innertable">
  
  
  
  
  
  
  
  
  
  
  
  
  
 <tgroup cols="3"><thead><row><entry>コントロールのタイプ </entry><entry>ID</entry><entry>説明</entry></row></thead><tbody><row>
    <entry><xref href="../controls/TextArea.html">TextArea</xref></entry>
    <entry>textArea</entry>
    <entry>ユーザーがテキストを入力できる領域です。</entry>
  </row><row>
    <entry><xref href="../core/Container.html">Container</xref></entry>
    <entry>toolbar</entry>
    <entry>フォーマット用コントロールのコンテナです。1 行に収まる場合は、コントロールを横一列に並べ、そうでない場合は複数の行に配置します。</entry>
  </row><row>
    <entry><xref href="../controls/ComboBox.html">ComboBox</xref></entry>
    <entry>fontFamilyCombo</entry>
    <entry>テキストのフォントファミリーを指定します。ComboBox dataProvider は、次の値を持つストリングの配列です。
     <ul>
         <li>_sans</li>
         <li>_serif</li>
         <li>_typewriter</li>
         <li>Arial</li>
         <li>Courier</li>
         <li>Courier New</li>
         <li>Geneva</li>
         <li>Georgia</li>
         <li>Helvetica</li>
         <li>Times New Roman</li>
         <li>Times</li>
         <li>Verdana（デフォルト）</li>
    </ul></entry>
  </row><row>
    <entry><xref href="../controls/ComboBox.html">ComboBox</xref></entry>
    <entry>fontSizeCombo</entry>
    <entry>フォントサイズを指定します。ComboBox dataProvider は、8、9、10（デフォルト）、11、12、14、16、18、20、24、26、28、36、48、72 の値を持つストリングの配列です。 
    <p><b>メモ：</b>この指定は、フォントサイズの実際のピクセル値です。 これらのサイズは、&lt;font> タグの <codeph>size</codeph> 属性を使用して HTML で指定する相対的なフォントサイズとは異なります。</p></entry>
  </row><row>
    <entry><xref href="../containers/HBox.html">HBox</xref></entry>
    <entry>toolBar2</entry>
    <entry>フォントの特性のボタンを含みます。</entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>boldButton</entry>
    <entry>selected="true" に切り替えると、フォントがボールドに設定されます。 </entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>italicButton</entry>
    <entry>selected="true" に切り替えると、フォントがイタリックに設定されます。 </entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>underlineButton</entry>
    <entry>selected="true" に切り替えると、フォントが下線付きに設定されます。</entry>
  </row><row>
    <entry><xref href="../controls/ColorPicker.html">ColorPicker</xref></entry>
    <entry>colorPicker</entry>
    <entry>テキストの色を指定します。 </entry>
  </row><row>
    <entry><xref href="../controls/ToggleButtonBar.html">ToggleButtonBar</xref></entry>
    <entry>alignButtons</entry>
    <entry>テキストの配置を指定します。 このコントロールのデータプロバイダーは、テキスト配置のタイプを指定する <codeph>action</codeph> フィールドを持つオブジェクトの配列で構成されています。 指定できるアクションは次のとおりです。
      <ul>
        <li>左揃え（デフォルト） </li>
    <li>中央</li>
    <li>右</li>
    <li>均等割り付け</li>
    </ul></entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Button</xref></entry>
    <entry>bulletButton</entry>
    <entry>selected="true" に切り替えると、現在の行または選択した行が、先頭に箇条書き記号を付けたリストアイテムに設定されます。</entry>
  </row><row>
    <entry><xref href="../controls/TextInput.html">TextInput</xref></entry>
    <entry>linkTextInput</entry>
    <entry>このフィールドは、テキストが選択された場合にのみ有効になります。 ユーザーがこのフィールドに URL を入力して Enter キーを押すと、現在選択されているテキストの前後にある TextArea サブコントロールに、HTML の <codeph>&lt;a href="<i>user_text</i>" target="blank">&lt;/a></codeph> タグに相当する記述が挿入されます。
 
        <p>最初、このコンロールには、<codeph>defaultLinProtocol</codeph> プロパティで指定されたテキストが表示されています。ユーザーは、このテキストにリンクの残りの部分を追加できるほか、テキスト全体を置き換えることもできます。</p>
 </entry>
  </row></tbody></tgroup></adobetable>
  
 <p>これらのサブコントロールのいずれかにアクセスするには、次の構文を使用します。
 <pre>
 myRTE.toolBar2.setStyle("backgroundColor", 0xCC6633);
 </pre>
 </p>
 
 <p>RichTextEditor コントロールには、次のデフォルトのサイズ設定特性があります。</p>
    <adobetable class="innertable">
       
       
       
       
    <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
          <entry>デフォルトサイズ</entry>
          <entry>幅 325 ピクセル、高さ 300 ピクセル</entry>
       </row><row>
          <entry>最小サイズ</entry>
          <entry>幅 220 ピクセル、高さ 200 ピクセル</entry>
       </row><row>
          <entry>最大サイズ</entry>
          <entry>10000 x 10000 ピクセル</entry>
       </row></tbody></tgroup></adobetable>
  
  </apiDesc><example conref="RichTextEditorExample.mxml"><swfblock conref="examples/RichTextEditorExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#ControlBar"><linktext>mx.containers.ControlBar</linktext></link><link href="mx.containers.xml#Panel"><linktext>mx.containers.Panel</linktext></link><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#ColorPicker"><linktext>mx.controls.ColorPicker</linktext></link><link href="mx.controls.xml#ComboBox"><linktext>mx.controls.ComboBox</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link></related-links><adobeApiEvent id="mx.controls:RichTextEditor_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
        TextArea コントロールでテキストの内容またはフォーマットを変更すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
        TextArea コントロールでテキストの内容またはフォーマットを変更すると送出されます。 <codeph>text</codeph> プロパティまたは <codeph>htmlText</codeph> プロパティを再設定して TextArea の内容を変更した場合、このイベントは送出されません。
        
        </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:RichTextEditor:RichTextEditor"><apiName>RichTextEditor</apiName><shortdesc>コンストラクターです。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>コンストラクターです。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:RichTextEditor:alignToolTip"><apiName>alignToolTip</apiName><shortdesc>
     ユーザーがテキストの配置用のボタンの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Align</apiData><apiType value="String"/><apiDefaultValue>"Align"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーがテキストの配置用のボタンの上に移動したときに表示されるツールヒントです。 すべてのボタンは同じツールヒントを共有します。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:boldToolTip"><apiName>boldToolTip</apiName><shortdesc>
     ユーザーがテキストを太字にするボタンの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Bold</apiData><apiType value="String"/><apiDefaultValue>"Bold"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーがテキストを太字にするボタンの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:bulletToolTip"><apiName>bulletToolTip</apiName><shortdesc>
     ユーザーが箇条書きリストボタンの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Bullet</apiData><apiType value="String"/><apiDefaultValue>"Bullet"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーが箇条書きリストボタンの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:colorPickerToolTip"><apiName>colorPickerToolTip</apiName><shortdesc>
     ユーザーが ColorPicker コントロールの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Color</apiData><apiType value="String"/><apiDefaultValue>"Color"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーが ColorPicker コントロールの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:fontFamilyToolTip"><apiName>fontFamilyToolTip</apiName><shortdesc>
     ユーザーがフォントドロップダウンリストの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Font Family</apiData><apiType value="String"/><apiDefaultValue>"Font Family"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーがフォントドロップダウンリストの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:fontSizeToolTip"><apiName>fontSizeToolTip</apiName><shortdesc>
     ユーザーがフォントサイズのドロップダウンリストの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Font Size</apiData><apiType value="String"/><apiDefaultValue>"Font Size"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーがフォントサイズのドロップダウンリストの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:italicToolTip"><apiName>italicToolTip</apiName><shortdesc>
     ユーザーがテキストを斜体にするボタンの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Italic</apiData><apiType value="String"/><apiDefaultValue>"Italic"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーがテキストを斜体にするボタンの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:linkToolTip"><apiName>linkToolTip</apiName><shortdesc>
     ユーザーがリンクテキスト入力フィールドの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Link</apiData><apiType value="String"/><apiDefaultValue>"Link"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーがリンクテキスト入力フィールドの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:underlineToolTip"><apiName>underlineToolTip</apiName><shortdesc>
     ユーザーがテキストに下線を付けるボタンの上に移動したときに表示されるツールヒントです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Underline</apiData><apiType value="String"/><apiDefaultValue>"Underline"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     ユーザーがテキストに下線を付けるボタンの上に移動したときに表示されるツールヒントです。 ツールヒントを表示するには、RichTextEditor コントロールの <codeph>showToolTips</codeph> プロパティも <codeph>true</codeph> に設定する必要があります。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:defaultLinkProtocol:get"><apiName>defaultLinkProtocol</apiName><shortdesc>
     リンクテキストの先頭で使用するデフォルトのプロトコルストリングです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"http://"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     リンクテキストの先頭で使用するデフォルトのプロトコルストリングです。 このストリングが LinkTextInput サブコントロールに表示されるので、ユーザーはリンクテキストの入力時にプロトコル識別子を入力する必要がありません。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:htmlText:get"><apiName>htmlText</apiName><shortdesc>
     RichTextEditor コントロールの TextArea サブコントロールに表示される HTML マークアップを含むテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
     </apiDefaultValue></apiValueDef><apiDesc>
     RichTextEditor コントロールの TextArea サブコントロールに表示される HTML マークアップを含むテキストです。 このプロパティと <codeph>text</codeph> プロパティを同時に設定することはできません。 一方のプロパティを設定すると、その値によって、他方のプロパティを使用して設定した値が置き換えられます。 両方のプロパティを取得できます。<codeph>htmlText</codeph> プロパティは、現在のテキストフォーマットを表す HTML マークアップを含むストリングを必ず返します。 このプロパティの使い方の詳細については、TextArea の説明を参照してください。
     
     </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:selection:get"><apiName>selection</apiName><shortdesc>
      TextArea サブコントロール内の選択されたテキストを含む TextRange オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.textClasses:TextRange</apiValueClassifier></apiValueDef><apiDesc>
      TextArea サブコントロール内の選択されたテキストを含む TextRange オブジェクトです。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:showControlBar:get"><apiName>showControlBar</apiName><shortdesc>
     テキストをフォーマットするコントロールを含むコントロールバーを表示するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
     テキストをフォーマットするコントロールを含むコントロールバーを表示するかどうかを指定します。
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:showToolTips:get"><apiName>showToolTips</apiName><shortdesc>
     テキストをフォーマットするコントロールのツールヒントを表示するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
     テキストをフォーマットするコントロールのツールヒントを表示するかどうかを指定します。 
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:text:get"><apiName>text</apiName><shortdesc>
     RichTextEditor コントロールの TextArea サブコントロールに表示される、マークアップのないプレーンテキストです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
     </apiDefaultValue></apiValueDef><apiDesc>
     RichTextEditor コントロールの TextArea サブコントロールに表示される、マークアップのないプレーンテキストです。 このプロパティと <codeph>htmlText</codeph> プロパティを同時に設定することはできません。 一方のプロパティを設定すると、その値によって、他方のプロパティを使用して設定した値が置き換えられます。 両方のプロパティを取得できます。<codeph>text</codeph> プロパティは、フォーマット情報のないプレーンテキストのストリングを必ず返します。 このプロパティの使い方の詳細については、TextArea の説明を参照してください。
     
     </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:RadioButtonGroup"><apiName>RadioButtonGroup</apiName><shortdesc>
  RadioButtonGroup コントロールは、1 つの相互排他的コントロールとして機能する RadioButton コントロールのグループを定義します。RadioButton コントロールは一度に 1 つしか選択できません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:RadioButtonGroup" replacement="spark.components.RadioButtonGroup" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:RadioButtonGroup&gt;</code> tag inherits all of the
  tag attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:RadioButtonGroup
    <strong>Properties</strong>
    enabled="true|false"
    id="<i>No default</i>"
    labelPlacement="right|left|top|bottom"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    itemClick="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IMXMLObject</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  RadioButtonGroup コントロールは、1 つの相互排他的コントロールとして機能する RadioButton コントロールのグループを定義します。RadioButton コントロールは一度に 1 つしか選択できません。 RadioButton インスタンスを RadioButtonGroup にグループ化することはオプションですが、グループ化を行うと、例えば、単一のイベントハンドラーを個々のボタンではなく、ボタングループで設定できます。
  
  <p><codeph>id</codeph> プロパティが必要です（<codeph>&lt;mx:RadioButtonGroup></codeph> タグを使用してグループの名前を定義する場合）。</p> 
 
  <p>RadioButtonGroup コントロールは UIComponent ではなく EventDispatcher のサブクラスであり、IMXMLObject インターフェイスを実装します。 他のすべての Flex のビジュアルコンポーネントは UIComponent のサブクラスであり、IUIComponent インターフェイスを実装します。Flex コンパイラーには RadioButtonGroup コントロールのサポートが組み込まれているため、RadioButtonGroup コントロールを Flex コンテナの子として使用できます。ただし、IUIComponent は実装されません。他のすべてのコンテナの子では、IUIComponent インターフェイスを実装する必要があります。</p>
 
  <p>そのため、ビジュアルコンポーネントを、IMXMLObject インターフェイスを実装する EventDispatcher のサブクラスとして定義しようとしても、それをコンテナの子として使用することはできません。</p>
 
  </apiDesc><example conref="RadioButtonGroupExample.mxml"><swfblock conref="examples/RadioButtonGroupExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#RadioButton"><linktext>mx.controls.RadioButton</linktext></link></related-links><adobeApiEvent id="mx.controls:RadioButtonGroup_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  ユーザーがグループ内の RadioButton コントロールを選択したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがグループ内の RadioButton コントロールを選択したときに送出されます。 各 RadioButton コントロールについてハンドラーを設定することもできます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:RadioButtonGroup_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  このグループ内で選択された RadioButton コントロールの値が変化したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  このグループ内で選択された RadioButton コントロールの値が変化したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:RadioButtonGroup:RadioButtonGroup"><apiName>RadioButtonGroup</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>document</apiItemName><apiOperationClassifier>mx.core:IFlexDisplayObject</apiOperationClassifier><apiData>null</apiData><apiDesc>クラスが単純に EventDispatcher を継承する場合は、<codeph>document</codeph> パラメーターを使用しないでください。
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.events.EventDispatcher.xml"><linktext>flash.events.EventDispatcher</linktext></link></related-links></apiConstructor><apiOperation id="mx.controls:RadioButtonGroup:getRadioButtonAt"><apiName>getRadioButtonAt</apiName><shortdesc>
      指定されたインデックス位置にある RadioButton コントロールを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>指定された RadioButton コントロールです。
      
      </apiDesc><apiOperationClassifier>mx.controls:RadioButton</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>RadioButtonGroup コントロール内の RadioButton のインデックスです。最初のコントロールのインデックスは 0 です。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      指定されたインデックス位置にある RadioButton コントロールを返します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:RadioButtonGroup:initialized"><apiName>initialized</apiName><shortdesc>
      遅延インスタンス化をサポートする IMXMLObject.initialized() メソッドの実装です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>このオブジェクトを作成した MXML ドキュメントです。
     
      </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>ドキュメントがこのオブジェクトを参照するために使用する識別子です。オブジェクトがドキュメントの deep プロパティである場合、<codeph>id</codeph> は null になります。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      遅延インスタンス化をサポートする <codeph>IMXMLObject.initialized()</codeph> メソッドの実装です。
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#IMXMLObject"><linktext>mx.core.IMXMLObject</linktext></link></related-links></apiOperation><apiValue id="mx.controls:RadioButtonGroup:enabled:get"><apiName>enabled</apiName><shortdesc>
      選択が可能かどうかを判別します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      選択が可能かどうかを判別します。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      グループ内の各コントロールの RadioButton アイコンを基準にした RadioButton ラベルの位置です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"right"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      グループ内の各コントロールの RadioButton アイコンを基準にした RadioButton ラベルの位置です。 この設定はコントロールごとにオーバーライドできます。
     
      <p>MXML での有効な値は、<codeph>"right"</codeph>、<codeph>"left"</codeph>、<codeph>"bottom"</codeph> および <codeph>"top"</codeph> です。 </p>
     
      <p>ActionScript では、このプロパティを設定するために、<codeph>ButtonLabelPlacement.RIGHT</codeph>、<codeph>ButtonLabelPlacement.LEFT</codeph>、<codeph>ButtonLabelPlacement.BOTTOM</codeph> および <codeph>ButtonLabelPlacement.TOP</codeph> の各定数を使用します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:numRadioButtons:get"><apiName>numRadioButtons</apiName><shortdesc>
      この RadioButtonGroup に属する RadioButton の数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      この RadioButtonGroup に属する RadioButton の数です。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:selectedValue:get"><apiName>selectedValue</apiName><shortdesc>
      null（デフォルト値）以外の値が設定されている場合、グループから選択された RadioButton コントロールの value プロパティの値です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      グループから選択された RadioButton コントロールの <codeph>value</codeph> プロパティの値です（<codeph>null</codeph>（デフォルト値）以外の値が設定されている場合）。 それ以外の場合は、<codeph>selectedValue</codeph>が、選択された RadioButton の <codeph>label</codeph> プロパティの値です。 RadioButton が選択されていない場合、このプロパティは <codeph>null</codeph> です。
     
      <p><codeph>selectedValue</codeph> を設定すると、<codeph>value</codeph> プロパティまたは <codeph>label</codeph> プロパティがこの値に一致する RadioButton コントロールが選択されます。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:selection:get"><apiName>selection</apiName><shortdesc>
      グループ内で現在選択されている RadioButton コントロールへの参照を格納します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:RadioButton</apiValueClassifier><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      グループ内で現在選択されている RadioButton コントロールへの参照を格納します。 このプロパティには ActionScript からのみアクセスできます。MXML で設定することはできません。 このプロパティを <codeph>null</codeph> に設定すると、現在選択されている RadioButton コントロールの選択が解除されます。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Menu"><apiName>Menu</apiName><shortdesc>
  Menu コントロールは、大部分のソフトウェアアプリケーションに見られるファイルメニューや編集メニューのような、個別に選択可能な選択肢を含むポップアップメニューを作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBarStyleName"/><Exclude kind="property" name="showScrollTips"/><Exclude kind="property" name="scrollTipFunction"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="liveScrolling"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBarStyleName"/><Exclude kind="property" name="allowMultipleSelection"/><styles><style inherit="no" name="separatorSkin" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  セパレーターとして識別されるすべてのメニューアイテムのスキンです。デフォルト値は、Assets.swf ファイル内の "MenuSeparator" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="radioDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  タイプ識別子がラジオボタンであるすべての無効なメニューアイテムのアイコンです。デフォルト値は、Assets.swf ファイル内の "MenuRadioDisabled" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="radioIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  タイプ識別子がラジオボタンであるすべての有効なメニューアイテムのアイコンです。デフォルト値は、Assets.swf ファイル内の "MenuRadioEnabled" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="checkDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  タイプ識別子がチェックボックスであるすべての無効なメニューアイテムのアイコンです。デフォルト値は、Assets.swf ファイル内の "MenuCheckDisabled" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="checkIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  タイプ識別子がチェックボックスであるすべての有効なメニューアイテムのアイコンです。デフォルト値は、Assets.swf ファイル内の "MenuCheckEnabled" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="branchDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  サブメニューがあるすべての無効なメニューアイテムのアイコンです。デフォルト値は、Assets.swf ファイル内の "MenuBranchDisabled" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="branchIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  サブメニューがあるすべての有効なメニューアイテムのアイコンです。デフォルト値は、Assets.swf ファイル内の "MenuBranchEnabled" シンボルです。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  メニューアイテムが選択されたときのメニューアイテムテキストの色です。
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  ユーザーがメニューアイテムの上にマウスを移動したときのメニューアイテムテキストの色です。
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  メニューまたはサブメニューアイテムの左端からのテキストの 1 行目のオフセットです。 
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:Menu" playerVersion="Flash9" type="Function">
<description>
  プログラムによるトゥイーンの制御に使用される <codeph>easingFunction</codeph> 式への参照です。
 
  </description>
<default>"undefined"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  メニューアイテムが選択されたときのメニューアイテムの背景の色です。
  
  </description>
<default>0x7FCEFF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  ユーザーがメニューアイテムの上にマウスを移動したときのメニューアイテムの背景の色です。 
  
  </description>
<default>0xB2E1FF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  メニューまたはサブメニューが開くまでのトランジションの持続時間です（ミリ秒単位）。値 0 はトランジションなしを示します。
  
  </description>
<default>250 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="rightIconGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  メニューアイテムのラベル右側の間隔です。この間隔にブランチアイコンが収まらない場合は、正しく収まるように間隔が伸張されます。デフォルト値は 15 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="leftIconGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  メニューアイテムのラベル左側の間隔です。この間隔にアイコン（カスタムアイコンおよびタイプアイコン）が収まらない場合は、正しく収まるように間隔が伸張されます。デフォルト値は 18 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  子（アイコンとラベル）同士の水平方向の間隔を示すピクセル数です。
 
  </description>
<default>6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:Menu" playerVersion="Flash9" type="Array">
<description>
  代替パターンでメニューまたはサブメニューアイテムを表示する場合に使用する色です。値には、複数の色の配列を指定できます。 このスタイルは、<codeph>backgroundColor</codeph> が指定されない場合にのみ使用されます。 
 
  </description>
<default>"undefined"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerContainer</apiBaseInterface><apiBaseClassifier>mx.controls:List</apiBaseClassifier></apiClassifierDef><apiDesc>
  Menu コントロールは、大部分のソフトウェアアプリケーションに見られるファイルメニューや編集メニューのような、個別に選択可能な選択肢を含むポップアップメニューを作成します。 ポップアップメニューには、必要に応じて複数のサブメニューのレベルを設定できます。Menu コントロールが開いたら、次のいずれかのアクションで閉じられるまで表示されたままになります。
 
  <ul>
   <li><codeph>Menu.hide()</codeph> メソッドの呼び出し。</li>
   <li>ユーザーが有効なメニューアイテムを選択したとき。</li>
   <li>ユーザーが Menu コントロールの外側をクリックしたとき。</li>
   <li>ユーザーがアプリケーション内の別のコンポーネントを選択したとき。</li>
  </ul>
 
  <p>Menu クラスに対応する MXML タグはありません。ActionScript を使用してその MXML タグを作成する必要があります。</p>
 
  <p>Menu コントロールには、次のようなサイズ設定の特性があります。</p>
     <adobetable class="innertable">
        
        
     <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
           <entry>デフォルトサイズ</entry>
           <entry>幅は Menu のテキストによって決まります。デフォルトの高さは、メニューの行数に 1 行の高さのデフォルトである 19 ピクセルをかけた数です。</entry>
        </row></tbody></tgroup></adobetable>
 
 <p>Menu アイテムに使用するデータプロバイダーによって、次の XML データプロバイダーが示すように、アイテムの表示方法と動き方を決定する属性をいくつか指定できます。</p>
  <pre>
   &lt;mx:XML format="e4x" id="myMenuData">
     &lt;root>
        &lt;menuitem label="MenuItem A" icon="myTopIcon">
            &lt;menuitem label="SubMenuItem A-1" enabled="False"/>
            &lt;menuitem label="SubMenuItem A-2"/>
        &lt;/menuitem>
        &lt;menuitem label="MenuItem B" type="check" toggled="true"/>
        &lt;menuitem label="MenuItem C" type="check" toggled="false" icon="myTopIcon"/>
        &lt;menuitem type="separator"/> 
        &lt;menuitem label="MenuItem D" icon="myTopIcon">
            &lt;menuitem label="SubMenuItem D-1" type="radio" groupName="one"/>
            &lt;menuitem label="SubMenuItem D-2" type="radio" groupName="one" toggled="true"/>
            &lt;menuitem label="SubMenuItem D-3" type="radio" groupName="one"/>
        &lt;/menuitem>
    &lt;/root>
 &lt;/mx:XML></pre>
 
  <p>次の表では、指定できる属性とそのデータ型、さらにその目的と、メニューで DefaultDataDescriptor クラスを使用してデータプロバイダーを解析する場合に、そのデータプロバイダーが属性をどのように表示するかを一覧で説明します。</p>
 
  <adobetable class="innertable">
  
  
  
  
  
  
  
 <tgroup cols="3"><thead><row><entry>属性</entry><entry>データ型</entry><entry>説明</entry></row></thead><tbody><row>
    <entry><codeph>enabled</codeph></entry>
    <entry>ブール</entry>
    <entry>ユーザーがメニューアイテムを選択できる場合は <codeph>true</codeph>、選択できない場合は <codeph>false</codeph> を指定します。 このプロパティを指定しないと、アイテムはこの値が <codeph>true</codeph> の場合と同じように扱われます。 デフォルトのデータ記述子を使用する場合、データプロバイダーでは <codeph>enabled</codeph> XML 属性またはオブジェクトフィールドを使用して、この特定を指定する必要があります。</entry>
  </row><row>
    <entry><codeph>groupName</codeph></entry>
    <entry>ストリング</entry>
    <entry> （<codeph>radio</codeph> タイプでのみ必須および有効）ラジオグループ内のラジオボタンアイテムを関連付ける識別子です。 デフォルトのデータ記述子を使用する場合、データプロバイダーでは <codeph>groupName</codeph> XML 属性またはオブジェクトフィールドを使用して、この特性を指定する必要があります。</entry>
  </row><row>
    <entry><codeph>icon</codeph></entry>
    <entry>クラス</entry>
    <entry>イメージアセットのクラス識別子を指定します。 このアイテムは、<codeph>check</codeph> タイプ、<codeph>radio</codeph> タイプおよび <codeph>separator</codeph> タイプでは使用しません。 選択したラジオアイテムやチェックボックスアイテムに使用するアイコンを指定するには、<codeph>checkIcon</codeph> スタイルや <codeph>radioIcon</codeph> スタイルを使用します。 アイコンを指定するデータ内のフィールド名や、アイコンを決定する関数は、メニューの <codeph>iconField</codeph> プロパティまたは <codeph>iconFunction</codeph> プロパティで指定します。</entry>
  </row><row>
    <entry><codeph>label</codeph></entry>
    <entry>ストリング</entry>
    <entry>コントロールに表示されるテキストを指定します。 このアイテムは、<codeph>separator</codeph> 以外のすべてのタイプのメニューアイテムに使用します。 ラベルを指定するデータ内のフィールド名や、ラベルを決定する関数は、メニューの <codeph>labelField</codeph> プロパティまたは <codeph>labelFunction</codeph> プロパティで指定します。 データプロバイダーが E4X XML 形式の場合、ラベルを表示するにはこれらのプロパティのいずれかを指定する必要があります。 データプロバイダーがストリングの配列である場合、ストリング値がラベルとして使用されます。</entry>
  </row><row>
    <entry><codeph>toggled</codeph></entry>
    <entry>ブール</entry>
    <entry>check アイテムまたは radio アイテムが選択されているかを指定します。 このプロパティを選択しないと、アイテムはこの値が <codeph>false</codeph> の場合と同じように扱われ、アイテムは選択されません。 デフォルトのデータ記述子を使用する場合、データプロバイダーでは toggled XML 属性またはオブジェクトフィールドを使用して、この特性を指定する必要があります。</entry>
  </row><row>
    <entry><codeph>type</codeph></entry>
    <entry>ストリング</entry>
    <entry>メニューアイテムのタイプを指定します。 有効な値は、<codeph>separator</codeph>、<codeph>check</codeph> または <codeph>radio</codeph> です。 他の値や、タイプ項目のないノードは、normal のメニュー項目として扱われます。 デフォルトのデータ記述子を使用する場合、データプロバイダーでは type XML 属性またはオブジェクトフィールドを使用して、この特性を指定する必要があります。</entry>
  </row></tbody></tgroup></adobetable>
 
 
  </apiDesc><example conref="SimpleMenuExample.mxml"><swfblock conref="examples/SimpleMenuExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link><link href="mx.controls.menuClasses.xml#IMenuDataDescriptor"><linktext>mx.controls.menuClasses.IMenuDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  ユーザーがメニューアイテム上にマウスを置いたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがメニューアイテム上にマウスを置いたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  ユーザーがメニューアイテムからマウスを離すときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーがメニューアイテムからマウスを離すときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.MENU_SHOW_menuShow"><apiName>menuShow</apiName><shortdesc>
  メニューまたはサブメニューが開いたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  メニューまたはサブメニューが開いたときに送出されます。 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.MENU_HIDE_menuHide"><apiName>menuHide</apiName><shortdesc>
  メニューまたはサブメニューが非表示にされたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  メニューまたはサブメニューが非表示にされたときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  メニューアイテムが選択されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  メニューアイテムが選択されたときに送出されます。 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  ユーザー操作の結果として選択が変更されたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザー操作の結果として選択が変更されたときに送出されます。 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Menu:Menu"><apiName>Menu</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
     
      <p>通常、アプリケーションは、Menu コンストラクターを直接呼び出しません。 代わりに、アプリケーションは、<codeph>Menu.createMenu()</codeph> メソッドを呼び出します。</p>
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Menu:createMenu"><apiName>createMenu</apiName><shortdesc>
      Menu クラスのインスタンスを作成し、作成したインスタンスを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><showRoot>
     
      </showRoot></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Menu クラスのインスタンスです。 
     
      </apiDesc><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier></apiReturn><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>PopUpManager がその中に Menu コントロールを配置するために使用するコンテナです。このオブジェクトが実際に Menu コントロールの親にならない場合があります。
     
      </apiDesc></apiParam><apiParam><apiItemName>mdp</apiItemName><apiType value="Object"/><apiDesc>Menu コントロールのデータプロバイダーです。 
      </apiDesc></apiParam><apiParam><apiItemName>showRoot</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>データプロバイダーのルートノードを表示するかどうかを指定するブール値のフラグです。
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Menu クラスのインスタンスを作成し、作成したインスタンスを返します。Menu コントロールの内容は、このメソッドの <codeph>mdp</codeph> 引数によって決定されます。Menu コントロールは、メソッドの <codeph>parent</codeph> 引数で指定した親コンテナに配置されます。このメソッドは、Menu コントロールを表示しません。このメソッドは Menu コントロールを作成するだけであり、Menu が表示される前に Menu インスタンスを変更できるようにします。Menu を表示するには <codeph>Menu.show()</codeph> メソッドを呼び出します。
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#Menu/popUpMenu()"><linktext>mx.controls.Menu.popUpMenu()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:Menu:hide"><apiName>hide</apiName><shortdesc>
      Menu コントロールが可視の場合は Menu コントロールとそのサブメニューを非表示にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Menu コントロールが可視の場合は Menu コントロールとそのサブメニューを非表示にします。  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      新しい MenuListData インスタンスを作成し、入力されたデータプロバイダーアイテムに基づいてフィールドに値を格納します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>新しく作成した ListData オブジェクトです。
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>ListData の設定に使用するデータプロバイダーアイテムです。
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>アイテムの UID です。
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>データプロバイダー内のアイテムのインデックスです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      新しい MenuListData インスタンスを作成し、入力されたデータプロバイダーアイテムに基づいてフィールドに値を格納します。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:measure"><apiName>measure</apiName><shortdesc>
      メニューアイテムの幅と高さに基づいて、Menu の適切な幅と高さを計算します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      メニューアイテムの幅と高さに基づいて、Menu の適切な幅と高さを計算します。このメソッドでは、サブメニューの位置やサイズは考慮されません。 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:popUpMenu"><apiName>popUpMenu</apiName><shortdesc>
      既存の Menu コントロールの dataProvider を設定し、その Menu コントロールを指定された親コンテナに配置します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>menu</apiItemName><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier><apiDesc>ポップアップする Menu コントロールです。 
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>PopUpManager がその中に Menu コントロールを配置するために使用するコンテナです。このオブジェクトが実際に Menu コントロールの親にならない場合があります。このプロパティを省略すると、メソッドによって Menu コントロールの親がアプリケーションに設定されます。 
     
      </apiDesc></apiParam><apiParam><apiItemName>mdp</apiItemName><apiType value="Object"/><apiDesc>ポップアップされる Menu に設定される dataProvider オブジェクトです。このプロパティを省略すると、メソッドにより Menu のデータプロバイダーは新しい空の XML オブジェクトに設定されます。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      既存の Menu コントロールの dataProvider を設定し、その Menu コントロールを指定された親コンテナに配置します。このメソッドは、Menu コントロールを表示しません。Menu コントロールを表示するには、<codeph>Menu.show()</codeph> メソッドを使用する必要があります。<codeph>Menu.createMenu()</codeph> メソッドはこのメソッドを使用します。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:setMenuItemToggled"><apiName>setMenuItemToggled</apiName><shortdesc>
      メニューアイテムを切り替えます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>切り替えを行うメニューアイテムです。
      </apiDesc></apiParam><apiParam><apiItemName>toggle</apiItemName><apiType value="Boolean"/><apiDesc>アイテムが切り替えられるかどうかを示すブール値です。 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      メニューアイテムを切り替えます。メニューアイテムのタイプ識別子は、チェックボックスまたはラジオボタンである必要があります。それ以外の場合は効果がありません。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:show"><apiName>show</apiName><shortdesc>
      Menu コントロールを表示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>xShow</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Menu コントロールの左上隅の水平位置です（オプション）。
     
      </apiDesc></apiParam><apiParam><apiItemName>yShow</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Menu コントロールの左上隅の垂直位置です（オプション）。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Menu コントロールを表示します。Menu コントロールが表示されていない場合、Menu の左上隅を親アプリケーションの指定の座標に配置し、必要に応じて Menu コントロールのサイズを変更してから表示します。<codeph>show()</codeph> メソッドの x および y 引数では、サンドボックスルートを基準とする Menu コントロールの左上隅の相対座標を指定します。サンドボックスルートは必ずしも Menu コントロールの直接の親であるとは限りません。例えば、Menu コントロールが Panel コンテナの内部でネストされている HBox コンテナの場合、x および y 座標は、HBox コンテナではなく Application コンテナへの相対座標になります。
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Menu:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      データプロバイダー内のデータにアクセスして操作するオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      データプロバイダー内のデータにアクセスして操作するオブジェクトです。 Menu コントロールは、データに関する情報について、データ記述子に委任します。次に、このデータはデータソースに関する解析と移動のために使用されます。ルートメニューに対して定義されたデータ記述子は、すべてのサブメニューで使用されます。デフォルト値は、DefaultDataDescriptor クラスの内部インスタンスです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Menu:hasRoot:get"><apiName>hasRoot</apiName><shortdesc>
      現在のデータプロバイダーにルートノード（例えば、階層構造内の単一の最上位ノードなど）があることを示すフラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue></apiValueDef><apiDesc>
      現在のデータプロバイダーにルートノード（例えば、階層構造内の単一の最上位ノードなど）があることを示すフラグです。 XML と Object はルートノードがあるタイプの例であり、リストと配列はルートノードがないタイプの例です。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Menu/showRoot"><linktext>showRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Menu:parentMenu:get"><apiName>parentMenu</apiName><shortdesc>
      メニューの階層チェーンにおける親メニューです。現在のメニューはこの親のサブメニューです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:Menu</apiValueClassifier></apiValueDef><apiDesc>
      メニューの階層チェーンにおける親メニューです。現在のメニューはこの親のサブメニューです。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Menu:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      データプロバイダーのルートノードを表示するかどうかを指定する Boolean フラグです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      データプロバイダーのルートノードを表示するかどうかを指定するブール値のフラグです。 dataProvider オブジェクトにルートノードがあるときに、showRoot が <codeph>false</codeph> に設定されていると、Menu コントロールはルートノードを表示しません。ルートノードの子孫のみを表示します。 このフラグは、リストや配列などのルートノードがないデータプロバイダーには影響しません。 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Menu/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:VScrollBar"><apiName>VScrollBar</apiName><shortdesc>
  VScrollBar（垂直の ScrollBar）コントロールを使用すると、データが多すぎて表示領域に収まらない場合に、表示される部分のデータを制御できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:VScrollBar" replacement="spark.components.VScrollBar" since="4.0">
	</Alternative><styles><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:VScrollBar" playerVersion="Flash9" type="Number">
<description>
  ユーザーがマウスでボタンを押し続けた場合に、<codeph>buttonDown</codeph> イベントを繰り返すミリ秒単位の間隔です。 デフォルト値は 35 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:VScrollBar" playerVersion="Flash9" type="Number">
<description>
  最初の <codeph>buttonDown</codeph> イベントから、<codeph>buttonDown</codeph> イベントの繰り返しを <codeph>repeatInterval</codeph> で開始するまでの待機時間（ミリ秒単位）です。 デフォルト値は 500 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VScrollBar&gt;</code> tag inherits all the
  tag attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:VScrollBar
    <strong>Styles</strong>
    repeatDelay="500"
    repeatInterval="35"
 
    <strong>Events</strong>
    scroll="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.scrollClasses:ScrollBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  VScrollBar（垂直の ScrollBar）コントロールを使用すると、データが多すぎて表示領域に収まらない場合に、表示される部分のデータを制御できます。このコントロールは、基本の ScrollBar コントロールを拡張したものです。 
  
  <p>VScrollBar コントロールは単独のコントロールとしても使用できますが、通常は他のコンポーネントグループと組み合わせてスクロール機能を提供します。</p>
  
  <p>ScrollBar コントロールは、2 つの矢印ボタン、1 つのトラックおよび 1 つのサムの合計 4 つのパーツで構成されます。サムの位置と矢印ボタンの表示は、ScrollBar コントロールの現在の状態に依存します。ScrollBar コントロールでは、4 つのパラメーターを使って表示状態が計算されます。</p>
 
  <ul>
    <li>範囲の最小値</li>
    <li>範囲の最大値</li>
    <li>現在の位置：最大値と最小値の範囲内であることが必要です。</li>
    <li>ビューポートサイズ：範囲全体のうち一度に表示できるアイテムの数を表します。アイテムの数は、範囲に該当する数以下であることが必要です。ここで、範囲とは、範囲の最小値と最大値の間に存在する値の集合です。</li>
  </ul>
  
  </apiDesc><example conref="VScrollBarExample.mxml"><swfblock conref="examples/VScrollBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.scrollClasses.xml#ScrollBar"><linktext>mx.controls.scrollClasses.ScrollBar</linktext></link></related-links><adobeApiEvent id="mx.controls:VScrollBar_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  ユーザーが開始したアクションまたはプログラムによって ScrollBar がスクロールされたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ユーザーが開始したアクションまたはプログラムによって ScrollBar がスクロールされたときに送出されます。 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:VScrollBar:VScrollBar"><apiName>VScrollBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:VideoDisplay"><apiName>VideoDisplay</apiName><shortdesc>
  VideoDisplay コントロールを使用すると、Flex アプリケーションで FLV ファイルを再生できます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:VideoDisplay" replacement="spark.components.VideoPlayer" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  ドロップシャドウの幅です。このプロパティを負の値に設定すると、シャドウはコンポーネントの上に表示されます。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  ドロップシャドウの方向です。 有効な値は <codeph>"left"</codeph>、<codeph>"center"</codeph> および <codeph>"right"</codeph> です。
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  ドロップシャドウの色です。
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b/><codeph/>設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  コンポーネントのドロップシャドウの表示または非表示を指定するブール型プロパティです。 このスタイルは <codeph>borderStyle="solid"</codeph> と共に使用します。 デフォルト値は <codeph>false</codeph> です。
 
  <p><b>メモ：</b>ドロップシャドウをコンテナに表示するには、<codeph>backgroundColor</codeph> プロパティまたは <codeph>backgroundImage</codeph> プロパティを設定します。 設定しない場合、コンテナのデフォルトの背景は透明なので、シャドウはコンテナの背後に表示されます。</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  コンポーネントの角に付いている丸みの半径です。デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は 0 になります。ApplicationControlBar のデフォルト値は 5 です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  境界ボックスの境界線の幅です。 <codeph>borderStyle</codeph> が <codeph>"solid"</codeph> に設定されている場合にのみ使用されます。
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:VideoDisplay" playerVersion="Flash9" type="String">
<description>
  境界ボックスのスタイルです。 有効な値は <codeph>"none"</codeph>、<codeph>"solid"</codeph>、<codeph>"inset"</codeph> および <codeph>"outset"</codeph> です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は、<codeph>"inset"</codeph> になります。 ほとんどの Container のデフォルト値は <codeph>"none"</codeph> です。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:VideoDisplay" playerVersion="Flash9" type="Class">
<description>
  コンポーネントの境界線のスキンクラスです。 明示的にデフォルト値が設定されている場合を除き、mx.skins.halo.HaloBorder クラスがすべてのコンポーネントのデフォルト値になります。Panel コンテナのデフォルト値は mx.skins.halo.PanelSkin です。コンポーネントのデフォルト値を確認するには、default.css ファイルを参照してください。
 
  </description>
<default>mx.skins.halo.HaloBorder
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  境界ボックスの境界線のうち、どれが表示されるかを示します。表示する境界線をスペース区切りのストリングで指定します。 ストリングには、<codeph>"left"</codeph>、<codeph>"top"</codeph>、<codeph>"right"</codeph> および <codeph>"bottom"</codeph> を任意の順序で指定できます。 デフォルト値は <codeph>"left top right bottom"</codeph> です。この場合、4 辺すべてを表示します。 このスタイルは、borderStyle が <codeph>"solid"</codeph> の場合にのみ使用されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  境界線の色です。 デフォルト値はコンポーネントのクラスに応じて異なります。クラスでオーバーライドされない場合は <codeph>0xB7BABC</codeph> になります。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Number">
<description>
  
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  <codeph>backgroundImage</codeph> で指定されているイメージを、元のサイズとは異なるサイズに拡大および縮小します。 <codeph>"100%"</codeph> に設定すると、コンポーネント全体に収まるサイズにイメージを伸縮します。 パーセント値で指定する場合は、パーセント記号（%）付きで指定する必要があります。 Application コンテナのデフォルトは <codeph>100%</codeph> です。 他のすべてのコンテナのデフォルト値は <codeph>auto</codeph> で、イメージの元のサイズが維持されます。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Object">
<description>
  コンポーネントの背景イメージです。 これには、絶対 URL、相対 URL、絶対クラス、または相対クラスを指定できます。 <codeph/><codeph/>背景色の前面に背景イメージを表示します。 デフォルト値は <codeph>undefined</codeph> で、「未定義」であることを意味します。 このスタイルと <codeph>backgroundColor</codeph> スタイルの両方が undefined である場合、コンポーネントは透明な背景を持ちます。
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。 この結果、コンテナの背景イメージが、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントが無効になっている場合のコンポーネント背景色です。 グローバルデフォルト値は <codeph>undefined</codeph> です。 List コントロールのデフォルト値は、<codeph>0xDDDDDD</codeph>（明るい灰色）です。 コンテナが無効になっている場合は、背景がグレー表示されます。このグレー表示の度合いは、<codeph>disabledOverlayAlpha</codeph> スタイルで制御します。
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  コンポーネントの背景色です。 <codeph>backgroundColor</codeph> と <codeph>backgroundImage</codeph> の両方を設定できます。 一部のコンポーネントには背景色がありません。 DataGrid コントロールでは、このスタイル設定は無視されます。 デフォルト値は <codeph>undefined</codeph> で、未定義であることを意味します。 このスタイルと <codeph>backgroundImage</codeph> スタイルの両方が <codeph>undefined</codeph> である場合、コンポーネントは透明な背景を持ちます。
 
  <p>Application コンテナの場合、このスタイルはアプリケーションのロード時の背景色と、アプリケーションの実行時の背景のグラデーションを指定します。 指定された色よりもわずかに濃い色とわずかに薄い色の間でグラデーションパターンが計算されます。</p>
 
  <p>ほとんどの Flex コントロールのデフォルトスキンは、部分的に透明です。この結果、コンテナの背景色が、そのコンテナの中のコントロールに部分的ににじみ出るように表示されます。 コントロールの <codeph>fillAlphas</codeph> プロパティのアルファ値を 1 に設定することで、これを避けることができます。次に例を示します。
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  <codeph>backgroundColor</codeph> プロパティで定義されている、<codeph>backgroundImage</codeph> スタイルで定義されているイメージまたは SWF ファイルの背景色のアルファレベルです。 有効な値の範囲は、0.0 ～ 1.0 です。ほとんどのコントロールではデフォルト値は 1.0 ですが、ToolTip コントロールの場合デフォルト値は 0.95 であり、Alert コントロールの場合デフォルト値は 0.9 です。
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:VideoDisplay&gt;</code> tag inherits all the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:VideoDisplay
    <strong>Properties</strong>
    autoBandWidthDetection="false|true"
    autoPlay="true|false"
    autoRewind="true|false"
    bufferTime="0.1"
    cuePointManagerClass=""
    cuePoints=""
    idleTimeout="300000"
    live="false|true"
    maintainAspectRatio="true|false"
    playheadTime=""
    playheadUpdateInterval="250"
    progressInterval="250"
    source=""
    totalTime=""
    volume="0.75"
  
    <b>Styles</b>
    backgroundAlpha="1.0"
    backgroundColor="0x000000"
    backgroundImage="undefined"
    backgroundSize="undefined"
    borderColor="undefined"
    borderSides="left top right bottom"
    borderSkin="ClassReference('mx.skins.halo.HaloBorder')"
    borderStyle="none"
    borderThickness="1"
    cornerRadius="0"
    dropShadowColor="0x000000"
    dropShadowEnabled="false|true"
    shadowDirection="center"
    shadowDistance="2"
  
    <strong>Events</strong>
    close="<i>No default</i>"
    complete="<i>No default</i>"
    cuePoint="<i>No default</i>"
    playheadUpdate="<i>No default</i>"
    progress="<i>No default</i>"
    ready="<i>No default</i>"
    rewind="<i>No default</i>"
    stateChange="<i>No default</i>"
 
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  VideoDisplay コントロールを使用すると、Flex アプリケーションで FLV ファイルを再生できます。HTTP を介したプログレッシブダウンロード、Flash Media Server からのストリーミング、および Camera オブジェクトからのストリーミングをサポートします。
 
  </apiDesc><example conref="VideoDisplayExample.mxml"><swfblock conref="examples/VideoDisplayExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.STATE_CHANGE_stateChange"><apiName>stateChange</apiName><shortdesc>
  コントロールの状態が変化したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  コントロールの状態が変化したときに送出されます。
 
  <p>このイベントを使用すると、接続中、サイズ変更中、巻き戻し中などに、再生が応答可能な状態から無応答状態（または無応答状態から応答可能な状態）に移行するタイミングを把握できます。無応答状態では、<codeph>play()</codeph>、<codeph>pause()</codeph> および <codeph>stop()</codeph> の各メソッドの呼び出しと、<codeph>playHeadTime</codeph> プロパティへの書き込みがキューイングされ、プレーヤーが応答可能な状態に移行したときに実行されます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.REWIND_rewind"><apiName>rewind</apiName><shortdesc>
  コントロールの自動巻き戻し時に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.REWIND</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  コントロールの自動巻き戻し時に送出されます。
 
  </apiDesc></adobeApiEventDetail><related-links><link href="mx.controls.xml#VideoDisplay/autoRewind"><linktext>autoRewind</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.READY_ready"><apiName>ready</apiName><shortdesc>
  FLV ファイルがロードされ、再生の準備ができたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.READY</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  FLV ファイルがロードされ、再生の準備ができたときに送出されます。
 
  <p>このイベントは、<codeph>load()</codeph> メソッドまたは <codeph>play()</codeph> メソッドで新しい FLV ファイルがロードされた後、初めて VideoDisplay コントロールが応答可能な状態になったときに送出されます。 ロードされた FLV ファイルごとに一度だけ送出されます。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  FLV ファイルが完全にダウンロードされるまで継続的に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  FLV ファイルが完全にダウンロードされるまで継続的に送出されます。
 
  <p>このイベントを使用して、ロード済みバイト数またはバッファー内のバイト数を確認できます。 このイベントの送出は、<codeph>load()</codeph> メソッドまたは <codeph>play()</codeph> メソッドが初めて呼び出されたときに始まり、すべてのバイトがロードされたとき、またはネットワークエラーが発生した場合に終了します。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><shortdesc>
  ビデオの再生中に継続的に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  ビデオの再生中に継続的に送出されます。 イベントの時間間隔は、<codeph>playheadUpdateInterval</codeph> プロパティでミリ秒単位で指定し、デフォルト値は 250 ミリ秒です。 このイベントは、ビデオが一時停止または停止状態にあるときは送出されません。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.MetadataEvent.METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><shortdesc>
  FLV ファイルのメタデータへのアクセスが初めて発生したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MetadataEvent.METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>mx.events.MetadataEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  FLV ファイルのメタデータへのアクセスが初めて発生したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.CuePointEvent.CUE_POINT_cuePoint"><apiName>cuePoint</apiName><shortdesc>
  キューポイントの time プロパティの値が現在の再生ヘッドの位置の値に等しくなったときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CuePointEvent.CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events.CuePointEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  キューポイントの <codeph>time</codeph> プロパティの値が現在の再生ヘッドの位置の値に等しくなったときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  再生ヘッドが FLV ファイルの末尾に達したときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.COMPLETE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  再生ヘッドが FLV ファイルの末尾に達したときに送出されます。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  タイムアウトまたは close() メソッドの呼び出しによって NetConnection オブジェクトが閉じたときに送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  タイムアウトまたは <codeph>close()</codeph> メソッドの呼び出しによって NetConnection オブジェクトが閉じたときに送出されます。 このイベントは、Flash Media Server を操作するときに使用します。
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:VideoDisplay:VideoDisplay"><apiName>VideoDisplay</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:VideoDisplay:attachCamera"><apiName>attachCamera</apiName><shortdesc>
      カメラからビデオストリームの再生を行うことを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>camera</apiItemName><apiType value="flash.media:Camera"/><apiDesc>ビデオデータをキャプチャする Camera オブジェクトです。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      カメラからビデオストリームの再生を行うことを指定します。ビデオは、アプリケーションウィンドウ内のコントロールの境界内に表示されます。カメラからストリームを表示する場合は、<codeph>play()</codeph> メソッドを呼び出さないでください。
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:close"><apiName>close</apiName><shortdesc>
      入力ストリームと Flash Media Server への接続を強制的に閉じます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      入力ストリームと Flash Media Server への接続を強制的に閉じます。このメソッドを呼び出すと、<codeph>close</codeph> イベントが送出されます。アイドル時間が、<codeph>idleTimeout</codeph> プロパティで定義したタイムアウトに達すると接続が自動的に終了するので、通常はこのメソッドを直接呼び出す必要はありません。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:protected:createBorder"><apiName>createBorder</apiName><shortdesc>
      このコンポーネントの境界線を作成します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      このコンポーネントの境界線を作成します。境界線は通常 <codeph>borderStyle</codeph> スタイルと <codeph>borderSkin</codeph> スタイルによって決まります。border プロパティを境界線のインスタンスに設定する必要があります。
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:protected:layoutChrome"><apiName>layoutChrome</apiName><shortdesc>
      境界の位置とサイズを設定することで、サイズ変更に応答します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>コンポーネントの <codeph>scaleX</codeph> プロパティの値にかかわらず、コンポーネントの座標系でコンポーネントの幅をピクセル単位で指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>コンポーネントの <codeph>scaleY</codeph> プロパティの値にかかわらず、コンポーネントの座標系でコンポーネントの高さをピクセル単位で指定します。
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      境界の位置とサイズを設定することで、サイズ変更に応答します。
     
      <p><codeph>VideoDisplay.layoutChrome()</codeph> メソッドは、VideoDisplay の境界線の位置とサイズを設定します。VideoDisplay のすべてのサブクラスで、そのサブクラスの <codeph>layoutChrome()</codeph> メソッドから <codeph>super.layoutChrome()</codeph> メソッドを呼び出して、境界線が適切に配置されるようにする必要があります。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:load"><apiName>load</apiName><shortdesc>
      メディアファイルをロードしますが再生はしません。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      メディアファイルをロードしますが再生はしません。
     
      <p>このメソッドは、ファイルをロードしても再生しない点を除き、<codeph>play()</codeph> メソッドと同等です。自動サイズ変更の実行が適切な場合はそれを実行します。 ロードおよび自動サイズ変更の後、コントロールの状態は <codeph>VideoEvent.PAUSED</codeph> に設定されます。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:pause"><apiName>pause</apiName><shortdesc>
      再生ヘッドを移動せずに再生を一時停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      再生ヘッドを移動せずに再生を一時停止します。再生がすでに一時停止または停止状態にある場合は、このメソッドを呼び出しても何も実行されません。  
     
      <p>再生を再開するには、<codeph>play()</codeph> メソッドを呼び出します。</p>
     
      <p>コントロールが無応答状態である場合、この要求はキューに置かれます。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:play"><apiName>play</apiName><shortdesc>
      メディアファイルを再生します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      メディアファイルを再生します。ファイルがロードされていない場合は、ロードします。このメソッドは、メディアファイルが一時停止状態、停止状態、またはコントロールで再生状態のときに呼び出すことができます。  
     
      <p>コントロールが無応答状態である場合、この要求はキューに置かれます。</p>
     
      <p>カメラからビデオをストリーミングするには、<codeph>play()</codeph> メソッドではなく <codeph>attachCamera()</codeph> メソッドを呼び出します。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:stop"><apiName>stop</apiName><shortdesc>
      再生を停止します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      再生を停止します。 <codeph>autoRewind</codeph> プロパティが <codeph>true</codeph> に設定されている場合は、最初のフレームまで巻き戻します。  
     
      <p>再生を再開するには、<codeph>play()</codeph> メソッドを呼び出します。</p>
     
      <p>再生がすでに停止している場合は、このメソッドを呼び出しても何も実行されません。コントロールが無応答状態である場合、この要求はキューに置かれます。</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:VideoDisplay:protected:border"><apiName>border</apiName><shortdesc>
      コントロールの境界線オブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IFlexDisplayObject</apiValueClassifier></apiValueDef><apiDesc>
      コントロールの境界線オブジェクトです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoBandWidthDetection:get"><apiName>autoBandWidthDetection</apiName><shortdesc>
      組み込まれている自動帯域幅検出機能を VideoDisplay コントロールで使用するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      組み込まれている自動帯域幅検出機能を VideoDisplay コントロールで使用するかどうかを指定します。 <codeph>false</codeph> の場合は、FMS との接続で Flash Media Server（FMS）2 の main.asc ファイルを要求しません。 <codeph>true</codeph> の場合は、main.asc を実装して FMS のディレクトリ構造に保存する必要があります。 main.asc ファイルは次の関数を定義する必要があります。
     
      <ul>
      <li><pre>
      application.onConnect = function(p_client, p_autoSenseBW)
      {
        //Add security code here.     
        this.acceptConnection(p_client);      
        if (p_autoSenseBW)
          this.calculateClientBw(p_client);
        else
          p_client.call("onBWDone");
      }</pre></li>
     
      <li><pre>
      application.calculateClientBw = function(p_client)
      {
        // Add code to set the clients BandWidth.
        // Use p_client.getStats() which returns bytes_in 
        // and bytes_Out and check your bandWidth using 
        // p_client.call("onBWCheck", result, p_client.payload).
        p_client.call("onBWDone");
      }
      </pre>
      </li>
     
      <li><pre>
      Client.prototype.getStreamLength = function(p_streamName)
      {
        return Stream.length(p_streamName);
      }</pre>
      </li>
      </ul>
      
      main.asc の記述の詳細については、FMS のマニュアルを参照してください。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoPlay:get"><apiName>autoPlay</apiName><shortdesc>
      source プロパティが設定されたときに、ビデオの再生をすぐに開始するかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>source</codeph> プロパティが設定されたときに、ビデオの再生をすぐに開始するかどうかを指定します。 <codeph>true</codeph> の場合、ただちにビデオファイルのバッファリングと再生が始まります。
     
      <p><codeph>autoPlay</codeph> が <codeph>false</codeph> に設定されている場合でも、<codeph>initialize()</codeph> メソッドを呼び出した後でビデオのロードが始まります。 Flash Media Server の場合は、この操作によってストリームが作成され、表示する最初のフレームがロードされます（<codeph>autoSize</codeph> または <codeph>aspectRatio</codeph> が <codeph>true</codeph> の場合は、これ以降のフレームもロードされます）。 HTTP ダウンロードの場合は、ストリームのダウンロードが開始され、最初のフレームが表示されます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoRewind:get"><apiName>autoRewind</apiName><shortdesc>
      stop() メソッドが呼び出された、またはストリームの最後に到達したために再生が停止したときに、FLV ファイルを最初のフレームまで巻き戻すかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>stop()</codeph> メソッドが呼び出された、またはストリームの最後に到達したために再生が停止したときに、FLV ファイルを最初のフレームまで巻き戻すかどうかを指定します。 このプロパティは、ライブストリーミングビデオには効果がありません。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:borderMetrics:get"><apiName>borderMetrics</apiName><shortdesc>
      left、top、rihgt および bottom の 4 つのプロパティを持つ EdgeMetrics オブジェクトを返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:EdgeMetrics</apiValueClassifier></apiValueDef><apiDesc>
      <codeph>left</codeph>、<codeph>top</codeph>、<codeph>right</codeph> および <codeph>bottom</codeph> の 4 つのプロパティを持つ EdgeMetrics オブジェクトを返します。 各プロパティの値は、ピクセル単位で表した、コントロール各辺の境界の太さです。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bufferTime:get"><apiName>bufferTime</apiName><shortdesc>
      ビデオファイルの再生を開始するまでにビデオをメモリにバッファーする秒数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ビデオファイルの再生を開始するまでにビデオをメモリにバッファーする秒数です。 RTMP 上での転送速度の遅いストリーミングの場合は、このプロパティをデフォルトより高い値に設定することが重要です。  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
      すでにロード済みで再生可能なバイト数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      すでにロード済みで再生可能なバイト数です。この値は、HTTP を使用してメディアをロードした場合にのみ有効です。
     
      <p>入力ストリームがない場合、Flash Media Server から得たストリームである場合、または情報がまだ利用できない場合、この値は -1 です。 </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
      ロードするバイト数の合計です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      ロードするバイト数の合計です。この値は、HTTP を使用してメディアをロードした場合にのみ有効です。
     
      <p>入力ストリームがない場合、Flash Media Server から得たストリームである場合、または情報がまだ利用できない場合、この値は -1 です。 </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:cuePointManager:get"><apiName>cuePointManager</apiName><shortdesc>
      VideoPlayer コントロールに関連付けられた CuePointManager クラスのインスタンスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      VideoPlayer コントロールに関連付けられた CuePointManager クラスのインスタンスです。 このオブジェクトを使用してキューポイントを制御できます。このオブジェクトを使用しない場合は、<codeph>cuePoints</codeph> プロパティを使用して制御します。
     
      <p>キューポイントを使用すると、ビデオの再生が指定の位置に達した時点で <codeph>cuePoint</codeph> イベントをトリガーできます。 キューポイントを設定するには、CuePointManager クラスのメソッドを使用します。 </p>
     
     <p>FLV に埋め込んだキューポイントは、<codeph>cuePoints</codeph> や <codeph>cuePointManager</codeph> では使用できません。 これらを取得するには、<codeph>metadata</codeph> プロパティまたは <codeph>metadataReceived</codeph> イベントにアクセスします。</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.videoClasses.xml#CuePointManager"><linktext>mx.controls.videoClasses.CuePointManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:cuePointManagerClass:get"><apiName>cuePointManagerClass</apiName><shortdesc>
      使用するキューポイントマネージャーです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Class"/></apiValueDef><apiDesc>
      使用するキューポイントマネージャーです。 mx.controls.videoClasses.CuePointManager に設定すると、キューポイントの管理が有効になります。
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.videoClasses.xml#CuePointManager"><linktext>mx.controls.videoClasses.CuePointManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:cuePoints:get"><apiName>cuePoints</apiName><shortdesc>
      コントロールに関連付けられているキューポイントの配列です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      コントロールに関連付けられているキューポイントの配列です。 このプロパティを使用してキューポイントを制御できます。このプロパティを使用しない場合は、<codeph>cuePointManager</codeph> プロパティを使用して制御します。
     
      <p>キューポイントを使用すると、ビデオの再生が指定の位置に達した時点で <codeph>cuePoint</codeph> イベントをトリガーできます。 キューポイントを設定するには、<codeph>cuePoints</codeph> プロパティに配列を渡します。 </p>
     
     <p>FLV に埋め込んだキューポイントは、<codeph>cuePoints</codeph> や <codeph>cuePointManager</codeph> では使用できません。 これらを取得するには、<codeph>metadata</codeph> プロパティまたは <codeph>metadataReceived</codeph> イベントにアクセスします。</p>
     
      <p>この配列では、エレメントごとに 2 つのフィールドを指定します。</p>
      <ul>
        <li>その 1 つは <codeph>name</codeph> フィールドで、キューポイントの任意の名前を指定します。</li>
        <li>もう 1 つは <codeph>time</codeph> フィールドで、キューポイントを関連付ける VideoDisplay コントロールの再生ヘッド位置を秒数で指定します。</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:idleTimeout:get"><apiName>idleTimeout</apiName><shortdesc>
      Flash Media Server への接続が停止するまでのアイドル状態（再生一時停止または再生停止）の持続時間をミリ秒単位で指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>300000 (five minutes)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Flash Media Server への接続が停止するまでのアイドル状態（再生一時停止または再生停止）の持続時間をミリ秒単位で指定します。 このプロパティは、HTTP による FLV ファイルのダウンロードには影響しません。ストリームがすでにアイドル状態である場合に、このプロパティを設定すると、アイドルのタイムアウト値に新しい値が再設定されます。
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:live:get"><apiName>live</apiName><shortdesc>
      コントロールがライブフィードをストリームするかどうかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      コントロールがライブフィードをストリームするかどうかを指定します。 ストリーミングが Flash Media Server からのライブフィードの場合、このプロパティを <codeph>true</codeph> に設定します。 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      ビデオのサイズを変更するときに、コントロールで元の縦横比を維持するかどうかを指定します</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ビデオのサイズを変更するときに、コントロールで元の縦横比を維持するかどうかを指定します
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:metadata:get"><apiName>metadata</apiName><shortdesc>
     NetStream.onMetaData() コールバックメソッドが存在する場合に、その呼び出しで得られるメタデータ情報パケットを収めたオブジェクトです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
     <codeph>NetStream.onMetaData()</codeph> コールバックメソッドが存在する場合に、その呼び出しで得られるメタデータ情報パケットを収めたオブジェクトです。<codeph>metadataReceived</codeph> イベントが送出されると、準備が整います。
     
     <p>Flash 8 エンコーダーを使用して FLV ファイルをエンコードした場合、<codeph>metadata</codeph> プロパティは次に示す情報を含みます。より古いバージョンでエンコードされた FLV ファイルの場合は、<codeph>height</codeph>、<codeph>width</codeph>、および <codeph>duration</codeph> の値のみを含みます。</p>
     
     <adobetable class="innertable">
      
          
          
     
     
     
     
     
     
     
     
     
     <tgroup cols="2"><thead><row><entry><b>パラメーター</b></entry><entry><b>説明</b></entry></row></thead><tbody><row><entry><codeph>canSeekToEnd</codeph></entry><entry>ブール値です。プログレッシブダウンロードされるムービークリップの最後をシークできるようにするために、最後のフレームにキーフレームを付けて FLV ファイルをエンコードした場合に <codeph>true</codeph> になります。最後のフレームにキーフレームを付けずに FLV ファイルをエンコードした場合は <codeph>false</codeph> になります。</entry></row><row><entry><codeph>cuePoints</codeph></entry><entry>オブジェクトの配列です。FLV ファイルに埋め込まれたキューポイントごとに存在します。 FLV ファイルがキューポイントを含んでいない場合、値は undefined になります。各オブジェクトは次のプロパティを持ちます。
          
              <ul>
                  <li><codeph>type</codeph> — キューポイントのタイプを "navigation" または "event" として指定するストリング。</li>
                  <li><codeph>name</codeph> — キューポイントの名前を示すストリング。</li>
                  <li><codeph>time</codeph> — キューポイントの時間を秒で示す数値。小数点以下 3 桁（ミリ秒）まで表します。</li>
                  <li><codeph>parameters</codeph> — キューポイントを作成するときにユーザーが指定した名前と値のペアを持つオプションのオブジェクト。</li>
              </ul>
          </entry></row><row><entry><codeph>audiocodecid</codeph></entry><entry>使用されたオーディオコーデック（エンコード/デコード方法）を示す数値です。</entry></row><row><entry><codeph>audiodelay</codeph></entry><entry> FLV ファイルのエンコード元ソースファイルの時間 <codeph>0</codeph> を表す数値です。 
     <p>ビデオコンテンツは、オーディオを同期するために必要な短時間だけ遅延させられます。たとえば、<codeph>audiodelay</codeph> の値が <codeph>.038</codeph> の場合、ソースファイルの時間 <codeph>0</codeph> に開始したビデオは、FLV ファイルの時間 <codeph>.038</codeph> に開始します。</p> 
     <p>VideoDisplay クラスでは、その時間設定でこの時間差が補正されます。 これは、ソースファイルで使用していた時間設定を引き続き使用できることを意味します。</p>
</entry></row><row><entry><codeph>audiodatarate</codeph></entry><entry>オーディオの 1 秒あたりのキロバイトを示す数値です。</entry></row><row><entry><codeph>videocodecid</codeph></entry><entry>ビデオのエンコードに使用されたコーデックのバージョンを示す数値です。</entry></row><row><entry><codeph>framerate</codeph></entry><entry>FLV ファイルのフレームレートを示す数値です。</entry></row><row><entry><codeph>videodatarate</codeph></entry><entry>FLV ファイルのビデオのデータレートを示す数値です。</entry></row><row><entry><codeph>height</codeph></entry><entry>FLV ファイルの高さを示す数値です。</entry></row><row><entry><codeph>width</codeph></entry><entry>FLV ファイルの幅を示す数値です。</entry></row><row><entry><codeph>duration</codeph></entry><entry>FLV ファイルの継続時間を秒単位で示す数値です。</entry></row></tbody></tgroup></adobetable>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      ビデオの再生を開始してからの再生ヘッドの位置を秒数で示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ビデオの再生を開始してからの再生ヘッドの位置を秒数で示します。 多くの VideoPlay イベントのイベントオブジェクトには、イベントが発生したビデオファイル内の位置を特定できるように、再生ヘッド位置が含まれています。
     
      <p>このプロパティを秒単位の値に設定すると、シーク操作が実行されます。現在ビデオを再生中の場合は、新しい再生ヘッド位置から再生を継続します。ビデオが一時停止状態の場合は、新しい再生ヘッド位置をシークし、一時停止したままになります。ビデオが停止状態の場合は、新しい再生ヘッド位置をシークし、一時停止状態に移行します。このプロパティの設定によるライブビデオストリームへの影響はありません。</p>
     
      <p>新しい再生ヘッド位置が 0 未満または NaN である場合、コントロールが例外をスローします。新しい再生ヘッド位置がビデオの末尾または現在ダウンロード済みのビデオファイル容量を超過している場合、コントロールはシークを継続します。</p>
     
      <p>FLV ファイルの場合、<codeph>playheadTime</codeph> プロパティを設定すると、指定した位置に最も近いキーフレームをシークします。キーフレームは、エンコード時に FLV ファイルで指定します。 したがって、その位置にキーフレームを指定していない場合、指定した時間とは異なる位置でシークされることがあります。</p>
     
      <p>プレーヤーが無応答状態である場合は、要求がキューに置かれます。</p>
     
      <p>ストリームが接続されていないとき、このプロパティを設定すると、例外がスローされます。 <codeph>stateChange</codeph> イベントと <codeph>connected</codeph> プロパティを使用して、このプロパティを安全に設定できる時期を判断します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playheadUpdateInterval:get"><apiName>playheadUpdateInterval</apiName><shortdesc>
      playheadUpdate イベントの発生する間隔をミリ秒単位で指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>250 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>playheadUpdate</codeph> イベントの発生する間隔をミリ秒単位で指定します。
     
      <p>ビデオの再生中にこのプロパティを設定すると、タイマーが 0 から再開され、次回の <codeph>playheadUpdate</codeph> イベントは新しい期間が経過した後に発生します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playing:get"><apiName>playing</apiName><shortdesc>
      true の場合、メディアは現在再生中です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      <codeph>true</codeph> の場合、メディアは現在再生中です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:progressInterval:get"><apiName>progressInterval</apiName><shortdesc>
      progress イベントの発生する間隔をミリ秒単位で指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>250 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      <codeph>progress</codeph> イベントの発生する間隔をミリ秒単位で指定します。 <codeph>progress</codeph> イベントは、ビデオファイルのダウンロードが完了するまで継続的に発生します。
     
      <p>ビデオのダウンロード中にこのプロパティを設定すると、タイマーが 0 から再開され、次回の <codeph>progress</codeph> イベントは新しい期間が経過した後に発生します。</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:source:get"><apiName>source</apiName><shortdesc>
      ストリーミングする FLV ファイルの相対パスとファイル名です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      ストリーミングする FLV ファイルの相対パスとファイル名です。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:state:get"><apiName>state</apiName><shortdesc>
      VideoDisplay コントロールの現在の状態です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/><apiDefaultValue>VideoEvent.DISCONNECTED
     
      </apiDefaultValue></apiValueDef><apiDesc>
      VideoDisplay コントロールの現在の状態です。 <codeph>load()</codeph>、<codeph>play()</codeph>、<codeph>stop()</codeph> および <codeph>pause()</codeph> の各メソッドの呼び出し、および <codeph>playHeadTime</codeph> プロパティの設定によって、このプロパティを設定します。
     
      <p>このプロパティに設定できる値は、VideoEvent クラスで定義されている <codeph>VideoEvent.BUFFERING</codeph>、<codeph>VideoEvent.CONNECTION_ERROR</codeph>、<codeph>VideoEvent.DISCONNECTED</codeph>、<codeph>VideoEvent.EXEC_QUEUED_CMD</codeph>、<codeph>VideoEvent.LOADING</codeph>、<codeph>VideoEvent.PAUSED</codeph>、<codeph>VideoEvent.PLAYING</codeph>、<codeph>VideoEvent.RESIZING</codeph>、<codeph>VideoEvent.REWINDING</codeph>、<codeph>VideoEvent.SEEKING</codeph> および <codeph>VideoEvent.STOPPED</codeph> です。 </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#VideoEvent"><linktext>mx.events.VideoEvent</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
      VideoDisplay コントロールが応答可能状態（true）であるか、応答不可状態（false）であるかを指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      VideoDisplay コントロールが応答可能状態（<codeph>true</codeph>）であるか、応答不可状態（<codeph>false</codeph>）であるかを指定します。 ビデオのロード中または巻き戻し中のコントロールは応答不可状態になります。
      
      <p><codeph>state</codeph> プロパティが <codeph>VideoEvent.CONNECTION_ERROR</codeph>、<codeph>VideoEvent.EXEC_QUEUED_CMD</codeph>、<codeph>VideoEvent.RESIZING</codeph> または <codeph>VideoEvent.SEEKING</codeph> である場合も、コントロールは応答可能状態になります。 </p>
      
      <p>コントロールが応答不可状態である場合、<codeph>play()</codeph>、<codeph>load()</codeph>、<codeph>stop()</codeph> および <codeph>pause()</codeph> の各メソッドへの呼び出しはキューに置かれ、コントロールが応答可能状態になったときに実行されます。</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:totalTime:get"><apiName>totalTime</apiName><shortdesc>
      メディアの全体の長さを秒数で示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      メディアの全体の長さを秒数で示します。FLV 1.0 ビデオファイルの場合は、このプロパティを手動で設定します。FLV 1.1 以降では、この値はコントロールで自動的に計算されます。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:videoHeight:get"><apiName>videoHeight</apiName><shortdesc>
      ロードされた FLV ファイルの画像高さです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      ロードされた FLV ファイルの画像高さです。FLV ファイルがまだロードされていない場合は <codeph>-1</codeph> になります。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:videoWidth:get"><apiName>videoWidth</apiName><shortdesc>
      ロードされた FLV ファイルの画像幅です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      ロードされた FLV ファイルの画像幅です。FLV ファイルがまだロードされていない場合は <codeph>-1</codeph> になります。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:volume:get"><apiName>volume</apiName><shortdesc>
      ボリュームレベルです。0 から 1 の範囲の値で指定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.75
      
      </apiDefaultValue></apiValueDef><apiDesc>
      ボリュームレベルです。0 から 1 の範囲の値で指定します。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:LinkBar"><apiName>LinkBar</apiName><shortdesc>
  LinkBar コントロールは、一連のリンク先を指定する LinkButton コントロールの水平方向または垂直方向の行を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  子どうしの垂直方向の間隔を示すピクセル数です。
 
  </description>
<default>8
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  リンクを押したときのテキストの色です。
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  マウスポインターが置かれているときのリンクのテキストの色です。
 
  </description>
<default>0x2B333C
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="separatorWidth" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  ピクセル単位で表したセパレーターのピクセル幅です。
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="separatorSkin" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Class">
<description>
  LinkBar 内の LinkButton コントロール間のセパレーター記号です。 
 
  </description>
<default>mx.skins.halo.LinkSeparator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="separatorColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  デフォルトのセパレータースキンで使用するセパレーターの色です。
 
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  LinkButton コントロールを押したときの LinkButton コントロールの背景色です。
 
  </description>
<default>0xCDFFC1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  マウスポインターが置かれているときのリンクの色です。 デフォルト値は現在の <codeph>themeColor</codeph> に基づきます。
 
  </description>
<default>0xEEFEE6 (light green)
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  上境界線と LinkButton コントロールの間隔を示すピクセル数です。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  下境界線と LinkButton コントロールの間隔を示すピクセル数です。
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="linkButtonStyleName" owner="mx.controls:LinkBar" playerVersion="Flash9" type="String">
<description>
  リンクボタンナビゲーションアイテムのスタイルを指定する CSS スタイル宣言の名前です。
 
  </description>
<default>""
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  LinkButton コントロール間の水平方向の間隔を示すピクセル数です。
 
  </description>
<default>8
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>The <code>&lt;mx:LinkBar&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:LinkBar
    <b>Properties</b>
    selectedIndex="-1"
  
    <b>Styles</b>
    linkButtonStyleName=""
    horizontalGap="8"
    paddingBottom="2"
    paddingTop="2"
    rollOverColor="0xEEFEE6"
    selectionColor="0xCDFFC1"
    separatorColor="<i>No default</i>"
    separatorSkin="0x000000"
    separatorWidth="1"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x000000"
    verticalGap="8"
    &gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:LinkBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:NavBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  LinkBar コントロールは、一連のリンク先を指定する LinkButton コントロールの水平方向または垂直方向の行を定義します。LinkBar コントロールは通常、ViewStack コンテナのアクティブな子コンテナを制御するため、またはリンクの単独のセットを作成するために使用します。
 
  <p>LinkBar コントロールは、その <codeph>dataProvider</codeph> プロパティの値に基づいて LinkButton コントロールを作成します。 LinkBar は Container のサブクラスですが、<codeph>Container.addChild()</codeph>、<codeph>Container.removeChild()</codeph> などのメソッドを使用して LinkButton コントロールの追加や削除はしないでください。 代わりに、<codeph>addItem()</codeph>、<codeph>removeItem()</codeph> などのメソッドを使用して <codeph>dataProvider</codeph> プロパティを操作してください。 LinkBar コントロールは、<codeph>dataProvider</codeph> プロパティの変更に基づいて、必要な子を自動的に追加または削除します。</p>
 
  <p>LinkBar コントロールには次のデフォルトの特性があります。</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>特性</entry><entry>説明</entry></row></thead><tbody><row>
        <entry>推奨サイズ</entry>
        <entry>すべてのラベルテキストを表示できる幅にパディングとセパレーターの幅を加算した幅、および最も高い子の高さです。</entry>
     </row><row>
        <entry>コントロールのサイズ変更規則</entry>
        <entry>デフォルトでは、LinkBar コントロールのサイズは変更されません。親コンテナのサイズに基づいて LinkBar のサイズを変更する場合は、パーセント値でサイズを指定します。</entry>
     </row><row>
        <entry>パディング</entry>
        <entry>top、bottom、left、および right の各プロパティは 2 ピクセルに設定されています。</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LinkBarExample.mxml"><swfblock conref="examples/LinkBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#NavBar"><linktext>mx.controls.NavBar</linktext></link><link href="mx.containers.xml#ViewStack"><linktext>mx.containers.ViewStack</linktext></link><link href="mx.controls.xml#LinkButton"><linktext>mx.controls.LinkButton</linktext></link><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link></related-links><apiConstructor id="mx.controls:LinkBar:LinkBar"><apiName>LinkBar</apiName><shortdesc>
      コンストラクターです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      コンストラクターです。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:LinkBar:styleChanged"><apiName>styleChanged</apiName><shortdesc>
      
      スタイルプロパティの値が変化したときに呼び出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>変更されるスタイルプロパティの名前を表します。    
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      スタイルプロパティの値が変化したときに呼び出されます。 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:LinkBar:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      サイズ変更に応答して、この LinkBar コントロールの子の位置およびサイズを設定します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>コンポーネントの <codeph>scaleX</codeph> プロパティの値にかかわらず、コンポーネントの座標系でコンポーネントの幅をピクセル単位で指定します。
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>コンポーネントの <codeph>scaleY</codeph> プロパティの値にかかわらず、コンポーネントの座標系でコンポーネントの高さをピクセル単位で指定します。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      サイズ変更に応答して、この LinkBar コントロールの子の位置およびサイズを設定します。<codeph>updateDisplayList()</codeph> メソッドの詳細については、<codeph>UIComponent.updateDisplayList()</codeph> メソッドを参照してください。
     
      <p><codeph>LinkBar.updateDisplayList()</codeph> メソッドは、まず <codeph>Box.updateDisplayList()</codeph> メソッドを呼び出して、LinkButton コントロールの位置を決定します。詳細については、<codeph>Box.updateDisplayList()</codeph> メソッドを参照してください。LinkButton コントロールがレイアウトされた後、これらの間にセパレーターが配置されます。</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link><link href="mx.containers.xml#Box/updateDisplayList()"><linktext>mx.containers.Box.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.controls:LinkBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      LinkBar コントロールで ViewStack コンテナをデータプロバイダーとして使用している場合に、最後に選択した LinkButton コントロールのインデックスを示します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      LinkBar コントロールで ViewStack コンテナをデータプロバイダーとして使用している場合に、最後に選択した LinkButton コントロールのインデックスを示します。
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>