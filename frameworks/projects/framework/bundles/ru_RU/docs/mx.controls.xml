<?xml version="1.0"?>
<apiPackage id="mx.controls"><apiName>mx.controls</apiName><apiDetail/><apiClassifier id="mx.controls:ProgressBarLabelPlacement"><apiName>ProgressBarLabelPlacement</apiName><shortdesc>
  Класс ProgressBarLabelPlacement определяет значения для свойства labelPlacement класса ProgressBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ProgressBarLabelPlacement определяет значения для свойства <codeph>labelPlacement</codeph> класса ProgressBar.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarLabelPlacement:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
	  Определяет необходимость расположения метки под индикатором выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Определяет необходимость расположения метки под индикатором выполнения.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:CENTER"><apiName>CENTER</apiName><shortdesc>
	  Определяет необходимость расположения метки по центру индикатора выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>center</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Определяет необходимость расположения метки по центру индикатора выполнения.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:LEFT"><apiName>LEFT</apiName><shortdesc>
	  Определяет необходимость расположения метки слева от индикатора выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Определяет необходимость расположения метки слева от индикатора выполнения.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  Определяет необходимость расположения метки справа от индикатора выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Определяет необходимость расположения метки справа от индикатора выполнения.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarLabelPlacement:TOP"><apiName>TOP</apiName><shortdesc>
	  Определяет необходимость расположения метки над индикатором выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Определяет необходимость расположения метки над индикатором выполнения.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TextArea"><apiName>TextArea</apiName><shortdesc>
  Элемент управления TextArea представляет собой многострочное текстовое поле с границей и дополнительными полосами прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Alternative owner="mx.controls:TextArea" replacement="spark.components.TextArea" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:TextArea" playerVersion="Flash9" type="uint">
<description>
  Цвет компонента при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей компонента и верхним краем его области содержимого.
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между нижней границей компонента и нижним краем его области содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:TextArea" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TextArea&gt;</code> tag inherits the attributes
  of its superclass and adds the following attributes:</p>
 
  <pre>
  &lt;mx:TextArea
    <b>Properties</b>
    condenseWhite="false|true"
    data="undefined"
    displayAsPassword="false|true"
    editable="true|false"
    horizontalScrollPolicy="auto|on|off"
    horizontalScrollPosition="0"
    htmlText="null"
    imeMode="null"
    length="0"
    listData="null"
    maxChars="0"
    restrict="null"
    selectionBeginIndex="0"
    selectionEndIndex="0"
    styleSheet="null"
    text=""
    textHeight="<i>height of text</i>" [read-only]
    textWidth="<i>width of text</i>" [read-only]
    verticalScrollPolicy="auto|on|off"
    verticalScrollPosition="0"
    wordWrap="true|false"
    &nbsp;
    <b>Styles</b>
    disabledColor="0xAAB3B3"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    paddingLeft="0""
    paddingRight="0""
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:ScrollControlBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления TextArea представляет собой многострочное текстовое поле с границей и дополнительными полосами прокрутки. Элемент управления TextArea поддерживает возможности визуализации HTML для Flash Player и AIR.
 
  <p>В случае деактивации элемента управления TextArea, его содержимое отображается цветом, указанном в стиле <codeph>disabledColor</codeph>. Для запрещения изменения текста можно определить элемент управления TextArea как доступный только для чтения. Для скрытия входного текста с заменой всех отображаемых символов звездочками активизируйте свойство <codeph>displayAsPassword</codeph> элемента управления TextArea.</p>
 
  <p>Элемент управления TextArea имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>ширина: 160 пикселей; высота: 44 пикселя</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>10000 на 10000 пикселей</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextAreaExample.mxml"><swfblock conref="examples/TextAreaExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label</linktext></link><link href="mx.controls.xml#Text"><linktext>mx.controls.Text</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange</linktext></link></related-links><adobeApiEvent id="mx.controls:TextArea_flash.events.TextEvent.TEXT_INPUT_textInput"><apiName>textInput</apiName><shortdesc>
  Передается, когда пользователь вводит или вставляет текст в элемент управления или удаляет текст из него.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.TEXT_INPUT</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь вводит или вставляет текст в элемент управления или удаляет текст из него. При нажатии пользователем клавиши Delete или Backspace событие не передается.
 
  <p>Даже в случае, если значением по умолчанию свойства <codeph>TextEvent.bubbles</codeph> является <codeph>true</codeph>, этот элемент управления передает событие со значением <codeph>false</codeph> для свойства <codeph>TextEvent.bubbles</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_flash.events.TextEvent.LINK_link"><apiName>link</apiName><shortdesc> 
  Передается при щелчке по гиперссылке, определенной свойством htmlText, в которой URL-адрес начинается с event:.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.LINK</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
  Передается при щелчке по гиперссылке, определенной свойством <codeph>htmlText</codeph>, в которой URL-адрес начинается с <codeph>event:</codeph>. Остальная часть URL после <codeph>event:</codeph> помещается в свойство text объекта события <codeph>link</codeph>.
 
  <p>При обработке события <codeph>link</codeph> гиперссылка не выполняется автоматически; ее необходимо выполнить из обработчика события. Для выполнения гиперссылки, как правило, используется метод <codeph>navigateToURL()</codeph>. Он позволяет изменить гиперссылку или даже запретить ее отображение в приложении. </p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит данные для отображения. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextArea_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении текста в элементе управления TextArea в результате ввода информации пользователем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении текста в элементе управления TextArea в результате ввода информации пользователем. Это событие не происходит при использовании для изменения текста привязки данных или кода ActionScript.
 
  <p>Даже в случае, если значением по умолчанию для свойства <codeph>Event.bubbles</codeph> является <codeph>true</codeph>, этот элемент управления передает событие со значением <codeph>false</codeph> для свойства <codeph>Event.bubbles</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TextArea:TextArea"><apiName>TextArea</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:TextArea:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      Возвращает объект TextLineMetrics с информацией о размещении текста и измерениями для строки текста в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект, который содержит информацию о размещении текста и измерения для указанной строки текста в элементе управления.
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса строки, для которой требуется получить метрики. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает объект TextLineMetrics с информацией о размещении текста и измерениями для строки текста в элементе управления. Для получения корректного значения требуется проверка компонента. При установке значения для свойства <codeph>text</codeph> или <codeph>htmlText</codeph> и немедленном вызове <codeph>getLineMetrics()</codeph> возможно получение некорректного значения. Следует дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения класса flash.text.TextField, который выполняет обновление значения незамедлительно.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextArea:setSelection"><apiName>setSelection</apiName><shortdesc>
      Выбирает текст в диапазоне, заданном параметрами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginIndex</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса для первого символа в диапазоне; т.е. первый символ – 0, второй символ – 1 и т.д.
     
      </apiDesc></apiParam><apiParam><apiItemName>endIndex</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса позиции <i>после</i> последнего символа в диапазоне (эквивалентно индексу последнего символа, отсчитываемому от единицы). Так, если параметр равен 5, последний символ в выборке является пятым символом. При получении фокуса элементом управления TextArea диапазон становится видимым в том случае, если установлены значения для свойств <codeph>selectionBeginIndex</codeph> и <codeph>selectionEndIndex</codeph>.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Выбирает текст в диапазоне, заданном параметрами. Если для элемента управления фокус отсутствует, диапазон не выделяется до получения фокуса этим элементом управления. Кроме того, при фокусировке с помощью щелчка по элементу управления, любой предыдущий выбор будет потерян. Если два значения параметров являются одинаковыми, новым выбором становится точка вставки.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:TextArea:protected:textField"><apiName>textField</apiName><shortdesc>
      Внутренний UITextField, который обеспечивает визуализацию текста данного TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Внутренний UITextField, который обеспечивает визуализацию текста данного TextArea.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      Указывает, требуется ли удалить лишние разделители (пробелы, разрывы строки и т.д.) в элементе управления TextArea с HTML-текстом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, требуется ли удалить лишние разделители (пробелы, разрывы строки и т.д.) в элементе управления TextArea с HTML-текстом.
      
      <p>Свойство <codeph>condenseWhite</codeph> влияет только на текст, определенный с помощью свойства <codeph>htmlText</codeph>, а не с помощью свойства <codeph>text</codeph>. Если текст определен посредством свойства <codeph>text</codeph>, <codeph>condenseWhite</codeph> игнорируется.</p>
     
      <p>При установке для свойства <codeph>condenseWhite</codeph> значения <codeph>true</codeph> для размещения в текстовом поле разрывов строк необходимо использовать стандартные команды HTML, например, <codeph>&lt;br></codeph> и <codeph>&lt;p></codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:data:get"><apiName>data</apiName><shortdesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>При использовании элемента управления в качестве средства визуализации или редактора вставных элементов Flex автоматически записывает текущее значение элемента в свойство <codeph>text</codeph> данного элемента управления.</p>
     
      <p>Это свойство не устанавливается в MXML.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:displayAsPassword:get"><apiName>displayAsPassword</apiName><shortdesc>
      Указывает, используется ли этот элемент управления для ввода паролей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3177
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue><apiTipTexts><apiTipText>Указывает, требуется ли отображать символы « ' » вместо реальных символов.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Указывает, используется ли этот элемент управления для ввода паролей. Если значение равно <codeph>true</codeph>, поле не отображает введенный текст. При этом вместо каждого введенного в элемент управления текстового символа отображается звездочка «*».
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:editable:get"><apiName>editable</apiName><shortdesc>
      Указывает, разрешено ли пользователю редактировать текст в данном элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3176
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true;
     
      </apiDefaultValue><apiTipTexts><apiTipText>Определяет, является ли компонент изменяемым.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Указывает, разрешено ли пользователю редактировать текст в данном элементе управления. Если значение равно <codeph>true</codeph>, пользователь может редактировать текст.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:horizontalScrollPolicy:get"><apiName>horizontalScrollPolicy</apiName><shortdesc>
      Управляет видимостью горизонтальной полосы прокрутки: всегда включена (ScrollPolicy.ON), всегда выключена (ScrollPolicy.OFF) или включается при необходимости (ScrollPolicy.AUTO).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ScrollPolicy.AUTO
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Управляет видимостью горизонтальной полосы прокрутки: всегда включена (<codeph>ScrollPolicy.ON</codeph>), всегда выключена (<codeph>ScrollPolicy.OFF</codeph>) или включается при необходимости (<codeph>ScrollPolicy.AUTO</codeph>).
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Задает текст, отображаемый элементом управления TextArea, включая разметку HTML, отражающую стили этого текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Задает текст, отображаемый элементом управления TextArea, включая разметку HTML, отражающую стили этого текста. При указании в этом свойстве текста HTML можно использовать набор тегов HTML, поддерживаемый элементом управления TextField для Flash.
     
      <p>При активации данного свойства после применения стилей CSS для экземпляра TextArea применяется разметка HTML. При получении этого свойства разметка HTML включает стили CSS.</p>
      
      <p>Например, при определении строки, такой как <codeph>«Это пример <b>полужирной</b> разметки»</codeph>, текст «Это пример &lt;b>полужирной&lt;/b> разметки» отображается в TextArea со всеми применяемыми стилями CSS. Кроме того, слово «полужирный» отображается жирным шрифтом вследствие разметки <codeph>&lt;b></codeph>.</p>
     
      <p>В разметке HTML используются символы, такие как &lt;and >, которые имеют специальное значение в XML (и, следовательно, в MXML). Например, следующий код не компилируется:</p>
      
      <pre>
      &lt;mx:TextArea htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>Существует три способа решения этой проблемы.</p>
      
      <ul>
      
      <li>
      
      <p>Установите значение для свойства <codeph>htmlText</codeph> в методе ActionScript, вызываемом в качестве обработчика <codeph> initialize</codeph>,</p>
      
      <pre>
      &lt;mx:TextArea id="myTextArea" initialize="myTextArea_initialize()"/>
      </pre>
      
      <p>где метод <codeph>myTextArea_initialize</codeph> находится в разделе сценария CDATA:</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myTextArea_initialize():void {
          myTextArea.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>Это наиболее простой подход, поскольку разметка HTML остается читаемой. Учтите, что TextArea необходимо присвоить <codeph>id</codeph> для получения возможности обращения к нему в обработчике <codeph>initialize</codeph>.</p>
      
      </li>
      
      <li>
      
      <p>Укажите значение свойства <codeph>htmlText</codeph> с помощью нижестоящего тега в разделе CDATA. Раздел CDATA в XML содержит символьные данные, где символам, таким как &lt; и >, не присвоено специальное значение.</p>
      
      <pre>
      &lt;mx:TextArea>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:TextArea/>
      </pre>
      
      <p>Свойство <codeph>htmlText</codeph> необходимо записать в качестве нижестоящего тега, а не атрибута в теге <codeph>&lt;mx:TextArea></codeph>, поскольку в XML невозможно использовать CDATA в качестве значения атрибута. Учтите, что разметка остается читаемой, но особенности использования раздела CDATA затрудняют применение этого подхода.</p>
      
      </li>
      
      <li>
      
      <p>Атрибут <codeph>hmtlText</codeph> используется в том случае, если вхождения символов &lt; и > разметки HTML в значении атрибута записаны вместо объектов XML <codeph>&amp;lt;</codeph> и <codeph>&amp;gt;</codeph>:</p>
      
      <pre>
      &lt;mx:TextArea htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      Adobe не рекомендует использовать этот подход, поскольку при этом разметка HTML становится практически нечитаемой.
      
      </li>
      
      </ul>
      
      <p>Если для свойства <codeph>condenseWhite</codeph> установлено значение <codeph>true</codeph>, то при установке значения для свойства <codeph>htmlText</codeph> множественные пробелы сжимаются как в браузерах на базе HTML; например, три последовательных пробела отображаются как один пробел. Значением по умолчанию для <codeph>condenseWhite</codeph> является <codeph>false</codeph>, поэтому для сокращения количества пробелов необходимо установить для <codeph>condenseWhite</codeph> значение <codeph>true</codeph>.</p>
      
      <p>При считывании свойства <codeph>htmlText</codeph> сразу же после установки его значения будет получена та же установленная строка. Однако после запуска LayoutManager значение изменяется и включает дополнительную разметку со стилями CSS.</p>
      
      <p>Установка свойства <codeph>htmlText</codeph> оказывает на <codeph>text</codeph> различное воздействие. При считывании свойства <codeph>text</codeph> сразу же после установки свойства <codeph>htmlText</codeph> будет получено значение <codeph>null</codeph>. Это означает, что значение свойства <codeph>text</codeph>, соответствующее новому значению <codeph>htmlText</codeph>, еще не определено. Однако после запуска LayoutManager значение свойства <codeph>text</codeph> изменяется на строку <codeph>htmlText</codeph> без HTML-разметки; т. е. значение включает символы, реально отображаемые TextArea.</p>
       
      <p>Наоборот, при установке свойства <codeph>text</codeph> любое предыдущее значение <codeph>htmlText</codeph> становится нерелевантным. При считывании свойства <codeph>htmlText</codeph> сразу же после установки свойства <codeph>text</codeph> будет получено значение <codeph>null</codeph>. Это означает, что значение <codeph>htmlText</codeph>, соответствующее новому значению <codeph>text</codeph>, еще не определено. Однако после запуска LayoutManager значение свойства <codeph>htmlText</codeph> изменяется на новый текст с разметкой HTML для стилей CSS.</p>
     
      <p>Для немедленного запуска LayoutManager можно вызвать метод <codeph>validateNow()</codeph> в TextArea. Например, можно установить <codeph>htmlText</codeph>, вызвать метод <codeph>validateNow()</codeph> и немедленно получить соответствующее значение <codeph>text</codeph> без разметки HTML.</p>
      
      <p>При установке свойств <codeph>text</codeph> и <codeph>htmlText</codeph> в ActionScript будет использовано только последнее значение. Не устанавливайте оба эти свойства в MXML, поскольку в MXML невозможно обеспечить указанный порядок установки свойств экземпляра.</p>
      
      <p>Настройка свойства <codeph>text</codeph> или <codeph>htmlText</codeph> в цикле выполняется быстро, поскольку соответствующий TextField, который обеспечивает визуализацию текста, не обновляется до запуска LayoutManager.</p>
     
      <p>При попытке установить для этого свойства значение <codeph>null</codeph> будет установлена пустая строка. Если свойство временно имеет значение <codeph>null</codeph>, это означает, что значение для <codeph>text</codeph> было установлено недавно, и соответствующее значение <codeph>htmlText</codeph> еще не определено.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Указывает режим IME (редактор методов ввода).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
     </apiDefaultValue></apiValueDef><apiDesc>
      Указывает режим IME (редактор методов ввода). IME позволяет пользователям вводить текст на китайском, японском и корейском языках. Режим IME устанавливается при перемещении фокуса на элемент управления и возвращается к предыдущему значению при потере фокуса этим элементом управления.
     
      <p>Класс flash.system.IMEConversionMode определяет константы для допустимых значений этого свойства. Можно также указать значение <codeph>null</codeph> и не указывать IME.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:length:get"><apiName>length</apiName><shortdesc>
      Количество символов текста, отображаемых в TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3173
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Количество символов в TextArea
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Количество символов текста, отображаемых в TextArea.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:listData:get"><apiName>listData</apiName><shortdesc>
      Если компонент используется в качестве средства визуализации или редактора вставных элементов, то Flex инициализирует свойство компонента listData соответствующими данными из элемента управления списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Если компонент используется в качестве средства визуализации или редактора вставных элементов, то Flex инициализирует свойство компонента <codeph>listData</codeph> соответствующими данными из элемента управления списка. Затем компонент может использовать свойство <codeph>listData</codeph> для инициализации свойства <codeph>data</codeph> средства визуализации или редактора вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      Максимальное количество символов, которые может ввести пользователь в текстовом поле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3172
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiTipTexts><apiTipText>Максимальное количество символов, содержащихся в TextArea.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Максимальное количество символов, которые может ввести пользователь в текстовом поле. Это свойство не ограничивает длину текста, заданного значениями свойств элемента управления <codeph>text</codeph> или <codeph>htmlText</codeph>.
     
      <p>Значением по умолчанию является 0. При этом значении ограничения отсутствуют.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:restrict:get"><apiName>restrict</apiName><shortdesc>
      Определяет набор символов, которые пользователь может ввести в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3174
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue><apiTipTexts><apiTipText>Набор символов, которые можно ввести в поле TextArea.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Определяет набор символов, которые пользователь может ввести в элементе управления. Если свойству <codeph>restrict</codeph> присвоено значение <codeph>null</codeph>, можно ввести любой символ. Если в качестве значения свойства <codeph>restrict</codeph> установлена пустая строка, ввод символов невозможен. Это свойство ограничивает только действия пользователя; сценарий может помещать в текстовое поле любые символы. Если значением свойства <codeph>restrict</codeph> является строка символов, в текстовое поле можно ввести только символы из этой строки.
     
      <p>Flex сканирует строку слева направо. Диапазон определяется с помощью символа (-). Если строка начинается с символа вставки (^), все символы изначально поддерживаются, а последующие символы в строке исключаются из набора поддерживаемых символов. Если строка не начинается с символа вставки (^), символы изначально не поддерживаются, а последующие символы в строке включаются в набор поддерживаемых символов.</p>
     
      <p>Поскольку некоторые символы при использовании в свойстве <codeph>restrict</codeph> приобретают специальное значение, для задания символов-литералов – ^ и \ необходимо указывать символ обратной косой черты. При использовании свойства <codeph>restrict</codeph> в качестве атрибута в теге MXML укажите одинарный символ обратной косой черты, например: \^\-\\. При установке свойства <codeph>restrict</codeph> и выражения ActionScript используются двойные символы обратной косой черты, как в следующем примере: \\^\\-\\\.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:selectable:get"><apiName>selectable</apiName><shortdesc>
      Определяет, допускается ли выделение текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет, допускается ли выделение текста. Разрешение на выделение текста позволяет скопировать его из элемента управления.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:selectionBeginIndex:get"><apiName>selectionBeginIndex</apiName><shortdesc>
      Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Отсчитываемое от нуля значение индекса для первого символа в выделенном фрагменте.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте. Например, первый символ имеет индекс 0, второй – индекс 1 и т. д. При фокусировке на элементе управления выбор становится видимым в том случае, если установлены значения для свойств <codeph>selectionBeginIndex</codeph> и <codeph>selectionEndIndex</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:selectionEndIndex:get"><apiName>selectionEndIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс позиции после последнего символа в текущем диапазоне (эквивалентен индексу последнего символа, отсчитываемому от единицы).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Отсчитываемое от нуля значение индекса для последнего символа в выделенном фрагменте.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс позиции <i>после</i>последнего символа в текущем диапазоне (эквивалентен индексу последнего символа, отсчитываемому от единицы). Если последний символ в диапазоне, например, является пятым символом, это свойство имеет значение 5. При фокусировке на элементе управления выбор становится видимым в том случае, если установлены значения для свойств <codeph>selectionBeginIndex</codeph> и <codeph>selectionEndIndex</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
     Объект flash.text.StyleSheet может выполнять визуализацию текста элемента управления TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:StyleSheet"/><apiDefaultValue>null
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Объект flash.text.StyleSheet может выполнять визуализацию текста элемента управления TextArea. Используется для точного контроля стилей HTML для текста. Для получения дополнительной информации см. документацию по классу flash.text.StyleSheet.
    
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.StyleSheet.xml"><linktext>flash.text.StyleSheet</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:text:get"><apiName>text</apiName><shortdesc>
      Простой текст, отображаемый в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3179
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>Получает или задает содержимое TextArea.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Простой текст, отображаемый в элементе управления. Его внешний вид определяется стилями CSS данного элемента управления Label.
      
      <p>Любые HTML-теги в текстовой строке игнорируются и отображаются при вводе в строку. Для отображения отформатированного текста с помощью HTML-тегов используется свойство <codeph>htmlText</codeph>. При активации свойства <codeph>htmlText</codeph> HTML заменяет любой заданный с помощью этого свойства текст, а свойство <codeph>text</codeph> возвращает неформатированный текст HTML без тегов HTML. Для получения дополнительной информации см. описание свойства <codeph>htmlText</codeph>.</p>
     
      <p>Для включения в текст специальных символов левой угловой скобки (&lt;), правой угловой скобки (>) или амперсанда (&amp;) необходимо заключить текстовую строку в тег CDATA. Кроме того, можно использовать объекты HTML для специальных символов, например, <codeph>&amp;lt;</codeph>.</p>
     
      <p>При попытке установить для этого свойства значение <codeph>null</codeph> будет установлена пустая строка. Свойство <codeph>text</codeph> может временно иметь значение <codeph>null</codeph>. Это означает, что значение <codeph>htmlText</codeph> было установлено недавно, и соответствующее значение <codeph>text</codeph> еще не определено.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      Высота текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Высота текста.
     
      <p>Значение свойства <codeph>textHeight</codeph> становится корректным только после проверки компонента. При установке значения свойства <codeph>text</codeph> и немедленном запросе <codeph>textHeight</codeph> возможно получение некорректного значения. Перед получением значения необходимо дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения элемента управления flash.text.TextField, который выполняет обновление значения незамедлительно.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      Ширина текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина текста.
     
      <p>Значение свойства <codeph>textWidth</codeph> становится корректным только после проверки компонента. При установке значения для свойства <codeph>text</codeph> и немедленном запросе <codeph>textWidth</codeph> возможно получение некорректного значения. Перед получением значения необходимо дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения элемента управления flash.text.TextField, который выполняет обновление значения незамедлительно.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextArea:verticalScrollPolicy:get"><apiName>verticalScrollPolicy</apiName><shortdesc>
      Управляет видимостью вертикальной полосы прокрутки: всегда включена (ScrollPolicy.ON), всегда выключена (ScrollPolicy.OFF) или включается при необходимости (ScrollPolicy.AUTO).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3428
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ScrollPolicy.AUTO
      </apiDefaultValue><apiTipTexts><apiTipText>Указывает режим вертикальной полосы прокрутки: включена, выключена или автоматическая настройка.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Управляет видимостью вертикальной полосы прокрутки: всегда включена (<codeph>ScrollPolicy.ON</codeph>), всегда выключена (<codeph>ScrollPolicy.OFF</codeph>) или включается при необходимости (<codeph>ScrollPolicy.AUTO</codeph>).
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:wordWrap:get"><apiName>wordWrap</apiName><shortdesc>
      Указывает, будет ли текст автоматически перенесен в конце строки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3175
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue><apiTipTexts><apiTipText>Если значение равно true, строки будут перенесены. Если значение равно false, длинные строки отсекаются.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Указывает, будет ли текст автоматически перенесен в конце строки. Если значение равно <codeph>true</codeph>, текст будет перенесен и, если потребуется, займет несколько строк.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:horizontalScrollPosition:set"><apiName>horizontalScrollPosition</apiName><shortdesc>
      Расположение в области содержимого крайнего левого пикселя, отображаемого в настоящий момент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Расположение в области содержимого крайнего левого пикселя, отображаемого в настоящий момент. (Область содержимого включает все содержимое элемента управления, а не только отображаемый в данный момент фрагмент.) Для этого свойства всегда устанавливается значение 0. Любые изменения игнорируются, если для <codeph>wordWrap</codeph> установлено значение <codeph>true</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextArea:verticalScrollPosition:set"><apiName>verticalScrollPosition</apiName><shortdesc>
      Номер строки верхнего ряда символов, отображаемой в настоящий момент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3181
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiTipTexts><apiTipText>Смещение (в пикселях) от верхней границы содержимого.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Номер строки верхнего ряда символов, отображаемой в настоящий момент. Значением по умолчанию является 0.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:VRule"><apiName>VRule</apiName><shortdesc>
  Элемент управления VRule создает одну вертикальную линию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:VRule" replacement="spark.primitives.Line" since="4.0">
	</Alternative><styles><style format="Length" inherit="yes" name="strokeWidth" owner="mx.controls:VRule" playerVersion="Flash9" type="Number">
<description>
  Толщина линейки в пикселях. 
  <ul>
    <li>Если значение параметра <codeph>strokeWidth</codeph> равно 1, толщина линейки составляет 1 пиксель.</li>
    <li>Если значение параметра <codeph>strokeWidth</codeph> равно 2, то линейка состоит из двух смежных вертикальных линий, толщина каждой из которых равна 1 пикселю.</li>
    <li>Если значение параметра <codeph>strokeWidth</codeph> больше 2, линейка является полым прямоугольником с границами, толщина которых равна одному пикселю.</li>
  </ul>
  
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="strokeColor" owner="mx.controls:VRule" playerVersion="Flash9" type="uint">
<description>
  Цвет линии. 
  <ul>
    <li>Если значение параметра <codeph>strokeWidth</codeph> равно 1, цвет strokeColor является цветом всей линии.</li>
    <li>Если значение параметра <codeph>strokeWidth</codeph> равно 2, цвет strokeColor является цветом линии слева.</li>
    <li>Если значение параметра <codeph>strokeWidth</codeph> больше 2, цвет strokeColor является цветом верхней и левой сторон прямоугольника.</li>
  </ul>
  
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="shadowColor" owner="mx.controls:VRule" playerVersion="Flash9" type="uint">
<description>
  Цвет тени строки. 
  <ul>
    <li>Если значение параметра <codeph>strokeWidth</codeph> равно 1, цвет shadowColor не применяется.</li>
    <li>Если параметр <codeph>strokeWidth</codeph> имеет значение 2, цвет shadowColor является цветом правой линии.</li>
    <li>Если значение параметра <codeph>strokeWidth</codeph> больше 2, цвет shadowColor является цветом нижней и правой сторон прямоугольника.</li>
  </ul>
  
  </description>
<default>0xEEEEEE
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VRule&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:VRule
    <strong>Styles</strong>
    strokeColor="0xC4CCCC"
    shadowColor="0xEEEEEE"
    strokeWidth="2"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления VRule создает одну вертикальную линию. Обычно этот элемент управления используется для создания разделительной линии в контейнере.
 
  <p>Элемент управления HRule имеет следующие свойства по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Высота по умолчанию составляет 100 пикселей, ширина по умолчанию – 2 пикселя. По умолчанию размеры элемента управления VRule изменить невозможно; для изменения размеров этого элемента управления необходимо установить ширину и высоту в процентах.</entry>
        </row><row>
           <entry>strokeWidth</entry>
           <entry>2 пикселя.</entry>
        </row><row>
           <entry>strokeColor</entry>
           <entry>0xC4CCCC.</entry>
        </row><row>
           <entry>shadowColor</entry>
           <entry>0xEEEEEE.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleVRule.mxml"><swfblock conref="examples/SimpleVRule.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#HRule"><linktext>mx.controls.HRule</linktext></link></related-links><apiConstructor id="mx.controls:VRule:VRule"><apiName>VRule</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Alert"><apiName>Alert</apiName><shortdesc>
  Элемент управления Alert является раскрывающимся диалоговым окном, которое может содержать сообщение, заголовок, кнопки (любое сочетание кнопок «OK», «Отмена», «Да» и «Нет») и значок.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="titleStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Имя объявления CSS-стиля, которое указывает стили для текста заголовка Alert. 
 
  <p>Этот стиль определяется только посредством селектора типа, который устанавливает стиль для всех элементов управления Alert в приложении. При установке этого стиля в конкретном экземпляре элемента управления Alert возможно некорректное определение размеров элемента управления.</p>
 
  </description>
<default>"windowStyles" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="messageStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Имя объявления CSS-стиля, которое указывает стили для текста сообщения Alert. 
 
  <p>Этот стиль определяется только посредством селектора типа, который устанавливает стиль для всех элементов управления Alert в приложении. При установке этого стиля в конкретном экземпляре элемента управления Alert возможно некорректное определение размеров элемента управления.</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="buttonStyleName" owner="mx.controls:Alert" playerVersion="Flash9" type="String">
<description>
  Имя объявления CSS-стиля, которое указывает стили для кнопок Alert. 
 
  </description>
<default>"alertButtonStyle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Panel</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Alert является раскрывающимся диалоговым окном, которое может содержать сообщение, заголовок, кнопки (любое сочетание кнопок «OK», «Отмена», «Да» и «Нет») и значок. Элемент управления Alert является модальным. Это означает, что он сохраняет фокус до закрытия пользователем.
 
  <p>Импортируйте класс mx.controls.Alert в приложение, а затем вызовите статический метод <codeph>show()</codeph> в ActionScript для отображения элемента управления Alert. Создать элемент управления Alert в MXML невозможно.</p>
 
  <p>Элемент управления Alert закрывается при нажатии соответствующей кнопки в элементе управления или с помощью клавиши Esc.</p>
 
  </apiDesc><example conref="SimpleAlert.mxml"><swfblock conref="examples/SimpleAlert.swf"/></example></apiClassifierDetail><related-links><link href="mx.managers.xml#SystemManager"><linktext>mx.managers.SystemManager</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><apiConstructor id="mx.controls:Alert:Alert"><apiName>Alert</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Alert:show"><apiName>show</apiName><shortdesc>
      Статический метод, который используется для открытия элемента управления Alert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Ссылка на элемент управления Alert. 
     
      </apiDesc><apiOperationClassifier>mx.controls:Alert</apiOperationClassifier></apiReturn><apiParam><apiItemName>text</apiItemName><apiType value="String"/><apiData/><apiDesc>Текстовая строка, которая отображается в элементе управления Alert. Этот текст выровнен по центру в диалоговом окне предупреждения.
     
      </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiType value="String"/><apiData/><apiDesc>Текстовая строка, которая отображается в строке заголовка. Этот текст выровнен по левому краю.
     
      </apiDesc></apiParam><apiParam><apiItemName>flags</apiItemName><apiType value="uint"/><apiData>0x4</apiData><apiDesc>Кнопки для размещения в элементе управления Alert. Допустимыми значениями являются <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> и <codeph>Alert.NO</codeph>. Значением по умолчанию является <codeph>Alert.OK</codeph>. Для отображения нескольких кнопок используется побитовый оператор OR. Например, при передаче <codeph>(Alert.YES | Alert.NO)</codeph> отображаются кнопки «Да» и «Нет». Независимо от порядка указания кнопки всегда отображаются в следующем порядке слева направо: «OK», «Да», «Нет» и «Отмена».
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:Sprite"/><apiData>null</apiData><apiDesc>Объект, по которому выполняется центрирование элемента управления Alert.
     
      </apiDesc></apiParam><apiParam><apiItemName>closeHandler</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Обработчик событий, вызываемый при нажатии любой кнопки в элементе управления Alert. Объект события, передаваемый этому обработчику, представляет собой экземпляр CloseEvent; свойство <codeph>detail</codeph> этого объекта содержит значение <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> или <codeph>Alert.NO</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>iconClass</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>Класс значка, который размещается слева от текста в элементе управления Alert.
     
      </apiDesc></apiParam><apiParam><apiItemName>defaultButtonFlag</apiItemName><apiType value="uint"/><apiData>0x4</apiData><apiDesc>Битовый флаг, который определяет кнопку по умолчанию. Можно указать только одно из следующих значений: <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> или <codeph>Alert.NO</codeph>. Значением по умолчанию является <codeph>Alert.OK</codeph>. При нажатии клавиши Enter действие кнопки по умолчанию инициируется точно так же, как и при нажатии непосредственно этой кнопки. При нажатии клавиши Esc действие кнопки «Отмена» или «Нет» инициируется точно так же, как и при нажатии этих кнопок.
     
      </apiDesc></apiParam><apiParam><apiItemName>moduleFactory</apiItemName><apiOperationClassifier>mx.core:IFlexModuleFactory</apiOperationClassifier><apiData>null</apiData><apiDesc>
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Статический метод, который используется для открытия элемента управления Alert. Элемент управления Alert закрывается при нажатии соответствующей кнопки в элементе управления или с помощью клавиши Esc.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#CloseEvent"><linktext>mx.events.CloseEvent</linktext></link></related-links></apiOperation><apiValue id="mx.controls:Alert:CANCEL"><apiName>CANCEL</apiName><shortdesc>
      Значение, которое активирует кнопку «Отмена» в элементе управления Alert при передаче параметра flags метода show().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0008</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Значение, которое активирует кнопку «Отмена» в элементе управления Alert при передаче параметра <codeph>flags</codeph> метода <codeph> show()</codeph>. Для объединения этого побитового флага с флагами <codeph>OK</codeph>, <codeph>YES</codeph>, <codeph>NO</codeph> и <codeph>NONMODAL</codeph> используется оператор |.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:NO"><apiName>NO</apiName><shortdesc>
      Значение, которое активирует кнопку «Нет» в элементе управления Alert при передаче параметра flags метода show().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Значение, которое активирует кнопку «Нет» в элементе управления Alert при передаче параметра <codeph>flags</codeph> метода <codeph>show()</codeph>. Для объединения этого побитового флага с флагами <codeph>OK</codeph>, <codeph>CANCEL</codeph>, <codeph>YES</codeph> и <codeph>NONMODAL</codeph> используется оператор |.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:NONMODAL"><apiName>NONMODAL</apiName><shortdesc>
      Значение, при котором Alert перестает быть модальным при передаче параметра flags метода show().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x8000</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Значение, при котором Alert перестает быть модальным при передаче параметра <codeph>flags</codeph> метода <codeph>show()</codeph>. Для объединения этого побитового флага с флагами <codeph>OK</codeph>, <codeph>CANCEL</codeph>, <codeph>YES</codeph> и <codeph>NO</codeph> используется оператор |.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:OK"><apiName>OK</apiName><shortdesc>
      Значение, которое активирует кнопку «OK» в элементе управления Alert при передаче параметра flags метода show().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Значение, которое активирует кнопку «OK» в элементе управления Alert при передаче параметра <codeph>flags</codeph> метода <codeph>show()</codeph>. Для объединения этого побитового флага с флагами <codeph>CANCEL</codeph>, <codeph>YES</codeph>, <codeph>NO</codeph> и <codeph>NONMODAL</codeph> используется оператор |.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:YES"><apiName>YES</apiName><shortdesc>
      Значение, которое активирует кнопку «Да» в элементе управления Alert при передаче параметра flags метода show().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Значение, которое активирует кнопку «Да» в элементе управления Alert при передаче параметра <codeph>flags</codeph> метода<codeph>show()</codeph>. Для объединения этого побитового флага с флагами <codeph>OK</codeph>, <codeph>CANCEL</codeph>, <codeph>NO</codeph> и <codeph>NONMODAL</codeph> используется оператор |.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonFlags"><apiName>buttonFlags</apiName><shortdesc>
      Битовая маска, которая содержит значения Alert.OK, Alert.CANCEL, Alert.YES и/или Alert.NO, указывающие кнопки, доступные в элементе управления Alert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0x0004</apiData><apiType value="uint"/><apiDefaultValue>Alert.OK
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Битовая маска, которая содержит значения <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> и/или <codeph>Alert.NO</codeph>, указывающие кнопки, доступные в элементе управления Alert.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonHeight"><apiName>buttonHeight</apiName><shortdesc>
      Высота каждой кнопки Alert в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>22</apiData><apiType value="Number"/><apiDefaultValue>22
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Высота каждой кнопки Alert в пикселях. Все кнопки должны иметь одинаковую высоту.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:buttonWidth"><apiName>buttonWidth</apiName><shortdesc>
      Ширина каждой кнопки Alert в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>65</apiData><apiType value="Number"/><apiDefaultValue>60
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ширина каждой кнопки Alert в пикселях. Все кнопки должны иметь одинаковую ширину.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:defaultButtonFlag"><apiName>defaultButtonFlag</apiName><shortdesc>
      Битовый флаг, который содержит значение Alert.OK, Alert.CANCEL, Alert.YES или Alert.NO, указывающее кнопку по умолчанию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0x0004</apiData><apiType value="uint"/><apiDefaultValue>Alert.OK
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Битовый флаг, который содержит значение <codeph>Alert.OK</codeph>, <codeph>Alert.CANCEL</codeph>, <codeph>Alert.YES</codeph> или <codeph>Alert.NO</codeph>, указывающее кнопку по умолчанию.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:iconClass"><apiName>iconClass</apiName><shortdesc>
      Класс отображаемого значка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Class"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Класс отображаемого значка. Как правило, сначала встраивается ресурс, например, файл JPEG или GIF, а затем для указания значения этого свойства используется связанная с встроенным ресурсом переменная.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:text"><apiName>text</apiName><shortdesc>
      Текст, отображаемый в диалоговом окне предупреждения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текст, отображаемый в диалоговом окне предупреждения.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:cancelLabel:get"><apiName>cancelLabel</apiName><shortdesc>
      Метка для кнопки «Отмена».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Метка для кнопки «Отмена».
     
      <p>При использовании другой метки может потребоваться откорректировать значение свойства <codeph>buttonWidth</codeph> для обеспечения полного отображения метки.</p>
     
      Пакет ресурсов для русского языка устанавливает для этого свойства значение «ОТМЕНА». 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:noLabel:get"><apiName>noLabel</apiName><shortdesc>
      Метка для кнопки «Нет».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Метка для кнопки «Нет».
     
      <p>При использовании другой метки может потребоваться откорректировать значение свойства <codeph>buttonWidth</codeph> для обеспечения полного отображения метки.</p>
     
      Пакет ресурсов для русского языка устанавливает для этого свойства значение «НЕТ». 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:okLabel:get"><apiName>okLabel</apiName><shortdesc>
      Метка для кнопки «OK».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Метка для кнопки «OK».
     
      <p>При использовании другой метки может потребоваться откорректировать значение свойства <codeph>buttonWidth</codeph> для обеспечения полного отображения метки.</p>
     
      Пакет ресурсов для русского языка устанавливает для этого свойства значение «OK». 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Alert:yesLabel:get"><apiName>yesLabel</apiName><shortdesc>
      Метка для кнопки «Да».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Метка для кнопки «Да».
     
      <p>При использовании другой метки может потребоваться откорректировать значение свойства <codeph>buttonWidth</codeph> для обеспечения полного отображения метки.</p>
     
      Пакет ресурсов для русского языка устанавливает для этого свойства значение «ДА». 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:IFlexContextMenu"><apiName>IFlexContextMenu</apiName><shortdesc>
  Интерфейс IFlexContextMenu определяет интерфейс контекстных меню Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Интерфейс IFlexContextMenu определяет интерфейс контекстных меню Flex.  
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent/flexContextMenu"><linktext>mx.core.UIComponent.flexContextMenu</linktext></link></related-links><apiOperation id="mx.controls:IFlexContextMenu:mx.controls:IFlexContextMenu:setContextMenu"><apiName>setContextMenu</apiName><shortdesc>
      Устанавливает контекстное меню для InteractiveObject.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/><apiDesc>InteractiveObject, для которого требуется установить контекстное меню.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает контекстное меню для InteractiveObject. При этом выполняются все шаги, необходимые для добавления InteractiveObject в качестве контекстного меню для данного InteractiveObject, например, добавление прослушивателей и т. д.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:IFlexContextMenu:mx.controls:IFlexContextMenu:unsetContextMenu"><apiName>unsetContextMenu</apiName><shortdesc>
      Отменяет установку контекстного меню для InteractiveObject.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>component</apiItemName><apiType value="flash.display:InteractiveObject"/><apiDesc>InteractiveObject, для которого требуется отменить установку контекстного меню.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отменяет установку контекстного меню для InteractiveObject. При этом выполняются все шаги, необходимые для удаления InteractiveObject в качестве контекстного меню для данного InteractiveObject, например, удаление прослушивателей и т. д.
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="mx.controls:ProgressBar"><apiName>ProgressBar</apiName><shortdesc>
  Элемент управления ProgressBar обеспечивает визуальное представление хода выполнения задачи во времени.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><effects><effect event="complete" name="completeEffect" owner="mx.controls:ProgressBar">
<description>
  Эффект, вызываемый при передаче Flex события <codeph>complete</codeph>, которое происходит при завершении загрузки.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><styles><style format="Length" inherit="yes" name="labelWidth" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Ширина метки в пикселях. Если установлено значение NaN, элемент управления ProgressBar устанавливает его в качестве ширины элемента управления.
 
  </description>
<default>NaN
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="trackHeight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Высота полосы прокрутки в пикселях. Если установлено значение NaN, используется высота темы оформления, указанная свойством <codeph>trackSkin</codeph>. 
  
  </description>
<default>NaN
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="trackColors" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Цвета полосы прокрутки в виде двухцветного массива. Можно использовать один цвет для получения чистого цвета полосы прокрутки.
 
  </description>
<default>[ 0xE6EEEE, 0xE6EEEE ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="themeColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет темы элемента управления ProgressBar. Возможными значениями являются haloGreen, haloBlue и haloOrange. Adobe рекомендует устанавливать стиль <codeph>themeColor</codeph> в теге <codeph>&lt;mx:Application></codeph>, а не в отдельных элементах управления. 
 
  </description>
<default>"haloBlue"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="trackSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Стиль темы оформления для полосы прокрутки индикатора выполнения. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="maskSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Стиль темы оформления для маски определенных и неопределенных индикаторов. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indeterminateSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Стиль темы оформления для неопределенного индикатора выполнения. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indeterminateMoveInterval" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей, на которое перемещается неопределенный индикатор выполнения для каждого неопределенного цикла. После перемещения на указанное число пикселей индикатор выполнения возвращается в начальную точку. Значение 0 означает, что полоса не перемещается. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Черный раздел трехмерной границы или цветной раздел двухмерной границы.
  </description>
<default>0xB7BABC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="barSkin" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Class">
<description>
  Стиль темы оформления для определенного индикатора выполнения. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ProgressBar" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:ProgressBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="barColor" owner="mx.controls:ProgressBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Определяет цвет ProgressBar. ProgressBar заполняется вертикальным градиентом между этим цветом и более ярким цветом, вычисленным на его основе. Этот стиль не влияет на другие компоненты, но может быть установлен в контейнере в целях управления внешним видом всех включенных индикаторов выполнения. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что свойство не установлено. В этом случае используется свойство стиля <codeph>themeColor</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ProgressBar&gt;</code> tag inherits all of the tag attributes 
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ProgressBar
    <strong>Properties</strong>
    conversion="1"
    direction="right|left"
    indeterminate="false|true"
    label="<i>No default</i>"
    labelPlacement="bottom|top|left|right|center"
    maximum="0"
    minimum="0"
    mode="event|polled|manual"
    source="<i>No default</i>"
  
    <strong>Styles</strong>
    barColor="undefined"
    barSkin="ProgressBarSkin"
    borderColor="0xAAB3B3"
    color="0x0B333C"
    disabledColor="0xAAB3B3"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontThickness="0"
    fontStyle="normal|italic"
    fontWeight="normal|bold"
    horizontalGap="8"
    indeterminateMoveInterval="26"
    indeterminateSkin="ProgressIndeterminateSkin"
    labelWidth="Computed"
    leading="0"
    maskSkin="ProgressMaskSkin"
    paddingLeft="0"
    paddingRight="0"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    themeColor="haloGreen|haloBlue|haloOrange"
    trackColors="[0xE6EEEE,0xE6EEEE]"
    trackHeight="Calculated"
    trackSkin="ProgressTrackSkin"
    verticalGap="6"
  
    <strong>Events</strong>
    complete="<i>No default</i>"
    hide="<i>No default</i>"
    progress="<i>No default</i>"
    show="<i>No default</i>"
  
    <strong>Effects</strong>
    completeEffect="<i>No default</i>"
  /&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ProgressBar обеспечивает визуальное представление хода выполнения задачи во времени. Существует два типа элементов управления ProgressBar: определенные и неопределенные.
 
  <p>Определенный элемент управления ProgressBar является линейным представлением процесса выполнения задачи во времени. Определенный ProgressBar используется в случае, если известна область задачи. Он отображается, если пользователю требуется ожидать в течение длительного времени.</p>
 
  <p>Неопределенный элемент управления ProgressBar представляет процессы на основе времени, для которых область еще не известна. После получения возможности определения области следует использовать определенный элемент управления ProgressBar.</p>
 
  <p>Элемент управления ProgressBar имеет следующие характеристики по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>описание;</entry></row></thead><tbody><row>
           <entry>размер по умолчанию</entry>
           <entry>150 пикселей в ширину на 4 пикселя в высоту</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не определен</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleProgressBar.mxml"><swfblock conref="examples/SimpleProgressBar.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBarDirection"><linktext>mx.controls.ProgressBarDirection</linktext></link><link href="mx.controls.xml#ProgressBarLabelPlacement"><linktext>mx.controls.ProgressBarLabelPlacement</linktext></link><link href="mx.controls.xml#ProgressBarMode"><linktext>mx.controls.ProgressBarMode</linktext></link></related-links><adobeApiEvent id="mx.controls:ProgressBar_mx.events.FlexEvent.SHOW_show"><apiName>show</apiName><shortdesc>
  Возникает при изменении состояния компонента на «Видимый».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.SHOW</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при изменении состояния компонента на «Видимый».
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Передается при загрузке содержимого в режиме событий или запросов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при загрузке содержимого в режиме событий или запросов.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_mx.events.FlexEvent.HIDE_hide"><apiName>hide</apiName><shortdesc>
  Возникает при изменении состояния объекта с «Видимый» на «Невидимый».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.HIDE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Возникает при изменении состояния объекта с «Видимый» на «Невидимый».
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ProgressBar_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  Передается после завершения загрузки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается после завершения загрузки.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ProgressBar:ProgressBar"><apiName>ProgressBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ProgressBar:setProgress"><apiName>setProgress</apiName><shortdesc>
      Задает состояние индикатора выполнения, которое отражает выполненный объем задачи при работе в ручном режиме.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Текущее значение.
     
      </apiDesc></apiParam><apiParam><apiItemName>total</apiItemName><apiType value="Number"/><apiDesc>Общее или целевое значение.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Задает состояние индикатора выполнения, которое отражает выполненный объем задачи при работе в ручном режиме. Аргумент <codeph>value</codeph> присваивается свойству <codeph>value</codeph>, а аргумент <codeph>maximum</codeph> присваивается свойству <codeph>maximum</codeph>. Свойство <codeph>minimum</codeph> не изменяется.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ProgressBar:conversion:get"><apiName>conversion</apiName><shortdesc>
      Число, используемое для преобразования значения загруженных входящих текущих байтов и общих значений загруженных байтов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Число, используемое для преобразования значения загруженных входящих текущих байтов и общих значений загруженных байтов. Flex делит текущее и общее значения на значение этого свойства и использует ближайшее целое число, меньшее или равное каждому значению в строке метки. При значении 1 преобразование не выполняется.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:direction:get"><apiName>direction</apiName><shortdesc>
      Направление, в котором ProgressBar заполняется до полного завершения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarDirection.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Направление, в котором ProgressBar заполняется до полного завершения. Допустимыми значениями в MXML являются <codeph>right</codeph> и <codeph>left</codeph>.
     
      <p>В ActionScript для установки значения этого свойства используются следующие константы: <codeph>ProgressBarDirection.RIGHT</codeph> и <codeph>ProgressBarDirection.LEFT</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarDirection"><linktext>mx.controls.ProgressBarDirection</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:indeterminate:get"><apiName>indeterminate</apiName><shortdesc>
      Определяет вид элемента управления ProgressBar: определенный или неопределенный.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет вид элемента управления ProgressBar: определенный или неопределенный. Если статус выполнения определить невозможно, используйте неопределенный внешний вид. Если значение равно <codeph>true</codeph>, внешний вид не определен.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:label:get"><apiName>label</apiName><shortdesc>
      Текст, отображаемый вместе с индикатором выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"LOADING %3%%"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текст, отображаемый вместе с индикатором выполнения. В текстовую строку можно включить следующие специальные символы:
     
      <ul>
        <li>%1 = текущее количество загруженных байтов;</li>
        <li>%2 = общее количество байтов;</li>
        <li>%3 = процент загрузки;</li>
        <li>%% = символ «%».</li>
      </ul>
     
      <p>Если значение поля неизвестно, оно заменяется на «??». Если установлено значение undefined, метка не отображается.</p>
      
      <p>В ручном режиме значения этих специальных символов устанавливаются с помощью метода <codeph>setProgress()</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Размещение метки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarLabelPlacement.BOTTOM
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Размещение метки. Допустимыми значениями в MXML являются <codeph>right</codeph>, <codeph>left</codeph>, <codeph>bottom</codeph>, <codeph>center</codeph> и <codeph>top</codeph>.
     
      <p>В ActionScript для установки значения этого свойства используются следующие константы: <codeph>ProgressBarLabelPlacement.RIGHT</codeph>, <codeph>ProgressBarLabelPlacement.LEFT</codeph>, <codeph>ProgressBarLabelPlacement.BOTTOM</codeph>, <codeph>ProgressBarLabelPlacement.CENTER</codeph> и <codeph>ProgressBarLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarLabelPlacement"><linktext>mx.controls.ProgressBarLabelPlacement</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:maximum:get"><apiName>maximum</apiName><shortdesc>
      Наибольшее значение хода выполнения для элемента управления ProgressBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Наибольшее значение хода выполнения для элемента управления ProgressBar. Это свойство можно использовать только в ручном режиме.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:minimum:get"><apiName>minimum</apiName><shortdesc>
      Наименьшее значение хода выполнения для элемента управления ProgressBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Наименьшее значение хода выполнения для элемента управления ProgressBar. Это свойство устанавливается разработчиком только в ручном режиме.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:mode:get"><apiName>mode</apiName><shortdesc>
      Задает метод обновления панели.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ProgressBarMode.EVENT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Задает метод обновления панели. В MXML используется одно из следующих значений:
     
      <ul>
        <li><codeph>event</codeph> Элемент управления, определяемый свойством <codeph>source</codeph>, должен передавать события выполнения и завершенные события. Элемент управления ProgressBar использует эти события для обновления своего состояния. Элемент управления ProgressBar обновляется только в том случае, если значение свойства <codeph>source</codeph> расширяет класс EventDispatcher.</li>
     
        <li><codeph>polled</codeph> Свойство <codeph>source</codeph> должно указывать объект, который предоставляет свойства <codeph>bytesLoaded</codeph> и <codeph>bytesTotal</codeph>. Элемент управления ProgressBar вызывает эти методы для обновления своего статуса.</li>
     
        <li><codeph>manual</codeph> Статус ProgressBar обновляется вручную. В этом режиме указываются значения свойств <codeph>maximum</codeph> и <codeph>minimum</codeph>, и используется метод свойства <codeph>setProgress()</codeph> для указания статуса. Этот режим часто используется, если для свойства <codeph>indeterminate</codeph> установлено значение <codeph>true</codeph>.</li>
      </ul>
     
      <p>В ActionScript для установки значения этого свойства используются следующие константы: <codeph>ProgressBarMode.EVENT</codeph>, <codeph>ProgressBarMode.POLLED</codeph> и <codeph>ProgressBarMode.MANUAL</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#ProgressBarMode"><linktext>mx.controls.ProgressBarMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:ProgressBar:percentComplete:get"><apiName>percentComplete</apiName><shortdesc>
      Процент выполненного объема задачи. Значение может находиться в диапазоне от 0 до 100.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Процент выполненного объема задачи. Значение может находиться в диапазоне от 0 до 100. Для изменения процентного значения используется метод <codeph>setProgress()</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:source:get"><apiName>source</apiName><shortdesc>
      Ссылается на элемент управления, ход выполнения которого измеряется посредством ProgressBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Ссылается на элемент управления, ход выполнения которого измеряется посредством ProgressBar. Это свойство используется только в режиме событий и запросов. Типичным использованием является установка значения этого свойства для элемента управления Loader.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBar:value:get"><apiName>value</apiName><shortdesc>
      Свойство, доступное только для чтения, которое содержит данные о выполненном объеме задачи (между минимальным и максимальным значениями).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Свойство, доступное только для чтения, которое содержит данные о выполненном объеме задачи (между минимальным и максимальным значениями).
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Text"><apiName>Text</apiName><shortdesc>
  Элемент управления Text отображает многострочный текст, недоступный для редактирования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalAlign"/><Exclude kind="style" name="horizontalAlign"/><styles><style format="Length" inherit="yes" name="leading" owner="mx.controls:Text" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значение по умолчанию для элемента управления ComboBox: 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Text&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Text
  leading="2"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Label</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Text отображает многострочный текст, недоступный для редактирования. Элемент управления Label используется в случае, если требуется только одна строка текста.
 
  <p>Элемент управления Text не поддерживает полосы прокрутки. Если требуется выполнить прокрутку, необходимо использовать недоступный для редактирования элемент управления TextArea.</p>
 
  <p>В элементе управления Text можно выполнить форматирование текста с помощью HTML-тегов, которые применяются после применения CSS-стилей элемента управления. Вокруг четырех сторон текста можно также поместить заполнение.</p>
 
  <p>Текст в элементе управления Text по умолчанию является доступным для выбора, но можно запретить его выбор с помощью установки для свойства <codeph>selectable</codeph> значения <codeph>false</codeph>.</p>
 
  <p>Если ширина элемента управления не соответствует ширине текста, то текст будет автоматически перенесен. Текст всегда выравнивается по левому верхнему углу элемента управления.</p>
 
  <p>Для определения размера компонента Text обычно указывается явная ширина с разрешением Flex определить высоту автоматически для отображения текста полностью. При явном указании высоты часть текста может быть отсечена; в отличие от элемента управления Label Text не усекает текст с использованием символа «...». Кроме того, для указания высоты и ширины элемента управления Text обычно используется значение, выраженное в процентах.</p>
 
  <p>Если ширина и высота не указаны, Flex вычисляет эти значения на основе любых явных разрывов строк в тексте без автоматического переноса слов в строках. Например, при активации свойства <codeph>text</codeph> разрыв строки инициируется символом новой строки <codeph>"\n"</codeph>. При активации свойства <codeph>htmlText</codeph> разрыв строки инициируется разметкой HTML <codeph>&lt;br></codeph>. Если свойство <codeph>text</codeph> или <codeph>htmlText</codeph> имеет большую длину и не содержит разрывов строк, компонент Text может быть очень широким. Для ограничения допустимой ширины компонента используется значение <codeph>maxWidth</codeph>.</p>
 
  <p>Элементы управления Text не имеют фона или границ и не могут получить фокус.</p>
 
  <p>Элемент управления Text имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Flex устанавливает размер элемента управления в соответствии с текстом, причем ширина должна быть достаточной для включения максимально длинной строки, а высота – для включения всех строк. Если ширина не указана в пикселях, высота определяется по количеству явно заданных разрывов строк в текстовой строке. При изменении длины текста размер элемента управления также изменяется в соответствии с новым объемом текста.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>ChMaximum sizear03</entry>
           <entry>10000 на 10000 пикселей</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextExample.mxml"><swfblock conref="examples/TextExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link></related-links><apiConstructor id="mx.controls:Text:Text"><apiName>Text</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ButtonLabelPlacement"><apiName>ButtonLabelPlacement</apiName><shortdesc>
  Класс ButtonLabelPlacement определяет константы для допустимых значений свойства labelPlacement элементов управления Button, CheckBox, LinkButton или RadioButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ButtonLabelPlacement определяет константы для допустимых значений свойства <codeph>labelPlacement</codeph> элементов управления Button, CheckBox, LinkButton или RadioButton.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#CheckBox"><linktext>mx.controls.CheckBox</linktext></link><link href="mx.controls.xml#LinkButton"><linktext>mx.controls.LinkButton</linktext></link><link href="mx.controls.xml#RadioButton"><linktext>mx.controls.RadioButton</linktext></link></related-links><apiValue id="mx.controls:ButtonLabelPlacement:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
	  Задает отображение метки под значком.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Задает отображение метки под значком.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:LEFT"><apiName>LEFT</apiName><shortdesc>
	  Задает отображение метки слева от значка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Задает отображение метки слева от значка.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  Задает отображение метки справа от значка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Задает отображение метки справа от значка.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ButtonLabelPlacement:TOP"><apiName>TOP</apiName><shortdesc>
	  Задает отображение метки над значком.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Задает отображение метки над значком.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:CheckBox"><apiName>CheckBox</apiName><shortdesc>
  Элемент управления CheckBox состоит из дополнительной метки и небольшого поля, которое может содержать или не содержать флажок.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="toggle"/><Exclude kind="property" name="emphasized"/><Alternative owner="mx.controls:CheckBox" replacement="spark.components.CheckBox" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:CheckBox" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет любого символа компонента. Примеры включают флажок элемента управления CheckBox или стрелку на кнопке элемента управления ScrollBar.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:CheckBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:CheckBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:CheckBox&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:CheckBox
    <strong>Styles</strong>
    disabledIconColor="0x999999"
    iconColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IToggleButton</apiBaseInterface><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления CheckBox состоит из дополнительной метки и небольшого поля, которое может содержать или не содержать флажок. Дополнительную текстовую метку можно поместить слева, справа, сверху или снизу от CheckBox. При щелчке по элементу управления CheckBox или по связанному с ним тексту состояние CheckBox изменяется с checked (флажок установлен) на unchecked (флажок удален) или наоборот. Элементы управления CheckBox включают набор значений true или false, которые не являются взаимоисключающими.
 
  <p>Элемент управления CheckBox имеет следующие характеристики по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Размер, достаточный для включения метки.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Без ограничений</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="CheckBoxExample.mxml"><swfblock conref="examples/CheckBoxExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:CheckBox:CheckBox"><apiName>CheckBox</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Button"><apiName>Button</apiName><shortdesc>
  Элемент управления Button представляет собой часто используемую прямоугольную кнопку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:Button" replacement="spark.components.Button" since="4.0">
	</Alternative><styles><style inherit="no" name="selectedDisabledIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка при нажатии или деактивации кнопки.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDownIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка при нажатии кнопки с удерживаемой кнопкой мыши.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedOverIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка, когда кнопка нажата, а указатель мыши находится над элементом управления.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedUpIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка при нажатии кнопки, когда кнопка мыши уже отпущена.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка, если кнопка деактивирована и не нажата.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка, если кнопка не нажата, а кнопка мыши нажата.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка, если кнопка не нажата, а мышь находится над элементом управления.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upIcon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка, если переключатель не выбран, а мышь не находится над кнопкой.
 
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="icon" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве значка по умолчанию. При установке любого другого стиля значка этот параметр будет переопределен.
  
  </description>
<default>null 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDisabledSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если переключатель нажат и деактивирован.
 
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedDownSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если переключатель выбран, и кнопка мыши нажата.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedOverSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если переключатель нажат, а мышь находится над элементом управления.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedUpSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если переключатель нажат, а мышь не находится над элементом управления.
 
  </description>
<default>"mx.skins.halo.ButtonSkin" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="emphasizedSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления кнопки, если кнопка имеет свойство <codeph>emphasized</codeph> (например, если она является кнопкой по умолчанию для контейнера). <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если кнопка не нажата и деактивирована.
 
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если переключатель не нажат, а кнопка мыши нажата.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если кнопка не нажата, а мышь находится над элементом управления.
  
  </description>
<default>"mx.skins.halo.ButtonSkin" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upSkin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления фона и границы, если кнопка не нажата, а мышь не находится над элементом управления.
  
  </description>
<default>"mx.skins.halo.ButtonSkin"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:Button" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления по умолчанию для фона и границы. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Промежуток между меткой кнопки и значком, если для свойства <codeph>labelPlacement</codeph> установлено значение <codeph>top</codeph> или <codeph>bottom</codeph>.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Цвет текста метки при нажатии пользователем. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Цвет текста метки при наведении указателя мыши на кнопку. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Количество миллисекунд между событиями <codeph>buttonDown</codeph> при нажатии и удержании пользователем кнопки мыши на кнопке.
  
  </description>
<default>35
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Количество миллисекунд ожидания после первого события <codeph>buttonDown</codeph> до следующего события <codeph>buttonDown</codeph> в каждом <codeph>repeatInterval</codeph>.
 
  </description>
<default>500
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между верхней границей компонента и верхним краем его области содержимого. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между нижней границей компонента и нижним краем его области содержимого. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="labelVerticalOffset" owner="mx.controls:Button" playerVersion="Flash10" type="Number">
<description>
  Число пикселей, на которое смещается по вертикали позиция метки. С помощью положительных чисел метка перемещается вниз. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Промежуток между меткой и значком, если для свойства <codeph>labelPlacement</codeph> установлено значение <codeph>left</codeph> или <codeph>right</codeph>.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:Button" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет кольца фокуса, если компонент в фокусе.
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="accentColor" owner="mx.controls:Button" playerVersion="Flash10" theme="spark" type="uint">
<description>
   
 
  </description>
<default>#0099FF
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:Button" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:Button" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:Button" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:Button" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:Button" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-прозрачность, используемая для заливки выделения цветом элементов управления. Первое значение указывает прозрачность верхней части области выделения цветом и второе значение указывает прозрачность нижней части области выделения цветом. Выделена цветом верхняя половина темы оформления.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Цвета, используемые для определения оттенка заливки фона элемента управления. Для получения плоского вида для обоих значений устанавливается один и тот же цвет.
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-каналы, используемые для заливки фона элементов управления. Используйте [1, 1] для получения непрозрачного фона для элементов управления.
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:Button" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов компонента. Этот стиль поддерживают следующие компоненты: Alert, Button, ComboBox, LinkButton, MenuBar, NumericStepper, Panel, ScrollBar, Tab, TitleWindow, а также любой компонент, поддерживающий свойство <codeph>borderStyle</codeph>, установленное на <codeph>solid</codeph>. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:Button" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет границы. Этот стиль поддерживает следующие элементы управления: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider, а также любые компоненты, поддерживающие стиль <codeph>borderStyle</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>0xB7BABC</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:Button" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:Button" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Button&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Button
    <b>Properties</b>
    autoRepeat="false|true"
    emphasized="false|true"
    fontContext="<i>IFontModuleFactory</i>"
    label=""
    labelPlacement="right|left|bottom|top"
    selected="false|true"
    selectedField="null"
    stickyHighlighting="false|true"
    toggle="false|true"
 
    <b>Styles</b>
    borderColor="0xAAB3B3"
    color="0x0B333C"
    cornerRadius="4"
    disabledColor="0xAAB3B3"
    disabledIcon="null"
    disabledSkin="mx.skins.halo.ButtonSkin"
    downIcon="null"
    downSkin="mx.skins.halo.ButtonSkin"
    fillAlphas="[0.6, 0.4]"
    fillColors="[0xE6EEEE, 0xFFFFFF]"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="bold|normal"
    highlightAlphas="[0.3, 0.0]"
    horizontalGap="2"
    icon="null"
    kerning="false|true"
    leading="2"
    letterSpacing="0"
    overIcon="null"
    overSkin="mx.skins.halo.ButtonSkin"
    paddingBottom="2"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="2"
    repeatDelay="500"
    repeatInterval="35"
    selectedDisabledIcon="null"
    selectedDisabledSkin="mx.skins.halo.ButtonSkin"
    selectedDownIcon="null"
    selectedDownSkin="mx.skins.halo.ButtonSkin"
    selectedOverIcon="null"
    selectedOverSkin="mx.skins.halo.ButtonSkin"
    selectedUpIcon="null"
    selectedUpSkin="mx.skins.halo.ButtonSkin"
    skin="mx.skins.halo.ButtonSkin"
    textAlign="center|left|right"
    textDecoration="none|underline"
    textIndent="0"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x000000"
    upIcon="null"
    upSkin="mx.skins.halo.ButtonSkin"
    verticalGap="2"
 
    <b>Events</b>
    buttonDown="<i>No default</i>"
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseInterface>mx.core:IButton</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Button представляет собой часто используемую прямоугольную кнопку. Элементы управления Button выглядят как кнопки, которые можно нажать. На них могут быть помещены текстовая метка, значок или то и другое.
 
  <p>Как правило, кнопки используют прослушиватели событий для выполнения действий при выборе пользователем соответствующего элемента управления. При щелчке мышью элемент управления Button активируется и передает события <codeph>click</codeph> и <codeph>buttonDown</codeph>. Элемент управления Button всегда передает события <codeph>mouseMove</codeph>, <codeph>mouseOver</codeph>, <codeph>mouseOut</codeph>, <codeph>rollOver</codeph>, <codeph>rollOut</codeph>, <codeph>mouseDown</codeph> и <codeph>mouseUp</codeph> в активированном или деактивированном состоянии.</p>
 
  <p>Внешний вид элемента управления Button можно настроить в соответствии с конкретными требованиями и изменить его функцию с нажимной кнопки на переключатель. Для изменения внешнего вида кнопки используется тема оформления для каждого ее состояния.</p>
 
  <p>Для метки элемента управления Button используется полужирный шрифт. При включении шрифта, который требуется использовать для метки элемента управления Button, необходимо встроить полужирный шрифт, например:</p>
 
  <pre>
  &lt;mx:style>
    @font-face {
      src:url("../MyFont-Bold.ttf");        
      fontFamily: myFont;
      fontWeight: bold;
    }
   .myBoldStyle {
      fontFamily: myFont;
      fontWeight: bold;
    } 
  &lt;/mx:style>
  ...
  &lt;mx:Button ... styleName="myBoldStyle"/>
  </pre>
  
  <p>Элемент управления Button имеет следующие характеристики по умолчанию:</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row><entry>Размер по умолчанию</entry><entry>Размер, достаточный для включения текста метки и любого значка.</entry></row><row><entry>Минимальный размер</entry><entry>0 пикселей.</entry></row><row><entry>Максимальный размер</entry><entry>Без ограничений</entry></row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ButtonExample.mxml"><swfblock conref="examples/ButtonExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:Button_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит данные для отображения. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Button_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении свойства selected для элемента управления Button.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства <codeph>selected</codeph> для элемента управления Button. Элемент управления Button используется как переключатель, если для свойства <codeph>toggle</codeph> установлено значение <codeph>true</codeph>. Для элементов управления RadioButton это событие передается при изменении свойства <codeph>selected</codeph>. Для элементов управления CheckBox это событие передается только в том случае, если пользователь осуществляет действия над элементом управления, используя мышь.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Button_mx.events.FlexEvent.BUTTON_DOWN_buttonDown"><apiName>buttonDown</apiName><shortdesc>
  Передается при нажатии пользователем элемента управления Button.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.BUTTON_DOWN</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при нажатии пользователем элемента управления Button. Если для свойства <codeph>autoRepeat</codeph> установлено значение <codeph>true</codeph>, это событие передается многократно в течение всего времени, пока кнопка остается нажатой.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Button:Button"><apiName>Button</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Button:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      Обработчик по умолчанию для события MouseEvent.CLICK.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>объект события.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик по умолчанию для события <codeph>MouseEvent.CLICK</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:mouseDownHandler"><apiName>mouseDownHandler</apiName><shortdesc>
      Обработчик по умолчанию для события MouseEvent.MOUSE_DOWN.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>объект события.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик по умолчанию для события <codeph>MouseEvent.MOUSE_DOWN</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:mouseUpHandler"><apiName>mouseUpHandler</apiName><shortdesc>
      Обработчик по умолчанию для события MouseEvent.MOUSE_UP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>объект события.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик по умолчанию для события <codeph>MouseEvent.MOUSE_UP</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:rollOutHandler"><apiName>rollOutHandler</apiName><shortdesc>
      Обработчик по умолчанию для события MouseEvent.ROLL_OUT.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>объект события.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик по умолчанию для события <codeph>MouseEvent.ROLL_OUT</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Button:protected:rollOverHandler"><apiName>rollOverHandler</apiName><shortdesc>
      Обработчик по умолчанию для события MouseEvent.ROLL_OVER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>объект события.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик по умолчанию для события <codeph>MouseEvent.ROLL_OVER</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Button:protected:icons"><apiName>icons</apiName><shortdesc>
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
	      
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:selectedField"><apiName>selectedField</apiName><shortdesc>
      Имя поля в свойстве data, которое указывает значение свойства selected элемента управления Button.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>null</apiData><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в свойстве <codeph>data</codeph>, которое указывает значение свойства <codeph>selected</codeph> элемента управления Button. Это свойство можно установить при использовании элемента управления Button в средстве визуализации элементов. Значением по умолчанию является null. Это означает, что для элемента управления Button не установлено состояние выбора на основе свойства в свойстве <codeph>data</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:stickyHighlighting"><apiName>stickyHighlighting</apiName><shortdesc>
      Если значение равно false, Button отображает тему оформления для состояния нажатия при нажатии кнопки пользователем, но соответствующим образом изменяет ее, когда курсор мыши убирается с кнопки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>false</codeph>, Button отображает тему оформления для состояния нажатия при нажатии кнопки пользователем, но соответствующим образом изменяет ее, когда курсор мыши убирается с кнопки. Если значение равно <codeph>true</codeph>, Button отображает тему оформления для состояния нажатия при нажатии кнопки пользователем и сохраняет ее, когда курсор мыши убирается с кнопки.
     
      <p>Подклассы Button, например, классы SliderThumb и ScrollThumb или стрелки вверх и вниз для ScrollBar устанавливают для этого свойства значение <codeph>true</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:protected:textField"><apiName>textField</apiName><shortdesc>
      Внутренний объект UITextField, обеспечивающий визуализацию метки для этой кнопки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier><apiDefaultValue>null 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Внутренний объект UITextField, обеспечивающий визуализацию метки для этой кнопки.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:autoRepeat:get"><apiName>autoRepeat</apiName><shortdesc>
      Указывает, требуется ли передавать повторяющиеся события buttonDown при удерживании пользователем кнопки мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, требуется ли передавать повторяющиеся события <codeph>buttonDown</codeph> при удерживании пользователем кнопки мыши.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:data:get"><apiName>data</apiName><shortdesc>
      Свойство data позволяет передавать значение в компонент при его использовании в качестве средства визуализации или редактора элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Свойство <codeph>data</codeph> позволяет передавать значение в компонент при его использовании в качестве средства визуализации или редактора элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>При использовании элемента управления в качестве средства визуализации или редактора вставных элементов Flex автоматически записывает текущее значение элемента в свойство <codeph>selected</codeph> данного элемента управления.</p>
     
      <p>Это свойство не устанавливается в MXML.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Button:emphasized:get"><apiName>emphasized</apiName><shortdesc>
      Отображает толстую рамку вокруг элемента управления Button, если кнопка отжата, а для свойства emphasized установлено значение true.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Отображает толстую рамку вокруг элемента управления Button, если кнопка отжата, а для свойства <codeph>emphasized</codeph> установлено значение <codeph>true</codeph>. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:label:get"><apiName>label</apiName><shortdesc>
      Текст, отображаемый на элементе управления Button.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текст, отображаемый на элементе управления Button.
     
      <p>Если ширина метки больше ширины элемента управления Button, метка усекается с добавлением многоточия (...). Полная метка отображается в виде всплывающей подсказки при наведении на элемент управления Button курсора мыши. Кроме того, при установке всплывающей подсказки с помощью свойства <codeph>tooltip</codeph> отображается всплывающая подсказка, а не текст метки.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Ориентация метки относительно заданного значка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ButtonLabelPlacement.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ориентация метки относительно заданного значка. Допустимыми значениями в MXML являются <codeph>right</codeph>, <codeph>left</codeph>, <codeph>bottom</codeph> и <codeph>top</codeph>.
     
      <p>В ActionScript для установки значения этого свойства используются следующие константы: <codeph>ButtonLabelPlacement.RIGHT</codeph>, <codeph>ButtonLabelPlacement.LEFT</codeph>, <codeph>ButtonLabelPlacement.BOTTOM</codeph> и <codeph>ButtonLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:listData:get"><apiName>listData</apiName><shortdesc>
      Если компонент используется в качестве средства визуализации или редактора вставных элементов, то Flex инициализирует свойство компонента listData соответствующими данными из элемента управления list.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Если компонент используется в качестве средства визуализации или редактора вставных элементов, то Flex инициализирует свойство компонента <codeph>listData</codeph> соответствующими данными из элемента управления списка. Затем компонент может использовать свойство <codeph>listData</codeph> для инициализации свойства <codeph>data</codeph> средства визуализации или редактора вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Button:selected:get"><apiName>selected</apiName><shortdesc>
      Указывает состояние переключателя: включен (true) или выключен (false).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает состояние переключателя: включен (<codeph>true</codeph>) или выключен (<codeph>false</codeph>). Это свойство можно установить только в том случае, если для свойства <codeph>toggle</codeph> установлено значение <codeph>true</codeph>.
     
      <p>Для элемента управления CheckBox указывает, отображается ли в поле флажок. Для элемента управления RadioButton указывает, выбран ли данный элемент управления.</p>
     
      <p>Пользователь может изменить это свойство щелчком по элементу управления или установить для него значение программным способом.</p>
     
      <p>Если в предыдущих версиях для свойства <codeph>toggle</codeph> было установлено значение <codeph>true</codeph>, то при изменении этого свойства также передавалось событие <codeph>change</codeph>. С версии 3.0 при настройке этого свойства программным способом передается только событие <codeph>valueCommit</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Button:toggle:get"><apiName>toggle</apiName><shortdesc>
      Определяет, находится ли Button в состоянии переключателя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет, находится ли Button в состоянии переключателя. Если значение равно <codeph>true</codeph>, то при нажатии кнопки состояние изменяется между выбранным и невыбранным. Это состояние можно получить или установить программным способом с помощью свойства <codeph>selected</codeph>. Если значение равно <codeph>false</codeph>, кнопка не фиксируется в нажатом положении при щелчке мышью. В этом случае для свойства <codeph>selected</codeph> всегда установлено значение <codeph>false</codeph>. Аналогичные кнопки используются для выполнения действий. Если для свойства <codeph>toggle</codeph> установлено значение <codeph>false</codeph>, то для свойства <codeph>selected</codeph> принудительно устанавливается значение <codeph>false</codeph>, поскольку выбрать можно только переключатели.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Spacer"><apiName>Spacer</apiName><shortdesc>
  Элемент управления Spacer позволяет расположить нижестоящие элементы в вышестоящем контейнере.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:Spacer&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds no new tag attributes.</p>
  
  <pre>
  &lt;mx:Spacer/&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Spacer позволяет расположить нижестоящие элементы в вышестоящем контейнере. Несмотря на то, что элемент управления Spacer не отображает каких-либо данных, он занимает пространство внутри вышестоящего контейнера. 
  
  <p>В следующем примере гибкий элемент управления Spacer используется для смещения элемента управления Button вправо с целью его выравнивания по правому краю контейнера HBox:</p>
 
  <pre>
  &lt;mx:HBox>
      &lt;mx:Image source="Logo.jpg"/>
      &lt;mx:Label text="Company XYZ"/>
      &lt;mx:Spacer width="100%"/>
      &lt;mx:Button label="Close"/>
  &lt;/mx:HBox>
  </pre>
 
  </apiDesc><example conref="SpacerExample.mxml"><swfblock conref="examples/SpacerExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:Spacer:Spacer"><apiName>Spacer</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:DateField"><apiName>DateField</apiName><shortdesc>
  Элемент управления DateField является текстовым полем, в котором отображается дата со значком календаря с правой стороны.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="editableDisabledSkin"/><Exclude kind="style" name="editableDownSkin"/><Exclude kind="style" name="editableOverSkin"/><Exclude kind="style" name="editableUpSkin"/><Exclude kind="style" name="borderThickness"/><Exclude kind="property" name="selectedItem"/><Exclude kind="property" name="selectedIndex"/><styles><style format="Color" inherit="yes" name="todayColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет выделения текущей даты в элементе управления DateChooser. Значением по умолчанию является <codeph>0x2B333</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:DateField" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления по умолчанию для фона и границы. Для класса DateField значение по умолчанию отсутствует.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Цвет области выделения выбранной в настоящий момент даты в элементе управления DateChooser. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Цвет области выделения даты при наведении на нее курсора мыши в элементе управления DateChooser. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dateChooserStyleName" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Имя объявления CSS-стиля для стилей раскрывающегося списка элемента управления DateChooser. По умолчанию элемент управления DateChooser использует унаследованные стили элемента управления DateField. 
  
  <p>Этот селектор класса используется для установки значений всех свойств стиля класса DateChooser, включая следующие: <codeph>cornerRadius</codeph>, <codeph>fillAlphas</codeph>, <codeph>fillColors</codeph>, <codeph>headerColors</codeph>, <codeph>headerStyleName</codeph>, <codeph>highlightAlphas</codeph>, <codeph>todayStyleName</codeph> и <codeph>weekdayStyleName</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина ограничительной рамки элемента управления DateChooser. Значением по умолчанию является 1.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет границы. Этот стиль поддерживает следующие элементы управления: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider, а также любые компоненты, поддерживающие стиль <codeph>borderStyle</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>0xB7BABC</codeph>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:DateField" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:DateField" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:DateField" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:DateField" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:DateField" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DateField" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:DateField" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:DateField" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:DateField&gt</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:DateField
    <strong>Properties</strong>
    dayNames="["S", "M", "T", "W", "T", "F", "S"]"
    disabledDays="<i>No default</i>"
    disabledRanges="<i>No default</i>"
    displayedMonth="<i>Current month</i>"
    displayedYear="<i>Current year</i>"
    dropdownFactory="<i>ClassFactory that creates an mx.controls.DateChooser</i>"
    firstDayOfWeek="0"
    formatString="MM/DD/YYYY"
    labelFunction="<i>Internal formatter</i>"
    maxYear="2100"
    minYear="1900"
    monthNames="["January", "February", "March", "April", "May",
    "June", "July", "August", "September", "October", "November",
    "December"]"
    monthSymbol=""
    parseFunction="<i>Internal parser</i>"
    selectableRange="<i>No default</i>"
    selectedDate="<i>No default</i>"
    showToday="true|false"
    yearNavigationEnabled="false|true"
    yearSymbol=""
  
   <strong>Styles</strong>
    borderColor="0xAAB3B3"
    borderThickness="1"
    color="0x0xB333C"
    dateChooserStyleName="dateFieldPopup"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    iconColor="0x111111"
    leading="2"
    paddingLeft="0"
    paddingRight="0"
    rollOverColor="0xE3FFD6"
    selectionColor="0xB7F39B"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    todayColor="0x2B333C"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    close="<i>No default</i>"
    dataChange="<i>No default</i>"
    open="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления DateField является текстовым полем, в котором отображается дата со значком календаря с правой стороны. При щелчке в любом месте внутри ограничительной рамки элемента управления появляется элемент управления DateChooser, который отображает даты в месяце с текущим числом. Если дата не выбрана, текстовое поле остается незаполненным, и в элементе управления DateChooser отображается месяц с текущей датой.
 
  <p>Если элемент управления DateChooser открыт, пользователь может просмотреть все месяцы и годы, а также выбрать дату. После выбора даты элемент управления DateChooser закрывается, и в текстовом поле отображается выбранная дата.</p>
 
  <p>Пользователь может также ввести дату в текстовое поле в том случае, если для свойства <codeph>editable</codeph> элемента управления DateField установлено значение <codeph>true</codeph>.</p>
 
  <p>DateField имеет те же характеристики по умолчанию (см. ниже), что и DateChooser для расширенного выбора даты.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Размер, достаточный для включения календаря, ширина которого позволяет отображать полные названия дней.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Без ограничений</entry>
        </row></tbody></tgroup></adobetable>
 
 <p>Для свернутого элемента управления DateField имеет следующие характеристики по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Размер, достаточный для включения отформатированной даты и значка календаря.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Без ограничений</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="DateFieldExample.mxml"><swfblock conref="examples/DateFieldExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link></related-links><adobeApiEvent id="mx.controls:DateField_mx.events.DateChooserEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Передается при изменении месяца в результате действий пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3616
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DateChooserEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.DateChooserEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении месяца в результате действий пользователя.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Передается при выборе пользователем поля для открытия раскрывающегося списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3614
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе пользователем поля для открытия раскрывающегося списка.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит данные для отображения. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Передается при выборе даты или щелчке за пределами раскрывающегося списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3615
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе даты или щелчке за пределами раскрывающегося списка.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateField_mx.events.CalendarLayoutChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при выборе или изменении даты и закрытии элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3613
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CalendarLayoutChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.CalendarLayoutChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе или изменении даты и закрытии элемента управления DateChooser.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DateField:DateField"><apiName>DateField</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:DateField:close"><apiName>close</apiName><shortdesc>
      Закрывает элемент управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3621
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Закрывает элемент управления DateChooser.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:dateToString"><apiName>dateToString</apiName><shortdesc>
      Форматирует дату в строку в соответствии с аргументом outputFormat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Отформатированная дата в виде строки.
     
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="Date"/><apiDesc>Значение даты для форматирования.
     
      </apiDesc></apiParam><apiParam><apiItemName>outputFormat</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая формат даты.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Форматирует дату в строку в соответствии с аргументом <codeph>outputFormat</codeph>. Аргумент <codeph>outputFormat</codeph> содержит шаблон, в котором выполняется форматирование строки <codeph>value</codeph>. Он может содержать <codeph>M</codeph>,<codeph>D</codeph>,<codeph>Y</codeph>, а также символы пунктуации и разделители.
     
      </apiDesc><example><pre>var todaysDate:String = DateField.dateToString(new Date(), "MM/DD/YYYY");</pre>
      
      </example></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:open"><apiName>open</apiName><shortdesc>
      Открывает элемент управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3620
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Открывает элемент управления DateChooser.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DateField:stringToDate"><apiName>stringToDate</apiName><shortdesc>
      Анализирует объект String, который содержит дату, и возвращает объект Date, соответствующий объекту String.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Отформатированная дата в виде объекта Date.
     
      
      </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>valueString</apiItemName><apiType value="String"/><apiDesc>Значение даты для форматирования.
     
      </apiDesc></apiParam><apiParam><apiItemName>inputFormat</apiItemName><apiType value="String"/><apiDesc>Строка, определяющая формат даты.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Анализирует объект String, который содержит дату, и возвращает объект Date, соответствующий объекту String. Аргумент <codeph>inputFormat</codeph> содержит шаблон, в котором выполняется форматирование строки<codeph>valueString</codeph>. Он может содержать <codeph>M</codeph>,<codeph>D</codeph>,<codeph>Y</codeph>, а также символы пунктуации и разделители.
     
      <p>Эта функция не выполняет проверку объекта Date. Если для значения числа, месяца или года установлено NaN, этот метод возвращает значение null.</p>
     
      <p>Например:
      <pre>var dob:Date = DateField.stringToDate("06/30/2005", "MM/DD/YYYY");</pre>        
      </p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:DateField:data:get"><apiName>data</apiName><shortdesc>
      Свойство data позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Свойство <codeph>data</codeph> позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>При использовании элемента управления в качестве средства визуализации или редактора вставных элементов Flex автоматически записывает текущее значение элемента в свойство <codeph>selectedDate</codeph> этого элемента управления.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:dayNames:get"><apiName>dayNames</apiName><shortdesc>
      Названия дней недели для элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3626
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "S", "M", "T", "W", "T", "F", "S" ]
      </apiDefaultValue></apiValueDef><apiDesc>
      Названия дней недели для элемента управления DateChooser. Изменение этого свойства приводит к изменению меток дней в элементе управления DateChooser. Первым днем является воскресенье (с индексом 0). Остальные названия дней недели следуют в обычном порядке.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:disabledDays:get"><apiName>disabledDays</apiName><shortdesc>
      Дни недели, подлежащие деактивации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3627
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      </apiDefaultValue></apiValueDef><apiDesc>
      Дни недели, подлежащие деактивации. Деактивируются все даты в пределах месяца, соответствующие указанному дню. Это свойство незамедлительно изменяет пользовательский интерфейс элемента управления DateChooser. Элементы этого массива могут иметь значения от 0 (воскресенье) до 6 (суббота). Например, значение <codeph>[0, 6]</codeph> деактивирует воскресенье и субботу.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:disabledRanges:get"><apiName>disabledRanges</apiName><shortdesc>
      Позволяет деактивировать один или несколько дней.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3629
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      </apiDefaultValue></apiValueDef><apiDesc>
      Позволяет деактивировать один или несколько дней.
     
      <p>Это свойство принимает массив объектов в качестве параметра. Каждый объект в этом массиве является объектом Date, который указывает один день, подлежащий деактивации; или объектом, содержащим одно или оба свойства <codeph>rangeStart</codeph> и <codeph>rangeEnd</codeph>, каждое из значений которых представляет собой объект Date. Значение этих свойств указывает границы диапазона дат. Если любое из значений опущено, диапазон рассматривается как неограниченный в соответствующем направлении. Если определено только свойство <codeph>rangeStart</codeph>, деактивируются все даты после указанной даты, включая дату <codeph>rangeStart</codeph>. Если определено только свойство <codeph>rangeEnd</codeph>, деактивируются все даты, предшествующие указанной дате, включая дату <codeph>rangeEnd</codeph>. Для деактивации одного дня используется отдельный объект Date в массиве, который указывает определенную дату. Значения времени при наличии заполняются нулями из объекта Date.</p>
     
      <p>Например, требуется деактивировать следующие даты: 11 января 2006 г. в диапазоне от 23 января до 10 февраля 2006 г., а также 1 марта 2006 г. и все последующие даты.</p>
     
      <pre>disabledRanges="{[new Date(2006,0,11), {rangeStart:
      new Date(2006,0,23), rangeEnd: new Date(2006,1,10)},
      {rangeStart: new Date(2006,2,1)}]}"</pre>
     
      <p>При установке значения для этого свойства внешний вид элемента управления DateChooser незамедлительно изменяется, если деактивированные даты включены в свойства <codeph>displayedMonth</codeph> и <codeph>displayedYear</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:displayedMonth:get"><apiName>displayedMonth</apiName><shortdesc>
      Используется со свойством displayedYear. Свойство displayedMonth указывает месяц, отображаемый в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3624
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Используется со свойством <codeph>displayedYear</codeph>. Свойство <codeph>displayedMonth</codeph> указывает месяц, отображаемый в элементе управления DateChooser. Номера месяцев отсчитываются от нуля, таким образом, январь указывается как 0, а декабрь – как 11. При установке значения для этого свойства незамедлительно изменяется внешний вид элемента управления DateChooser. Значением по умолчанию является номер текущего месяца.
     
      <p>Значением по умолчанию является текущий месяц.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:displayedYear:get"><apiName>displayedYear</apiName><shortdesc>
      Используется со свойством displayedMonth. Свойство displayedYear определяет год, который отображается в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3625
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Используется со свойством <codeph>displayedMonth</codeph>. Свойство <codeph>displayedYear</codeph> определяет год, который отображается в элементе управления DateChooser. При установке значения для этого свойства незамедлительно изменяется внешний вид элемента управления DateChooser.
      
      <p>Значением по умолчанию является текущий год.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:dropdown:get"><apiName>dropdown</apiName><shortdesc>
      Содержит ссылку на элемент управления DateChooser, который содержится в элементе управления DateField.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls:DateChooser</apiValueClassifier></apiValueDef><apiDesc>
      Содержит ссылку на элемент управления DateChooser, который содержится в элементе управления DateField. Используемый класс можно определить с помощью <codeph>dropdownFactory</codeph> в том случае, если он расширяет <codeph>DateChooser</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:dropdownFactory:get"><apiName>dropdownFactory</apiName><shortdesc>
      IFactory для создания экземпляра на основе DateChooser с целью использования в качестве определителя даты. Значением по умолчанию для DateChooser является IFactory.
     
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      IFactory для создания экземпляра на основе DateChooser с целью использования в качестве определителя даты. Значением по умолчанию для DateChooser является IFactory.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:firstDayOfWeek:get"><apiName>firstDayOfWeek</apiName><shortdesc>
      День недели (от 0 до 6, где 0 является первым элементом массива dayNames), отображаемый в первом столбце элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3623
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>0 (Sunday)
      </apiDefaultValue></apiValueDef><apiDesc>
      День недели (от 0 до 6, где 0 является первым элементом массива dayNames), отображаемый в первом столбце элемента управления DateChooser. При установке значения для этого свойства изменяется порядок следования столбцов с названиями дней недели.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:formatString:get"><apiName>formatString</apiName><shortdesc>
      Формат отображаемой даты в текстовом поле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"MM/DD/YYYY"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Формат отображаемой даты в текстовом поле. Это свойство может содержать любое сочетание значений <codeph>ММ</codeph>, <codeph>DD</codeph>, <codeph>YY</codeph>, <codeph>YYYY</codeph>, а также разделители и символы пунктуации.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Функция для форматирования даты, отображаемой в текстовом поле элемента управления DateField.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3618
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Функция для форматирования даты, отображаемой в текстовом поле элемента управления DateField. Если функция не указана, используется формат по умолчанию.
      
      <p>Функция принимает в качестве аргумента объект Date и возвращает строку в указанном формате, как показано ниже:</p>
      <pre>
      public function formatDate(currentDate:Date):String {
          ...
          return dateString;
      }</pre>
     
      <p>Если пользователь может вводить дату в текстовое поле элемента управления DateField, а функция форматирования определена с помощью свойства <codeph>labelFunction</codeph>, необходимо указать функцию в свойстве <codeph>parseFunction</codeph>, которая преобразует входную текстовую строку в объект Date для использования элементом управления DateField, либо установить для свойства <codeph>parseFunction</codeph> значение null.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#DateField/parseFunction"><linktext>mx.controls.DateField.parseFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:listData:get"><apiName>listData</apiName><shortdesc>
      При использовании компонента в качестве средства визуализации вставных элементов или редактора вставных элементов Flex инициализирует свойство компонента listData соответствующими данными из элемента управления List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      При использовании компонента в качестве средства визуализации или редактора вставных элементов Flex инициализирует свойство компонента <codeph>listData</codeph> с соответствующими данными из элемента управления List. Затем компонент может использовать свойство <codeph>listData</codeph> для инициализации свойства <codeph>data</codeph> средства визуализации или редактора вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:maxYear:get"><apiName>maxYear</apiName><shortdesc>
      Последний год, который можно выбрать в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>2100
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Последний год, который можно выбрать в элементе управления.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:minYear:get"><apiName>minYear</apiName><shortdesc>
      Первый год, который можно выбрать в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1900
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Первый год, который можно выбрать в элементе управления.
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:monthNames:get"><apiName>monthNames</apiName><shortdesc>
      Имена месяцев, отображаемые в верхней области элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "January", "February", "March", "April", "May", "June", 
      "July", "August", "September", "October", "November", "December" ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имена месяцев, отображаемые в верхней области элемента управления. Свойство <codeph>monthSymbol</codeph> добавляется в конец значения, указанного свойством <codeph>monthNames</codeph>, которое рекомендуется использовать в таких языках, как японский.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:monthSymbol:get"><apiName>monthSymbol</apiName><shortdesc>
      Это свойство добавляется в конец значения, указанного свойством monthNames, для определения названий месяцев, отображаемых в верхней области элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Это свойство добавляется в конец значения, указанного свойством <codeph>monthNames</codeph>, для определения названий месяцев, отображаемых в верхней области элемента управления. В некоторых языках, например, в японском, после названия месяца используется специальный символ. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:parseFunction:get"><apiName>parseFunction</apiName><shortdesc>
      Функция, используемая для анализа даты, введенной в виде текста в области текстового поля элемента управления DateField, и возврата объекта Date в элемент управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Функция, используемая для анализа даты, введенной в виде текста в области текстового поля элемента управления DateField, и возврата объекта Date в элемент управления. Если функция не указана, Flex использует функцию по умолчанию. Если установлено соответствующее значение для свойства <codeph>parseFunction</codeph>, оно, как правило, выполняет функцию, обратную указанной в свойстве <codeph>labelFunction</codeph>.
      
      <p>Функция принимает два аргумента и возвращает объект Date в элемент управления DateField, например:</p>
      <pre>
      public function parseDate(valueString:String, inputFormat:String):Date {
          ...
          return newDate
      }</pre>
     
      <p>Здесь аргумент <codeph>valueString</codeph> содержит текстовую строку, введенную пользователем в текстовое поле, а аргумент <codeph>inputFormat</codeph> содержит формат строки. Так, если пользователь ограничен при вводе текстовой строки двумя символами для месяца, дня и года, то в аргумент <codeph>inputFormat</codeph> передается MM/DD/YY. </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#DateField/labelFunction"><linktext>mx.controls.DateField.labelFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateField:selectableRange:get"><apiName>selectableRange</apiName><shortdesc>
      Диапазон доступных для выбора дат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3628
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Диапазон доступных для выбора дат. Например, можно выбрать дату между 04-12-2006 и 04-12-2007, но даты вне этого диапазона для выбора недоступны.
     
      <p>Это свойство принимает объект в качестве параметра. Объект содержит два свойства типа Date: <codeph>rangeStart</codeph> и <codeph>rangeEnd</codeph>. Если указано только значение для <codeph>rangeStart</codeph>, будут активированы все даты после указанной даты. Если указано только значение для <codeph>rangeEnd</codeph>, будут активированы все даты до указанной даты. Для активации только одной даты в элементе управления DateChooser можно передать объект Date напрямую. Значения времени при наличии заполняются нулями из объекта Date.</p>
     
      <p>В следующем примере активирован только диапазон с 1 января 2006 года по 30 июня 2006 года. Месяцы до января и после июня не отображаются в DateChooser.</p>
     
      <pre>selectableRange="{{rangeStart : new Date(2006,0,1),
      rangeEnd : new Date(2006,5,30)}}"</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:selectedDate:get"><apiName>selectedDate</apiName><shortdesc>
      Дата, выбранная в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3630
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Дата, выбранная в элементе управления DateChooser. Использует в качестве параметра объект Date. Если входящий объект Date имеет значения времени, они заполняются нулями.
     
      <p>Нажатие клавиши Ctrl при выборе выделенной в данной момент даты приводит к снятию выделения, устанавливает свойство <codeph>selectedDate</codeph> в значение <codeph>null</codeph>, а затем отправляет событие <codeph>change</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:showToday:get"><apiName>showToday</apiName><shortdesc>
      Значение true указывает, что текущая дата выделена в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3622
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Значение <codeph>true</codeph> указывает, что текущая дата выделена в элементе управления DateChooser. При установке значения для этого свойства незамедлительно изменяется внешний вид элемента управления DateChooser.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:yearNavigationEnabled:get"><apiName>yearNavigationEnabled</apiName><shortdesc>
      Активирует навигацию по годам.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Активирует навигацию по годам. Если значение <codeph>true</codeph>, справа от года появляются кнопки для перехода вверх и вниз. Эти кнопки используются для изменения текущего года. В языках, в которых в формате даты год указывается перед месяцем, эти кнопки отображаются слева от года.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateField:yearSymbol:get"><apiName>yearSymbol</apiName><shortdesc>
      Это свойство добавляется в конец года, отображаемого в верхней области элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Это свойство добавляется в конец года, отображаемого в верхней области элемента управления. В некоторых языках, например, в японском, после года добавляется еще один символ. 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ColorPicker"><apiName>ColorPicker</apiName><shortdesc>
  Элемент управления ColorPicker позволяет пользователю выбрать цвет из списка образцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="highlightAlphas"/><Exclude kind="style" name="fillColors"/><Exclude kind="style" name="fillAlphas"/><Exclude kind="property" name="text"/><styles><style inherit="no" name="swatchPanelStyleName" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Имя селектора класса, определяющего свойства стиля для панели образцов. По умолчанию используется значение <codeph>undefined</codeph>. В следующем примере представлены свойства стиля по умолчанию, определяемые посредством <codeph>swatchPanelStyleName</codeph>. 
  <pre>
  ColorPicker {
      swatchPanelStyleName:mySwatchPanelStyle;
  }
  
  .mySwatchPanelStyle {
      backgroundColor:#E5E6E7;
      columnCount:20;
      horizontalGap:0;
      previewHeight:22;
      previewWidth:45;
      swatchGridBackgroundColor:#000000;
      swatchGridBorderSize:0;
      swatchHeight:12;
      swatchHighlightColor:#FFFFFF;
      swatchHighlightSize:1;
      swatchWidth:12;
      textFieldWidth:72;
      verticalGap:0;
  }
  </pre>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="swatchBorderSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Размер контуров границ образцов. Значением по умолчанию является 1.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="swatchBorderColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет границ образцов. Значением по умолчанию является <codeph>0x000000</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Заполнение сверху для объекта SwatchPanel над сеткой образцов. Значением по умолчанию является 4.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Заполнение справа для объекта SwatchPanel до боковой стороны сетки образцов. Значением по умолчанию является 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Заполнение слева для объекта SwatchPanel до боковой стороны сетки образцов. Значением по умолчанию является 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Заполнение снизу для объекта SwatchPanel под сеткой образцов. Значением по умолчанию является 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Function">
<description>
  Функция замедления для управления анимацией компонентов. По умолчанию используется значение <codeph>undefined</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Длина открытого перехода в миллисекундах.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Цвета, используемые для определения оттенка заливки фона элемента управления. Для получения плоского вида для обоих значений устанавливается один и тот же цвет. Значением по умолчанию является <codeph>[0xFFFFFF, 0xCCCCCC]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-каналы, используемые для заливки фона элементов управления. Значением по умолчанию является <codeph>[0.6, 0.4]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Function">
<description>
  Функция замедления для управления анимацией компонентов. По умолчанию используется значение <codeph>undefined</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Длина закрытого перехода в миллисекундах.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет внешней границы объекта SwatchPanel. Значением по умолчанию является <codeph>0xA5A9AE</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ColorPicker" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:ColorPicker" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:ColorPicker" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ColorPicker&gt;</code> tag inherits all of the properties of its
  superclass, and the following properties:</p>
 
  <pre>
  &lt;mx:ColorPicker
    <b>Properties</b>
    colorField="color"
    labelField="label"
    selectedColor="0x000000"
    selectedIndex="0"
    showTextField="true|false"
 
    <b>Styles</b>
    borderColor="0xA5A9AE"
    closeDuration="250"
    closeEasingFunction="undefined"
    color="0x0B333C"
    disabledIconColor="0x999999"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontfamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0""
    fontSize="10"
    fontStyle="normal"
    fontThickness="0"
    fontWeight="normal"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x000000"
    leading="2"
    openDuration="250"
    openEasingFunction="undefined"
    paddingBottom="5"
    paddingLeft="5"
    paddingRight="5"
    paddingTop="4"
    swatchBorderColor="0x000000"
    swatchBorderSize="1"
    swatchPanelStyleName="undefined"
    textAlign="left"
    textDecoration="none"
    textIndent="0"
 
    <b>Events</b>
    change="<i>No default</i>"
    close="<i>No default</i>"
    enter="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
    open="<i>No default</i>"
    /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ColorPicker позволяет пользователю выбрать цвет из списка образцов. В режиме компонента по умолчанию отображается один образец в квадратной кнопке. При нажатии пользователем кнопки-образца появляется панель с полным списком образцов.
 
  <p>Элемент управления ColorPicker имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>ColorPicker: панель образцов 22 на 22 пикселей: размер по ширине элемента управления ColorPicker</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 на 0 пикселей</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не определен</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ColorPickerExample.mxml"><swfblock conref="examples/ColorPickerExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><adobeApiEvent id="mx.controls:ColorPicker_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Передается при открытии панели образцов цветов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4920
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при открытии панели образцов цветов.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Передается при наведении курсора мыши на образец в объекте SwatchPanel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4923
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при наведении курсора мыши на образец в объекте SwatchPanel.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Передается при снятии курсора мыши с образца в объекте SwatchPanel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4924
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при снятии курсора мыши с образца в объекте SwatchPanel.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  Передается в случае, если для изменяемого свойства ColorPicker установлено значение true при нажатии пользователем клавиши Enter после ввода шестнадцатеричного значения цвета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4919
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается в случае, если для <codeph>изменяемого</codeph> свойства ColorPicker установлено значение <codeph>true</codeph> при нажатии пользователем клавиши Enter после ввода шестнадцатеричного значения цвета.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Передается при закрытии панели образцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4921
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при закрытии панели образцов.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ColorPicker_mx.events.ColorPickerEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении выбранного цвета в результате действий пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4918
  
  </helpid></asCustoms></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ColorPickerEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ColorPickerEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении выбранного цвета в результате действий пользователя.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ColorPicker:ColorPicker"><apiName>ColorPicker</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ColorPicker:close"><apiName>close</apiName><shortdesc>
      Скрывает раскрывающийся объект SwatchPanel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4926
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>trigger</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
      Скрывает раскрывающийся объект SwatchPanel.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ColorPicker:open"><apiName>open</apiName><shortdesc>
      Отображает раскрывающийся объект SwatchPanel, который представляет доступные для выбора пользователем цвета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4925
      
      </helpid></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Отображает раскрывающийся объект SwatchPanel, который представляет доступные для выбора пользователем цвета.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ColorPicker:colorField:get"><apiName>colorField</apiName><shortdesc>
      Имя поля в объектах массивов dataProvider, которое указывает шестнадцатеричные значения цветов, отображаемые на панели образцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4927
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"color"
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в объектах массивов dataProvider, которое указывает шестнадцатеричные значения цветов, отображаемые на панели образцов.
     
      <p>Если объекты dataProvider не содержат поле цвета, настройте свойство <codeph>colorField</codeph> для использования корректного имени поля. Это свойство доступно, но не является значимым, если dataProvider представляет собой массив шестнадцатеричных значений цветов.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:labelField:get"><apiName>labelField</apiName><shortdesc>
      Имя поля в объектах массива dataProvider, которое содержит текст для отображения в качестве метки в текстовом поле объекта SwatchPanel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4928
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в объектах массива dataProvider, которое содержит текст для отображения в качестве метки в текстовом поле объекта SwatchPanel.
     
      <p>Если объекты dataProvider не содержат поле метки, установите свойство <codeph>labelField</codeph> для использования корректного имени поля. Это свойство доступно, но не является значимым, если dataProvider представляет собой массив шестнадцатеричных значений цветов.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:selectedColor:get"><apiName>selectedColor</apiName><shortdesc>
      Значение выбранного в настоящий момент цвета в объекте SwatchPanel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4932
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
      Значение выбранного в настоящий момент цвета в объекте SwatchPanel. Только в теге &lt;mx:ColorPicker> можно установить это свойство для имени цвета в виде стандартной строки, например, blue. Если dataProvider содержит значение для черного цвета (0x000000), то значением по умолчанию является 0; в противном случае значением по умолчанию является цвет элемента с индексом поставщика данных 0.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:showTextField:get"><apiName>showTextField</apiName><shortdesc>
      Указывает, требуется ли показывать текстовое поле, в котором отображается метка цвета или шестнадцатеричное значение цвета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, требуется ли показывать текстовое поле, в котором отображается метка цвета или шестнадцатеричное значение цвета.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ColorPicker:protected:swatchStyleFilters:get"><apiName>swatchStyleFilters</apiName><shortdesc>
      Набор стилей для передачи от ColorPicker образцу предварительного просмотра.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи от ColorPicker образцу предварительного просмотра. 
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ColorPicker:selectedIndex:set"><apiName>selectedIndex</apiName><shortdesc>
      Индекс в dataProvider выбранного элемента в объекте SwatchPanel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>4931
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Индекс в dataProvider выбранного элемента в объекте SwatchPanel. Установка данного свойства определяет выбранный цвет для цвета, который соответствует индексу, устанавливает для указанного индекса в раскрывающемся образце значение свойства <codeph>selectedIndex</codeph>, и отображает связанную метку в текстовом поле. Значением по умолчанию является индекс, соответствующий черному цвету (0x000000) при наличии, в противном случае – 0.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:SWFLoader"><apiName>SWFLoader</apiName><shortdesc>
  Элемент управления SWFLoader загружает и отображает указанный файл SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="baseColor"/><effects><effect event="complete" name="completeEffect" owner="mx.controls:SWFLoader">
<description>
  Эффект, который воспроизводится при передаче события complete.
  
  </description>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><styles><style enumeration="bottom,middle,top" inherit="no" name="verticalAlign" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="String">
<description>
  Вертикальное выравнивание содержимого без использования пропорции «один к одному». Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>.
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="String">
<description>
  Горизонтальное выравнивание содержимого без использования пропорции «один к одному». Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="brokenImageSkin" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="Class">
<description>
  Имя класса для использования в качестве темы оформления SWFLoader, если элементу управления не удается загрузить содержимое. Значением по умолчанию является символ «__ brokenImage» в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="brokenImageBorderSkin" owner="mx.controls:SWFLoader" playerVersion="Flash9" type="Class">
<description>
  Имя класса для использования в качестве темы оформления границы SWFLoader в случае, если элементу управления не удается загрузить содержимое.
  </description>
<default>BrokenImageBorderSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The &lt;mx:SWFLoader&gt; tag inherits all of the tag attributes
  of its superclass and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:SWFLoader
    <strong>Properties</strong>
    autoLoad="true|false"
    loadForCompatibility="false|true"
    loaderContext="null"
    maintainAspectRatio="true|false"
    scaleContent="true|false"
    showBusyCursor="false|true"
    source="<i>No default</i>"
    trustContent="false|true"
  
    <strong>Styles</strong>
    brokenImageBorderSkin="BrokenImageBorderSkin"
    brokenImageSkin="<i>'__brokenImage' symbol in Assets.swf</i>"
    horizontalAlign="left|center|right"
    verticalAlign="top|middle|bottom"
  
    <strong>Effects</strong>
    completeEffect="<i>No default</i>"
    
    <strong>Events</strong>
    complete="<i>No default</i>"
    httpStatus="<i>No default</i>"
    init="<i>No default</i>"
    ioError="<i>No default</i>"
    open="<i>No default</i>"
    progress="<i>No default</i>"
    securityError="<i>No default</i>"
    unload="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:ISWFLoader</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления SWFLoader загружает и отображает указанный файл SWF. SWFLoader используется, как правило, для загрузки одного приложения Flex в приложение Flex хоста.
 
  <p><b>Примечание.</b> Элемент управления SWFLoader можно использовать для динамической загрузки файлов изображений GIF, JPEG или PNG, динамической загрузки ByteArray, представляющего файл SWF, GIF, JPEG или PNG, либо для загрузки встроенной версии любых файлов этих типов и файлов SVG в процессе компиляции посредством установки <codeph>@Embed(source="filename")</codeph>. Однако для выполнения этой функции более целесообразно использовать элемент управления Image. Именно этот элемент управления следует использовать для загрузки большинства изображений. Элемент управления Image также предназначен для применения в пользовательских средствах визуализации и редакторах элементов. При использовании элементов управления SWFLoader или Image файл SVG можно загрузить только в том случае, если он встроен в приложение с помощью оператора Embed; динамически загрузить SVG из сети невозможно.</p>
 
  <p>Содержимое элемента управления SWFLoader можно масштабировать и определять его размеры. Этот элемент управления также может автоматически изменять свой размер в соответствии с объемом содержимого. По умолчанию содержимое масштабируется по размеру элемента управления SWFLoader. Он также позволяет загрузить содержимое по программному запросу и контролировать прогресс выполнения загрузки.</p>  
 
  <p>Элемент управления SWFLoader не может получить фокус. Однако содержимое элемента управления SWFLoader может принимать фокус и выполнять собственные действия с фокусом.</p>
 
  <p>Элемент управления SWFLoader имеет следующие характеристики по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина и высота, достаточные для включения загруженного содержимого.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не определен</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="local.mxml"/><example conref="SimpleLoader.mxml"><swfblock conref="examples/SimpleLoader.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Image"><linktext>mx.controls.Image</linktext></link></related-links><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.UNLOAD_unload"><apiName>unload</apiName><shortdesc>
  Передается при удалении загруженного объекта или выполнении второй загрузки тем же элементом управления SWFLoader с удалением исходного содержимого перед началом новой загрузки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.UNLOAD</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при удалении загруженного объекта или выполнении второй загрузки тем же элементом управления SWFLoader с удалением исходного содержимого перед началом новой загрузки.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError"><apiName>securityError</apiName><shortdesc>
  Передается при появлении ошибки безопасности во время загрузки содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier>flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при появлении ошибки безопасности во время загрузки содержимого. Для получения дополнительной информации см. описание класса SecurityErrorEvent.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Передается во время загрузки содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается во время загрузки содержимого.
 
  <p>Это событие передается независимо от способа инициирования загрузки: процессом автоматической загрузки или путем явного вызова метода <codeph>load()</codeph>.</p>
 
  <p><b>Примечание.</b> Передача события <codeph>progress</codeph> не является обязательной. Событие <codeph>complete</codeph> может быть получено без передачи события <codeph>progress</codeph>. Это возможно в том случае, если загружаемое содержимое является локальным файлом.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.OPEN_open"><apiName>open</apiName><shortdesc>
  Передается при запуске сетевой операции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при запуске сетевой операции.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.IOErrorEvent.IO_ERROR_ioError"><apiName>ioError</apiName><shortdesc>
  Передается при возникновении ошибки ввода/вывода.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier>flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при возникновении ошибки ввода/вывода.
  </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="flash.events.IOErrorEvent.xml"><linktext>flash.events.IOErrorEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.INIT_init"><apiName>init</apiName><shortdesc>
  Передается в случае, если становятся доступны свойства и методы загруженного файла SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.INIT</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается в случае, если становятся доступны свойства и методы загруженного файла SWF. Для передачи этого события необходимо выполнение двух условий:
 
  <ul>
    <li>Доступны все свойства и методы, связанные с загруженным объектом и элементом управления.</li>
    <li>Завершена работа конструкторов для всех нижестоящих объектов.</li>
  </ul>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus"><apiName>httpStatus</apiName><shortdesc>
  Передается при сетевом запросе по HTTP, если Flash Player или AIR могут определить код состояния HTTP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier>flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при сетевом запросе по HTTP, если Flash Player или AIR могут определить код состояния HTTP.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:SWFLoader_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  Передается после завершения загрузки содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается после завершения загрузки содержимого.
 
  <p>Это событие передается независимо от способа инициирования загрузки: процессом автоматической загрузки или путем явного вызова метода <codeph>load()</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:SWFLoader:SWFLoader"><apiName>SWFLoader</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:SWFLoader:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      Обработчик по умолчанию для события MouseEvent.CLICK.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>объект события.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обработчик по умолчанию для события <codeph>MouseEvent.CLICK</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:getVisibleApplicationRect"><apiName>getVisibleApplicationRect</apiName><shortdesc>
      
      Получает пределы загруженного приложения, видимые пользователем на экране.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>Rectangle</codeph>, который включает видимую часть этого объекта. Этот прямоугольник находится в глобальных координатах.
      
      </apiDesc><apiType value="flash.geom:Rectangle"/></apiReturn><apiParam><apiItemName>allApplications</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет способ вычисления видимого прямоугольника: только на основе объектов отображения в этом приложении или с помощью всех вышестоящих приложений. Включение большего количества вышестоящих приложений может вызвать сокращение возвращаемой видимой области. Если значение равно <codeph>true</codeph>, для поиска видимой области используются все приложения. В противном случае используются только экранные объекты в этом приложении.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Получает пределы загруженного приложения, видимые пользователем на экране.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:load"><apiName>load</apiName><shortdesc>
      Загружает изображение или файл SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Абсолютный или относительный URL-адрес файла GIF, JPEG, PNG или SWF, который требуется загрузить.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Загружает изображение или файл SWF. Аргумент <codeph>url</codeph> может иметь ссылку на файл GIF, JPEG, PNG или SWF. Для загрузки файла SVG этот метод не предназначен. Такой файл можно загрузить посредством оператора Embed со свойством <codeph>source</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:SWFLoader:unloadAndStop"><apiName>unloadAndStop</apiName><shortdesc>
      Выгружает изображение или файл SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>invokeGarbageCollector</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc> Предоставляет инструкции для сборщика мусора относительно того, требуется (<codeph>true</codeph>) или не требуется (<codeph>false</codeph>) выполнять действия в нижестоящих объектах SWF. При асинхронной выгрузке большого количества объектов установка для параметра <codeph>gc</codeph> значения <codeph>false</codeph> позволяет увеличить производительность приложения. Однако если для этого параметра установлено значение <codeph>false</codeph>, мультимедийные и экранные объекты нижестоящего файла SWF могут сохраняться в памяти после выгрузки нижестоящего SWF.  
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Выгружает изображение или файл SWF. После возврата метода свойство <codeph>source</codeph> будет иметь значение null. Этот вариант поддерживается только в том случае, если на хосте установлен Flash Player с версией 10 или выше. Если на хосте установлен Flash Player с версией ниже 10, то этот метод будет выполнять выгрузку содержимого так же, как и при установке значения null для свойства <codeph>source</codeph>. Этот метод выполняет попытку выгрузить файлы SWF путем удаления ссылок на объекты EventDispatcher, NetConnection, Timer, Sound или Video нижестоящего файла SWF. В результате для нижестоящего файла SWF и его списка отображения выполняются следующие действия: 
      <ul>
      <li>Останавливается воспроизведение звука.</li>
      <li>Удаляются прослушиватели событий рабочей области.</li>
      <li>Удаляются прослушиватели событий <codeph>enterFrame</codeph>, <codeph>frameConstructed</codeph>, <codeph>exitFrame</codeph>, <codeph>activate</codeph> и <codeph>deactivate</codeph>.</li>
      <li>Останавливаются таймеры.</li>
      <li>Отсоединяются экземпляры Camera и Microphone.</li>
      <li>Прекращается воспроизведение видеороликов.</li>
      </ul>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:SWFLoader:autoLoad:get"><apiName>autoLoad</apiName><shortdesc>
      Флаг, который указывает, начинается ли загрузка содержимого автоматически или после вызова метода load().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, который указывает, начинается ли загрузка содержимого автоматически или после вызова метода <codeph>load()</codeph>. Если значение равно <codeph>true</codeph>, содержимое загружается автоматически. Если значение равно <codeph>false</codeph>, необходимо вызвать метод <codeph>load()</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
      Число загруженных байтов файла SWF или файла изображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Число загруженных байтов файла SWF или файла изображения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
      Полный размер файла SWF или файла изображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Полный размер файла SWF или файла изображения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:childAllowsParent:get"><apiName>childAllowsParent</apiName><shortdesc>
     
      Проверяет, позволяет ли нижестоящий элемент вышестоящему получать доступ к его объектам отображения или прослушивать сообщения, исходящие от нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     
      Проверяет, позволяет ли нижестоящий элемент вышестоящему получать доступ к его экранным объектам или прослушивать сообщения, исходящие от нижестоящего элемента. <codeph>true</codeph> если доступ разрешен, в противном случае <codeph>false</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:content:get"><apiName>content</apiName><shortdesc>
      Это свойство содержит объект, который представляет содержимое, загруженное в элементе управления SWFLoader.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3134
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/><apiTipTexts><apiTipText>Возвращает содержимое SWFLoader.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Это свойство содержит объект, который представляет содержимое, загруженное в элементе управления SWFLoader. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
      Высота масштабируемого содержимого, загруженного элементом управления, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Высота масштабируемого содержимого, загруженного элементом управления, в пикселях. Учтите, что это не высота элемента управления, а высота загруженного содержимого. Для определения высоты элемента управления используется соответствующее свойство <codeph>height</codeph>.
     
      <p>Значение этого свойства не является окончательным при инициировании события <codeph>complete</codeph>. Это значение можно получить после инициирования события <codeph>updateComplete</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
      Ширина масштабируемого содержимого, загруженного элементом управления, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ширина масштабируемого содержимого, загруженного элементом управления, в пикселях. Учтите, что это не ширина элемента управления, а ширина загруженного содержимого. Для определения ширины элемента управления используется соответствующее свойство <codeph>width</codeph>.
     
      <p>Значение этого свойства не является окончательным при инициировании события <codeph>complete</codeph>. Это значение можно получить после инициирования события <codeph>updateComplete</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:loadForCompatibility:get"><apiName>loadForCompatibility</apiName><shortdesc>
      Флаг, который указывает, загружено ли содержимое для его использования приложениями, созданными другой версией компилятора Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, который указывает, загружено ли содержимое для его использования приложениями, созданными другой версией компилятора Flex. Совместимость с другими приложениями Flex обеспечивается путем загрузки приложения в одноуровневый (одноранговый) элемент ApplicationDomain. Этот флаг игнорируется в том случае, если требуется загрузить содержимое в другой SecurityDomain. Если значение равно <codeph>true</codeph>, содержимое загружается в одноуровневый элемент ApplicationDomain. Если значение равно <codeph>false</codeph>, содержимое загружается в нижестоящий элемент ApplicationDomain.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:loaderContext:get"><apiName>loaderContext</apiName><shortdesc>
      Объект LoaderContext для управления загрузкой содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.system:LoaderContext"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект LoaderContext для управления загрузкой содержимого. Это расширенное свойство. В большинстве случаев можно использовать свойство <codeph>trustContent</codeph>.
     
      <p>Значением по умолчанию является <codeph>null</codeph>. При этом элемент управления использует свойство <codeph>trustContent</codeph> для создания объекта LoaderContext, который можно считать после запуска загрузки.</p>
     
      <p>Для использования пользовательского объекта LoaderContext необходимо ознакомиться с описанием классов SecurityDomain и ApplicationDomain. Установка этого свойства не инициирует запуск загрузки; значение этого свойства необходимо определить до начала загрузки. Это не означает, что необходимо установить для свойства <codeph>autoLoad</codeph> значение <codeph>false</codeph>, поскольку загрузка не начинается немедленно, а ожидает событие <codeph>creationComplete</codeph> для установки опоздания.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.LoaderContext.xml"><linktext>flash.system.LoaderContext</linktext></link><link href="" invalidHref="flash.system.ApplicationDomain.xml"><linktext>flash.system.ApplicationDomain</linktext></link><link href="" invalidHref="flash.system.SecurityDomain.xml"><linktext>flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="mx.controls:SWFLoader:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      Флаг, который указывает, требуется ли сохранять пропорции загруженного содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, который указывает, требуется ли сохранять пропорции загруженного содержимого. Если значение равно <codeph>true</codeph>, изображение будет показано с теми же пропорциями высоты и ширины, что и у исходного изображения.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:parentAllowsChild:get"><apiName>parentAllowsChild</apiName><shortdesc>
     
      Проверяет, позволяет ли вышестоящий элемент нижестоящему получать доступ к его объектам отображения или прослушивать сообщения, которые исходят от вышестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
     
      Проверяет, позволяет ли вышестоящий элемент нижестоящему получать доступ к его экранным объектам или прослушивать сообщения, которые исходят от вышестоящего элемента. <codeph>true</codeph> если доступ разрешен, в противном случае <codeph>false</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:percentLoaded:get"><apiName>percentLoaded</apiName><shortdesc>
      Загруженный объем файла изображения или файла SWF в процентном выражении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Загруженный объем файла изображения или файла SWF в процентном выражении.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:scaleContent:get"><apiName>scaleContent</apiName><shortdesc>
      Флаг, который указывает, требуется ли масштабировать содержимое по размеру элемента управления или изменить размеры элемента управления в соответствии с объемом содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, который указывает, требуется ли масштабировать содержимое по размеру элемента управления или изменить размеры элемента управления в соответствии с объемом содержимого. Если значение равно <codeph>true</codeph>, содержимое масштабируется по размеру элемента управления SWFLoader. Если значение равно <codeph>false</codeph>, SWFLoader масштабируется по размеру содержимого. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:showBusyCursor:get"><apiName>showBusyCursor</apiName><shortdesc>
      Флаг, который указывает, требуется ли отображать курсор в состоянии занятости во время загрузки содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, который указывает, требуется ли отображать курсор в состоянии занятости во время загрузки содержимого. Если значение равно <codeph>true</codeph>, во время загрузки содержимого будет отображаться курсор в состоянии занятости. По умолчанию курсором в состоянии занятости является mx.skins.halo.BusyCursor, что определяется свойством <codeph>busyCursor</codeph> класса CursorManager.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.managers.xml#CursorManager"><linktext>mx.managers.CursorManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:SWFLoader:smoothBitmapContent:get"><apiName>smoothBitmapContent</apiName><shortdesc>
      Флаг, определяющий необходимость сглаживания содержимого при масштабировании.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, определяющий необходимость сглаживания содержимого при масштабировании. Сглаживание возможно, только если содержимое является растровым изображением. Если значение <codeph>true</codeph> и содержимое имеет вид растрового изображения, свойство сглаживания содержимого установлено на <codeph>true</codeph>. Если значение <codeph>false</codeph>, то содержимое не будет сглаживаться. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:source:get"><apiName>source</apiName><shortdesc>
      URL-адрес, объект, класс или имя строки класса для загрузки в качестве содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      URL-адрес, объект, класс или имя строки класса для загрузки в качестве содержимого. Свойство <codeph>source</codeph> принимает следующую форму:
     
      <p><pre>
      <codeph>source="<i>URLOrPathOrClass</i>"</codeph></pre></p>
     
      <p><pre>
      <codeph>source="@Embed(source='<i>PathOrClass</i>')"</codeph></pre></p>
     
      <p>Значение свойства <codeph>source</codeph> представляет собой относительный или абсолютный URL-адрес, ByteArray, представляющий файл SWF, GIF, JPEG или PNG, строку, представляющую класс, а также объект, который реализует IFlexDisplayObject, либо класс, тип которого реализует IFlexDisplayObject. </p> 
     
      <p>Если указан путь к файлу SWF, GIF, JPEG, PNG или SVG, Flex автоматически преобразует файл в правильный тип данных для использования с элементом управления SWFLoader.</p> 
     
      <p>Если оператор Embed не указан, Flex загружает заданный файл динамически без упаковки в созданный файл SWF. Во время выполнения свойство <codeph>source</codeph> поддерживает загрузку только файлов в формате GIF, JPEG, PNG и SWF.</p>
     
      <p>Пользователи Flex Data Services могут применять элемент управления SWFLoader для загрузки приложения Flex с помощью следующей формы:</p>
     
      <p><pre>
      <codeph>source="<i>MXMLPath</i>.mxml.swf"</codeph></pre></p>
     
      <p>Flex Data Services компилирует файл MXML и возвращает в главное приложение файл SWF. Этот способ эффективен с файлами SWF, которые добавляют в приложение графику или анимацию, но не предназначены для реагирования на большое количество действий пользователя. При импорте файлов SWF, для которых требуется выполнение большого количества действий пользователем, эти файлы необходимо создать как пользовательские компоненты. </p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:swfBridge:get"><apiName>swfBridge</apiName><shortdesc>
     
      Соединение с приложением, связанным со средством реализации данного интерфейса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.events:IEventDispatcher"/></apiValueDef><apiDesc>
     
      Соединение с приложением, связанным со средством реализации данного интерфейса. С помощью IEventDispatcher можно передавать события в приложение другого домена ApplicationDomain или другой изолированной среды.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:SWFLoader:trustContent:get"><apiName>trustContent</apiName><shortdesc>
      Если значение равно true, содержимое загружается в домен безопасности.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, содержимое загружается в домен безопасности. Это означает, что загрузка завершается с ошибкой в том случае, если содержимое оказывается в другом домене, в котором отсутствует файл crossdomain.xml, обеспечивающий доступ к содержимому для домена пользователя. Это свойство влияет только на следующую загрузку, оно не инициирует новую загрузку для уже загруженного содержимого.
     
      <p>Значением по умолчанию является <codeph>false</codeph>. Это означает загрузку любого содержимого без ошибок, однако при этом доступ к содержимому отсутствует. Важно, что для загруженного содержимого отсутствует доступ к объектам и коду, что является наиболее безопасным сценарием. Устанавливать для этого свойства значение <codeph>true</codeph> можно только при абсолютной уверенности в безопасности загруженного содержимого, особенно в отношении активного содержимого, например, файлов SWF.</p>
     
      <p>Кроме того, с помощью свойства <codeph>loaderContext</codeph> можно точно определить способ загрузки содержимого, если установка свойства <codeph>trustContent</codeph> не соответствует конкретным требованиям. При использовании свойства <codeph>loaderContext</codeph> SWFLoader игнорирует значение свойства <codeph>trustContent</codeph>. Однако перед использованием свойства <codeph>loaderContext</codeph> необходимо ознакомиться с описанием классов SecurityDomain и ApplicationDomain.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.SecurityDomain.xml"><linktext>flash.system.SecurityDomain</linktext></link><link href="" invalidHref="flash.system.ApplicationDomain.xml"><linktext>flash.system.ApplicationDomain</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:NavBar"><apiName>NavBar</apiName><shortdesc>
  Элемент управления NavBar является суперклассом для элементов управления навигатора, например, LinkBar и TabBar. Этот элемент управления не может быть реализован напрямую.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="label"/><Exclude kind="property" name="icon"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Exclude kind="property" name="defaultButton"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code><mx:NavBar></code> tag inherits all of the tag attributes
  of its superclass, with the exception of scrolling-related
  attributes, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:<i>tagname</i>
    <strong>Properties</strong>
    dataProvider="<i>No default</i>"
    iconField="icon"
    labeField="label"
    selectedIndex="-1"
    toolTipField="toolTip"
     
    <strong>Events</strong>
    itemClick="<i>No default</i>"
    &gt;
     ...
       <i>child tags</i>
     ...
    &lt;/mx:<i>tagname</i>&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.containers:Box</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления NavBar является суперклассом для элементов управления навигатора, например, LinkBar и TabBar. Этот элемент управления не может быть реализован напрямую.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.collections.xml#IList"><linktext>mx.collections.IList</linktext></link><link href="mx.containers.xml#ViewStack"><linktext>mx.containers.ViewStack</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link><link href="mx.controls.xml#TabBar"><linktext>mx.controls.TabBar</linktext></link><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link></related-links><adobeApiEvent id="mx.controls:NavBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается при выборе элемента навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе элемента навигации.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:NavBar:NavBar"><apiName>NavBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:NavBar:protected:clickHandler"><apiName>clickHandler</apiName><shortdesc>
      Обрабатывает события MouseEvent.CLICK для элементов в элементе управления NavBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:MouseEvent"/><apiDesc>Объект события.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события <codeph>MouseEvent.CLICK</codeph> для элементов в элементе управления NavBar. Этот обработчик передает событие <codeph>itemClick</codeph> для элемента управления NavBar.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:createNavItem"><apiName>createNavItem</apiName><shortdesc>
      Создает отдельные элементы навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Созданный элемент навигации.
      
      </apiDesc><apiOperationClassifier>mx.core:IFlexDisplayObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>Метка для созданного элемента навигации. 
     
      </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiData>null</apiData><apiDesc>Значок для созданного элемента навигации. Как правило, это значок, встроенный в приложение.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Создает отдельные элементы навигации. По умолчанию этот метод не выполняет каких-либо действий. Этот метод можно отменить в подклассе для создания элемента навигации на основе типа элементов навигации в подклассе.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:hiliteSelectedNavItem"><apiName>hiliteSelectedNavItem</apiName><shortdesc>
      Выделяет выбранный элемент навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс выбранного элемента в элементе управления NavBar. Первому элементу соответствует индекс 0.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Выделяет выбранный элемент навигации. По умолчанию этот метод не выполняет каких-либо действий. Этот метод можно отменить в подклассе для выделения выбранного элемента навигации.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Возвращает строку, которая отображается средством визуализации для указанного объекта данных в зависимости от свойств labelField и labelFunction.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Строка, отображаемая в зависимости от данных.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Объект, который должен быть визуализирован.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает строку, которая отображается средством визуализации для указанного объекта данных в зависимости от свойств labelField и labelFunction. Если методу не удается преобразовать параметр в строку, то метод возвращает один пробел.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:resetNavItems"><apiName>resetNavItems</apiName><shortdesc>
      Устанавливает для панели навигации состояние по умолчанию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Устанавливает для панели навигации состояние по умолчанию. По умолчанию этот метод не выполняет каких-либо действий. Этот метод можно отменить в подклассе для сброса состояния панели навигации до состояния по умолчанию.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:updateNavItemIcon"><apiName>updateNavItemIcon</apiName><shortdesc>
      Сбрасывает значок элемента навигации в элементе управления NavBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс элемента навигации в элементе управления NavBar. Первому элементу навигации соответствует индекс 0.
     
      </apiDesc></apiParam><apiParam><apiItemName>icon</apiItemName><apiType value="Class"/><apiDesc>Новый значок для элемента навигации. Как правило, это значок, встроенный в приложение.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Сбрасывает значок элемента навигации в элементе управления NavBar. Этот метод можно отменить в подклассе для установки значка элемента навигации на основе типа элементов навигации в подклассе.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:NavBar:protected:updateNavItemLabel"><apiName>updateNavItemLabel</apiName><shortdesc>
      Устанавливает свойство label для элемента навигации в элементе управления NavBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс элемента навигации в элементе управления NavBar. Первому элементу навигации соответствует индекс 0.
     
      </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>Новый текст метки для элемента навигации. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает свойство label для элемента навигации в элементе управления NavBar. Этот метод можно отменить в подклассе для установки метки элемента навигации на основе типа элементов навигации в подклассе.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:NavBar:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Данные для заполнения элемента управления навигатора.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Данные для заполнения элемента управления навигатора. Тип данных может относиться к контейнеру ViewStack или массиву.
     
      <p>При использовании контейнера ViewStack для заполнения элементов навигации применяются свойства <codeph>label</codeph> и <codeph>icon</codeph> нижестоящих элементов контейнера ViewStack, например:</p>
     
      <pre>
      &lt;mx:LinkBar dataProvider="{vs}"/>
      &lt;mx:ViewStack id="vs">
        &lt;mx:VBox label="Accounts" icon="account_icon"/>
        &lt;mx:VBox label="Leads" icon="leads_icon"/>
      &lt;/mx:ViewStack> </pre>
      
      <p>Элемент управления LinkBar содержит две ссылки: «Учетные записи» и «Руководители», каждая из которых имеет собственный значок, определенный в тегах VBox. При переходе по ссылке контейнер ViewStack перемещается в соответствующее представление.</p>
     
      <p>При использовании массива свойство <codeph>labelField</codeph> определяет имя поля <codeph>dataProvider</codeph> для использования в качестве метки для каждого элемента навигации; свойство <codeph>iconField</codeph> определяет имя поля <codeph>dataProvider</codeph> для использования в качестве значка для каждого элемента навигации. При использовании массива строк свойство <codeph>labelField</codeph> игнорируется.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:iconField:get"><apiName>iconField</apiName><shortdesc>
      Имя поля в объекте dataProvider для отображения в виде значка для каждого элемента навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в объекте <codeph>dataProvider</codeph> для отображения в виде значка для каждого элемента навигации. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:labelField:get"><apiName>labelField</apiName><shortdesc>
      Имя поля в объекте dataProvider для отображения в виде метки для каждого элемента навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в объекте <codeph>dataProvider</codeph> для отображения в виде метки для каждого элемента навигации. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Предоставленная пользователем функция, выполняемая для каждого элемента с целью определения его метки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Предоставленная пользователем функция, выполняемая для каждого элемента с целью определения его метки. По умолчанию компонент выполняет поиск свойства <codeph>label</codeph> в каждом элементе поставщика данных, а затем отображает его. Однако некоторые наборы данных не имеют свойство <codeph>label</codeph> или другое свойство, которое может быть использовано для отображения. Например, набор данных, имеющий поля lastName и firstName, в то время как требуется отобразить полные имена.
     
      <p>Можно предоставить функцию <codeph>labelFunction</codeph>, которая выполняет поиск соответствующих полей и возвращает отображаемую строку. <codeph>labelFunction</codeph> можно также использовать для обработки форматирования и локализации. </p>
     
      <p>Для большинства компонентов функция метки принимает отдельный аргумент, который является элементом в поставщике данных и возвращает строку.</p>
      <pre>
      myLabelFunction(item:Object):String</pre>
     
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Индекс активного элемента навигации, где первому элементу соответствует индекс 0.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Индекс активного элемента навигации, где первому элементу соответствует индекс 0.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NavBar:toolTipField:get"><apiName>toolTipField</apiName><shortdesc>
      Имя поля в объекте dataProvider для отображения в качестве метки всплывающей подсказки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"toolTip"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в объекте <codeph>dataProvider</codeph> для отображения в качестве метки всплывающей подсказки.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TextInput"><apiName>TextInput</apiName><shortdesc>
  Элемент управления TextInput представляет собой однострочное текстовое поле, которое может быть определено, как доступное для редактирования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="baseColor"/><Exclude kind="method" name="selectionAnchorPosition"/><Exclude kind="method" name="selectionActivePosition"/><Alternative owner="mx.controls:TextInput" replacement="spark.components.TextInput" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей компонента и верхним краем его области содержимого.
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между нижней границей компонента и нижним краем его области содержимого.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет кольца фокуса, если компонент в фокусе.
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет области содержимого компонента.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал фона содержимого для данного компонента.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:TextInput" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:TextInput" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:TextInput" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:TextInput" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:TextInput" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:TextInput" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:TextInput" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Расстояние для тени. Если для свойства установлено отрицательное значение, тень отображается над компонентом.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  Направление тени. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет тени.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах установите свойство <codeph>contentBackgroundColor</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Этот стиль используется при установке значения solid для свойства <codeph>borderStyle</codeph>. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах выберите свойства <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов компонента.  Значением по умолчанию для ApplicationControlBar является 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Видимость границы.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина ограничительной рамки. Используется только в случае, если для свойства <codeph>borderStyle</codeph> установлено значение <codeph>solid</codeph>.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:TextInput" playerVersion="Flash9" type="String">
<description>
  Стиль ограничительной рамки. Возможными значениями являются <codeph>none</codeph>, <codeph>solid</codeph>, <codeph>inset</codeph> и <codeph>outset</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>inset</codeph>. Значением по умолчанию для большинства контейнеров является <codeph>none</codeph>. Значения <codeph>inset</codeph> и <codeph>outset</codeph> являются действительными только с темой Halo.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:TextInput" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления границы компонента. <codeph/><codeph/> <codeph/><codeph/> Для определения значения по умолчанию для компонента см. файл default.css.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  Стороны ограничительной рамки. Строка, разделенная пробелами, указывающая отображаемые стороны границы. Строка может содержать значения <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph> в любом порядке. Значением по умолчанию является <codeph>left top right bottom</codeph>. При этом будут отображаться все четыре стороны. Этот стиль используется только в том случае, если для borderStyle установлено значение <codeph>solid</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет границы. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:TextInput" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал границы.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="String">
<description>
  Масштабирует изображение, указанное свойством <codeph>backgroundImage</codeph>, в соответствии с различными указываемыми процентными значениями. При значении <codeph>100%</codeph> изображение растягивается по всей области компонента. Для указания процентного значения необходимо добавить символ процента (%). Значением по умолчанию для контейнера Application является <codeph>100%</codeph>. Значением по умолчанию для всех других контейнеров является <codeph>auto</codeph>, при котором сохраняется первоначальный размер изображения.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Фоновое изображение компонента. Может являться классом, абсолютным или относительным URL-адресом. Можно установить <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. Фоновое изображение отображается поверх цвета фона. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что значение не установлено. Если этот стиль и стиль <codeph>backgroundColor</codeph> не определены, для компонента устанавливается прозрачный фон.
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате фоновое изображение контейнера частично «растекается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента при его деактивации. Глобальным значением по умолчанию является <codeph>undefined</codeph>. Значением по умолчанию для элементов управления List является <codeph>0xDDDDDD</codeph> (светло-серый). Если контейнер деактивирован, фон бледнеет в степени, заданной стилем <codeph>disabledOverlayAlpha</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента. Можно одновременно установить значения для свойств <codeph>backgroundColor</codeph> и <codeph>backgroundImage</codeph>. Некоторые компоненты не имеют фона. Элемент управления DataGrid игнорирует этот стиль. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что свойство не установлено. Если этот стиль и стиль <codeph>backgroundImage</codeph> имеют значения <codeph>undefined</codeph>, фон компонента будет прозрачным.
 
  <p>Для контейнера Application этот стиль указывает цвет фона во время загрузки приложения и градиент фона во время выполнения приложения. Flex вычисляет образец градиента между двумя цветами: немного более темным и немного более светлым, чем указанный цвет.</p>
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате цвет фона контейнера частично «расплывается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:TextInput" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Альфа-уровень цвета, определяемый свойством <codeph>backgroundColor</codeph> для изображения или файла SWF, заданного стилем <codeph>backgroundImage</codeph>. Допустимыми являются значения от 0,0 до 1,0. Для большинства элементов управления значением по умолчанию является 1,0, но для элементов управления ToolTip значением по умолчанию является 0,95, а для элементов управления Alert – 0,9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TextInput&gt;</code> tag inherits the attributes
  of its superclass and adds the following attributes:</p>
 
  <pre>
  &lt;mx:TextInput
    <b>Properties</b>
    condenseWhite="false|true"
    data="undefined"
    displayAsPassword="false|true"
    editable="true|false"
    horizontalScrollPosition="0"
    htmlText=""
    imeMode="null"
    length="0"
    listData="null"
    maxChars="0"
    parentDrawsFocus="false"
    restrict="null"
    selectionBeginIndex="0"
    selectionEndIndex="0"
    text=""
    textHeight="0"
    textWidth="0"
    &nbsp;
    <b>Styles</b>
    backgroundAlpha="1.0"
    backgroundColor="undefined"
    backgroundImage="undefined"
    backgroundSize="auto"
    borderColor="0xAAB3B3"
    borderSides="left top right bottom"
    borderSkin="mx.skins.halo.HaloBorder"
    borderStyle="inset"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    dropShadowColor="0x000000"
    dropShadowEnabled="false"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    paddingLeft="0"
    paddingRight="0"
    shadowDirection="center"
    shadowDistance="2"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
    enter="<i>No default</i>"
    textInput="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>Объект TextInput представляет собой однострочное редактируемое текстовое поле.
  
  </apiTipText></apiTipTexts><apiBaseInterface>mx.core:ITextInput</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления TextInput представляет собой однострочное текстовое поле, которое может быть определено, как доступное для редактирования. Для всего текста в этом элементе управления необходимо использовать один стиль, если это не текст HTML. Элемент управления TextInput поддерживает возможности визуализации HTML для Flash Player и AIR.
 
  <p>Элементы управления TextInput не включают метку, однако ее можно добавить с помощью элемента управления Label или путем встраивания элемента управления TextInput в элемент управления FormItem в контейнере Form. При использовании в элементе управления FormItem элемент управления TextInput указывает, является ли значение обязательным. Элементы управления TextInput имеют ряд состояний, включая filled (заполнено), selected (выбрано), disabled (отключено) и error (ошибка). Элементы управления TextInput поддерживают эквиваленты форматирования, проверки правильности и управления с клавиатуры; они также передают события изменения и ввода.</p>
 
  <p>При деактивации элемента управления TextInput его содержимое отображается в цвете, указанном стилем <codeph>disabledColor</codeph>. Для запрета редактирования текста установите для свойства <codeph>editable</codeph> значение <codeph>false</codeph>. Для скрытия входного текста с заменой вводимых символов звездочками установите для свойства <codeph>displayAsPassword</codeph> значение <codeph>true</codeph>.</p>
 
  <p>Элемент управления TextInput используется как подчиненный компонент в нескольких других элементах управления, например, RichTextEditor, NumericStepper и ComboBox. В результате при назначении свойства стиля элементу управления TextInput посредством селектора типа CSS Flex применяет эти стили к TextInput в случае его отображения в других элементах управления, если они не были явно переопределены.</p>
 
  <p>Элемент управления TextInput имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Размер текста с минимальным размером по умолчанию, равным 22 пикселям в высоту и 160 пикселям в ширину.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>10000 на 10000 пикселей</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TextInputExample.mxml"><swfblock conref="examples/TextInputExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Label"><linktext>mx.controls.Label</linktext></link><link href="mx.controls.xml#Text"><linktext>mx.controls.Text</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange</linktext></link></related-links><adobeApiEvent id="mx.controls:TextInput_flash.events.TextEvent.TEXT_INPUT_textInput"><apiName>textInput</apiName><shortdesc>
  Передается, когда пользователь вводит или вставляет текст в элемент управления или удаляет текст из него.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.TEXT_INPUT</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь вводит или вставляет текст в элемент управления или удаляет текст из него. При нажатии пользователем клавиши Delete или Backspace событие не передается.
 
  <p>Даже в случае, если значением по умолчанию свойства <codeph>TextEvent.bubbles</codeph> является <codeph>true</codeph>, этот элемент управления передает событие со значением <codeph>false</codeph> для свойства <codeph>TextEvent.bubbles</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_mx.events.FlexEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  Передается при нажатии пользователем клавиши Enter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при нажатии пользователем клавиши Enter.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит данные для отображения. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:TextInput_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении текста в элементе управления TextInput в результате ввода информации пользователем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении текста в элементе управления TextInput в результате ввода информации пользователем. Это событие не происходит при использовании для изменения текста привязки данных или кода ActionScript.
 
  <p>Даже в случае, если значением по умолчанию для свойства <codeph>Event.bubbles</codeph> является <codeph>true</codeph>, этот элемент управления передает событие со значением <codeph>false</codeph> для свойства <codeph>Event.bubbles</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TextInput:TextInput"><apiName>TextInput</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:TextInput:protected:createBorder"><apiName>createBorder</apiName><shortdesc>
      Создает границу для этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Создает границу для этого компонента. Как правило, граница определяется стилями <codeph>borderStyle</codeph> и <codeph>borderSkin</codeph>. Должен устанавливать свойство border для экземпляра границы.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:TextInput:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      Возвращает объект TextLineMetrics с информацией о размещении текста и измерениями для строки текста в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект, который содержит информацию о размещении текста и измерения для указанной строки текста в элементе управления.
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса строки, для которой требуется получить метрики. 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает объект TextLineMetrics с информацией о размещении текста и измерениями для строки текста в элементе управления. Для получения корректного значения требуется проверка компонента. При установке значения для свойства <codeph>text</codeph> или <codeph>htmlText</codeph> и немедленном вызове <codeph>getLineMetrics()</codeph> возможно получение некорректного значения. Следует дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения класса flash.text.TextField, который выполняет обновление значения незамедлительно.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextInput:selectRange"><apiName>selectRange</apiName><shortdesc>
      Выбирает текст в диапазоне, заданном параметрами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>anchorIndex</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>activeIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
      Выбирает текст в диапазоне, заданном параметрами. В отличие от <codeph>setSelection</codeph> это выполняется немедленно.
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#TextInput/setSelection"><linktext>mx.controls.TextInput.setSelection</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:TextInput:setSelection"><apiName>setSelection</apiName><shortdesc>
      Выбирает текст в диапазоне, заданном параметрами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>beginIndex</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса для первого символа в диапазоне; т.е. первый символ – 0, второй символ – 1 и т.д.
     
      </apiDesc></apiParam><apiParam><apiItemName>endIndex</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса позиции <i>после</i> последнего символа в диапазоне (эквивалентно индексу последнего символа, отсчитываемому от единицы). Так, если параметр равен 5, последний символ в выборке является пятым символом. При получении фокуса элементом управления TextInput выбранный фрагмент становится видимым, если установлены значения для свойств <codeph>selectionBeginIndex</codeph> и <codeph>selectionEndIndex</codeph>.
     
      </apiDesc></apiParam><apiTipTexts><apiTipText>Задает новый выделенный фрагмент текста.
      
      </apiTipText></apiTipTexts></apiOperationDef><apiDesc>
      Выбирает текст в диапазоне, заданном параметрами. Если для элемента управления фокус отсутствует, диапазон не выделяется до получения фокуса этим элементом управления. Кроме того, при фокусировке с помощью щелчка по элементу управления, любой предыдущий выбор будет потерян. Если два значения параметров являются одинаковыми, новым выбором становится точка вставки.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:TextInput:showBorderAndBackground"><apiName>showBorderAndBackground</apiName><shortdesc>
      Используемая для определения, если граница элемента управления и фон отображаются.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>visible</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
      Используемая для определения, если граница элемента управления и фон отображаются.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:TextInput:protected:textField"><apiName>textField</apiName><shortdesc>
      Внутренний объект UITextField, который обеспечивает визуализацию текста данного TextInput.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Внутренний объект UITextField, который обеспечивает визуализацию текста данного TextInput.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      Указывает, требуется ли удалять лишние разделители (пробелы, разрывы строк и т.д.) в элементе управления TextInput с HTML-текстом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, требуется ли удалять лишние разделители (пробелы, разрывы строк и т. д.) в элементе управления TextInput с HTML-текстом.
     
      <p>Свойство <codeph>condenseWhite</codeph> влияет только на текст, установленный посредством свойства <codeph>htmlText</codeph>, а не с помощью свойства <codeph>text</codeph>. Если текст определен посредством свойства <codeph>text</codeph>, <codeph>condenseWhite</codeph> игнорируется.</p>
     
      <p>Если для свойства <codeph>condenseWhite</codeph> установлено значение <codeph>true</codeph>, для размещения в текстовом поле разрывов строк необходимо использовать стандартные команды HTML, например, <codeph>&lt;br></codeph> и <codeph>&lt;p></codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:data:get"><apiName>data</apiName><shortdesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>При использовании элемента управления в качестве средства визуализации или редактора вставных элементов Flex автоматически записывает текущее значение элемента в свойство <codeph>text</codeph> данного элемента управления.</p>
     
      <p>Это свойство не устанавливается в MXML.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:displayAsPassword:get"><apiName>displayAsPassword</apiName><shortdesc>
      Указывает, используется ли этот элемент управления для ввода паролей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3197
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue><apiTipTexts><apiTipText>Указывает, требуется ли отображать символы « ' » вместо реальных символов.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Указывает, используется ли этот элемент управления для ввода паролей. Если значение равно <codeph>true</codeph>, поле не отображает введенный текст. При этом вместо каждого введенного в элемент управления текстового символа отображается звездочка «*».
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:editable:get"><apiName>editable</apiName><shortdesc>
      Указывает, разрешено ли пользователю редактировать текст в данном элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3196
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue><apiTipTexts><apiTipText>Определяет, является ли компонент изменяемым.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Указывает, разрешено ли пользователю редактировать текст в данном элементе управления. Если значение равно <codeph>true</codeph>, пользователь может редактировать текст.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:horizontalScrollPosition:get"><apiName>horizontalScrollPosition</apiName><shortdesc>
      Расположение в области содержимого крайнего левого пикселя, отображаемого в настоящий момент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3194
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0

      </apiDefaultValue><apiTipTexts><apiTipText>Положение пикселя для крайнего левого символа, отображаемого в настоящий момент.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Расположение в области содержимого крайнего левого пикселя, отображаемого в настоящий момент. (Область содержимого включает все содержимое элемента управления, а не только отображаемый в данный момент фрагмент.) Для этого свойства всегда устанавливается значение 0. Любые изменения игнорируются, если для <codeph>wordWrap</codeph> установлено значение <codeph>true</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Указывает текст, отображаемый элементом управления TextInput, включая разметку HTML, отражающую стили этого текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает текст, отображаемый элементом управления TextInput, включая разметку HTML, отражающую стили этого текста. При указании в этом свойстве текста HTML можно использовать набор тегов HTML, поддерживаемый элементом управления TextField для Flash.
     
      <p> При установке значения этого свойства разметка HTML применяется после CSS-стилей для экземпляра TextInput. При получении этого свойства разметка HTML включает стили CSS.</p>
      
      <p>Например, при установке строки <codeph>«Это пример <b>полужирной</b> разметки»</codeph> текст «Это пример &lt;b>полужирной&lt;/b>разметки» отображается в TextInput с любыми применяемыми обычно стилями CSS. Кроме того, слово «полужирный» отображается жирным шрифтом вследствие разметки <codeph>&lt;b></codeph>.</p>
     
      <p>В разметке HTML используются символы, такие как &lt;and >, которые имеют специальное значение в XML (и, следовательно, в MXML). Например, следующий код не компилируется:</p>
      
      <pre>
      &lt;mx:TextInput htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>Существует три способа решения этой проблемы.</p>
      
      <ul>
      
      <li>
      
      <p>Установите значение для свойства <codeph>htmlText</codeph> в методе ActionScript, вызываемом в качестве обработчика <codeph> initialize</codeph>,</p>
      
      <pre>
      &lt;mx:TextInput id="myTextInput" initialize="myTextInput_initialize()"/>
      </pre>
      
      <p>где метод <codeph>myTextInput_initialize</codeph> находится в разделе сценария CDATA:</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myTextInput_initialize():void {
          myTextInput.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>Это наиболее простой подход, поскольку разметка HTML остается читаемой. Учтите, что TextInput необходимо присвоить <codeph>идентификатор</codeph> для обеспечения возможности обращения к нему в обработчике <codeph>инициализации</codeph>.</p>
      
      </li>
      
      <li>
      
      <p>Укажите значение свойства <codeph>htmlText</codeph> с помощью нижестоящего тега в разделе CDATA. Раздел CDATA в XML содержит символьные данные, где символы, такие как &lt; и >, не несут специального значения.</p>
      
      <pre>
      &lt;mx:TextInput>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:TextInput/>
      </pre>
      
      <p>Свойство <codeph>htmlText</codeph> необходимо записать как нижестоящий тег, а не как атрибут тега <codeph>&lt;mx:TextInput></codeph>, поскольку в XML использование значений атрибутов CDATA невозможно. Учтите, что разметка остается читаемой, но особенности использования раздела CDATA затрудняют применение этого подхода.</p>
      
      </li>
      
      <li>
      
      <p>Атрибут <codeph>hmtlText</codeph> используется в том случае, если вхождения символов &lt; и > разметки HTML в значении атрибута записаны вместо объектов XML <codeph>&amp;lt;</codeph> и <codeph>&amp;gt;</codeph>:</p>
      
      <pre>
      &lt;mx:TextInput htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      Adobe не рекомендует использовать этот подход, поскольку при этом разметка HTML становится практически нечитаемой.
      
      </li>
      
      </ul>
      
      <p>Если для свойства <codeph>condenseWhite</codeph> установлено значение <codeph>true</codeph>, то при установке значения для свойства <codeph>htmlText</codeph> множественные пробелы сжимаются как в браузерах на базе HTML; например, три последовательных пробела отображаются как один пробел. Значением по умолчанию для <codeph>condenseWhite</codeph> является <codeph>false</codeph>, поэтому для сокращения количества пробелов необходимо установить для <codeph>condenseWhite</codeph> значение <codeph>true</codeph>.</p>
      
      <p>При считывании свойства <codeph>htmlText</codeph> сразу же после установки его значения будет получена та же установленная строка. Однако после запуска LayoutManager значение изменяется и включает дополнительную разметку со стилями CSS.</p>
      
      <p>Установка свойства <codeph>htmlText</codeph> оказывает на <codeph>text</codeph> различное воздействие. При считывании свойства <codeph>text</codeph> сразу же после установки свойства <codeph>htmlText</codeph> будет получено значение <codeph>null</codeph>. Это означает, что значение свойства <codeph>text</codeph>, соответствующее новому значению <codeph>htmlText</codeph>, еще не определено. Однако после запуска LayoutManager значение свойства <codeph>text</codeph> изменяется на строку <codeph>htmlText</codeph>, при этом вся HTML-разметка удаляется; таким образом, значение включает символы, которые реально отображаются с помощью TextInput.</p>
       
      <p>Наоборот, при установке свойства <codeph>text</codeph> любое предыдущее значение <codeph>htmlText</codeph> становится нерелевантным. При считывании свойства <codeph>htmlText</codeph> сразу же после установки свойства <codeph>text</codeph> будет получено значение <codeph>null</codeph>. Это означает, что значение <codeph>htmlText</codeph>, соответствующее новому значению <codeph>text</codeph>, еще не определено. Однако после запуска LayoutManager значение свойства <codeph>htmlText</codeph> изменяется на новый текст с разметкой HTML для стилей CSS.</p>
     
      <p>Для немедленного запуска LayoutManager вызовите метод <codeph>validateNow()</codeph> в TextInput. Например, можно установить <codeph>htmlText</codeph>, вызвать метод <codeph>validateNow()</codeph> и немедленно получить соответствующее значение <codeph>text</codeph> без разметки HTML.</p>
      
      <p>При установке свойств <codeph>text</codeph> и <codeph>htmlText</codeph> в ActionScript будет использовано только последнее значение. Не устанавливайте оба эти свойства в MXML, поскольку в MXML невозможно обеспечить указанный порядок установки свойств экземпляра.</p>
      
      <p>Настройка свойства <codeph>text</codeph> или <codeph>htmlText</codeph> в цикле выполняется быстро, поскольку соответствующий TextField, который обеспечивает визуализацию текста, не обновляется до запуска LayoutManager.</p>
     
      <p>При попытке установить для этого свойства значение <codeph>null</codeph> будет установлена пустая строка. Если свойство временно имеет значение <codeph>null</codeph>, это означает, что значение для <codeph>text</codeph> было установлено недавно, и соответствующее значение <codeph>htmlText</codeph> еще не определено.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Указывает режим IME (редактор методов ввода).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает режим IME (редактор методов ввода). IME позволяет пользователям вводить текст на китайском, японском и корейском языках. Режим IME устанавливается при перемещении фокуса на элемент управления и возвращается к предыдущему значению при потере фокуса этим элементом управления.
     
      <p>Класс flash.system.IMEConversionMode определяет константы для допустимых значений этого свойства. Можно также указать значение <codeph>null</codeph> и не указывать IME.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:length:get"><apiName>length</apiName><shortdesc>
      Количество символов текста, отображаемых в TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3192
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>0
      </apiDefaultValue><apiTipTexts><apiTipText>Количество символов в TextInput.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Количество символов текста, отображаемых в TextArea.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:listData:get"><apiName>listData</apiName><shortdesc>
      Если компонент используется в качестве средства визуализации или редактора вставных элементов, то Flex инициализирует свойство компонента listData соответствующими данными из элемента управления списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Если компонент используется в качестве средства визуализации или редактора вставных элементов, то Flex инициализирует свойство компонента <codeph>listData</codeph> соответствующими данными из элемента управления списка. Затем компонент может использовать свойство <codeph>listData</codeph> для инициализации свойства <codeph>data</codeph> средства визуализации или редактора вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      Максимальное количество символов, которые может ввести пользователь в текстовом поле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3191
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiTipTexts><apiTipText>Максимальное количество символов в TextInput.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Максимальное количество символов, которые может ввести пользователь в текстовом поле. Это свойство не ограничивает длину текста, заданного значениями свойств элемента управления <codeph>text</codeph> или <codeph>htmlText</codeph>.
     
      <p>Значением по умолчанию является 0. Это особый случай, который означает неограниченное количество.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:parentDrawsFocus:get"><apiName>parentDrawsFocus</apiName><shortdesc>
      Если true, вызовы метода drawFocus() элемента управления передаются в метод drawFocus() вышестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если true, вызовы метода drawFocus() элемента управления передаются в метод drawFocus() вышестоящего элемента. Это применяется, если TextInput является частью составного элемента управления, например, NumericStepper или ComboBox;
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:restrict:get"><apiName>restrict</apiName><shortdesc>
      Определяет набор символов, которые пользователь может ввести в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3193
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      </apiDefaultValue><apiTipTexts><apiTipText>Набор символов, которые можно ввести в TextInput.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Определяет набор символов, которые пользователь может ввести в элементе управления. Если свойству <codeph>restrict</codeph> присвоено значение <codeph>null</codeph>, можно ввести любой символ. Если в качестве значения свойства <codeph>restrict</codeph> установлена пустая строка, ввод символов невозможен. Это свойство ограничивает только действия пользователя; сценарий может помещать в текстовое поле любые символы. Если значением свойства <codeph>restrict</codeph> является строка символов, в текстовое поле можно ввести только символы из этой строки.
     
      <p>Flex сканирует строку слева направо. Диапазон определяется с помощью символа (-). Если строка начинается с символа вставки (^), все символы изначально поддерживаются, а последующие символы в строке исключаются из набора поддерживаемых символов. Если строка не начинается с символа вставки (^), символы изначально не поддерживаются, а последующие символы в строке включаются в набор поддерживаемых символов.</p>
     
      <p>Поскольку некоторые символы при использовании в свойстве <codeph>restrict</codeph> приобретают специальное значение, для задания символов-литералов – ^ и \ необходимо указывать символ обратной косой черты. При использовании свойства <codeph>restrict</codeph> в качестве атрибута в теге MXML укажите одинарный символ обратной косой черты, например: \^\-\\. При установке свойства <codeph>restrict</codeph> и выражения ActionScript используются двойные символы обратной косой черты, как в следующем примере: \\^\\-\\\.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:selectable:get"><apiName>selectable</apiName><shortdesc>
      Флаг, указывающий, можно ли выбрать текст в TextInput.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, указывающий, можно ли выбрать текст в TextInput.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:selectionActivePosition:get"><apiName>selectionActivePosition</apiName><shortdesc>
      Для интерфейса ITextInput; аналогично selectionEndIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Для интерфейса ITextInput; аналогично selectionEndIndex.
      
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextInput/selectionEndIndex"><linktext>mx.controls.TextInput.selectionEndIndex</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:selectionAnchorPosition:get"><apiName>selectionAnchorPosition</apiName><shortdesc>
      Для интерфейса ITextInput; аналогично selectionBeginIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Для интерфейса ITextInput; аналогично selectionBeginIndex.
      
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextInput/selectionBeginIndex"><linktext>mx.controls.TextInput.selectionBeginIndex</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:selectionBeginIndex:get"><apiName>selectionBeginIndex</apiName><shortdesc>
      Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Отсчитываемое от нуля значение индекса для первого символа в выделенном фрагменте.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте. Например, первый символ имеет индекс 0, второй – индекс 1 и т. д. При фокусировке на элементе управления выбор становится видимым в том случае, если установлены значения для свойств <codeph>selectionBeginIndex</codeph> и <codeph>selectionEndIndex</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:selectionEndIndex:get"><apiName>selectionEndIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс позиции после последнего символа в текущем диапазоне (эквивалентен индексу последнего символа, отсчитываемому от единицы).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     
      </apiDefaultValue><apiTipTexts><apiTipText>Отсчитываемое от нуля значение индекса для последнего символа в выделенном фрагменте.
      
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс позиции <i>после</i>последнего символа в текущем диапазоне (эквивалентен индексу последнего символа, отсчитываемому от единицы). Если последний символ в диапазоне, например, является пятым символом, это свойство имеет значение 5. При фокусировке на элементе управления выбор становится видимым в том случае, если установлены значения для свойств <codeph>selectionBeginIndex</codeph> и <codeph>selectionEndIndex</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:text:get"><apiName>text</apiName><shortdesc>
      Простой текст, отображаемый в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3190
      
      </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>Получает или задает содержимое TextInput.
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Простой текст, отображаемый в элементе управления. Его внешний вид определяется стилями CSS данного элемента управления Label.
      
      <p>Любые HTML-теги в текстовой строке игнорируются и отображаются при вводе в строку. Для отображения отформатированного текста с помощью HTML-тегов используется свойство <codeph>htmlText</codeph>. При активации свойства <codeph>htmlText</codeph> HTML заменяет любой заданный с помощью этого свойства текст, а свойство <codeph>text</codeph> возвращает неформатированный текст HTML без тегов HTML. Для получения дополнительной информации см. описание свойства <codeph>htmlText</codeph>.</p>
     
      <p>Для включения в текст специальных символов левой угловой скобки (&lt;), правой угловой скобки (>) или амперсанда (&amp;) необходимо заключить текстовую строку в тег CDATA. Кроме того, можно использовать объекты HTML для специальных символов, например, <codeph>&amp;lt;</codeph>.</p>
     
      <p>При попытке установить для этого свойства значение <codeph>null</codeph> будет установлена пустая строка. Свойство <codeph>text</codeph> может временно иметь значение <codeph>null</codeph>. Это означает, что значение <codeph>htmlText</codeph> было установлено недавно, и соответствующее значение <codeph>text</codeph> еще не определено.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:TextInput:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      Высота текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Высота текста.
     
      <p>Значение свойства <codeph>textHeight</codeph> становится корректным только после проверки компонента. При установке значения свойства <codeph>text</codeph> и немедленном запросе <codeph>textHeight</codeph> возможно получение некорректного значения. Перед получением значения необходимо дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения элемента управления flash.text.TextField, который выполняет обновление значения незамедлительно.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:TextInput:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      Ширина текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина текста.
     
      <p>Значение свойства <codeph>textWidth</codeph> становится корректным только после проверки компонента. При установке значения для свойства <codeph>text</codeph> и немедленном запросе <codeph>textWidth</codeph> возможно получение некорректного значения. Перед получением значения необходимо дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения элемента управления flash.text.TextField, который выполняет обновление значения незамедлительно.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:NumericStepper"><apiName>NumericStepper</apiName><shortdesc>
  Элемент управления NumericStepper позволяет пользователю выбрать число из упорядоченного набора.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:NumericStepper" replacement="spark.components.NumericStepper" since="4.0">
	</Alternative><styles><style inherit="no" name="upArrowUpSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вверх, когда кнопка включена и указатель мыши не находится на стрелке.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowOverSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вверх, когда кнопка включена, и указатель мыши находится над стрелкой.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowDownSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вверх, когда кнопка включена и пользователь нажимает кнопку мыши над стрелкой.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowDisabledSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вверх, когда кнопка отключена.
 
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upArrowSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления по умолчанию для кнопки со стрелкой вверх.
  
  </description>
<default>mx.skins.halo.NumericStepperUpSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textInputClass" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий ITextInput, который используется этим компонентом для ввода текста.
 
  <p>Его можно установить либо для класса mx.core.TextInput (для использования типичного элемента управления Halo TextInput), либо для класса mx.controls.MXFTETextInput (для использования компонента Spark TextInput, основанного на Text Layout Framework, для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.controls.TextInput
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет любого символа компонента. Примеры включают флажок элемента управления CheckBox или стрелку на кнопке элемента управления ScrollBar.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-каналы, используемые для заливки выделения элементов управления.
 
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет кольца фокуса, если компонент в фокусе.
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowUpSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вниз, когда кнопка со стрелкой включена, и указатель мыши не находится над ней. Значение по умолчанию отсутствует.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowOverSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вниз, когда кнопка со стрелкой включена, и указатель мыши находится над стрелкой.
  
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowDownSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вниз, когда кнопка со стрелкой включена, и пользователь нажимает кнопку мыши над стрелкой.
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowDisabledSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для кнопки со стрелкой вниз, когда стрелка выключена.
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downArrowSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления по умолчанию для кнопки со стрелкой вниз.
 
  </description>
<default>mx.skins.halo.NumericStepperDownSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет области содержимого компонента.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал фона содержимого для данного компонента.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:NumericStepper" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Расстояние для тени. Если для свойства установлено отрицательное значение, тень отображается над компонентом.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  Направление тени. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет тени.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах установите свойство <codeph>contentBackgroundColor</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Этот стиль используется при установке значения solid для свойства <codeph>borderStyle</codeph>. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах выберите свойства <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов компонента.  Значением по умолчанию для ApplicationControlBar является 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Видимость границы.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина ограничительной рамки. Используется только в случае, если для свойства <codeph>borderStyle</codeph> установлено значение <codeph>solid</codeph>.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="String">
<description>
  Стиль ограничительной рамки. Возможными значениями являются <codeph>none</codeph>, <codeph>solid</codeph>, <codeph>inset</codeph> и <codeph>outset</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>inset</codeph>. Значением по умолчанию для большинства контейнеров является <codeph>none</codeph>. Значения <codeph>inset</codeph> и <codeph>outset</codeph> являются действительными только с темой Halo.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:NumericStepper" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления границы компонента. <codeph/><codeph/> <codeph/><codeph/> Для определения значения по умолчанию для компонента см. файл default.css.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  Стороны ограничительной рамки. Строка, разделенная пробелами, указывающая отображаемые стороны границы. Строка может содержать значения <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph> в любом порядке. Значением по умолчанию является <codeph>left top right bottom</codeph>. При этом будут отображаться все четыре стороны. Этот стиль используется только в том случае, если для borderStyle установлено значение <codeph>solid</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет границы. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал границы.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="String">
<description>
  Масштабирует изображение, указанное свойством <codeph>backgroundImage</codeph>, в соответствии с различными указываемыми процентными значениями. При значении <codeph>100%</codeph> изображение растягивается по всей области компонента. Для указания процентного значения необходимо добавить символ процента (%). Значением по умолчанию для контейнера Application является <codeph>100%</codeph>. Значением по умолчанию для всех других контейнеров является <codeph>auto</codeph>, при котором сохраняется первоначальный размер изображения.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Фоновое изображение компонента. Может являться классом, абсолютным или относительным URL-адресом. Можно установить <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. Фоновое изображение отображается поверх цвета фона. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что значение не установлено. Если этот стиль и стиль <codeph>backgroundColor</codeph> не определены, для компонента устанавливается прозрачный фон.
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате фоновое изображение контейнера частично «растекается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента при его деактивации. Глобальным значением по умолчанию является <codeph>undefined</codeph>. Значением по умолчанию для элементов управления List является <codeph>0xDDDDDD</codeph> (светло-серый). Если контейнер деактивирован, фон бледнеет в степени, заданной стилем <codeph>disabledOverlayAlpha</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента. Можно одновременно установить значения для свойств <codeph>backgroundColor</codeph> и <codeph>backgroundImage</codeph>. Некоторые компоненты не имеют фона. Элемент управления DataGrid игнорирует этот стиль. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что свойство не установлено. Если этот стиль и стиль <codeph>backgroundImage</codeph> имеют значения <codeph>undefined</codeph>, фон компонента будет прозрачным.
 
  <p>Для контейнера Application этот стиль указывает цвет фона во время загрузки приложения и градиент фона во время выполнения приложения. Flex вычисляет образец градиента между двумя цветами: немного более темным и немного более светлым, чем указанный цвет.</p>
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате цвет фона контейнера частично «расплывается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:NumericStepper" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Альфа-уровень цвета, определяемый свойством <codeph>backgroundColor</codeph> для изображения или файла SWF, заданного стилем <codeph>backgroundImage</codeph>. Допустимыми являются значения от 0,0 до 1,0. Для большинства элементов управления значением по умолчанию является 1,0, но для элементов управления ToolTip значением по умолчанию является 0,95, а для элементов управления Alert – 0,9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  The <code>&lt;mx:NumericStepper&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:
 
  <pre>
  &lt;mx:NumericStepper
    <strong>Properties</strong>
    imeMode="null"
    maxChars="10"
    maximum="10"
    minimum="0"
    stepSize="1"
    value="0"
  
    <strong>Styles</strong>
    backgroundAlpha="1.0"
    backgroundColor="undefined"
    backgroundImage="undefined"
    backgroundSize="auto"
    borderColor="0xAAB3B3"
    borderSides="left top right bottom"
    borderSkin="HaloBorder"
    borderStyle="inset"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    downArrowDisabledSkin="NumericStepperDownSkin"
    downArrowDownSkin="NumericStepperDownSkin"
    downArrowOverSkin="NumericStepperDownSkin"
    downArrowUpSkin="NumericStepperDownSkin"
    dropShadowEnabled="false"
    dropShadowColor="0x000000"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x111111"
    leading="2"
    paddingLeft="0"
    paddingRight="0"
    shadowDirection="center"
    shadowDistance="2"
    textAlign="left|center|right"
    textDecoration="none|underline"
    textIndent="0"
    upArrowDisabledSkin="NumericStepperUpSkin"
    upArrowDownSkin="NumericStepperUpSkin"
    upArrowOverSkin="NumericStepperUpSkin"
    upArrowUpSkin="NumericStepperUpSkin"
  
    <strong>Events</strong>
    change="<i>No default</i>"
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления NumericStepper позволяет пользователю выбрать число из упорядоченного набора. Элемент управления NumericStepper состоит из однострочного текстового поля ввода и пары кнопок со стрелками для последовательного перехода между возможными значениями. Клавиши со стрелкой вверх и со стрелкой вниз также используются для циклического перехода между значениями.
 
  <p>Для элемента управления NumericStepper по умолчанию установлены следующие характеристики:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина элемента управления позволяет отображать максимальное количество цифр, используемых этим элементом управления.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>Зависит от размера текста.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не определен</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="NumericStepperExample.mxml"><swfblock conref="examples/NumericStepperExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:NumericStepper_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит данные для отображения. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:NumericStepper_mx.events.NumericStepperEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении значения элемента управления NumericStepper в результате действия пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.NumericStepperEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.NumericStepperEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении значения элемента управления NumericStepper в результате действия пользователя.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:NumericStepper:NumericStepper"><apiName>NumericStepper</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:NumericStepper:data:get"><apiName>data</apiName><shortdesc>
      Свойство data позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Свойство <codeph>data</codeph> позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>Если компонент используется в качестве средства визуализации или редактора вставных элементов, текущее значение элемента автоматически записывается в свойство <codeph>value</codeph> этого элемента управления.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:protected:downArrowStyleFilters:get"><apiName>downArrowStyleFilters</apiName><shortdesc>
      Набор стилей для перехода от NumericStepper к кнопке со стрелкой вниз.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для перехода от NumericStepper к кнопке со стрелкой вниз.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Указывает режим редактора методов ввода (IME).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает режим редактора методов ввода (IME). IME позволяет пользователям вводить текст на китайском, японском и корейском языках. Режим IME устанавливается при перемещении фокуса на элемент управления и возвращается к предыдущему значению при потере фокуса этим элементом управления.
     
     <p>Класс flash.system.IMEConversionMode определяет константы для допустимых значений этого свойства. Можно также указать значение <codeph>null</codeph> и не указывать IME.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:protected:inputFieldStyleFilters:get"><apiName>inputFieldStyleFilters</apiName><shortdesc>
      Набор стилей для перехода от NumericStepper к полю ввода.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для перехода от NumericStepper к полю ввода.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:listData:get"><apiName>listData</apiName><shortdesc>
      При использовании компонента в качестве средства визуализации вставных элементов или редактора вставных элементов Flex инициализирует свойство компонента listData соответствующими данными из элемента управления List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      При использовании компонента в качестве средства визуализации или редактора вставных элементов Flex инициализирует свойство компонента <codeph>listData</codeph> с соответствующими данными из элемента управления List. Затем компонент может использовать свойство <codeph>listData</codeph> для инициализации свойства <codeph>data</codeph> средства визуализации или редактора вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:maxChars:get"><apiName>maxChars</apiName><shortdesc>
      Максимальное количество символов, которые могут быть введены в поле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Максимальное количество символов, которые могут быть введены в поле. Если задано значение 0, то можно ввести любое число символов.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:maximum:get"><apiName>maximum</apiName><shortdesc>
      Максимальное значение NumericStepper.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>10
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Максимальное значение NumericStepper. В качестве максимума может использоваться любое число, включая дробное значение.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:minimum:get"><apiName>minimum</apiName><shortdesc>
      Минимальное значение NumericStepper.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Минимальное значение NumericStepper. В качестве минимума может использоваться любое число, включая дробное значение.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:nextValue:get"><apiName>nextValue</apiName><shortdesc>
      Значение, которое на величину одного шага превосходит текущее значение свойства value, но не может превышать значение свойства maximum.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Значение, которое на величину одного шага превосходит текущее значение свойства <codeph>value</codeph>, но не может превышать значение свойства <codeph>maximum</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:previousValue:get"><apiName>previousValue</apiName><shortdesc>
      Значение, которое на величину одного шага меньше по сравнению со значением свойства value, но не может быть меньшим, чем значение свойства maximum.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Значение, которое на величину одного шага меньше по сравнению со значением свойства <codeph>value</codeph>, но не может быть меньшим, чем значение свойства <codeph>maximum</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:stepSize:get"><apiName>stepSize</apiName><shortdesc>
      Ненулевая разница между значениями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ненулевая разница между значениями. Значение свойства <codeph>value</codeph> должно быть кратным этому числу.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:NumericStepper:protected:upArrowStyleFilters:get"><apiName>upArrowStyleFilters</apiName><shortdesc>
      Набор стилей для перехода от NumericStepper к стрелке вверх.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для перехода от NumericStepper к стрелке вверх.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:NumericStepper:value:get"><apiName>value</apiName><shortdesc>
      Текущее значение, отображаемое в текстовой области элемента управления NumericStepper.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текущее значение, отображаемое в текстовой области элемента управления NumericStepper. При вводе пользователем числа, не кратного значению свойства <codeph>stepSize</codeph> или не принадлежащего диапазону между значениями свойств <codeph>maximum</codeph> и <codeph>minimum</codeph>, для этого свойства устанавливается самое близкое допустимое значение.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ToolTip"><apiName>ToolTip</apiName><shortdesc>
  Элемент управления ToolTip предоставляет пользователям важную информацию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей контейнера и его областью содержимого. Значением по умолчанию является -1, при этом верхняя граница первого заголовка перекрывает верхнюю границу контейнера Accordion.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей контейнера и его областью содержимого. Значением по умолчанию является -1, при этом нижняя граница последнего заголовка перекрывает нижнюю границу контейнера Accordion.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ToolTip" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ToolTip" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ToolTip" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ToolTip" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ToolTip" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Расстояние для тени. Если для свойства установлено отрицательное значение, тень отображается над компонентом.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  Направление тени. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет тени.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах установите свойство <codeph>contentBackgroundColor</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Этот стиль используется при установке значения solid для свойства <codeph>borderStyle</codeph>. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах выберите свойства <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов компонента.  Значением по умолчанию для ApplicationControlBar является 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Видимость границы.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина ограничительной рамки. Используется только в случае, если для свойства <codeph>borderStyle</codeph> установлено значение <codeph>solid</codeph>.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:ToolTip" playerVersion="Flash9" type="String">
<description>
  Стиль ограничительной рамки. Возможными значениями являются <codeph>none</codeph>, <codeph>solid</codeph>, <codeph>inset</codeph> и <codeph>outset</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>inset</codeph>. Значением по умолчанию для большинства контейнеров является <codeph>none</codeph>. Значения <codeph>inset</codeph> и <codeph>outset</codeph> являются действительными только с темой Halo.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:ToolTip" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления границы компонента. <codeph/><codeph/> <codeph/><codeph/> Для определения значения по умолчанию для компонента см. файл default.css.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  Стороны ограничительной рамки. Строка, разделенная пробелами, указывающая отображаемые стороны границы. Строка может содержать значения <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph> в любом порядке. Значением по умолчанию является <codeph>left top right bottom</codeph>. При этом будут отображаться все четыре стороны. Этот стиль используется только в том случае, если для borderStyle установлено значение <codeph>solid</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет границы. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:ToolTip" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал границы.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="String">
<description>
  Масштабирует изображение, указанное свойством <codeph>backgroundImage</codeph>, в соответствии с различными указываемыми процентными значениями. При значении <codeph>100%</codeph> изображение растягивается по всей области компонента. Для указания процентного значения необходимо добавить символ процента (%). Значением по умолчанию для контейнера Application является <codeph>100%</codeph>. Значением по умолчанию для всех других контейнеров является <codeph>auto</codeph>, при котором сохраняется первоначальный размер изображения.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Фоновое изображение компонента. Может являться классом, абсолютным или относительным URL-адресом. Можно установить <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. Фоновое изображение отображается поверх цвета фона. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что значение не установлено. Если этот стиль и стиль <codeph>backgroundColor</codeph> не определены, для компонента устанавливается прозрачный фон.
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате фоновое изображение контейнера частично «растекается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента при его деактивации. Глобальным значением по умолчанию является <codeph>undefined</codeph>. Значением по умолчанию для элементов управления List является <codeph>0xDDDDDD</codeph> (светло-серый). Если контейнер деактивирован, фон бледнеет в степени, заданной стилем <codeph>disabledOverlayAlpha</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет фона компонента. Можно одновременно установить значения для свойств <codeph>backgroundColor</codeph> и <codeph>backgroundImage</codeph>. Некоторые компоненты не имеют фона. Элемент управления DataGrid игнорирует этот стиль. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что свойство не установлено. Если этот стиль и стиль <codeph>backgroundImage</codeph> имеют значения <codeph>undefined</codeph>, фон компонента будет прозрачным.
 
  <p>Для контейнера Application этот стиль указывает цвет фона во время загрузки приложения и градиент фона во время выполнения приложения. Flex вычисляет образец градиента между двумя цветами: немного более темным и немного более светлым, чем указанный цвет.</p>
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате цвет фона контейнера частично «расплывается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:ToolTip" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Альфа-уровень цвета, определяемый свойством <codeph>backgroundColor</codeph> для изображения или файла SWF, заданного стилем <codeph>backgroundImage</codeph>. Допустимыми являются значения от 0,0 до 1,0. Для большинства элементов управления значением по умолчанию является 1,0, но для элементов управления ToolTip значением по умолчанию является 0,95, а для элементов управления Alert – 0,9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IToolTip</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ToolTip предоставляет пользователям важную информацию. При наведении указателя мыши на графический элемент элемент управления ToolTip открывает и выводит на экран текст, предоставляющий информацию об этом элементе. Элементы управления DataTip можно использовать для предоставления пользователям инструкций по работе с приложением или при настройке элементов управления ToolTip для предоставления дополнительных функций.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#ToolTipManager"><linktext>mx.managers.ToolTipManager</linktext></link><link href="mx.styles.xml#CSSStyleDeclaration"><linktext>mx.styles.CSSStyleDeclaration</linktext></link></related-links><apiConstructor id="mx.controls:ToolTip:ToolTip"><apiName>ToolTip</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:ToolTip:maxWidth"><apiName>maxWidth</apiName><shortdesc>
      Максимальная ширина (в пикселях) для новых элементов управления ToolTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>300</apiData><apiType value="Number"/></apiValueDef><apiDesc>
      Максимальная ширина (в пикселях) для новых элементов управления ToolTip.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToolTip:protected:textField"><apiName>textField</apiName><shortdesc>
      Внутренний объект UITextField, обеспечивающий визуализацию текста данного элемента управления ToolTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Внутренний объект UITextField, обеспечивающий визуализацию текста данного элемента управления ToolTip.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToolTip:text:get"><apiName>text</apiName><shortdesc>
      Текст, отображаемый посредством элемента управления ToolTip.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Текст, отображаемый посредством элемента управления ToolTip.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:MenuBar"><apiName>MenuBar</apiName><shortdesc>
  Элемент управления MenuBar определяет горизонтальную строку меню на самом верхнем уровне, которая содержит одно или несколько меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:MenuBar" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет любого символа компонента. Примеры включают флажок элемента управления CheckBox или стрелку на кнопке элемента управления ScrollBar.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description conref="mx.controls.Menu#style:selectionColor">
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description conref="mx.controls.Menu#style:rollOverColor">
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="menuStyleName" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Имя CSSStyleDeclaration, указывающего стили для элементов управления Menu, которые отображаются этим элементом управления MenuBar. По умолчанию элементы управления Menu используют унаследованные стили элемента управления MenuBar. 
  
  <p>Этот селектор класса используется для установки значения всех свойств стиля класса Menu, включая <codeph>backgroundAlpha</codeph> и <codeph>backgroundColor</codeph>.</p>
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemDownSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Тема оформления, если элемент MenuBar выбран. 
 
  </description>
<default>mx.skins.halo.ActivatorSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemOverSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Тема оформления в случае установки фокуса на элементе MenuBar. 
 
  </description>
<default>mx.skins.halo.ActivatorSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemUpSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Тема оформления, если элемент MenuBar не выбран.
 
  </description>
<default>mx.skins.halo.ActivatorSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="itemSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Тема оформления по умолчанию для элемента MenuBar
 
  </description>
<default>mx.skins.halo.ActivatorSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSkin" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Class">
<description>
  Тема оформления фона элемента управления MenuBar. 
   
  </description>
<default>mx.skins.halo.MenuBarBackgroundSkin 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:MenuBar" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:MenuBar" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:MenuBar" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:MenuBar" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-прозрачность, используемая для заливки выделения цветом элементов управления. Первое значение указывает прозрачность верхней части области выделения цветом и второе значение указывает прозрачность нижней части области выделения цветом. Выделена цветом верхняя половина темы оформления.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Цвета, используемые для определения оттенка заливки фона элемента управления. Для получения плоского вида для обоих значений устанавливается один и тот же цвет.
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-каналы, используемые для заливки фона элементов управления. Используйте [1, 1] для получения непрозрачного фона для элементов управления.
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов компонента. Этот стиль поддерживают следующие компоненты: Alert, Button, ComboBox, LinkButton, MenuBar, NumericStepper, Panel, ScrollBar, Tab, TitleWindow, а также любой компонент, поддерживающий свойство <codeph>borderStyle</codeph>, установленное на <codeph>solid</codeph>. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:MenuBar" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет границы. Этот стиль поддерживает следующие элементы управления: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider, а также любые компоненты, поддерживающие стиль <codeph>borderStyle</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>0xB7BABC</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:MenuBar" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:MenuBar" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:MenuBar&gt</code> tag inherits all of the tag attributes of its superclass, and
  adds the following tag attributes:
  </p>
  
  <pre>
  &lt;mx:MenuBar
    <b>Properties</b>
    dataDescriptor="<i>mx.controls.treeClasses.DefaultDataDescriptor</i>"
    dataProvider="<i>undefined</i>"
    iconField="icon"
    labelField="label"
    labelFunction="<i>undefined</i>"
    menuBarItemRenderer="<i>mx.controls.menuClasses.MenuBarItem</i>"
    menuBarItems="[]"
    menus="[]"
    selectedIndex="-1"
    showRoot="true"
  
    <b>Styles</b>
    backgroundSkin="mx.skins.halo.MenuBarBackgroundSkin"
    borderColor="0xAAB3B3"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    itemDownSkin="mx.skins.halo.ActivatorSkin"
    itemOverSkin="mx.skins.halo.ActivatorSkin"
    itemUpSkin="mx.skins.halo.ActivatorSkin"
    leading="2"
    menuStyleName="<i>No default</i>"
    rollOverColor="0xB2E1FF"
    selectionColor="0x7FCEFF"
    textAlign="left"
    textDecoration="none"
    textIndent="0"
  
    <b>Events</b>
    itemClick="<i>No default"</i>
    itemRollOut="<i>No default"</i>
    itemRollOver="<i>No default"</i>
    menuHide="<i>No default"</i>
    menuShow="<i>No default"</i>
  /&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления MenuBar определяет горизонтальную строку меню на самом верхнем уровне, которая содержит одно или несколько меню. Щелчок в области элемента меню на самом верхнем уровне приводит к открытию всплывающего подменю, являющегося экземпляром элемента управления Menu.
 
  <p>Строка меню на самом верхнем уровне элемента управления MenuBar, как правило, всегда является видимой. Она не предназначена для использования в качестве всплывающего меню. Отдельные подменю появляются, как только пользователь выбирает их с помощью мыши или клавиатуры. Открытые подменю исчезают при выборе элемента меню или в случае закрытия меню при щелчке мышью за пределами меню.</p>
 
  <p>Для получения информации об атрибутах, которые можно использовать в поставщике данных для элемента управления MenuBar, и рассмотрения соответствующего примера см. описание элемента управления Menu.</p>
 
  <p>Элемент управления MenuBar имеет следующие характеристики размеров:
  </p>
     <adobetable class="innertable">
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина зависит от текста меню, минимальное значение для ширины составляет 27 пикселей. Для высоты по умолчанию используется значение, равное 22 пикселям.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="MenuBarExample.mxml"><swfblock conref="examples/MenuBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link><link href="mx.controls.menuClasses.xml#IMenuBarItemRenderer"><linktext>mx.controls.menuClasses.IMenuBarItemRenderer</linktext></link><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link><link href="mx.controls.menuClasses.xml#IMenuDataDescriptor"><linktext>mx.controls.menuClasses.IMenuDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link></related-links><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Это событие передается при наведении указателя мыши на элемент меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events. MenuEvent. ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при наведении указателя мыши на элемент меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Это событие передается при перемещении курсора с элемента меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при перемещении курсора с элемента меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.MENU_SHOW_menuShow"><apiName>menuShow</apiName><shortdesc>
  Это событие передается при открытии всплывающего подменю, либо при выборе пользователем элемента строки меню без раскрывающегося меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при открытии всплывающего подменю, либо при выборе пользователем элемента строки меню без раскрывающегося меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.MENU_HIDE_menuHide"><apiName>menuHide</apiName><shortdesc>
  Это событие передается при закрытии всплывающего подменю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при закрытии всплывающего подменю.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Это событие передается при выборе пользователем элемента во всплывающем подменю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при выборе пользователем элемента во всплывающем подменю.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:MenuBar_mx.events.MenuEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Это событие передается при изменении выбора в результате действия пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при изменении выбора в результате действия пользователя. Это событие также передается при изменении пользователем текущего выбора меню во всплывающем подменю. При возникновении события в строке меню свойство <codeph>menu</codeph> объекта MenuEvent получает значение <codeph>null</codeph>. Если это происходит во всплывающем подменю, свойство <codeph>menu</codeph> содержит ссылку на объект меню, представляющий данное всплывающее подменю.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:MenuBar:MenuBar"><apiName>MenuBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:MenuBar:getMenuAt"><apiName>getMenuAt</apiName><shortdesc>
      Возвращает ссылку на объект меню в указанной позиции индекса элемента MenuBar; значение 0 соответствует меню, содержащемуся в крайней левой позиции индекса элемента MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Ссылка на меню, содержащееся в указанной позиции индекса.
      
      </apiDesc><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс возвращаемого экземпляра меню.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает ссылку на объект меню в указанной позиции индекса элемента MenuBar; значение 0 соответствует меню, содержащемуся в крайней левой позиции индекса элемента MenuBar. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:itemToIcon"><apiName>itemToIcon</apiName><shortdesc>
      Возвращает класс для значка элемента данных (при его наличии) в зависимости от свойства iconField.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Значок для элемента в виде ссылки класса или значение <codeph>null</codeph>, если элемент отсутствует.
      
      </apiDesc><apiType value="Class"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Элемент, из которого извлекается класс значка.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает класс для значка элемента данных (при его наличии) в зависимости от свойства <codeph>iconField</codeph>. Поле в элементе может возвращать строку, если строка представляет собой имя класса приложения. Поле элемента также может быть строкой, которая представляет собой имя переменной в документе, содержащем класс для значков.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:itemToLabel"><apiName>itemToLabel</apiName><shortdesc conref="mx.controls.listClasses.ListBase#itemToLabel()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>Строка, отображаемая в зависимости от данных.
      
      </apiDesc></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Объект, который должен быть визуализирован.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc conref="mx.controls.listClasses.ListBase#itemToLabel()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет предпочтительную ширину и высоту элемента MenuBar based на основе значений ширины по умолчанию для элементов MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет предпочтительную ширину и высоту элемента MenuBar based на основе значений ширины по умолчанию для элементов MenuBar. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:MenuBar:protected:updateBackground"><apiName>updateBackground</apiName><shortdesc>
      Обновляет тему оформления фона для элемента управления MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обновляет тему оформления фона для элемента управления MenuBar. Этот метод вызывается при создании нижестоящих элементов MenuBar или при изменении стилей в MenuBar. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:MenuBar:labelFunction"><apiName>labelFunction</apiName><shortdesc>
      Функция, определяющая текст, который должен отображаться для каждого пункта меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Function"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Функция, определяющая текст, который должен отображаться для каждого пункта меню. Функция метки должна обеспечивать поиск соответствующего поля или полей в поставщике данных и возвращение отображаемой строки. Если это свойство опускается, в программе Flex применяется содержимое поля или атрибута, определенное с помощью свойства <codeph>labelField</codeph>. Установка данного свойства приводит к игнорированию любого значения свойства <codeph>labelField.</codeph> Свойство <codeph>labelFunction</codeph> можно также использовать для обработки форматирования и локализации.
     
      <p>Функция метки принимает отдельный аргумент, являющийся элементом в поставщике данных, и возвращает строку.</p>
      <pre>
      <codeph>myLabelFunction(item:Object):String</codeph> </pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:menuBarItems"><apiName>menuBarItems</apiName><shortdesc>
      Массив, содержащий объекты MenuBarItem, которые обеспечивают визуализацию каждого элемента в строке меню на самом верхнем уровне элемента управления MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/><apiDefaultValue>[ ]
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив, содержащий объекты MenuBarItem, которые обеспечивают визуализацию каждого элемента в строке меню на самом верхнем уровне элемента управления MenuBar. По умолчанию это свойство содержит экземпляры класса MenuBarItem. Не предполагается, что элементы добавляются к массиву <codeph>menuBarItems</codeph> непосредственно. Для добавления новых элементов строки меню их следует добавить непосредственно к поставщику данных элемента управления MenuBar. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:menus"><apiName>menus</apiName><shortdesc>
      Массив, содержащий объекты меню, которые соответствуют всплывающим подменю этого элемента управления MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/><apiDefaultValue>[ ] 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Массив, содержащий объекты меню, которые соответствуют всплывающим подменю этого элемента управления MenuBar. Каждый элемент MenuBar может иметь соответствующий объект меню в массиве, даже если этот элемент не имеет всплывающего подменю. Предварительное заполнение массива <codeph>menus</codeph> не выполняется, меню создаются динамически по мере необходимости. Не предполагается, что элементы добавляются к массиву <codeph>menus</codeph> непосредственно. Для добавления новых всплывающих меню их следует добавить непосредственно к поставщику данных элемента управления MenuBar.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Объект, обеспечивающий доступ к данным и управление ими в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      Объект, обеспечивающий доступ к данным и управление ими в поставщике данных. Элемент управления MenuBar делегирует информацию о своих данных в дескриптор данных. Затем эти данные используются для анализа и перемещения источника данных. Дескриптор данных, определенный для MenuBar, используется во всех нижестоящих меню и подменю. 
     
      <p>При указании этого свойства в качестве атрибута в MXML необходимо использовать ссылку на дескриптор данных, а не на имя строки дескриптора. Для установки свойства применяйте следующий формат:</p>
     
     <pre>&lt;mx:MenuBar id="menubar" dataDescriptor="{new MyCustomDataDescriptor()}"/></pre>
     
      <p>В качестве альтернативы, в MXML свойство может быть указано в качестве вложенного подтега, как представлено в примере:</p>
     
      <pre>&lt;mx:MenuBar>
      &lt;mx:dataDescriptor>
         &lt;myCustomDataDescriptor>
      &lt;/mx:dataDescriptor>
      ...</pre>
     
      <p>Значением по умолчанию является внутренний экземпляр класса DefaultDataDescriptor.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Иерархия объектов, которые отображаются в качестве элементов MenuBar и меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Иерархия объектов, которые отображаются в качестве элементов MenuBar и меню. Все элементы, нижестоящие по отношению к самому верхнему уровню, становятся элементами MenuBar, и их нижестоящие элементы становятся элементами меню и подменю. Элемент управления MenuBar выполняет обработку исходного объекта данных следующим образом:
      <p>
      <ul>
      <li>Строка, содержащая допустимый текст XML, преобразуется в объект XML.</li>
      <li>XMLNode преобразуется в объект XML.</li>
      <li>XMLList преобразуется в XMLListCollection.</li>
      <li>Любой объект, реализующий интерфейс ICollectionView, приводится к ICollectionView.</li>
      <li>Массив преобразуется в ArrayCollection.</li>
      <li>Объект другого типа включается в массив, причем объект становится единственным значением.</li>
      </ul>
      </p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:hasRoot:get"><apiName>hasRoot</apiName><shortdesc conref="mx.controls.Menu#hasRoot">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.controls.Menu#hasRoot">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:iconField:get"><apiName>iconField</apiName><shortdesc>
      Имя поля в поставщике данных, который определяет значок, отображаемый для каждого элемента меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в поставщике данных, который определяет значок, отображаемый для каждого элемента меню. По умолчанию MenuBar не пытается отобразить значки с текстом в элементе меню. Однако путем указания поля значка можно определить графический элемент, который создается и отображается в качестве значка для элемента меню. 
     
      <p>Средство визуализации MenuItemRenderer выполняет в объекте поставщика данных поиск свойства имени, предоставленного как свойство <codeph>iconField</codeph>. Если значением этого свойства является класс, то оно реализует этот класс и ожидает, что он станет экземпляром IFlexDisplayObject. Если значением свойства является строка, определяется, существует ли в приложении класс с этим именем. Если такой класс не найден, выполняется поиск свойства в документе с этим именем и ожидается отображение этого свойства в классе.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:labelField:get"><apiName>labelField</apiName><shortdesc>
      Имя поля в поставщике данных, определяющего текст, который должен отображаться для каждого элемента меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><label>to specify the label attribute in an E4X XML Object 
      as the text to display for each menu item. 
     
      Setting the <code>labelFunction</code> property overrides this property.
     
      </label></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в поставщике данных, определяющего текст, который должен отображаться для каждого элемента меню. Если поставщиком данных является массив строк, каждое строковое значение используется в качестве метки. Если поставщиком данных является объект XML E4X, необходимо явным образом установить это свойство. Например, можно использовать </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:menuBarItemRenderer:get"><apiName>menuBarItemRenderer</apiName><shortdesc>
      Средство визуализации элементов, используемое элементом управления MenuBar на самом верхнем уровне в строке меню элемента управления MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier><apiDefaultValue>"mx.controls.menuClasses.MenuBarItem"
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Средство визуализации элементов, используемое элементом управления MenuBar на самом верхнем уровне в строке меню элемента управления MenuBar. 
     
      <p>Можно определить средство визуализации элементов для всплывающих подменю элемента управления MenuBar. Поскольку каждое всплывающее подменю – экземпляр элемента управления Menu, используется класс MenuItemRenderer для определения средства визуализации элементов всплывающих подменю. В целях настройки средства визуализации элементов для всплывающего подменю следует обратиться к объекту меню с использованием свойства <codeph>menus</codeph>. </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.menuClasses.xml#MenuBarItem"><linktext>mx.controls.menuClasses.MenuBarItem</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:protected:menuBarItemStyleFilters:get"><apiName>menuBarItemStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из MenuBar в элементы menuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из MenuBar в элементы menuBar.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:MenuBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Индекс в элементе управления MenuBar для открытого в данный момент меню или для меню, которое было открыто последним, если ни одно из меню не открыто.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Индекс в элементе управления MenuBar для открытого в данный момент меню или для меню, которое было открыто последним, если ни одно из меню не открыто.    
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:MenuBar:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Логический флаг, указывающий, отобразить ли корневой узел поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Логический флаг, указывающий, отобразить ли корневой узел поставщика данных. Если поставщик данных имеет корневой узел, и свойство <codeph>showRoot</codeph> имеет значение <codeph>false</codeph>, элемент управления MenuBar соответствует непосредственно нижестоящим элементам корневого узла. Этот флаг не влияет на поставщики данных без корневых узлов, такие как списки или массивы. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#MenuBar/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:VSlider"><apiName>VSlider</apiName><shortdesc>	
  Элемент управления VSlider дает пользователям возможность выбирать значение путем перемещения ползунка между конечными точками полосы прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:VSlider" replacement="spark.components.VSlider" since="4.0">
	</Alternative><styles><style enumeration="left,top,right,bottom" inherit="no" name="dataTipPlacement" owner="mx.controls:VSlider" playerVersion="Flash9" type="String">
<description>
  Расположение всплывающей подсказки относительно ползунка. Возможны значения <codeph>left</codeph>, <codeph>right</codeph>, <codeph>top</codeph> и <codeph>bottom</codeph>.
  
  </description>
<default>"left"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VSlider&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:VSlider
    <strong>Styles</strong>
    dataTipPlacement="top"
  /&gt;
  </pre>
  </p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.sliderClasses:Slider</apiBaseClassifier></apiClassifierDef><apiDesc>	
  Элемент управления VSlider дает пользователям возможность выбирать значение путем перемещения ползунка между конечными точками полосы прокрутки. Текущее значение ползунка определяется относительным местоположением ползунка между конечными точками, соответствующими минимальному и максимальному значениям ползунка.
 
  <p>Ползунок может предоставлять непрерывный диапазон значений от минимальных до максимальных значений или может быть ограничен значениями в определенных интервалах от минимальных до максимальных значений. С его помощью возможно отображение делений в указанных интервалах полосы прокрутки. Эти деления не зависят от разрешенных значений ползунка. Также для отображения текущего значения можно использовать всплывающую подсказку.</p>
  	
  <p>Элемент VSlider ориентирован по вертикали. Полоса прокрутки располагается от нижней части до верхней, а метки и деления размещаются в левой или правой части полосы.</p>
 
  <p>Элемент управления VSlider по умолчанию имеет следующие характеристики:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Высота – 250 пикселей, ширина является достаточной для размещения ползунка и всех связанных меток</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>Отсутствует</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не задан</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleImageVSlider.mxml"><swfblock conref="examples/SimpleImageVSlider.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#HSlider"><linktext>mx.controls.HSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.controls.sliderClasses.xml#SliderThumb"><linktext>mx.controls.sliderClasses.SliderThumb</linktext></link><link href="mx.controls.sliderClasses.xml#SliderDataTip"><linktext>mx.controls.sliderClasses.SliderDataTip</linktext></link><link href="mx.controls.sliderClasses.xml#SliderLabel"><linktext>mx.controls.sliderClasses.SliderLabel</linktext></link></related-links><apiConstructor id="mx.controls:VSlider:VSlider"><apiName>VSlider</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ProgressBarDirection"><apiName>ProgressBarDirection</apiName><shortdesc>
  Класс ProgressBarDirection определяет значения для свойства direction класса ProgressBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ProgressBarDirection определяет значения для свойства <codeph>direction</codeph> класса ProgressBar.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarDirection:LEFT"><apiName>LEFT</apiName><shortdesc>
	  Указывает заполнение индикатора выполнения справа налево.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>left</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает заполнение индикатора выполнения справа налево.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarDirection:RIGHT"><apiName>RIGHT</apiName><shortdesc>
	  Указывает заполнение индикатора выполнения слева направо.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>right</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает заполнение индикатора выполнения слева направо.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HScrollBar"><apiName>HScrollBar</apiName><shortdesc>
  Элемент управления HScrollBar (горизонтальная полоса прокрутки) позволяет управлять частью данных, отображаемых при наличии слишком большого объема данных, которые не помещаются в области отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HScrollBar" replacement="spark.components.HScrollBar" since="4.0">
	</Alternative><styles><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:HScrollBar" playerVersion="Flash9" type="Number">
<description>
  Количество миллисекунд между событиями <codeph>buttonDown</codeph> при нажатии и удержании пользователем кнопки мыши на кнопке. Значением по умолчанию является 35.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:HScrollBar" playerVersion="Flash9" type="Number">
<description>
  Число миллисекунд, указывающее время ожидания после первого события <codeph>buttonDown</codeph> перед повторением события<codeph>buttonDown</codeph> в <codeph>repeatInterval</codeph>. Значением по умолчанию является 500.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:HScrollBar&gt;</code> tag inherits all of the
  tag attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:HScrollBar
    <strong>Styles</strong>
    repeatDelay="500"
    repeatInterval="35"
 
    <strong>Events</strong>
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.scrollClasses:ScrollBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления HScrollBar (горизонтальная полоса прокрутки) позволяет управлять частью данных, отображаемых при наличии слишком большого объема данных, которые не помещаются в области отображения. Этот элемент управления расширяет основной элемент управления ScrollBar. 
  
  <p>Несмотря на то, что можно использовать элемент управления HScrollBar в качестве автономного элемента управления, обычно он присоединяется как часть другой группы компонентов для предоставления функциональных возможностей прокрутки.</p>
 
  <p>Компонент ScrollBar состоит из четырех частей: двух кнопок со стрелками, полосы прокрутки и ползунка. Положение ползунка и отображение кнопок зависят от текущего состояния элемента управления. Элемент управления ScrollBar использует параметры для вычисления состояния отображения:</p>
 
  <ul>
    <li>Минимальное значение диапазона.</li>
    <li>Максимальное значение диапазона.</li>
    <li>Текущая позиция должна находиться в диапазоне от минимальных до максимальных значений.</li>
    <li>Размер области просмотра представляет число одновременно отображаемых элементов в диапазоне. Число элементов должно быть меньше или равно диапазону, где диапазоном является набор значений от минимальных значений диапазона до его максимальных значений.</li>
  </ul>
 
  </apiDesc><example conref="HScrollBarExample.mxml"><swfblock conref="examples/HScrollBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.scrollClasses.xml#ScrollBar"><linktext>mx.controls.scrollClasses.ScrollBar</linktext></link></related-links><adobeApiEvent id="mx.controls:HScrollBar_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Передается при прокрутке элемента управления ScrollBar с помощью инициированной пользователем операции или программным путем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при прокрутке элемента управления ScrollBar с помощью инициированной пользователем операции или программным путем. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:HScrollBar:HScrollBar"><apiName>HScrollBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ProgressBarMode"><apiName>ProgressBarMode</apiName><shortdesc>
  Класс ProgressBarMode определяет значения для свойства mode класса ProgressBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ProgressBarMode определяет значения для свойства <codeph>mode</codeph> класса ProgressBar.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#ProgressBar"><linktext>mx.controls.ProgressBar</linktext></link></related-links><apiValue id="mx.controls:ProgressBarMode:EVENT"><apiName>EVENT</apiName><shortdesc>
	  Элемент управления, указанный свойством source, должен передавать события progress и completed.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>event</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Элемент управления, указанный свойством <codeph>source</codeph>, должен передавать события <codeph>progress</codeph> и <codeph>completed</codeph>. Эти события используются элементом ProgressBar для обновления состояния.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarMode:MANUAL"><apiName>MANUAL</apiName><shortdesc>
	  Состояние ProgressBar обновляется вручную.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>manual</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Состояние ProgressBar обновляется вручную. В этом режиме указываются свойства <codeph>minimum</codeph> и <codeph>maximum</codeph>, а также применяется метод <codeph>setProgress()</codeph> для указания состояния. Этот режим часто используется, если для свойства <codeph>indeterminate</codeph> установлено значение <codeph>true</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ProgressBarMode:POLLED"><apiName>POLLED</apiName><shortdesc>
	  Свойство source должно указывать объект, представляющий методы getBytesLoaded() и getBytesTotal().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>polled</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Свойство <codeph>source</codeph> должно указывать объект, представляющий методы <codeph>getBytesLoaded()</codeph> и <codeph>getBytesTotal()</codeph>. Элемент управления ProgressBar вызывает эти методы для обновления своего состояния.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Tree"><apiName>Tree</apiName><shortdesc>
  Элемент управления Tree позволяет пользователю просматривать иерархические данные, упорядоченные в виде дерева c возможностью расширения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Цвет текста при выборе строки пользователем. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Цвет текста при наведении курсора пользователем на строку. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:Tree" playerVersion="Flash9" type="Function">
<description>
  Ссылка на функцию <codeph>easingFunction</codeph>, используемую для управления программируемым созданием промежуточных кадров.
 
  <p>По умолчанию используется значение <codeph>undefined</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionDisabledColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Определяет отключенный цвет элемента списка.
 
  </description>
<default>0xDDDDDD
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Цвет фона при выделении пользователем ссылки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:Tree" playerVersion="Flash9" type="uint">
<description>
  Цвет фона при наведении пользователем указателя мыши на ссылку. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:Tree" playerVersion="Flash9" type="Function">
<description>
  Функция замедления для управления анимацией компонентов.
 
  <p>По умолчанию используется значение <codeph>undefined</codeph>.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Длина открытого или закрытого перехода в миллисекундах. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="indentation" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Отступ для каждого уровня дерева в пикселях.
 
  </description>
<default>17
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="folderClosedIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Указывает значок закрытой папки для элемента ветви дерева. В MXML для установки значений этого свойства используется следующий синтаксис: <codeph>folderClosedIcon="@Embed(source='b.jpg');"</codeph>. Значением по умолчанию является символ TreeFolderClosed в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="folderOpenIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Указывает значок открытой папки для элемента ветви дерева. В MXML для установки значений этого свойства используется следующий синтаксис: <codeph> folderOpenIcon="@Embed(source='a.jpg');"</codeph>. Значением по умолчанию является символ TreeFolderOpen в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="disclosureClosedIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Указывает значок, который отображается рядом с вышестоящим закрытым элементом таким образом, что его нижестоящие элементы не отображаются (подчиненное дерево свернуто). Значением по умолчанию является символ TreeDisclosureClosed в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="disclosureOpenIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Указывает значок, отображаемый рядом с вышестоящим открытым элементом таким образом, что отображаются все его нижестоящие элементы. Значением по умолчанию является символ TreeDisclosureOpen в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="EmbeddedFile" inherit="no" name="defaultLeafIcon" owner="mx.controls:Tree" playerVersion="Flash9" type="Class">
<description>
  Указывает значок по умолчанию для элемента листа. В MXML для установки значений этого свойства используется следующий синтаксис: <codeph> defaultLeafIcon="@Embed(source='c.jpg');"</codeph>. Значением по умолчанию является символ TreeNodeIcon в файле Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="depthColors" owner="mx.controls:Tree" playerVersion="Flash9" type="Array">
<description>
  Массив цветов, используемых в элементе управления Tree в порядке убывания.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:Tree" playerVersion="Flash9" type="Array">
<description>
  Цвета строк в образце с чередованием цветов. Значением может быть массив из двух или более цветов. Если свойство не указано, используется только свойство <codeph>backgroundColor</codeph>.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Tree" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The &lt;mx:Tree&gt; tag inherits all the tag attributes of its superclass, and
  adds the following tag attributes:
  </p>
  <pre>
  &lt;mx:Tree
    <b>Properties</b>
    dataDescriptor="<i>Instance of DefaultDataDescriptor</i>"
    dataProvider="null"
    dragMoveEnabled="true|false"
    firstVisibleItem="<i>First item in the control</i>"
    hasRoot="false|true"
    itemIcons="null"
    maxHorizontalScrollPosition="0"
    openItems="null"
    showRoot="true|false"
    &nbsp;
    <b>Styles</b>
    alternatingItemColors="undefined"
    backgroundDisabledColor="0xDDDDDD"
    defaultLeafIcon="<i>'TreeNodeIcon' symbol in Assets.swf</i>"
    depthColors="undefined"
    disclosureClosedIcon="<i>'TreeDisclosureClosed' symbol in Assets.swf</i>"
    disclosureOpenIcon="<i>'TreeDisclosureOpen' symbol in Assets.swf</i>"
    folderClosedIcon="<i>'TreeFolderClosed' symbol in Assets.swf</i>"
    folderOpenIcon="<i>'TreeFolderOpen' symbol in Assets.swf</i>"
    indentation="17"
    openDuration="250"
    openEasingFunction="undefined"
    paddingLeft="2"
    paddingRight="0"
    rollOverColor="0xAADEFF"
    selectionColor="0x7FCDFE"
    selectionDisabledColor="0xDDDDDD"
    selectionEasingFunction="undefined"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    &nbsp;
    <b>Events</b>
    change="<i>No default</i>"
    itemClose="<i>No default</i>"
    itemOpen="<i>No default</i>"
    itemOpening="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls:List</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Tree позволяет пользователю просматривать иерархические данные, упорядоченные в виде дерева c возможностью расширения. Каждый элемент в дереве может быть листом или ветвью. Элементом листа является конечная точка в дереве. Элемент ветви может содержать лист или элементы ветви или может быть пустым.
 
  <p>По умолчанию лист представляется текстовой меткой рядом со значком файла. Ветвь представляется текстовой меткой рядом со значком папки с треугольником раскрытия, который пользователь может открыть для отображения нижестоящих элементов.</p>
  
  <p>Класс Tree использует объект ITreeDataDescriptor или ITreeDataDescriptor2 для анализа и обработки поставщика данных. Дескриптор данных дерева по умолчанию, объект класса DefaultDataDescriptor, поддерживает классы XML и Object. Поставщик данных класса Object должен иметь все нижестоящие элементы в полях <codeph>children</codeph>.
  </p>
 
  <p>Для элемента управления Tree по умолчанию установлены следующие характеристики размеров:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина является достаточной для размещения значка, метки и треугольника развертывания (если имеется) для самого широкого узла в первых семи отображаемых (несвернутых) строках и на семь строк в высоту, где высота каждой строки составляет 20 пикселей. При наличии полосы прокрутки ширина полосы прокрутки не учитывается при вычислении ширины.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>5000 на 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TreeExample.mxml"><swfblock conref="examples/TreeExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.treeClasses.xml#ITreeDataDescriptor"><linktext>mx.controls.treeClasses.ITreeDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#ITreeDataDescriptor2"><linktext>mx.controls.treeClasses.ITreeDataDescriptor2</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link></related-links><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_OPENING_itemOpening"><apiName>itemOpening</apiName><shortdesc>
  Обрабатывается при инициировании открытия или закрытия ветви.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_OPENING</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Обрабатывается при инициировании открытия или закрытия ветви.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_OPEN_itemOpen"><apiName>itemOpen</apiName><shortdesc>
  Передается при открытии или раскрытии ветви.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_OPEN</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при открытии или раскрытии ветви.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Tree_mx.events.TreeEvent.ITEM_CLOSE_itemClose"><apiName>itemClose</apiName><shortdesc>
  Передается при закрытии или сворачивании ветви.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.TreeEvent.ITEM_CLOSE</apiEventType><adobeApiEventClassifier>mx.events.TreeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при закрытии или сворачивании ветви.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Tree:Tree"><apiName>Tree</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Tree:protected:dragCompleteHandler"><apiName>dragCompleteHandler</apiName><shortdesc>
      Обрабатывает события DragEvent.DRAG_COMPLETE.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Объект DragEvent.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события <codeph>DragEvent.DRAG_COMPLETE</codeph>. Этот метод удаляет элемент из поставщика данных.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:dragDropHandler"><apiName>dragDropHandler</apiName><shortdesc>
      Обрабатывает события DragEvent.DRAG_DROP.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:DragEvent</apiOperationClassifier><apiDesc>Объект DragEvent.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает события <codeph>DragEvent.DRAG_DROP</codeph>. Этот метод скрывает обратную связь перетаскивания посредством вызова метода <codeph>hideDropFeedback()</codeph>.
     
      <p>Если операция <codeph>COPY</codeph>, то этот метод выполняет полное копирование объекта посредством вызова метода <codeph>ObjectUtil.copy()</codeph> и заменяет свойство <codeph>uid</codeph> копии (если существует) новым значением посредством вызова метода <codeph>UIDUtil.createUID()</codeph>.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.utils.xml#ObjectUtil"><linktext>mx.utils.ObjectUtil</linktext></link><link href="mx.utils.xml#UIDUtil"><linktext>mx.utils.UIDUtil</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:Tree:expandChildrenOf"><apiName>expandChildrenOf</apiName><shortdesc>
      Открывает либо закрывает все узлы, расположенные ниже указанного элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Начальный элемент.
     
      </apiDesc></apiParam><apiParam><apiItemName>open</apiItemName><apiType value="Boolean"/><apiDesc>Выполняет операцию открытия или закрытия. Укажите значение <codeph>true</codeph> для открытия элементов и <codeph>false</codeph> для их закрытия.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Открывает либо закрывает все узлы, расположенные ниже указанного элемента. При установке свойства <codeph>dataProvider</codeph>, а затем немедленном вызове метода <codeph>expandChildrenOf()</codeph> возможно некорректное поведение. Следует дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:expandItem"><apiName>expandItem</apiName><shortdesc>
      Открывает или закрывает элемент ветви.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Используемый элемент.
     
      </apiDesc></apiParam><apiParam><apiItemName>open</apiItemName><apiType value="Boolean"/><apiDesc>Укажите значение <codeph>true</codeph> для открытия, либо <codeph>false</codeph> для закрытия.
     
      </apiDesc></apiParam><apiParam><apiItemName>animate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Укажите <codeph>true</codeph> для анимации перехода. (Примечание. Если ветвь имеет более двадцати нижестоящих элементов, при первом открытии анимация отключается для повышения производительности.)
     
      </apiDesc></apiParam><apiParam><apiItemName>dispatchEvent</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, запускает ли дерево событие <codeph>open</codeph> по окончании выполнения открытой анимации.
     
      </apiDesc></apiParam><apiParam><apiItemName>cause</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Событие (если имеется), инициировавшее операцию открытия элемента.
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Открывает или закрывает элемент ветви. При открытии элемента ветви он восстанавливает открытые и закрытые состояния ее нижестоящих ветвей, если они уже открыты. При установке свойства <codeph>dataProvider</codeph>, а затем немедленном вызове метода <codeph>expandItem()</codeph> возможно некорректное поведение. Следует дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:getParentItem"><apiName>getParentItem</apiName><shortdesc>
      Возвращает известный вышестоящий элемент для нижестоящего элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Вышестоящий элемент этого элемента.
      
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Элемент, для которого требуется получить вышестоящий элемент.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает известный вышестоящий элемент для нижестоящего элемента. Этот метод возвращает значение только в том случае, если элемент был или является в данный момент видимым. Элементы верхнего уровня имеют вышестоящие элементы со значением <codeph>null</codeph>. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:initListData"><apiName>initListData</apiName><shortdesc>
      Инициализирует объект TreeListData, используемый средством визуализации элементов дерева.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Элемент для выполнения визуализации.
      </apiDesc></apiParam><apiParam><apiItemName>treeListData</apiItemName><apiOperationClassifier>mx.controls.treeClasses:TreeListData</apiOperationClassifier><apiDesc>Класс TreeListDataItem, используемый при визуализации элемента.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Инициализирует объект TreeListData, используемый средством визуализации элементов дерева.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:isItemOpen"><apiName>isItemOpen</apiName><shortdesc>
      Возвращает true, если указанный элемент ветви открыт (в нем отображаются нижестоящие элементы).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Значение true, если элемент открыт и false, если он закрыт.
     
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Элемент, подлежащий проверке.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает <codeph>true</codeph>, если указанный элемент ветви открыт (в нем отображаются нижестоящие элементы).
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Создает новый экземпляр TreeListData и заполняет поле в зависимости от элемента поставщика входных данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Вновь созданный объект ListData.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Элемент поставщика данных, используемый для заполнения свойства ListData.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Уникальный идентификатор элемента.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Индекс элемента в поставщике данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Создает новый экземпляр TreeListData и заполняет поле в зависимости от элемента поставщика входных данных. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Tree:setItemIcon"><apiName>setItemIcon</apiName><shortdesc>
      Устанавливает связанный значок для элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Используемый элемент.
      </apiDesc></apiParam><apiParam><apiItemName>iconID</apiItemName><apiType value="Class"/><apiDesc>Идентификатор связывания для закрытого значка (или значка листа).
      </apiDesc></apiParam><apiParam><apiItemName>iconID2</apiItemName><apiType value="Class"/><apiDesc>Идентификатор связи для открытого значка.
     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает связанный значок для элемента. Выполнение вызова этого метода отменяет свойства <codeph>iconField</codeph> и <codeph>iconFunction</codeph> для этого элемента, если этот элемент является элементом листа. Элементы ветви не используют свойства <codeph>iconField</codeph> и <codeph>iconFunction</codeph>. Они используют свойства <codeph>folderOpenIcon</codeph> и <codeph>folderClosedIcon</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Tree:itemIcons"><apiName>itemIcons</apiName><shortdesc>
      Объект, указывающий значки для элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/><apiDefaultValue>undefined
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект, указывающий значки для элементов. Каждая запись в объекте имеет имя поля, являющееся UID элемента и значение, являющееся объектом со следующим форматом:
      <pre>
      {iconID: <i>Class</i>, iconID2: <i>Class</i>}
      </pre>
      Значение поля <codeph>iconID</codeph> является классом значка для закрытого элемента или элемента листа и <codeph>iconID2</codeph> является классом значка для открытого элемента.
     
      <p>Это свойство предназначено для разрешения инициализации значков элементов. Изменения для этого массива после инициализации автоматически не обнаружены. Для динамического изменения элементов используется метод <codeph>setItemIcon()</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/setItemIcon()"><linktext>setItemIcon()</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Возвращает текущий интерфейс ITreeDataDescriptor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.treeClasses:ITreeDataDescriptor</apiValueClassifier><apiDefaultValue>DefaultDataDescriptor
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Возвращает текущий интерфейс ITreeDataDescriptor.
     
       </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:dragMoveEnabled:get"><apiName>dragMoveEnabled</apiName><shortdesc>
      Указывает, что в ходе операции перетаскивания можно переместить элементы на место элементов, только что скопированных из элемента управления Tree.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, что в ходе операции перетаскивания можно переместить элементы на место элементов, только что скопированных из элемента управления Tree.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:firstVisibleItem:get"><apiName>firstVisibleItem</apiName><shortdesc>
      Элемент, отображаемый в данное время в верхней строке дерева.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Элемент, отображаемый в данное время в верхней строке дерева. В зависимости от способа открытия, закрытия и выполнения прокрутки верхняя строка может содержать, например, девятый элемент в списке видимых в данный момент элементов, который, в свою очередь, представляет корневые элементы третьего уровня. Установка этого свойства аналогична установке verticalScrollPosition элемента управления List. Если элемент не является в настоящее время видимым, например, поскольку находится под нераскрытым элементом, то установка этого свойства не приведет к выполнению каких-либо действий.
     
      <p>Примечание. В Flex 1.0 это свойство было введено как XMLNode, несмотря на то, что в действительности оно являлось XMLNode или TreeNode. Теперь в версии 2.0 оно является родовым типом Object и будет возвращать объект того же типа, что и данные, содержащиеся в dataProvider.</p>
     
      <p>Значением по умолчанию является первый элемент в элементе управления Tree.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:hasRoot:get"><apiName>hasRoot</apiName><shortdesc>
      Указывает, что текущее свойство dataProvider имеет корневой элемент. Например, отдельный узел верхнего уровня в иерархической структуре.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Указывает, что текущее свойство dataProvider имеет корневой элемент. Например, отдельный узел верхнего уровня в иерархической структуре. XML и Object являются примерами типов, имеющих корень. Списки и массивы не имеют корня.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/showRoot"><linktext>showRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:maxHorizontalScrollPosition:get"><apiName>maxHorizontalScrollPosition</apiName><shortdesc>
      Максимальное значение для свойства maxHorizontalScrollPosition элемента управления Tree.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Максимальное значение для свойства <codeph>maxHorizontalScrollPosition</codeph> элемента управления Tree. В отличие от свойства <codeph>maxHorizontalScrollPosition</codeph> в элементе управления List, это свойство изменяется элементом управления Tree, когда открытые и закрытые элементы и элементы в дереве становятся видимыми или скрыты (например, при прокрутке).
     
      <p>При установке этого свойства для самого широкого известного элемента в dataProvider элемент управления Tree изменяет его таким образом, чтобы даже в случае расположения самого широкого элемента в дереве на четыре уровня ниже пользователь смог увидеть его с помощью полосы прокрутки. В результате несмотря на то что выполняется считывание того же самого значения для устанавливаемого свойства <codeph>maxHorizontalScrollPosition</codeph>, фактическое значение не обязательно будет использоваться элементом управления Tree.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:openItems:get"><apiName>openItems</apiName><shortdesc>
      Элементы, которые были открыты или установлены как открытые.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Элементы, которые были открыты или установлены как открытые.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Tree:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Устанавливает видимость корневого элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Устанавливает видимость корневого элемента. Если данные dataProvider имеют корневой узел, и это свойство установлено равным <codeph>false</codeph>, то элемент управления Tree не отображает корневой элемент. Отображаются только нижестоящие элементы корневого элемента. Этот флаг не влияет на dataProviders без корневых узлов, таких как списки или массивы. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Tree/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Tree:dataProvider:set"><apiName>dataProvider</apiName><shortdesc>
      Объект, содержащий отображаемые данные.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект, содержащий отображаемые данные. При назначении значения для этого свойства класс Tree обрабатывает исходный объект данных следующим образом:
      <p>
      <ul><li>Строка, содержащая допустимый текст XML, преобразуется в XMLListCollection.</li>
      <li>Класс XMLNode преобразуется в XMLListCollection.</li>
      <li>XMLList преобразуется в XMLListCollection.</li>
      <li>Любой объект, реализующий интерфейс ICollectionView, приводится к ICollectionView.</li>
      <li>Массив преобразуется в ArrayCollection.</li>
      <li>Объект другого типа включается в массив, причем объект становится единственной записью.</li></ul>
      </p>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ComboBase"><apiName>ComboBase</apiName><shortdesc>
  Класс ComboBase является базовым классом для элементов управления, отображающих текст в текстовом поле и имеющих кнопку с раскрывающимся списком, где пользователь может выбрать текст для отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="textInputStyleName" owner="mx.controls:ComboBase" playerVersion="Flash9" type="String">
<description>
  Объявление стиля для внутреннего подкомпонента TextInput, отображающего текущий выбор. Если значение не указано, то подчиненный компонент TextInput использует текстовые стили по умолчанию, определенные классом ComboBase.
 
  </description>
<default>""
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textInputClass" owner="mx.controls:ComboBase" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий ITextInput, который используется этим компонентом для ввода текста.
 
  <p>Его можно установить либо для класса mx.core.TextInput (для использования типичного элемента управления Halo TextInput), либо для класса mx.controls.MXFTETextInput (для использования компонента Spark TextInput, основанного на Text Layout Framework, для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.controls.TextInput
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableDisabledSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы при деактивации элемента управления и установке свойства <codeph>editable</codeph> в значение <codeph>true</codeph>. Эта тема оформления используется только классом ComboBox. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableDownSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы при нажатии и удержании кнопки мыши и установке свойства <codeph>editable</codeph> в значение <codeph>true</codeph>. Эта тема оформления используется только классом ComboBox. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableOverSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы при наведении курсора мыши на элемент управления и установке свойства <codeph>editable</codeph> в значение <codeph>true</codeph>. Эта тема оформления используется только классом ComboBox. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableUpSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы, когда указатель мыши не наведен на элемент управления и свойство <codeph>editable</codeph> установлено в значение <codeph>true</codeph>. Эта тема оформления используется только классом ComboBox. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="editableSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы, когда свойство <codeph>editable</codeph> имеет значение <codeph>true</codeph>. Эта тема оформления используется только классом ComboBox. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="disabledSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы при деактивации элемента управления. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin. Для класса ColorPicker значением по умолчанию является класс ColorPickerSkin. Для класса DateField значением по умолчанию является класс ScrollArrowDownSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="downSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы при нажатии и удержании пользователем кнопки мыши. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin. Для класса ColorPicker значением по умолчанию является класс ColorPickerSkin. Для класса DateField значением по умолчанию является класс ScrollArrowDownSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="overSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы при наведении указателя мыши на элемент управления. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin. Для класса ColorPicker значением по умолчанию является класс ColorPickerSkin. Для класса DateField значением по умолчанию является класс ScrollArrowDownSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="upSkin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы, если указатель мыши не наведен на элемент управления. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:ComboBase" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления по умолчанию для фона и границы. Значение по умолчанию для класса ComboBase отсутствует. Для класса ComboBox значением по умолчанию является класс ComboBoxArrowSkin.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет любого символа компонента. Примеры включают флажок элемента управления CheckBox или стрелку на кнопке элемента управления ScrollBar.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет кольца фокуса, если компонент в фокусе.
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет области содержимого компонента.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:ComboBase" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал фона содержимого для данного компонента.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ComboBase&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;<i>mx:tagname</i>
    <b>Properties</b>
    dataProvider="null"
    editable="false|true"
    imeMode="null"
    restrict="null"
    selectedIndex="-1"
    selectedItem="null"
    text=""
    &nbsp;
    <b>Styles</b>
    disabledSkin="<i>Depends on class</i>"
    downSkin="<i>Depends on class</i>"
    editableDisabledSkin="<i>Depends on class</i>"
    editableDownSkin="<i>Depends on class</i>"
    editableOverSkin="<i>Depends on class</i>"
    editableUpSkin="<i>Depends on class</i>"
    overSkin="<i>Depends on class</i>"
    textInputStyleName="" 
    upSkin="<i>Depends on class</i>"
 
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ComboBase является базовым классом для элементов управления, отображающих текст в текстовом поле и имеющих кнопку с раскрывающимся списком, где пользователь может выбрать текст для отображения. Этот класс ComboBase не используется непосредственно как тег MXML.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.collections.xml#ICollectionView"><linktext>mx.collections.ICollectionView</linktext></link></related-links><apiConstructor id="mx.controls:ComboBase:ComboBase"><apiName>ComboBase</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ComboBase:protected:calculatePreferredSizeFromData"><apiName>calculatePreferredSizeFromData</apiName><shortdesc>
      Определяет значения высоты и ширины по умолчанию для применения их к записям раскрывающегося списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Объект со свойствами <codeph>width</codeph> и <codeph>height</codeph>.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>numItems</apiItemName><apiType value="int"/><apiDesc>Число выбираемых элементов для определения значения.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Определяет значения высоты и ширины по умолчанию для применения их к записям раскрывающегося списка. Каждый подкласс ComboBase должен реализовывать этот метод и возвращать класс Object, содержащий два свойства: <codeph>width</codeph> и <codeph>height</codeph>.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:collectionChangeHandler"><apiName>collectionChangeHandler</apiName><shortdesc>
      Отвечает на изменения поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Класс CollectionEvent, переданный из коллекции.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отвечает на изменения поставщика данных. Компонент скорректирует свойство <codeph>selectedIndex</codeph> при добавлении или удалении компонентов перед выбранным элементом компонента.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#CollectionEvent"><linktext>mx.events.CollectionEvent</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:ComboBase:protected:downArrowButton_buttonDownHandler"><apiName>downArrowButton_buttonDownHandler</apiName><shortdesc>
      Выполняет действие при нажатии кнопки с раскрывающимся списком.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>mx.events:FlexEvent</apiOperationClassifier><apiDesc>Событие, запускающееся при нажатии кнопки с раскрывающимся списком.     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Выполняет действие при нажатии кнопки с раскрывающимся списком. Это абстрактная реализация базового класса, которая не приводит к выполнению каких-либо действий и переопределяется подклассами.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:itemToUID"><apiName>itemToUID</apiName><shortdesc>
      Определяет UID для элемента dataProvider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Уникальный идентификатор.
      
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Элемент dataProvider.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Определяет UID для элемента dataProvider. Для каждого элемента dataProvider должен быть или будет назначен уникальный идентификатор (UID).
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:measure"><apiName>measure</apiName><shortdesc>
      Определяет свойства measuredWidth и measuredHeight для элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Определяет свойства<codeph>measuredWidth</codeph> и <codeph>measuredHeight</codeph> для элемента управления. Измеренная ширина равна ширине наиболее широкого текста в <codeph>dataProvider</codeph> плюс ширина кнопки с раскрывающимся списком. Измеренная высота больше высоты кнопки или текста. Если поставщик данных не установлен или отсутствуют элементы в поставщике данных, свойство <codeph>measuredWidth</codeph> устанавливается в значение <codeph>UIComponent.DEFAULT_MEASURED_WIDTH</codeph> и свойство <codeph>measuredHeight</codeph> устанавливается в значение <codeph>UIComponent.DEFAULT_MEASURED_HEIGHT</codeph>.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/measure()"><linktext>mx.core.UIComponent.measure()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:ComboBase:protected:textInput_changeHandler"><apiName>textInput_changeHandler</apiName><shortdesc>
      Обрабатывает изменения элемента TextInput, служащего редактируемым текстовым полем в компоненте.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Событие, возникающее при каждом изменении текста в элементе управления.     
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обрабатывает изменения элемента TextInput, служащего редактируемым текстовым полем в компоненте. Метод устанавливает <codeph>selectedIndex</codeph> в значение «-1» (и, следовательно, <codeph>selectedItem</codeph> в значение <codeph>null</codeph>).
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBase:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Размеры и позиции внутренних компонентов в соответствии с указанной шириной и высотой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Размеры и позиции внутренних компонентов в соответствии с указанной шириной и высотой. Кнопка с раскрывающимся списком располагается справа, а текстовое поле заполняет оставшуюся область.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.controls:ComboBase:protected:collection"><apiName>collection</apiName><shortdesc>
      ICollectionView элементов, отображаемых этим компонентом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:ICollectionView</apiValueClassifier></apiValueDef><apiDesc>
      ICollectionView элементов, отображаемых этим компонентом.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:iterator"><apiName>iterator</apiName><shortdesc>
      Основной интерфейс IViewCursor, используемый для получения элементов dataProvider и передачи элементов в средства визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.collections:IViewCursor</apiValueClassifier></apiValueDef><apiDesc>
      Основной интерфейс IViewCursor, используемый для получения элементов dataProvider и передачи элементов в средства визуализации. В конце любой последовательности кода его необходимо разместить на экране в крайнем верхнем видимом элементе.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:textInput"><apiName>textInput</apiName><shortdesc>
      Внутренний подчиненный компонент TextInput, отображающий текущий выбор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:ITextInput</apiValueClassifier></apiValueDef><apiDesc>
      Внутренний подчиненный компонент TextInput, отображающий текущий выбор.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:arrowButtonStyleFilters:get"><apiName>arrowButtonStyleFilters</apiName><shortdesc>
      Набор стилей, передаваемый из объекта ComboBase в кнопку со стрелкой вниз.
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей, передаваемый из объекта ComboBase в кнопку со стрелкой вниз.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:protected:borderMetrics:get"><apiName>borderMetrics</apiName><shortdesc>
      Возвращает объект EdgeMetrics, имеющий четыре свойства: left, top, right и bottom.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:EdgeMetrics</apiValueClassifier></apiValueDef><apiDesc>
      Возвращает объект EdgeMetrics, имеющий четыре свойства: <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph>. Значение каждого свойства равно толщине соответствующей стороны границы в пикселях.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Набор элементов, отображаемых компонентом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор элементов, отображаемых компонентом. Это свойство имеет тип Object, так как полученные классы могут обрабатывать различные типы данных, например, Arrays, XML, ICollectionViews и другие классы. Все они преобразованы в ICollectionView, и ICollectionView возвращается при получении значения этого свойства; устанавливаемое значение невозможно получить, если это не ICollectionView.
     
      <p>Установка этого свойства скорректирует свойство <codeph>selectedIndex</codeph> (и, следовательно, свойство <codeph>selectedItem</codeph>), если <codeph>selectedIndex</codeph> свойство не было установлено. При отсутствии свойства <codeph>prompt</codeph> свойство <codeph>selectedIndex</codeph> будет установлено в значение «0»; в противном случае останется на значении «-1» (индекс, используемый для строки запроса). Если свойство <codeph>selectedIndex</codeph> было установлено и находится вне диапазона нового поставщика данных, возможно неожиданное поведение.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:editable:get"><apiName>editable</apiName><shortdesc>
      Флаг, указывающий на то, что элемент управления доступен для редактирования (это позволяет пользователю непосредственно вводить записи, не указанные в dataProvider) или не доступен для редактирования (что требует от пользователя выбора элементов в dataProvider).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false.
      This property is ignored by the DateField control.
     
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий на то, что элемент управления доступен для редактирования (это позволяет пользователю непосредственно вводить записи, не указанные в dataProvider) или не доступен для редактирования (что требует от пользователя выбора элементов в dataProvider).
     
      <p>Если значение равно <codeph>true</codeph>, то ввод с клавиатуры будет выполнен в доступном для редактирования текстовом поле; в противном случае он используется как комбинация клавиш для выбора элементов в dataProvider.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:imeMode:get"><apiName>imeMode</apiName><shortdesc conref="mx.controls.TextInput#imeMode">
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     </apiDefaultValue></apiValueDef><apiDesc conref="mx.controls.TextInput#imeMode">
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:restrict:get"><apiName>restrict</apiName><shortdesc>
      Набор символов, которые могут или не могут быть введены пользователем в текстовое поле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Набор символов, которые могут или не могут быть введены пользователем в текстовое поле.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/restrict"><linktext>flash.text.TextField.restrict</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Индекс в поставщике данных выбранного элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Индекс в поставщике данных выбранного элемента. При наличии свойства <codeph>prompt</codeph>, значение <codeph>selectedIndex</codeph> можно установить на «-1»для отображения запроса. При отсутствии свойства <codeph>prompt</codeph>, <codeph>selectedIndex</codeph> будет установлено на «0», когда установлено свойство <codeph>dataProvider</codeph>.
     
      <p>Если элемент управления ComboBox доступно для редактирования, то свойство <codeph>selectedIndex</codeph> устанавливается на «-1» при вводе любого текста в текстовое поле.</p>
     
      <p>В отличие от многих других недействительных свойств Flex (их установка не приводит к немедленному выполнению действий), свойства <codeph>selectedIndex</codeph> и <codeph>selectedItem</codeph> являются синхронными, и установка одного оказывает немедленное влияние на другое.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:selectedItem:get"><apiName>selectedItem</apiName><shortdesc>
      Элемент в поставщике данных в selectedIndex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Элемент в поставщике данных в selectedIndex.
     
      <p>Если данные являются объектом или экземпляром класса, то изменение свойств в объекте или экземпляре приводит к изменению объекта <codeph>dataProvider</codeph>, но не обновляет представления, если это не экземпляр объекта Bindablе, он не реализует IpropertyChangeNotifier и не выполняет вызов метода dataProvider.itemUpdated().</p>
     
      Установка свойства <codeph>selectedItem</codeph> приводит к выбору элементом управления ComboBox этого элемента (к отображению его в текстовом поле и установке <codeph>selectedIndex</codeph>) при его наличии в поставщике данных. Если элемент управления ComboBox доступен для редактирования, то свойство <codeph>selectedItem</codeph> имеет значение <codeph>null</codeph> при вводе пользователем в текстовое поле любого текста.
     
      <p>В отличие от многих других недействительных свойств Flex (их установка не приводит к немедленному выполнению действий), свойства <codeph>selectedIndex</codeph> и <codeph>selectedItem</codeph> являются синхронными; установка одного свойства оказывает немедленное влияние на другое.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:text:get"><apiName>text</apiName><shortdesc>
      Содержимое текстового поля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Содержимое текстового поля. Если элемент управления является недоступным для редактирования, установка этого свойства не приведет к выполнению каких-либо действий. Если элемент управления является доступным для редактирования, установка этого свойства устанавливает содержимое текстового поля.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBase:protected:textInputStyleFilters:get"><apiName>textInputStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из объекта ComboBox во введенный текст.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из объекта ComboBox во введенный текст. Эти стили игнорируются при установке свойства стиля <codeph>textInputStyleName</codeph>.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBase:value:get"><apiName>value</apiName><shortdesc>
      Значение выбранного элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Значение выбранного элемента. Если элемент является числом или строкой, то значение является элементом. Если элемент является объектом, то значение является свойством <codeph>data</codeph> (если существует) или свойством <codeph>label</codeph> (если существует).
     
      <p><b>Примечание.</b> Использование свойства <codeph>selectedItem</codeph> рекомендуется для использования этого свойства. Свойство <codeph>value</codeph> существует для обратной совместимости с более ранними приложениями.</p>
     
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:TileList"><apiName>TileList</apiName><shortdesc>
  Элемент управления TileList отображает число элементов, расположенных во фрагментах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:TileList" replacement="spark.components.List" since="4.0">
<description>
  Специфичные для макета компоненты списка в Flex 3 заменены на более общие компоненты списка, принимающие общий макет. Для получения аналогичного поведения новых компонентов списка установите свойство <codeph>layout</codeph> на <codeph>TileLayout</codeph>.
 </description>
	</Alternative><effects><effect event="itemsChange" name="itemsChangeEffect" owner="mx.controls:TileList">
<description>
  Эффект данных, воспроизводимый при выполнении изменений в поставщике данных элемента управления.
 
  <p>Элемент управления TileList по умолчанию не использует эффект данных. Экземпляр класса DefaultTileListEffect необходимо использовать для элемента управления TileList.</p>
 
 </description>
<default>undefined
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:TileList&gt;</code> tag inherits
  all of the tag attributes of its superclass, but ignores the
  <code>variableRowHeight</code> and <code>wordWrap</code> tag attributes.  
  It adds no additional tag attributes.</p>
  
  <pre>
  &lt;mx:TileList/&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:TileBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления TileList отображает число элементов, расположенных во фрагментах. Отображает полосу прокрутки на одной из ее осей для доступа ко всем элементам списка в зависимости от свойства <codeph>direction</codeph>. Размер фрагментов можно установить с помощью свойств <codeph>rowHeight</codeph> и <codeph>columnWidth</codeph>. В качестве альтернативы Flex измеряет средство визуализации элементов для первого элемента в dataProvider и использует этот размер для всех фрагментов.
  
  <p>Элемент управления TileList имеет следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Четыре столбца и четыре строки. При использовании средства визуализации элементов по умолчанию общий размер равен 66 на 126 пикселей.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>5000 на 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TileListExample.mxml"><swfblock conref="examples/TileListExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:TileList:TileList"><apiName>TileList</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:FormItemLabel"><apiName>FormItemLabel</apiName><shortdesc>
  Контейнер FormItem использует объект FormItemLabel для отображения части метки контейнера FormItem.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Label</apiBaseClassifier></apiClassifierDef><apiDesc>
  Контейнер FormItem использует объект FormItemLabel для отображения части метки контейнера FormItem.
 
  <p>Класс FormItemLabel не добавляет функциональные возможности своему суперклассу Label. Вместо этого он позволяет пользователю установить стили в селекторе типов FormItemLabel и установить стили, влияющие на метки во всех контейнерах FormItem.</p>
 
  <p><b>Примечание.</b> Этот класс устарел. Рекомендуемым способом применения стиля к метке FormItem является использование свойства стиля <codeph>labelStyleName</codeph> для класса FormItem.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#FormItem"><linktext>mx.containers.FormItem</linktext></link></related-links><apiConstructor id="mx.controls:FormItemLabel:FormItemLabel"><apiName>FormItemLabel</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:List"><apiName>List</apiName><shortdesc>
  Элемент управления Label отображает вертикальный список элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:List" replacement="spark.components.List" since="4.0">
	</Alternative><effects><effect event="itemsChange" name="itemsChangeEffect" owner="mx.controls:List">
<description>
  Эффект данных, воспроизводимый при выполнении изменений в поставщике данных элемента управления.
 
  <p>По умолчанию элемент управления Label не использует эффект данных.  </p>
 
  </description>
<default>undefined
  
  </default>
<playerversion>Flash 9
  </playerversion>
<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></effect></effects><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:List&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:List
    <b>Properties</b>
    editable="false|true"
    editedItemPosition="<i>No default</i>"
    editorDataField="text"
    editorHeightOffset="0"
    editorUsesEnterKey="false|true"
    editorWidthOffset="0"
    editorXOffset="0"
    editorYOffset="0"
    imeMode="null"    
    itemEditor="TextInput"
    itemEditorInstance="<i>Current item editor</i>"
    rendererIsEditor="false|true"
    
    <b>Styles</b>
    backgroundDisabledColor="0xDDDDDD"
    
    <b>Events</b>
    itemEditBegin="<i>No default</i>"
    itemEditEnd="<i>No default</i>"
    itemEditBeginning="<i>No default</i>"
    itemFocusIn="<i>No default</i>"
    itemFocusOut="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls.listClasses:ListBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Label отображает вертикальный список элементов. Его функциональные возможности очень похожи на возможности элемента формы SELECT в HTML. При наличии большего числа одновременно отображаемых элементов он может отобразить полосу вертикальной прокрутки. Таким образом, пользователь имеет доступ ко всем элементам в списке. Дополнительная полоса горизонтальной прокрутки позволяет пользователю просматривать элементы, если ширины элементов списка недостаточно для их расположения. Пользователь может выбрать один или более элементов из списка в зависимости от значения свойства <codeph>allowMultipleSelection</codeph>.
 
  <p>Для элемента управления List по умолчанию установлены следующие характеристики размеров:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина является достаточной для размещения самой широкой метки в первых семи видимых элементах (или всех визуальных элементов в списке, если их меньше семи); семь строк в высоту, где высота каждой строки составляет 20 пикселей.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>5000 на 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleList.mxml"><swfblock conref="examples/SimpleList.swf"/></example></apiClassifierDetail><related-links><link href="mx.events.xml#ListEvent"><linktext>mx.events.ListEvent</linktext></link></related-links><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><shortdesc>
  Передается, если средство визуализации элементов теряет фокус, что происходит при щелчке кнопкой мыши другого элемента в элементе управления List или вне этого элемента управления, а также при использовании клавиатуры для перехода к другому элементу в элементе управления List или вне этого элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, если средство визуализации элементов теряет фокус, что происходит при щелчке кнопкой мыши другого элемента в элементе управления List или вне этого элемента управления, а также при использовании клавиатуры для перехода к другому элементу в элементе управления List или вне этого элемента управления. Передается только в том случае, если элемент управления List доступен для редактирования.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><shortdesc>
  Передается, когда средство визуализации элементов получает фокус, что происходит при щелчке кнопкой мыши элемента в элементе управления List или при переходе к этому элементу с помощью клавиатуры.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда средство визуализации элементов получает фокус, что происходит при щелчке кнопкой мыши элемента в элементе управления List или при переходе к этому элементу с помощью клавиатуры. Передается только в том случае, если элемент управления List доступен для редактирования.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><shortdesc>
  Передается при завершении по какой-либо причине сеанса редактирования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при завершении по какой-либо причине сеанса редактирования.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><shortdesc>
  Передается при установке свойства editedItemPosition и возможности редактирования элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при установке свойства <codeph>editedItemPosition</codeph> и возможности редактирования элемента.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:List_mx.events.ListEvent.ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><shortdesc>
  Передается, когда пользователь отпускает кнопку мыши при наведении указателя на элемент, выполняет переход с помощью клавиши Tab к элементу управления List или в пределах элемента управления List или каким-либо другим способом пытается редактировать элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь отпускает кнопку мыши при наведении указателя на элемент, выполняет переход с помощью клавиши Tab к элементу управления List или в пределах элемента управления List или каким-либо другим способом пытается редактировать элемент.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:List:List"><apiName>List</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:List:createItemEditor"><apiName>createItemEditor</apiName><shortdesc>
      Создает редактор элемента для средства визуализации элементов по расположению editedItemPosition с использованием редактора, заданного свойством itemEditor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Индекс столбца. Flex устанавливает значение этого свойства для элемента управления равным «0».
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Индекс элемента в поставщике данных для редактирования.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Создает редактор элемента для средства визуализации элементов по расположению <codeph>editedItemPosition</codeph> с использованием редактора, заданного свойством <codeph>itemEditor</codeph>.
     
      <p>Этот метод задает в качестве экземпляра редактора свойство <codeph>itemEditorInstance</codeph>.</p>
     
      <p>Этот метод можно вызвать только из прослушивателя событий для события <codeph>itemEditBegin</codeph>. Для создания редактора в другое время настройте свойство <codeph>editedItemPosition</codeph>, выбрав генерацию события <codeph>itemEditBegin</codeph>.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:createItemRenderer"><apiName>createItemRenderer</apiName><shortdesc>
      Получение соответствующего средства визуализации. Если оно не выбрано, используется средство по умолчанию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>Средство визуализации.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Объект, из которого создается средство визуализации.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Получение соответствующего средства визуализации. Если оно не выбрано, используется средство по умолчанию.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:destroyItemEditor"><apiName>destroyItemEditor</apiName><shortdesc>
      Закрывает редактор элементов, открытый в настоящее время в элементе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Закрывает редактор элементов, открытый в настоящее время в элементе. Как правило, этот метод вызывается только из прослушивателя событий для события <codeph>itemEditEnd</codeph> после того, как метод <codeph>preventDefault()</codeph> уже вызван для предотвращения выполнения прослушивателя событий по умолчанию.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:drawRowBackground"><apiName>drawRowBackground</apiName><shortdesc>
      Используется для отображения фона строки в соответствии с указанной позицией и высотой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Спрайт, который будет включать объект отображения, содержащий графическое изображение для этой строки.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Индекс строки в наборе отображаемых строк. Расчет заголовка не выполняется; самая верхняя видимая строка имеет индекс 0. Используется для отслеживания объектов, используемых для отображения фона, что позволяет определенной строке повторно использовать тот же самый объект отображения даже в случае изменения индекса элемента, визуализируемого строкой.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Предлагаемое положение фонового изображения по оси y.
     
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Предлагаемая высота индикатора.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Предлагаемый цвет индикатора.
     
      </apiDesc></apiParam><apiParam><apiItemName>dataIndex</apiItemName><apiType value="int"/><apiDesc>Индекс элемента для этой строки в поставщике данных. Например, он может использоваться для окрашивания 10-го элемента в другой цвет.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Используется для отображения фона строки в соответствии с указанной позицией и высотой. Создается форма как нижестоящий элемент входного спрайта и заполняется соответствующим цветом. Этот метод также использует параметр свойства стиля <codeph>backgroundAlpha</codeph> для определения прозрачности фонового цвета.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:endEdit"><apiName>endEdit</apiName><shortdesc>
      Останавливает редактирование элемента в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Возвращает <codeph>true</codeph>, если не выполнен вызов <codeph>preventDefault()</codeph>. В противном случае <codeph>false</codeph>.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>Константа, определяющая причину события (например, CANCELLED, NEW_ROW или OTHER). Значение должно принадлежать классу ListEventReason.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Останавливает редактирование элемента в поставщике данных. Если пользователь завершил редактирование элемента, элемент управления вызывает этот метод. Он передает событие <codeph>itemEditEnd</codeph> для запуска процесса копирования отредактированных данных из <codeph>itemEditorInstance</codeph> в поставщик данных <codeph>itemEditorInstance</codeph>.
      
      </apiDesc></apiOperationDetail><related-links><link href="mx.events.xml#ListEventReason"><linktext>mx.events.ListEventReason</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:List:isItemEditable"><apiName>isItemEditable</apiName><shortdesc>
      Определяет возможность редактирования средства визуализации элементов поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc><codeph>true</codeph>, если элемент можно редактировать.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Элемент поставщика данных
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Определяет возможность редактирования средства визуализации элементов поставщика данных.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:layoutEditor"><apiName>layoutEditor</apiName><shortdesc>
      Размещает редактор элементов в предложенной позиции с предложенными размерами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="int"/><apiDesc>Предлагаемое положение индикатора по оси x.
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="int"/><apiDesc>Предлагаемое положение индикатора по оси y.
      </apiDesc></apiParam><apiParam><apiItemName>w</apiItemName><apiType value="int"/><apiDesc>Предлагаемая ширина индикатора.
      </apiDesc></apiParam><apiParam><apiItemName>h</apiItemName><apiType value="int"/><apiDesc>Предлагаемая высота индикатора.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Размещает редактор элементов в предложенной позиции с предложенными размерами. Элемент управления Tree отменяет этот метод и настраивает позицию для компенсации отступа средства визуализации.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:List:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Создает новый экземпляр элемента ListData и заполняет поля в зависимости от входного элемента поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Вновь созданный объект ListData.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Элемент поставщика данных, используемый для заполнения свойства ListData.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Уникальный идентификатор элемента.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Индекс элемента в поставщике данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Создает новый экземпляр элемента ListData и заполняет поля в зависимости от входного элемента поставщика данных.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:List:editorDataField"><apiName>editorDataField</apiName><shortdesc>
      Имя свойства редактора элемента, содержащего новые данные для элемента списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>text</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Имя свойства редактора элемента, содержащего новые данные для элемента списка. Например, по умолчанию <codeph>itemEditor</codeph> является TextInput, таким образом, значением по умолчанию свойства <codeph>editorDataField</codeph> является <codeph>text</codeph>, определяющее свойство <codeph>text</codeph> элемента управления TextInput.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorHeightOffset"><apiName>editorHeightOffset</apiName><shortdesc>
      Высота редактора элемента в пикселях относительно размера средства визуализации элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Высота редактора элемента в пикселях относительно размера средства визуализации элемента. Это свойство может использоваться для создания наложения редактора на средство визуализации элемента и перекрытия размером в несколько пикселей с целью корректировки границы вокруг редактора.  
      <p>Изменение этих значений при отображении редактора на экране не окажет влияния на текущий редактор, но повлияет на следующее средство визуализации элементов, обеспечивающее открытие редактора.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorUsesEnterKey"><apiName>editorUsesEnterKey</apiName><shortdesc>
      Флаг, указывающий на то, используется ли клавиша Enter в редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий на то, используется ли клавиша Enter в редакторе элементов. Если это свойство установлено на <codeph>true</codeph>, редактор элементов использует клавишу Enter, и List не будет выполнять поиск клавиши Enter и ответное перемещение редактора.
      <p>Изменение этого значения при отображении редактора на экране не окажет влияния на текущий редактор, но повлияет на следующее средство визуализации элементов, обеспечивающее открытие редактора.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorWidthOffset"><apiName>editorWidthOffset</apiName><shortdesc>
      Ширина редактора элемента в пикселях относительно размера средства визуализации элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ширина редактора элемента в пикселях относительно размера средства визуализации элемента. Это свойство может использоваться для создания наложения редактора на средство визуализации элемента и перекрытия размером в несколько пикселей с целью корректировки границы вокруг редактора.
      <p>Изменение этих значений при отображении редактора на экране не окажет влияния на текущий редактор, но повлияет на следующее средство визуализации элементов, обеспечивающее открытие редактора.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorXOffset"><apiName>editorXOffset</apiName><shortdesc>
      Местоположение по оси X верхнего левого угла редактора элемента в пикселях относительно верхнего левого угла элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Местоположение по оси X верхнего левого угла редактора элемента в пикселях относительно верхнего левого угла элемента. Это свойство может использоваться для создания наложения редактора на средство визуализации элемента и перекрытия размером в несколько пикселей с целью корректировки границы вокруг редактора.
      <p>Изменение этих значений при отображении редактора на экране не окажет влияния на текущий редактор, но повлияет на следующее средство визуализации элементов, обеспечивающее открытие редактора.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editorYOffset"><apiName>editorYOffset</apiName><shortdesc>
      Местоположение по оси Y верхнего левого угла редактора элемента в пикселях относительно верхнего левого угла элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Местоположение по оси Y верхнего левого угла редактора элемента в пикселях относительно верхнего левого угла элемента. Это свойство может использоваться для создания наложения редактора на средство визуализации элемента и перекрытия размером в несколько пикселей с целью корректировки границы вокруг редактора.
      <p>Изменение этих значений при отображении редактора на экране не окажет влияния на текущий редактор, но повлияет на следующее средство визуализации элементов, обеспечивающее открытие редактора.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:itemEditor"><apiName>itemEditor</apiName><shortdesc>
      Фабрика классов для редактора элементов, используемая для элемента управления, если свойство editable установлено как true.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IFactory</apiValueClassifier><apiDefaultValue>new ClassFactory(mx.controls.TextInput)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Фабрика классов для редактора элементов, используемая для элемента управления, если свойство <codeph>editable</codeph> установлено как <codeph>true</codeph>. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:itemEditorInstance"><apiName>itemEditorInstance</apiName><shortdesc>
      Ссылка на активный в настоящий момент экземпляр редактора элементов, если таковой существует.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на активный в настоящий момент экземпляр редактора элементов, если таковой существует.
     
      <p>Для получения доступа к экземпляру редактора элементов и новому значению элемента во время редактирования воспользуйтесь свойством <codeph>itemEditorInstance</codeph>. Свойство <codeph>itemEditorInstance</codeph> учитывается только после выполнения прослушивателя событий для события <codeph>itemEditBegin</codeph>. Поэтому обычно доступ к свойству <codeph>itemEditorInstance</codeph> осуществляется только из прослушивателя событий для события <codeph>itemEditEnd</codeph>.</p>
     
      <p>Свойство <codeph>itemEditor</codeph> определяет класс редактора элементов, и, следовательно, тип данных экземпляра редактора элементов.</p>
     
      <p>Это свойство не устанавливается в MXML.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:protected:measuringObjects"><apiName>measuringObjects</apiName><shortdesc>
      кэш объектов измерения по фабрикам
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
      кэш объектов измерения по фабрикам
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:rendererIsEditor"><apiName>rendererIsEditor</apiName><shortdesc>
      Указывает, является ли средство визуализации элементов также редактором элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, является ли средство визуализации элементов также редактором элементов. Если это свойство <codeph>true</codeph>, Flex игнорирует свойство <codeph>itemEditor</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editable:get"><apiName>editable</apiName><shortdesc>
      Флаг, указывающий, действительно ли пользователь может редактировать элементы в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий, действительно ли пользователь может редактировать элементы в поставщике данных. Если <codeph>true</codeph>, средства визуализации элементов в элементе управления можно редактировать. Для открытия редактора пользователь может нажать на средство визуализации элементов.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editedItemPosition:get"><apiName>editedItemPosition</apiName><shortdesc>
      Индекс строки и столбца средства визуализации элементов для редактируемого в настоящий момент элемента поставщика данных (если таковой существует).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Индекс строки и столбца средства визуализации элементов для редактируемого в настоящий момент элемента поставщика данных (если таковой существует).
     
      <p>Этот объект состоит из двух полей, <codeph>columnIndex</codeph> и <codeph>rowIndex</codeph>, столбца, отсчитываемого от нуля, и индексов элементов для элемента. Для элемента управления List свойство <codeph>columnIndex</codeph> всегда имеет значение 0, например: <codeph>{columnIndex:0, rowIndex:3}</codeph>.</p>
     
      <p>При установке этого свойства выполняется прокрутка с переводом элемента в видимую область и передача события <codeph>itemEditBegin</codeph>, открывающего редактор элементов в указанном средстве визуализации элементов.
      </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:editedItemRenderer:get"><apiName>editedItemRenderer</apiName><shortdesc>
      Ссылка на средство визуализации элементов в объекте DataGrid, элемент которого редактируется в настоящий момент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на средство визуализации элементов в объекте DataGrid, элемент которого редактируется в настоящий момент.
     
      <p>Из прослушивателя событий для событий <codeph>itemEditBegin</codeph> и <codeph>itemEditEnd</codeph> можно вызвать текущее значение редактируемого элемента с помощью свойства <codeph>editedItemRenderer.data</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса. Если имеется редактор, он соответственно устанавливает enableIME.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:List:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Указывает режим IME (редактор методов ввода).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает режим IME (редактор методов ввода). IME позволяет пользователям вводить текст на китайском, японском и корейском языках. Flex устанавливает указанный режим IME при получении фокуса элементом управления и возвращается к предыдущему значению при потере фокуса элементом управления.
     
     <p>Класс flash.system.IMEConversionMode определяет константы для допустимых значений этого свойства. Можно также указать значение <codeph>null</codeph> и не указывать IME.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IME.xml"><linktext>flash.system.IME</linktext></link><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:LinkButton"><apiName>LinkButton</apiName><shortdesc>
  Элемент управления LinkButton является элементом управления Button, не имеющим границ. Его содержимое выделяется при наведении на него курсора мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="highlightAlphas"/><Exclude kind="style" name="fillColors"/><Exclude kind="style" name="fillAlphas"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="baseColor"/><Exclude kind="property" name="emphasized"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Цвет текста LinkButton при нажатии. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Цвет текста LinkButton при наведении курсора мыши. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Цвет фона LinkButton при нажатии. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:LinkButton" playerVersion="Flash9" type="uint">
<description>
  Цвет LinkButton при наведении курсора мыши. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:LinkButton" playerVersion="Flash9" type="Number">
<description>
  Радиус угла выделенного прямоугольника вокруг LinkButton. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:LinkButton&gt;</code> tag inherits all of the tag attributes 
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:LinkButton
    <b>Styles</b>
    cornerRadius="4""
    rollOverColor="0xEEFEE6"
    selectionColor="0xB7F39B"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления LinkButton является элементом управления Button, не имеющим границ. Его содержимое выделяется при наведении на него курсора мыши. Эти характеристики часто бывают представлены посредством ссылок HTML, содержащимися на странице браузера. Для выполнения действий элементом управления LinkButton следует указать обработчик события <codeph>click</codeph>, также как в случае с элементом управления Button.
 
  <p>Элемент управления LinkButton по умолчанию имеет следующие характеристики:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина и высота являются достаточными для текста</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не определен</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LinkButtonExample.mxml"><swfblock conref="examples/LinkButtonExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><apiConstructor id="mx.controls:LinkButton:LinkButton"><apiName>LinkButton</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ButtonBar"><apiName>ButtonBar</apiName><shortdesc>
  Элемент управления ButtonBar определяет горизонтальную или вертикальную группу логически связанных нажимных кнопок, которые имеют единообразный внешний вид и навигацию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Alternative owner="mx.controls:ButtonBar" replacement="spark.components.ButtonBar" since="4.0">
	</Alternative><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="top,middle,bottom" inherit="no" name="verticalAlign" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Вертикальное выравнивание нижестоящих элементов в ButtonBar. Если отдельные кнопки растянуты для заполнения всего ButtonBar, этот стиль применим, только если используется стиль buttonHeight, а общая высота кнопок меньше, чем ширина ButtonBar. Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>.
 
  </description>
<default>"middle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="lastButtonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
   Если имя не указано, то для свойства стиля <codeph>buttonStyleName</codeph> используется значение по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Горизонтальное выравнивание всех кнопок в ButtonBar. Если отдельные кнопки растянуты для заполнения всего ButtonBar, этот стиль применим, только если используется стиль buttonWidth, а общая ширина кнопок меньше, чем ширина ButtonBar. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="firstButtonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для первой кнопки. Если имя не указано, то для свойства стиля <codeph>buttonStyleName</codeph> используется значение по умолчанию.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="buttonWidth" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Ширина каждой кнопки в пикселях. Если не определено, ширина каждой кнопки по умолчанию вычисляется в зависимости от текста ее метки.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="buttonStyleName" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для кнопок.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="buttonHeight" owner="mx.controls:ButtonBar" playerVersion="Flash9" type="Number">
<description>
  Высота каждой кнопки в пикселях. Если не определено, то высота каждой кнопки определяется стилями шрифтов, применяемыми для контейнера. Если значение для этого свойства установлено, указанное значение отменяет данное вычисление.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ButtonBar&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:ButtonBar
    <b>Styles</b>
    buttonHeight="undefined"
    buttonStyleName="<i>Name of CSS style declaration, which specifies
    styles for the buttons</i>"
    buttonWidth="undefined"
    firstButtonStyleName="<i>The value of</i> <code>buttonStyleName</code>"
    horizontalAlign="center|left|right"
    horizontalGap="0"
    lastButtonStyleName="<i>The value of</i> <code>buttonStyleName</code>"
    verticalAlign="middle|top|bottom"
    verticalGap="0"
     
    <b>Events</b>
    itemClick="<i>No default</i>"
    &gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:ButtonBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseClassifier>mx.controls:NavBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ButtonBar определяет горизонтальную или вертикальную группу логически связанных нажимных кнопок, которые имеют единообразный внешний вид и навигацию.
 
  <p>Нажимная кнопка – это кнопка, которая не сохраняет состояние выбора при последующем нажатии. Как правило, нажимная кнопка используется в панели кнопок для группировки ряда связанных кнопок. Это придает им единообразный вид и единое управление и позволяет обрабатывать логику события <codeph>click</codeph> в рамках одной панели. </p>
 
  <p>Элемент управления ButtonBar Button создает элементы управления Button в зависимости от значения свойства <codeph>dataProvider</codeph>. Несмотря на то, что ButtonBar является подклассом элемента Container, для добавления и удаления элементов управления Button не следует использовать такие методы как <codeph>Container.addChild()</codeph> и <codeph>Container.removeChild()</codeph>. Вместо этого используются такие методы как <codeph>addItem()</codeph> и <codeph>removeItem()</codeph> для управления свойством<codeph>dataProvider</codeph>. Элемент управления ButtonBar автоматически добавляет или удаляет требуемые нижестоящие элементы в зависимости от изменений свойства <codeph>dataProvider</codeph>.</p>
 
  <p>Для управления стилями кнопок элемента управления ButtonBar следует использовать свойства стиля <codeph>buttonStyleName</codeph>, <codeph>firstButtonStyleName</codeph> и <codeph>lastButtonStyleName</codeph>. Не следует применять стили к отдельным элементам управления Button, которые содержатся в элементе управления ButtonBar.</p>
 
  <p>Для определения группы нажимных кнопок используется элемент управления ToggleButtonBar.</p>
 
  <p>Элемент управления ButtonBar по умолчанию имеет следующие характеристики:</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>описание;</entry></row></thead><tbody><row>
        <entry>предпочтительный размер.</entry>
        <entry>Имеет достаточную ширину для того, чтобы содержать все кнопки с текстом меток и значками, а также заполнители и разделители, и достаточную высоту для увеличения высоты кнопок.</entry>
     </row><row>
        <entry>Правила изменения размеров элементов управления</entry>
        <entry>По умолчанию размеры элементов управления не изменяются. Укажите размеры в процентах, если элемент ButtonBar должен изменять свой размер в зависимости от размера вышестоящего контейнера.</entry>
     </row><row>
        <entry>Заполнение</entry>
        <entry>0 пикселей для свойств нижнего, верхнего, левого и правого краев</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ButtonBarExample.mxml"><swfblock conref="examples/ButtonBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><adobeApiEvent id="mx.controls:ButtonBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается, когда пользователь нажимает кнопку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь нажимает кнопку. Это событие передается, если свойство <codeph>dataProvider</codeph> не ссылается на контейнер ViewStack.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ButtonBar:ButtonBar"><apiName>ButtonBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:Label"><apiName>Label</apiName><shortdesc>
  Элемент управления Label отображает отдельную строку нередактируемого текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="method" name="setFocus"/><Exclude kind="style" name="themeColor"/><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="style" name="baseColor"/><Exclude kind="property" name="tabEnabled"/><Exclude kind="property" name="mouseFocusEnabled"/><Exclude kind="property" name="focusPane"/><Exclude kind="property" name="focusEnabled"/><Alternative owner="mx.controls:Label" replacement="spark.components.Label" since="4.0">
	</Alternative><styles><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей Label и верхней границей текста. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей метки и нижней границей текста. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей метки и правой границей текста. 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между левой границей метки и левой границей текста заголовка. 
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:Label" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:Label" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:Label" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:Label" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:Label" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:Label" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:Label" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:Label" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:Label&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:Label
    <b>Properties</b>
    condenseWhite="true|false"
    data="null"
    htmlText=""
    listData="null"
    selectable="true|false"
    text=""
    truncateToFit="true|false"
    &nbsp;
    <b>Styles</b>
    color="0x0B333C"
    disabledColor="0xAAB3B3"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    paddingLeft="0"
    paddingRight="0"
    paddingTop="0"
    paddingBottom="0"
    styleSheet="null"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    &nbsp;
    <b>Events</b>
    dataChange="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Label отображает отдельную строку нередактируемого текста. Элемент управления Text используется для создания блоков многострочного нередактируемого текста.
 
  <p>Можно форматировать текст метки с помощью тегов HTML, которые применяются после применения стилей CSS элемента управления Label. Вокруг четырех сторон текста можно также поместить заполнение. По умолчанию текст метки выбрать невозможно, однако можно сделать его доступным для выбора.</p>
 
  <p>Если установленный размер метки меньше, чем размер ее текста, можно выбрать, следует ли просто отсекать текст или его следует отсекать с помощью локализуемой строки, например, "...". (Примечание. Обычный текст может отсекаться, а текст в формате HTML – не может.) Если весь текст метки – обычный текст или текст HTML – не является полностью видимым, и всплывающие подсказки для метки не назначены, то при удерживании курсора мыши на элементе управления Label с помощью truncation tip автоматически отображается неформатированный текст.</p>
 
  <p>Элементы управления Label не имеют цвета и границ, и невозможно выполнить фокусировку на них.</p>
 
  <p>Для элемента управления Label по умолчанию установлены следующие характеристики размеров.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина и высота являются достаточными для текста</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>10000 на 10000 пикселей</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LabelExample.mxml"><swfblock conref="examples/LabelExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Text"><linktext>mx.controls.Text</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#RichTextEditor"><linktext>mx.controls.RichTextEditor</linktext></link></related-links><adobeApiEvent id="mx.controls:Label_flash.events.TextEvent.LINK_link"><apiName>link</apiName><shortdesc> 
  Передается, когда пользователь щелкает в текстовом поле с поддержкой HTML гиперссылку, в которой URL-адрес начинается с event:.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.TextEvent.LINK</apiEventType><adobeApiEventClassifier>flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
  Передается, когда пользователь щелкает в текстовом поле с поддержкой HTML гиперссылку, в которой URL-адрес начинается с <codeph>event:</codeph>. Остальная часть URL после <codeph>event:</codeph> помещается в свойство text объекта события <codeph>link</codeph>.
 
  <p>При обработке события <codeph>link</codeph> гиперссылка не выполняется автоматически; ее необходимо выполнить из обработчика события. Для выполнения гиперссылки, как правило, используется метод <codeph>navigateToURL()</codeph>. Позволяет изменить гиперссылку или даже запретить ее отображение в приложении. </p>
 
  <p>Для элемента управления Label свойство <codeph>selectable</codeph> должно быть установлено на <codeph>true</codeph> для создания события <codeph>link</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Label_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит данные для отображения. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Label:Label"><apiName>Label</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Label:getLineMetrics"><apiName>getLineMetrics</apiName><shortdesc>
      Возвращает объект TextLineMetrics с информацией о размещении текста и измерениями для строки текста в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект TextLineMetrics, содержащий информацию о тексте.
     
      </apiDesc><apiType value="flash.text:TextLineMetrics"/></apiReturn><apiParam><apiItemName>lineIndex</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса строки, для которой требуется получить метрики. Для элемента управления Label, имеющего только одну строку, значение должно быть 0.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает объект TextLineMetrics с информацией о размещении текста и измерениями для строки текста в элементе управления. Для получения корректного значения требуется проверка компонента. При установке значения для свойства <codeph>text</codeph> и немедленном вызове <codeph>getLineMetrics()</codeph> возможно получение некорректного значения. Следует дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения класса flash.text.TextField, который выполняет обновление значения незамедлительно.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.TextLineMetrics.xml"><linktext>flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiValue id="mx.controls:Label:protected:textField"><apiName>textField</apiName><shortdesc>
      Внутренний UITextField, выполняющий визуализацию текста данного Label.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IUITextField</apiValueClassifier></apiValueDef><apiDesc>
      Внутренний UITextField, выполняющий визуализацию текста данного Label.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:truncateToFit"><apiName>truncateToFit</apiName><shortdesc>
      Если это свойство true, и размер элемента управления Label меньше, чем его текст, текст элемента управления Label отсекается с помощью локализуемой строки, например, "...".</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если это свойство <codeph>true</codeph>, и размер элемента управления Label меньше, чем его текст, текст элемента управления Label отсекается с помощью локализуемой строки, например, <codeph>"..."</codeph>. Если это свойство является <codeph>false</codeph>, то текст, который не помещается, отсекается.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:condenseWhite:get"><apiName>condenseWhite</apiName><shortdesc>
      Определяет, следует ли удалять лишние разделители (пробелы, разрывы строк и т.д.) в элементе управления Label с текстом HTML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет, следует ли удалять лишние разделители (пробелы, разрывы строк и т.д.) в элементе управления Label с текстом HTML.
     
      <p>Свойство <codeph>condenseWhite</codeph> влияет только на текст, установленный посредством свойства <codeph>htmlText</codeph>, а не с помощью свойства <codeph>text</codeph>. Если текст определен посредством свойства <codeph>text</codeph>, <codeph>condenseWhite</codeph> игнорируется.</p>
     
      <p>Если для свойства <codeph>condenseWhite</codeph> установлено значение <codeph>true</codeph>, для размещения в текстовом поле разрывов строк необходимо использовать стандартные команды HTML, например, <codeph>&lt;br></codeph> и <codeph>&lt;p></codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:data:get"><apiName>data</apiName><shortdesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Позволяет выполнить передачу значения в компонент при его использовании в средстве визуализации элементов или редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>При использовании элемента управления в качестве средства визуализации или редактора вставных элементов Flex автоматически записывает текущее значение элемента в свойство <codeph>text</codeph> данного элемента управления.</p>
     
      <p>Это свойство не устанавливается в MXML.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:fontContext:get"><apiName>fontContext</apiName><shortdesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef><apiDesc>
      
      Фабрика модулей, обеспечивающая контекст шрифта для этого компонента.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:htmlText:get"><apiName>htmlText</apiName><shortdesc>
      Задает текст, отображаемый элементом управления Label, включая разметку HTML, отражающую стили этого текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Задает текст, отображаемый элементом управления Label, включая разметку HTML, отражающую стили этого текста. При указании в этом свойстве текста HTML можно использовать набор тегов HTML, поддерживаемый элементом управления TextField для Flash.
     
      <p>При установке значения для этого свойства после применения стилей CSS для экземпляра Label применяется разметка HTML. При получении этого свойства разметка HTML включает стили CSS.</p>
      
      <p>Например, при определении строки, такой как <codeph>«Это пример <b>полужирной</b> разметки»</codeph>, текст «Это пример &lt;b>полужирной&lt;/b> разметки» отображается в Label со всеми применяемыми стилями CSS. Кроме того, слово «полужирный» отображается жирным шрифтом вследствие разметки <codeph>&lt;b></codeph>.</p>
     
      <p>В разметке HTML используются символы, такие как &lt;and >, которые имеют специальное значение в XML (и, следовательно, в MXML). Например, следующий код не компилируется:</p>
      
      <pre>
      &lt;mx:Label htmlText="This is an example of &lt;b>bold&lt;/b> markup"/>
      </pre>
      
      <p>Существует три способа решения этой проблемы.</p>
      
      <ul>
      
      <li>
      
      <p>Установите значение для свойства <codeph>htmlText</codeph> в методе ActionScript, вызываемом в качестве обработчика <codeph> initialize</codeph>,</p>
      
      <pre>
      &lt;mx:Label id="myLabel" initialize="myLabel_initialize()"/>
      </pre>
      
      <p>где метод <codeph>myLabel_initialize</codeph> находится в разделе сценария CDATA:</p>
      
      <pre>
      &lt;mx:Script>
      &lt;![CDATA[
      private function myLabel_initialize():void {
          myLabel.htmlText = "This is an example of &lt;b>bold&lt;/b> markup";
      }
      ]]&gt;
      &lt;/mx:Script>
      
      </pre>
      
      <p>Это наиболее простой подход, поскольку разметка HTML остается читаемой. Учтите, что следует присвоить <codeph>id</codeph> метке для получения возможности ссылаться на нее в обработчике <codeph>initialize</codeph>.</p>
      
      </li>
      
      <li>
      
      <p>Укажите значение свойства <codeph>htmlText</codeph> с помощью нижестоящего тега в разделе CDATA. Раздел CDATA в XML содержит символьные данные, где символы &lt; и > не несут специального значения.</p>
      
      <pre>
      &lt;mx:Label>
          &lt;mx:htmlText>&lt;![CDATA[This is an example of &lt;b>bold&lt;/b> markup]]&gt;&lt;/mx:htmlText>
      &lt;mx:Label/>
      </pre>
      
      <p>Необходимо записать свойство <codeph>htmlText</codeph> в качестве нижестоящего тега, а не атрибута в теге <codeph>&lt;mx:Label></codeph>, так как в XML невозможно использовать CDATA для значения атрибута. Учтите, что разметка остается читаемой, но особенности использования раздела CDATA затрудняют применение этого подхода.</p>
      
      </li>
      
      <li>
      
      <p>Атрибут <codeph>hmtlText</codeph> используется в том случае, если вхождения символов &lt; и > разметки HTML в значении атрибута записаны вместо объектов XML <codeph>&amp;lt;</codeph> и <codeph>&amp;gt;</codeph>:</p>
      
      <pre>
      &lt;mx:Label htmlText="This is an example of &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; markup"/&amp;gt;
      </pre>
      
      Adobe не рекомендует использовать этот подход, поскольку при этом разметка HTML становится практически нечитаемой.
      
      </li>
      
      </ul>
      
      <p>Если для свойства <codeph>condenseWhite</codeph> установлено значение <codeph>true</codeph>, то при установке значения для свойства <codeph>htmlText</codeph> множественные пробелы сжимаются как в браузерах на базе HTML; например, три последовательных пробела отображаются как один пробел. Значением по умолчанию для <codeph>condenseWhite</codeph> является <codeph>false</codeph>, поэтому для сокращения количества пробелов необходимо установить для <codeph>condenseWhite</codeph> значение <codeph>true</codeph>.</p>
      
      <p>При считывании свойства <codeph>htmlText</codeph> сразу же после установки его значения будет получена та же установленная строка. Однако после запуска LayoutManager значение изменяется и включает дополнительную разметку со стилями CSS.</p>
      
      <p>Установка свойства <codeph>htmlText</codeph> оказывает на <codeph>text</codeph> различное воздействие. При считывании свойства <codeph>text</codeph> сразу же после установки свойства <codeph>htmlText</codeph> будет получено значение <codeph>null</codeph>. Это означает, что значение свойства <codeph>text</codeph>, соответствующее новому значению <codeph>htmlText</codeph>, еще не определено. Однако после запуска LayoutManager значение свойства <codeph>text</codeph> заменяется на строку <codeph>htmlText</codeph> без разметки HTML; то есть значение включает символы, реально отображаемые Label.</p>
       
      <p>Наоборот, при установке свойства <codeph>text</codeph> любое предыдущее значение <codeph>htmlText</codeph> становится нерелевантным. При считывании свойства <codeph>htmlText</codeph> сразу же после установки свойства <codeph>text</codeph> будет получено значение <codeph>null</codeph>. Это означает, что значение <codeph>htmlText</codeph>, соответствующее новому значению <codeph>text</codeph>, еще не определено. Однако после запуска LayoutManager значение свойства <codeph>htmlText</codeph> заменяется на новый текст с разметкой HTML для стилей CSS.</p>
     
      <p>Для немедленного запуска LayoutManager можно вызвать метод <codeph>validateNow()</codeph> в Label. Например, можно установить <codeph>htmlText</codeph>, вызвать метод <codeph>validateNow()</codeph> и немедленно получить соответствующее значение <codeph>text</codeph> без разметки HTML.</p>
      
      <p>При установке свойств <codeph>text</codeph> и <codeph>htmlText</codeph> в ActionScript будет использовано только последнее значение. Не устанавливайте оба эти свойства в MXML, поскольку в MXML невозможно обеспечить указанный порядок установки свойств экземпляра.</p>
      
      <p>Настройка свойства <codeph>text</codeph> или <codeph>htmlText</codeph> в цикле выполняется быстро, поскольку соответствующий TextField, который обеспечивает визуализацию текста, не обновляется до запуска LayoutManager.</p>
     
      <p>При попытке установить для этого свойства значение <codeph>null</codeph> будет установлена пустая строка. Если свойство временно имеет значение <codeph>null</codeph>, это означает, что значение для <codeph>text</codeph> было установлено недавно, и соответствующее значение <codeph>htmlText</codeph> еще не определено.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.xml#TextField/htmlText"><linktext>flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:listData:get"><apiName>listData</apiName><shortdesc>
      При использовании компонента в качестве средства визуализации вставных элементов или редактора вставных элементов Flex инициализирует свойство компонента listData с соответствующими данными из элемента управления List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      При использовании компонента в качестве средства визуализации или редактора вставных элементов Flex инициализирует свойство компонента <codeph>listData</codeph> с соответствующими данными из элемента управления List. Затем компонент может использовать свойство <codeph>listData</codeph> для инициализации свойства <codeph>data</codeph> средства визуализации или редактора вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:selectable:get"><apiName>selectable</apiName><shortdesc>
      Определяет, допускается ли выделение текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет, допускается ли выделение текста. Разрешение выделения текста позволяет скопировать его из элемента управления.
     
      <p>Если событие <codeph>link</codeph> указано в элементе управления Label, необходимо установить свойство <codeph>selectable</codeph> как <codeph>true</codeph> для выполнения события <codeph>link</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
     Объект flash.text.StyleSheet с возможностью выполнения визуализации текста элемента управления Label.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.text:StyleSheet"/><apiDefaultValue>null
    </apiDefaultValue></apiValueDef><apiDesc>
     Flash.text.StyleSheet с возможностью выполнения визуализации текста элемента управления Label Используйте это свойство для точного контроля стилей HTML для текста. Для получения дополнительной информации см. документацию по классу flash.text.StyleSheet.
    
     </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.StyleSheet.xml"><linktext>flash.text.StyleSheet</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:text:get"><apiName>text</apiName><shortdesc>
      Указывает неформатированный текст, отображаемый этим элементом управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><helpid>3907
     
     </helpid></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      </apiDefaultValue><apiTipTexts><apiTipText>Получает или задает содержимое элемента Label
      </apiTipText></apiTipTexts></apiValueDef><apiDesc>
      Указывает неформатированный текст, отображаемый этим элементом управления. Его внешний вид определяется стилями CSS данного элемента управления Label.
     
      <p>Если установлено это свойство, любые символы, похожие на символы разметки HTML в строке, не имеют специального значения и отображаются в том виде, в котором они были введены.</p>
     
      <p>Вместо этого для отображения текста, отформатированного с помощью тегов HTML, используйте свойство <codeph>htmlText</codeph>. Если установлено свойство <codeph>htmlText</codeph>, HTML заменяет любой текст, установленный с помощью этого свойства, а свойство <codeph>text</codeph> возвращает версию текста HTML как неформатированный текст без тегов HTML.</p>
     
      <p>Для включения в текст специальных символов: левой угловой скобки (&lt;), правой угловой скобки (>) или амперсанда (&amp;) необходимо заключить текстовую строку в тег CDATA. Кроме того, можно использовать объекты HTML для специальных символов, например, <codeph>&amp;lt;</codeph>.</p>
     
      <p>Если ширина текста превышает ширину элемента управления Label, текст отсекается и заменяется многоточием (...). Полный текст отображается как всплывающая подсказка при наведении курсора мыши на элемент управления Label. Если с помощью свойства <codeph>tooltip</codeph> устанавливается всплывающая подсказка, то отображается эта всплывающая подсказка, а не текст.</p>
     
      <p>При попытке установить для этого свойства значение <codeph>null</codeph> будет установлена пустая строка. Свойство <codeph>text</codeph> может временно иметь значение <codeph>null</codeph>. Это означает, что значение <codeph>htmlText</codeph> было установлено недавно, и соответствующее значение <codeph>text</codeph> еще не определено.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Label:textHeight:get"><apiName>textHeight</apiName><shortdesc>
      Высота текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Высота текста.
     
      <p>Значение свойства <codeph>textHeight</codeph> становится корректным только после проверки компонента. При установке значения свойства <codeph>text</codeph> и немедленном запросе <codeph>textHeight</codeph> возможно получение некорректного значения. Перед получением значения необходимо дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения элемента управления flash.text.TextField, который выполняет обновление значения незамедлительно.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue><apiValue id="mx.controls:Label:textWidth:get"><apiName>textWidth</apiName><shortdesc>
      Ширина текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина текста.
     
      <p>Значение свойства <codeph>textWidth</codeph> становится корректным только после проверки компонента. При установке значения для свойства <codeph>text</codeph> и немедленном запросе <codeph>textWidth</codeph> возможно получение некорректного значения. Перед получением значения необходимо дождаться завершения проверки компонента или вызвать метод <codeph>validateNow()</codeph>. Это поведение отличается от поведения элемента управления flash.text.TextField, который выполняет обновление значения незамедлительно.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:TabBar"><apiName>TabBar</apiName><shortdesc>
  Элемент управления TabBar позволяет создать горизонтальную или вертикальную группу элементов навигации по вкладке, определяя метки и данные, связанные с каждой вкладкой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="lastButtonStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="firstButtonStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderVisible"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="borderAlpha"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между элементами навигации на вкладке по вертикали.
 
  </description>
<default>-1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="top,middle,bottom" inherit="no" name="verticalAlign" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
 Вертикальное выравнивание всех вкладок в TabBar. Если отдельные вкладки растянуты для заполнения всего TabBar, этот стиль применим, только если используется стиль tabHeight, а общая высота вкладок меньше, чем высота TabBar. Допустимыми значениями являются <codeph>top</codeph>, <codeph>middle</codeph> и <codeph>bottom</codeph>.
 
 </description>
<default>"middle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabWidth" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Ширина элемента навигации по вкладке в пикселях. Если не определено, ширина вкладок по умолчанию вычисляется из текста метки.
 
  </description>
<default>undefined 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="tabHeight" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Высота каждого элемента навигации по вкладке в пикселях. Если для этого свойства установлено значение <codeph>undefined</codeph>, высота каждой вкладки определяется стилями шрифтов, применяемыми для контейнера. Если значение для этого свойства установлено, указанное значение отменяет данное вычисление.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="tabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, указывающего стили для элементов навигации по вкладке.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectedTabTextStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, указывающего стили для текста выбранного элемента навигации по вкладке. 
 
  </description>
<default>"activeTabStyle" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="lastTabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для последнего элемента навигации по вкладке. 
  
  </description>
<default>"tabStyleName" 
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:TabBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между элементами навигации по вкладке по горизонтали.
 
  </description>
<default>-1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="horizontalAlign" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
 Горизонтальное выравнивание всех вкладок в TabBar. Если отдельные вкладки растянуты для заполнения всего TabBar, этот стиль применим, только если используется стиль tabWidth, а общая ширина вкладок меньше, чем ширина TabBar. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
 </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="firstTabStyleName" owner="mx.controls:TabBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, которое указывает стили для первого элемента навигации по вкладке. 
  
  </description>
<default>"tabStyleName"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:TabBar&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:TabBar
    <b>Styles</b>
    firstTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    horizontalAlign="left|center|right"
    horizontalGap="-1"
    lastTabStyleName="<i>Value of the</i> <code>tabStyleName</code> <i>property</i>"
    selectedTabTextStyleName="activeTabStyle"
    tabHeight="undefined"
    tabStyleName="Tab"
    tabWidth="undefined"
    verticalAlign="top|middle|bottom"
    verticalGap="-1"
 
    <b>Events</b>
    itemClick="<i>No default</i>"
    &gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:TabBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ToggleButtonBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления TabBar позволяет создать горизонтальную или вертикальную группу элементов навигации по вкладке, определяя метки и данные, связанные с каждой вкладкой. Для создания вкладок, которые по умолчанию не связаны с несколькими представлениями, используйте элемент управления TabBar вместо контейнера TabNavigator.
 
  <p>Использование элемента управления TabBar позволяет определить вкладки непосредственно по данным, что позволяет изменить представление или представления в любой момент.</p>
 
  <p>Элемент управления TabBar по умолчанию имеет следующие характеристики:</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>описание;</entry></row></thead><tbody><row>
           <entry>предпочтительный размер.</entry>
           <entry>Имеет достаточную ширину для того, чтобы содержать текст всех меток, а также заполнители и разделители, и достаточную высоту для текста меток. Высота вкладок по умолчанию определяется шрифтом, стилем и темой оформления, применяемыми для элемента управления. При установке явной высоты с помощью свойства tabHeight значение заменяет значение по умолчанию.</entry>
        </row><row>
           <entry>Правила изменения размеров элементов управления</entry>
           <entry>Элементы управления TabBar не изменяют размеры по умолчанию. Укажите размеры в процентах, если элемент TabBar должен изменять свой размер в зависимости от размера вышестоящего контейнера.</entry>
        </row><row>
           <entry>Заполнение</entry>
           <entry>0 пикселей для свойств левого и правого края.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="TabBarExample.mxml"><swfblock conref="examples/TabBarExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:TabBar_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается, если выбран элемент навигации по вкладке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, если выбран элемент навигации по вкладке. Это событие отправляется, только если поставщик данных не является контейнером ViewStack.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:TabBar:TabBar"><apiName>TabBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:RadioButton"><apiName>RadioButton</apiName><shortdesc>
  Элемент управления RadioButton позволяет пользователю осуществить единичный выбор в наборе взаимоисключающих выборов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="toggle"/><Exclude kind="property" name="emphasized"/><Alternative owner="mx.controls:RadioButton" replacement="spark.components.RadioButton" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:RadioButton" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет любого символа компонента. Примеры включают флажок элемента управления CheckBox или стрелку на кнопке элемента управления ScrollBar.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:RadioButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:RadioButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:RadioButton&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:RadioButton
    <strong>Properties</strong>
    groupName=""
    labelPlacement="right|left|top|bottom"
  
    <strong>Styles</strong>
    disabledIconColor="0x999999"
    iconColor="0x2B333C"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerGroup</apiBaseInterface><apiBaseInterface>mx.core:IToggleButton</apiBaseInterface><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления RadioButton позволяет пользователю осуществить единичный выбор в наборе взаимоисключающих выборов. Группа RadioButton состоит из двух или более элементов управления RadioButton с одним и тем же свойством <codeph>groupName</codeph>. Хотя группировка экземпляров RadioButton в RadioButtonGroup является необязательной, группа позволяет выполнять такие действия, как установка отдельного обработчика событий сразу на группу кнопок, а не на каждую кнопку в отдельности. Группа RadioButton может ссылаться на группу, созданную тегом <codeph>&lt;mx:RadioButtonGroup></codeph>. В конкретный момент времени пользователь выбирает только один элемент группы. Выбор не выбранного элемента группы отменяет выбор текущего выбранного элемента управления RadioButton в этой группе. 
 
  <p>Элемент управления RadioButton по умолчанию имеет характеристики, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Имеет достаточную ширину для отображения текстовой метки элемента управления</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не определен</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="RadioButtonExample.mxml"><swfblock conref="examples/RadioButtonExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#RadioButtonGroup"><linktext>mx.controls.RadioButtonGroup</linktext></link></related-links><apiConstructor id="mx.controls:RadioButton:RadioButton"><apiName>RadioButton</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:RadioButton:group:get"><apiName>group</apiName><shortdesc>
      Объект RadioButtonGroup, к которому принадлежит элемент управления RadioButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:RadioButtonGroup</apiValueClassifier><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект RadioButtonGroup, к которому принадлежит элемент управления RadioButton.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:groupName:get"><apiName>groupName</apiName><shortdesc>
      Указывает имя группы, к которой принадлежит этот элемент управления RadioButton, или указывает значение свойства id элемента управления RadioButtonGroup, если этот RadioButton является компонентом группы, определенной элементом управления RadioButtonGroup.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiException><apiDesc>Инициирует ArgumentError при использовании Flex 4 или более поздней версии, и groupName начинается со строки "_fx_". 
      
      </apiDesc><apiItemName>ArgumentError</apiItemName><apiOperationClassifier>ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>"undefined"
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает имя группы, к которой принадлежит этот элемент управления RadioButton, или указывает значение свойства <codeph>id</codeph> элемента управления RadioButtonGroup, если этот RadioButton является компонентом группы, определенной элементом управления RadioButtonGroup.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Ориентация метки относительно значка RadioButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>ButtonLabelPlacement.RIGHT
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ориентация метки относительно значка RadioButton. Допустимыми значениями в MXML являются <codeph>right</codeph>, <codeph>left</codeph>, <codeph>bottom</codeph> и <codeph>top</codeph>.
     
      <p>В ActionScript для установки значения этого свойства можно использовать следующие константы: <codeph>ButtonLabelPlacement.RIGHT</codeph>, <codeph>ButtonLabelPlacement.LEFT</codeph>, <codeph>ButtonLabelPlacement.BOTTOM</codeph> и <codeph>ButtonLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButton:value:get"><apiName>value</apiName><shortdesc>
      Дополнительное определяемое пользователем значение, связанное с элементом управления RadioButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Дополнительное определяемое пользователем значение, связанное с элементом управления RadioButton.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HorizontalList"><apiName>HorizontalList</apiName><shortdesc>
  Элемент управления The HorizontalList отображает горизонтальный список элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="variableRowHeight"/><Exclude kind="property" name="maxRows"/><Exclude kind="property" name="maxColumns"/><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HorizontalList" replacement="spark.components.List" since="4.0">
<description>
  Специфичные для макета компоненты списка в Flex 3 заменены более общим компонентом списка, принимающим общий макет. Для получения аналогичного поведения нового компонента списка необходимо установить параметр <codeph>layout</codeph> на <codeph>HorizontalLayout</codeph>.
 </description>
	</Alternative><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:HorizontalList&gt;</code> tag inherits all of the 
  tag attributes of its superclass and it adds no new tag attributes.</p>
 
  <pre>
  &lt;mx:HorizontalList/&gt
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.listClasses:TileBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления The HorizontalList отображает горизонтальный список элементов. Если существует больше элементов, чем может быть отображено одновременно, можно использовать горизонтальную полосу прокрутки. Это позволит пользователю получить доступ ко всем элементам в списке.
 
  <p>Для элемента управления HorizontalList по умолчанию установлены характеристики размеров, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Четыре столбца, с размером, определенным размерами ячеек.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>5000 на 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="HorizontalListExample.mxml"><swfblock conref="examples/HorizontalListExample.swf"/></example></apiClassifierDetail><apiConstructor id="mx.controls:HorizontalList:HorizontalList"><apiName>HorizontalList</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:ToggleButtonBar"><apiName>ToggleButtonBar</apiName><shortdesc>
  Элемент управления ToggleButtonBar определяет горизонтальную или вертикальную группу кнопок, которые сохраняют выделенное или невыделенное состояние.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="shadowDistance"/><Exclude kind="style" name="shadowDirection"/><Exclude kind="style" name="shadowColor"/><Exclude kind="style" name="shadowCapColor"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="style" name="dropShadowEnabled"/><Exclude kind="style" name="dropShadowColor"/><Exclude kind="style" name="cornerRadius"/><Exclude kind="style" name="borderThickness"/><Exclude kind="style" name="borderStyle"/><Exclude kind="style" name="borderSkin"/><Exclude kind="style" name="borderSides"/><Exclude kind="style" name="borderColor"/><Exclude kind="style" name="backgroundSize"/><Exclude kind="style" name="backgroundImage"/><Exclude kind="style" name="backgroundColor"/><Exclude kind="style" name="backgroundAttachment"/><Exclude kind="style" name="backgroundAlpha"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><Alternative owner="mx.controls:ToggleButtonBar" replacement="spark.components.ButtonBar" since="4.0">
	</Alternative><styles><style inherit="no" name="selectedButtonTextStyleName" owner="mx.controls:ToggleButtonBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления CSS-стиля, которое определяет стили для текста выбранной кнопки.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ToggleButtonBar&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ToggleButtonBar
    <b>Properties</b>
    selectedIndex="0"
    toggleOnClick="false|true"
 
    <b>Styles</b>
    selectedButtonTextStyleName="<i>Name of CSS style declaration that specifies styles for the text of the selected button.</i>"&gt;
    ...
       <i>child tags</i>
    ...
  &lt;/mx:ToggleButtonBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:ButtonBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ToggleButtonBar определяет горизонтальную или вертикальную группу кнопок, которые сохраняют выделенное или невыделенное состояние. Элемент управления ToggleButtonBar может содержать только одну кнопку в выбранном состоянии. Это означает, что при выборе кнопки в элементе управления ToggleButtonBar она останется в выбранном состоянии до выбора пользователем другой кнопки.
 
  <p>При установке для свойства <codeph>toggleOnClick</codeph> контейнера ToggleButtonBar значения <codeph>true</codeph> выбор кнопки, выбранной в настоящий момент, приводит к отмене выбора. По умолчанию свойство <codeph>toggleOnClick</codeph> равно <codeph>false</codeph>.</p>
 
  <p>Для определения группы нажимных кнопок используется элемент управления ButtonBar.</p>
 
  <p>Кнопка-переключатель обычно используется для обеспечения выбора одной функции из набора, например при переключении представлений в контейнере ViewStack.</p>
 
  <p>Элемент управления ToggleButtonBar создает элементы управления Button в зависимости от значения свойства <codeph>dataProvider</codeph>. Несмотря на то, что ToggleButtonBar является подклассом для элемента Container, для удаления элементов управления Button не следует использовать такие методы как <codeph>Container.addChild()</codeph> и <codeph>Container.removeChild()</codeph>. Вместо этого используются такие методы как <codeph>addItem()</codeph> и <codeph>removeItem()</codeph> для управления свойством<codeph>dataProvider</codeph>. Элемент управления ToggleButtonBar автоматически добавляет или удаляет требуемые нижестоящие элементы в зависимости от изменений свойства <codeph>dataProvider</codeph>.</p>
 
  <p>Для управления стилями кнопок элемента управления ToggleButtonBar следует использовать свойства стиля <codeph>buttonStyleName</codeph>, <codeph>firstButtonStyleName</codeph> и <codeph>lastButtonStyleName</codeph>. Не следует применять стили к отдельным элементам управления Button, которые содержатся в элементе управления ToggleButtonBar.</p>
 
  <p>Элемент управления ToggleButtonBar по умолчанию имеет следующие характеристики:</p>
  <adobetable class="innertable">
     
     
     
      
    
  <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>описание;</entry></row></thead><tbody><row>
        <entry>предпочтительный размер.</entry>
        <entry>Имеет достаточную ширину для того, чтобы содержать все кнопки с текстом меток и значками, а также заполнители и разделители, и достаточную высоту для увеличения высоты кнопок.</entry>
     </row><row>
        <entry>Правила изменения размеров элементов управления</entry>
        <entry>По умолчанию размеры элементов управления не изменяются. Укажите размеры в процентах, если элемент ToggleButtonBar должен изменять свой размер в зависимости от размера вышестоящего контейнера.</entry>
     </row><row>
        <entry>selectedIndex</entry>
        <entry>Определяет кнопку, которая будет выбрана при создании элемента управления. При установке значения по умолчанию «0» выбирается кнопка, расположенная ближе к левому краю строки. Установка для свойства selectedIndex значения «-1» приводит к снятию выделения всех кнопок строки.</entry>
     </row><row>
        <entry>Заполнение</entry>
        <entry>0 пикселей для свойств нижнего, верхнего, левого и правого краев.</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="ToggleButtonBarExample.mxml"><swfblock conref="examples/ToggleButtonBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link><link href="mx.controls.xml#LinkBar"><linktext>mx.controls.LinkBar</linktext></link></related-links><apiConstructor id="mx.controls:ToggleButtonBar:ToggleButtonBar"><apiName>ToggleButtonBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:ToggleButtonBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Индекс выбранной кнопки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Индекс выбранной кнопки. Индексы находятся в диапазоне 0, 1, 2, ..., n - 1, где <i>n</i> представляет собой число кнопок.
     
      <p>Значением по умолчанию является 0. Значение -1 приводит к отмене выделения всех кнопок строки.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ToggleButtonBar:toggleOnClick:get"><apiName>toggleOnClick</apiName><shortdesc>
      Указывает пользователю на возможность отменить выделение выбранной в данный момент кнопки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает пользователю на возможность отменить выделение выбранной в данный момент кнопки. По умолчанию выбранная в настоящий момент кнопка становится невыделенной только в том случае, если выбирается другая кнопка в группе. Установка этого свойства как <codeph>true</codeph> позволяет пользователю отменять выделение. Если для выбранной в данный момент кнопки отменяется выделение, то свойство <codeph>selectedIndex</codeph> устанавливается равным <codeph>-1</codeph>.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:PopUpButton"><apiName>PopUpButton</apiName><shortdesc> 
  Элемент управления PopUpButton добавляет гибкий всплывающий интерфейс к элементу управления Button.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="selectedUpSkin"/><Exclude kind="style" name="selectedUpIcon"/><Exclude kind="style" name="selectedOverSkin"/><Exclude kind="style" name="selectedOverIcon"/><Exclude kind="style" name="selectedDownSkin"/><Exclude kind="style" name="selectedDownIcon"/><Exclude kind="style" name="selectedDisabledSkin"/><Exclude kind="style" name="selectedDisabledIcon"/><Exclude kind="property" name="toggle"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:PopUpButton" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет любого символа компонента. Примером является флажок элемента управления CheckBox или стрелка на кнопке элемента управления ScrollBar.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="skin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления для элемента управления с сохранением состояния. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpOverSkin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления для состояния popUpOver (над arrowButton) для фона и границы.
  </description>
<default>mx.skins.halo.PopUpButtonSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpIcon" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Значок, используемый для правой кнопки PopUpButton. Поддерживаются классы mx.skins.halo.PopUpIcon и mx.skins.halo.PopUpMenuIcon.
  </description>
<default>mx.skins.halo.PopUpIcon
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="popUpGap" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Число пикселей по вертикали между элементом PopUpButton и указанным всплывающим элементом UIComponent. 
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpDownSkin" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления для состояния popUpDown (если кнопка arrowButton находится в нажатом состоянии) для фона и границы.
  </description>
<default>mx.skins.halo.PopUpButtonSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="popUpStyleName" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, используемого элементом управления. Этот стиль позволяет управлять внешним видом объекта UIComponent, который вызывается данным элементом управления. 
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Function">
<description>
  Функция замедления для управления анимацией открытия компонента.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Длина открытого перехода в миллисекундах.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="icon" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Class">
<description>
  Класс значка по умолчанию для основной кнопки.
 
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Function">
<description>
  Функция замедления для управления анимацией закрытия компонента.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Длина закрытого перехода в миллисекундах.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="arrowButtonWidth" owner="mx.controls:PopUpButton" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между линией разделителя и правой границей компонента. 
  
  </description>
<default>18
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:PopUpButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:PopUpButton" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:PopUpButton&gt;</code> tag inherits all of the tag
  attributes of its superclass and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:PopUpButton
    <strong>Properties</strong> 
    openAlways="false|true
    popUp="No default"
  
    <strong>Styles</strong>
    arrowButtonWidth="16"
    closeDuration="250"
    closeEasingFunction="No default"
    disabledIconColor="0x999999"
    iconColor="0x111111"
    openDuration="250"
    openEasingFunction="No default"
    popUpDownSkin="popUpDownSkin"
    popUpGap="0"
    popUpIcon="PopUpIcon"
    popUpOverSkin="popUpOverSkin"
  
    <strong>Events</strong>
    close="No default"
    open="No default"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:Button</apiBaseClassifier></apiClassifierDef><apiDesc> 
  Элемент управления PopUpButton добавляет гибкий всплывающий интерфейс к элементу управления Button. Он содержит основную кнопку и дополнительную кнопку (всплывающую кнопку). При нажатии на всплывающую кнопку открывается объект UIComponent. 
 
  <p>На элементе управления PopUpButton может располагаться текстовая метка, значок или оба этих объекта. Когда пользователь щелкает основную часть элемента управления PopUpButton, передается событие <codeph>click</codeph>.</p>
 
  <p>Обычно в элементе управления PopUpButton всплывающая кнопка отправляет элементы управления List или Menu, которые изменяют функцию и метку основной кнопки.</p>
 
  <p>Элемент управления PopUpButton по умолчанию имеет характеристики, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Ширина, достаточная для размещения метки и значка на основной кнопке и значка на всплывающей кнопке</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Не определен</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="PopUpButtonExample.mxml"><swfblock conref="examples/PopUpButtonExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:PopUpButton_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Передается при открытии указанного объекта UIComponent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при открытии указанного объекта UIComponent.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:PopUpButton_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Передается при закрытии указанного объекта UIComponent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при закрытии указанного объекта UIComponent. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:PopUpButton:PopUpButton"><apiName>PopUpButton</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:PopUpButton:close"><apiName>close</apiName><shortdesc>
      Закрывает объект UIComponent, открытый элементом управления PopUpButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Закрывает объект UIComponent, открытый элементом управления PopUpButton.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:PopUpButton:open"><apiName>open</apiName><shortdesc>
      Открывает объект UIComponent, указанный в свойстве popUp.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Открывает объект UIComponent, указанный в свойстве <codeph>popUp</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:PopUpButton:closeOnActivity:get"><apiName>closeOnActivity</apiName><shortdesc>
      Если значение true, то указывает, что всплывающее окно закрывается щелчком мыши или с помощью какого-либо другого действия пользователя.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true 
     </apiDefaultValue></apiValueDef><apiDesc>
      Если значение<codeph>true</codeph>, то оно указывает, что всплывающий элемент управления закрывается щелчком мыши или с помощью какого-либо другого действия пользователя. Всплывающим элементом управления является элемент управления, открываемый нажатием всплывающей кнопки.
     
      <p>Для всплывающих элементов управления, например, Menu, List или TileList можно оставить это свойство с его значением по умолчанию <codeph>true</codeph>, так как эти элементы управления должны закрываться с помощью действия. Однако для выбора нескольких элементов и других типов всплывающих элементов управления можно установить это свойство на <codeph>false</codeph> для предотвращения закрытия всплывающего элемента управления с помощью действия.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpButton:openAlways:get"><apiName>openAlways</apiName><shortdesc>
      Если значение равно true, то объект popUp открывается при нажатии основной кнопки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, то объект <codeph>popUp</codeph> открывается при нажатии основной кнопки. Объект <codeph>popUp</codeph> всегда отображается при нажатии клавиши «Пробел» или при нажатии всплывающей кнопки вне зависимости от значения свойства <codeph>openAlways</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpButton:popUp:get"><apiName>popUp</apiName><shortdesc>
      Указывает всплывающий объект UIComponent или объект, определенный подклассом объекта UIComponent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier><apiDefaultValue>null 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает всплывающий объект UIComponent или объект, определенный подклассом объекта UIComponent. Например, пользователь может указать элементы управления Menu, TileList или Tree. 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:HRule"><apiName>HRule</apiName><shortdesc>
  Элемент управления HRule создает одну горизонтальную линию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:HRule" replacement="spark.primitives.Line" since="4.0">
	</Alternative><styles><style format="Length" inherit="yes" name="strokeWidth" owner="mx.controls:HRule" playerVersion="Flash9" type="Number">
<description>
  Толщина линейки в пикселях.
  <ul>
    <li>Если параметр <codeph>strokeWidth</codeph> имеет значение 1, линейка состоит из линии, толщиной 1 пиксель.</li>
    <li>Если параметр <codeph>strokeWidth</codeph> имеет значение 2, то линейка состоит из двух смежных горизонтальных линий толщиной в 1 пиксель.</li>
    <li>Если параметр <codeph>strokeWidth</codeph> имеет значение более 2, линейка является полым прямоугольником с границами шириной 1 пиксель.</li>
  </ul>
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="strokeColor" owner="mx.controls:HRule" playerVersion="Flash9" type="uint">
<description>
  Цвет линии. 
  <ul>
    <li>Если параметр <codeph>strokeWidth</codeph> имеет значение 1, цвет strokeColor является цветом всей линии.</li>
    <li>Если параметр <codeph>strokeWidth</codeph> равен 2, то цвет strokeColor соответствует цвету верхней строки.</li>
    <li>Если параметр <codeph>strokeWidth</codeph> имеет значение больше 2, цвет strokeColor является цветом верхнего и левого краев прямоугольника.</li>
  </ul> 
  
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="shadowColor" owner="mx.controls:HRule" playerVersion="Flash9" type="uint">
<description>
  Цвет тени строки. 
  <ul>
    <li>Если параметр <codeph>strokeWidth</codeph> имеет значение 1, цвет shadowColor не применяется.</li>
    <li>Если параметр <codeph>strokeWidth</codeph> равен 2, то цвет shadowColor соответствует цвету нижней строки.</li>
    <li>Если значение параметра <codeph>strokeWidth</codeph> больше 2, цвет shadowColor является цветом нижней и правой сторон прямоугольника.</li>
  </ul>
 
  </description>
<default>0xEEEEEE
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HRule&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:HRule
    <strong>Styles</strong>
    strokeColor="0xC4CCCC"
    shadowColor="0xEEEEEE"
    strokeWidth="2"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления HRule создает одну горизонтальную линию. Обычно этот элемент управления используется для создания разделительной линии в контейнере.
 
  <p>Элемент управления HRule имеет следующие свойства по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина по умолчанию составляет 100 пикселей, высота по умолчанию равна 2 пикселям. По умолчанию размер элемента управления HRule не изменяется. Для изменения размера задайте ширину и высоту в процентах.</entry>
        </row><row>
           <entry>strokeWidth</entry>
           <entry>2 пикселя.</entry>
        </row><row>
           <entry>strokeColor</entry>
           <entry>0xC4CCCC.</entry>
        </row><row>
           <entry>shadowColor</entry>
           <entry>0xEEEEEE.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleHRule.mxml"><swfblock conref="examples/SimpleHRule.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#VRule"><linktext>mx.controls.VRule</linktext></link></related-links><apiConstructor id="mx.controls:HRule:HRule"><apiName>HRule</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:PopUpMenuButton"><apiName>PopUpMenuButton</apiName><shortdesc>
  Элемент управления PopUpMenuButton создает элемент управления PopUpButton с основной подчиненной кнопкой и дополнительной подчиненной кнопкой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="selectedUpSkin"/><Exclude kind="style" name="selectedUpIcon"/><Exclude kind="style" name="selectedOverSkin"/><Exclude kind="style" name="selectedOverIcon"/><Exclude kind="style" name="selectedDownSkin"/><Exclude kind="style" name="selectedDownIcon"/><Exclude kind="style" name="selectedDisabledSkin"/><Exclude kind="style" name="selectedDisabledIcon"/><Exclude kind="property" name="toggle"/><styles><style inherit="no" name="popUpStyleName" owner="mx.controls:PopUpMenuButton" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS, используемого раскрывающимся меню. Это свойство позволяет управлять внешним видом раскрывающегося меню. По умолчанию свойство <codeph>fontWeight</codeph> равно <codeph>normal</codeph>, а свойство <codeph>textAlign</codeph> равно <codeph>left</codeph>.
 
  </description>
<default>"popUpMenu"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:PopUpMenuButton&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:PopUpMenuButton
    <strong>Properties</strong>
    dataDescriptor="<i>instance of DefaultDataDescriptor</i>"
    dataProvider="undefined"
    iconField="icon"
    iconFunction="undefined"
    labelField="label"
    labelFunction="undefined"
    showRoot="false|true"
    &nbsp;
    <strong>Event</strong>
    change=<i>No default</i>
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiTipTexts><apiTipText>Обеспечивает возможность открытия меню и выполнения функций кнопки
  </apiTipText></apiTipTexts><apiBaseClassifier>mx.controls:PopUpButton</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления PopUpMenuButton создает элемент управления PopUpButton с основной подчиненной кнопкой и дополнительной подчиненной кнопкой. Нажатие дополнительной (правой) подчиненной кнопки раскрывает меню, которое можно заполнить с помощью свойства <codeph>dataProvider</codeph>. В отличие от элементов управления Menu и MenuBar элемент управления PopUpMenuButton поддерживает только одноуровневое меню. Это означает, что меню не может содержать вложенные подменю.
 
  <p>На основной подчиненной кнопке элемента управления PopUpMenuButton может располагаться текстовая метка, значок или оба элемента. Когда пользователь выбирает элемент из раскрывающегося меню или нажимает основную кнопку элемента управления PopUpMenuButton, то элемент передает событие <codeph>itemClick</codeph>. Когда пользователь нажимает основную кнопку элемента управления, то элемент передает событие <codeph>click</codeph>. Пользователь может настроить внешний вид элемента управления PopUpMenuButton.</p>
 
  <p>Элемент управления PopUpMenuButton имеет характеристики размеров, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Размер, достаточный для размещения метки и любого значка на основной кнопке и значка на всплывающей кнопке. Элемент управления не резервирует место для меню.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>10000 на 10000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="PopUpButtonMenuExample.mxml"><swfblock conref="examples/PopUpButtonMenuExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link></related-links><adobeApiEvent id="mx.controls:PopUpMenuButton_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается, когда пользователь выбирает элемент из всплывающего меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь выбирает элемент из всплывающего меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:PopUpMenuButton:PopUpMenuButton"><apiName>PopUpMenuButton</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:PopUpMenuButton:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Дескриптор данных обращается к информации в поставщике данных и производит с ней различные операции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      Дескриптор данных обращается к информации в поставщике данных и производит с ней различные операции.
      <p>При указании этого свойства в качестве атрибута в MXML необходимо использовать ссылку на дескриптор данных, а не на имя строки дескриптора. Используйте следующий формат для свойства:</p>
     
      <pre>&lt;mx:PopUpMenuButton id="menubar" dataDescriptor="{new MyCustomDataDescriptor()}"/></pre>
     
      <p>В качестве альтернативы, в MXML свойство может быть указано в качестве вложенного подтега, как представлено в примере:</p>
     
      <pre>&lt;mx:PopUpMenuButton>
      &lt;mx:dataDescriptor>
         &lt;myCustomDataDescriptor>
      &lt;/mx:dataDescriptor>
      ...</pre>
     
      <p>Значением по умолчанию является внутренний экземпляр класса DefaultDataDescriptor.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:dataProvider:get"><apiName>dataProvider</apiName><shortdesc>
      Объект DataProvider для popUpMenu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Объект DataProvider для popUpMenu.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:iconField:get"><apiName>iconField</apiName><shortdesc>
      Имя поля в массиве dataProvider, содержащее пиктограммы, отображаемые для каждого элемента меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"icon"
     </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в массиве <codeph>dataProvider</codeph>, содержащее пиктограммы, отображаемые для каждого элемента меню. При установке свойства <codeph>iconFunction</codeph> оно перезаписывает это свойство.
     
      <p>Средство визуализации выполняет в поставщике данных поиск свойства с именем, определенным для свойства <codeph>iconField</codeph>. Если значением этого свойства является класс, то он реализует этот класс и ожидает, что он станет экземпляром IflexDisplayObject. Если значением свойства является строка, то выполняется поиск свойства класса с именем в приложении. Если свойство в приложении невозможно найти, выполняется поиск в документе с этим именем и ожидается отображение этого свойства в классе.</p>
     
      <p>Если поставщиком данных является объект E4X XML, необходимо установить это свойство явным способом; например, использовать @icon для определения атрибута <codeph>icon</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:iconFunction:get"><apiName>iconFunction</apiName><shortdesc>
      Функция, определяющая пиктограмму, отображаемую для каждого элемента меню.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
     </apiDefaultValue></apiValueDef><apiDesc>
      Функция, определяющая пиктограмму, отображаемую для каждого элемента меню. Если это свойство опускается, в программе Flex используется содержимое поля или атрибута, определяемое свойством <codeph>iconField</codeph>. При указании этого свойства, Flex игнорирует любое значение свойства <codeph>iconField</codeph>.
     
      <p>По умолчанию меню не отображает пиктограммы с текстом в строках. Однако, указав функцию значка, можно определить класс для графического объекта, который создается и отображается в строке как значок. </p>
     
      <p>Функция iconFunction принимает отдельный аргумент, являющийся элементом в поставщике данных, и возвращает класс:</p>
     
      <blockquote>
      <codeph>iconFunction(item:Object):Class</codeph>
      </blockquote>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:labelField:get"><apiName>labelField</apiName><shortdesc>
      Имя поля в массиве Array объекта dataProvider, который содержит текст, отображаемый для каждого элемента меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"label"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Имя поля в массиве Array объекта <codeph>dataProvider</codeph>, который содержит текст, отображаемый для каждого элемента меню. Если свойство <codeph>labelFunction</codeph> задано, то оно переопределяет данное свойство. Если поставщик данных является массивом Array из элементов String, то Flex использует значения String в качестве меток. Если поставщик данных является объектом E4X XML, то данное свойство необходимо задать явным образом. Например, используйте строку @label для указания атрибута <codeph>label</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Функция, определяющая текст, который должен быть отображен для каждого из пунктов меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Функция, определяющая текст, который должен быть отображен для каждого из пунктов меню. При отсутствии этого свойства Flex использует содержимое поля или атрибута, определенного в свойстве <codeph>labelField</codeph>. Установка данного свойства приводит к игнорированию любого значения свойства <codeph>labelField.</codeph>
     
      <p>При задании этого свойства функция метки должна обнаружить соответствующее поле или поля и вернуть отображаемую строку. Свойство <codeph>labelFunction</codeph> можно также использовать для обработки форматирования и локализации.</p>
     
      <p>В качестве аргумента функция метки принимает элемент в объекте dataProvider и возвращает элемент String, как показано в следующем примере:</p>
     
      <pre>labelFunction(item:Object):String</pre>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Указывает необходимость отображения узла верхнего уровня или узлов поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает необходимость отображения узла верхнего уровня или узлов поставщика данных. Если установлено значение <codeph>false</codeph>, то элемент управления отображает только нижестоящие элементы первого узла верхнего уровня. Все остальные узлы верхнего уровня игнорируются. Обычно это свойство имеет значение <codeph>false</codeph> для поставщиков данных XML формата E4X, где узлом верхнего уровня является объект документа.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:PopUpMenuButton:popUp:set"><apiName>popUp</apiName><shortdesc>
      Ссылка на всплывающий объект Menu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на всплывающий объект Menu.
     
      <p>Это свойство предназначено только для чтения. Установка этого свойства не приведет к выполнению каких-либо действий. Вместо этого следует задать свойство <codeph>dataProvider</codeph>. (Индикатор «Только для записи» отображается в сводке синтаксиса, так как свойство в суперклассе предназначено для чтения и записи, а этот класс переопределяет установщик пустой реализацией.)</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:DateChooser"><apiName>DateChooser</apiName><shortdesc>
  Элемент управления DateChooser отображает название месяца, год и сетку дней месяца, где столбцы представляют собой дни недели.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><styles><style inherit="no" name="weekDayStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Имя определения таблицы стилей для конфигурирования названий дней недели для элемента управления. Если не указано, названия дней недели наследуют текстовые стили элемента управления.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="todayStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Имя определения таблицы стилей для конфигурирования внешнего вида числа текущей даты, который выделяется в элементе управления в случае, если для свойства <codeph>showToday</codeph> установлено значение <codeph>true</codeph>. Укажите стиль color для изменения цвета шрифта. Если не указано, текст для текущей даты наследует текстовые стили элемента управления.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="todayIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для области выделения текущей даты в элементе управления DateChooser. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="todayColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет фона текущей даты. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="symbolColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет любого символа компонента. Примером является флажок элемента управления CheckBox или стрелка на кнопке элемента управления ScrollBar.
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для области выделения, выбранной в настоящий момент даты в элементе управления DateChooser. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Цвет области выделения выбранной в настоящий момент даты в элементе управления DateChooser. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="rollOverIndicatorSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для области выделения даты при наведении указателя мыши на дату в элементе управления DateChooser. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Цвет области выделения даты при наведении на нее курсора мыши в элементе управления DateChooser. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего года, если указатель мыши не находится над стрелкой. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего года, если указатель мыши находится на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего года при нажатии кнопки мыши на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего года, если стрелка отключена. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevYearSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего года. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего месяца, если указатель мыши не находится на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего месяца, если указатель мыши находится на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего месяца при нажатии кнопки мыши на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего месяца, если стрелка отключена. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="prevMonthSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки предыдущего месяца. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего года, если указатель мыши не находится на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего года, если указатель мыши перемещается на стрелку. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего года при нажатии кнопки мыши на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего года, если стрелка отключена. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextYearSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для фона и границы DataGridCellEditor. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthUpSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего месяца, если указатель мыши не находится на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthOverSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего месяца, если указатель мыши находится на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthDownSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего месяца при нажатии кнопки мыши на стрелке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthDisabledSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего месяца, если стрелка отключена. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="nextMonthSkin" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Class">
<description>
  Имя класса, используемого в качестве темы оформления для стрелки следующего месяца. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-прозрачность, используемая для заливки выделения цветом элементов управления. Первое значение указывает прозрачность верхней части области выделения цветом и второе значение указывает прозрачность нижней части области выделения цветом. Выделена цветом верхняя половина темы оформления.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerStyleName" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Имя определения таблицы стилей для конфигурирования текста (название месяца и год) и внешнего вида области заголовка элемента управления.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="headerColors" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="Array">
<description>
  Цвета полосы в верхней области элемента управления DateChooser. Значение по умолчанию равно <codeph>[ 0xE1E5EB, 0xF4F5F7 ]</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет кольца фокуса, если компонент в фокусе.
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
   <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет области содержимого компонента.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="contentBackgroundAlpha" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал фона содержимого для данного компонента.
 
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Видимость границы.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина ограничительной рамки. Используется только в случае, если для свойства <codeph>borderStyle</codeph> установлено значение <codeph>solid</codeph>.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет границы. Этот стиль поддерживает следующие элементы управления: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider, а также любые компоненты, поддерживающие стиль <codeph>borderStyle</codeph>. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:DateChooser" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал границы.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона для элемента управления DateChooser.
  
  </description>
<default>0xFFFFF
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Альфа-уровень цвета, определенного свойством <codeph>backgroundColor</codeph>. Допустимыми являются значения от 0,0 до 1,0.
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:DateChooser" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:DateChooser" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:DateChooser" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:DateChooser" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DateChooser" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 6.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по горизонтали. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является 8.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:DateChooser" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:DateChooser" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:DateChooser&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:DateChooser
    <strong>Properties</strong>
    allowDisjointSelection="true|false"
    allowMultipleSelection="false|true"
    dayNames="["S", "M", "T", "W", "T", "F", "S"]"
    disabledDays="<i>No default</i>"
    disabledRanges="<i>No default</i>"
    displayedMonth="<i>Current month</i>"
    displayedYear="<i>Current year</i>"
    firstDayOfWeek="0"
    maxYear="2100"
    minYear="1900"
    monthNames="["January", "February", "March", "April", "May",
      "June", "July", "August", "September", "October", "November",
      "December"]"
    monthSymbol=""
    selectableRange="<i>No default</i>"
    selectedDate="<i>No default</i>"
    selectedRanges="<i>No default</i>"
    showToday="true|false"
    yearNavigationEnabled="false|true"
    yearSymbol=""
 
    <strong>Styles</strong>
    backgroundColor="0xFFFFFF"
    backgroundAlpha="1.0"
    borderColor="0xAAB3B3"
    borderThickness="1"
    color="0x0B333C"
    cornerRadius="4"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x999999"
    fillAlphas="[0.6, 0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.5"
    focusRoundedCorners"tl tr bl br"
    fontAntiAliasType="advanced"
    fontFamily="Verdana"
    fontGridFitType="pixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    headerColors="[0xE1E5EB, 0xF4F5F7]"
    headerStyleName="headerDateText"
    highlightAlphas="[0.3, 0.0]"
    horizontalGap="8"
    iconColor="0x111111"
    leading="2"
    nextMonthDisabledSkin="DateChooserMonthArrowSkin"
    nextMonthDownSkin="DateChooserMonthArrowSkin"
    nextMonthOverSkin="DateChooserMonthArrowSkin"
    nextMonthSkin = "DateChooserMonthArrowSkin" 
    nextMonthUpSkin="DateChooserMonthArrowSkin"
    nextYearDisabledSkin="DateChooserYearArrowSkin"
    nextYearDownSkin="DateChooserYearArrowSkin"
    nextYearOverSkin="DateChooserYearArrowSkin"
    nextYearSkin = "DateChooserYearArrowSkin"
    nextYearUpSkin="DateChooserYearArrowSkin"
    prevMonthDisabledSkin="DateChooserMonthArrowSkin"
    prevMonthDownSkin="DateChooserMonthArrowSkin"
    prevMonthOverSkin="DateChooserMonthArrowSkin"
    prevMonthSkin = "DateChooserMonthArrowSkin"
    prevMonthUpSkin="DateChooserMonthArrowSkin"
    prevYearDisabledSkin="DateChooserYearArrowSkin"
    prevYearDownSkin="DateChooserYearArrowSkin"
    prevYearOverSkin="DateChooserYearArrowSkin"
    prevYearSkin = "DateChooserYearArrowSkin"
    prevYearUpSkin="DateChooserYearArrowSkin"
    rollOverColor="0xEEFEE6"
    rollOverIndicatorSkin="DateChooserIndicator"
    selectionColor="0xB7F39B"
    selectionIndicatorSkin="DateChooserIndicator"
    textAlign="left|right|center"
    textDecoration="none|underline"
    textIndent="0"
    todayColor="0x818181"
    todayIndicatorSkin="DateChooserIndicator"
    todayStyleName="todayStyle"
    verticalGap="6"
    weekDayStyleName="weekDayStyle"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerComponent</apiBaseInterface><apiBaseInterface>mx.core:IFontContextComponent</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления DateChooser отображает название месяца, год и сетку дней месяца, где столбцы представляют собой дни недели. Пользователь может выбрать дату, диапазон дат или несколько дат. Элемент управления содержит кнопки со стрелками для перехода вперед и назад, позволяющие изменять месяц и год. Администратор может разрешить пользователям выбирать несколько дат, запрещать выбор определенных дат и ограничивать отображаемые даты определенным диапазоном.
 
  <p>Элемент управления DateChooser по умолчанию имеет характеристики, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Размер, достаточный для включения календаря, ширина которого позволяет отображать полные названия дней.</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Без ограничений</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="DateChooserExample.mxml"><swfblock conref="examples/DateChooserExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link></related-links><adobeApiEvent id="mx.controls:DateChooser_mx.events.DateChooserEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Передается при изменении месяца в результате действий пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DateChooserEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.DateChooserEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении месяца в результате действий пользователя.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DateChooser_mx.events.CalendarLayoutChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при выборе или изменении даты.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CalendarLayoutChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.CalendarLayoutChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе или изменении даты.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DateChooser:DateChooser"><apiName>DateChooser</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:DateChooser:allowDisjointSelection:get"><apiName>allowDisjointSelection</apiName><shortdesc>
      Если значение равно true, то в элементе управления DateChooser разрешен выбор несмежных элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true;
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, то в элементе управления DateChooser разрешен выбор несмежных элементов. Это свойство действует только в том случае, если свойство <codeph>allowMultipleSelection</codeph> равно <codeph>true</codeph>. Установка этого свойства изменяет внешний вид элемента управления DateChooser.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:allowMultipleSelection:get"><apiName>allowMultipleSelection</apiName><shortdesc>
      Если значение равно true, то в элементе управления DateChooser разрешен выбор нескольких элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение равно <codeph>true</codeph>, то в элементе управления DateChooser разрешен выбор нескольких элементов. Установка этого свойства изменяет внешний вид элемента управления DateChooser.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:protected:calendarLayoutStyleFilters:get"><apiName>calendarLayoutStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из элемента DateChooser в макет календаря.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из элемента DateChooser в макет календаря.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:dayNames:get"><apiName>dayNames</apiName><shortdesc>
      Названия дней недели для элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "S", "M", "T", "W", "T", "F", "S" ].
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Названия дней недели для элемента управления DateChooser. Изменение этого свойства приводит к изменению меток дней в элементе управления DateChooser. Первым днем является воскресенье (с индексом 0). Остальные названия дней недели следуют в обычном порядке.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:disabledDays:get"><apiName>disabledDays</apiName><shortdesc>
      Дни недели, подлежащие деактивации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Дни недели, подлежащие деактивации. Деактивируются все даты в пределах месяца, соответствующие указанному дню. Это свойство изменяет внешний вид элемента управления DateChooser. Элементы этого массива могут иметь значения от 0 (воскресенье) до 6 (суббота). Например, значение <codeph>[0, 6]</codeph> деактивирует воскресенье и субботу.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:disabledRanges:get"><apiName>disabledRanges</apiName><shortdesc>
      Позволяет деактивировать один или несколько дней.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Позволяет деактивировать один или несколько дней.
     
      <p>Это свойство принимает массив объектов в качестве параметра. Каждый объект в этом массиве является либо объектом Date, определяющим один день, подлежащий деактивации; либо объектом, содержащим один или оба свойства <codeph>rangeStart</codeph> и <codeph>rangeEnd</codeph>, каждое из значений которых представляет собой объект Date. Значение этих свойств указывает границы диапазона дат. Если любое из значений опущено, диапазон рассматривается как неограниченный в соответствующем направлении. Если определено только свойство <codeph>rangeStart</codeph>, деактивируются все даты после указанной даты, включая дату <codeph>rangeStart</codeph>. Если определено только свойство <codeph>rangeEnd</codeph>, деактивируются все даты, предшествующие указанной дате, включая дату <codeph>rangeEnd</codeph>. Для деактивации отдельного дня используется отдельный объект Date в массиве, указывающий определенную дату. Значения времени при наличии заполняются нулями из объекта Date.</p>
     
      <p>Например, требуется деактивировать следующие даты: 11 января 2006 г. в диапазоне от 23 января до 10 февраля 2006 г., а также 1 марта 2006 г. и все последующие даты.</p>
     
      <p><codeph>disabledRanges="{[ new Date(2006,0,11), {rangeStart: new Date(2006,0,23), rangeEnd: new Date(2006,1,10)}, {rangeStart: new Date(2006,2,1)} ]}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:displayedMonth:get"><apiName>displayedMonth</apiName><shortdesc>
      Используемое вместе со свойством displayedYear свойство displayedMonth указывает месяц, отображаемый в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Используемое вместе со свойством <codeph>displayedYear</codeph> свойство <codeph>displayedMonth</codeph> указывает месяц, отображаемый в элементе управления DateChooser. Номера месяцев отсчитываются от нуля, таким образом, январь указывается как 0, а декабрь – как 11. Установка этого свойства изменяет внешний вид элемента управления DateChooser.
     
      <p>Значением по умолчанию является текущий месяц.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:displayedYear:get"><apiName>displayedYear</apiName><shortdesc>
      Используемое вместе со свойством displayedMonth свойство displayedYear указывает год, отображаемый в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Используемое вместе со свойством <codeph>displayedMonth</codeph> свойство <codeph>displayedYear</codeph> указывает год, отображаемый в элементе управления DateChooser. Установка этого свойства изменяет внешний вид элемента управления DateChooser.
     
      <p>Значением по умолчанию является текущий год.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:firstDayOfWeek:get"><apiName>firstDayOfWeek</apiName><shortdesc>
      Число, представляющее день недели, отображаемый в первом столбце элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>0 (Sunday)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Число, представляющее день недели, отображаемый в первом столбце элемента управления DateChooser. Значение должно находиться в диапазоне от 0 до 6, где 0 соответствует воскресенью, первому элементу массива <codeph>dayNames</codeph>.
     
      <p>При установке значения для этого свойства изменяется порядок следования столбцов с названиями дней недели. Например, установка этого свойства в значение 1 отображает понедельник в первом столбце элемента управления.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:maxYear:get"><apiName>maxYear</apiName><shortdesc>
      Последний год, который можно выбрать в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>2100
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Последний год, который можно выбрать в элементе управления.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:minYear:get"><apiName>minYear</apiName><shortdesc>
      Первый год, который можно выбрать в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>1900
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Первый год, который можно выбрать в элементе управления.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:monthNames:get"><apiName>monthNames</apiName><shortdesc>
      Названия месяцев, отображаемые в верхней части элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[ "January", "February", "March", "April", "May", "June", 
      "July", "August", "September", "October", "November", "December" ]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Названия месяцев, отображаемые в верхней части элемента управления DateChooser. Свойство <codeph>monthSymbol</codeph> добавляется в конец значения, указанного свойством <codeph>monthNames</codeph>, которое рекомендуется использовать в таких языках, как японский.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:monthSymbol:get"><apiName>monthSymbol</apiName><shortdesc>
      Это свойство добавляется в конец значения, указанного свойством monthNames, для указания названий месяцев, отображаемых в верхней части элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Это свойство добавляется в конец значения, указанного свойством <codeph>monthNames</codeph>, для указания названий месяцев, отображаемых в верхней части элемента управления DateChooser. В некоторых языках, например, в японском, после имени месяца используется специальный символ. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:protected:nextMonthStyleFilters:get"><apiName>nextMonthStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из элемента DateChooser кнопке следующего месяца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из элемента DateChooser кнопке следующего месяца.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:nextYearStyleFilters:get"><apiName>nextYearStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из элемента DateChooser кнопке следующего года.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из элемента DateChooser кнопке следующего года.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:prevMonthStyleFilters:get"><apiName>prevMonthStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из элемента DateChooser кнопке предыдущего месяца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из элемента DateChooser кнопке предыдущего месяца.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:protected:prevYearStyleFilters:get"><apiName>prevYearStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из элемента DateChooser кнопке предыдущего года.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из элемента DateChooser кнопке предыдущего года.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:DateChooser:selectableRange:get"><apiName>selectableRange</apiName><shortdesc>
      Диапазон доступных для выбора дат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Диапазон доступных для выбора дат. Например, можно выбрать дату между 04-12-2006 и 04-12-2007, но даты вне этого диапазона для выбора недоступны.
     
      <p>Это свойство принимает объект в качестве параметра. Объект содержит два свойства типа Date: <codeph>rangeStart</codeph> и <codeph>rangeEnd</codeph>. Если указано только значение для <codeph>rangeStart</codeph>, будут активированы все даты после указанной даты. Если указано только значение для <codeph>rangeEnd</codeph>, будут активированы все даты до указанной даты. Для активации только одной даты в элементе управления DateChooser можно передать объект Date напрямую. Значения времени при наличии заполняются нулями из объекта Date.</p>
     
      <p>В следующем примере активирован только диапазон с 1 января 2006 года по 30 июня 2006 года. Месяцы до января и после июня не отображаются в DateChooser.</p>
     
      <p><codeph>selectableRange="{{rangeStart : new Date(2006,0,1), rangeEnd : new Date(2006,5,30)}}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:selectedDate:get"><apiName>selectedDate</apiName><shortdesc>
      Дата, выбранная в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Дата, выбранная в элементе управления DateChooser. Если входящий объект Date имеет значения времени, они заполняются нулями.
     
      <p>Нажатие клавиши Ctrl при выборе даты, выделенной в настоящий момент, приводит к отмене выделения, устанавливает свойство <codeph>selectedDate</codeph> равным <codeph>null</codeph>, а затем передает событие <codeph>change</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:selectedRanges:get"><apiName>selectedRanges</apiName><shortdesc>
      Выбранные диапазоны дат.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/><apiDefaultValue>[]
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Выбранные диапазоны дат.
     
      <p>Это свойство принимает массив объектов в качестве параметра. Каждый объект в массиве имеет два объекта даты: <codeph>rangeStart</codeph> и <codeph>rangeEnd</codeph>. Выбираются диапазоны дат между каждым объектом <codeph>rangeStart</codeph> и объектом <codeph>rangeEnd</codeph> (включительно). Для выбора одного дня установите <codeph>rangeStart</codeph> и <codeph>rangeEnd</codeph> равными одной и той же дате. Значения времени при наличии заполняются нулями из объекта Date.</p>
     
      <p>В следующем примере выбирается дата 11 января 2006 года, а также диапазон с 23 января по 10 февраля 2006 года. </p>
     
      <p><codeph>selectedRanges="{[ {rangeStart: new Date(2006,0,11), rangeEnd: new Date(2006,0,11)}, {rangeStart:new Date(2006,0,23), rangeEnd: new Date(2006,1,10)} ]}"</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:showToday:get"><apiName>showToday</apiName><shortdesc>
      Значение true указывает, что текущая дата выделена в элементе управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Значение <codeph>true</codeph> указывает, что текущая дата выделена в элементе управления DateChooser. Установка этого свойства изменяет внешний вид элемента управления DateChooser.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:yearNavigationEnabled:get"><apiName>yearNavigationEnabled</apiName><shortdesc>
      Активирует навигацию по годам.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Активирует навигацию по годам. Если значение <codeph>true</codeph>, справа от года появляются кнопки для перехода вверх и вниз. Эти кнопки используются для изменения текущего года. В языках, в которых в формате даты год указывается перед месяцем, эти кнопки отображаются слева от года.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DateChooser:yearSymbol:get"><apiName>yearSymbol</apiName><shortdesc>
      Это свойство добавляется в конец года, отображаемого в верхней части элемента управления DateChooser.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Это свойство добавляется в конец года, отображаемого в верхней части элемента управления DateChooser. В некоторых языках, например, в японском, после года добавляется еще один символ. 
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:ComboBox"><apiName>ComboBox</apiName><shortdesc>
  Элемент управления ComboBox содержит раскрывающийся список, из которого пользователь может выбрать одно значение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><DefaultProperty name="dataProvider"/><styles><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  textSelectedColor в раскрывающемся списке. <codeph/> <codeph/>
 
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  textRollOverColor в раскрывающемся списке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  selectionEasingFunction в раскрывающемся списке.
 
  </description>
<default>undefined
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Time" inherit="no" name="selectionDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  selectionDuration в раскрывающемся списке.
 
  </description>
<default>250
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  selectionColor в раскрывающемся списке. <codeph/> <codeph/>
 
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  rollOverColor в раскрывающемся списке. <codeph/> <codeph/>
 
  </description>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей элемента управления и верхним краем его области содержимого. Если для свойства <codeph>editable</codeph> установлено значение <codeph>true</codeph>, то <codeph>paddingTop</codeph> и <codeph>paddingBottom</codeph> влияют на размер элемента управления ComboBox, но не оказывают влияния на положение редактируемого текстового поля.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей элемента управления и нижним краем его области содержимого. Если для свойства <codeph>editable</codeph> установлено значение <codeph>true</codeph>, то <codeph>paddingTop</codeph> и <codeph>paddingBottom</codeph> влияют на размер элемента управления ComboBox, но не оказывают влияния на положение редактируемого текстового поля.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="openEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  Функция замедления для управления открытым переходом. Функции замедления могут использоваться для управления ускорением и замедлением перехода.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Длина перехода (в миллисекундах) при открытии раскрывающегося списка. По умолчанию эффект перехода состоит в раскрытии списка вниз из ComboBox.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropdownStyleName" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Имя стиля CSSStyleDeclaration, используемого раскрывающимся списком. Этот стиль позволяет управлять внешним видом раскрывающегося списка или средствами визуализации его элементов.
 
  </description>
<default>"comboDropdown"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style deprecatedReplacement="dropdownStyleName" inherit="no" name="dropDownStyleName" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Имя стиля CSSStyleDeclaration, используемого раскрывающимся списком. Этот стиль позволяет управлять внешним видом раскрывающегося списка или средствами визуализации его элементов. [устаревший]
 
  </description>
<default>"comboDropDown"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropdownBorderColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет границ ComboBox. Если указано значение <codeph>undefined</codeph>, то в раскрывающемся списке используется стандартный стиль borderColor. Этот же стиль используется средствами проверки для отображения ComboBox в состоянии ошибки.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="closeEasingFunction" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Function">
<description>
  Функция замедления для управления закрытым переходом. Функции замедления могут использоваться для управления ускорением и замедлением перехода.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="closeDuration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Длина перехода (в миллисекундах) при закрытии раскрывающегося списка. По умолчанию эффект перехода состоит в возвращении списка в ComboBox.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Толщина границы раскрывающегося списка в пикселях. Это значение отменяется в случае определения <codeph>borderThickness</codeph> при установленном значении <codeph>dropdownStyleName</codeph> для CSSStyleDeclaration. 
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="arrowButtonWidth" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Ширина кнопки со стрелкой в пикселях.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Array">
<description>
  Набор BackgroundColors для строк раскрывающегося списка в образце с чередованием цветов. Значением может быть массив из двух или более цветов. Если установлено значение <codeph>undefined</codeph>, то для строк используется стиль раскрывающегося списка backgroundColor.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны контейнера в пикселях.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="textFieldClass" owner="mx.controls:ComboBox" playerVersion="Flash10" type="Class">
<description>
  Класс, реализующий IUITextField, который используется этим компонентом для визуализации текста.
 
  <p>Этот тип можно установить либо для класса mx.core.UITextField (для использования типичного класса TextField, встроенного в Flash Player), либо для класса mx.core.UIFTETextField (для использования Text Layout Framework для достижения оптимизированной визуализации текста, включая двусторонний макет).</p>
 
  </description>
<default>mx.core.UITextField
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Определяет использование подчеркивания текста. Возможными значениями являются <codeph>none</codeph> и <codeph>underline</codeph>.
 
  </description>
<default>"none"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="yes" name="textAlign" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Выравнивание текста внутри контейнера. Возможными значениями являются <codeph>left</codeph>, <codeph>right</codeph> или <codeph>center</codeph>.
 
  <p>Значением по умолчанию является <codeph>left</codeph>. Для компонента FormItem, значением по умолчанию является <codeph>right</codeph>. Для компонентов Button, LinkButton и AccordionHeader значением по умолчанию является <codeph>center</codeph> и это свойство является допустимым, только если свойство <codeph>labelPlacement</codeph> установлено на <codeph>left</codeph> или <codeph>right</codeph>. Если свойство <codeph>labelPlacement</codeph> установлено на <codeph>top</codeph> или <codeph>bottom</codeph>, текст и любой значок располагаются по центру.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="mx.controls:ComboBox" playerVersion="Flash10" type="String">
<description>
  Языковой стандарт текста, отображаемый этим компонентом.
 
  <p>FTE и TLF используют этот языковой стандарт для сопоставления символов «Юникод» с глифами шрифтов и поиска резервных шрифтов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  </description>
<default>"en"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="letterSpacing" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Число дополнительных пикселей, отображаемых между каждым символом. Положительное значение увеличивает интервал между символами вне стандартного интервала, в то время как отрицательное значение его уменьшает.
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="kerning" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Boolean">
<description>
  Логическое значение, указывающее использование кернинга (<codeph>true</codeph> – включено и <codeph>false</codeph> – отключено). Кернинг регулирует промежуток между определенными символьными парами для повышения удобочитаемости и должен использоваться, например, в заголовках при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов. Определенные шрифты, например, Verdana, и моноширинные шрифты, например, Courier New, не поддерживают кернинг.
 
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Определяет использование жирного шрифта в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph> bold</codeph>. Значение по умолчанию для элемента управления Button <codeph>bold</codeph>. Значением по умолчанию для всех прочих элементов управления является<codeph>normal</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontThickness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>thickness</codeph> внутреннего класса TextFields, представляющего текст в элементе управления Flex. Это свойство указывает толщину границ глифов. Возможные значения – числа от -200 до 200. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Определяет использование курсива в тексте. Допустимыми значениями являются <codeph>normal</codeph> и <codeph>italic</codeph>.
 
  </description>
<default>"normal"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Высота текста в пикселях.    
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontSharpness" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Устанавливает свойство <codeph>sharpness</codeph> для внутреннего класса TextFields, представляющего текст в элементах управления Flex. Это свойство указывает резкость краев глифа. Возможными значениями являются числа от -400 до 400. 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
  
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link></related-links></style><style enumeration="none,pixel,subpixel" inherit="yes" name="fontGridFitType" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>gridFitType</codeph> внутреннего класса TextFields, представляющего текст в элементах управления Flex. Допустимыми значениями являются <codeph>none</codeph> (<codeph>flash.text.GridFitType.NONE</codeph>), <codeph>pixel</codeph> (<codeph>flash.text.GridFitType.PIXEL</codeph>) и <codeph>subpixel</codeph> (<codeph>flash.text.GridFitType.SUBPIXEL</codeph>). 
  
  <p>Это свойство применяется только при использовании встроенного шрифта и при установке свойства <codeph>fontAntiAliasType</codeph> на <codeph>advanced</codeph>.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
 
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления TextField; его можно применять только к определенным символам.</p>
 
  </description>
<default>"pixel"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.GridFitType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.GridFitType.xml"><linktext>flash.text.GridFitType</linktext></link></related-links></style><style inherit="yes" name="fontFamily" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Имя используемого шрифта. В отличие от использования в реализации CSS, разделенные запятой списки не поддерживаются. Можно использовать любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="normal,advanced" inherit="yes" name="fontAntiAliasType" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Устанавливает свойство <codeph>antiAliasType</codeph> внутреннего класса TextFields. Возможными значениями являются <codeph>normal</codeph> (<codeph>flash.text.AntiAliasType.NORMAL</codeph>) и <codeph>advanced</codeph> (<codeph>flash.text.AntiAliasType.ADVANCED</codeph>). 
  
  <p>Значением по умолчанию является <codeph>advanced</codeph>, активирующее расширенные возможности сглаживания для шрифтов. Установлено на <codeph>normal</codeph> для деактивации расширенных возможностей сглаживания.</p>
  
  <p>Этот стиль не влияет на системные шрифты.</p>
  
  <p>Этот стиль применяется ко всему тексту в нижестоящем элементе управления класса TextField; его можно применять только к определенным символам.</p>

  </description>
<default>"advanced"
 
  </default>

<playerversion>AIR 1.1
  </playerversion>

<see>flash.text.AntiAliasType
  
  </see>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog><related-links><link href="" invalidHref="flash.text.TextField.xml"><linktext>flash.text.TextField</linktext></link><link href="" invalidHref="flash.text.AntiAliasType.xml"><linktext>flash.text.AntiAliasType</linktext></link></related-links></style><style format="Color" inherit="yes" name="disabledColor" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте при его деактивации.
 
  </description>
<default>0xAAB3B3
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="mx.controls:ComboBox" playerVersion="Flash10" type="String">
<description>
  Направленность текста, отображенная компонентом.
 
  <p>Допустимые значения – <codeph>ltr</codeph> для текста, записываемого слева направо, как в гарнитурах латинского стиля, и <codeph>rtl</codeph> для текста, записываемого справа налево, как в арабском и иврите.</p>
 
  <p>FTE и TLF используют это значение в алгоритме двухстороннего макета текста, который сопоставляет последовательность символов «Юникод» с последовательностью глифов.</p>
 
  <p>Примечание. Этот стиль применяется только в том случае, если компонент MX определяет UIFTETextField как <codeph>textFieldClass</codeph>.</p>
 
  <p>Параметр <codeph>direction</codeph> также влияет на выравнивание текста в рамках TLFTextField. Однако он не влияет на размещение TLFTextField внутри компонента.</p>
 
  </description>
<default>"ltr"
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="mx.controls:ComboBox" playerVersion="Flash9" type="uint">
<description>
  Цвет текста в компоненте, включая метку компонента. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="highlightAlphas" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-прозрачность, используемая для заливки выделения цветом элементов управления. Первое значение указывает прозрачность верхней части области выделения цветом и второе значение указывает прозрачность нижней части области выделения цветом. Выделена цветом верхняя половина темы оформления.
  
  </description>
<default>[ 0.3, 0.0 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="no" name="fillColors" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Цвета, используемые для определения оттенка заливки фона элемента управления. Для получения плоского вида для обоих значений устанавливается один и тот же цвет.
  
  </description>
<default>[ 0xFFFFFF, 0xCCCCCC ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="Number" inherit="no" name="fillAlphas" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Альфа-каналы, используемые для заливки фона элементов управления. Используйте [1, 1] для получения непрозрачного фона для элементов управления.
  
  </description>
<default>[ 0.6, 0.4 ]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов компонента. Этот стиль поддерживают следующие компоненты: Alert, Button, ComboBox, LinkButton, MenuBar, NumericStepper, Panel, ScrollBar, Tab, TitleWindow, а также любой компонент, поддерживающий свойство <codeph>borderStyle</codeph>, установленное на <codeph>solid</codeph>. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет границы. Этот стиль поддерживает следующие элементы управления: Button, CheckBox, ComboBox, MenuBar, NumericStepper, ProgressBar, RadioButton, ScrollBar, Slider, а также любые компоненты, поддерживающие стиль <codeph>borderStyle</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>0xB7BABC</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingRight" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между правой границей компонента и правым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingLeft" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Количество пикселей между левой границей компонента и левым краем его области содержимого.
  <p>По умолчанию используется значение 0.</p>
  <p/>
  <p>Значение по умолчанию для элемента управления ComboBox: 5.</p>
  <p>Значением по умолчанию для контейнера Form является 16.</p>
  <p>Значением по умолчанию для элемента управления Tree является 2.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="leading" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Дополнительный вертикальный пробел между строками текста.
 
  <p>По умолчанию используется значение 2.</p>
  <p>Значением по умолчанию для элемента управления ComboBox является 0.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:ComboBox" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusRoundedCorners" owner="mx.controls:ComboBox" playerVersion="Flash9" type="String">
<description>
  Указывает, какие углы прямоугольника требуется скруглить. Это значение представляет собой разделенную пробелами строку, которая может содержать любое сочетание значений <codeph>tl</codeph>, <codeph>tr</codeph>, <codeph>bl</codeph> и <codeph>br</codeph>. Например, для указания того, что требуется скруглить правые боковые углы, но оставить прямыми углы с левого края, используется значение <codeph>tr br</codeph>. Свойство стиля <codeph>cornerRadius</codeph> указывает радиус скругления углов. Значение по умолчанию зависит от класса компонента; если оно не отменено для класса, значением по умолчанию является <codeph>tl tr bl br</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="focusAlpha" owner="mx.controls:ComboBox" playerVersion="Flash9" type="Number">
<description>
  Указывает значение прозрачности альфа-канала для темы оформления фокусировки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:ComboBox&gt;</code> tag inherits all the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:ComboBox
    <b>Properties</b>
    dataProvider="null"
    dropdownFactory="<i>ClassFactory that creates an mx.controls.List</i>"
    dropdownWidth="<i>100 or width of the longest text in the dataProvider</i>"
    itemRenderer="null"
    labelField="label"
    labelFunction="null"
    prompt="null"
    rowCount="5"
    selectedIndex="-1"
    selectedItem="null"
    
    <b>Styles</b>
    alternatingItemColors="undefined"
    arrowButtonWidth="22"
    borderColor="0xB7BABC"
    borderThickness="1"
    closeDuration="250"
    closeEasingFunction="undefined"
    color="0x0B333C"
    cornerRadius="0"
    disabledColor="0xAAB3B3"
    disabledIconColor="0x919999"
    dropdownBorderColor="undefined"
    dropdownStyleName="comboDropdown"
    fillAlphas="[0.6,0.4]"
    fillColors="[0xFFFFFF, 0xCCCCCC]"
    focusAlpha="0.4"
    focusRoundedCorners="tl tr bl br"
    fontAntiAliasType="advanced|normal"
    fontFamily="Verdana"
    fontGridFitType="pixel|none|subpixel"
    fontSharpness="0"
    fontSize="10"
    fontStyle="normal|italic"
    fontThickness="0"
    fontWeight="normal|bold"
    highlightAlphas="[0.3,0.0]"
    iconColor="0x111111"
    leading="0"
    openDuration="250"
    openEasingFunction="undefined"
    paddingTop="0"
    paddingBottom="0"
    paddingLeft="5"
    paddingRight="5"
    rollOverColor="<i>Depends on theme color"</i>
    selectionColor="<i>Depends on theme color"</i>
    selectionDuration="250"
    selectionEasingFunction="undefined"
    textAlign="left|center|right"
    textDecoration="none|underline"
    textIndent="0"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x2B333C"
    
    <b>Events</b>
    change="<i>No default</i>"
    close="<i>No default</i>"
    dataChange="<i>No default</i>"
    enter="<i>No default</i>"
    itemRollOut="<i>No default</i>"
    itemRollOver="<i>No default</i>"
    open="<i>No default</i>"
    scroll="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:ComboBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления ComboBox содержит раскрывающийся список, из которого пользователь может выбрать одно значение. Его функциональные возможности очень похожи на возможности элемента формы SELECT в HTML. Элемент управления ComboBox может быть доступен для редактирования, в этом случае значения вводятся в поле TextInput вне списка.
 
  <p>Для элемента управления ComboBox установлены следующие характеристики размеров по умолчанию:</p>
     <adobetable class="innertable">
        
        
        
        
        
        
     <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>размер по умолчанию.</entry>
           <entry>Ширина, достаточная для размещения в области отображения основного элемента управления самого длинного значения в раскрывающемся списке и кнопки раскрытия списка. Если раскрывающийся список не отображается, высота по умолчанию рассчитывается на основе размера текста метки. 
 
               <p>Высота раскрывающегося списка по умолчанию равна пяти строкам или числу значений в раскрывающемся списке, если их меньше пяти. Высота по умолчанию для каждого значения в раскрывающемся списке составляет 22 пикселя.</p></entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>5000 на 5000.</entry>
        </row><row>
           <entry>dropdownWidth</entry>
           <entry>Ширина элемента управления ComboBox.</entry>
        </row><row>
           <entry>rowCount</entry>
           <entry>5 строк.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleComboBox.mxml"><swfblock conref="examples/SimpleComboBox.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><adobeApiEvent id="mx.controls:ComboBox_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Передается при осуществлении пользователем прокрутки раскрывающегося списка элемента управления ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при осуществлении пользователем прокрутки раскрывающегося списка элемента управления ComboBox.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.DropdownEvent.OPEN_open"><apiName>open</apiName><shortdesc>
  Передается при нажатии пользователем кнопки раскрытия списка для отображения раскрывающегося списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.OPEN</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при нажатии пользователем кнопки раскрытия списка для отображения раскрывающегося списка. Передается также при использовании клавиатуры и нажатии клавиш Ctrl-Down для раскрытия списка.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Передается при наведении курсора мыши на элемент раскрывающегося списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при наведении курсора мыши на элемент раскрывающегося списка. Свойство <codeph>target</codeph> объекта события содержит ссылку на ComboBox, а не на раскрывающийся список.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Передается при перетаскивании курсора мыши за пределы элемента раскрывающегося списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при перетаскивании курсора мыши за пределы элемента раскрывающегося списка. Свойство <codeph>target</codeph> объекта события содержит ссылку на ComboBox, а не на раскрывающийся список.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.FlexEvent.ENTER_enter"><apiName>enter</apiName><shortdesc>
  Передается, если для свойства editable установлено значение true, и пользователь нажимает клавишу Enter после набора текста в доступном для редактирования текстовом поле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.ENTER</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, если для свойства <codeph>editable</codeph> установлено значение <codeph>true</codeph>, и пользователь нажимает клавишу Enter после набора текста в доступном для редактирования текстовом поле.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит элемент из dataProvider. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.DropdownEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Передается при отклонении списка по какой-либо причине, например, в случае если пользователь: выбирает элемент в раскрывающемся списке; щелкает кнопкой мыши за пределами раскрывающегося списка; нажимает кнопку раскрытия списка при отображении раскрывающегося списка; нажимает клавишу ESC при отображении раскрывающегося списка
  
 
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DropdownEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.DropdownEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при отклонении списка по какой-либо причине, например, в случае если пользователь:
  <ul>
      <li>выбирает элемент в раскрывающемся списке;</li>
      <li>щелкает кнопкой мыши за пределами раскрывающегося списка;</li>
      <li>нажимает кнопку раскрытия списка при отображении раскрывающегося списка;</li>
      <li>нажимает клавишу ESC при отображении раскрывающегося списка.</li>
  </ul>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:ComboBox_mx.events.ListEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении содержимого ComboBox в результате взаимодействия с пользователем, например, при изменении свойства selectedIndex или selectedItem, также при вводе в поле каждого символа с клавиатуры в случае, если элемент управления ComboBox доступен для редактирования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ListEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.ListEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении содержимого ComboBox в результате взаимодействия с пользователем, например, при изменении свойства <codeph>selectedIndex</codeph> или <codeph>selectedItem</codeph>, также при вводе в поле каждого символа с клавиатуры в случае, если элемент управления ComboBox доступен для редактирования.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:ComboBox:ComboBox"><apiName>ComboBox</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:ComboBox:protected:calculatePreferredSizeFromData"><apiName>calculatePreferredSizeFromData</apiName><shortdesc>
      Определяет используемые по умолчанию значения высоты и ширины для каждого значения в раскрывающемся списке на основании максимального размера текста метки первых numItems элементов в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Объект, содержащий два свойства: ширина и высота.
      
      </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>count</apiItemName><apiType value="int"/><apiDesc>Число элементов, выбранных для определения значения.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Определяет используемые по умолчанию значения высоты и ширины для каждого значения в раскрывающемся списке на основании максимального размера текста метки первых <codeph>numItems</codeph> элементов в поставщике данных. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:close"><apiName>close</apiName><shortdesc>
      Скрывает раскрывающийся список.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>trigger</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
      Скрывает раскрывающийся список.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      Возвращает строку, представляющую параметр item.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Объект, содержащий значение, подлежащее преобразованию в метку. Если элемент имеет значение null, этот метод возвращает пустую строку.
      
      </apiDesc></apiParam><apiParam><apiItemName>rest</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
      Возвращает строку, представляющую параметр <codeph>item</codeph>.
      
      <p>Этот метод при поиске возвращаемого значения выполняет проверки в следующем порядке:</p>
      
      <ol>
        <li>Если установлено свойство <codeph>labelFunction</codeph>, то возвращается результат передачи элемента в функцию.</li>
        <li>Если элемент является строкой, числом, логическим значением или функцией, то возвращается этот элемент.</li>
        <li>Если у элемента существует свойство с именем, указанным в свойстве <codeph>labelField</codeph> элемента управления, то возвращается содержимое этого свойства.</li>
        <li>Если у элемента существует свойство label, то возвращается значение этого свойства.</li>
      </ol>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:protected:measure"><apiName>measure</apiName><shortdesc>
      Обеспечивает ширину элемента управления не менее 40 пикселей и высоту, достаточную для размещения одной строки текста в поле TextInput элемента управления, но не менее 22 пикселей.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обеспечивает ширину элемента управления не менее 40 пикселей и высоту, достаточную для размещения одной строки текста в поле TextInput элемента управления, но не менее 22 пикселей.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:ComboBox:open"><apiName>open</apiName><shortdesc>
      Отображает раскрывающийся список.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Отображает раскрывающийся список.
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:ComboBox:data:get"><apiName>data</apiName><shortdesc>
      Свойство data позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Свойство <codeph>data</codeph> позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>Элемент управления ComboBox использует свойство <codeph>listData</codeph> и свойство <codeph>data</codeph> следующим образом. Если ComboBox находится в элементе управления DataGrid, то свойство столбца <codeph>dataField</codeph> должно сопоставляться со свойством данных. Значение <codeph>selectedItem</codeph> устанавливается равным данному свойству. Если ComboBox находится в элементе управления List, то свойство списка <codeph>labelField</codeph> должно сопоставляться со свойством данных. Значение <codeph>selectedItem</codeph> устанавливается равным данному свойству. В противном случае <codeph>selectedItem</codeph> приравнивается к данным.</p>
     
      <p>Это свойство не устанавливается в MXML.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:protected:dropDownStyleFilters:get"><apiName>dropDownStyleFilters</apiName><shortdesc>
      Набор стилей для передачи из ComboBox в dropDown.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Набор стилей для передачи из ComboBox в dropDown. Стили в стиле dropDownStyleName отменяют данные стили.
      </apiDesc></apiValueDetail><related-links><link href="mx.styles.xml#StyleProxy"><linktext>mx.styles.StyleProxy</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:dropdown:get"><apiName>dropdown</apiName><shortdesc>
      Ссылка на элемент управления List, действующий как раскрывающийся список в ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:ListBase</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на элемент управления List, действующий как раскрывающийся список в ComboBox.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dropdownFactory:get"><apiName>dropdownFactory</apiName><shortdesc>
      IFactory, создающий производный от ListBase экземпляр для использования в качестве раскрывающегося списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      IFactory, создающий производный от ListBase экземпляр для использования в качестве раскрывающегося списка. По умолчанию для List используется значение IFactory
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dropdownWidth:get"><apiName>dropdownWidth</apiName><shortdesc>
      Ширина раскрывающегося списка в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Ширина раскрывающегося списка в пикселях.
      <p>Значение по умолчанию – 100 или ширина самого длинного текста в <codeph>dataProvider</codeph>, если она больше 100.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:itemRenderer:get"><apiName>itemRenderer</apiName><shortdesc>
      IFactory, создающий экземпляры для отображения данных раскрывающегося списка в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFactory</apiValueClassifier></apiValueDef><apiDesc>
      IFactory, создающий экземпляры для отображения данных раскрывающегося списка в элементе управления. Это свойство можно использовать для определения пользовательских средств визуализации раскрывающегося списка.
     
      <p>Элемент управления для создания раскрывающегося списка на внутреннем уровне использует элемент управления List. По умолчанию средством визуализации элементов для элемента управления List является класс ListItemRenderer, отображающий текст, связанный с каждым элементом списка, и необязательный значок. </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.controls.listClasses.xml#ListItemRenderer"><linktext>mx.controls.listClasses.ListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:labelField:get"><apiName>labelField</apiName><shortdesc>
      Имя поля в элементах массива dataProvider для отображения в качестве метки в TextInput и раскрывающемся списке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Имя поля в элементах массива <codeph>dataProvider</codeph> для отображения в качестве метки в TextInput и раскрывающемся списке. По умолчанию элемент управления использует свойство <codeph>label</codeph> для каждого объекта Array и отображает его.
      <p>Но если элементы <codeph>dataProvider</codeph> не содержат свойство <codeph>label</codeph>, можно настроить свойство <codeph>labelField</codeph> для использования другого свойства.</p>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:labelFunction:get"><apiName>labelFunction</apiName><shortdesc>
      Пользовательская функция, применяемая для каждого элемента с целью определения его метки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
      Пользовательская функция, применяемая для каждого элемента с целью определения его метки. По умолчанию элемент управления использует свойство <codeph>label</codeph> для каждого элемента <codeph>dataProvider</codeph> с целью определения его метки. При этом некоторые наборы данных не имеют свойства <codeph>label</codeph>, а также других свойств, которые можно отобразить в качестве метки.
      <p>Примером может служить набор данных, имеющих поля <codeph>lastName</codeph> и <codeph>firstName</codeph>, для которого необходимо отобразить полные имена. <codeph>labelFunction</codeph> используется для указания функции обратного вызова, обрабатывающей соответствующие поля и возвращающей отображаемую строку.</p>
     
      <p>labelFunction принимает единственный аргумент, являющийся элементом dataProvider, и возвращает строку:</p>
      <pre>
      myLabelFunction(item:Object):String
      </pre>
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:listData:get"><apiName>listData</apiName><shortdesc>
      При использовании компонента в качестве средства визуализации вставных элементов или редактора вставных элементов Flex инициализирует свойство компонента listData соответствующими данными из элемента управления List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier></apiValueDef><apiDesc>
      При использовании компонента в качестве средства визуализации или редактора вставных элементов Flex инициализирует свойство компонента <codeph>listData</codeph> с соответствующими данными из элемента управления List. Компонент может затем использовать свойства <codeph>listData</codeph> и <codeph>данные</codeph> для отображения соответствующей информации как средства визуализации или редактора вставных элементов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:ComboBox:prompt:get"><apiName>prompt</apiName><shortdesc>
      Строка запроса элемента управления ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Строка запроса элемента управления ComboBox. Строка запроса, отображаемая в TextInput элемента управления ComboBox при <codeph>selectedIndex</codeph> = -1. Как правило, эта строка начинается с выражения «Выберите один...». Если строка запроса отсутствует, элемент ComboBox присваивает <codeph>selectedIndex</codeph> значение 0 и отображает первый элемент <codeph>dataProvider</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:rowCount:get"><apiName>rowCount</apiName><shortdesc>
      Максимальное число видимых строк в списке элемента управления ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>5
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Максимальное число видимых строк в списке элемента управления ComboBox. Если в dataProvider содержится меньше элементов, то ComboBox отображает столько элементов, сколько имеется в dataProvider.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedLabel:get"><apiName>selectedLabel</apiName><shortdesc>
      Строка, отображаемая в TextInput элемента управления ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
      Строка, отображаемая в TextInput элемента управления ComboBox. Рассчитывается на основе данных с использованием <codeph>labelField</codeph> или <codeph>labelFunction</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:dataProvider:set"><apiName>dataProvider</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedIndex:set"><apiName>selectedIndex</apiName><shortdesc>
      Индекс выбранного элемента в раскрывающемся списке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
      Индекс выбранного элемента в раскрывающемся списке. Установка этого свойства определяет текущий индекс и отображает соответствующую метку в TextInput.
      <p>Значением по умолчанию является -1, но при назначении <codeph>dataProvider</codeph> этому свойству присваивается значение 0 в случае отсутствия строки запроса. Если элемент управления доступен для редактирования, и пользователь вводит текст в поле TextInput, свойству <codeph>selectedIndex</codeph> присваивается значение -1. Если значение свойства <codeph>selectedIndex</codeph> находится за пределами допустимого диапазона, свойство <codeph>selectedIndex</codeph> устанавливается на последний элемент в <codeph>dataProvider</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:ComboBox:selectedItem:set"><apiName>selectedItem</apiName><shortdesc>
      Содержит ссылку на выбранный элемент в dataProvider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Содержит ссылку на выбранный элемент в <codeph>dataProvider</codeph>. Если данные являются объектом или экземпляром класса, то изменение свойств в объекте или экземпляре приводит к изменению <codeph>dataProvider</codeph> и его представления. Установка selectedItem приводит к выбору в ComboBox этого элемента (отображению в TextInput и установке selectedIndex) при условии его существования в dataProvider.
      <p>Если элемент управления ComboBox доступен для редактирования, то при вводе пользователем какого-либо текста в TextInput свойство <codeph>selectedItem</codeph> принимает значение <codeph>null</codeph>. Оно имеет значение только в том случае, если пользователь выбирает элемент из раскрывающегося списка, или если значение устанавливается программно.</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Image"><apiName>Image</apiName><shortdesc>
  Элемент управления Image позволяет импортировать файлы в формате JPEG, PNG, GIF и SWF во время выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:Image&gt;</code> tag inherits the tag attributes of its superclass,  
  and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:Image
    <strong>Events</strong>
    dataChange="No default"
  /&gt
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IDropInListItemRenderer</apiBaseInterface><apiBaseInterface>mx.controls.listClasses:IListItemRenderer</apiBaseInterface><apiBaseClassifier>mx.controls:SWFLoader</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Image позволяет импортировать файлы в формате JPEG, PNG, GIF и SWF во время выполнения. Можно также встраивать любой из этих файлов и файлы SVG в процессе компиляции при помощи <codeph>@Embed(source='filename')</codeph>.
 
  <p><b>Примечание. </b>Flex также включает элемент управления SWFLoader для загрузки приложений Flex. Элемент управления Image обычно используется для загрузки статических графических файлов и файлов SWF, а элемент управления SWFLoader – для загрузки приложений Flex. Элемент управления Image также предназначен для применения в пользовательских средствах визуализации и редакторах элементов. </p>
 
  <p><b/>   </p>
 
  <p>Встроенные изображения загружаются немедленно, так как они уже являются частью файла Flex SWF. Однако они увеличивают размер приложения и замедляют процесс его инициализации. Встроенные изображения также требуют перекомпиляции приложения при каждом изменении файлов изображения.</p> 
  
  <p>Альтернативой встроенному ресурсу является загрузка ресурса во время выполнения. Можно загрузить ресурс из локальной файловой системы, в которой выполняется файл SWF, или обратиться к удаленному ресурсу, обычно через запрос HTTP по сети. Эти изображения являются независимыми от приложения Flex, поэтому их можно изменять, не вызывая операции перекомпиляции при условии, что имена изменяющихся изображений будут сохранены. Вызванные изображения не добавляют дополнительное время ко времени начальной загрузки приложения. Однако может возникнуть задержка при использовании изображений и загрузке их в Flash Player или AIR. </p>
  
  <p>Файл SWF может обращаться только к одному типу внешнего ресурса, либо к локальному, либо по сети; он не может получить доступ к ресурсам обоих типов. Тип доступа, разрешенного файлу SWF, определяется с помощью флажка <codeph>use-network</codeph> при компиляции приложения. Когда флажок <codeph>use-network</codeph> установлен на <codeph>false</codeph>, то можно получить доступ к ресурсам локальной файловой системы, но не к ресурсам сети. Значением по умолчанию является <codeph>true</codeph>, что позволяет получать доступ к ресурсам по сети, но не к локальной файловой системе. </p>
  
  <p>При загрузке изображений во время выполнения следует учитывать ограничения безопасности приложений Flash Player или AIR. Например, в приложении Flash Player можно загружать изображение с любого домена с помощью URL-адреса, но настройки безопасности по умолчанию не позволят коду получать доступ к растровым данным изображения, если оно не поступило с того же домена, что и приложение. Для получения доступа к растровым данным изображений на других серверах следует использовать файл crossdomain.xml. </p>
 
  <p>Форматы PNG и GIF также поддерживают использование альфа-канала для создания прозрачных изображений.</p>
 
  <p>При использовании элемента управления Image как средства визуализации вставных элементов в элементе управления List установите явную высоту строки элемента управления List с помощью свойства <codeph>rowHeight</codeph>, либо установите свойство <codeph>variableRowHeight</codeph> элемента управления List как <codeph>true</codeph> для правильного определения размера строки.</p>
 
  <p>В случае возникновения проблемы недостатка памяти, связанной с объектами изображений, после окончания работы с этими объектами в приложении постарайтесь напрямую установить для свойства <codeph>source</codeph> значение null.</p>
  
  </apiDesc><example conref="SimpleImage.mxml"><swfblock conref="examples/SimpleImage.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#SWFLoader"><linktext>mx.controls.SWFLoader</linktext></link></related-links><adobeApiEvent id="mx.controls:Image_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Передается при изменении свойства data.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении свойства<codeph>data</codeph>.
 
  <p>При использовании компонента как средства визуализации элементов свойство <codeph>data</codeph> содержит данные для отображения. Прослушиватель события может использовать это событие и обновить компонент при изменении свойства <codeph>data</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Image:Image"><apiName>Image</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:Image:data:get"><apiName>data</apiName><shortdesc>
      Свойство data позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      Свойство <codeph>data</codeph> позволяет передавать значение в компонент при его использовании в средстве визуализации или в редакторе элементов. Привязка данных, как правило, используется для привязки поля свойства <codeph>data</codeph> к свойству данного компонента.
     
      <p>При использовании элемента управления как средства визуализации вставных элементов Flex использует свойство <codeph>listData.label</codeph>, если оно существует, в качестве значения свойства <codeph>source</codeph> этого элемента управления, или свойство <codeph>data</codeph> – в качестве свойства <codeph>source</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.core.xml#IDataRenderer"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="mx.controls:Image:listData:get"><apiName>listData</apiName><shortdesc>
      При использовании компонента в качестве средства визуализации вставных элементов или редактора вставных элементов Flex инициализирует свойство компонента listData соответствующими данными из элемента управления List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.listClasses:BaseListData</apiValueClassifier><apiDefaultValue>null
      </apiDefaultValue></apiValueDef><apiDesc>
      При использовании компонента в качестве средства визуализации или редактора вставных элементов Flex инициализирует свойство компонента <codeph>listData</codeph> с соответствующими данными из элемента управления List. После этого компонент может использовать свойство <codeph>listData</codeph> для инициализации других свойств средства визуализации вставных объектов.
     
      <p>Это свойство не устанавливается в MXML или ActionScript; Flex устанавливает его, когда компонент используется как средство визуализации или редактор вставных элементов.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.listClasses.xml#IDropInListItemRenderer"><linktext>mx.controls.listClasses.IDropInListItemRenderer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:HSlider"><apiName>HSlider</apiName><shortdesc>	
  Элемент управления HSlider дает пользователям возможность выбирать значение путем перемещения ползунка между конечными точками полосы прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:HSlider" replacement="spark.components.HSlider" since="4.0">
	</Alternative><styles><style enumeration="left,top,right,bottom" inherit="no" name="dataTipPlacement" owner="mx.controls:HSlider" playerVersion="Flash9" type="String">
<description>
  Расположение всплывающей подсказки относительно ползунка. Возможны значения <codeph>left</codeph>, <codeph>right</codeph>, <codeph>top</codeph> и <codeph>bottom</codeph>.
 
  </description>
<default>"top"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:HSlider&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attribute:</p>
 
  <pre>
  &lt;mx:HSlider
    <strong>Styles</strong>
    dataTipPlacement="top"
  /&gt;
  </pre>
  </p>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.sliderClasses:Slider</apiBaseClassifier></apiClassifierDef><apiDesc>	
  Элемент управления HSlider дает пользователям возможность выбирать значение путем перемещения ползунка между конечными точками полосы прокрутки. Текущее значение ползунка определяется относительным местоположением ползунка между конечными точками, соответствующими минимальному и максимальному значениям ползунка.
 
  <p>Ползунок может предоставлять собой непрерывный диапазон значений между его минимальным и максимальным значениями или он может быть ограничен значениями в определенных интервалах между минимальным и максимальным значениями. С его помощью возможно отображение делений в указанных интервалах полосы прокрутки. Эти деления не зависят от разрешенных значений ползунка. Для отображения текущего значения ползунка можно также использовать всплывающую подсказку.</p>
  	
  <p>Элемент управления HSlider имеет горизонтальное направление. Полоса прокрутки располагается слева направо, и метки размещаются в верхней или нижней части полосы.</p>
  
  <p>Для элемента управления HSlider по умолчанию установлены характеристики, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Ширина – 250 пикселей, высота – достаточная для размещения ползунка и всех связанных меток</entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>Отсутствует</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>Отсутствует</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleImageHSlider.mxml"><swfblock conref="examples/SimpleImageHSlider.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#VSlider"><linktext>mx.controls.VSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.controls.sliderClasses.xml#SliderThumb"><linktext>mx.controls.sliderClasses.SliderThumb</linktext></link><link href="mx.controls.sliderClasses.xml#SliderDataTip"><linktext>mx.controls.sliderClasses.SliderDataTip</linktext></link><link href="mx.controls.sliderClasses.xml#SliderLabel"><linktext>mx.controls.sliderClasses.SliderLabel</linktext></link></related-links><apiConstructor id="mx.controls:HSlider:HSlider"><apiName>HSlider</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:DataGrid"><apiName>DataGrid</apiName><shortdesc>
  Элемент управления DataGrid подобен элементу управления List, кроме того, в нем может быть отображено несколько столбцов данных, что важно при отображении объектов с несколькими свойствами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="cornerRadius"/><Exclude kind="property" name="showDataTips"/><Exclude kind="property" name="offscreenExtraRowsOrColumnsChanged"/><Exclude kind="property" name="offscreenExtraColumnsRight"/><Exclude kind="property" name="offscreenExtraColumnsLeft"/><Exclude kind="property" name="offscreenExtraColumns"/><Exclude kind="property" name="offscreenExtraRowsBottom"/><Exclude kind="property" name="offscreenExtraRowsTop"/><Exclude kind="property" name="offscreenExtraRows"/><Exclude kind="property" name="offscreenExtraRowsOrColumns"/><Exclude kind="property" name="labelField"/><Exclude kind="property" name="iconFunction"/><Exclude kind="property" name="iconField"/><Exclude kind="property" name="columnWidth"/><Exclude kind="property" name="columnCount"/><DefaultProperty name="dataProvider"/><styles><style inherit="no" name="headerDragProxyStyleName" owner="mx.controls:DataGrid" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS для управления свойствами внешнего вида столбца при его перетаскивании пользователем в другое местоположение.
 
  </description>
<default>"headerDragProxyStyle"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnDropIndicatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс для использования в качестве темы оформления, указывающий на то, что столбец может быть пропущен в текущем местоположении.
 
  </description>
<default>mx.skins.halo.DataGridColumnDropIndicator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="stretchCursor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, используемый в качестве темы оформления курсора, указывающего на то, что столбец может быть изменен. Значением по умолчанию является символ cursorStretch из файла Assets.swf.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="sortArrowSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, который должен использоваться в качестве темы оформления для стрелки, указывающей направление сортировки столбца. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalLockedSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, используемый в качестве темы оформления внешнего вида разделителя между заблокированными и разблокированными столбцами в элементе управления DataGrid. По умолчанию в элементе управления DataGrid для отображения разделителей используются методы <codeph>drawHorizontalLine()</codeph> и <codeph>drawVerticalLine()</codeph>.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, используемый в качестве темы оформления внешнего вида разделителей между столбцами в элементе управления DataGrid. По умолчанию в элементе управления DataGrid для отображения разделителей используются методы <codeph>drawHorizontalLine()</codeph> и <codeph>drawVerticalLine()</codeph>.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalLockedSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, используемый в качестве темы оформления внешнего вида разделителя между заблокированными и разблокированными строками в элементе управления DataGrid. По умолчанию в элементе управления DataGrid для отображения разделителей используются методы <codeph>drawHorizontalLine()</codeph> и <codeph>drawVerticalLine()</codeph>.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, используемый в качестве темы оформления внешнего вида разделителя между строками в элементе управления DataGrid. По умолчанию в элементе управления DataGrid для отображения разделителей используются методы <codeph>drawHorizontalLine()</codeph> и <codeph>drawVerticalLine()</codeph>.
 
  </description>
<default>undefined
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerSeparatorSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, используемый в качестве темы оформления внешнего вида разделителя между заголовками столбца в элементе управления DataGrid. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerBackgroundSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс, используемый в качестве темы оформления внешнего вида для фона заголовков столбцов в элементе управления DataGrid. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="columnResizeSkin" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Class">
<description>
  Класс для использования в качестве темы оформления столбца, размер которого изменяется в текущий момент времени.
  </description>
<default>mx.skins.halo.DataGridColumnResizeSkin
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="headerStyleName" owner="mx.controls:DataGrid" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS для управления другими свойствами внешнего вида заголовков столбцов.
  </description>
<default>"dataGridStyles"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Цвет фона строки при выборе пользователем средства визуализации элементов в строке. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Цвет фона строки при наведении на нее курсора мыши. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="headerColors" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="Array">
<description>
  Массив двух цветов, используемых для отображения фонового градиента заголовка. Первый цвет является верхним. Второй цвет является нижним.
  </description>
<default>[0xFFFFFF, 0xE6E6E6]
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="horizontalGridLineColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Цвет горизонтальных линий сетки.
  </description>
<default>0xF7F7F7
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="verticalGridLineColor" owner="mx.controls:DataGrid" playerVersion="Flash9" type="uint">
<description>
  Цвет вертикальных линий сетки. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="horizontalGridLines" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Boolean">
<description>
  Флаг, указывающий на необходимость отображения горизонтальных линий сетки между строками. При значении <codeph>true</codeph> горизонтальные линии сетки отображаются. При значении <codeph>false</codeph> горизонтальные линии сетки скрыты.
  </description>
<default>false
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="verticalGridLines" owner="mx.controls:DataGrid" playerVersion="Flash9" type="Boolean">
<description>
  Флаг, указывающий на необходимость отображения вертикальных линий сетки между столбцами. При значении <codeph>true</codeph> вертикальные строки сетки отображаются. Если <codeph>false</codeph> горизонтальные линии сетки скрываются.
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="defaultDataGridItemRenderer" owner="mx.controls:DataGrid" playerVersion="Flash10" type="Class">
<description>
  Имена класса itemRenderer, используемого при отсутствии указания имени для столбца или его заголовка. Это способ установки itemRenderer для группы DataGrid вместо установки каждого по отдельности. При установке свойства itemRenderer для DataGrid оно заменяет это значение.
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="defaultDataGridItemEditor" owner="mx.controls:DataGrid" playerVersion="Flash10" type="Class">
<description>
  Имя класса itemEditor, используемого при отсутствии указания имени для столбца. Это способ установки редактора элементов для группы DataGrid вместо установки каждого по отдельности. При установке свойства itemEditor для DataGridColumn оно заменяет это значение.
  </description>
<default>null
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="disabledIconColor" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в деактивированной теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в деактивированном элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз деактивированного элемента управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в деактивированном элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x999999</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="iconColor" owner="mx.controls:DataGrid" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет значка в теме оформления. Например, этот стиль используется классом тем оформления CheckBoxIcon для отображения галочки в элементе управления CheckBox, классом ComboBoxSkin для отображения стрелки вниз в элементе управления ComboBox и классом тем оформления DateChooserMonthArrowSkin для отображения стрелки месяца в элементе управления DateChooser. Значение по умолчанию зависит от класса компонента; если оно не переопределяется классом, значением по умолчанию является <codeph>0x111111</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>
  The <code>&lt;mx:DataGrid&gt;</code> tag inherits all of the tag 
  attributes of its superclass, except for <code>labelField</code>, 
  <code>iconField</code>, and <code>iconFunction</code>, and adds the 
  following tag attributes:
  </p>
  <pre>
  &lt;mx:DataGrid
    <b>Properties</b>
    columns="<i>From dataProvider</i>"
    draggableColumns="true|false"
    editable="false|true"
    editedItemPosition="<code>null</code>"
    horizontalScrollPosition="null"
    imeMode="null"
    itemEditorInstance="null"
    minColumnWidth="<code>NaN</code>"
    resizableColumns="true|false"
    sortableColumns="true|false"
    
    <b>Styles</b>
    backgroundDisabledColor="0xEFEEEF"
    columnDropIndicatorSkin="DataGridColumnDropIndicator"
    columnResizeSkin="DataGridColumnResizeSkin"
    disabledIconColor="0x999999"
    headerColors="[#FFFFFF, #E6E6E6]"
    headerDragProxyStyleName="headerDragProxyStyle"
    headerSeparatorSkin="DataGridHeaderSeparator"
    headerStyleName="dataGridStyles"
    horizontalGridLineColor="0xF7F7F7"
    horizontalGridLines="false|true"
    horizontalLockedSeparatorSkin="undefined"
    horizontalSeparatorSkin="undefined"
    iconColor="0x111111"
    rollOverColor="0xB2E1FF"
    selectionColor="0x7FCEFF"
    sortArrowSkin="DataGridSortArrow"
    stretchCursor="<i>"cursorStretch" symbol from the Assets.swf file</i>"
    verticalGridLineColor="0xCCCCCC"
    verticalGridLines="false|true"
    verticalLockedSeparatorSkin="undefined"
    verticalSeparatorSkin="undefined"
     
    <b>Events</b>
    columnStretch="<i>No default</i>"
    headerRelease="<i>No default</i>"
    headerShift="<i>No default</i>"
    itemEditBegin="<i>No default</i>"
    itemEditBeginning="<i>No default</i>" 
    itemEditEnd="<i>No default</i>"
    itemFocusIn="<i>No default</i>"
    itemFocusOut="<i>No default</i>"
  /&gt;
   
  <b>The following DataGrid code sample specifies the column order:</b>
  &lt;mx:DataGrid&gt;
    &lt;mx:dataProvider&gt;
        &lt;mx:Object Artist="Pavement" Price="11.99"
          Album="Slanted and Enchanted"/&gt;
        &lt;mx:Object Artist="Pavement"
          Album="Brighten the Corners" Price="11.99"/&gt;
    &lt;/mx:dataProvider&gt;
    &lt;mx:columns&gt;
        &lt;mx:DataGridColumn dataField="Album"/&gt;
        &lt;mx:DataGridColumn dataField="Price"/&gt;
    &lt;/mx:columns&gt;
  &lt;/mx:DataGrid&gt;
  </pre>
  </p>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IIMESupport</apiBaseInterface><apiBaseClassifier>mx.controls.dataGridClasses:DataGridBase</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления <codeph>DataGrid</codeph> подобен элементу управления List, кроме того, в нем может быть отображено несколько столбцов данных, что важно при отображении объектов с несколькими свойствами.
  <p>
  Элемент управления DataGrid располагает следующими возможностями.
  <ul>
  <li>Столбцы разной или идентичной фиксированной ширины</li>
  <li>Столбцы, размер которых пользователь может изменить во время выполнения </li>
  <li>Столбцы, порядок которых пользователь может изменить во время выполнения. </li>
  <li>Необязательные настраиваемые заголовки столбцов</li>
  <li>Возможность применения к любому столбцу настраиваемого средства визуализации элементов с целью отображения данных, отличных от текстовых</li>
  <li>Поддержка сортировки данных посредством нажатия на столбец</li>
  </ul>
  </p>
  Элемент управления DataGrid предназначен для просмотра данных и не является инструментом для создания макетов, как таблица HTML. Эти инструментальные средства макета предоставляет пакет mx.containers.
  
  <p>Для элемента управления DataGrid по умолчанию установлены характеристики размеров, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Если столбцы пусты, то их ширина по умолчанию – 300 пикселей. Если столбцы содержат информацию, но их ширина явно не определена, то их ширина по умолчанию – 100 пикселей столбец. Ширина DataGrid по возможности устанавливается в соответствии с шириной всех столбцов. Количество отображаемых по умолчанию строк, включая заголовок, равно 7, а высота каждой строки по умолчанию равна 20 пикселям.
           </entry>
        </row><row>
           <entry>Минимальный размер</entry>
           <entry>0 пикселей.</entry>
        </row><row>
           <entry>Максимальный размер</entry>
           <entry>5000 на 5000.</entry>
        </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="SimpleDataGrid.mxml"><swfblock conref="examples/SimpleDataGrid.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridItemRenderer"><linktext>mx.controls.dataGridClasses.DataGridItemRenderer</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridColumn"><linktext>mx.controls.dataGridClasses.DataGridColumn</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridDragProxy"><linktext>mx.controls.dataGridClasses.DataGridDragProxy</linktext></link><link href="mx.events.xml#DataGridEvent"><linktext>mx.events.DataGridEvent</linktext></link></related-links><adobeApiEvent id="mx.controls:DataGrid_mx.events.IndexChangedEvent.HEADER_SHIFT_headerShift"><apiName>headerShift</apiName><shortdesc>
  Передается, когда пользователь отпускает кнопку мыши на заголовке столбца после перетаскивания столбца в новое местоположение, что приводит к изменению индекса столбца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.IndexChangedEvent.HEADER_SHIFT</apiEventType><adobeApiEventClassifier>mx.events.IndexChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь отпускает кнопку мыши на заголовке столбца после перетаскивания столбца в новое местоположение, что приводит к изменению индекса столбца.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.HEADER_RELEASE_headerRelease"><apiName>headerRelease</apiName><shortdesc>
  Передается, когда пользователь отпускает кнопку мыши над заголовком столбца для запроса сортировки содержимого сетки на основе содержимого столбца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.HEADER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь отпускает кнопку мыши над заголовком столбца для запроса сортировки содержимого сетки на основе содержимого столбца. Передается только в том случае, если столбец доступен для сортировки и сортировка поддерживается поставщиком данных. Элемент управления DataGrid имеет для этого события обработчик по умолчанию, реализующий сортировку отдельного столбца. Сортировка нескольких столбцов может быть реализована путем вызова метода <codeph>preventDefault()</codeph> для предотвращения сортировки отдельного столбца и установки свойства <codeph>sort</codeph> поставщика данных.
 <p>
 <b>Примечание</b>. Стрелки сортировки определяются обработчиком события по умолчанию для события headerRelease. При вызове метода <codeph>preventDefault()</codeph> в обработчике события пользователя стрелки не отображаются.
 </p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.COLUMN_STRETCH_columnStretch"><apiName>columnStretch</apiName><shortdesc>
  Передается, когда пользователь изменяет ширину столбца, указывая на то, что объем данных, отображаемый в этом столбце, мог быть изменен.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.COLUMN_STRETCH</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь изменяет ширину столбца, указывая на то, что объем данных, отображаемый в этом столбце, мог быть изменен. Если <codeph>horizontalScrollPolicy</codeph> имеет значение <codeph>off</codeph>, то размеры других столбцов уменьшаются или увеличиваются с целью компенсации изменения размеров столбцов и они также передают это событие.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><shortdesc>
  Передается, когда средство визуализации элементов теряет фокус, что происходит в случае, если пользователь щелкает мышью по другому элементу, вне этого элемента управления или использует клавиатуру для перехода к другому элементу в элементе управления DataGrid или вне области этого элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда средство визуализации элементов теряет фокус, что происходит в случае, если пользователь щелкает мышью по другому элементу, вне этого элемента управления или использует клавиатуру для перехода к другому элементу в элементе управления DataGrid или вне области этого элемента управления. Передается только в том случае, если элемент доступен для редактирования.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><shortdesc>
  Передается, когда средство визуализации элементов получает фокус, что происходит в случае, если пользователь щелкает мышью по элементу в элементе управления DataGrid или переходит к этому элементу с помощью клавиатуры.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда средство визуализации элементов получает фокус, что происходит в случае, если пользователь щелкает мышью по элементу в элементе управления DataGrid или переходит к этому элементу с помощью клавиатуры. Передается только в том случае, если элемент доступен для редактирования.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><shortdesc>
  Передается, когда по какой-либо причине завершается сеанс редактирования элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда по какой-либо причине завершается сеанс редактирования элемента.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDITOR_CREATE_itemEditorCreate"><apiName>itemEditorCreate</apiName><shortdesc>
  Передается при создании экземпляра для редактора элементов.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDITOR_CREATE</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при создании экземпляра для редактора элементов.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><shortdesc>
  Передается, когда установлено свойство editedItemPosition и элемент доступен для редактирования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда установлено свойство <codeph>editedItemPosition</codeph> и элемент доступен для редактирования.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:DataGrid_mx.events.DataGridEvent.ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><shortdesc>
  Передается, когда пользователь отпускает кнопку мыши над средством визуализации элементов, перемещается с помощью клавиши Tab к элементу управления DataGrid или в пределах элемента управления DataGrid, или любым другим способом пытается редактировать элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.DataGridEvent.ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events.DataGridEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, когда пользователь отпускает кнопку мыши над средством визуализации элементов, перемещается с помощью клавиши Tab к элементу управления DataGrid или в пределах элемента управления DataGrid, или любым другим способом пытается редактировать элемент.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:DataGrid:DataGrid"><apiName>DataGrid</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:DataGrid:protected:adjustListContent"><apiName>adjustListContent</apiName><shortdesc>
      Вызывается из метода updateDisplayList() для настройки размера и позиции элемента listContent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Ширина listContent. Это значение игнорирует изменения ширины из внешних компонентов или средств настройки.
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Вертикальный размер прямоугольника. Это значение игнорирует изменения высоты из внешних компонентов или средств настройки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Вызывается из метода <codeph>updateDisplayList()</codeph> для настройки размера и позиции элемента listContent.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:clearSeparators"><apiName>clearSeparators</apiName><shortdesc>
      Обеспечивает удаление разделителей заголовка столбца, которые обычно применяются пользователями для изменения размеров столбцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обеспечивает удаление разделителей заголовка столбца, которые обычно применяются пользователями для изменения размеров столбцов.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:createItemEditor"><apiName>createItemEditor</apiName><shortdesc>
      Создает редактор элемента для средства визуализации элементов по расположению editedItemPosition с использованием редактора, заданного свойством itemEditor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Индекс столбца в поставщике данных элемента, подлежащего редактированию.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Индекс строки в поставщике данных элемента, подлежащего редактированию.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Создает редактор элемента для средства визуализации элементов по расположению <codeph>editedItemPosition</codeph> с использованием редактора, заданного свойством <codeph>itemEditor</codeph>.
     
      <p>Этот метод задает в качестве экземпляра редактора свойство <codeph>itemEditorInstance</codeph>.</p>
     
      <p>Этот метод можно вызывать только из прослушивателя событий для события <codeph>itemEditBegin</codeph>. Для создания редактора в другое время настройте свойство <codeph>editedItemPosition</codeph>, выбрав генерацию события <codeph>itemEditBegin</codeph>.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:deriveComplexFieldReference"><apiName>deriveComplexFieldReference</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>complexFieldNameComponents</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:destroyItemEditor"><apiName>destroyItemEditor</apiName><shortdesc>
      Этот метод закрывает редактор элементов, открытый в средстве визуализации элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Этот метод закрывает редактор элементов, открытый в средстве визуализации элементов. Обычно этот метод вызывается только в рамках прослушивателя событий для события <codeph>itemEditEnd</codeph> после того, как уже вызван метод <codeph>preventDefault()</codeph>, для предотвращения вызова прослушивателя событий по умолчанию.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawColumnBackground"><apiName>drawColumnBackground</apiName><shortdesc>
      Отображает фон столбца для столбца с предложенным цветом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Спрайт, который будет включать объект отображения, содержащий графическое изображение для этого столбца.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiDesc>Индекс столбца в наборе отображаемых столбцов. Крайний левый из видимых столбцов имеет индекс столбца, равный нулю. Используется для отслеживания объектов, используемых для отображения фона, с целью повторного использования конкретным столбцом одного и того же объекта отображения даже в случае изменения индекса DataGridColumn для этого столбца.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Предлагаемый цвет индикатора
     
      </apiDesc></apiParam><apiParam><apiItemName>column</apiItemName><apiOperationClassifier>mx.controls.dataGridClasses:DataGridColumn</apiOperationClassifier><apiDesc>Столбец элемента управления DataGrid, для которого отображается фон.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отображает фон столбца для столбца с предложенным цветом. Эта реализация обеспечивает создание объекта Shape в качестве нижестоящего элемента входящего спрайта и его заполнение соответствующим цветом.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawHeaderBackground"><apiName>drawHeaderBackground</apiName><shortdesc>
      Обеспечивает отображение фона для заголовков в заданном объекте UIComponent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>headerBG</apiItemName><apiOperationClassifier>mx.core:UIComponent</apiOperationClassifier><apiDesc>UIComponent, который будет содержать фоновое изображение для заголовка.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает отображение фона для заголовков в заданном объекте UIComponent. Отображаемое изображение может быть масштабировано по горизонтали при изменении ширины компонента или при вызове данного метода для повторного отображения с другим значением ширины и/или высоты
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawHorizontalLine"><apiName>drawHorizontalLine</apiName><shortdesc>
      Обеспечивает отображение линии между строками.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Спрайт, который будет включать объект отображения, содержащий графическое изображение для этой строки.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Индекс строки в наборе отображаемых строк. Заголовок не учитывается, самая верхняя из видимых строк имеет индекс строки, равный нулю. Используется для отслеживания объектов, применяемых для отображения фоновых изображений, поэтому в определенной строке один и тот же объект может использоваться повторно, даже несмотря на то, что индекс элемента, для которого отображалась строка, был изменен.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Предлагаемый цвет индикатора
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Предлагаемое положение фона по оси y
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает отображение линии между строками. В этой реализации линия отображается непосредственно в заданном спрайте. Перед отображением линий спрайт очищается.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawLinesAndColumnBackgrounds"><apiName>drawLinesAndColumnBackgrounds</apiName><shortdesc>
      Отобразить строки между столбцами и фоновыми изображениями столбцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Отобразить строки между столбцами и фоновыми изображениями столбцов. Эта реализация обеспечивает вызов методов <codeph>drawHorizontalLine()</codeph>, <codeph>drawVerticalLine()</codeph> и <codeph>drawColumnBackground()</codeph> в случае необходимости. Она позволяет создавать спрайт, содержащий все эти изображения и добавлять их в качестве нижестоящего элемента объекта listContent в начале z-порядка.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawLinesAndColumnGraphics"><apiName>drawLinesAndColumnGraphics</apiName><shortdesc>
      Отобразить строки между столбцами и фоновыми изображениями столбцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>contentHolder</apiItemName><apiOperationClassifier>mx.controls.listClasses:ListBaseContentHolder</apiOperationClassifier><apiDesc>Контейнер всех средств визуализации и редакторов элементов.
      </apiDesc></apiParam><apiParam><apiItemName>visibleColumns</apiItemName><apiType value="Array"/><apiDesc>Массив видимых столбцов в сетке данных.
      </apiDesc></apiParam><apiParam><apiItemName>separators</apiItemName><apiType value="Object"/><apiDesc>Объект, определяющий верхнюю, нижнюю, левую и правую строки, которые разделяют столбцы и строки.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отобразить строки между столбцами и фоновыми изображениями столбцов. Эта реализация обеспечивает вызов методов <codeph>drawHorizontalLine()</codeph>, <codeph>drawVerticalLine()</codeph> и <codeph>drawColumnBackground()</codeph> в случае необходимости. Она позволяет создавать спрайт, содержащий все эти изображения и добавлять их в качестве нижестоящего элемента объекта listContent в начале z-порядка.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawRowBackground"><apiName>drawRowBackground</apiName><shortdesc>
      Обеспечивает вывод фонового изображения строки в указанном положении и с указанной высотой, с использованием определенного цвета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Спрайт, который будет включать объект отображения, содержащий графическое изображение для этой строки.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiDesc>Индекс строки в наборе отображаемых строк. Заголовок не учитывается, самая верхняя из видимых строк имеет индекс строки, равный нулю. Используется для отслеживания объектов, применяемых для отображения фоновых изображений, поэтому в определенной строке один и тот же объект может использоваться повторно, даже несмотря на то, что индекс элемента, для которого отображалась строка, был изменен.
     
      </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>Предлагаемое положение фона по оси y
     
      </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Предлагаемая высота индикатора
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Предлагаемый цвет индикатора
     
      </apiDesc></apiParam><apiParam><apiItemName>dataIndex</apiItemName><apiType value="int"/><apiDesc>Индекс элемента для этой строки в поставщике данных. Может использоваться, например, для окрашивания 10-ого элемента в другой цвет.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает вывод фонового изображения строки в указанном положении и с указанной высотой, с использованием определенного цвета. Эта реализация обеспечивает создания объекта Shape в качестве нижестоящего элемента входящего спрайта и его заполнение соответствующим цветом. Этот метод также использует параметр свойства стиля <codeph>backgroundAlpha</codeph> для определения прозрачности фонового цвета.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawSeparators"><apiName>drawSeparators</apiName><shortdesc>
      Обеспечивает создание и отображение разделителей заголовков столбцов, которые обычно применяются пользователями для изменения размеров столбцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обеспечивает создание и отображение разделителей заголовков столбцов, которые обычно применяются пользователями для изменения размеров столбцов. В этой реализации используется тот же спрайт, что и для строк и фоновых изображений столбцов, производится добавление экземпляров <codeph>headerSeparatorSkin</codeph> и присоединение к ним прослушивателей мыши для определения момента, при котором потребуется изменение размеров столбца.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:drawVerticalLine"><apiName>drawVerticalLine</apiName><shortdesc>
      Отобразить строки между столбцами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>s</apiItemName><apiType value="flash.display:Sprite"/><apiDesc>Спрайт, который будет включать объект отображения, содержащий графическое изображение для этой строки.
     
      </apiDesc></apiParam><apiParam><apiItemName>colIndex</apiItemName><apiType value="int"/><apiDesc>Индекс столбца в наборе отображаемых столбцов. Крайний левый из видимых столбцов имеет индекс столбца, равный нулю.
     
      </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiDesc>Предлагаемый цвет индикатора
     
      </apiDesc></apiParam><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>Предлагаемое положение фонового изображения по оси x
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отобразить строки между столбцами. В этой реализации линия отображается непосредственно в заданном спрайте. Перед отображением линий спрайт очищается.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:getCurrentDataValue"><apiName>getCurrentDataValue</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:isComplexColumn"><apiName>isComplexColumn</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:isItemEditable"><apiName>isItemEditable</apiName><shortdesc>
      Определяет, редактировать элемент поставщика данных на построчной основе или нет.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>По умолчанию должно возвращаться <codeph>true</codeph>, если свойство <codeph>editable</codeph> сетки данных содержит значение <codeph>true</codeph> и объект данных не <codeph>null</codeph>.
      
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Элемент поставщика данных. По умолчанию в этом методе возвращается <codeph>false</codeph>, если объект данных содержит значение <codeph>null</codeph>.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Определяет, редактировать элемент поставщика данных на построчной основе или нет. По умолчанию в этом методе только проверяется свойство <codeph>editable</codeph> сетки данных и возвращается <codeph>false</codeph>, если <codeph>editable</codeph> содержит значение <codeph>false</codeph> или элемент поставщика данных содержит значение <codeph>null</codeph>.
     
      <p>Этот метод можно отменить, разрешив управление на уровне мелких структурных единиц, элементы dataprovider которых доступны для редактирования. Например, если предполагается запретить редактирование строк группировки или сводки, можно заменить его на методы пользовательской логики для подобного поведения.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:placeSortArrow"><apiName>placeSortArrow</apiName><shortdesc>
      Обеспечивает вывод изображения стрелки для сортировки в столбце, являющемся текущим ключом сортировки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Обеспечивает вывод изображения стрелки для сортировки в столбце, являющемся текущим ключом сортировки. В этой реализации создается или повторно используется экземпляр темы оформления, указанной с помощью свойства стиля <codeph>sortArrowSkin</codeph>, который помещается в соответствующий заголовок столбца. В ней также осуществляется уменьшение размера заголовка столбца, если текст заголовка будет скрыт стрелкой сортировки.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:scrollPositionToIndex"><apiName>scrollPositionToIndex</apiName><shortdesc>
      
      Возвращает индекс поставщика данных для элемента в первом видимом столбце и строке для указанного положения прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Индекс поставщика данных.
      
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>horizontalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Свойство <codeph>horizontalScrollPosition</codeph>, соответствующее положению прокрутки.
      </apiDesc></apiParam><apiParam><apiItemName>verticalScrollPosition</apiItemName><apiType value="int"/><apiDesc>Значение свойства <codeph>verticalScrollPosition</codeph>, соответствующее положению прокрутки.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Возвращает индекс поставщика данных для элемента в первом видимом столбце и строке для указанного положения прокрутки.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:scrollVertically"><apiName>scrollVertically</apiName><shortdesc>
      
      Настраивает средства визуализации в зависимости от изменения положения прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pos</apiItemName><apiType value="int"/><apiDesc>Новое положение прокрутки.
      </apiDesc></apiParam><apiParam><apiItemName>deltaPos</apiItemName><apiType value="int"/><apiDesc>Изменение положения. Это значение всегда является положительным числом.
      </apiDesc></apiParam><apiParam><apiItemName>scrollUp</apiItemName><apiType value="Boolean"/><apiDesc><codeph>true</codeph>, если координата положения прокрутки уменьшается.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Настраивает средства визуализации в зависимости от изменения положения прокрутки.
     
      <p>Классы списков будут пытаться оптимизировать прокрутку, если положение прокрутки изменено не на целое количество видимых строк. В этой ситуации некоторые строки будут перемещены в неизменном виде, а некоторые строки будут заменены новыми. Если положение прокрутки изменяется значительным образом, то все старые строки заменяются новыми путем вызова метода <codeph>makeRowsAndColumns()</codeph> для всей видимой области.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:DataGrid:protected:setNewValue"><apiName>setNewValue</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="mx.controls:DataGrid:itemEditorInstance"><apiName>itemEditorInstance</apiName><shortdesc>
      Ссылка на активный в настоящий момент экземпляр редактора элементов, если таковой существует.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на активный в настоящий момент экземпляр редактора элементов, если таковой существует.
     
      <p>Для получения доступа к экземпляру редактора элементов и новому значению элемента во время редактирования воспользуйтесь свойством <codeph>itemEditorInstance</codeph>. Свойство <codeph>itemEditorInstance</codeph> учитывается только после выполнения прослушивателя событий для события <codeph>itemEditBegin</codeph>. Поэтому обычно доступ к свойству <codeph>itemEditorInstance</codeph> осуществляется только из прослушивателя событий для события <codeph>itemEditEnd</codeph>.</p>
     
      <p>Свойство <codeph>DataGridColumn.itemEditor</codeph> определяет класс редактора элемента, а, следовательно, тип данных для экземпляра редактора элементов.</p>
     
      <p>Это свойство не устанавливается в MXML.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:resizableColumns"><apiName>resizableColumns</apiName><shortdesc>
      Флаг, указывающий, может ли пользователь изменять размер столбцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий, может ли пользователь изменять размер столбцов. Если выбрано значение <codeph>true</codeph>, можно растянуть или сжать столбцы компонента DataGrid, переместив линии сетки, расположенные между ячейками заголовка. При значении <codeph>true</codeph>, отдельные столбцы также должны иметь свойства<codeph>resizable</codeph>, установленные как <codeph>false</codeph> для предотвращения изменения размеров отдельного столбца.  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:sortableColumns"><apiName>sortableColumns</apiName><shortdesc>
      Флаг, указывающий, что пользователь может сортировать элементы поставщика данных, щелкнув ячейку с заголовком столбца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/><apiDefaultValue>true
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий, что пользователь может сортировать элементы поставщика данных, щелкнув ячейку с заголовком столбца. Если установлено значение <codeph>true</codeph>, пользователь может сортировать элементы поставщика данных путем нажатия на ячейку заголовка столбца. Свойство <codeph>DataGridColumn.dataField</codeph> или <codeph>DataGridColumn.sortCompareFunction</codeph> столбца используется как поле сортировки. При многократном нажатии на столбец порядок сортировки меняется с сортировки по возрастанию на сортировку по убыванию, и наоборот. При установке значения <codeph>true</codeph>, столбцы можно настроить для обеспечения отсутствия ответа на щелчок в области заголовка, установив для свойства <codeph>sortable</codeph> значение <codeph>false</codeph>.
     
      <p>Если пользователь отпускает кнопку мыши, находясь на ячейке заголовка, элемент управления DataGrid обеспечивает передачу события <codeph>headerRelease</codeph>, если и это свойство, и сортируемое свойство столбца имеют значения <codeph>true</codeph>. Если отсутствуют обработчики, вызывающие метод<codeph>preventDefault()</codeph> для этого события, DataGrid выполняет сортировку с использованием свойства <codeph>DataGridColumn.dataField</codeph> или <codeph>DataGridColumn.sortCompareFunction</codeph> столбца.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.dataGridClasses.xml#DataGridColumn/dataField"><linktext>mx.controls.dataGridClasses.DataGridColumn.dataField</linktext></link><link href="mx.controls.dataGridClasses.xml#DataGridColumn/sortCompareFunction"><linktext>mx.controls.dataGridClasses.DataGridColumn.sortCompareFunction</linktext></link></related-links></apiValue><apiValue id="mx.controls:DataGrid:columns:get"><apiName>columns</apiName><shortdesc>
      Массив объектов DataGridColumn, по одному на каждый столбец, доступный для отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив объектов DataGridColumn, по одному на каждый столбец, доступный для отображения. При неявной установке элемент управления DataGrid пытается исследовать первый элемент поставщика данных, определяя установленные свойства и отображая их в алфавитном порядке.
     
      <p>Для изменения установок для столбцов следует получить этот массив, выполнить изменения столбцов и порядка столбцов в массиве, а затем присвоить новый массив свойству столбцов. Так происходит потому, что элемент управления DataGrid возвращает новую копию массива столбцов и не учитывает изменения.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:draggableColumns:get"><apiName>draggableColumns</apiName><shortdesc>
      Флаг, указывающий, может ли пользователь изменить порядок столбцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий, может ли пользователь изменить порядок столбцов. Если значение <codeph>true</codeph>, пользователь может изменить порядок столбцов элемента управления DataGrid, перемещая ячейки заголовка.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editable:get"><apiName>editable</apiName><shortdesc>
      Флаг, указывающий, действительно ли пользователь может редактировать элементы в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, указывающий, действительно ли пользователь может редактировать элементы в поставщике данных. Если <codeph>true</codeph>, средства визуализации элементов в элементе управления можно редактировать. Для открытия редактора пользователь может нажать на средство визуализации элементов.
     
      <p>Редактирование отдельных столбцов элемента управления компонента DataGrid можно отключить с помощью свойства <codeph>DataGridColumn.editable</codeph> либо путем обработки событий<codeph>itemEditBeginning</codeph> и <codeph>itemEditBegin</codeph></p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editedItemPosition:get"><apiName>editedItemPosition</apiName><shortdesc>
      Индекс строки и столбца средства визуализации элементов для редактируемого в настоящий момент элемента поставщика данных (если таковой существует).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Индекс строки и столбца средства визуализации элементов для редактируемого в настоящий момент элемента поставщика данных (если таковой существует).
     
      <p>Этот объект имеет два поля, <codeph>columnIndex</codeph> и <codeph>rowIndex</codeph>, индексы столбца и строки элемента, отсчитываемые от нуля. Например: {columnIndex:2, rowIndex:3}</p>
     
      <p>Установка этого свойства приводит к прокрутке с переводом элемента в видимую область и передаче события <codeph>itemEditBegin</codeph>, открывающего редактор элементов в указанном средстве визуализации элементов.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:editedItemRenderer:get"><apiName>editedItemRenderer</apiName><shortdesc>
      Ссылка на средство визуализации элементов в объекте DataGrid, элемент которого редактируется в настоящий момент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Ссылка на средство визуализации элементов в объекте DataGrid, элемент которого редактируется в настоящий момент.
     
      <p>Из прослушивателя событий для событий <codeph>itemEditBegin</codeph> и <codeph>itemEditEnd</codeph> можно вызвать текущее значение редактируемого элемента с помощью свойства <codeph>editedItemRenderer.data</codeph>.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:enableIME:get"><apiName>enableIME</apiName><shortdesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Флаг, указывающий на необходимость активации IME при получении компонентом фокуса. Если редактор включен, он соответственно активирует IME.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:imeMode:get"><apiName>imeMode</apiName><shortdesc>
      Указывает режим IME (редактор методов ввода).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает режим IME (редактор методов ввода). IME позволяет пользователям вводить текст на китайском, японском и корейском языках. Режим IME устанавливается при перемещении фокуса на элемент управления и возвращается к предыдущему значению при потере фокуса этим элементом управления.
     
     <p>Класс flash.system.IMEConversionMode определяет константы для допустимых значений этого свойства. Можно также указать значение <codeph>null</codeph> и не указывать IME.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.system.IMEConversionMode.xml"><linktext>flash.system.IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="mx.controls:DataGrid:minColumnWidth:get"><apiName>minColumnWidth</apiName><shortdesc>
      Минимальная ширина столбцов, в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Минимальная ширина столбцов, в пикселях. Если не NaN, элемент управления DataGrid использует это значение в качестве минимальной ширины для всех столбцов. В противном случае, отдельные столбцы могут иметь собственные значения минимальной ширины.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:DataGrid:horizontalScrollPosition:set"><apiName>horizontalScrollPosition</apiName><shortdesc>
      Смещение от левой границы внутрь содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Смещение от левой границы внутрь содержимого. Смещение измеряется в пикселях для некоторых подклассов, или в других единицах, например, таких как число столбцов в элементе управления DataGrid. DataGrid осуществляет прокрутку столбцов так, что значение свойства <codeph>horizontalScrollPosition</codeph> всегда находится в диапазоне от 0 до индекса столбцов. Это делает последний столбец видимым. Этот алгоритм отличается от алгоритма элемента управления List, который осуществляет прокрутку по пикселям. Элемент управления DataGrid выравнивает левый край столбца по левому краю элемента управления DataGrid.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:RichTextEditor"><apiName>RichTextEditor</apiName><shortdesc>Элемент управления RichTextEditor позволяет пользователям вводить и форматировать текст.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="underlineButton"/><Exclude kind="property" name="toolBar2"/><Exclude kind="property" name="toolBar"/><Exclude kind="property" name="linkTextInput"/><Exclude kind="property" name="layout"/><Exclude kind="property" name="label"/><Exclude kind="property" name="italicButton"/><Exclude kind="property" name="icon"/><Exclude kind="property" name="fontSizeCombo"/><Exclude kind="property" name="fontSizeArray"/><Exclude kind="property" name="fontFamilyCombo"/><Exclude kind="property" name="fontFamilyArray"/><Exclude kind="property" name="defaultButton"/><Exclude kind="property" name="colorPicker"/><Exclude kind="property" name="bulletButton"/><Exclude kind="property" name="boldButton"/><Exclude kind="property" name="alignButtons"/><styles><style inherit="no" name="textAreaStyleName" owner="mx.controls:RichTextEditor" playerVersion="Flash9" type="String">
<description>
          Имя объявления стиля CSS, используемое для стилей TextArea. По умолчанию TextArea использует унаследованные стили RichTextEditor.
          
          </description>

<playerversion>AIR 1.1
          </playerversion>
	<prolog><asCustoms><langversion>3.0
          </langversion><productversion>Flex 3
         </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The &lt;mx:RichTextEditor&gt; tag inherits all the members
  of its parent and adds the following members:</p>
 <pre>
  &lt;RichTextEditor
    <strong>Properties</strong>
    defaultLinkProtocol="http://"
    htmlText=""
    showControlBar="true | false"
    showToolTips="false | true"
    text=""
      
    <strong>Events</strong>
    change
  /&gt;
  
 </pre>
  
 ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseClassifier>mx.containers:Panel</apiBaseClassifier></apiClassifierDef><apiDesc>Элемент управления RichTextEditor позволяет пользователям вводить и форматировать текст. Изменяемые пользователем характеристики текста включают гарнитуру, цвет, размер, стиль шрифта и другие свойства, например, выравнивание текста, маркеры и ссылки на URL-адреса. Элемент управления состоит из панели управления с двумя нижестоящими элементами:
 <ul>
  <li>элемент управления «Текстовая область», куда пользователи могут вводить текст;</li>
  <li>контейнер с элементами управления форматом, позволяющий пользователю задавать характеристики текста. Элементы управления форматом влияют на вводимый или выделенный текст.</li>
 </ul>
 <p>RichTextEditor по умолчанию имеет высоту 300 и ширину 325 пикселей, и минимальную высоту и ширину по умолчанию 200 на 220 пикселей. При помещении элемента управления RichTextEditor в элемент управления DividedBox необходимо удостовериться, что DividedBox является достаточно большим для элемента управления RichTextEditor в своем минимальном виде. Кроме того, можно явно установить для свойства minHeight или minWidth элемента управления RichTextEditor значение <codeph>NaN</codeph>, позволяющее контейнеру DividedBox уменьшать размеры элемента управления до 0.</p>
 <p>В следующей таблице описаны нижестоящие элементы управления, к которым можно обращаться и изменять их.</p>
 <adobetable class="innertable">
  
  
  
  
  
  
  
  
  
  
  
  
  
 <tgroup cols="3"><thead><row><entry>Тип элемента управления </entry><entry>Идентификатор</entry><entry>Описание</entry></row></thead><tbody><row>
    <entry><xref href="../controls/TextArea.html">TextArea</xref></entry>
    <entry>textArea</entry>
    <entry>Область, куда пользователь может вводить текст.</entry>
  </row><row>
    <entry><xref href="../core/Container.html">Контейнер</xref></entry>
    <entry>панель управления</entry>
    <entry>Контейнер элементов управления форматированием; размещает элементы управления в одну горизонтальную строку, если это возможно, или, в противном случае, в несколько строк.</entry>
  </row><row>
    <entry><xref href="../controls/ComboBox.html">ComboBox</xref></entry>
    <entry>fontFamilyCombo</entry>
    <entry>Задает гарнитуру шрифта для текста. ComboBox dataProvider представляет собой массив строк со следующими значениями:
     <ul>
         <li>_sans</li>
         <li>_serif</li>
         <li>_typewriter</li>
         <li>Arial</li>
         <li>Courier</li>
         <li>Courier New</li>
         <li>Geneva</li>
         <li>Georgia</li>
         <li>Helvetica</li>
         <li>Times New Roman</li>
         <li>Times</li>
         <li>Verdana (по умолчанию)</li>
    </ul></entry>
  </row><row>
    <entry><xref href="../controls/ComboBox.html">ComboBox</xref></entry>
    <entry>fontSizeCombo</entry>
    <entry>Задает размер шрифта. ComboBox dataProvider представляет собой массив строк со следующими значениями: 8, 9, 10 (по умолчанию), 11, 12, 14, 16, 18, 20, 24, 26, 28, 36, 48, 72. 
    <p><b>Примечание.</b>Эта спецификация – фактическое значение размера шрифта в пикселях. Эти размеры не эквивалентны относительным размерам шрифта, заданным в HTML с помощью атрибута тега &lt;font><codeph>size</codeph>.</p></entry>
  </row><row>
    <entry><xref href="../containers/HBox.html">HBox</xref></entry>
    <entry>toolBar2</entry>
    <entry>Содержит кнопки характеристик шрифтов.</entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Кнопка</xref></entry>
    <entry>boldButton</entry>
    <entry>При переключении на selected=true устанавливает полужирный шрифт. </entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Кнопка</xref></entry>
    <entry>italicButton</entry>
    <entry>При переключении на selected=true устанавливает курсивное начертание шрифта. </entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Кнопка</xref></entry>
    <entry>underlineButton</entry>
    <entry>При переключении на selected=true устанавливает подчеркнутый шрифт.</entry>
  </row><row>
    <entry><xref href="../controls/ColorPicker.html">ColorPicker</xref></entry>
    <entry>colorPicker</entry>
    <entry>Определяет цвет текста. </entry>
  </row><row>
    <entry><xref href="../controls/ToggleButtonBar.html">ToggleButtonBar</xref></entry>
    <entry>alignButtons</entry>
    <entry>Задает выравнивание текста. Поставщик данных элемента управления состоит из массива объектов с полем объекта <codeph>action</codeph>, определяющим тип выравнивания. Допускаются следующие действия:
      <ul>
        <li>по левому краю (по умолчанию) </li>
    <li>по центру</li>
    <li>по правому краю</li>
    <li>выровнять</li>
    </ul></entry>
  </row><row>
    <entry><xref href="../controls/Button.html">Кнопка</xref></entry>
    <entry>bulletButton</entry>
    <entry>При переключении на selected=true преобразует текущую или выбранную строку в элемент маркированного списка.</entry>
  </row><row>
    <entry><xref href="../controls/TextInput.html">TextInput</xref></entry>
    <entry>linkTextInput</entry>
    <entry>Это поле активно только в том случае, если текст выделен. Если пользователь вводит в это поле URL-адрес и нажимает на клавишу Enter, Flex вставляет эквивалент HTML, тег <codeph>&lt;a href="<i>user_text</i>" target="blank">&lt;/a></codeph> в нижестоящий элемент управления класса TextArea в пределах выделенного текста.
 
        <p>Первоначально Flex заполняет этот элемент управления текстом, определенным в свойстве <codeph>defaultLinkProtocol</codeph>; затем пользователи могут дополнить остальную часть ссылки на этот текст или заменить ее.</p>
 </entry>
  </row></tbody></tgroup></adobetable>
  
 <p>Для перехода к одному из нижестоящих элементов управления можно использовать синтаксис, подобный следующему:
 <pre>
 myRTE.toolBar2.setStyle("backgroundColor", 0xCC6633);
 </pre>
 </p>
 
 <p>Для элемента управления RichTextEditor по умолчанию установлены характеристики размеров, перечисленные ниже.</p>
    <adobetable class="innertable">
       
       
       
       
    <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
          <entry>Размер по умолчанию</entry>
          <entry>325 пикселей в ширину на 300 пикселей в высоту</entry>
       </row><row>
          <entry>Минимальный размер</entry>
          <entry>220 пикселей в ширину на 200 пикселей в высоту</entry>
       </row><row>
          <entry>Максимальный размер</entry>
          <entry>10000 на 10000 пикселей</entry>
       </row></tbody></tgroup></adobetable>
  
  </apiDesc><example conref="RichTextEditorExample.mxml"><swfblock conref="examples/RichTextEditorExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.containers.xml#ControlBar"><linktext>mx.containers.ControlBar</linktext></link><link href="mx.containers.xml#Panel"><linktext>mx.containers.Panel</linktext></link><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#ColorPicker"><linktext>mx.controls.ColorPicker</linktext></link><link href="mx.controls.xml#ComboBox"><linktext>mx.controls.ComboBox</linktext></link><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link><link href="mx.controls.xml#TextInput"><linktext>mx.controls.TextInput</linktext></link></related-links><adobeApiEvent id="mx.controls:RichTextEditor_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
        Передается при изменении пользователем содержимого или формата текста в элементе управления TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
        Передается при изменении пользователем содержимого или формата текста в элементе управления TextArea. Это событие не передается, если содержимое TextArea изменяется путем сброса значения свойства <codeph>text</codeph> или <codeph>htmlText</codeph>.
        
        </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:RichTextEditor:RichTextEditor"><apiName>RichTextEditor</apiName><shortdesc>Конструктор.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Конструктор.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.controls:RichTextEditor:alignToolTip"><apiName>alignToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на кнопки выравнивания текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Align</apiData><apiType value="String"/><apiDefaultValue>"Align"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на кнопки выравнивания текста. Для всех кнопок используется одна всплывающая подсказка. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:boldToolTip"><apiName>boldToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на кнопку полужирного текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Bold</apiData><apiType value="String"/><apiDefaultValue>"Bold"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на кнопку полужирного текста. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:bulletToolTip"><apiName>bulletToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на кнопку маркированного списка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Bullet</apiData><apiType value="String"/><apiDefaultValue>"Bullet"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на кнопку маркированного списка. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:colorPickerToolTip"><apiName>colorPickerToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на элемент управления ColorPicker.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Color</apiData><apiType value="String"/><apiDefaultValue>"Color"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на элемент управления ColorPicker. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:fontFamilyToolTip"><apiName>fontFamilyToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на раскрывающийся список шрифтов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Font Family</apiData><apiType value="String"/><apiDefaultValue>"Font Family"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на раскрывающийся список шрифтов. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:fontSizeToolTip"><apiName>fontSizeToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на раскрывающийся список размеров шрифта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Font Size</apiData><apiType value="String"/><apiDefaultValue>"Font Size"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на раскрывающийся список размеров шрифта. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:italicToolTip"><apiName>italicToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на текстовую кнопку курсива.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Italic</apiData><apiType value="String"/><apiDefaultValue>"Italic"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на текстовую кнопку курсива. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:linkToolTip"><apiName>linkToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на поле ввода текста ссылки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Link</apiData><apiType value="String"/><apiDefaultValue>"Link"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на поле ввода текста ссылки. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:underlineToolTip"><apiName>underlineToolTip</apiName><shortdesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на текстовую кнопку подчеркивания.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>Underline</apiData><apiType value="String"/><apiDefaultValue>"Underline"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Всплывающая подсказка, которая появляется при наведении пользователем курсора на текстовую кнопку подчеркивания. Для просмотра всплывающих подсказок следует также установить значение <codeph>true</codeph> для свойства <codeph>showToolTips</codeph> элемента управления RichTextEditor.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:defaultLinkProtocol:get"><apiName>defaultLinkProtocol</apiName><shortdesc>
     Строка протокола по умолчанию для использования в начале текста ссылки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"http://"
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Строка протокола по умолчанию для использования в начале текста ссылки. Эта строка появляется в нижестоящем элементе управления LinkTextInput, что позволяет пользователям не вводить идентификатор протокола при вводе текста ссылки.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:htmlText:get"><apiName>htmlText</apiName><shortdesc>
     Текст, содержащий разметку HTML, и отображаемый в нижестоящем элементе управления TextArea элемента управления RichTextEditor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Текст, содержащий разметку HTML, и отображаемый в нижестоящем элементе управления TextArea элемента управления RichTextEditor. Невозможно одновременно установить это свойство и свойство <codeph>text</codeph>. Если установлено одно свойство, то оно заменяет все значения, установленные с помощью другого свойства. Можно получить оба свойства; свойство <codeph>htmlText</codeph> всегда возвращает строку, содержащую разметку HTML, которая отражает текущее форматирование текста. Для получения дополнительной информации об использовании этого свойства см. документацию по TextArea.
     
     </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:selection:get"><apiName>selection</apiName><shortdesc>
      Объект TextRange, содержащий выделенный текст в нижестоящем элементе управления TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.controls.textClasses:TextRange</apiValueClassifier></apiValueDef><apiDesc>
      Объект TextRange, содержащий выделенный текст в нижестоящем элементе управления TextArea.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.textClasses.xml#TextRange"><linktext>mx.controls.textClasses.TextRange</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:showControlBar:get"><apiName>showControlBar</apiName><shortdesc>
     Определяет необходимость отображения панели управления, содержащей элементы управления форматированием текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Определяет необходимость отображения панели управления, содержащей элементы управления форматированием текста.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:showToolTips:get"><apiName>showToolTips</apiName><shortdesc>
     Определяет необходимость отображения всплывающих подсказок для элементов управления форматированием текста.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
     Определяет необходимость отображения всплывающих подсказок для элементов управления форматированием текста. 
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RichTextEditor:text:get"><apiName>text</apiName><shortdesc>
     Неформатированный текст без разметки, отображаемый в нижестоящем элементе управления TextArea элемента управления RichTextEditor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Неформатированный текст без разметки, отображаемый в нижестоящем элементе управления TextArea элемента управления RichTextEditor. Невозможно установить это свойство и свойство <codeph>htmlText</codeph> одновременно. Если установлено одно свойство, то оно заменяет все значения, установленные с помощью другого свойства. Можно получить оба свойства; свойство <codeph>text</codeph> всегда возвращает строку обычного текста без информации о форматировании. Для получения дополнительной информации об использовании этого свойства см. документацию по TextArea.
     
     </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#TextArea"><linktext>mx.controls.TextArea</linktext></link></related-links></apiValue><apiValue id="mx.controls:RichTextEditor:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.core:IFlexModuleFactory</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:RadioButtonGroup"><apiName>RadioButtonGroup</apiName><shortdesc>
  Элемент управления RadioButtonGroup определяет группу элементов управления RadioButton, которая рассматривается как единый элемент управления с взаимоисключающими вариантами выбора. Таким образом, единовременно можно выбрать только один элемент управления RadioButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:RadioButtonGroup" replacement="spark.components.RadioButtonGroup" since="4.0">
	</Alternative></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:RadioButtonGroup&gt;</code> tag inherits all of the
  tag attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:RadioButtonGroup
    <strong>Properties</strong>
    enabled="true|false"
    id="<i>No default</i>"
    labelPlacement="right|left|top|bottom"
 
    <strong>Events</strong>
    change="<i>No default</i>"
    itemClick="<i>No default</i>"
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IMXMLObject</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления RadioButtonGroup определяет группу элементов управления RadioButton, которая рассматривается как единый элемент управления с взаимоисключающими вариантами выбора. Таким образом, единовременно можно выбрать только один элемент управления RadioButton. Хотя группировка экземпляров RadioButton в RadioButtonGroup является необязательной, группа позволяет выполнять такие действия, как установка отдельного обработчика событий сразу на группу кнопок, а не на каждую кнопку в отдельности.
  
  <p>Свойство <codeph>id</codeph> требуется при использовании тега <codeph>&lt;mx:RadioButtonGroup></codeph> для определения имени группы.</p> 
 
  <p>Обратите внимание, что элемент управления RadioButtonGroup является подклассом EventDispatcher, а не UIComponent, и реализует интерфейс IMXMLObject. Визуальные компоненты любого другого компонента Flex являются подклассами UIComponent, реализующего интерфейс IUIComponent. Элемент управления RadioButtonGroup имеет встроенную поддержку в компиляторе Flex, что позволяет использовать его как нижестоящий элемент контейнера Flex даже при отсутствии реализации IUIComponent. Все другие нижестоящие элементы контейнера должны реализовывать интерфейс IUIComponent.</p>
 
  <p>Поэтому при попытке определения визуального компонента как подкласса EventDispatcher, реализующего интерфейс IMXMLObject, невозможно использовать его как нижестоящий элемент контейнера.</p>
 
  </apiDesc><example conref="RadioButtonGroupExample.mxml"><swfblock conref="examples/RadioButtonGroupExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#RadioButton"><linktext>mx.controls.RadioButton</linktext></link></related-links><adobeApiEvent id="mx.controls:RadioButtonGroup_mx.events.ItemClickEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается при выборе элемента управления RadioButton в группе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ItemClickEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.ItemClickEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе элемента управления RadioButton в группе. Можно также указать обработчик для отдельных элементов управления RadioButton.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:RadioButtonGroup_flash.events.Event.CHANGE_change"><apiName>change</apiName><shortdesc>
  Передается при изменении значения выбранного элемента управления RadioButton в этой группе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении значения выбранного элемента управления RadioButton в этой группе.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:RadioButtonGroup:RadioButtonGroup"><apiName>RadioButtonGroup</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>document</apiItemName><apiOperationClassifier>mx.core:IFlexDisplayObject</apiOperationClassifier><apiData>null</apiData><apiDesc>В простых случаях, когда класс расширяет EventDispatcher, не следует использовать параметр<codeph>document</codeph>.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.events.EventDispatcher.xml"><linktext>flash.events.EventDispatcher</linktext></link></related-links></apiConstructor><apiOperation id="mx.controls:RadioButtonGroup:getRadioButtonAt"><apiName>getRadioButtonAt</apiName><shortdesc>
      Возвращает элемент управления RadioButton из заданной позиции индекса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Указанный элемент управления RadioButton.
      
      </apiDesc><apiOperationClassifier>mx.controls:RadioButton</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Индекс элемента управления RadioButton в элементе управления RadioButtonGroup, где индекс первого элемента управления равен 0.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает элемент управления RadioButton из заданной позиции индекса.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:RadioButtonGroup:initialized"><apiName>initialized</apiName><shortdesc>
      Реализация метода IMXMLObject.initialized() для поддержки отложенной реализации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>document</apiItemName><apiType value="Object"/><apiDesc>Документ MXML, создавший этот объект.
     
      </apiDesc></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>Идентификатор, используемый document в качестве ссылки на этот объект. Если объект представляет собой глубокое свойство в документе, <codeph>id</codeph> равно null.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Реализация метода <codeph>IMXMLObject.initialized()</codeph> для поддержки отложенной реализации.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#IMXMLObject"><linktext>mx.core.IMXMLObject</linktext></link></related-links></apiOperation><apiValue id="mx.controls:RadioButtonGroup:enabled:get"><apiName>enabled</apiName><shortdesc>
      Определяет, разрешен выбор или нет.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет, разрешен выбор или нет.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:labelPlacement:get"><apiName>labelPlacement</apiName><shortdesc>
      Расположение метки RadioButton относительно значка RadioButton для каждого элемента управления в группе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>"right"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Расположение метки RadioButton относительно значка RadioButton для каждого элемента управления в группе. Можно переопределить эту установку для отдельных элементов управления.
     
      <p>Допустимыми значениями в MXML являются <codeph>right</codeph>, <codeph>left</codeph>, <codeph>bottom</codeph> и <codeph>top</codeph>. </p>
     
      <p>В ActionScript для установки значения этого свойства можно использовать следующие константы: <codeph>ButtonLabelPlacement.RIGHT</codeph>, <codeph>ButtonLabelPlacement.LEFT</codeph>, <codeph>ButtonLabelPlacement.BOTTOM</codeph> и <codeph>ButtonLabelPlacement.TOP</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:numRadioButtons:get"><apiName>numRadioButtons</apiName><shortdesc>
      Число элементов RadioButton, принадлежащих этой RadioButtonGroup.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/><apiDefaultValue>"undefined"
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Число элементов RadioButton, принадлежащих этой RadioButtonGroup.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:selectedValue:get"><apiName>selectedValue</apiName><shortdesc>
      Значение свойства value выбранного элемента управления RadioButton в группе, если оно установлено как отличное от null (значение по умолчанию).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Значение свойства <codeph>value</codeph> выбранного элемента управления RadioButton в группе, если оно установлено как отличное от <codeph>null</codeph> (значение по умолчанию). Иначе <codeph>selectedValue</codeph> является значением свойства <codeph>label</codeph> выбранного элемента RadioButton. При отсутствии выбранного элемента RadioButton для этого свойства устанавливается значение <codeph>null</codeph>.
     
      <p>В компоненте Flex при установке значения <codeph>selectedValue</codeph> выбирается элемент управления RadioButton со свойством <codeph>value</codeph> или <codeph>label</codeph>, соответствующим этому значению.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:RadioButtonGroup:selection:get"><apiName>selection</apiName><shortdesc>
      Содержит ссылку на текущий выбранный элемент управления RadioButton в группе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:RadioButton</apiValueClassifier><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Содержит ссылку на текущий выбранный элемент управления RadioButton в группе. Можно получить доступ к свойству только в ActionScript; установка в MXML не предусмотрена. Установка этого свойства как <codeph>null</codeph> отменяет выбор текущего элемента управления RadioButton.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:Menu"><apiName>Menu</apiName><shortdesc>
  Элемент управления Menu создает всплывающее меню с вариантами выбора, подобное меню File или Edit, используемым в большинстве программных приложений.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBarStyleName"/><Exclude kind="property" name="showScrollTips"/><Exclude kind="property" name="scrollTipFunction"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="liveScrolling"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBarStyleName"/><Exclude kind="property" name="allowMultipleSelection"/><styles><style inherit="no" name="separatorSkin" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Тема оформления для всех пунктов меню, идентифицируемых как разделители.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="radioDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Значок для всех деактивированных пунктов меню с идентификатором типа в виде переключателя.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="radioIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Значок для всех активированных пунктов меню с идентификатором типа в виде переключателя.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="checkDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Значок для всех деактивированных пунктов меню с идентификатором типа в виде флажка.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="checkIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Значок для всех активированных пунктов меню с идентификатором типа в виде флажка.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="branchDisabledIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Значок для всех деактивированных пунктов меню, имеющих подменю.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="branchIcon" owner="mx.controls:Menu" playerVersion="Flash9" type="Class">
<description>
  Значок для всех активированных пунктов меню, имеющих подменю.  <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Цвет текста пункта меню при выборе пункта меню. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Цвет текста пункта меню при наведении на него курсора мыши. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Смещение первой строки текста с левой стороны элемента меню или подменю. 
 
  </description>
<default>0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="selectionEasingFunction" owner="mx.controls:Menu" playerVersion="Flash9" type="Function">
<description>
  Ссылка на уравнение<codeph>easingFunction</codeph>, используемое для управления программным созданием промежуточных кадров.
 
  </description>
<default>"undefined"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Цвет фона элемента меню при выборе элемента меню. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:Menu" playerVersion="Flash9" type="uint">
<description>
  Цвет фона элемента меню при наведении на него курсора мыши. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="openDuration" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Продолжительность перехода открытия меню или подменю, в миллисекундах. Значение 0 означает отсутствие перехода.  
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="rightIconGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Промежуток справа от метки в пункте меню. Если значок ветви не помещается в этом промежутке, то промежуток расширяется до размера значка. Значением по умолчанию является 15.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="leftIconGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Промежуток слева от метки в пункте меню. Если значки (пользовательский значок и значок типа) не помещаются в этом промежутке, то промежуток увеличивается до размера значка. Значением по умолчанию является 18.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:Menu" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами (значки и метка) по горизонтали.
 
  </description>
<default>6
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="mx.controls:Menu" playerVersion="Flash9" type="Array">
<description>
  Цвета, используемые для пунктов меню или подменю в образце с чередованием цветов. Значение может представлять массив из двух и более цветов. Этот стиль используется только в том случае, если не указано свойство <codeph>backgroundColor</codeph>. 
 
  </description>
<default>"undefined"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles><DefaultProperty name="dataProvider"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.managers:IFocusManagerContainer</apiBaseInterface><apiBaseClassifier>mx.controls:List</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления Menu создает всплывающее меню с вариантами выбора, подобное меню File или Edit, используемым в большинстве программных приложений. Всплывающее меню может иметь произвольное число подменю. После открытия элемента управления Menu, он остается видимым, пока не будет закрыт в результате одного из следующих действий:
 
  <ul>
   <li>вызов метода <codeph>Menu.hide()</codeph>;</li>
   <li>выбор активированного пункта меню;</li>
   <li>нажатие кнопки мыши вне элемента управления Menu;</li>
   <li>выбор другого компонента в приложении.</li>
  </ul>
 
  <p>Класс Menu не имеет соответствующего тега MXML. Следует создать его с помощью ActionScript.</p>
 
  <p>Элемент управления Menu имеет характеристики размеров, перечисленные ниже.</p>
     <adobetable class="innertable">
        
        
     <tgroup cols="2"><thead><row><entry>Характеристика</entry><entry>Описание</entry></row></thead><tbody><row>
           <entry>Размер по умолчанию</entry>
           <entry>Ширина определяется из текста меню. Высота по умолчанию равна числу строк меню, умноженному на 19 пикселей для строки (высота строки по умолчанию).</entry>
        </row></tbody></tgroup></adobetable>
 
 <p>Поставщик данных для пунктов меню может указать несколько атрибутов, определяющих отображение и поведение данного пункта, как это показано в следующем поставщике данных XML.</p>
  <pre>
   &lt;mx:XML format="e4x" id="myMenuData">
     &lt;root>
        &lt;menuitem label="MenuItem A" icon="myTopIcon">
            &lt;menuitem label="SubMenuItem A-1" enabled="False"/>
            &lt;menuitem label="SubMenuItem A-2"/>
        &lt;/menuitem>
        &lt;menuitem label="MenuItem B" type="check" toggled="true"/>
        &lt;menuitem label="MenuItem C" type="check" toggled="false" icon="myTopIcon"/>
        &lt;menuitem type="separator"/> 
        &lt;menuitem label="MenuItem D" icon="myTopIcon">
            &lt;menuitem label="SubMenuItem D-1" type="radio" groupName="one"/>
            &lt;menuitem label="SubMenuItem D-2" type="radio" groupName="one" toggled="true"/>
            &lt;menuitem label="SubMenuItem D-3" type="radio" groupName="one"/>
        &lt;/menuitem>
    &lt;/root>
 &lt;/mx:XML></pre>
 
  <p>В следующей таблице приведены атрибуты, которые можно указать, типы данных, назначение, а также способ их отображения поставщиком данных при использовании класса DefaultDataDescriptor в меню для анализа поставщика данных:</p>
 
  <adobetable class="innertable">
  
  
  
  
  
  
  
 <tgroup cols="3"><thead><row><entry>Атрибут</entry><entry>Тип</entry><entry>Описание</entry></row></thead><tbody><row>
    <entry><codeph>включено</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, может ли пункт меню быть выбран пользователем (<codeph>true</codeph>) или нет (<codeph>false</codeph>). Если значение не указано, элемент обрабатывается так, как если бы имел значение <codeph>true</codeph>. При применении дескриптора данных по умолчанию для указания этой характеристики поставщиками данных должен использоваться атрибут XML <codeph>enabled</codeph> или поле объекта.</entry>
  </row><row>
    <entry><codeph>groupName</codeph></entry>
    <entry>Строка</entry>
    <entry> (Необходима и используется только для типа <codeph>radio</codeph>.) Идентификатор, связывающий элементы переключателей в группе переключателей. При использовании дескриптора данных по умолчанию поставщики данных должны использовать для указания этой характеристики атрибут XML <codeph>groupName</codeph> или поле объекта.</entry>
  </row><row>
    <entry><codeph>Значок</codeph></entry>
    <entry>Класс</entry>
    <entry>Указывает идентификатор класса ресурса изображений. Этот пункт не используется для типов <codeph>check</codeph>, <codeph>radio</codeph> или <codeph>separator</codeph>. Можно использовать стили <codeph>checkIcon</codeph> и <codeph>radioIcon</codeph> для указания значков, применяемых для выбранных переключателей и флажков. Свойство меню <codeph>iconField</codeph> или <codeph>iconFunction</codeph> определяет имя поля в данных, указывающее значок или функцию для определения значков.</entry>
  </row><row>
    <entry><codeph>метка</codeph></entry>
    <entry>Строка</entry>
    <entry>Задает текст, отображаемый в элементе управления. Этот элемент используется для всех типов пунктов меню, за исключением <codeph>separator</codeph>. Свойство меню <codeph>labelField</codeph> или <codeph>labelFunction</codeph> определяет имя поля в составе данных, указывающего метку или функцию для определения меток. (Если поставщик данных имеет формат XML E4X, для отображения метки необходимо задать одно из этих свойств.) Если поставщиком данных является массив из строк, в качестве метки используется строковое значение.</entry>
  </row><row>
    <entry><codeph>toggled</codeph></entry>
    <entry>Логическое значение</entry>
    <entry>Указывает, выбран флажок или переключатель. Если значение не указано, элемент обрабатывается так, как если бы было установлено значение <codeph>false</codeph> и элемент не был выбран. При использовании дескриптора данных по умолчанию для указания этой характеристики в поставщиках данных необходимо применять атрибут XML toggled или поле объекта.</entry>
  </row><row>
    <entry><codeph>type</codeph></entry>
    <entry>Строка</entry>
    <entry>Указывает тип пункта меню. Возможными значениями являются <codeph>separator</codeph>, <codeph>check</codeph> или <codeph>radio</codeph>. Все другие значения или узлы без указания типа обрабатываются как обычные пункты меню. При использовании дескриптора данных по умолчанию для указания этой характеристики в поставщиках данных необходимо применять атрибут XML type или поле объекта.</entry>
  </row></tbody></tgroup></adobetable>
 
 
  </apiDesc><example conref="SimpleMenuExample.mxml"><swfblock conref="examples/SimpleMenuExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link><link href="mx.controls.menuClasses.xml#IMenuDataDescriptor"><linktext>mx.controls.menuClasses.IMenuDataDescriptor</linktext></link><link href="mx.controls.treeClasses.xml#DefaultDataDescriptor"><linktext>mx.controls.treeClasses.DefaultDataDescriptor</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link><link href="mx.managers.xml#PopUpManager"><linktext>mx.managers.PopUpManager</linktext></link></related-links><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><shortdesc>
  Передается при наведении курсора мыши на пункт меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events. MenuEvent. ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при наведении курсора мыши на пункт меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><shortdesc>
  Передается при наведении курсора мыши вне пункта меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при наведении курсора мыши вне пункта меню.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.MENU_SHOW_menuShow"><apiName>menuShow</apiName><shortdesc>
  Передается при открытии меню или подменю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при открытии меню или подменю. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.MENU_HIDE_menuHide"><apiName>menuHide</apiName><shortdesc>
  Передается при отклонении меню или подменю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при отклонении меню или подменю.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.ITEM_CLICK_itemClick"><apiName>itemClick</apiName><shortdesc>
  Передается при выборе пункта меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при выборе пункта меню. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:Menu_mx.events.MenuEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
  Это событие передается при изменении выбора в результате действий пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MenuEvent.CHANGE</apiEventType><adobeApiEventClassifier>mx.events.MenuEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Это событие передается при изменении выбора в результате действий пользователя. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:Menu:Menu"><apiName>Menu</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
     
      <p>Приложения, как правило, непосредственно не вызывают конструктор меню. Вместо этого приложения вызывают метод <codeph>Menu.createMenu()</codeph>.</p>
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:Menu:createMenu"><apiName>createMenu</apiName><shortdesc>
      Создает и возвращает экземпляр класса меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata><asCustoms><showRoot>
     
      </showRoot></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Экземпляр класса Menu. 
     
      </apiDesc><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier></apiReturn><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>Контейнер, используемый PopUpManager для размещения элемента управления Menu. Элемент управления Menu не обязательно должен быть нижестоящим элементом этого объекта.
     
      </apiDesc></apiParam><apiParam><apiItemName>mdp</apiItemName><apiType value="Object"/><apiDesc>Поставщик данных для элемента управления Menu. 
      </apiDesc></apiParam><apiParam><apiItemName>showRoot</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Логический флаг, указывающий, следует отображать корневой узел поставщика данных или нет.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Создает и возвращает экземпляр класса меню. Содержимое элемента управления Menu определяется аргументом <codeph>mdp</codeph> метода. Элемент управления Menu помещается в вышестоящий контейнер, указанный аргументом <codeph>parent</codeph> метода. Этот метод не отображает элемент управления Menu. С помощью этого метода только создается элемент управления Menu и осуществляются изменения экземпляра меню до отображения самого меню. Для отображения меню следует вызвать метод<codeph>Menu.show()</codeph>.
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#Menu/popUpMenu()"><linktext>mx.controls.Menu.popUpMenu()</linktext></link></related-links></apiOperation><apiOperation id="mx.controls:Menu:hide"><apiName>hide</apiName><shortdesc>
      Скрывает элемент управления Menu и любое из его подменю, если элемент управления Menu является видимым.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Скрывает элемент управления Menu и любое из его подменю, если элемент управления Menu является видимым.  
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:makeListData"><apiName>makeListData</apiName><shortdesc>
      Обеспечивает создание нового экземпляра MenuListData и заполнение полей на основе входящего элемента поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiDesc>Вновь созданный объект ListData.
      
      </apiDesc><apiOperationClassifier>mx.controls.listClasses:BaseListData</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Элемент поставщика данных, используемый для заполнения свойства ListData.
      </apiDesc></apiParam><apiParam><apiItemName>uid</apiItemName><apiType value="String"/><apiDesc>Уникальный идентификатор элемента.
      </apiDesc></apiParam><apiParam><apiItemName>rowNum</apiItemName><apiType value="int"/><apiDesc>Индекс элемента в поставщике данных.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обеспечивает создание нового экземпляра MenuListData и заполнение полей на основе входящего элемента поставщика данных. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:measure"><apiName>measure</apiName><shortdesc>
      Вычисляет предпочтительную ширину и высоту меню на основе ширины и высоты его пунктов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вычисляет предпочтительную ширину и высоту меню на основе ширины и высоты его пунктов. Этот метод не принимает во внимание расположение и размер подменю. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:popUpMenu"><apiName>popUpMenu</apiName><shortdesc>
      Устанавливает dataProvider существующего элемента управления Menu и помещает элемент управления Menu в указанный вышестоящий контейнер.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>menu</apiItemName><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier><apiDesc>Всплывающий элемент управления Menu. 
     
      </apiDesc></apiParam><apiParam><apiItemName>parent</apiItemName><apiType value="flash.display:DisplayObjectContainer"/><apiDesc>Контейнер, используемый PopUpManager для размещения элемента управления Menu. Элемент управления Menu не обязательно должен быть нижестоящим элементом этого объекта. Если свойство не указано, метод устанавливает вышестоящий элемент управления Menu для приложения. 
     
      </apiDesc></apiParam><apiParam><apiItemName>mdp</apiItemName><apiType value="Object"/><apiDesc>объект dataProvider, установленный во всплывающем меню. Если свойство не указано, метод устанавливает поставщик данных меню для нового пустого объекта XML.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Устанавливает dataProvider существующего элемента управления Menu и помещает элемент управления Menu в указанный вышестоящий контейнер. Этот метод не отображает элемент управления Menu; для отображения элемента управления Menu следует использовать метод <codeph>Menu.show()</codeph>. Метод <codeph>Menu.createMenu()</codeph> использует этот метод.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:protected:setMenuItemToggled"><apiName>setMenuItemToggled</apiName><shortdesc>
      Переключает пункт меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>Переключаемый пункт меню.
      </apiDesc></apiParam><apiParam><apiItemName>toggle</apiItemName><apiType value="Boolean"/><apiDesc>Логическое значение, указывающее, переключается этот пункт или нет. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Переключает пункт меню. Идентификатор типа пункта меню должен быть флажком или переключателем, иначе этот метод не оказывает какого-либо действия.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:Menu:show"><apiName>show</apiName><shortdesc>
      Отображает элемент управления Menu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>xShow</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Расположение по горизонтали верхнего левого угла элемента управления Menu (необязательно).
     
      </apiDesc></apiParam><apiParam><apiItemName>yShow</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Расположение по вертикали верхнего левого угла элемента управления Menu (необязательно).
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Отображает элемент управления Menu. Если элемент управления Menu не виден, метод помещает меню в верхний левый угол вышестоящего приложения в заданные координаты, по необходимости изменяет размеры элемента управления Menu и делает его видимым. Аргументы x и y метода <codeph>show()</codeph> указывают координаты верхнего левого угла элемента управления Menu относительно корневой папки, которая не обязательно является непосредственно вышестоящим элементом для элемента управления Menu. Например, если элемент управления Menu находится в контейнере HBox, который вложен в контейнер панели, координаты x и y указываются относительно контейнера приложения, а не контейнера HBox.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:Menu:dataDescriptor:get"><apiName>dataDescriptor</apiName><shortdesc>
      Объект, обеспечивающий доступ к данным и управление ими в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls.menuClasses:IMenuDataDescriptor</apiValueClassifier></apiValueDef><apiDesc>
      Объект, обеспечивающий доступ к данным и управление ими в поставщике данных. Элемент управления Menu делегирует в дескриптор данных информацию о его данных. Затем эти данные используются для анализа и перемещения источника данных. Дескриптор данных, определенный для главного меню, используется для всех подменю. Значением по умолчанию является внутренний экземпляр класса DefaultDataDescriptor.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Menu:hasRoot:get"><apiName>hasRoot</apiName><shortdesc>
      Флаг, который указывает, что текущий поставщик данных имеет корневой узел; например, отдельный узел верхнего уровня в иерархической структуре.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false
      </apiDefaultValue></apiValueDef><apiDesc>
      Флаг, который указывает, что текущий поставщик данных имеет корневой узел; например, отдельный узел верхнего уровня в иерархической структуре. XML и Object являются примерами типов, которые имеют корневой узел, тогда как списки и массивы – нет.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Menu/showRoot"><linktext>showRoot</linktext></link></related-links></apiValue><apiValue id="mx.controls:Menu:parentMenu:get"><apiName>parentMenu</apiName><shortdesc>
      Вышестоящее меню в иерархической цепочке меню, где текущее меню – подменю вышестоящего.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>mx.controls:Menu</apiValueClassifier></apiValueDef><apiDesc>
      Вышестоящее меню в иерархической цепочке меню, где текущее меню – подменю вышестоящего.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:Menu:showRoot:get"><apiName>showRoot</apiName><shortdesc>
      Логический флаг, указывающий, отобразить ли корневой узел поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      </apiDefaultValue></apiValueDef><apiDesc>
      Логический флаг, указывающий, отобразить ли корневой узел поставщика данных. Если объект dataProvider имеет корневой узел и showRoot установлено как <codeph>false</codeph>, элемент управления Menu не отображает корневой узел; отображаются только нижестоящие элементы. Этот флаг не влияет на поставщики данных без корневых узлов, такие как списки или массивы. 
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#Menu/hasRoot"><linktext>hasRoot</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.controls:VScrollBar"><apiName>VScrollBar</apiName><shortdesc>
  Элемент управления VScrollBar (вертикальный ScrollBar) позволяет просматривать данные по частям, если все данные не помещаются в области отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="property" name="direction"/><Alternative owner="mx.controls:VScrollBar" replacement="spark.components.VScrollBar" since="4.0">
	</Alternative><styles><style format="Time" inherit="no" name="repeatInterval" owner="mx.controls:VScrollBar" playerVersion="Flash9" type="Number">
<description>
  Количество миллисекунд между событиями <codeph>buttonDown</codeph> при нажатии и удержании пользователем кнопки мыши на кнопке. Значением по умолчанию является 35.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Time" inherit="no" name="repeatDelay" owner="mx.controls:VScrollBar" playerVersion="Flash9" type="Number">
<description>
  Число миллисекунд, указывающее время ожидания после первого события <codeph>buttonDown</codeph> перед повторением события<codeph>buttonDown</codeph> в <codeph>repeatInterval</codeph>. Значением по умолчанию является 500.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  
  <p>The <code>&lt;mx:VScrollBar&gt;</code> tag inherits all the
  tag attributes of its superclass, and adds the following tag attributes:</p>
  
  <pre>
  &lt;mx:VScrollBar
    <strong>Styles</strong>
    repeatDelay="500"
    repeatInterval="35"
 
    <strong>Events</strong>
    scroll="<i>No default</i>"
  /&gt;
  </pre>
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls.scrollClasses:ScrollBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления VScrollBar (вертикальный ScrollBar) позволяет просматривать данные по частям, если все данные не помещаются в области отображения. Этот элемент управления расширяет основной элемент управления ScrollBar. 
  
  <p>Элемент управления VScrollBar можно использовать автономно, однако обычно он используется как часть группы компонентов, обеспечивающих возможность прокрутки.</p>
  
  <p>Компонент ScrollBar состоит из четырех частей: двух кнопок со стрелками, полосы прокрутки и ползунка. Положение ползунка и отображение кнопок со стрелками зависит от текущего состояния элемента управления ScrollBar. Элемент управления ScrollBar использует параметры для вычисления состояния отображения:</p>
 
  <ul>
    <li>Минимальное значение диапазона</li>
    <li>Максимальное значение диапазона</li>
    <li>Текущее положение должно находиться между минимальным и максимальным значениями диапазона</li>
    <li>Размер области просмотра представляет число одновременно отображаемых элементов в диапазоне. Число элементов должно быть меньше или равно диапазону, где диапазоном является набор значений от минимальных значений диапазона до его максимальных значений.</li>
  </ul>
  
  </apiDesc><example conref="VScrollBarExample.mxml"><swfblock conref="examples/VScrollBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.scrollClasses.xml#ScrollBar"><linktext>mx.controls.scrollClasses.ScrollBar</linktext></link></related-links><adobeApiEvent id="mx.controls:VScrollBar_mx.events.ScrollEvent.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
  Передается при прокрутке элемента управления ScrollBar с помощью инициированной пользователем операции или программным путем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.ScrollEvent.SCROLL</apiEventType><adobeApiEventClassifier>mx.events.ScrollEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при прокрутке элемента управления ScrollBar с помощью инициированной пользователем операции или программным путем. 
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:VScrollBar:VScrollBar"><apiName>VScrollBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.controls:VideoDisplay"><apiName>VideoDisplay</apiName><shortdesc>
  Элемент управления VideoDisplay, позволяющий воспроизводить FLV-файл в приложении Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Alternative owner="mx.controls:VideoDisplay" replacement="spark.components.VideoPlayer" since="4.0">
	</Alternative><styles><style format="Color" inherit="yes" name="contentBackgroundColor" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Цвет области содержимого компонента.
   
  </description>
<default>0xFFFFFF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="shadowDistance" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Расстояние для тени. Если для свойства установлено отрицательное значение, тень отображается над компонентом.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="left,center,right" inherit="no" name="shadowDirection" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  Направление тени. Допустимыми значениями являются <codeph>left</codeph>, <codeph>center</codeph> и <codeph>right</codeph>.
 
  </description>
<default>"center"
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="dropShadowColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет тени.
 
  </description>
<default>0x000000
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowVisible" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах установите свойство <codeph>contentBackgroundColor</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="dropShadowEnabled" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Boolean">
<description>
  Логическое свойство, которое указывает на наличие у компонента видимой тени. Этот стиль используется при установке значения solid для свойства <codeph>borderStyle</codeph>. Значение по умолчанию <codeph>false</codeph>.
 
  <p><b>Примечание.</b> Для отображения теней в контейнерах выберите свойства <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. В противном случае тень будет отображаться за контейнером, поскольку по умолчанию контейнер имеет прозрачный фон.</p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="cornerRadius" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo, spark" type="Number">
<description>
  Радиус углов компонента.  Значением по умолчанию для ApplicationControlBar является 5.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderVisible" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Boolean">
<description>
  Видимость границы.
 
  </description>
<default>true
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="borderThickness" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Толщина ограничительной рамки. Используется только в случае, если для свойства <codeph>borderStyle</codeph> установлено значение <codeph>solid</codeph>.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style enumeration="inset,outset,solid,none" inherit="no" name="borderStyle" owner="mx.controls:VideoDisplay" playerVersion="Flash9" type="String">
<description>
  Стиль ограничительной рамки. Возможными значениями являются <codeph>none</codeph>, <codeph>solid</codeph>, <codeph>inset</codeph> и <codeph>outset</codeph>. Значение по умолчанию зависит от класса компонента; если оно не переопределено для класса, значением по умолчанию является <codeph>inset</codeph>. Значением по умолчанию для большинства контейнеров является <codeph>none</codeph>. Значения <codeph>inset</codeph> и <codeph>outset</codeph> являются действительными только с темой Halo.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSkin" owner="mx.controls:VideoDisplay" playerVersion="Flash9" type="Class">
<description>
  Класс темы оформления границы компонента. <codeph/><codeph/> <codeph/><codeph/> Для определения значения по умолчанию для компонента см. файл default.css.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderSides" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  Стороны ограничительной рамки. Строка, разделенная пробелами, указывающая отображаемые стороны границы. Строка может содержать значения <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph> в любом порядке. Значением по умолчанию является <codeph>left top right bottom</codeph>. При этом будут отображаться все четыре стороны. Этот стиль используется только в том случае, если для borderStyle установлено значение <codeph>solid</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="borderColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo, spark" type="uint">
<description>
  Цвет границы. <codeph/><codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="borderAlpha" owner="mx.controls:VideoDisplay" playerVersion="Flash10" theme="spark" type="Number">
<description>
  Альфа-канал границы.
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundSize" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="String">
<description>
  Масштабирует изображение, указанное свойством <codeph>backgroundImage</codeph>, в соответствии с различными указываемыми процентными значениями. При значении <codeph>100%</codeph> изображение растягивается по всей области компонента. Для указания процентного значения необходимо добавить символ процента (%). Значением по умолчанию для контейнера Application является <codeph>100%</codeph>. Значением по умолчанию для всех других контейнеров является <codeph>auto</codeph>, при котором сохраняется первоначальный размер изображения.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="File" inherit="no" name="backgroundImage" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Object">
<description>
  Фоновое изображение компонента. Может являться классом, абсолютным или относительным URL-адресом. Можно установить <codeph>backgroundColor</codeph> или <codeph>backgroundImage</codeph>. Фоновое изображение отображается поверх цвета фона. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что значение не установлено. Если этот стиль и стиль <codeph>backgroundColor</codeph> не определены, для компонента устанавливается прозрачный фон.
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате фоновое изображение контейнера частично «растекается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="backgroundDisabledColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента при его деактивации. Глобальным значением по умолчанию является <codeph>undefined</codeph>. Значением по умолчанию для элементов управления List является <codeph>0xDDDDDD</codeph> (светло-серый). Если контейнер деактивирован, фон бледнеет в степени, заданной стилем <codeph>disabledOverlayAlpha</codeph>.
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="no" name="backgroundColor" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="uint">
<description>
  Цвет фона компонента. Можно одновременно установить значения для свойств <codeph>backgroundColor</codeph> и <codeph>backgroundImage</codeph>. Некоторые компоненты не имеют фона. Элемент управления DataGrid игнорирует этот стиль. Значением по умолчанию является <codeph>undefined</codeph>. Это означает, что свойство не установлено. Если этот стиль и стиль <codeph>backgroundImage</codeph> имеют значения <codeph>undefined</codeph>, фон компонента будет прозрачным.
 
  <p>Для контейнера Application этот стиль указывает цвет фона во время загрузки приложения и градиент фона во время выполнения приложения. Flex вычисляет образец градиента между двумя цветами: немного более темным и немного более светлым, чем указанный цвет.</p>
 
  <p>Темы оформления по умолчанию для большинства элементов управления Flex являются частично прозрачными. В результате цвет фона контейнера частично «расплывается» на элементы управления, которые находятся в контейнере. Этого можно избежать путем установки 1 в качестве значений альфа-канала для свойства <codeph>fillAlphas</codeph> элемента управления, например:
  <pre>
  &lt;mx:<i>Container</i> backgroundColor="0x66CC66"/>
      &lt;mx:<i>ControlName</i> ... fillAlphas="[1,1]"/>
  &lt;/mx:<i>Container</i>></pre>
  </p>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="backgroundAlpha" owner="mx.controls:VideoDisplay" playerVersion="Flash9" theme="halo" type="Number">
<description>
  Альфа-уровень цвета, определяемый свойством <codeph>backgroundColor</codeph> для изображения или файла SWF, заданного стилем <codeph>backgroundImage</codeph>. Допустимыми являются значения от 0,0 до 1,0. Для большинства элементов управления значением по умолчанию является 1,0, но для элементов управления ToolTip значением по умолчанию является 0,95, а для элементов управления Alert – 0,9.
  
  </description>
<default>1.0
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;mx:VideoDisplay&gt;</code> tag inherits all the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:VideoDisplay
    <strong>Properties</strong>
    autoBandWidthDetection="false|true"
    autoPlay="true|false"
    autoRewind="true|false"
    bufferTime="0.1"
    cuePointManagerClass=""
    cuePoints=""
    idleTimeout="300000"
    live="false|true"
    maintainAspectRatio="true|false"
    playheadTime=""
    playheadUpdateInterval="250"
    progressInterval="250"
    source=""
    totalTime=""
    volume="0.75"
  
    <b>Styles</b>
    backgroundAlpha="1.0"
    backgroundColor="0x000000"
    backgroundImage="undefined"
    backgroundSize="undefined"
    borderColor="undefined"
    borderSides="left top right bottom"
    borderSkin="ClassReference('mx.skins.halo.HaloBorder')"
    borderStyle="none"
    borderThickness="1"
    cornerRadius="0"
    dropShadowColor="0x000000"
    dropShadowEnabled="false|true"
    shadowDirection="center"
    shadowDistance="2"
  
    <strong>Events</strong>
    close="<i>No default</i>"
    complete="<i>No default</i>"
    cuePoint="<i>No default</i>"
    playheadUpdate="<i>No default</i>"
    progress="<i>No default</i>"
    ready="<i>No default</i>"
    rewind="<i>No default</i>"
    stateChange="<i>No default</i>"
 
  /&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления VideoDisplay, позволяющий воспроизводить FLV-файл в приложении Flex. Поддерживает последовательную загрузку по HTTP, потоковое видео Flash Media Server и потоковое видео из объекта Camera.
 
  </apiDesc><example conref="VideoDisplayExample.mxml"><swfblock conref="examples/VideoDisplayExample.swf"/></example></apiClassifierDetail><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.STATE_CHANGE_stateChange"><apiName>stateChange</apiName><shortdesc>
  Передается при изменении состояния элементов управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при изменении состояния элементов управления.
 
  <p>Это событие позволяет отслеживать, когда проигрыватель находится в неуправляемом состоянии (например, в середине подключения, при изменении размеров или при перемотке), и в течение этого времени вызывает методы<codeph>play()</codeph>, <codeph>pause()</codeph> и <codeph>stop()</codeph>, а также записывает в свойство <codeph>playHeadTime</codeph> очередь, которая выполняется, когда проигрыватель возвращается в управляемое состояние.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.REWIND_rewind"><apiName>rewind</apiName><shortdesc>
  Передается при автоперемотке элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.REWIND</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при автоперемотке элемента управления.
 
  </apiDesc></adobeApiEventDetail><related-links><link href="mx.controls.xml#VideoDisplay/autoRewind"><linktext>автоперемотка</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.READY_ready"><apiName>ready</apiName><shortdesc>
  Передается, как только FLV-файл загружен и готов к воспроизведению.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.READY</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, как только FLV-файл загружен и готов к воспроизведению.
 
  <p>Это событие передается первый раз, когда элемент управления VideoDisplay входит в управляемое состояние после загрузки нового FLV-файл с помощью метода <codeph>load()</codeph> или <codeph>play()</codeph>. Передается только один раз для каждого загруженного FLV-файла.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Передается непрерывно до полной загрузки FLV-файла.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается непрерывно до полной загрузки FLV-файла.
 
  <p>Событие может использоваться для получения информации о количестве загруженных байтов или количестве байтов в буфере. Это событие начинает передаваться при первом вызове метода <codeph>load()</codeph> или <codeph>play()</codeph>. Передача прекращается после загрузки всех байтов или при сетевой ошибке.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><shortdesc>
  Передается непрерывно во время воспроизведения видео.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается непрерывно во время воспроизведения видео. Интервал между событиями (в миллисекундах) указывается свойством <codeph>playheadUpdateInterval</codeph>, по умолчанию равным 250 мсек. Это событие не передается, если воспроизведение видео приостановлено или прекращено.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.MetadataEvent.METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><shortdesc>
  Передается первый раз при достижении метаданных в FLV-файле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.MetadataEvent.METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>mx.events.MetadataEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается первый раз при достижении метаданных в FLV-файле.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.CuePointEvent.CUE_POINT_cuePoint"><apiName>cuePoint</apiName><shortdesc>
  Передается, если значение свойства time контрольной точки равно текущему положению воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.CuePointEvent.CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events.CuePointEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, если значение свойства <codeph>time</codeph> контрольной точки равно текущему положению воспроизведения.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
  Передается, если воспроизведение достигает конца FLV-файла.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.COMPLETE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается, если воспроизведение достигает конца FLV-файла.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.controls:VideoDisplay_mx.events.VideoEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Передается при закрытии объекта NetConnection – в результате тайм-аута или вызова метода close().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.VideoEvent.CLOSE</apiEventType><adobeApiEventClassifier>mx.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Передается при закрытии объекта NetConnection – в результате тайм-аута или вызова метода <codeph>close()</codeph>. Это событие используется при работе с Flash Media Server.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.controls:VideoDisplay:VideoDisplay"><apiName>VideoDisplay</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:VideoDisplay:attachCamera"><apiName>attachCamera</apiName><shortdesc>
      Определяет необходимость воспроизведения видеопотока из камеры.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>camera</apiItemName><apiType value="flash.media:Camera"/><apiDesc>Объект Camera, получающий видеоданные.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Определяет необходимость воспроизведения видеопотока из камеры. Видео отображается внутри границ элемента управления в окне приложения. Не следует выполнять вызов метода <codeph>play()</codeph> при отображении потока из камеры.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:close"><apiName>close</apiName><shortdesc>
      Вызывает закрытие входного потока и подключения к Flash Media Server.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Вызывает закрытие входного потока и подключения к Flash Media Server. Выполнение вызова этого метода передает событие <codeph>close</codeph>. Обычно не следует вызывать выполнение этого метода напрямую, поскольку подключение автоматически закрывается при наступлении тайм-аута, определенного свойством <codeph>idleTimeout</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:protected:createBorder"><apiName>createBorder</apiName><shortdesc>
      Создает границу для этого компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Создает границу для этого компонента. Как правило, граница определяется стилями <codeph>borderStyle</codeph> и <codeph>borderSkin</codeph>. Должен устанавливать свойство border для экземпляра границы.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:protected:layoutChrome"><apiName>layoutChrome</apiName><shortdesc>
      Реагирует на изменения размеров путем установки положений и размеров границ.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleX</codeph> компонента.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Реагирует на изменения размеров путем установки положений и размеров границ.
     
      <p>Метод <codeph>VideoDisplay.layoutChrome()</codeph> устанавливает положение и размер границы VideoDisplay. В каждом подклассе VideoDisplay метод<codeph>layoutChrome()</codeph> подкласса должен выполнить вызов метода <codeph>super.layoutChrome()</codeph> для правильного установления границы.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:load"><apiName>load</apiName><shortdesc>
      Загружает файл мультимедиа без воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Загружает файл мультимедиа без воспроизведения.
     
      <p>Этот метод аналогичен методу <codeph>play()</codeph>, но он загружает файл без воспроизведения. При необходимости автоматически изменяет размеры. После загрузки и автоматического изменения размеров элемент управления устанавливается равным <codeph>VideoEvent.PAUSED</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:pause"><apiName>pause</apiName><shortdesc>
      Приостановка воспроизведения без перемещения точки воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Приостановка воспроизведения без перемещения точки воспроизведения. Если воспроизведение уже приостановлено или остановлено, метод не действует.  
     
      <p>Для повторного запуска воспроизведения следует выполнить вызов метода <codeph>play()</codeph>.</p>
     
      <p>Если элемент управления находится в неуправляемом состоянии, то запрос устанавливается в очередь.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:play"><apiName>play</apiName><shortdesc>
      Воспроизводит файл мультимедиа.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Воспроизводит файл мультимедиа. Загружает файл, если он еще не был загружен. Можно выполнить вызов этого метода во время приостановки воспроизведения, его остановки или воспроизведения элементом управления.  
     
      <p>Если элемент управления находится в неуправляемом состоянии, то запрос устанавливается в очередь.</p>
     
      <p>Для видеопотока из камеры следует выполнить вызов метода <codeph>attachCamera()</codeph> вместо метода <codeph>play()</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:VideoDisplay:stop"><apiName>stop</apiName><shortdesc>
      Остановка воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Остановка воспроизведения. Если свойство <codeph>autoRewind</codeph> имеет значение <codeph>true</codeph>, следует перемотать на первый кадр.  
     
      <p>Для повторного запуска воспроизведения следует выполнить вызов метода <codeph>play()</codeph>.</p>
     
      <p>Если воспроизведение уже остановлено, этот метод недействителен. Если элемент управления находится в неуправляемом состоянии, то запрос устанавливается в очередь.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.controls:VideoDisplay:protected:border"><apiName>border</apiName><shortdesc>
      Объект границы для элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>mx.core:IFlexDisplayObject</apiValueClassifier></apiValueDef><apiDesc>
      Объект границы для элемента управления.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoBandWidthDetection:get"><apiName>autoBandWidthDetection</apiName><shortdesc>
      Указывает, должен элемент управления VideoDisplay использовать встроенную автоматическую функцию обнаружения полосы пропускания или нет.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, должен элемент управления VideoDisplay использовать встроенную автоматическую функцию обнаружения полосы пропускания или нет. Если <codeph>false</codeph>, для подсоединения к FMS не требуется файл main.asc на Flash Media Server (FMS) 2. Если <codeph>true</codeph>, следует реализовать main.asc и сохранить его в структуре каталогов FMS. Файл main.asc должен определять следующие функции:
     
      <ul>
      <li><pre>
      application.onConnect = function(p_client, p_autoSenseBW)
      {
        //Add security code here.     
        this.acceptConnection(p_client);      
        if (p_autoSenseBW)
          this.calculateClientBw(p_client);
        else
          p_client.call("onBWDone");
      }</pre></li>
     
      <li><pre>
      application.calculateClientBw = function(p_client)
      {
        // Add code to set the clients BandWidth.
        // Use p_client.getStats() which returns bytes_in 
        // and bytes_Out and check your bandWidth using 
        // p_client.call("onBWCheck", result, p_client.payload).
        p_client.call("onBWDone");
      }
      </pre>
      </li>
     
      <li><pre>
      Client.prototype.getStreamLength = function(p_streamName)
      {
        return Stream.length(p_streamName);
      }</pre>
      </li>
      </ul>
      
      Для получения дополнительной информации о записи main.asc см. документацию по FMS.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoPlay:get"><apiName>autoPlay</apiName><shortdesc>
      Указывает, должно воспроизведение видео начаться немедленно после установки свойства source или нет.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, должно воспроизведение видео начаться немедленно после установки свойства <codeph>source</codeph> или нет. Если <codeph>true</codeph>, видеофайл буферизуется и воспроизводится немедленно.
     
      <p>Даже если <codeph>autoPlay</codeph> установлено как <codeph>false</codeph>, в компоненте Flex видео начинает загружаться после вызова метода <codeph>initialize()</codeph>. Для Flash Media Server это означает создание потока и загрузку первого кадра для отображения (и дальнейшую загрузку, если <codeph>autoSize</codeph> или <codeph>aspectRatio</codeph> установлены как <codeph>true</codeph>). В случае загрузки http в компоненте Flex начинается загрузка потока и показ первого кадра.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:autoRewind:get"><apiName>autoRewind</apiName><shortdesc>
      Указывает, следует ли перемотать файл FLV на первый кадр при остановке воспроизведения – в результате выполнения вызова метода stop() или при достижении конца потока.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, следует ли перемотать файл FLV на первый кадр при остановке воспроизведения – в результате выполнения вызова метода <codeph>stop()</codeph> или при достижении конца потока. Это свойство не влияет на живое потоковое видео.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:borderMetrics:get"><apiName>borderMetrics</apiName><shortdesc>
      Возвращает объект EdgeMetrics, имеющий четыре свойства: left, top, right и bottom.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.core:EdgeMetrics</apiValueClassifier></apiValueDef><apiDesc>
      Возвращает объект EdgeMetrics, имеющий четыре свойства: <codeph>left</codeph>, <codeph>top</codeph>, <codeph>right</codeph> и <codeph>bottom</codeph>. Значение каждого свойства равно толщине одной стороны границы вокруг элемента управления, в пикселях.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bufferTime:get"><apiName>bufferTime</apiName><shortdesc>
      Количество секунд, необходимых для буферизации видео в памяти, перед началом воспроизведения видеофайла.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Количество секунд, необходимых для буферизации видео в памяти, перед началом воспроизведения видеофайла. Для медленного потока подключений по RTMP необходимо увеличить это свойство по сравнению со значением по умолчанию.  
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bytesLoaded:get"><apiName>bytesLoaded</apiName><shortdesc>
      Число загруженных байтов, доступных для воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Число загруженных байтов, доступных для воспроизведения. Это значение можно использовать только для данных мультимедиа, загружаемых с использованием HTTP.
     
      <p>Содержит -1, если входной поток отсутствует, поток поступает с Flash Media Server или информация еще недоступна. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:bytesTotal:get"><apiName>bytesTotal</apiName><shortdesc>
      Общее число загруженных байтов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Общее число загруженных байтов. Это значение можно использовать только для данных мультимедиа, загружаемых с использованием HTTP.
     
      <p>Содержит -1, если входной поток отсутствует, поток поступает с Flash Media Server или информация еще недоступна. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:cuePointManager:get"><apiName>cuePointManager</apiName><shortdesc>
      Экземпляр класса CuePointManager, связанный с элементом управления VideoPlayer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
      Экземпляр класса CuePointManager, связанный с элементом управления VideoPlayer. Можно использовать этот объект для управления контрольными точками или использовать свойство <codeph>cuePoints</codeph>.
     
      <p>Следует использовать контрольные точки для запуска события<codeph>cuePoint</codeph>, если воспроизведение видео достигает указанного положения. Для установления контрольных точек следует использовать методы класса CuePointManager. </p>
     
     <p>Контрольные точки, вложенные в FLV, недоступны через <codeph>cuePoints</codeph> или <codeph>cuePointManager</codeph>. Для их извлечения можно использовать свойство <codeph>metadata</codeph> или событие <codeph>metadataReceived</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.videoClasses.xml#CuePointManager"><linktext>mx.controls.videoClasses.CuePointManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:cuePointManagerClass:get"><apiName>cuePointManagerClass</apiName><shortdesc>
      Используемый менеджер контрольных точек.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Class"/></apiValueDef><apiDesc>
      Используемый менеджер контрольных точек. Устанавливается как mx.controls.videoClasses.CuePointManager для активации управления контрольными точками.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.videoClasses.xml#CuePointManager"><linktext>mx.controls.videoClasses.CuePointManager</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:cuePoints:get"><apiName>cuePoints</apiName><shortdesc>
      Массив контрольных точек, связанный с элементом управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
      Массив контрольных точек, связанный с элементом управления. Для управления контрольными точками можно использовать или это свойство, или свойство <codeph>cuePointManager</codeph>.
     
      <p>Следует использовать контрольные точки для запуска события<codeph>cuePoint</codeph>, если воспроизведение видео достигает указанного положения. Для установления контрольных точек следует передать массив в свойство <codeph>cuePoints</codeph>. </p>
     
     <p>Контрольные точки, вложенные в FLV, недоступны через <codeph>cuePoints</codeph> или <codeph>cuePointManager</codeph>. Для их извлечения можно использовать свойство <codeph>metadata</codeph> или событие <codeph>metadataReceived</codeph>.</p>
     
      <p>Каждый элемент массива содержит два поля:</p>
      <ul>
        <li>поле <codeph>name</codeph> содержит произвольное имя контрольной точки;</li>
        <li>поле <codeph>time</codeph> содержит положение воспроизведения в секундах элемента управления VideoDisplay, с которым связана эта контрольная точка.</li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:idleTimeout:get"><apiName>idleTimeout</apiName><shortdesc>
      Указывает время, в миллисекундах, в течение которого соединение находилось в режиме бездействия (воспроизведение приостановлено или остановлено) перед завершением соединения с Flash Media Server.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>300000 (five minutes)
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает время, в миллисекундах, в течение которого соединение находилось в режиме бездействия (воспроизведение приостановлено или остановлено) перед завершением соединения с Flash Media Server. Это свойство не влияет на загрузку HTTP файлов FLV. Если установить данное свойство, когда поток находится в режиме бездействия, то период тайм-аута перезапустится с новым значением.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:live:get"><apiName>live</apiName><shortdesc>
      Определяет, выполняет ли элемент управления потоковое воспроизведение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Определяет, выполняет ли элемент управления потоковое воспроизведение. Следует установить это свойство как <codeph>true</codeph> при воспроизведении потока непосредственно с Flash Media Server. 
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      Указывает, должен элемент управления поддерживать первоначальный коэффициент сжатия при изменении размеров видео или нет.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает, должен элемент управления поддерживать первоначальный коэффициент сжатия при изменении размеров видео или нет.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:metadata:get"><apiName>metadata</apiName><shortdesc>
     Объект, представляющий собой пакет метаданных, полученных в результате вызова метода обратного вызова NetStream.onMetaData(), если он доступен.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
     Объект, представляющий собой пакет метаданных, полученных в результате вызова метода обратного вызова<codeph>NetStream.onMetaData()</codeph>, если он доступен. Готово, если передано событие <codeph>metadataReceived</codeph>.
     
     <p>Если FLV-файл закодирован с помощью кодировщика Flash 8, то свойство <codeph>metadata</codeph> содержит следующую информацию. Старые FLV-файлы содержат только значения <codeph>height</codeph>, <codeph>width</codeph> и <codeph>duration</codeph>.</p>
     
     <adobetable class="innertable">
      
          
          
     
     
     
     
     
     
     
     
     
     <tgroup cols="2"><thead><row><entry><b>Параметр</b></entry><entry><b>Описание</b></entry></row></thead><tbody><row><entry><codeph>canSeekToEnd</codeph></entry><entry>Логическое значение равно <codeph>true</codeph>, если FLV-файл закодирован с ключевым кадром в последнем кадре, позволяющем перемещаться в конец последовательно загружаемого фрагмента ролика. Значение параметра <codeph>false</codeph>, если FLV-файл не имеет ключевого кадра в последнем кадре.</entry></row><row><entry><codeph>cuePoints</codeph></entry><entry>Массив объектов, по одному для каждой контрольной точки, встроенной в FLV-файл. Значение undefined, если FLV-файл не имеет контрольных точек. Каждый объект имеет следующие свойства:
          
              <ul>
                  <li><codeph>type</codeph> – строка, определяющая тип контрольной точки как навигацию или событие;</li>
                  <li><codeph>name</codeph> – строка, являющаяся именем контрольной точки;</li>
                  <li><codeph>time</codeph>– число, являющееся временем контрольной точки в секундах с точностью до третьего знака после запятой (миллисекунды);</li>
                  <li><codeph>parameters</codeph> – необязательный объект, имеющий вид пары «имя-значение», назначаемой при создании контрольных точек.</li>
              </ul>
          </entry></row><row><entry><codeph>audiocodecid</codeph></entry><entry>Число, указывающее используемый аудиокодек (способ кодирования/декодирования).</entry></row><row><entry><codeph>audiodelay</codeph></entry><entry> Число, представляющее время <codeph>0</codeph> в исходном файле, на основе которого закодирован FLV-файл. 
     <p>Используется задержка видеоряда на короткий период времени, необходимая для синхронизации звука. Например, если значение <codeph>audiodelay</codeph> равно <codeph>0,038</codeph>, то видео, начинающееся в исходном файле с момента времени <codeph>0</codeph>, начнется в FLV-файле с момента времени <codeph>0,038</codeph>.</p> 
     <p>Обратите внимание, что класс VideoDisplay компенсирует эту задержку в своих параметрах настройки времени. Это означает, что можно продолжать использовать параметры настройки времени, применяемые в исходном файле.</p>
</entry></row><row><entry><codeph>audiodatarate</codeph></entry><entry>Скорость передачи аудио, килобайтов в секунду.</entry></row><row><entry><codeph>videocodecid</codeph></entry><entry>Номер версии кодека, используемого для кодирования видео.</entry></row><row><entry><codeph>framerate</codeph></entry><entry>Частота кадров FLV-файла.</entry></row><row><entry><codeph>videodatarate</codeph></entry><entry>Скорость передачи видеоданных FLV-файла.</entry></row><row><entry><codeph>высота</codeph></entry><entry>Высота видео в FLV-файле.</entry></row><row><entry><codeph>ширина</codeph></entry><entry>Ширина видео в FLV-файле.</entry></row><row><entry><codeph>продолжительность</codeph></entry><entry>Число, указывающее продолжительность FLV-файла, в секундах.</entry></row></tbody></tgroup></adobetable>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      Положение воспроизведения, измеренное в секундах с начала воспроизведения видео.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Положение воспроизведения, измеренное в секундах с начала воспроизведения видео. Объект события для многих событий VideoPlay включает положение воспроизведения таким образом, что можно определить положение в видеофайле, где произошло это событие.
     
      <p>Установка этого свойства как значения в секундах, запускает операцию поиска. Если видео воспроизводится в текущий момент, оно продолжает воспроизводиться из нового положения воспроизведения. Если видео приостановлено, оно осуществляет поиск нового положения воспроизведения и остается приостановленным. Если видео остановлено, оно осуществляет поиск нового положения воспроизведения и переходит в приостановленное состояние. Установка этого свойства не влияет на видеопотоки в реальном времени.</p>
     
      <p>Если новое положение воспроизведения меньше 0 или NaN, элемент управления выдает исключение. Если новое положение воспроизведения находится за пределами видео, или его загруженного фрагмента, элемент управления по-прежнему предпринимает попытку поиска.</p>
     
      <p>Для FLV-файла настройка свойства <codeph>playheadTime</codeph> осуществляет поиск ключевого кадра, самого близкого к указанному положению. Ключевые кадры указываются при кодировании FLV-файла. Поиск точного времени невозможен, если в этом положении отсутствует ключевой кадр.</p>
     
      <p>Если проигрыватель находится в неуправляемом состоянии, то запрос будет поставлен в очередь.</p>
     
      <p>Это свойство выдает исключение при отсутствии подключенного потока. Для определения безопасного момента вызова этого метода следует использовать событие <codeph>stateChange</codeph> и свойство <codeph>connected</codeph>.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playheadUpdateInterval:get"><apiName>playheadUpdateInterval</apiName><shortdesc>
      Указывает время (в миллисекундах) между событиями playheadUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>250 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает время (в миллисекундах) между событиями <codeph>playheadUpdate</codeph>.
     
      <p>При установке этого свойства во время воспроизведения видео таймер перезапускается в момент времени 0, а следующее событие <codeph>playheadUpdate</codeph> происходит через новый промежуток времени.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:playing:get"><apiName>playing</apiName><shortdesc>
      Если значение true, в текущий момент воспроизводится файл мультимедиа.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Если значение <codeph>true</codeph>, в текущий момент воспроизводится файл мультимедиа.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:progressInterval:get"><apiName>progressInterval</apiName><shortdesc>
      Указывает время (в миллисекундах) между событиями progress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>250 
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Указывает время (в миллисекундах) между событиями <codeph>progress</codeph>. Событие <codeph>progress</codeph> происходит непрерывно до полной загрузки видеофайла.
     
      <p>При установке этого свойства и загрузке видео таймер перезапускается в момент времени 0, а следующее событие <codeph>progress</codeph> происходит через новый промежуток времени.</p>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:source:get"><apiName>source</apiName><shortdesc>
      Относительный путь и имя FLV-файла потока.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Относительный путь и имя FLV-файла потока.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:state:get"><apiName>state</apiName><shortdesc>
      Текущее состояние элемента управления VideoDisplay.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/><apiDefaultValue>VideoEvent.DISCONNECTED
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Текущее состояние элемента управления VideoDisplay. Можно установить это свойство посредством вызова методов <codeph>load()</codeph>, <codeph>play()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> и установки свойства <codeph>playHeadTime</codeph>.
     
      <p>Это свойство может иметь следующие значения, определенные в классе VideoEvent: <codeph>VideoEvent.BUFFERING</codeph>, <codeph>VideoEvent.CONNECTION_ERROR</codeph>, <codeph>VideoEvent.DISCONNECTED</codeph>, <codeph>VideoEvent.EXEC_QUEUED_CMD</codeph>, <codeph>VideoEvent.LOADING</codeph>, <codeph>VideoEvent.PAUSED</codeph>, <codeph>VideoEvent.PLAYING</codeph>, <codeph>VideoEvent.RESIZING</codeph>, <codeph>VideoEvent.REWINDING</codeph>, <codeph>VideoEvent.SEEKING</codeph> и <codeph>VideoEvent.STOPPED</codeph> </p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#VideoEvent"><linktext>mx.events.VideoEvent</linktext></link></related-links></apiValue><apiValue id="mx.controls:VideoDisplay:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
      Указывает, находится элемент управления VideoDisplay в управляемом – true, или неуправляемом состоянии – false.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Указывает, находится элемент управления VideoDisplay в управляемом – <codeph>true</codeph>, или неуправляемом состоянии – <codeph>false</codeph>. Элемент управления переходит в неуправляемое состояние при загрузке или перемотке видео.
      
      <p>Элемент управления находится в управляемом состоянии, если свойство <codeph>state</codeph> имеет значение: <codeph>VideoEvent.CONNECTION_ERROR</codeph>, <codeph>VideoEvent.EXEC_QUEUED_CMD</codeph>, <codeph>VideoEvent. RESIZING</codeph> или <codeph>VideoEvent.SEEKING</codeph>. </p>
      
      <p>В неуправляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> помещаются в очередь и выполняются при переходе элемента управления в управляемое состояние.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:totalTime:get"><apiName>totalTime</apiName><shortdesc>
      Общая продолжительность мультимедиа файла, в секундах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Общая продолжительность мультимедиа файла, в секундах. Для видеофайлов FLV 1.0 следует вручную установить это свойство. Для FLV 1.1 и более поздних версий элемент управления вычисляет это значение автоматически.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:videoHeight:get"><apiName>videoHeight</apiName><shortdesc>
      Высота загруженного FLV-файла.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Высота загруженного FLV-файла. Содержит значение <codeph> -1</codeph>, если FLV-файлы еще не загружались.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:videoWidth:get"><apiName>videoWidth</apiName><shortdesc>
      Ширина загруженного FLV-файла.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
      Ширина загруженного FLV-файла. Содержит значение <codeph> -1</codeph>, если FLV-файлы еще не загружались.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.controls:VideoDisplay:volume:get"><apiName>volume</apiName><shortdesc>
      Уровень громкости, указанный как значение между 0 и 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0.75
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Уровень громкости, указанный как значение между 0 и 1.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.controls:LinkBar"><apiName>LinkBar</apiName><shortdesc>
  Элемент управления LinkBar определяет горизонтальную или вертикальную строку элементов управления LinkButton, обозначающую серию адресатов ссылок.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="verticalScrollBarStyleName"/><Exclude kind="style" name="horizontalScrollBarStyleName"/><Exclude kind="event" name="click"/><Exclude kind="event" name="scroll"/><Exclude kind="property" name="verticalScrollPosition"/><Exclude kind="property" name="verticalScrollPolicy"/><Exclude kind="property" name="verticalScrollBar"/><Exclude kind="property" name="verticalPageScrollSize"/><Exclude kind="property" name="verticalLineScrollSize"/><Exclude kind="property" name="maxVerticalScrollPosition"/><Exclude kind="property" name="maxHorizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPosition"/><Exclude kind="property" name="horizontalScrollPolicy"/><Exclude kind="property" name="horizontalScrollBar"/><Exclude kind="property" name="horizontalPageScrollSize"/><Exclude kind="property" name="horizontalLineScrollSize"/><DefaultProperty name="dataProvider"/><styles><style format="Length" inherit="no" name="verticalGap" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижестоящими элементами по вертикали.
 
  </description>
<default>8
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textSelectedColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Цвет текста ссылки при ее нажатии. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="textRollOverColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Цвет текста ссылки при перемещении на нее указателя мыши. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="separatorWidth" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Ширина разделителя, в пикселях.
 
  </description>
<default>1
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="separatorSkin" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Class">
<description>
  Символ разделителя между элементами управления LinkButton в LinkBar. 
 
  </description>
<default>mx.skins.halo.LinkSeparator
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="separatorColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Цвет разделителя, используемый по умолчанию темой оформления разделителя.
 
  </description>
<default>0xC4CCCC
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="selectionColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Цвет фона элемента управления LinkButton при нажатии. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="mx.controls:LinkBar" playerVersion="Flash9" type="uint">
<description>
  Цвет ссылок при перемещении по ним указателя мыши. Значение по умолчанию основано на текущем значении <codeph>themeColor</codeph>. <codeph/> <codeph/>
  
  </description>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingTop" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между верхней границей и элементами управления LinkButton.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="paddingBottom" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между нижней границей и элементами управления LinkButton.
 
  </description>
<default>2
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style inherit="no" name="linkButtonStyleName" owner="mx.controls:LinkBar" playerVersion="Flash9" type="String">
<description>
  Имя объявления стиля CSS для стилей, указывающих элементы навигации кнопок ссылок.
 
  </description>
<default>""
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style><style format="Length" inherit="no" name="horizontalGap" owner="mx.controls:LinkBar" playerVersion="Flash9" type="Number">
<description>
  Число пикселей между элементами управления LinkButton по горизонтали.
 
  </description>
<default>8
  
  </default>

<playerversion>AIR 1.1
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 3
 </productversion></asCustoms></prolog></style></styles></asMetadata><asCustoms><mxml><![CDATA[
  <p>The <code>&lt;mx:LinkBar&gt;</code> tag inherits all of the tag
  attributes of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;mx:LinkBar
    <b>Properties</b>
    selectedIndex="-1"
  
    <b>Styles</b>
    linkButtonStyleName=""
    horizontalGap="8"
    paddingBottom="2"
    paddingTop="2"
    rollOverColor="0xEEFEE6"
    selectionColor="0xCDFFC1"
    separatorColor="<i>No default</i>"
    separatorSkin="0x000000"
    separatorWidth="1"
    textRollOverColor="0x2B333C"
    textSelectedColor="0x000000"
    verticalGap="8"
    &gt;
    ...
      <i>child tags</i>
    ...
  &lt;/mx:LinkBar&gt;
  </pre>
 
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.controls:NavBar</apiBaseClassifier></apiClassifierDef><apiDesc>
  Элемент управления LinkBar определяет горизонтальную или вертикальную строку элементов управления LinkButton, обозначающую серию адресатов ссылок. Обычно используется элемент управления LinkBar для управления активным нижестоящим контейнером ViewStack или создания автономного набора ссылок.
 
  <p>Элемент управления LinkBar создает элементы управления LinkButton на основании значения свойства <codeph>dataProvider</codeph>. Даже если LinkBar является подклассом контейнера, для добавления или удаления элементов управления LinkButton не следует использовать методы, такие как <codeph>Container.addChild()</codeph> и <codeph>Container.removeChild()</codeph>. Вместо этого используются такие методы как <codeph>addItem()</codeph> и <codeph>removeItem()</codeph> для управления свойством<codeph>dataProvider</codeph>. Элемент управления LinkBar автоматически добавляет или удаляет необходимые нижестоящие элементы на основании изменений свойства <codeph>dataProvider</codeph>.</p>
 
  <p>Элемент управления LinkBar имеет следующие характеристики по умолчанию:</p>
  <adobetable class="innertable">
     
     
     
     
  <tgroup cols="2"><thead><row><entry>характеристика;</entry><entry>описание;</entry></row></thead><tbody><row>
        <entry>предпочтительный размер.</entry>
        <entry>Ширина, достаточная для размещения всего текста метки вместе с любым заполнением и разделителями, а также самым высоким нижестоящим элементом.</entry>
     </row><row>
        <entry>Правила изменения размеров элементов управления</entry>
        <entry>Элементы управления LinkBar не изменяют размеры по умолчанию. Для изменения размеров относительно размеров вышестоящего контейнера посредством LinkBar следует указывать их в процентах.</entry>
     </row><row>
        <entry>Заполнение</entry>
        <entry>2 пикселя для свойств верхней, нижней, левой и правой частей.</entry>
     </row></tbody></tgroup></adobetable>
 
  </apiDesc><example conref="LinkBarExample.mxml"><swfblock conref="examples/LinkBarExample.swf"/></example></apiClassifierDetail><related-links><link href="mx.controls.xml#NavBar"><linktext>mx.controls.NavBar</linktext></link><link href="mx.containers.xml#ViewStack"><linktext>mx.containers.ViewStack</linktext></link><link href="mx.controls.xml#LinkButton"><linktext>mx.controls.LinkButton</linktext></link><link href="mx.controls.xml#ToggleButtonBar"><linktext>mx.controls.ToggleButtonBar</linktext></link><link href="mx.controls.xml#ButtonBar"><linktext>mx.controls.ButtonBar</linktext></link></related-links><apiConstructor id="mx.controls:LinkBar:LinkBar"><apiName>LinkBar</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Конструктор.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.controls:LinkBar:styleChanged"><apiName>styleChanged</apiName><shortdesc>
      
      Вызывается при изменении значения свойства стиля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleProp</apiItemName><apiType value="String"/><apiDesc>Имя измененного свойства стиля.    
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Вызывается при изменении значения свойства стиля. 
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.controls:LinkBar:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      Реагирует на изменения размеров, устанавливая позиции и размеры нижестоящих элементов для элемента управления LinkBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Указывает ширину компонента (в пикселях) координат компонента, независимо от значения его свойства <codeph>scaleX</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Указывает высоту компонента, в пикселях, в координатах компонента вне зависимости от значения свойства <codeph>scaleY</codeph> компонента.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Реагирует на изменения размеров, устанавливая позиции и размеры нижестоящих элементов для элемента управления LinkBar. Для получения дополнительной информации о методе <codeph>updateDisplayList()</codeph> см. описание метода <codeph>UIComponent.updateDisplayList()</codeph>.
     
      <p>Метод <codeph>LinkBar.updateDisplayList()</codeph> сначала вызывает метод<codeph>Box.updateDisplayList()</codeph> для расположения элементов управления LinkButton. Для получения дополнительной информации см. метод <codeph>Box.updateDisplayList()</codeph>. После расположения элементов управления LinkButton между ними устанавливаются разделители.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="mx.core.xml#UIComponent/updateDisplayList()"><linktext>mx.core.UIComponent.updateDisplayList()</linktext></link><link href="mx.containers.xml#Box/updateDisplayList()"><linktext>mx.containers.Box.updateDisplayList()</linktext></link></related-links></apiOperation><apiValue id="mx.controls:LinkBar:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
      Индекс последнего выбранного элемента управления LinkButton, если элемент управления LinkBar использует контейнер ViewStack в качестве поставщика данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Индекс последнего выбранного элемента управления LinkButton, если элемент управления LinkBar использует контейнер ViewStack в качестве поставщика данных.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>