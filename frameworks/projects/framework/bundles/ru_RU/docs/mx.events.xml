<?xml version="1.0"?>
<apiPackage id="mx.events"><apiName>mx.events</apiName><apiDetail/><apiClassifier id="mx.events:PropertyChangeEventKind"><apiName>PropertyChangeEventKind</apiName><shortdesc>
  Класс PropertyChangeEventKind определяет значения констант для свойства kind класса PropertyChangeEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс PropertyChangeEventKind определяет значения констант для свойства <codeph>kind</codeph> класса PropertyChangeEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>mx.events.PropertyChangeEvent</linktext></link></related-links><apiValue id="mx.events:PropertyChangeEventKind:DELETE"><apiName>DELETE</apiName><shortdesc>
	  Указывает, что свойство было удалено из объекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>delete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что свойство было удалено из объекта.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
	  Указывает, что значение свойства было изменено.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что значение свойства было изменено.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
  Представляет объекты события, передаваемые при перемещении компонента Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет объекты события, передаваемые при перемещении компонента Flex.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:MoveEvent:MOVE_move"><apiName>move</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MoveEvent:MOVE</apiEventType><adobeApiEventClassifier>mx.events:MoveEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MoveEvent:MoveEvent"><apiName>MoveEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Предыдущая координата x объекта в пикселях.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Предыдущая координата y объекта в пикселях.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MoveEvent:MOVE"><apiName>MOVE</apiName><shortdesc>
	  Константа MoveEvent.MOVE определяет значение свойства type объекта события для события move.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>MoveEvent.MOVE</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>move</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения.</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>oldX</codeph></entry><entry>Предыдущая координата x объекта в пикселях.</entry></row><row><entry><codeph>oldY</codeph></entry><entry>Предыдущая координата y объекта в пикселях.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldX"><apiName>oldX</apiName><shortdesc>
	  Предыдущая координата x объекта в пикселях.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Предыдущая координата <codeph>x</codeph> объекта в пикселях.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MoveEvent:oldY"><apiName>oldY</apiName><shortdesc>
	  Предыдущая координата y объекта в пикселах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Предыдущая координата <codeph>y</codeph> объекта в пикселях.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEventKind"><apiName>CollectionEventKind</apiName><shortdesc>
  Класс CollectionEventKind содержит константы для допустимых значений класса mx.events.CollectionEvent свойства kind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс CollectionEventKind содержит константы для допустимых значений класса mx.events.CollectionEvent свойства <codeph>kind</codeph>. Эти константы указывают тип внесенного в коллекцию изменения.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#CollectionEvent"><linktext>mx.events.CollectionEvent</linktext></link></related-links><apiValue id="mx.events:CollectionEventKind:ADD"><apiName>ADD</apiName><shortdesc>
      Указывает, что в коллекцию был добавлен один или несколько элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что в коллекцию был добавлен один или несколько элементов.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:MOVE"><apiName>MOVE</apiName><shortdesc>
      Указывает, что элемент был перемещен из положения, определяемого свойством CollectionEvent oldLocation в положение, определяемое свойством location.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>move</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что элемент был перемещен из положения, определяемого свойством CollectionEvent <codeph>oldLocation</codeph> в положение, определяемое свойством <codeph>location</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REFRESH"><apiName>REFRESH</apiName><shortdesc>
      Указывает, что к коллекции применена сортировка и/или фильтр.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>refresh</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что к коллекции применена сортировка и/или фильтр. Как правило, проще внести это изменение, чем выполнять перезагрузку.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      Указывает, что из коллекции был удален один или несколько элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что из коллекции был удален один или несколько элементов.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:REPLACE"><apiName>REPLACE</apiName><shortdesc>
      Указывает, что элемент, находящийся в положении, определяемом свойством location класса CollectionEvent, был заменен.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>replace</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что элемент, находящийся в положении, определяемом свойством <codeph>location</codeph> класса CollectionEvent, был заменен.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:RESET"><apiName>RESET</apiName><shortdesc>
      Указывает, что коллекция была изменена настолько существенно, что требуется перезагрузка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что коллекция была изменена настолько существенно, что требуется перезагрузка.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
      Указывает, что один или более элементов внутри коллекции был обновлен.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что один или более элементов внутри коллекции был обновлен. Задействованные единицы сохраняются в свойстве <codeph>items</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ColorPickerEvent"><apiName>ColorPickerEvent</apiName><shortdesc>
  Представляет события, специфичные для элемента управления ColorPicker, например, при наведении/отсутствии наведения мыши на образец в панели образцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет события, специфичные для элемента управления ColorPicker, например, при наведении/отсутствии наведения мыши на образец в панели образцов.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ColorPickerEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ENTER_enter"><apiName>enter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ENTER</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ColorPickerEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ColorPickerEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:ColorPickerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ColorPickerEvent:ColorPickerEvent"><apiName>ColorPickerEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс в поставщике данных цвета, соответствующий цвету, отображаемому при наведении, отсутствии наведения или выборе.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0xFFFFFFFF</apiData><apiDesc>Цвет RGB, отображаемый при наведении, отсутствии наведения, выборе или вводе.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ColorPickerEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  Константа ColorPickerEvent.CHANGE определяет значение свойства type события, передаваемого при выборе цвета в элементе управления ColorPicker.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ColorPickerEvent.CHANGE</codeph> определяет значение свойства <codeph>type</codeph> события, передаваемого при выборе цвета в элементе управления ColorPicker.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Выбранный цвет RGB.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Отсчитываемый от нуля индекс в поставщике данных цвета, соответствующий выбранному цвету.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ENTER"><apiName>ENTER</apiName><shortdesc>
	  Константа ColorPickerEvent.ENTER определяет значение свойства type события, передаваемого при нажатии клавиши Enter в окне выбора цвета.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enter</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ColorPickerEvent.ENTER</codeph> определяет значение свойства <codeph>type</codeph> события, передаваемого при нажатии клавиши Enter в окне выбора цвета.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Введенный цвет RGB.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Всегда -1.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
 	  Константа ColorPickerEvent.ITEM_ROLL_OUT определяет значение свойства type события, передаваемого при отсутствии наведения мыши на образце в панели образцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
 	  Константа <codeph>ColorPickerEvent.ITEM_ROLL_OUT</codeph> определяет значение свойства <codeph>type</codeph> события, передаваемого при отсутствии наведения мыши на образце в панели образцов.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Цвет RGB, соответствующий цвету, отображаемому при наведении мыши.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Отсчитываемый от нуля индекс в поставщике данных цвета, соответствующий цвету, отображаемому при наведении мыши.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
 	  Константа ColorPickerEvent.ITEM_ROLL_OVER определяет значение свойства type события, передаваемого при наведении мыши на образец в панели образцов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
 	  Константа <codeph>ColorPickerEvent.ITEM_ROLL_OVER</codeph> определяет значение свойства <codeph>type</codeph> события, передаваемого при наведении мыши на образец в панели образцов.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>color</codeph></entry><entry>Цвет RGB, соответствующий цвету, отображаемому при отсутствии наведения мыши.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton.</entry></row><row><entry><codeph>index</codeph></entry>
	         <entry>Отсчитываемый от нуля индекс в поставщике данных цвета, соответствующий цвету, отображаемому при отсутствии наведения мыши.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:color"><apiName>color</apiName><shortdesc>
	  Цвет RGB, отображаемый при наведении, отсутствии наведения, выборе или вводе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="uint"/></apiValueDef><apiDesc>
	  Цвет RGB, отображаемый при наведении, отсутствии наведения, выборе или вводе.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ColorPickerEvent:index"><apiName>index</apiName><shortdesc>
	  Отсчитываемый от нуля индекс в поставщике данных цвета, соответствующий цвету, отображаемому при наведении, отсутствии наведения или выборе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Отсчитываемый от нуля индекс в поставщике данных цвета, соответствующий цвету, отображаемому при наведении, отсутствии наведения или выборе. Если тип события – <codeph>ColorPickerEvent.ENTER</codeph>, то свойство будет иметь значение по умолчанию -1; в этом случае значение не установлено, поскольку можно ввести строку RGB, не соответствующую ни одному цвету в поставщике данных.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
  Запрос, отправленный из одного SystemManager в SystemManager в другом приложении через их соединение для добавления или удаления прослушивателя к указанному событию от имени пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:SWFBridgeRequest</apiBaseClassifier></apiClassifierDef><apiDesc>
  Запрос, отправленный из одного SystemManager в SystemManager в другом приложении через их соединение для добавления или удаления прослушивателя к указанному событию от имени пользователя. Свойство <codeph>data</codeph> не используется. Могут быть запрошены только определенные события. При запуске события в другом приложении это событие повторно передается через соединение, где отправивший запрос SystemManager принимает событие и передает его повторно от своего имени. Как правило, этот запрос создается при выполнении вызова каким-либо другим кодом метода <codeph>addEventListener()</codeph> для одного из разрешенных событий в SystemManager. Этот запрос также отправляется объектом SystemManager, чтобы обеспечить для реализации упорядочивания различную обработку добавления или удаления прослушивателей. При отправке с помощью SystemManager свойство прослушивателя не равно null;
  
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:EventListenerRequest:EventListenerRequest"><apiName>EventListenerRequest</apiName><shortdesc>
	  Создает новый запрос для добавления или удаления прослушивателя событий.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие. Либо <codeph>EventListenerRequest.ADD</codeph>, либо <codeph>EventListenerRequest.REMOVE</codeph>.
         
          </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
         
          </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
         
	  </apiDesc></apiParam><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Тип сообщения, передаваемого обычно в метод <codeph>addEventListener()</codeph>.
         
	  </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Определяет, работает ли прослушиватель в фазе захвата или в целевой фазе и в фазе восходящей цепочки.
         
	  </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Уровень приоритета прослушателя события. Приоритеты обозначены 32-разрядным целым числом.
         
	  </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Определяет, является ли ссылка на прослушивателя «сильной» или «слабой».
	 
	  </apiDesc></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef><apiDesc>
	  Создает новый запрос для добавления или удаления прослушивателя событий.
	 
	  </apiDesc></apiConstructorDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiConstructor><apiOperation id="mx.events:EventListenerRequest:marshal"><apiName>marshal</apiName><shortdesc>
	  Упорядочивает событие путем копирования релевантных параметров из существующего события в новое событие.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>EventListenerRequest, определяющий новое событие.
	  
	  </apiDesc><apiOperationClassifier>mx.events:EventListenerRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Событие для упорядочивания.
     	 
     	 </apiDesc></apiParam></apiOperationDef><apiDesc>
	  Упорядочивает событие путем копирования релевантных параметров из существующего события в новое событие.
     	 
     	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:EventListenerRequest:ADD_EVENT_LISTENER_REQUEST"><apiName>ADD_EVENT_LISTENER_REQUEST</apiName><shortdesc>
	  Запрос на добавление прослушивателя событий.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Запрос на добавление прослушивателя событий.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:REMOVE_EVENT_LISTENER_REQUEST"><apiName>REMOVE_EVENT_LISTENER_REQUEST</apiName><shortdesc>
	  Запрос на удаление прослушивателя событий.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removeEventListenerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Запрос на удаление прослушивателя событий.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:EventListenerRequest:eventType:get"><apiName>eventType</apiName><shortdesc>
	  Тип прослушиваемого события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	  Тип прослушиваемого события.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#Event/type"><linktext>flash.events.Event.type</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:listener:get"><apiName>listener</apiName><shortdesc>
	  Вызываемая функция или метод
     
	  </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Function"/></apiValueDef><apiDesc>
	  Вызываемая функция или метод
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:priority:get"><apiName>priority</apiName><shortdesc>
	  Параметр priority для addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
	  Параметр <codeph>priority</codeph> для <codeph>addEventListener()</codeph>.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useCapture:get"><apiName>useCapture</apiName><shortdesc>
	  Параметр useCapture для addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Параметр <codeph>useCapture</codeph> для <codeph>addEventListener()</codeph>.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue><apiValue id="mx.events:EventListenerRequest:useWeakReference:get"><apiName>useWeakReference</apiName><shortdesc>
	  Параметр useWeakReference для addEventListener().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Параметр <codeph>useWeakReference</codeph> для <codeph>addEventListener()</codeph>.
     
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#IEventDispatcher/addEventListener"><linktext>flash.events.IEventDispatcher.addEventListener</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
  Класс StyleEvent представляет объект события, используемый классом StyleManager при загрузке стиля SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс StyleEvent представляет объект события, используемый классом StyleManager при загрузке стиля SWF.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.styles.xml#StyleManager"><linktext>mx.styles.StyleManager</linktext></link></related-links><adobeApiEvent id="mx.events:StyleEvent:COMPLETE_styleComplete"><apiName>styleComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:ERROR_styleError"><apiName>styleError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StyleEvent:PROGRESS_styleProgress"><apiName>styleProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StyleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:StyleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StyleEvent:StyleEvent"><apiName>StyleEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события. Возможные значения:
      <ul>
         <li>progress (<codeph>StyleEvent.PROGRESS</codeph>);</li>
         <li>complete (<codeph>StyleEvent.COMPLETE</codeph>);</li>
         <li>error (<codeph>StyleEvent.ERROR</codeph>);</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет, участвует ли объект Event в фазе восходящей цепочки потока событий.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет, может ли объект Event быть отменен.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Количество байтов, загруженных во время обработки события прослушивателем.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Общее количество загруженных байтов в случае успешного завершения процесса загрузки.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Сообщение об ошибке, появляющееся в случае, если тип – StyleEvent.ERROR.
     
      </apiDesc></apiParam><apiTipTexts><apiTipText>Конструктор для объектов <codeph>StyleEvent</codeph>.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StyleEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      Передается по завершении загрузки стиля SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается по завершении загрузки стиля SWF. Константа <codeph>StyleEvent.COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>styleComplete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Передается при ошибке загрузки стиля SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при ошибке загрузки стиля SWF. Константа <codeph>StyleEvent.COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>styleComplete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Сообщение об ошибке.<entry/></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Передается при загрузке стиля SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при загрузке стиля SWF. Константа <codeph>StyleEvent.PROGRESS</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>styleProgress</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Количество загруженных байтов.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Общее количество загруженных байтов.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Пусто<entry/></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StyleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Сообщение об ошибке, если свойство type является ERROR; null в противном случае.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Сообщение об ошибке, если свойство <codeph>type</codeph> является <codeph>ERROR</codeph>; <codeph>null</codeph> в противном случае.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
  Данный подкласс события является динамическим. Это означает, что можно настраивать произвольные свойства события в его экземплярах во время выполнения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Данный подкласс события является динамическим. Это означает, что можно настраивать произвольные свойства события в его экземплярах во время выполнения.
 
  <p>Событие и его другие подклассы, наоборот, являются нединамическими. Это означает, что можно настраивать только объявленные в этих классах свойства. При создании прототипа приложения проще использовать DynamicEvent, поскольку в этом случае отсутствует необходимость записывать подкласс события для предварительного объявления свойства. Однако в итоге DynamicEvents следует удалить и записать подклассы события, поскольку они более быстрые и надежные. DynamicEvent является настолько гибким, что с помощью компилятора невозможно выявить ошибку при установке неправильного свойства или присвоении ему значения некорректного типа.</p>
 
  <p>Пример:</p>
 
  <pre>
  var event:DynamicEvent = new DynamicEvent("credentialsChanged");
  event.name = name;
  event.passsword = password; // misspelling won't be caught!
  dispatchEvent(event);
  </pre>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:DynamicEvent:DynamicEvent"><apiName>DynamicEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="mx.events:DataGridEventReason"><apiName>DataGridEventReason</apiName><shortdesc>
  Класс DataGridEventReason определяет константы для значений свойства reason объекта DataGridEvent, в случае если свойство type имеет значение itemEditEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс DataGridEventReason определяет константы для значений свойства <codeph>reason</codeph> объекта DataGridEvent, в случае если свойство <codeph>type</codeph> имеет значение <codeph>itemEditEnd</codeph>.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.events:DataGridEventReason:CANCELLED"><apiName>CANCELLED</apiName><shortdesc>
      Указывает, что редактирование было отменено, и что измененные данные не были сохранены.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancelled</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что редактирование было отменено, и что измененные данные не были сохранены. Даже при вызове метода <codeph>preventDefault()</codeph> из прослушивателя событий для события <codeph>itemEditEnd</codeph> Flex выполняет вызов редактора <codeph>destroyItemEditor()</codeph> для закрытия редактора.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:NEW_COLUMN"><apiName>NEW_COLUMN</apiName><shortdesc>
      Указывает, что фокусировка перемещена на новый столбец в той же самой строке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newColumn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что фокусировка перемещена на новый столбец в той же самой строке. В прослушивателе событий можно разрешить, либо запретить изменение фокусировки. Например, прослушиватель событий может проверить, ввел ли пользователь допустимое значение для редактируемого в данный момент элемента. Если нет, то можно запретить перемещение в новый элемент путем вызова метода <codeph>preventDefault()</codeph>. В этом случае редактор элементов остается открытым, и редактирование текущего элемента может быть продолжено. При вызове метода <codeph>preventDefault()</codeph> и также метода <codeph>destroyItemEditor()</codeph> перемещение в новый элемент блокируется, а редактор элементов закрывается. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:NEW_ROW"><apiName>NEW_ROW</apiName><shortdesc>
      Указывает, что фокусировка перемещена на новую строку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newRow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что фокусировка перемещена на новую строку. Управление этой константой осуществляется аналогично управлению константой <codeph>NEW_COLUMN</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEventReason:OTHER"><apiName>OTHER</apiName><shortdesc>
      Указывает, что с элемента управления List снята фокусировка, он был прокручен или каким-либо другим образом находится в состоянии, в котором редактирование не разрешено.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>other</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что с элемента управления List снята фокусировка, он был прокручен или каким-либо другим образом находится в состоянии, в котором редактирование не разрешено. Даже при вызове метода <codeph>preventDefault()</codeph> из прослушивателя событий для события <codeph>itemEditEnd</codeph> Flex выполняет вызов редактора <codeph>destroyItemEditor()</codeph> для закрытия редактора.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DragEvent"><apiName>DragEvent</apiName><shortdesc>
  Класс DragEvent представляет объекты событий, передаваемых в составе операции перетаскивания.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс DragEvent представляет объекты событий, передаваемых в составе операции перетаскивания.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#DragManager"><linktext>mx.managers.DragManager</linktext></link><link href="mx.core.xml#DragSource"><linktext>mx.core.DragSource</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:DragEvent:DRAG_COMPLETE_dragComplete"><apiName>dragComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_DROP_dragDrop"><apiName>dragDrop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_DROP</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_ENTER_dragEnter"><apiName>dragEnter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_ENTER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_EXIT_dragExit"><apiName>dragExit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_EXIT</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_OVER_dragOver"><apiName>dragOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_OVER</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DragEvent:DRAG_START_dragStart"><apiName>dragStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DragEvent:DRAG_START</apiEventType><adobeApiEventClassifier>mx.events:DragEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DragEvent:DragEvent"><apiName>DragEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>IUIComponent, указывающий инициирующий перетаскивание компонент.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>Объект DragSource, содержащий перетаскиваемые данные.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Указанное действие перетаскивания, например <codeph>DragManager.MOVE</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Ctrl</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Alt</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Shift</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор. Как правило, вызывается управляющим элементом Flex и не используется в коде приложения.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DragEvent:DRAG_COMPLETE"><apiName>DRAG_COMPLETE</apiName><shortdesc>
	  Константа DragEvent.DRAG_COMPLETE определяет значение свойства type объекта события dragComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DragEvent.DRAG_COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>dragComplete</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Операция, вызвавшая событие: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> или <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Компонент, инициировавший перетаскивание.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Объект DragSource, содержащий перетаскиваемые данные.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_DROP"><apiName>DRAG_DROP</apiName><shortdesc>
	  Константа DragEvent.DRAG_DROP определяет значение свойства type объекта события dragDrop.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragDrop</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DragEvent.DRAG_DROP</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>dragDrop</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Операция, вызвавшая событие: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> или <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Компонент, инициировавший перетаскивание.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Объект DragSource, содержащий перетаскиваемые данные.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_ENTER"><apiName>DRAG_ENTER</apiName><shortdesc>
	  Константа DragEvent.DRAG_ENTER определяет значение свойства type объекта события dragEnter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragEnter</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DragEvent.DRAG_ENTER</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>dragEnter</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Операция, вызвавшая событие (этой операцией всегда является <codeph>DragManager.MOVE</codeph>).</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Компонент, инициировавший перетаскивание.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Объект DragSource, содержащий перетаскиваемые данные.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_EXIT"><apiName>DRAG_EXIT</apiName><shortdesc>
	  Константа DragEvent.DRAG_EXIT определяет значение свойства type объекта события для события dragExit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragExit</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DragEvent.DRAG_EXIT</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>dragExit</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Операция, вызвавшая событие: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> или <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Компонент, инициировавший перетаскивание.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Объект DragSource, содержащий перетаскиваемые данные.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_OVER"><apiName>DRAG_OVER</apiName><shortdesc>
	  Константа DragEvent.DRAG_OVER определяет значение свойства type объекта события для события dragOver.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DragEvent.DRAG_OVER</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>dragOver</codeph>.
     
	 <p>Свойства объекта события имеют следующие значения:</p>
	 <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Операция, вызвавшая событие: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> или <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Компонент, инициировавший перетаскивание.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Объект DragSource, содержащий перетаскиваемые данные.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:DRAG_START"><apiName>DRAG_START</apiName><shortdesc>
	  Константа DragEvent.DRAG_START определяет значение свойства type объекта события для события dragStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа DragEvent.DRAG_START определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>dragStart</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>action</codeph></entry><entry>Операция, вызвавшая событие: <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> или <codeph>DragManager.NONE</codeph>.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dragInitiator</codeph></entry><entry>Компонент, инициировавший перетаскивание.</entry></row><row><entry><codeph>dragSource</codeph></entry><entry>Объект DragSource, содержащий перетаскиваемые данные.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:action"><apiName>action</apiName><shortdesc>
	  Запрашиваемая операция.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Запрашиваемая операция. Одна из операций <codeph>DragManager.COPY</codeph>, <codeph>DragManager.LINK</codeph>, <codeph>DragManager.MOVE</codeph> или <codeph>DragManager.NONE</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragInitiator"><apiName>dragInitiator</apiName><shortdesc>
	  Компонент, инициировавший перетаскивание.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IUIComponent</apiValueClassifier></apiValueDef><apiDesc>
	  Компонент, инициировавший перетаскивание.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:dragSource"><apiName>dragSource</apiName><shortdesc>
	  Объект DragSource, содержащий перетаскиваемые данные.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:DragSource</apiValueClassifier></apiValueDef><apiDesc>
	  Объект DragSource, содержащий перетаскиваемые данные.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DragEvent:draggedItem"><apiName>draggedItem</apiName><shortdesc>
	  Если свойство dragInitiator содержит объект IAutomationObject, то это свойство содержит нижестоящий объект IAutomationObject рядом с курсором мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Если свойство <codeph>dragInitiator</codeph> содержит объект IAutomationObject, то это свойство содержит нижестоящий объект IAutomationObject рядом с курсором мыши. Если свойство <codeph>dragInitiator</codeph> не содержит объект IAutomationObject, то это свойство имеет значение <codeph>null</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
  Класс FlexEvent представляет объект события, передаваемый прослушивателю событий для многих событий Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс FlexEvent представляет объект события, передаваемый прослушивателю событий для многих событий Flex.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexEvent:ADD_add"><apiName>add</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ADD</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ADD_FOCUS_MANAGER_addFocusManager"><apiName>addFocusManager</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ADD_FOCUS_MANAGER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:APPLICATION_COMPLETE_applicationComplete"><apiName>applicationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:APPLICATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:BUTTON_DOWN_buttonDown"><apiName>buttonDown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:BUTTON_DOWN</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CHANGING_changing"><apiName>changing</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CHANGING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE_contentCreationComplete"><apiName>contentCreationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CONTENT_CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CREATION_COMPLETE_creationComplete"><apiName>creationComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CREATION_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:CURSOR_UPDATE_cursorUpdate"><apiName>cursorUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:CURSOR_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:DATA_CHANGE_dataChange"><apiName>dataChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_enter"><apiName>enter</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_FRAME_flexEventEnterFrame"><apiName>flexEventEnterFrame</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_FRAME</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:ENTER_STATE_enterState"><apiName>enterState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:ENTER_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:EXIT_STATE_exitState"><apiName>exitState</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:EXIT_STATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE_flexWindowActivate"><apiName>flexWindowActivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE_flexWindowDeactivate"><apiName>flexWindowDeactivate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:HIDE_hide"><apiName>hide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:HIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:IDLE_idle"><apiName>idle</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:IDLE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INITIALIZE_initialize"><apiName>initialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_COMPLETE_initComplete"><apiName>initComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INIT_PROGRESS_initProgress"><apiName>initProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INIT_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:LOADING_loading"><apiName>loading</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:LOADING</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:MUTED_CHANGE_mutedChange"><apiName>mutedChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:MUTED_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:PREINITIALIZE_preinitialize"><apiName>preinitialize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:PREINITIALIZE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REMOVE_remove"><apiName>remove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REMOVE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:RENDER_flexEventRender"><apiName>flexEventRender</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:RENDER</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_repeat"><apiName>repeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_END_repeatEnd"><apiName>repeatEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_END</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:REPEAT_START_repeatStart"><apiName>repeatStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:REPEAT_START</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SELECTION_CHANGE_deferredContentCreate"><apiName>deferredContentCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SELECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:SHOW_show"><apiName>show</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:SHOW</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:TRANSFORM_CHANGE_transformChange"><apiName>transformChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:TRANSFORM_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:UPDATE_COMPLETE_updateComplete"><apiName>updateComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:UPDATE_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:URL_CHANGED_urlChanged"><apiName>urlChanged</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:URL_CHANGED</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexEvent:VALUE_COMMIT_valueCommit"><apiName>valueCommit</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexEvent:VALUE_COMMIT</apiEventType><adobeApiEventClassifier>mx.events:FlexEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexEvent:FlexEvent"><apiName>FlexEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexEvent:ADD"><apiName>ADD</apiName><shortdesc>
      Константа FlexEvent.ADD определяет значение свойства type объекта события add.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.ADD</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>add</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ADD_FOCUS_MANAGER"><apiName>ADD_FOCUS_MANAGER</apiName><shortdesc>
      Константа FlexEvent.ADD_FOCUS_MANAGER определяет значение свойства type объекта события addFocusManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addFocusManager</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.ADD_FOCUS_MANAGER</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>addFocusManager</codeph>. Это событие отправляется из IFocusManagerContainer, когда его focusManager присвоен.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:APPLICATION_COMPLETE"><apiName>APPLICATION_COMPLETE</apiName><shortdesc>
      Константа FlexEvent.APPLICATION_COMPLETE определяет значение свойства type объекта события applicationComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.APPLICATION_COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>applicationComplete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:BUTTON_DOWN"><apiName>BUTTON_DOWN</apiName><shortdesc>
      Константа FlexEvent.BUTTON_DOWN определяет значение свойства type объекта события buttonDown.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buttonDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.BUTTON_DOWN</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>buttonDown</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CHANGING"><apiName>CHANGING</apiName><shortdesc>
      Константа FlexEvent.CHANGING определяет значение свойства type объекта события для события changing.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.CHANGING</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>changing</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CONTENT_CREATION_COMPLETE"><apiName>CONTENT_CREATION_COMPLETE</apiName><shortdesc>
      Константа FlexEvent.CONTENT_CREATION_COMPLETE определяет значение свойства type объекта события contentCreationComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>contentCreationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.CONTENT_CREATION_COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>contentCreationComplete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CREATION_COMPLETE"><apiName>CREATION_COMPLETE</apiName><shortdesc>
      Константа FlexEvent.CREATION_COMPLETE определяет значение свойства type объекта события creationComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>creationComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.CREATION_COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>creationComplete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:CURSOR_UPDATE"><apiName>CURSOR_UPDATE</apiName><shortdesc>
      Константа FlexEvent.CURSOR_UPDATE определяет значение свойства type объекта события cursorUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.CURSOR_UPDATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>cursorUpdate</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:DATA_CHANGE"><apiName>DATA_CHANGE</apiName><shortdesc>
      Константа FlexEvent.DATA_CHANGE определяет значение свойства type объекта события dataChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dataChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.DATA_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>dataChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER"><apiName>ENTER</apiName><shortdesc>
      Константа FlexEvent.ENTER определяет значение свойства type объекта события enter.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enter</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.ENTER</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>enter</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_FRAME"><apiName>ENTER_FRAME</apiName><shortdesc>
      Константа FlexEvent.ENTER_FRAME определяет значение свойства type объекта события Event.ENTER_FRAMER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventEnterFrame</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.ENTER_FRAME</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>Event.ENTER_FRAMER</codeph>. При добавлении прослушивателя к ENTER_FRAME в <codeph>SystemManager</codeph> прослушиватель для события Event.ENTER_FRAME будет добавлен в <codeph>stage</codeph>, если доступ разрешен, или в <codeph>SystemManager</codeph>, если доступ к <codeph>stage</codeph> запрещен. Прослушиватель должен ожидать получение события Event.ENTER_FRAME.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:ENTER_STATE"><apiName>ENTER_STATE</apiName><shortdesc>
      Константа FlexEvent.ENTER_STATE определяет значение свойства type объекта события enterState.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>enterState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.ENTER_STATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>enterState</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:EXIT_STATE"><apiName>EXIT_STATE</apiName><shortdesc>
      Константа FlexEvent.EXIT_STATE определяет значение свойства type объекта события exitState.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>exitState</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.EXIT_STATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>exitState</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_ACTIVATE"><apiName>FLEX_WINDOW_ACTIVATE</apiName><shortdesc>
      Константа FlexEvent.FLEX_WINDOW_ACTIVATE определяет значение свойства type объекта события flexWindowActivate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.FLEX_WINDOW_ACTIVATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>flexWindowActivate</codeph>. Аналогично flash.events.AIREvent.WINDOW_ACTIVATE за исключением того, что событие отправляется как в Flash, так и в AIR, если активировано окно или всплывающее меню Flex. Это событие отправляется из управления фокусом focusManager в этом контейнере.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:FLEX_WINDOW_DEACTIVATE"><apiName>FLEX_WINDOW_DEACTIVATE</apiName><shortdesc>
      Константа FlexEvent.FLEX_WINDOW_DEACTIVATE определяет значение свойства type объекта события flexWindowDeactivate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.FLEX_WINDOW_DEACTIVATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>flexWindowDeactivate</codeph>. Аналогично fflash.events.AIREvent.FLEX_WINDOW_DEACTIVATE за исключением того, что событие отправляется как в Flash, так и в AIR, если деактивировано окно или всплывающее меню Flex. Это событие отправляется из управления фокусом focusManager в этом контейнере.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:HIDE"><apiName>HIDE</apiName><shortdesc>
      Константа FlexEvent.HIDE определяет значение свойства type объекта события hide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hide</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.HIDE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>hide</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:IDLE"><apiName>IDLE</apiName><shortdesc>
      Константа FlexEvent.IDLE определяет значение свойства type объекта события idle.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>idle</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.IDLE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>idle</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INITIALIZE"><apiName>INITIALIZE</apiName><shortdesc>
      Константа FlexEvent.INITIALIZE определяет значение свойства type объекта события initialize.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.INITIALIZE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>initialize</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:INIT_COMPLETE"><apiName>INIT_COMPLETE</apiName><shortdesc>
      Передается при завершении инициализации приложением Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при завершении инициализации приложением Flex. Это событие используется при создании пользовательского индикатора выполнения загрузки.
     
      <p>Это событие всегда передается однократно классом Preloader и является последним событием, передаваемым Preloader. При передаче этого события прослушиватель событий должен передать событие Event.COMPLETE.</p>
     
      <p>Индикатор выполнения загрузки должен передать событие <codeph>complete</codeph> после получения события <codeph>init_complete</codeph>. Событие <codeph>complete</codeph> сообщает Preloader о том, что индикатор выполнения загрузки завершил все операции, и что он может быть отброшен.</p>
      
      <p>После получения события <codeph>init_complete</codeph> и перед передачей события <codeph>complete</codeph> индикатор выполнения загрузки может выполнять дополнительные задачи, например, воспроизведение анимации. Передача события <codeph>complete</codeph> должна быть последней операцией индикатора выполнения загрузки.</p>
     
      <p>Константа FlexEvent.INIT_COMPLETE определяет значение свойства <codeph>type</codeph> объекта события <codeph>initComplete</codeph>.</p>
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INIT_PROGRESS"><apiName>INIT_PROGRESS</apiName><shortdesc>
      Передается при завершении приложением Flex фазы инициализации согласно вызовам методов measure(), commitProperties() или updateDisplayList().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при завершении приложением Flex фазы инициализации согласно вызовам методов <codeph>measure()</codeph>, <codeph>commitProperties()</codeph> или <codeph>updateDisplayList()</codeph>. Это событие описывает выполнение приложения в фазе инициализации. Это событие используется при создании пользовательского индикатора выполнения загрузки.
     
      <p>Константа FlexEvent.INIT_PROGRESS определяет значение свойства <codeph>type</codeph> объекта события <codeph>initProgress</codeph>.</p>
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
      Константа FlexEvent.INVALID определяет значение свойства type объекта события invalid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.INVALID</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>invalid</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:LOADING"><apiName>LOADING</apiName><shortdesc>
      Константа FlexEvent.LOADING определяет значение свойства type объекта события loading.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.LOADING</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>loading</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:MUTED_CHANGE"><apiName>MUTED_CHANGE</apiName><shortdesc>
      Константа FlexEvent.MUTED_CHANGE определяет значение свойства type объекта события для события mutedChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mutedChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.MUTED_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>mutedChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:PREINITIALIZE"><apiName>PREINITIALIZE</apiName><shortdesc>
      Константа FlexEvent.PREINITIALIZE определяет значение свойства type объекта события preinitialize.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>preinitialize</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.PREINITIALIZE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>preinitialize</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REMOVE"><apiName>REMOVE</apiName><shortdesc>
      Константа FlexEvent.REMOVE определяет значение свойства type объекта события remove.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.REMOVE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>remove</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:RENDER"><apiName>RENDER</apiName><shortdesc>
      Константа FlexEvent.RENDER определяет значение свойства type объекта события Event.RENDER.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>flexEventRender</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.RENDER</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>Event.RENDER</codeph>. При добавлении прослушивателя в <codeph>SystemManager</codeph> прослушиватель для событий FlexEvent.RENDER будет добавлен в <codeph>stage</codeph> или в <codeph>SystemManager</codeph>, если у приложения отсутствует доступ к <codeph>stage</codeph>. Также прослушивателем будет создано событие Event.RENDER. Функция прослушивателя должна ожидать получение события Event.RENDER.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT"><apiName>REPEAT</apiName><shortdesc>
      Константа FlexEvent.REPEAT определяет значение свойства type объекта события repeat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.REPEAT</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>repeat</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_END"><apiName>REPEAT_END</apiName><shortdesc>
      Константа FlexEvent.REPEAT_END определяет значение свойства type объекта события repeatEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph> FlexEvent.REPEAT_END</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>repeatEnd</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:REPEAT_START"><apiName>REPEAT_START</apiName><shortdesc>
      Константа FlexEvent.REPEAT_START определяет значение свойства type объекта события repeatStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>repeatStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.REPEAT_START</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>repeatStart</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SELECTION_CHANGE"><apiName>SELECTION_CHANGE</apiName><shortdesc>
      Константа FlexEvent.SELECTION_CHANGE определяет значение свойства type объекта события selectionChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>selectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.SELECTION_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>selectionChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:SHOW"><apiName>SHOW</apiName><shortdesc>
      Константа FlexEvent.SHOW определяет значение свойства type объекта события show.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>show</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.SHOW</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>show</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:TRANSFORM_CHANGE"><apiName>TRANSFORM_CHANGE</apiName><shortdesc>
      Константа FlexEvent.TRANSFORM_CHANGE определяет значение свойства type объекта события transformChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>transformChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.TRANSFORM_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>transformChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:UPDATE_COMPLETE"><apiName>UPDATE_COMPLETE</apiName><shortdesc>
      Константа FlexEvent.UPDATE_COMPLETE определяет значение свойства type объекта события updateComplete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>updateComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.UPDATE_COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>updateComplete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:URL_CHANGED"><apiName>URL_CHANGED</apiName><shortdesc>
      Константа FlexEvent.URL_CHANGED определяет значение свойства type объекта события urlChanged.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.URL_CHANGED</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>urlChanged</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.modules.xml#ModuleLoader"><linktext>mx.modules.ModuleLoader</linktext></link></related-links></apiValue><apiValue id="mx.events:FlexEvent:VALID"><apiName>VALID</apiName><shortdesc>
      Константа FlexEvent.VALID определяет значение свойства type объекта события valid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.VALID</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>valid</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexEvent:VALUE_COMMIT"><apiName>VALUE_COMMIT</apiName><shortdesc>
      Константа FlexEvent.VALUE_COMMIT определяет значение свойства type объекта события valueCommit.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valueCommit</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>FlexEvent.VALUE_COMMIT</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>valueCommit</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
  Событие, передаваемое между DragManagers, находящимися в отдельных, но доверенных ApplicationDomains, для управления передачей DragEvents к перетаскиваемым адресатам.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:DragEvent</apiBaseClassifier></apiClassifierDef><apiDesc> 
  Событие, передаваемое между DragManagers, находящимися в отдельных, но доверенных ApplicationDomains, для управления передачей DragEvents к перетаскиваемым адресатам. Один DragManager имеет DragProxy, перемещающийся вместе с мышью и выполняющий поиск изменений dropTarget. Он не может передать DragEvent потенциальному адресату в другом ApplicationDomain напрямую, поскольку код в этом ApplicationDomain не совместим с DragEvent. Вместо этого DragManager передает InterDragManagerEvent, прослушиваемое DragManager другого ApplicationDomain, упорядочивает DragEvent и передает его потенциальному dropTarget.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterDragManagerEvent:InterDragManagerEvent"><apiName>InterDragManagerEvent</apiName><shortdesc> 
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Горизонтальная координата события относительно спрайта-контейнера.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Вертикальная координата события относительно спрайта-контейнера.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Ссылка на объект списка отображения, связанный с событием.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Ctrl</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Alt</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Shift</codeph>.	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает состояние левой кнопки мыши: нажата (true) или не нажата (false).
	  
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Указывает количество строк, подлежащих прокрутке в каждом случае вращения пользователем колесика мыши.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dropTarget</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Потенциальный целевой элемент в операции перетаскивания в другом домене приложения (именно поэтому используется DisplayObject, а не какой-либо другой класс).
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragEventType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Тип события для DragEvent, используемый принимающим DragManager при создании упакованного DragEvent.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>dragInitiator</apiItemName><apiOperationClassifier>mx.core:IUIComponent</apiOperationClassifier><apiData>null</apiData><apiDesc>IUIComponent, указывающий инициирующий перетаскивание компонент.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dragSource</apiItemName><apiOperationClassifier>mx.core:DragSource</apiOperationClassifier><apiData>null</apiData><apiDesc>Объект DragSource, содержащий перетаскиваемые данные.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Указанное действие перетаскивания, например <codeph>DragManager.MOVE</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>draggedItem</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, представляющий перетаскиваемый элемент.
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterDragManagerEvent:DISPATCH_DRAG_EVENT"><apiName>DISPATCH_DRAG_EVENT</apiName><shortdesc>
	 Передача события DragEvent адресату в другой ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dispatchDragEvent</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Передача события DragEvent адресату в другой ApplicationDomain. Принимающий DragManager упаковывает DragEvent и передает его адресату, указанному в свойстве <codeph>dropTarget</codeph>.
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterDragManagerEvent:dragEventType"><apiName>dragEventType</apiName><shortdesc>
	  Тип события для DragEvent, используемый принимающим DragManager при создании упакованного DragEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Тип события для DragEvent, используемый принимающим DragManager при создании упакованного DragEvent.
	  
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DragEvent"><linktext>mx.events.DragEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:InterDragManagerEvent:dropTarget"><apiName>dropTarget</apiName><shortdesc>
	  Потенциальный целевой элемент в операции перетаскивания в другом ApplicationDomain (именно поэтому используется DisplayObject, а не какой-либо другой класс)..</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  Потенциальный целевой элемент в операции перетаскивания в другом ApplicationDomain (именно поэтому используется DisplayObject, а не какой-либо другой класс)..
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CalendarLayoutChangeEvent"><apiName>CalendarLayoutChangeEvent</apiName><shortdesc>
  Класс CalendarLayoutChangeEvent представляет объект события, передаваемый прослушивателю событий для события change, предназначенный для элементов управления DateChooser и DateField.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс CalendarLayoutChangeEvent представляет объект события, передаваемый прослушивателю события <codeph>change</codeph>, предназначенный для элементов управления DateChooser и DateField.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link></related-links><adobeApiEvent id="mx.events:CalendarLayoutChangeEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CalendarLayoutChangeEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:CalendarLayoutChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CalendarLayoutChangeEvent:CalendarLayoutChangeEvent"><apiName>CalendarLayoutChangeEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, инициировавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newDate</apiItemName><apiType value="Date"/><apiData>null</apiData><apiDesc>Дата, выбранная в элементе управления.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Событие, которое инициировало это событие изменения; как правило, это событие <codeph>change</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CalendarLayoutChangeEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  Константа CalendarLayoutChangeEvent.CHANGE определяет значение свойства type объекта события change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>CalendarLayoutChangeEvent.CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>change</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>newDate</codeph></entry><entry>Дата, выбранная в элементе управления.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Событие, которое инициировало это событие изменения; как правило, это событие <codeph>change</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CalendarLayoutChangeEvent:newDate"><apiName>newDate</apiName><shortdesc>
	  Дата, выбранная в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Date"/></apiValueDef><apiDesc>
	  Дата, выбранная в элементе управления.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CalendarLayoutChangeEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Событие, которое инициировало изменение даты; как правило, это событие change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Событие, которое инициировало изменение даты; как правило, это событие <codeph>change</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
  Представляет события, передаваемые в случае щелчка мыши по элементу навигации на панели навигации, например, на панели кнопок, панели ссылок, или по элементу управления «Вкладка».</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет события, передаваемые в случае щелчка мыши по элементу навигации на панели навигации, например, на панели кнопок, панели ссылок, или по элементу управления «Вкладка».
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#NavBar"><linktext>mx.controls.NavBar</linktext></link><link href="mx.controls.xml#Button"><linktext>mx.controls.Button</linktext></link><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link></related-links><adobeApiEvent id="mx.events:ItemClickEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ItemClickEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ItemClickEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ItemClickEvent:ItemClickEvent"><apiName>ItemClickEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Метка связанного элемента навигации. 
	 
	  </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Индекс связанного элемента навигации.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Нижестоящий объект, сгенерировавший это событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Элемент в поставщике данных для связанного элемента навигации.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ItemClickEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
	  Константа ItemClickEvent. ITEM_CLICK определяет значение свойства type объекта события itemClick.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ItemClickEvent. ITEM_CLICK</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>itemClick</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>index</codeph></entry><entry>Индекс элемента навигации, который был выбран.</entry></row><row><entry><codeph>item</codeph></entry><entry>Элемент в поставщике данных элемента навигации, который был выбран.</entry></row><row><entry><codeph>label</codeph></entry><entry>Метка элемента навигации, которая была выбрана.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Нижестоящий объект, сгенерировавший это событие.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:index"><apiName>index</apiName><shortdesc>
	  Индекс связанного элемента навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Индекс связанного элемента навигации.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:item"><apiName>item</apiName><shortdesc>
	  Элемент в поставщике данных связанного элемента навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Элемент в поставщике данных связанного элемента навигации.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:label"><apiName>label</apiName><shortdesc>
	  Метка связанного элемента навигации.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Метка связанного элемента навигации.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ItemClickEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  Нижестоящий объект, сгенерировавший событие; например, кнопка, нажатая в элементе управления ButtonBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:InteractiveObject"/></apiValueDef><apiDesc>
	  Нижестоящий объект, сгенерировавший событие; например, кнопка, нажатая в элементе управления ButtonBar.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
  Класс MetadataEvent определяет тип события для событий метаданных и контрольных точек.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс MetadataEvent определяет тип события для событий метаданных и контрольных точек. Эти события в основном используются элементом управления VideoDisplay.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:MetadataEvent:ACTION_SCRIPT_actionscript"><apiName>actionscript</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:ACTION_SCRIPT</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MetadataEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MetadataEvent:METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MetadataEvent:METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>mx.events:MetadataEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MetadataEvent:MetadataEvent"><apiName>MetadataEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>info</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Для событий типа <codeph>ACTION_SCRIPT</codeph> и <codeph>CUE_POINT</codeph> – индекс контрольной точки в массиве <codeph>VideoDisplay.cuePoint</codeph>. Для событий от типа <codeph>METADATA_RECEIVED</codeph> – объект, описывающий файл FLV, включая любые контрольные точки, предоставляющий ту же самую информацию, что и свойство <codeph>VideoDisplay.metadata</codeph>.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MetadataEvent:ACTION_SCRIPT"><apiName>ACTION_SCRIPT</apiName><shortdesc>
      Константа MetadataEvent.ACTION_SCRIPT определяет значение свойства type объекта события actionscript.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>actionscript</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа MetadataEvent.ACTION_SCRIPT определяет значение свойства <codeph>type</codeph> объекта события <codeph>actionscript</codeph>. Эти контрольные точки не вложены в файл FLV, но определяются при использовании ActionScript во время выполнения.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>info</codeph></entry><entry>Индекс контрольной точки в массиве VideoDisplay.cuePoint.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
      Константа MetadataEvent.CUE_POINT определяет значение свойства type объекта события cuePoint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа MetadataEvent.CUE_POINT определяет значение свойства <codeph>type</codeph> объекта события <codeph>cuePoint</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>info</codeph></entry><entry>Индекс контрольной точки в массиве VideoDisplay.cuePoint.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:METADATA_RECEIVED"><apiName>METADATA_RECEIVED</apiName><shortdesc>
     Константа MetadataEvent.METADATA_RECEIVED определяет значение свойства type для события metadataReceived.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>metadataReceived</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Константа MetadataEvent.METADATA_RECEIVED определяет значение свойства <codeph>type</codeph> для события <codeph>metadataReceived</codeph>.
     
     <p>Это событие имеет следующие свойства:</p>
     <adobetable class="innertable">
         
         
         
         
         
         
             
     <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph>; поведение по умолчанию, подлежащее отмене, не определено.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>info</codeph></entry><entry>Объект, описывающий файл FLV, включая любые контрольные точки. Это свойство содержит ту же самую информацию, что и свойство <codeph>VideoDisplay.metadata</codeph>. Для получения дополнительной информации см. описание свойства <codeph>VideoDisplay.metadata</codeph>.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>vp</codeph></entry><entry>Индекс объекта VideoPlayer.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MetadataEvent:info"><apiName>info</apiName><shortdesc>
      Для событий типа ACTION_SCRIPT и CUE_POINT – индекс контрольной точки в массиве VideoDisplay.cuePoint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Для событий типа <codeph>ACTION_SCRIPT</codeph> и <codeph>CUE_POINT</codeph> – индекс контрольной точки в массиве <codeph>VideoDisplay.cuePoint</codeph>.
     
      <p>Для событий от типа <codeph>METADATA_RECEIVED</codeph> – объект, описывающий файл FLV, включая любые контрольные точки, предоставляющий ту же самую информацию, что и свойство <codeph>VideoDisplay.metadata</codeph>.</p>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/metadata"><linktext>mx.controls.VideoDisplay.metadata</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
  Класс IndexChangedEvent представляет события, передаваемые при изменении индекса.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс IndexChangedEvent представляет события, передаваемые при изменении индекса. Это событие может указывать на изменение значения индекса нижестоящего элемента из контейнера, на изменение отображаемого нижестоящего элемента из контейнера навигатора, например, Accordion или ViewStack, либо на изменение порядка заголовков столбца в элементе управления «сетка данных».
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#Container"><linktext>mx.core.Container</linktext></link></related-links><adobeApiEvent id="mx.events:IndexChangedEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE_childIndexChange"><apiName>childIndexChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:IndexChangedEvent:HEADER_SHIFT_headerShift"><apiName>headerShift</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:IndexChangedEvent:HEADER_SHIFT</apiEventType><adobeApiEventClassifier>mx.events:IndexChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:IndexChangedEvent:IndexChangedEvent"><apiName>IndexChangedEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Нижестоящий объект, связанный с изменением индекса.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс перед изменением.
     
      </apiDesc></apiParam><apiParam><apiItemName>newIndex</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс после изменения.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Событие, которое привело к инициации этого события.
      
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. Как правило, вызывается элементом управления Flex и не используется в коде приложения.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:IndexChangedEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      Константа IndexChangedEvent.CHANGE определяет значение свойства type объекта события для события change, указывающего на изменение индекса, например, в результате изменения элементом управления Accordion отображаемой панели или изменения представлений ViewStack.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа IndexChangedEvent.CHANGE определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>change</codeph>, указывающего на изменение индекса, например, в результате изменения элементом управления Accordion отображаемой панели или изменения представлений ViewStack. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Указывает, было ли это событие инициировано с использованием мыши или клавиатуры.</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Отсчитываемый от нуля индекс после изменения.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Отсчитываемый от нуля индекс перед изменением.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Содержит ссылку на нижестоящий объект, который соответствует новому индексу.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>Событие, которое привело к инициации этого события.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>IndexChangedEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:CHILD_INDEX_CHANGE"><apiName>CHILD_INDEX_CHANGE</apiName><shortdesc>
      Константа IndexChangedEvent.CHILD_INDEX_CHANGE определяет значение свойства type объекта события для события childIndexChange, указывающего на изменение индекса компонента одного из нижестоящих элементов контейнера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childIndexChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа IndexChangedEvent.CHILD_INDEX_CHANGE определяет значение свойства <codeph>type</codeph> объекта события для события childIndexChange, указывающего на изменение индекса компонента одного из нижестоящих элементов контейнера.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Указывает, было ли это событие инициировано с использованием мыши или клавиатуры.</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Отсчитываемый от нуля индекс нижестоящего элемента после изменения.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Отсчитываемый от нуля индекс нижестоящего элемента перед изменением.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Содержит ссылку на нижестоящий объект, индекс которого изменился.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>null</entry></row><row><entry><codeph>Тип</codeph></entry><entry>IndexChangedEvent.CHILD_INDEX_CHANGE</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:HEADER_SHIFT"><apiName>HEADER_SHIFT</apiName><shortdesc>
      Константа IndexChangedEvent.HEADER_SHIFT определяет значение свойства type объекта события для события headerShift, указывающего на изменение индекса заголовка, например, в результате перетаскивания пользователем столбца DataGrid в новое положение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headerShift</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа IndexChangedEvent.HEADER_SHIFT определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>headerShift</codeph>, указывающего на изменение индекса заголовка, например, в результате перетаскивания пользователем столбца DataGrid в новое положение.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>inputType</codeph></entry><entry>Указывает, было ли это событие инициировано с использованием мыши или клавиатуры.</entry></row><row><entry><codeph>newIndex</codeph></entry><entry>Отсчитываемый от нуля индекс заголовка после изменения.</entry></row><row><entry><codeph>oldIndex</codeph></entry><entry>Отсчитываемый от нуля индекс заголовка перед изменением.</entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>TriggerEvent</codeph></entry><entry>Событие, которое привело к инициации этого события.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>IndexChangedEvent. HEADER_SHIFT</entry></row></tbody></tgroup></adobetable>
       
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:newIndex"><apiName>newIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс после изменения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс после изменения. Для событий <codeph>change</codeph> это индекс текущего нижестоящего элемента. Для событий <codeph>childIndexChange</codeph> это новый индекс нижестоящего элемента. Для событий <codeph>headerShift</codeph> это новый индекс заголовка.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:oldIndex"><apiName>oldIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс перед изменением.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс перед изменением. Для событий <codeph>change</codeph> это индекс предыдущего нижестоящего элемента. Для событий <codeph>childIndexChange</codeph> это предыдущий индекс нижестоящего элемента. Для событий <codeph>headerShift</codeph> это предыдущий индекс заголовка.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
      Нижестоящий объект, индекс которого изменился, или объект, связанный с новым индексом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
      Нижестоящий объект, индекс которого изменился, или объект, связанный с новым индексом. Это свойство не имеет значений, соответствующих изменениям заголовка. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:IndexChangedEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Событие, которое привело к инициации этого события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Событие, которое привело к инициации этого события. Указывает, было ли это событие инициировано с использованием мыши или клавиатуры. Значение <codeph>null</codeph> означает, что контейнер передает событие <codeph>childIndexChanged</codeph>.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
  Это событие, которое передается между приложениями, находящимися в различных защищенных изолированных средах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Это событие, которое передается между приложениями, находящимися в различных защищенных изолированных средах. Это событие предоставляет объектам в других изолированных средах информацию о том, что происходит в данной изолированной среде. Эти события являются информационными в противоположность SWFBridgeRequest, которые передают запрос на выполнение объектом какого-либо действия от своего имени.
  
  <p>  </p>
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SWFBridgeEvent:SWFBridgeEvent"><apiName>SWFBridgeEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, который имеет значение null по умолчанию, но может содержать информацию о событии, зависящую от типа события.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeEvent:marshal"><apiName>marshal</apiName><shortdesc>
      Размещение SWFBridgeRequest из удаленного ApplicationDomain в текущем ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>SWFBridgeEvent, созданный в вызывающем ApplicationDomain.
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>SWFBridgeRequest, который, возможно, был создан в другом ApplicationDomain.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Размещение SWFBridgeRequest из удаленного ApplicationDomain в текущем ApplicationDomain.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_ACTIVATE"><apiName>BRIDGE_AIR_WINDOW_ACTIVATE</apiName><shortdesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно активации окна AIR.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно активации окна AIR.
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_AIR_WINDOW_DEACTIVATE"><apiName>BRIDGE_AIR_WINDOW_DEACTIVATE</apiName><shortdesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно деактивации окна AIR.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeAIRWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно деактивации окна AIR.
	 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_ACTIVATE"><apiName>BRIDGE_APPLICATION_ACTIVATE</apiName><shortdesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно активации другого приложения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно активации другого приложения.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_APPLICATION_UNLOADING"><apiName>BRIDGE_APPLICATION_UNLOADING</apiName><shortdesc>
      Передается через соединение в SystemManager нижестоящего приложения для его уведомления относительно предстоящей выгрузки SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeApplicationUnloading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается через соединение в SystemManager нижестоящего приложения для его уведомления относительно предстоящей выгрузки SWF. SystemManager упорядочивает и повторно передает событие, чтобы код приложения мог удалить ссылки, предотвращающие выгрузку файла SWF.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_FOCUS_MANAGER_ACTIVATE"><apiName>BRIDGE_FOCUS_MANAGER_ACTIVATE</apiName><shortdesc>
	  Передается через соединения во все другие FocusManagers для их уведомления относительно активации еще одного FocusManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeFocusManagerActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передается через соединения во все другие FocusManagers для их уведомления относительно активации еще одного FocusManager.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_NEW_APPLICATION"><apiName>BRIDGE_NEW_APPLICATION</apiName><shortdesc>
	  Передается через вышестоящее соединение в соответствующий SWFLoader для его уведомления относительно инициализации нового SystemManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeNewApplication</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передается через вышестоящее соединение в соответствующий SWFLoader для его уведомления относительно инициализации нового SystemManager. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_ACTIVATE"><apiName>BRIDGE_WINDOW_ACTIVATE</apiName><shortdesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно активации окна.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bridgeWindowActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Передается в вышестоящее соединение или корневую папку изолированной среды для ее уведомления относительно активации окна. Для совместимого приложения свойство <codeph>data</codeph> представляет собой объект с двумя свойствами: <codeph>window</codeph> и <codeph>notifier</codeph>. Свойство <codeph>data.window</codeph> является прокси активированного SystemManager. Для ненадежного приложения свойство <codeph>data.window</codeph> представляет собой идентификатор строки для окна. Свойство <codeph>data.notifier</codeph> представляет собой соединение приложения, передающего событие. Событие может быть передано непосредственно в корневую папку изолированной среды без использования соединения, таким образом, <codeph>event.target</codeph> может не являться соединением приложения, передающего событие.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:BRIDGE_WINDOW_DEACTIVATE"><apiName>BRIDGE_WINDOW_DEACTIVATE</apiName><shortdesc>
	 Передается в вышестоящее соединение или в корневую папку изолированной среды для ее уведомления относительно деактивации прокси SystemManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>brdigeWindowDeactivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	 Передается в вышестоящее соединение или в корневую папку изолированной среды для ее уведомления относительно деактивации прокси SystemManager. Для совместимого приложения свойство <codeph>data</codeph> представляет собой объект с двумя свойствами: <codeph>window</codeph> и <codeph>notifier</codeph>. Свойство <codeph>data.window</codeph> является прокси активированного SystemManager. Для ненадежного приложения свойство <codeph>data.window</codeph> представляет собой идентификатор строки для окна. Свойство <codeph>data.notifier</codeph> представляет собой соединение приложения, передающего событие. Событие может быть передано непосредственно в корневую папку изолированной среды без использования соединения, таким образом, <codeph>event.target</codeph> может не являться соединением приложения, передающего событие.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeEvent:data"><apiName>data</apiName><shortdesc>
	  Информация о событии.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Информация о событии.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FocusRequestDirection"><apiName>FocusRequestDirection</apiName><shortdesc>
  Класс FocusDirection определяет значения констант для направления, в котором может быть перемещен фокус.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс FocusDirection определяет значения констант для направления, в котором может быть перемещен фокус. Значение используется в запросе SWFBridgeRequest. MOVE_FOCUS_REQUEST и в методе <codeph>moveFocus()</codeph> FocusManager.
  
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#SWFBridgeRequest"><linktext>SWFBridgeRequest</linktext></link></related-links><apiValue id="mx.events:FocusRequestDirection:BACKWARD"><apiName>BACKWARD</apiName><shortdesc>
      Перемещение фокуса назад на предыдущий элемент управления в цикле табуляции, как при нажатии клавиш SHIFT+TAB.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>backward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Перемещение фокуса назад на предыдущий элемент управления в цикле табуляции, как при нажатии клавиш SHIFT+TAB.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:BOTTOM"><apiName>BOTTOM</apiName><shortdesc>
      Перемещение фокуса на нижний/последний элемент управления в цикле табуляции, как при нажатии клавиш SHIFT+TAB, если ни один из объектов не был в фокусе в цикле табуляции.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Перемещение фокуса на нижний/последний элемент управления в цикле табуляции, как при нажатии клавиш SHIFT+TAB, если ни один из объектов не был в фокусе в цикле табуляции.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:FORWARD"><apiName>FORWARD</apiName><shortdesc>
      Перемещение фокуса на следующий элемент управления в цикле табуляции, как при нажатии клавиши TAB.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>forward</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Перемещение фокуса на следующий элемент управления в цикле табуляции, как при нажатии клавиши TAB.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FocusRequestDirection:TOP"><apiName>TOP</apiName><shortdesc>
      Перемещение фокуса на верхний/первый элемент управления в цикле табуляции, как при нажатии клавиши TAB, если ни один из объектов не был в фокусе в цикле табуляции.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>top</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Перемещение фокуса на верхний/первый элемент управления в цикле табуляции, как при нажатии клавиши TAB, если ни один из объектов не был в фокусе в цикле табуляции.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
  Класс ResourceEvent представляет объект события, который передается, если ResourceManager загружает пакет ресурсов из модуля ресурсов путем вызова метода loadResourceModule().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ResourceEvent представляет объект события, который передается, если ResourceManager загружает пакет ресурсов из модуля ресурсов путем вызова метода <codeph>loadResourceModule()</codeph>.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.resources.xml#ResourceManager"><linktext>mx.resources.ResourceManager</linktext></link></related-links><adobeApiEvent id="mx.events:ResourceEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ResourceEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResourceEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ResourceEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResourceEvent:ResourceEvent"><apiName>ResourceEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Значение свойства <codeph>type</codeph> этого объекта события. Возможные значения:
      <ul>
         <li><codeph>progress</codeph> (<codeph>ResourceEvent.PROGRESS</codeph>)</li>
         <li><codeph>complete</codeph> (<codeph>ResourceEvent.COMPLETE</codeph>)</li>
         <li><codeph>error</codeph> (<codeph>ResourceEvent.ERROR</codeph>)</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет, участвует ли объект Event в фазе восходящей цепочки потока событий.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет, может ли объект Event быть отменен.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Количество байтов, загруженных во время обработки события прослушивателем.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Общее количество загруженных байтов в случае успешного завершения процесса загрузки.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Сообщение об ошибке, если значением <codeph>type</codeph> является <codeph>ResourceEvent.ERROR</codeph>.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResourceEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
      Передается по завершении загрузки файла SWF из модуля ресурсов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается по завершении загрузки файла SWF из модуля ресурсов. Константа ResourceEvent.COMPLETE определяет значение свойства <codeph>type</codeph> объекта события <codeph>complete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, при использовании <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события значением <codeph>currentTarget</codeph> является <codeph>myButton</codeph>. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Передается при наличии ошибки загрузки файла SWF из модуля ресурсов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при наличии ошибки загрузки файла SWF из модуля ресурсов. Константа ResourceEvent.ERROR определяет значение свойства <codeph>type</codeph> объекта события <codeph>error</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если для регистрации прослушивателя события используется метод <codeph>myButton.addEventListener()</codeph>, значением <codeph>currentTarget</codeph> является <codeph>myButton</codeph>. </entry></row><row><entry><codeph>errorText</codeph></entry>Сообщение об ошибке.<entry/></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Передается при загрузке файла SWF из модуля ресурсов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при загрузке файла SWF из модуля ресурсов. Константа ResourceEvent.PROGRESS определяет значение свойства <codeph>type</codeph> объекта события <codeph>progress</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Количество загруженных байтов.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Общее количество загруженных байтов.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry><codeph>false</codeph></entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если для регистрации прослушивателя события используется метод <codeph>myButton.addEventListener()</codeph>, значением <codeph>currentTarget</codeph> является <codeph>myButton</codeph>.</entry></row><row><entry><codeph>errorText</codeph></entry>Пусто<entry/></row><row><entry><codeph>target</codeph></entry><entry>Объект, обеспечивший обработку события. Не всегда является объектом, прослушивающим событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResourceEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Сообщение об ошибке, если свойство type является ERROR; null в противном случае.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Сообщение об ошибке, если свойство <codeph>type</codeph> является <codeph>ERROR</codeph>; <codeph>null</codeph> в противном случае.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
  Класс VideoEvent представляет объект события, передаваемый прослушивателю событий, обрабатываемых элементом управления VideoDisplay, и определяет значения свойства VideoDisplay.state.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс VideoEvent представляет объект события, передаваемый прослушивателю событий, обрабатываемых элементом управления VideoDisplay, и определяет значения свойства <codeph>VideoDisplay.state</codeph>.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:VideoEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:COMPLETE_complete"><apiName>complete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:REWIND_rewind"><apiName>rewind</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:REWIND</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:VideoEvent:STATE_CHANGE_stateChange"><apiName>stateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:VideoEvent:STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:VideoEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:VideoEvent:VideoEvent"><apiName>VideoEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>playheadTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Положение точки воспроизведения в момент возникновения события. 	
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:VideoEvent:BUFFERING"><apiName>BUFFERING</apiName><shortdesc>
      Значение свойства VideoDisplay.state сразу же после вызова метода play() или load().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>buffering</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph> сразу же после вызова метода <codeph>play()</codeph> или <codeph>load()</codeph>.
     
      <p>Это управляемое состояние. В управляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> выполняются немедленно.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
	  Константа VideoEvent.CLOSE определяет значение type объекта события close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>VideoEvent.CLOSE</codeph> определяет значение <codeph>type</codeph> объекта события <codeph>close</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Положение точки воспроизведения в момент возникновения события.</entry></row><row><entry><codeph>state</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.stateResponsive</codeph> в момент возникновения события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:COMPLETE"><apiName>COMPLETE</apiName><shortdesc>
	  Константа VideoEvent.COMPLETE определяет свойства type объекта события complete.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>complete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>VideoEvent.COMPLETE</codeph> определяет свойства <codeph>type</codeph> объекта события <codeph>complete</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Положение точки воспроизведения в момент возникновения события.</entry></row><row><entry><codeph>state</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.stateResponsive</codeph> в момент возникновения события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:CONNECTION_ERROR"><apiName>CONNECTION_ERROR</apiName><shortdesc>
      Значение свойства VideoDisplay.state, если элементу управления VideoDisplay не удалось загрузить видеопоток.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>connectionError</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph>, если элементу управления VideoDisplay не удалось загрузить видеопоток. Это состояние может возникнуть в том случае, если не удалось установить соединение с сервером, видеопоток не найден, либо по другим причинам.
     
      <p>Это неуправляемое состояние. В неуправляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> помещаются в очередь и выполняются при переходе элемента управления в управляемое состояние.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:DISCONNECTED"><apiName>DISCONNECTED</apiName><shortdesc>
      Значение свойства VideoDisplay.state в случае тайм-аута или режима бездействия видеопотока.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>disconnected</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph> в случае тайм-аута или режима бездействия видеопотока.
     
      <p>Это управляемое состояние. В управляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> выполняются немедленно.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:EXEC_QUEUED_CMD"><apiName>EXEC_QUEUED_CMD</apiName><shortdesc>
      Значение свойства VideoDisplay.state во время выполнения команды, помещенной в очередь.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>execQueuedCmd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph> во время выполнения команды, помещенной в очередь. Событие <codeph>stateChange</codeph> никогда не передается для этого состояния; оно предназначено только для внутреннего использования.
     
      <p>Это неуправляемое состояние. В неуправляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> помещаются в очередь и выполняются при переходе элемента управления в управляемое состояние.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:LOADING"><apiName>LOADING</apiName><shortdesc>
      Значение свойства VideoDisplay.state сразу же после вызова метода play() или load().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loading</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph> сразу же после вызова метода <codeph>play()</codeph> или <codeph>load()</codeph>.
     
      <p>Это неуправляемое состояние. В неуправляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> помещаются в очередь и выполняются при переходе элемента управления в управляемое состояние.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PAUSED"><apiName>PAUSED</apiName><shortdesc>
      Значение свойства VideoDisplay.state, когда файл FLV загружен, но его воспроизведение приостановлено.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>paused</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph>, когда файл FLV загружен, но его воспроизведение приостановлено. Это состояние вводится при выполнении вызова метода <codeph>pause()</codeph> или <codeph>load()</codeph>.
     
      <p>Это управляемое состояние. В управляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> выполняются немедленно.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PLAYHEAD_UPDATE"><apiName>PLAYHEAD_UPDATE</apiName><shortdesc>
	  Константа VideoEvent.PLAYHEAD_UPDATE определяет значение свойства type объекта события playheadUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playheadUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>VideoEvent.PLAYHEAD_UPDATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>playheadUpdate</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Положение точки воспроизведения в момент возникновения события.</entry></row><row><entry><codeph>state</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.stateResponsive</codeph> в момент возникновения события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:PLAYING"><apiName>PLAYING</apiName><shortdesc>
      Значение свойства VideoDisplay.state, когда файл FLV загружен и воспроизводится.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph>, когда файл FLV загружен и воспроизводится. Это состояние вводится в случае вызова метода <codeph>play()</codeph>.
     
      <p>Это управляемое состояние. В управляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> выполняются немедленно.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:READY"><apiName>READY</apiName><shortdesc>
	  Константа VideoEvent.READY определяет значение type объекта события для события ready.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>VideoEvent.READY</codeph> определяет значение <codeph>type</codeph> объекта события для события <codeph>ready</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Положение точки воспроизведения в момент возникновения события.</entry></row><row><entry><codeph>state</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.stateResponsive</codeph> в момент возникновения события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:RESIZING"><apiName>RESIZING</apiName><shortdesc>
      Значение свойства VideoDisplay.state при изменении размеров элемента управления VideoDisplay.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resizing</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph> при изменении размеров элемента управления VideoDisplay.
     
      <p>Это неуправляемое состояние. В неуправляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> помещаются в очередь и выполняются при переходе элемента управления в управляемое состояние.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:REWIND"><apiName>REWIND</apiName><shortdesc>
	  КонстантаVideoEvent.REWIND определяет значение свойства type объекта события для события rewind.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewind</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа<codeph>VideoEvent.REWIND</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>rewind</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Положение точки воспроизведения в момент возникновения события.</entry></row><row><entry><codeph>state</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.stateResponsive</codeph> в момент возникновения события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:REWINDING"><apiName>REWINDING</apiName><shortdesc>
      Значение свойства VideoDisplay.state во время автоперемотки, запущенной после прекращения воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rewinding</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph> во время автоперемотки, запущенной после прекращения воспроизведения. После завершения перемотки состояние изменяется на <codeph>STOPPED</codeph>.
     
      <p>Это неуправляемое состояние. В неуправляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> помещаются в очередь и выполняются при переходе элемента управления в управляемое состояние.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:SEEKING"><apiName>SEEKING</apiName><shortdesc>
      Значение свойства VideoDisplay.state для процесса перехода, выполняемого вследствие установки свойства VideoDisplay.playHeadTime.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>seeking</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph> для процесса перехода, выполняемого вследствие установки свойства <codeph>VideoDisplay.playHeadTime</codeph>.
     
      <p>Это неуправляемое состояние. В неуправляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> помещаются в очередь и выполняются при переходе элемента управления в управляемое состояние.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:STATE_CHANGE"><apiName>STATE_CHANGE</apiName><shortdesc>
	  Константа VideoEvent.STATE_CHANGE определяет значение свойства type объекта события stateChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>VideoEvent.STATE_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>stateChange</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>playheadTime</codeph></entry><entry>Положение точки воспроизведения в момент возникновения события.</entry></row><row><entry><codeph>state</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.</entry></row><row><entry><codeph>stateResponsive</codeph></entry><entry>Значение свойства <codeph>VideoDisplay.stateResponsive</codeph> в момент возникновения события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:STOPPED"><apiName>STOPPED</apiName><shortdesc>
      Значение свойства VideoDisplay.state, когда файл FLV загружен, но его воспроизведение остановлено.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stopped</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Значение свойства <codeph>VideoDisplay.state</codeph>, когда файл FLV загружен, но его воспроизведение остановлено. Это состояние вводится при выполнении вызова метода <codeph>stop()</codeph> или при достижении точкой воспроизведения конца видеопотока.
     
      <p>Это управляемое состояние. В управляемом состоянии вызовы методов <codeph>play()</codeph>, <codeph>load()</codeph>, <codeph>stop()</codeph> и <codeph>pause()</codeph> выполняются немедленно.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:playheadTime"><apiName>playheadTime</apiName><shortdesc>
	  Положение точки воспроизведения элемента управления VideoDisplay в момент возникновения события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Положение точки воспроизведения элемента управления VideoDisplay в момент возникновения события.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:VideoEvent:state"><apiName>state</apiName><shortdesc>
	  Значение свойства VideoDisplay.state в момент возникновения события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Значение свойства <codeph>VideoDisplay.state</codeph> в момент возникновения события.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/state"><linktext>mx.controls.VideoDisplay.state</linktext></link></related-links></apiValue><apiValue id="mx.events:VideoEvent:stateResponsive:get"><apiName>stateResponsive</apiName><shortdesc>
	  Значение свойства VideoDisplay.stateResponsive в момент возникновения события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Значение свойства <codeph>VideoDisplay.stateResponsive</codeph> в момент возникновения события.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.controls.xml#VideoDisplay/stateResponsive"><linktext>mx.controls.VideoDisplay.stateResponsive</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
  Представляет объекты события, специфичные для эффектов Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет объекты события, специфичные для эффектов Flex. Эффекты Flex передают следующие типы событий:
  <ul>
    <li><codeph>effectStart</codeph></li>
    <li><codeph>effectStop</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
    <li><codeph>effectEnd</codeph></li>
    <li><codeph>effectRepeat</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links><adobeApiEvent id="mx.events:EffectEvent:EFFECT_END_effectEnd"><apiName>effectEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_END</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_REPEAT_effectRepeat"><apiName>effectRepeat</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_REPEAT</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_START_effectStart"><apiName>effectStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_START</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_STOP_effectStop"><apiName>effectStop</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_STOP</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:EffectEvent:EFFECT_UPDATE_effectUpdate"><apiName>effectUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:EffectEvent:EFFECT_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:EffectEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></adobeApiEvent><apiConstructor id="mx.events:EffectEvent:EffectEvent"><apiName>EffectEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>eventType</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>effectInstance</apiItemName><apiOperationClassifier>mx.effects:IEffectInstance</apiOperationClassifier><apiData>null</apiData><apiDesc>Экземпляр эффекта, который привел к инициации этого события.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:EffectEvent:EFFECT_END"><apiName>EFFECT_END</apiName><shortdesc>
      Константа EffectEvent.EFFECT_END определяет значение свойства type объекта события для события effectEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>EffectEvent.EFFECT_END</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>effectEnd</codeph>. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Объект экземпляра эффекта для события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_REPEAT"><apiName>EFFECT_REPEAT</apiName><shortdesc>
      Константа EffectEvent.EFFECT_ REPEAT определяет значение свойства type объекта события для события effectRepeat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectRepeat</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>EffectEvent.EFFECT_REPEAT</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>effectRepeat</codeph>. 
      
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Объект экземпляра эффекта для события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_START"><apiName>EFFECT_START</apiName><shortdesc>
      Константа EffectEvent.EFFECT_START определяет значение свойства type объекта события для события effectStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>EffectEvent.EFFECT_START</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>effectStart</codeph>. 
      
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Объект экземпляра эффекта для события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_STOP"><apiName>EFFECT_STOP</apiName><shortdesc>
      Константа EffectEvent.EFFECT_STOP определяет значение свойства type объекта события effectStop.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectStop</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>EffectEvent.EFFECT_STOP</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>effectStop</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Объект экземпляра эффекта для события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:EFFECT_UPDATE"><apiName>EFFECT_UPDATE</apiName><shortdesc>
      Константа EffectEvent.EFFECT_UPDATE определяет значение свойства type объекта события для события effectUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>effectUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>EffectEvent.EFFECT_UPDATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>effectUpdate</codeph>. 
      
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>effectInstance</codeph></entry><entry>Объект экземпляра эффекта для события.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link></related-links></apiValue><apiValue id="mx.events:EffectEvent:effectInstance"><apiName>effectInstance</apiName><shortdesc>
	  Объект экземпляра эффекта для события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.effects:IEffectInstance</apiValueClassifier></apiValueDef><apiDesc>
	  Объект экземпляра эффекта для события. Это свойство можно использовать для получения доступа к свойствам объекта экземпляра эффекта из прослушивателя события.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
  Класс ValidationResultEvent представляет объект события, переданный прослушивателю для событий средства проверки valid и invalid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ValidationResultEvent представляет объект события, переданный прослушивателю для событий средства проверки <codeph>valid</codeph> и <codeph>invalid</codeph>. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.validators.xml#Validator"><linktext>mx.validators.Validator</linktext></link><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link><link href="mx.validators.xml#RegExpValidationResult"><linktext>mx.validators.RegExpValidationResult</linktext></link></related-links><adobeApiEvent id="mx.events:ValidationResultEvent:INVALID_invalid"><apiName>invalid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:INVALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ValidationResultEvent:VALID_valid"><apiName>valid</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ValidationResultEvent:VALID</apiEventType><adobeApiEventClassifier>mx.events:ValidationResultEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ValidationResultEvent:ValidationResultEvent"><apiName>ValidationResultEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Имя поля, не прошедшего проверку правильности и инициировавшего это событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>results</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Массив объектов ValidationResult, по одному объекту на проверяемое поле. 
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ValidationResultEvent:INVALID"><apiName>INVALID</apiName><shortdesc>
	  Константа ValidationResultEvent.INVALID определяет значение свойства type объекта события для недействительного события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ValidationResultEvent.INVALID</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>invalid.</codeph> Эта константа имеет значение invalid.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>field</codeph></entry><entry>Имя поля, не прошедшего проверку правильности.</entry></row><row><entry><codeph>message</codeph></entry><entry>Отдельная строка в массиве результатов, содержащая сообщение об ошибке из любого объекта ValidationResult.</entry></row><row><entry><codeph>results</codeph></entry><entry>Массив объектов ValidationResult, по одному объекту на проверяемое поле.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:VALID"><apiName>VALID</apiName><shortdesc>
	  Константа ValidationResultEvent.VALID определяет значение свойства type объекта события valid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>valid</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ValidationResultEvent.VALID</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>valid</codeph>. Эта константа имеет значение valid.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>field</codeph></entry><entry>Пустая строка.</entry></row><row><entry><codeph>message</codeph></entry><entry>Пустая строка.</entry></row><row><entry><codeph>results</codeph></entry><entry>Пустой массив.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:field"><apiName>field</apiName><shortdesc>
	  Имя поля, не прошедшего проверку правильности и инициировавшего это событие.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Имя поля, не прошедшего проверку правильности и инициировавшего это событие.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ValidationResultEvent:results"><apiName>results</apiName><shortdesc>
	  Массив объектов ValidationResult, по одному объекту на проверяемое поле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
	  Массив объектов ValidationResult, по одному объекту на проверяемое поле. 
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.validators.xml#ValidationResult"><linktext>mx.validators.ValidationResult</linktext></link></related-links></apiValue><apiValue id="mx.events:ValidationResultEvent:message:get"><apiName>message</apiName><shortdesc>
	  Отдельная строка в массиве результатов, содержащая сообщение об ошибке из любого объекта ValidationResult.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
	  Отдельная строка в массиве результатов, содержащая сообщение об ошибке из любого объекта ValidationResult.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:NumericStepperEvent"><apiName>NumericStepperEvent</apiName><shortdesc>
  Представляет события, специфичные для элемента управления NumericStepper.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет события, специфичные для элемента управления NumericStepper.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#NumericStepper"><linktext>mx.controls.NumericStepper</linktext></link></related-links><adobeApiEvent id="mx.events:NumericStepperEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:NumericStepperEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:NumericStepperEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:NumericStepperEvent:NumericStepperEvent"><apiName>NumericStepperEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Значение элемента управления NumericStepper при передаче события.
         
          </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Если значение изменилось в результате действия пользователя, это свойство содержит значение, указывающее тип входного действия: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:NumericStepperEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
	  Константа NumericStepperEvent.CHANGE определяет значение свойства type объекта события change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>NumericStepperEvent.CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>change</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>value</codeph></entry><entry>Значение элемента управления NumericStepper при передаче события.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:NumericStepperEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Если значение изменяется в результате действия пользователя, это свойство содержит значение, указывающее тип входного действия.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Если значение изменяется в результате действия пользователя, это свойство содержит значение, указывающее тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:NumericStepperEvent:value"><apiName>value</apiName><shortdesc>
	 Значение элемента управления NumericStepper при передаче события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	 Значение элемента управления NumericStepper при передаче события.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:MenuEvent"><apiName>MenuEvent</apiName><shortdesc>
  Класс MenuEvent представляет события, связанные с операциями меню в элементах управления, таких как Menu, MenuBar и PopUpMenuButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.events:ListEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс MenuEvent представляет события, связанные с операциями меню в элементах управления, таких как Menu, MenuBar и PopUpMenuButton. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Menu"><linktext>mx.controls.Menu</linktext></link><link href="mx.controls.xml#MenuBar"><linktext>mx.controls.MenuBar</linktext></link><link href="mx.controls.xml#PopUpMenuButton"><linktext>mx.controls.PopUpMenuButton</linktext></link></related-links><adobeApiEvent id="mx.events:MenuEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:MENU_HIDE_menuHide"><apiName>menuHide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:MENU_HIDE</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:MenuEvent:MENU_SHOW_menuShow"><apiName>menuShow</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:MenuEvent:MENU_SHOW</apiEventType><adobeApiEventClassifier>mx.events:MenuEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:MenuEvent:MenuEvent"><apiName>MenuEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>menuBar</apiItemName><apiOperationClassifier>mx.controls:MenuBar</apiOperationClassifier><apiData>null</apiData><apiDesc>Экземпляр MenuBar, который является вышестоящим по отношению к выбранному элементу управления Menu, либо null, если целевой элемент управления Menu не подчинен элементу управления MenuBar.
     
      </apiDesc></apiParam><apiParam><apiItemName>menu</apiItemName><apiOperationClassifier>mx.controls:Menu</apiOperationClassifier><apiData>null</apiData><apiDesc>Определенный экземпляр Menu, связанный с событием, таким как скрытие или открытие меню или подменю. Это свойство имеет значение null, если событие передается элементом MenuBar. 
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Элемент в dataProvider связанного пункта меню.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Объект ListItemRenderer для связанного элемента меню.
     
      </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Текст метки для связанного пункта меню.
     
      </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Индекс в меню для связанного пункта меню. 
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. Как правило, вызывается объектом Menu. 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:MenuEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      Константа типа события MenuEvent.CHANGE указывает на изменение варианта выбора в результате действия пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа события MenuEvent.CHANGE указывает на изменение варианта выбора в результате действия пользователя.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Индекс в меню для выбранного пункта меню.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Выбранный элемент dataProvider.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Средство визуализации элементов для выбранного пункта меню.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Текст метки для выбранного пункта меню.</entry></row><row><entry><codeph>menu</codeph></entry>
             <entry>Определенный экземпляр меню, связанный с этим событием, либо <codeph>null</codeph>, если событие передается элементом MenuBar.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Экземпляр MenuBar, являющийся вышестоящим по отношению к элементу управления Menu, либо <codeph>null</codeph>, если элемент управления Menu не подчинен элементу управления MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
      Константа типа события MenuEvent.ITEM_CLICK указывает на выбор пользователем пункта меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа события MenuEvent.ITEM_CLICK указывает на выбор пользователем пункта меню.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Индекс в меню для выбранного пункта меню.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Выбранный элемент dataProvider.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Объект ListItemRenderer для выбранного пункта меню.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Текст метки для выбранного пункта меню.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Определенный экземпляр меню, связанный с этим событием, либо <codeph>null</codeph>, если событие передается элементом MenuBar.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Экземпляр MenuBar, являющийся вышестоящим по отношению к элементу управления Menu, либо <codeph>null</codeph>, если элемент управления Menu не подчинен элементу управления MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      Константа типа MenuEvent.ITEM_ROLL_OUT указывает на перемещение указателя мыши за пределы пункта меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа MenuEvent.ITEM_ROLL_OUT указывает на перемещение указателя мыши за пределы пункта меню.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Индекс в меню для пункта меню, с которого снято наведение указателя мыши.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Элемент в dataProvider, соответствующий пункту меню, с которого снято наведение указателя мыши.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Объект ListItemRenderer пункта меню, с которого снято наведение указателя мыши.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Текст метки для пункта меню, с которого снято наведение указателя мыши.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Определенный экземпляр меню, связанный с этим событием, либо <codeph>null</codeph>, если событие передается элементом MenuBar.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Экземпляр MenuBar, являющийся вышестоящим по отношению к элементу управления Menu, либо <codeph>null</codeph>, если элемент управления Menu не подчинен элементу управления MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      Константа типа MenuEvent.ITEM_ROLL_OVER указывает на наведение указателя мыши на пункт меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа MenuEvent.ITEM_ROLL_OVER указывает на наведение указателя мыши на пункт меню.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>Индекс в меню для пункта меню, на который наведен указатель мыши.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>Элемент в dataProvider, связанный с пунктом меню, на который наведен указатель мыши.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>Объект ListItemRenderer для пункта меню, на который наведен указатель мыши.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>Текст метки для пункта меню, на который наведен указатель мыши.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Определенный экземпляр меню, связанный с этим событием, либо <codeph>null</codeph>, если событие передается элементом MenuBar.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Экземпляр MenuBar, являющийся вышестоящим по отношению к элементу управления Menu, либо <codeph>null</codeph>, если элемент управления Menu не подчинен элементу управления MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:MENU_HIDE"><apiName>MENU_HIDE</apiName><shortdesc>
      Константа типа события MenuEvent.MENU_HIDE указывает на закрытие меню или подменю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuHide</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа события MenuEvent.MENU_HIDE указывает на закрытие меню или подменю.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>-1. Данное свойство не устанавливается для этого типа события. </entry></row><row><entry><codeph>item</codeph></entry>
             <entry>null. Данное свойство не устанавливается для этого типа события.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>null. Данное свойство не устанавливается для этого типа события.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry>null. Данное свойство не устанавливается для этого типа события.</entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Определенный экземпляр меню, связанный с этим событием, либо <codeph>null</codeph>, если событие передается элементом MenuBar.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Экземпляр MenuBar, являющийся вышестоящим по отношению к элементу управления Menu, либо <codeph>null</codeph>, если элемент управления Menu не подчинен элементу управления MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.MENU_HIDE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:MENU_SHOW"><apiName>MENU_SHOW</apiName><shortdesc>
      Константа типа MenuEvent.MENU_SHOW на открытие меню или подменю при помощи указателя мыши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>menuShow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа MenuEvent.MENU_SHOW на открытие меню или подменю при помощи указателя мыши.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>index</codeph></entry>
             <entry>-1. Данное свойство не устанавливается для этого типа события.</entry></row><row><entry><codeph>item</codeph></entry>
             <entry>null. Данное свойство не устанавливается для этого типа события.</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>null. Данное свойство не устанавливается для этого типа события.</entry></row><row><entry><codeph>label</codeph></entry>
             <entry><codeph>null. Данное свойство не устанавливается для этого типа события.</codeph></entry></row><row><entry><codeph>menu</codeph></entry>
              <entry>Определенный экземпляр меню, связанный с этим событием, либо <codeph>null</codeph>, если событие передается элементом MenuBar.</entry></row><row><entry><codeph>menuBar</codeph></entry>
             <entry>Экземпляр MenuBar, являющийся вышестоящим по отношению к элементу управления Menu, либо <codeph>null</codeph>, если элемент управления Menu не подчинен элементу управления MenuBar.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>MenuEvent.MENU_SHOW</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:index"><apiName>index</apiName><shortdesc>
      Индекс связанного пункта меню в пределах соответствующего вышестоящего меню или подменю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Индекс связанного пункта меню в пределах соответствующего вышестоящего меню или подменю. Для событий menuShow и menuHide используется значение -1.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:item"><apiName>item</apiName><shortdesc>
      Определенный элемент в dataProvider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Определенный элемент в dataProvider. Для событий menuShow и menuHide это свойство имеет значение null. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:label"><apiName>label</apiName><shortdesc>
      Текст метки для связанного пункта меню.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Текст метки для связанного пункта меню. Для событий menuShow и menuHide это свойство имеет значение null. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:menu"><apiName>menu</apiName><shortdesc>
      Определенный экземпляр Menu, связанный с событием, таким как скрытие или открытие меню или подменю.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls:Menu</apiValueClassifier></apiValueDef><apiDesc>
      Определенный экземпляр Menu, связанный с событием, таким как скрытие или открытие меню или подменю. Если событие передается элементом MenuBar, это свойство имеет значение null. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:MenuEvent:menuBar"><apiName>menuBar</apiName><shortdesc>
      Экземпляр MenuBar, который является вышестоящим по отношению к выбранному элементу управления Menu, либо null, если целевой элемент управления Menu не подчинен элементу управления MenuBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls:MenuBar</apiValueClassifier></apiValueDef><apiDesc>
      Экземпляр MenuBar, который является вышестоящим по отношению к выбранному элементу управления Menu, либо null, если целевой элемент управления Menu не подчинен элементу управления MenuBar.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
  Класс CloseEvent представляет объекты события, специфичные для всплывающих окон, например, для элемента управления Alert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс CloseEvent представляет объекты события, специфичные для всплывающих окон, например, для элемента управления Alert.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Alert"><linktext>mx.controls.Alert</linktext></link></related-links><adobeApiEvent id="mx.events:CloseEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CloseEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:CloseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CloseEvent:CloseEvent"><apiName>CloseEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Значение свойства detail; определяет нажатую кнопку в отображаемом элементе управления.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CloseEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
      Константа CloseEvent.CLOSE определяет значение свойства type объекта события для события закрытия.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>CloseEvent.CLOSE</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>close</codeph>.
     
      <p>Свойства объекта события имеют следующие значения.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>detail</codeph></entry><entry>Для элементов управления с несколькими кнопками значение свойства <codeph>detail</codeph> определяет нажатую кнопку в отображаемом элементе управления.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CloseEvent:detail"><apiName>detail</apiName><shortdesc>
      Определяет нажатую кнопку в отображаемом элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Определяет нажатую кнопку в отображаемом элементе управления. Это свойство используется для элементов управления с несколькими кнопками. Элемент управления Alert устанавливает в качестве значения этого свойства одну из следующих констант:
      <ul>
        <li><codeph>Alert.YES</codeph></li>
        <li><codeph>Alert.NO</codeph></li>
        <li><codeph>Alert.OK</codeph></li>
        <li><codeph>Alert.CANCEL</codeph></li>
      </ul>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
  Класс ModuleEvent представляет объект события, передаваемый прослушивателю событий, связанных с динамически загружаемыми модулями.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ModuleEvent представляет объект события, передаваемый прослушивателю событий, связанных с динамически загружаемыми модулями. 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ModuleEvent:ERROR_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:ERROR</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:PROGRESS_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:READY_ready"><apiName>ready</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:READY</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:SETUP_setup"><apiName>setup</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:SETUP</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ModuleEvent:UNLOAD_unload"><apiName>unload</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ModuleEvent:UNLOAD</apiEventType><adobeApiEventClassifier>mx.events:ModuleEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ModuleEvent:ModuleEvent"><apiName>ModuleEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события. Возможные значения:
      <ul>
         <li>progress (<codeph>ModuleEvent.PROGRESS</codeph>);</li>
         <li>ready (<codeph>ModuleEvent.READY</codeph>);</li>
         <li>setup (<codeph>ModuleEvent.SETUP</codeph>);</li>
         <li>error (<codeph>ModuleEvent.ERROR</codeph>);</li>
         <li>unload (<codeph>ModuleEvent.UNLOAD</codeph>);</li>
      </ul>
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет, участвует ли объект Event в фазе восходящей цепочки потока событий.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет возможность отмены объекта Event во время распределения событий.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Количество байтов, загруженных во время обработки события прослушивателем.
     
      </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Общее количество загружаемых байтов в случае успешного завершения процесса загрузки.
     
      </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Сообщение об ошибке в случае типа события <codeph>ModuleEvent.ERROR</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>module</apiItemName><apiOperationClassifier>mx.modules:IModuleInfo</apiOperationClassifier><apiData>null</apiData></apiParam><apiTipTexts><apiTipText>Конструктор для объектов <codeph>ModuleEvent</codeph>.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ModuleEvent:ERROR"><apiName>ERROR</apiName><shortdesc>
      Передается в случае возникновения ошибки при загрузке модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается в случае возникновения ошибки при загрузке модуля. Константа <codeph>ModuleEvent.ERROR</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>error</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Сообщение об ошибке.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:PROGRESS"><apiName>PROGRESS</apiName><shortdesc>
      Передается, когда модуль находится на процессе загрузки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>progress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается, когда модуль находится на процессе загрузки. Этот модуль передается через равные интервалы в течение процесса загрузки. Константа <codeph>ModuleEvent.PROGRESS</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>progress</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Количество загруженных байтов.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Общее количество загруженных байтов.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:READY"><apiName>READY</apiName><shortdesc>
      Передается при завершении загрузки модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ready</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при завершении загрузки модуля. Константа <codeph>ModuleEvent.READY</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>complete</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Количество загруженных байтов.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Общее количество загруженных байтов.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:SETUP"><apiName>SETUP</apiName><shortdesc>
      Передается при завершении загрузки фрагмента модуля, предоставляющего информацию о модуле.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setup</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при завершении загрузки фрагмента модуля, предоставляющего информацию о модуле. Для этого выполняется вызов метода <codeph>IFlexModuleFactory.info()</codeph> из модуля. Константа <codeph>ModuleEvent.SETUP</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>setup</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Сообщение об ошибке.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:UNLOAD"><apiName>UNLOAD</apiName><shortdesc>
      Передается при выгрузке модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передается при выгрузке модуля. Константа <codeph>ModuleEvent.UNLOAD</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>unload</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Сообщение об ошибке.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:errorText"><apiName>errorText</apiName><shortdesc>
      Сообщение об ошибке, свойство type имеет значение ModuleEvent.ERROR; в противном случае – null.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Сообщение об ошибке, свойство type имеет значение <codeph>ModuleEvent.ERROR</codeph>; в противном случае – <codeph>null</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ModuleEvent:module:get"><apiName>module</apiName><shortdesc>
      target, являющийся экземпляром интерфейса для определенного модуля.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>mx.modules:IModuleInfo</apiValueClassifier></apiValueDef><apiDesc>
      <codeph>target</codeph>, являющийся экземпляром интерфейса для определенного модуля.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
  Это событие передается между доменами приложения для уведомления доверенных прослушивателей относительно операции в определенном диспетчере.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Это событие передается между доменами приложения для уведомления доверенных прослушивателей относительно операции в определенном диспетчере.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:InterManagerRequest:InterManagerRequest"><apiName>InterManagerRequest</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Имя свойства, метода или диспетчера для создания экземпляров.
     	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Значение свойства или массив параметров для метода (если не null).
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор. Не возвращает значения, однако свойство <codeph>value</codeph> может быть изменено в целях представления возвращаемого значения метода.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:InterManagerRequest:CURSOR_MANAGER_REQUEST"><apiName>CURSOR_MANAGER_REQUEST</apiName><shortdesc>
      Этот тип запроса используется при обмене информацией между CursorManagers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cursorManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Этот тип запроса используется при обмене информацией между CursorManagers. Значением свойства <codeph>name</codeph> является имя одного из свойств CursorManager. Значением свойства <codeph>value</codeph> является значение этого свойства.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:DRAG_MANAGER_REQUEST"><apiName>DRAG_MANAGER_REQUEST</apiName><shortdesc>
      Этот тип запроса используется при обмене информацией между DragManagers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dragManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Этот тип запроса используется при обмене информацией между DragManagers. Значением свойства <codeph>name</codeph> является имя одного из свойств DragManager. Значением свойства <codeph>value</codeph> является значение этого свойства.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:INIT_MANAGER_REQUEST"><apiName>INIT_MANAGER_REQUEST</apiName><shortdesc>
      Передает в другой ApplicationDomain запрос на создание экземпляра диспетчера в этом ApplicationDomain (если он еще не создан) и, таким образом, обеспечивает возможность прослушивания последующих запросов InterManagerRequests.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>initManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передает в другой ApplicationDomain запрос на создание экземпляра диспетчера в этом ApplicationDomain (если он еще не создан) и, таким образом, обеспечивает возможность прослушивания последующих запросов InterManagerRequests. Значением свойства <codeph>name</codeph> является имя создаваемого экземпляра диспетчера.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:SYSTEM_MANAGER_REQUEST"><apiName>SYSTEM_MANAGER_REQUEST</apiName><shortdesc>
      Запрос SystemManager на выполнение какой-либо операции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>systemManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Запрос SystemManager на выполнение какой-либо операции. Значением свойства <codeph>name</codeph> является имя операции, подлежащей выполнению. Значением свойства <codeph>value</codeph> является значение, необходимое для выполнения этой операции.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:TOOLTIP_MANAGER_REQUEST"><apiName>TOOLTIP_MANAGER_REQUEST</apiName><shortdesc>
      Этот тип запроса используется при обмене информацией между ToolTipManagers.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tooltipManagerRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Этот тип запроса используется при обмене информацией между ToolTipManagers. Значением свойства <codeph>name</codeph> является имя одного из свойств ToolTipManager. Значением свойства <codeph>value</codeph> является значение этого свойства.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:name"><apiName>name</apiName><shortdesc>
      Имя свойства, метода или диспетчера для создания экземпляров.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Имя свойства, метода или диспетчера для создания экземпляров.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InterManagerRequest:value"><apiName>value</apiName><shortdesc>
      Значение свойства или массив параметров для метода.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Значение свойства или массив параметров для метода.		
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:Request"><apiName>Request</apiName><shortdesc>
  Свойство data этого события должно устанавливаться отвечающим прослушивателем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Свойство data этого события должно устанавливаться отвечающим прослушивателем.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:Request:Request"><apiName>Request</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Имя свойства, метода или диспетчера для создания экземпляров.
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. Не возвращает значения, однако свойство <codeph>value</codeph> может быть изменено в целях представления возвращаемого значения метода.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:Request:GET_PARENT_FLEX_MODULE_FACTORY_REQUEST"><apiName>GET_PARENT_FLEX_MODULE_FACTORY_REQUEST</apiName><shortdesc>
      Отправленный из подчиненного приложения или модуля для поиска фабрики модулей вышестоящего приложения или модуля.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getParentFlexModuleFactoryRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Отправленный из подчиненного приложения или модуля для поиска фабрики модулей вышестоящего приложения или модуля. Получатель этого запроса должен установить свойство данных на фабрику модулей. Сообщение отправлено из содержимого загруженного модуля или приложения.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:Request:value"><apiName>value</apiName><shortdesc>
      Значение свойства или массив параметров для метода.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Значение свойства или массив параметров для метода.       
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
  Событие, передаваемое из одного приложения в другое посредством диспетчера sharedEvents, существующего между SWF двух приложений.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Событие, передаваемое из одного приложения в другое посредством диспетчера sharedEvents, существующего между SWF двух приложений. Это событие описывает запрос, направляемый прослушивателю в другом SWF для выполнения какой-либо операции над объектами в соответствующем SWF и потенциального возврата данных в передающий файл SWF. В отличие от типичных событий, SWFBridgeRequests являются исключениями из модели событий, поскольку свойства события изменяются в целях возврата данных в передающий файл SWF.
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.xml#LoaderInfo/sharedEvents"><linktext>flash.display.LoaderInfo.sharedEvents</linktext></link></related-links><apiConstructor id="mx.events:SWFBridgeRequest:SWFBridgeRequest"><apiName>SWFBridgeRequest</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>requestor</apiItemName><apiType value="flash.events:IEventDispatcher"/><apiData>null</apiData><apiDesc>Соединение, используемого для передачи сообщения.
	  
	  </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Данные, связанные с событием.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SWFBridgeRequest:marshal"><apiName>marshal</apiName><shortdesc>
      Размещает SWFBridgeRequest из удаленного ApplicationDomain в текущем ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Объект SWFBridgeRequest, созданный в вызывающем ApplicationDomain.
      
      </apiDesc><apiOperationClassifier>mx.events:SWFBridgeRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>Объект SWFBridgeRequest, который, возможно, был создан в другом ApplicationDomain.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Размещает SWFBridgeRequest из удаленного ApplicationDomain в текущем ApplicationDomain.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_FOCUS_REQUEST"><apiName>ACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  Передается из диспетчера фокусировки верхнего уровня в подчиненный диспетчер фокусировки, таким образом, активируются все диспетчеры фокусировки, участвующие в цикле табуляции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передается из диспетчера фокусировки верхнего уровня в подчиненный диспетчер фокусировки, таким образом, активируются все диспетчеры фокусировки, участвующие в цикле табуляции.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ACTIVATE_POP_UP_REQUEST"><apiName>ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
      Передает запрос на активацию всплывающего окна нижестоящего приложения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>activatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передает запрос на активацию всплывающего окна нижестоящего приложения. Этот запрос передается из SystemManager верхнего уровня в нижестоящий SystemManager через мост. Свойство <codeph>data</codeph> содержит идентификатор для всплывающего окна. Это не всегда фактическая ссылка на всплывающее окно. Возврат данных не выполняется.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_PLACE_HOLDER_REQUEST"><apiName>ADD_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  Добавляет заполнитель для всплывающего окна, размещенного в нижестоящем SystemManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Добавляет заполнитель для всплывающего окна, размещенного в нижестоящем SystemManager. Всплывающее окно не является доверенным, следовательно, оно должно оставаться размещенным в нижестоящем SystemManager, имеющем с ним отношения доверия. Заполнитель передается в корневой SystemManager верхнего уровня, который осуществляет управление активацией и деактивация всех всплывающих окон.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:ADD_POP_UP_REQUEST"><apiName>ADD_POP_UP_REQUEST</apiName><shortdesc>
	  Добавляет всплывающее окно в целевом приложении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>addPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Добавляет всплывающее окно в целевом приложении. Запрос игнорируется целевым приложением, если между передающим и принимающим приложениями не существует отношений доверия.
	  
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CAN_ACTIVATE_POP_UP_REQUEST"><apiName>CAN_ACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
	  Выполняет проверку возможности активации данного всплывающего окна.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>canActivateRequestPopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Выполняет проверку возможности активации данного всплывающего окна. Если всплывающее окно не является видимым или допустимым, оно не может быть активировано. Это сообщение всегда передается посредством моста из SystemManager верхнего уровня в SystemManager, являющийся владельцем всплывающего окна. Значением свойства <codeph>data</codeph> является идентификатор для всплывающего окна. Это не всегда фактическая ссылка на всплывающее окно. Принимающий SystemManager устанавливает для свойства <codeph>data</codeph> запроса значение <codeph>true</codeph>, если всплывающее окно может быть активировано. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:CREATE_MODAL_WINDOW_REQUEST"><apiName>CREATE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Создает модальное окно.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>createModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Создает модальное окно. Свойство <codeph>show</codeph> может использоваться для отображения модального окна после его создания. Значение <codeph>true</codeph> соответствует отображению модального окна. Значение <codeph>false</codeph> позволяет модальному окну оставаться скрытым до передачи запроса <codeph>ModalWindowRequest.SHOW</codeph>. Свойство <codeph>data</codeph> может иметь параметр «Прямоугольник», который описывает область, исключаемую из модального окна. Координаты объекта «Прямоугольник» содержатся в глобальных координатах. Этот параметр присутствует только при наличии отношений доверия между отправителем и получателем запроса.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_FOCUS_REQUEST"><apiName>DEACTIVATE_FOCUS_REQUEST</apiName><shortdesc>
	  Передается из диспетчера фокусировки верхнего уровня в подчиненный диспетчер фокусировки, таким образом, деактивируются все диспетчеры фокусировки, участвующие в цикле табуляции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivateFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передается из диспетчера фокусировки верхнего уровня в подчиненный диспетчер фокусировки, таким образом, деактивируются все диспетчеры фокусировки, участвующие в цикле табуляции.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:DEACTIVATE_POP_UP_REQUEST"><apiName>DEACTIVATE_POP_UP_REQUEST</apiName><shortdesc>
          Передает запрос на деактивацию всплывающего окна нижестоящего приложения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>deactivatePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
          Передает запрос на деактивацию всплывающего окна нижестоящего приложения. Этот запрос передается из нижестоящего SystemManager в SystemManager верхнего уровня посредством моста. Свойство data содержит идентификатор для всплывающего окна. Это не всегда фактическая ссылка на всплывающее окно. Возврат данных не выполняется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_SIZE_REQUEST"><apiName>GET_SIZE_REQUEST</apiName><shortdesc>
	  Получает размер нижестоящего SystemManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Получает размер нижестоящего SystemManager. Передается элементом управления SWFLoader в нижестоящий SystemManager для получения размера его содержимого. Нижестоящий SystemManager обновляет свойства <codeph>width</codeph> и <codeph>height</codeph> объекта события
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:GET_VISIBLE_RECT_REQUEST"><apiName>GET_VISIBLE_RECT_REQUEST</apiName><shortdesc>
      Передает запрос на вычисление вышестоящим SystemManager видимого фрагмента запрашиваемого файла SWF на основе любого из DisplayObjects, который может отсекать запрашивающий SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>getVisibleRectRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передает запрос на вычисление вышестоящим SystemManager видимого фрагмента запрашиваемого файла SWF на основе любого из DisplayObjects, который может отсекать запрашивающий SWF. Запросы передаются в вышестоящий SystemManager через соединение. Результаты возвращаются в свойство <codeph>data</codeph>, которое определяет объект «Прямоугольник» в глобальных координатах.
     
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MODAL_WINDOW_REQUEST"><apiName>HIDE_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Скрывает модальное окно.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Скрывает модальное окно. Свойство <codeph>remove</codeph> определяет, удалено ли модальное окно из списка отображения, или оно является скрытым. Значение <codeph>true</codeph> соответствует удалению модального окна. Значение <codeph>false</codeph> означает, что модальное окно является скрытым. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:HIDE_MOUSE_CURSOR_REQUEST"><apiName>HIDE_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Передает запрос на скрытие курсора мыши при наведении на это приложение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hideMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передает запрос на скрытие курсора мыши при наведении на это приложение. Этот запрос передается в соединение, используемое совместно с вышестоящим приложением, и распространяется до корневой папки верхнего уровня. Свойство <codeph>data</codeph> не используется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:INVALIDATE_REQUEST"><apiName>INVALIDATE_REQUEST</apiName><shortdesc>
	  Передает запрос в загрузчик текущего приложения на аннулирование его свойств, размера или списка отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invalidateRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передает запрос в загрузчик текущего приложения на аннулирование его свойств, размера или списка отображения. Этот запрос передается из SystemManager в вышестоящий по отношению к нему SystemManager. Значением свойства <codeph>value</codeph> является комбинация флагов InvalidationRequestData. Возврат данных не выполняется.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:IS_BRIDGE_CHILD_REQUEST"><apiName>IS_BRIDGE_CHILD_REQUEST</apiName><shortdesc>
	  Выполняет проверку того, является ли данный DisplayObject нижестоящим элементом файла SWF или одного из его нижестоящих файлов SWF.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>isBridgeChildRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Выполняет проверку того, является ли данный DisplayObject нижестоящим элементом файла SWF или одного из его нижестоящих файлов SWF. Этот запрос передается из SystemManager в один или несколько нижестоящих по отношению к нему SystemManager посредством соединения. Свойство <codeph>data</codeph> является ссылкой на DisplayObject. Принимающий SystemManager устанавливает для свойства <codeph>data</codeph> запроса значение <codeph>true</codeph>, если DisplayObject является нижестоящим элементом файла SWF или одного из его нижестоящих файлов SWF. 
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:MOVE_FOCUS_REQUEST"><apiName>MOVE_FOCUS_REQUEST</apiName><shortdesc>
	  Передает запрос на перемещение элемента управления, на котором находится фокус, к другому FocusManager с тем, чтобы этот FocusManager переместил фокусировку на подконтрольный ему элемент управления в зависимости от значения свойства direction для этого события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>moveFocusRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передает запрос на перемещение элемента управления, на котором находится фокус, к другому FocusManager с тем, чтобы этот FocusManager переместил фокусировку на подконтрольный ему элемент управления в зависимости от значения свойства <codeph>direction</codeph> для этого события. Когда фокус перемещается обратно к вышестоящему FocusManager SWF, для свойства <codeph>direction</codeph> устанавливается значение <codeph>FocusDirection.FORWARD</codeph> или <codeph>FocusDirection.BACKWARD</codeph>. Когда фокус перемещается к нижестоящему FocusManager SWF, для свойства <codeph>direction</codeph> устанавливается значение <codeph>FocusDirection.TOP</codeph> или <codeph>FocusDirection.BOTTOM</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_PLACE_HOLDER_REQUEST"><apiName>REMOVE_POP_UP_PLACE_HOLDER_REQUEST</apiName><shortdesc>
	  Удаляет заполнитель.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpPlaceHolderRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Удаляет заполнитель.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:REMOVE_POP_UP_REQUEST"><apiName>REMOVE_POP_UP_REQUEST</apiName><shortdesc>
	  Удаляет всплывающее окно из SystemManager корневой папки изолированной среды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>removePopUpRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Удаляет всплывающее окно из SystemManager корневой папки изолированной среды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:RESET_MOUSE_CURSOR_REQUEST"><apiName>RESET_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Передает запрос на сброс логики, управляющей отображением/скрытием курсора мыши для нового события мыши, с целью определения необходимости отображения/скрытия курсора для различных приложений.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resetMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передает запрос на сброс логики, управляющей отображением/скрытием курсора мыши для нового события мыши, с целью определения необходимости отображения/скрытия курсора для различных приложений. Этот запрос передается в соединение, используемое совместно с вышестоящим приложением, и распространяется до корневой папки верхнего уровня. Свойство data не используется.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_ACTUAL_SIZE_REQUEST"><apiName>SET_ACTUAL_SIZE_REQUEST</apiName><shortdesc>
	  Устанавливает размер child.systemManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setActualSizeRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Устанавливает размер <codeph>child.systemManager</codeph>. Передается элементом управления SWFLoader в нижестоящий SystemManager. Нижестоящий SystemManager должен обновить размер своих нижестоящих элементов в зависимости от значений свойств <codeph>width</codeph> и <codeph>height</codeph> объекта события.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SET_SHOW_FOCUS_INDICATOR_REQUEST"><apiName>SET_SHOW_FOCUS_INDICATOR_REQUEST</apiName><shortdesc> 
      Определяет значение свойства showFocusIndicator в FocusManager каждого приложения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>setShowFocusIndicatorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc> 
      Определяет значение свойства showFocusIndicator в FocusManager каждого приложения. Свойство data является логическим и содержит значение, устанавливаемое для свойства showFocusIndicator. Этот запрос первоначально передается из FocusManager, для которого установлено свойство showFocusIndicator. Из него запрос передается в каждый FocusManager в системе.  
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MODAL_WINDOW_REQUEST"><apiName>SHOW_MODAL_WINDOW_REQUEST</apiName><shortdesc>
      Обеспечивает отображение модального окна.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showModalWindowRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Обеспечивает отображение модального окна. С этим запросом используется свойство <codeph>skip</codeph>. Значение <codeph>true</codeph> указывает, что получатель должен только передать запрос вверх по цепочке без его обработки. Свойство <codeph>data</codeph> может иметь параметр «Прямоугольник», который описывает исключаемую область, определяемую на основе текущего вышестоящего элемента. Его координаты выражены в экранных координатах. Этот параметр присутствует только при наличии отношений доверия между отправителем и получателем сообщения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:SHOW_MOUSE_CURSOR_REQUEST"><apiName>SHOW_MOUSE_CURSOR_REQUEST</apiName><shortdesc>
      Передает в корневую папку верхнего уровня запрос на необходимость скрытия указателя мыши в текущем местоположении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>showMouseCursorRequest</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Передает в корневую папку верхнего уровня запрос на необходимость скрытия указателя мыши в текущем местоположении. Этот запрос передается в соединение, используемое совместно с вышестоящим приложением, и распространяется до корневой папки верхнего уровня. При необходимости отображения курсора в этом местоположении для свойства data устанавливается значение true.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:data"><apiName>data</apiName><shortdesc>
	  Данные, связанные с событием.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Данные, связанные с событием. Для информации относительно использования этого объекта см. описание соответствующего типа события.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SWFBridgeRequest:requestor"><apiName>requestor</apiName><shortdesc>
	  Соединение, используемого для передачи сообщения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:IEventDispatcher"/></apiValueDef><apiDesc>
	  Соединение, используемого для передачи сообщения. Он используется принимающим SWF для отслеживания того, какой SWFLoader содержит запрос SWF.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DataGridEvent"><apiName>DataGridEvent</apiName><shortdesc>
   Класс DataGridEvent представляет объекты события, специфичные для элемента управления DataGrid, например, для события, передаваемого при перемещении фокусировки на редактируемый элемент сетки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
   Класс DataGridEvent представляет объекты события, специфичные для элемента управления DataGrid, например, для события, передаваемого при перемещении фокусировки на редактируемый элемент сетки.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DataGrid"><linktext>mx.controls.DataGrid</linktext></link></related-links><adobeApiEvent id="mx.events:DataGridEvent:COLUMN_STRETCH_columnStretch"><apiName>columnStretch</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:COLUMN_STRETCH</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:HEADER_RELEASE_headerRelease"><apiName>headerRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:HEADER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDITOR_CREATE_itemEditorCreate"><apiName>itemEditorCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDITOR_CREATE</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DataGridEvent:ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DataGridEvent:ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events:DataGridEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DataGridEvent:DataGridEvent"><apiName>DataGridEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс столбца, в котором произошло событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>dataField</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc> Имя поля или свойства данных, связанных со столбцом.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс элемента в поставщике данных.
     
      </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Причина для события <codeph>itemEditEnd</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Редактируемое средство визуализации элементов или средство визуализации заголовка, в области которого был произведен щелчок.
     
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Позиция столбца по оси X для повторного воспроизведения события <codeph>columnStretch</codeph>.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. Как правило, вызывается объектом DataGrid; в коде приложения не используется.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DataGridEvent:COLUMN_STRETCH"><apiName>COLUMN_STRETCH</apiName><shortdesc>
      Константа DataGridEvent.COLUMN_STRETCH определяет значение свойства type объекта события columnStretch, указывающего на то, что пользователь увеличил столбец в горизонтальном направлении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>columnStretch</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа DataGridEvent.COLUMN_STRETCH определяет значение свойства <codeph>type</codeph> объекта события <codeph>columnStretch</codeph>, указывающего на то, что пользователь увеличил столбец в горизонтальном направлении.
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Имя поля или свойства данных, связанных со столбцом.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>null</entry></row><row><entry><codeph>localX</codeph></entry><entry>Позиция мыши по оси Х.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента в поставщике данных.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.COLUMN_STRETCH</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:HEADER_RELEASE"><apiName>HEADER_RELEASE</apiName><shortdesc>
      Константа AdvancedDataGridEvent.HEADER_RELEASE определяет значение свойства type объекта события headerRelease, указывающего на то, что пользователь нажал и отпустил кнопку мыши на заголовке столбца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headerRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа AdvancedDataGridEvent.HEADER_RELEASE определяет значение свойства <codeph>type</codeph> объекта события <codeph>headerRelease</codeph>, указывающего на то, что пользователь нажал и отпустил кнопку мыши на заголовке столбца.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Имя поля или свойства данных, связанных со столбцом.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации заголовка, которое было инициировано.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>null</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.HEADER_RELEASE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDITOR_CREATE"><apiName>ITEM_EDITOR_CREATE</apiName><shortdesc>
      Константа DataGridEvent.ITEM_EDITOR_CREATE определяет значение свойства type объекта события для события itemEditorCreate, указывающего на то, что сеткой данных было завершено создание редактора элементов.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditorCreate</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа DataGridEvent.ITEM_EDITOR_CREATE определяет значение свойства <codeph>type</codeph> объекта события для события <codeph> itemEditorCreate</codeph>, указывающего на то, что сеткой данных было завершено создание редактора элементов.
     
      <p>Отсутствует прослушиватель по умолчанию для этого события.</p>
     
      <p>Как правило, записывается личный прослушиватель событий для разрешения внесения пользовательских изменений в <codeph>itemEditor</codeph> перед тем, как пользователь может начать редактирование.</p>
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>null</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента в поставщике данных.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDITOR_CREATE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_BEGIN"><apiName>ITEM_EDIT_BEGIN</apiName><shortdesc>
      Константа DataGridEvent.ITEM_EDIT_BEGIN определяет значение свойства type объекта события для события itemEditBegin, указывающего на то, что элемент готов к редактированию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBegin</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа DataGridEvent.ITEM_EDIT_BEGIN определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>itemEditBegin</codeph>, указывающего на то, что элемент готов к редактированию. 
     
      <p>Прослушиватель по умолчанию для этого события выполняет действия, перечисленные ниже.</p>
     
      <ul>
        <li>Создает объект редактора элементов посредством вызова метода <codeph>createItemEditor()</codeph>.</li>
        <li>Копирует свойство <codeph>data</codeph> из элемента в редактор. По умолчанию объект редактора элементов является экземпляром элемента управления TextInput. Свойство <codeph>itemEditor</codeph> элемента управления List используется для указания пользовательского класса редактора элементов.</li>
     
        <li>Настройка свойства <codeph>itemEditorInstance</codeph> элемента управления List для ссылки на экземпляр редактора элементов.</li>
      </ul>
     
      <p>Для изменения данных, передаваемых в редактор элементов, можно создать прослушиватель события для этого события. Например, могли измениться данные, формат или другая информация, используемая редактором элементов.</p>
     
      <p>Кроме того, можно создать прослушиватель события для указания редактора элементов, используемого для изменения элемента. Например, могут существовать два различных редактора элементов. В прослушивателе события можно просматривать редактируемые данные или другую информацию и открывать соответствующий редактор элементов путем выполнения действий, описанных ниже.</p>
     
      <ol>
         <li>Можно вызвать метод <codeph>preventDefault()</codeph> для предотвращения выполнения вызова метода <codeph>createItemEditor()</codeph> в качестве части прослушивателя события по умолчанию.</li>
         <li>Можно настроить свойства <codeph>itemEditor</codeph> в соответствии с редактором.</li>
         <li>Можно вызвать метод <codeph>createItemEditor()</codeph>.</li>
      </ol>
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации элементов для редактируемого элемента.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента в поставщике данных.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_BEGINNING"><apiName>ITEM_EDIT_BEGINNING</apiName><shortdesc>
      Константа DataGridEvent.ITEM__EDIT_BEGINNING определяет значение свойства type объекта события itemEditBeginning, указывающего на готовность пользователя к редактированию элемента, например, отпустил кнопку мыши на элементе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBeginning</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа DataGridEvent.ITEM__EDIT_BEGINNING определяет значение свойства <codeph>type</codeph> объекта события <codeph>itemEditBeginning</codeph>, указывающего на готовность пользователя к редактированию элемента, например, отпустил кнопку мыши на элементе. 
     
      <p>Прослушиватель по умолчанию для этого события устанавливает в качестве значения свойства <codeph>DataGrid.editedItemPosition</codeph> элемент, на который переключен фокус, что позволяет начать сеанс редактирования элемента.</p>
     
      <p>Как правило, для запрещения редактирования определенного элемента или элементов пользователь создает собственный прослушиватель события для этого события. Для предотвращения выполнения прослушивателя по умолчанию выполняется вызов метода <codeph>preventDefault()</codeph> из собственного прослушивателя события для этого события.</p>
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Имя поля или свойства данных, связанного со столбцом элемента.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации элементов для редактируемого элемента. Это свойство имеет значение null, если указанное событие генерируется клавиатурой, поскольку элемент, подлежащий редактированию, может в данный момент времени не отображаться на экране.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента в поставщике данных.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_BEGINNING</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_EDIT_END"><apiName>ITEM_EDIT_END</apiName><shortdesc>
      Константа DataGridEvent.ITEM_EDIT_END определяет значение свойства type объекта события itemEditEnd, указывающего на завершение сеанса редактирования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа DataGridEvent.ITEM_EDIT_END определяет значение свойства <codeph>type</codeph> объекта события <codeph>itemEditEnd</codeph>, указывающего на завершение сеанса редактирования.  
     
      <p>Компоненты списка имеют средство обработки по умолчанию для этого события, которое копирует данные из редактора элементов в поставщик данных элемента управления List. Прослушиватель события по умолчанию выполняет следующие действия:</p>
     
      <ul>
        <li>Использует свойство <codeph>editorDataField</codeph> DataGridColumn, связанного с этим событием для определения свойства редактора элементов, содержащего новые данные, и обновляет элемент поставщика данных в соответствии с этими новыми данными. Поскольку редактор элементов по умолчанию является элементом управления TextInput, значением по умолчанию для свойства <codeph>editorDataField</codeph> является <codeph>text</codeph>, указывающее, что свойство <codeph>text</codeph> элемента управления TextInput содержит новые данные элемента.</li>
     
        <li>Выполняет вызов метода <codeph>destroyItemEditor()</codeph> для закрытия редактора элементов.</li>
      </ul>
     
      <p>Как правило, пользователь создает прослушиватель события для этого события в целях выполнения следующих действий:</p>
      <ul>
        <li>В прослушивателе события можно изменять данные, возвращаемые редактором в компонент списка. Например, можно переформатировать данные перед их возвратом в элемент управления List. По умолчанию редактор элементов может возвращать только отдельное значение. Если требуется возврат нескольких значений, необходимо создать прослушиватель события для события <codeph>itemEditEnd</codeph>.</li> 
     
        <li>В прослушивателе события можно просматривать данные, введенные в редактор элементов. Если данные являются неправильными, можно выполнить вызов метода <codeph>preventDefault()</codeph>, что позволит предотвратить возврат новых данных в элемент управления List и закрытие редактора. </li>
      </ul>
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>Имя поля или свойства данных, связанного со столбцом элемента.</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации элементов для редактируемого элемента.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>Константа, определяющая причину события. Это значение должно быть элементом класса <codeph>DataGridEventReason</codeph>.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента в поставщике данных.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_EDIT_END</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_FOCUS_IN"><apiName>ITEM_FOCUS_IN</apiName><shortdesc>
      Константа DataGridEvent.ITEM_FOCUS_IN определяет значение свойства type объекта события itemFocusIn, указывающего на перемещение фокуса на этот элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа DataGridEvent.ITEM_FOCUS_IN определяет значение свойства <codeph>type</codeph> объекта события <codeph>itemFocusIn</codeph>, указывающего на перемещение фокуса на этот элемент. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Экземпляр редактора элементов для редактируемого элемента.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента в поставщике данных.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_FOCUS_IN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:ITEM_FOCUS_OUT"><apiName>ITEM_FOCUS_OUT</apiName><shortdesc>
      Константа DataGridEvent.ITEM_FOCUS_OUT определяет значение свойства type объекта события itemFocusOut, указывающего на перемещение фокуса за пределы элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа DataGridEvent.ITEM_FOCUS_OUT определяет значение свойства <codeph>type</codeph> объекта события <codeph>itemFocusOut</codeph>, указывающего на перемещение фокуса за пределы элемента. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца элемента в массиве <codeph>columns</codeph> объекта DataGrid.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>dataField</codeph></entry><entry>null</entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Экземпляр редактора элементов для редактируемого элемента.</entry></row><row><entry><codeph>localX</codeph></entry><entry>NaN</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента в поставщике данных.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>DataGridEvent.ITEM_FOCUS_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс в массиве columns объекта DataGrid для столбца, связанного с событием.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс в массиве <codeph>columns</codeph> объекта DataGrid для столбца, связанного с событием.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:dataField"><apiName>dataField</apiName><shortdesc>
      Имя поля или свойства данных, связанных со столбцом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Имя поля или свойства данных, связанных со столбцом.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Средство визуализации для редактируемого элемента, либо средство визуализации заголовка, который щелкнул или растянул пользователь.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Средство визуализации для редактируемого элемента, либо средство визуализации заголовка, который щелкнул или растянул пользователь. Это свойств позволяет получать доступ к элементу поставщика данных. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:localX"><apiName>localX</apiName><shortdesc>
      Позиция столбца по оси X; используется для повторного воспроизведения событий растяжения столбца.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Позиция столбца по оси X; используется для повторного воспроизведения событий растяжения столбца.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DataGridEvent:reason"><apiName>reason</apiName><shortdesc>
      Причина, по которой было передано событие itemEditEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Причина, по которой было передано событие <codeph>itemEditEnd</codeph>. Допустимо только для событий, относящихся к типу <codeph>ITEM_EDIT_END</codeph>. Возможные значения определены в классе DataGridEventReason.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DataGridEventReason"><linktext>DataGridEventReason</linktext></link></related-links></apiValue><apiValue id="mx.events:DataGridEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс элемента в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс элемента в поставщике данных.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
  Класс BrowserChangeEvent представляет объекты события, специфичные для BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс BrowserChangeEvent представляет объекты события, специфичные для BrowserManager.
 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE_applicationURLChange"><apiName>applicationURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE_browserURLChange"><apiName>browserURLChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:BrowserChangeEvent:URL_CHANGE_urlChange"><apiName>urlChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:BrowserChangeEvent:URL_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:BrowserChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:BrowserChangeEvent:BrowserChangeEvent"><apiName>BrowserChangeEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Текущий URL-адрес в браузере.
      
      </apiDesc></apiParam><apiParam><apiItemName>lastURL</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Предыдущий URL-адрес в браузере.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:BrowserChangeEvent:APPLICATION_URL_CHANGE"><apiName>APPLICATION_URL_CHANGE</apiName><shortdesc>
      Константа BrowserChangeEvent.APPLICATION_URL_CHANGE определяет значение свойства type объекта события applicationURLChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>applicationURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>BrowserChangeEvent.APPLICATION_URL_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>applicationURLChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Предыдущее значение свойства <codeph>url</codeph> этого BrowserManager.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>url</codeph></entry><entry>Новое значение свойства <codeph>url</codeph> этого BrowserManager.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:BROWSER_URL_CHANGE"><apiName>BROWSER_URL_CHANGE</apiName><shortdesc>
      Константа BrowserChangeEvent.BROWSER_URL_CHANGE определяет значение свойства type объекта события browserURLChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>browserURLChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>BrowserChangeEvent.BROWSER_URL_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>browserURLChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Предыдущее значение свойства <codeph>url</codeph> этого BrowserManager.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>url</codeph></entry><entry>Новое значение свойства <codeph>url</codeph> этого BrowserManager.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:URL_CHANGE"><apiName>URL_CHANGE</apiName><shortdesc>
      Константа BrowserChangeEvent.URL_CHANGE определяет значение свойства type объекта события urlChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urlChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>BrowserChangeEvent.URL_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>urlChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>lastURL</codeph></entry><entry>Предыдущее значение свойства <codeph>url</codeph> этого BrowserManager.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>url</codeph></entry><entry>Новое значение свойства <codeph>url</codeph> этого BrowserManager.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:lastURL"><apiName>lastURL</apiName><shortdesc>
      Предыдущее значение свойства url в BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Предыдущее значение свойства <codeph>url</codeph> в BrowserManager.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:BrowserChangeEvent:url"><apiName>url</apiName><shortdesc>
      Новое значение свойства url в BrowserManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Новое значение свойства <codeph>url</codeph> в BrowserManager.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CuePointEvent"><apiName>CuePointEvent</apiName><shortdesc>
  Класс CuePointEvent представляет объект события, передаваемый прослушивателю событий контрольной точки, обрабатываемых элементом управления VideoDisplay.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс CuePointEvent представляет объект события, передаваемый прослушивателю событий контрольной точки, обрабатываемых элементом управления VideoDisplay.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#VideoDisplay"><linktext>mx.controls.VideoDisplay</linktext></link></related-links><adobeApiEvent id="mx.events:CuePointEvent:CUE_POINT_cuePoint"><apiName>cuePoint</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CuePointEvent:CUE_POINT</apiEventType><adobeApiEventClassifier>mx.events:CuePointEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CuePointEvent:CuePointEvent"><apiName>CuePointEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Имя контрольной точки.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointTime</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Время контрольной точки (в секундах)
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cuePointType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Строка <codeph>actionscript</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CuePointEvent:CUE_POINT"><apiName>CUE_POINT</apiName><shortdesc>
	  Константа CuePointEvent.CUE_POINT определяет значение свойства type объекта события cuePoint.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cuePoint</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>CuePointEvent.CUE_POINT</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>cuePoint</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>cuePointName</codeph></entry><entry>Имя контрольной точки.</entry></row><row><entry><codeph>cuePointTime</codeph></entry><entry>Время контрольной точки (в секундах)</entry></row><row><entry><codeph>cuePointType</codeph></entry><entry>Строка <codeph>actionscript</codeph>.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointName"><apiName>cuePointName</apiName><shortdesc>
	  Имя контрольной точки, инициировавшей событие.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Имя контрольной точки, инициировавшей событие.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointTime"><apiName>cuePointTime</apiName><shortdesc>
	  Время контрольной точки, инициировавшей событие (в секундах).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Время контрольной точки, инициировавшей событие (в секундах).
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CuePointEvent:cuePointType"><apiName>cuePointType</apiName><shortdesc>
	  Строка actionscript.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Строка <codeph>actionscript</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc>
  Это событие передается между приложениями, находящимися в различных защищенных изолированных средах, в целях уведомления прослушивателей о действиях мыши в другой защищенной изолированной среде.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Это событие передается между приложениями, находящимися в различных защищенных изолированных средах, в целях уведомления прослушивателей о действиях мыши в другой защищенной изолированной среде. Из соображений безопасности некоторые поля MouseEvent не передаются в SandboxMouseEvent.
  
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.events:SandboxMouseEvent:SandboxMouseEvent"><apiName>SandboxMouseEvent</apiName><shortdesc> 
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Ctrl</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Alt</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, была ли нажата клавиша <codeph>Shift</codeph>.	 
	  
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает состояние левой кнопки мыши: нажата (true) или не нажата (false).
	  
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc> 
	  Конструктор.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:SandboxMouseEvent:marshal"><apiName>marshal</apiName><shortdesc>
      Размещение SWFBridgeRequest из удаленного ApplicationDomain в текущем ApplicationDomain.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Объект SandboxMouseEvent, созданный в вызывающем ApplicationDomain.
      
      </apiDesc><apiOperationClassifier>mx.events:SandboxMouseEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/><apiDesc>SWFBridgeRequest, который, возможно, был создан в другом ApplicationDomain.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Размещение SWFBridgeRequest из удаленного ApplicationDomain в текущем ApplicationDomain.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:SandboxMouseEvent:CLICK_SOMEWHERE"><apiName>CLICK_SOMEWHERE</apiName><shortdesc>
	  Произведен щелчок мышью за пределами изолированной среды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>clickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Произведен щелчок мышью за пределами изолированной среды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:DOUBLE_CLICK_SOMEWHERE"><apiName>DOUBLE_CLICK_SOMEWHERE</apiName><shortdesc>
	  Произведен двойной щелчок мышью за пределами изолированной среды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>coubleClickSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Произведен двойной щелчок мышью за пределами изолированной среды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_DOWN_SOMEWHERE"><apiName>MOUSE_DOWN_SOMEWHERE</apiName><shortdesc>
	  Произведено нажатие кнопки мыши за пределами изолированной среды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Произведено нажатие кнопки мыши за пределами изолированной среды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_MOVE_SOMEWHERE"><apiName>MOUSE_MOVE_SOMEWHERE</apiName><shortdesc>
	  Произведено перемещение указателя мыши за пределами изолированной среды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseMoveSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Произведено перемещение указателя мыши за пределами изолированной среды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_UP_SOMEWHERE"><apiName>MOUSE_UP_SOMEWHERE</apiName><shortdesc>
	  Произведено освобождение кнопки мыши за пределами изолированной среды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseUpSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Произведено освобождение кнопки мыши за пределами изолированной среды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:MOUSE_WHEEL_SOMEWHERE"><apiName>MOUSE_WHEEL_SOMEWHERE</apiName><shortdesc>
	  Произведено вращение колесика мыши за пределами изолированной среды.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelSomewhere</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Произведено вращение колесика мыши за пределами изолированной среды.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SandboxMouseEvent:altKey"><apiName>altKey</apiName><shortdesc>
	  Указывает, была ли нажата клавиша Alt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Указывает, была ли нажата клавиша <codeph>Alt</codeph>.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/altkey"><linktext>flash.events.MouseEvent.altkey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:buttonDown"><apiName>buttonDown</apiName><shortdesc>
	  Указывает состояние левой кнопки мыши: нажата (true) или не нажата (false).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Указывает состояние левой кнопки мыши: нажата (true) или не нажата (false).
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/buttonDown"><linktext>flash.events.MouseEvent.buttonDown</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:ctrlKey"><apiName>ctrlKey</apiName><shortdesc>
	  Указывает, была ли нажата клавиша Ctrl.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Указывает, была ли нажата клавиша <codeph>Ctrl</codeph>.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/ctrlKey"><linktext>flash.events.MouseEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="mx.events:SandboxMouseEvent:shiftKey"><apiName>shiftKey</apiName><shortdesc>
	  Указывает, была ли нажата клавиша Shift.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  Указывает, была ли нажата клавиша <codeph>Shift</codeph>.
	  
	  </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.events.xml#MouseEvent/shiftKey"><linktext>flash.events.MouseEvent.shiftKey</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:ListEventReason"><apiName>ListEventReason</apiName><shortdesc>
  Константы для значений свойства reason объекта ListEvent, свойство type которого имеет значение ListEvent. ITEM_EDIT_END.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Константы для значений свойства <codeph>reason</codeph> объекта ListEvent, свойство <codeph>type</codeph> которого имеет значение <codeph>ListEvent. ITEM_EDIT_END</codeph>.

  

  </apiDesc></apiClassifierDetail><apiValue id="mx.events:ListEventReason:CANCELLED"><apiName>CANCELLED</apiName><shortdesc>
      Указывает, что редактирование было отменено, и что измененные данные не были сохранены.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancelled</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что редактирование было отменено, и что измененные данные не были сохранены. Даже при вызове метода <codeph>preventDefault()</codeph> из прослушивателя событий для события <codeph>itemEditEnd</codeph> Flex по-прежнему выполняет вызов <codeph>destroyItemEditor()</codeph> для закрытия редактора.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEventReason:NEW_ROW"><apiName>NEW_ROW</apiName><shortdesc>
      Указывает, что фокус перемещен на новую строку элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>newRow</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что фокус перемещен на новую строку элемента управления. В прослушивателе событий можно разрешить, либо запретить изменение фокусировки. Например, прослушиватель событий может проверить, ввел ли пользователь допустимое значение для редактируемого в данный момент элемента. Если нет, то можно запретить перемещение в новый элемент путем вызова метода <codeph>preventDefault()</codeph>. В этом случае редактор элементов остается открытым, и редактирование текущего элемента может быть продолжено. При вызове метода <codeph>preventDefault()</codeph> и также метода <codeph>destroyItemEditor()</codeph> перемещение в новый элемент блокируется, а редактор элементов закрывается.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEventReason:OTHER"><apiName>OTHER</apiName><shortdesc>
      Указывает, что с элемента управления List снята фокусировка, он был прокручен или каким-либо другим образом находится в состоянии, в котором редактирование не разрешено.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>other</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Указывает, что с элемента управления List снята фокусировка, он был прокручен или каким-либо другим образом находится в состоянии, в котором редактирование не разрешено. Даже при вызове метода <codeph>preventDefault()</codeph> из прослушивателя событий для события <codeph>itemEditEnd</codeph> Flex по-прежнему выполняет вызов <codeph>destroyItemEditor()</codeph> для закрытия редактора.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
  Класс RSLEvent представляет объект события, используемый классом DownloadProgressBar при загрузке RSL классом Preloader.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:ProgressEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс RSLEvent представляет объект события, используемый классом DownloadProgressBar при загрузке RSL классом Preloader. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.preloaders.xml#DownloadProgressBar"><linktext>mx.preloaders.DownloadProgressBar</linktext></link><link href="mx.preloaders.xml#Preloader"><linktext>mx.preloaders.Preloader</linktext></link></related-links><adobeApiEvent id="mx.events:RSLEvent:RSL_COMPLETE_rslComplete"><apiName>rslComplete</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_COMPLETE</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_ERROR_rslError"><apiName>rslError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_ERROR</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:RSLEvent:RSL_PROGRESS_rslProgress"><apiName>rslProgress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:RSLEvent:RSL_PROGRESS</apiEventType><adobeApiEventClassifier>mx.events:RSLEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:RSLEvent:RSLEvent"><apiName>RSLEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события. Возможные значения:
	  <ul>
	     <li>rslProgress (<codeph>RSLEvent.RSL_PROGRESS</codeph>);</li>
	     <li>rslComplete (<codeph>RSLEvent.RSL_COMPLETE</codeph>);</li>
	     <li>rslError (<codeph>RSLEvent.RSL_ERROR</codeph>);</li>
	  </ul>
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc> Определяет, участвует ли объект Event в фазе восходящей цепочки потока событий.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Определяет, может ли объект Event быть отменен.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bytesLoaded</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Количество байтов, загруженных во время обработки события прослушивателем.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bytesTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Общее количество загруженных байтов в случае успешного завершения процесса загрузки.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>rslIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Номер индекса RSL относительно общего количества. Значение должно быть от 0 до <codeph>total -1</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>rslTotal</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Общее количество загружаемых RSL.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiType value="flash.net:URLRequest"/><apiData>null</apiData><apiDesc>Местоположение RSL.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>errorText</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Сообщение об ошибке для типа RSLEvent.RSL_ERROR.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>isResourceModule</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>True, если событие возникло при загрузке модуля ResourceModule.
	 
	  </apiDesc></apiParam><apiTipTexts><apiTipText>Конструктор для объектов <codeph>RSLEvent</codeph>.
	  
	  </apiTipText></apiTipTexts></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:RSLEvent:RSL_COMPLETE"><apiName>RSL_COMPLETE</apiName><shortdesc>
	  Передается при окончании загрузки RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslComplete</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передается при окончании загрузки RSL. Константа <codeph>RSLEvent.RSL_COMPLETE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>rslComplete</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Количество загруженных байтов.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Общее количество загруженных байтов.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>isResourceModule</codeph></entry><entry>True, если модуль resourceModule загружен вместо библиотеки RSL</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Номер индекса текущего загружаемого RSL. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Общее число загружаемых RSL. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>url</codeph></entry><entry>Объект URLRequest, указывающий местоположение загружаемого RSL.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_ERROR"><apiName>RSL_ERROR</apiName><shortdesc>
	  Передается при ошибке загрузки RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslError</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передается при ошибке загрузки RSL. Константа <codeph>RSLEvent.RSL_ERROR</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>rslError</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Пусто</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Сообщение об ошибке.<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>True, если модуль resourceModule загружен вместо библиотеки RSL</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Номер индекса текущего загружаемого RSL. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Общее число загружаемых RSL. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>url</codeph></entry><entry>Объект URLRequest, указывающий местоположение загружаемого RSL.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:RSL_PROGRESS"><apiName>RSL_PROGRESS</apiName><shortdesc>
	  Передается при загрузке RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rslProgress</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Передается при загрузке RSL. Константа <codeph>RSLEvent.RSL_PROGRESS</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>rslProgress</codeph>.
     
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>bytesLoaded</codeph></entry><entry>Количество загруженных байтов.</entry></row><row><entry><codeph>bytesTotal</codeph></entry><entry>Общее количество загруженных байтов.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>errorText</codeph></entry>Пусто<entry/></row><row><entry><codeph>isResourceModule</codeph></entry><entry>True, если модуль resourceModule загружен вместо библиотеки RSL</entry></row><row><entry><codeph>rslIndex</codeph></entry><entry>Номер индекса текущего загружаемого RSL. </entry></row><row><entry><codeph>rslTotal</codeph></entry><entry>Общее число загружаемых RSL. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>url</codeph></entry><entry>Объект URLRequest, указывающий местоположение загружаемого RSL.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:errorText"><apiName>errorText</apiName><shortdesc>
	  Сообщение об ошибке, если тип равен RSL_ERROR; в противном случае значение равно null.
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Сообщение об ошибке, если тип равен RSL_ERROR; в противном случае значение равно null.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:isResourceModule"><apiName>isResourceModule</apiName><shortdesc>
	  True, если событие предназначено для загрузки resourceModule вместо библиотеки RSL
	 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
	  True, если событие предназначено для загрузки resourceModule вместо библиотеки RSL
	 </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:loaderInfo"><apiName>loaderInfo</apiName><shortdesc>
      Объект loaderInfo, связанный с этим событием.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:LoaderInfo"/></apiValueDef><apiDesc>
      Объект loaderInfo, связанный с этим событием. Устанавливается только в событии RSLEvent.RSL_COMPLETE. Иначе loaderInfo будет иметь значение null.
     </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslIndex"><apiName>rslIndex</apiName><shortdesc>
	  Номер индекса текущего загружаемого RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Номер индекса текущего загружаемого RSL. Это число от 0 до <codeph>rslTotal -1</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:rslTotal"><apiName>rslTotal</apiName><shortdesc>
	  Общее число RSL, загружаемых предварительным загрузчиком
	  
	  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Общее число RSL, загружаемых предварительным загрузчиком
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:RSLEvent:url"><apiName>url</apiName><shortdesc>
	  Объект URLRequest, указывающий местоположение загружаемого RSL.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.net:URLRequest"/></apiValueDef><apiDesc>
	  Объект URLRequest, указывающий местоположение загружаемого RSL.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
  Класс ToolTipEvent представляет события ToolTip, генерируемые классом ToolTipManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ToolTipEvent представляет события ToolTip, генерируемые классом ToolTipManager. Класс ToolTipManager вызывает метод <codeph>dispatchEvent()</codeph> объекта, для которого рекомендуется применить передачу события.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.managers.xml#ToolTipManager"><linktext>mx.managers.ToolTipManager</linktext></link><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_CREATE_toolTipCreate"><apiName>toolTipCreate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_CREATE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_END_toolTipEnd"><apiName>toolTipEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_END</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_HIDE_toolTipHide"><apiName>toolTipHide</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_HIDE</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOW_toolTipShow"><apiName>toolTipShow</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOW</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN_toolTipShown"><apiName>toolTipShown</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_SHOWN</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ToolTipEvent:TOOL_TIP_START_toolTipStart"><apiName>toolTipStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ToolTipEvent:TOOL_TIP_START</apiEventType><adobeApiEventClassifier>mx.events:ToolTipEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ToolTipEvent:ToolTipEvent"><apiName>ToolTipEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>toolTip</apiItemName><apiOperationClassifier>mx.core:IToolTip</apiOperationClassifier><apiData>null</apiData><apiDesc>Объект всплывающей подсказки, к которому применяется это событие.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_CREATE"><apiName>TOOL_TIP_CREATE</apiName><shortdesc>
	  Константа ToolTipEvent. TOOL_TIP_CREATE определяет значение свойства type объекта события для события toolTipCreate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipCreate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ToolTipEvent. TOOL_TIP_CREATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события для события <codeph>toolTipCreate</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Объект всплывающей подсказки, к которому применяется это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_END"><apiName>TOOL_TIP_END</apiName><shortdesc>
	  Константа ToolTipEvent. TOOL_TIP_END определяет значение type свойство объекта события для события toolTipEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ToolTipEvent. TOOL_TIP_END</codeph> определяет значение <codeph>type</codeph> свойство объекта события для события <codeph>toolTipEnd</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Объект всплывающей подсказки, к которому применяется это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_HIDE"><apiName>TOOL_TIP_HIDE</apiName><shortdesc>
	  Константа ToolTipEvent. TOOL_TIP_HIDE определяет значение свойства type объекта события toolTipHide.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipHide</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ToolTipEvent. TOOL_TIP_HIDE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>toolTipHide</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Объект всплывающей подсказки, к которому применяется это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOW"><apiName>TOOL_TIP_SHOW</apiName><shortdesc>
	  Константа ToolTipEvent. TOOL_TIP_SHOW определяет значение свойства type объекта события toolTipShow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShow</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ToolTipEvent. TOOL_TIP_SHOW</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>toolTipShow</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Объект всплывающей подсказки, к которому применяется это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_SHOWN"><apiName>TOOL_TIP_SHOWN</apiName><shortdesc>
	  Константа ToolTipEvent. TOOL_TIP_SHOWN определяет значение свойства type объекта события toolTipShown.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipShown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ToolTipEvent. TOOL_TIP_SHOWN</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>toolTipShown</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Объект всплывающей подсказки, к которому применяется это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:TOOL_TIP_START"><apiName>TOOL_TIP_START</apiName><shortdesc>
	  Константа ToolTipEvent. TOOL_TIP_START определяет значение свойства type объекта события toolTipStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>toolTipStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ToolTipEvent. TOOL_TIP_START</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>toolTipStart</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>tooltip</codeph></entry><entry>Объект всплывающей подсказки, к которому применяется это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ToolTipEvent:toolTip"><apiName>toolTip</apiName><shortdesc>
	  Объект всплывающей подсказки, к которому применяется это событие.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.core:IToolTip</apiValueClassifier></apiValueDef><apiDesc>
	  Объект всплывающей подсказки, к которому применяется это событие. Этот объект обычно является экземпляром объекта ToolTip, но может быть любым объектом UIComponent.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SliderEvent"><apiName>SliderEvent</apiName><shortdesc>
  Класс SliderEvent представляет объект события, передаваемый прослушивателю событий change, thumbDrag, thumbPress и thumbRelease классов HSlider и VSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс SliderEvent представляет объект события, передаваемый прослушивателю событий <codeph>change</codeph>, <codeph>thumbDrag</codeph>, <codeph>thumbPress</codeph> и <codeph>thumbRelease</codeph> классов HSlider и VSlider.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#HSlider"><linktext>mx.controls.HSlider</linktext></link><link href="mx.controls.xml#VSlider"><linktext>mx.controls.VSlider</linktext></link><link href="mx.controls.sliderClasses.xml#Slider"><linktext>mx.controls.sliderClasses.Slider</linktext></link><link href="mx.events.xml#SliderEventClickTarget"><linktext>mx.events.SliderEventClickTarget</linktext></link></related-links><adobeApiEvent id="mx.events:SliderEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_DRAG_thumbDrag"><apiName>thumbDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_DRAG</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_PRESS_thumbPress"><apiName>thumbPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_PRESS</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:SliderEvent:THUMB_RELEASE_thumbRelease"><apiName>thumbRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:SliderEvent:THUMB_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:SliderEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:SliderEvent:SliderEvent"><apiName>SliderEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>thumbIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс ползунка, расположение которого изменилось.
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Новое значение ползунка.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>clickTarget</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Указывает область щелчка мышью: полоса прокрутки или ползунок.
     
      </apiDesc></apiParam><apiParam><apiItemName>keyCode</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Если событие запускалось нажатием клавиши, возвращается код клавиши.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:SliderEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      Константа SliderEvent.CHANGE определяет значение свойства type объекта события change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>SliderEvent.CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>change</codeph>. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Указывает область щелчка мышью: полоса прокрутки или ползунок.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Если событие запускалось нажатием клавиши, возвращается код клавиши.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Отсчитываемый от нуля индекс ползунка, расположение которого изменилось.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Содержит значение, указывающее тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Новое значение ползунка.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_DRAG"><apiName>THUMB_DRAG</apiName><shortdesc>
      Константа SliderEvent.THUMB_DRAG определяет значение свойства type объекта события thumbDrag.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>SliderEvent.THUMB_DRAG</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>thumbDrag</codeph>. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Указывает область щелчка мышью: полоса прокрутки или ползунок.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Если событие запускалось нажатием клавиши, возвращается код клавиши.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Отсчитываемый от нуля индекс ползунка, расположение которого изменилось.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Содержит значение, указывающее тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Новое значение ползунка.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_PRESS"><apiName>THUMB_PRESS</apiName><shortdesc>
      Константа SliderEvent.THUMB_PRESS определяет значение свойства type объекта события thumbPress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>SliderEvent.THUMB_PRESS</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>thumbPress</codeph>. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Указывает область щелчка мышью: полоса прокрутки или ползунок.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Если событие запускалось нажатием клавиши, возвращается код клавиши.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Отсчитываемый от нуля индекс ползунка, расположение которого изменилось.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Содержит значение, указывающее тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Новое значение ползунка.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:THUMB_RELEASE"><apiName>THUMB_RELEASE</apiName><shortdesc>
      Константа SliderEvent.THUMB_RELEASE определяет значение свойства type объекта события thumbRelease.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>SliderEvent.THUMB_RELEASE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>thumbRelease</codeph>. 
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>clickTarget</codeph></entry><entry>Указывает область щелчка мышью: полоса прокрутки или ползунок.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>keyCode</codeph></entry><entry>Если событие запускалось нажатием клавиши, возвращается код клавиши.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>thumbIndex</codeph></entry><entry>Отсчитываемый от нуля индекс ползунка, расположение которого изменилось.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Содержит значение, указывающее тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.</entry></row><row><entry><codeph>value</codeph></entry><entry>Новое значение ползунка.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:clickTarget"><apiName>clickTarget</apiName><shortdesc>
      Указывает область щелчка мышью: полоса прокрутки или ползунок.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Указывает область щелчка мышью: полоса прокрутки или ползунок. Это свойство может иметь одно из двух значений: <codeph>SliderEventClickTarget.THUMB</codeph> или <codeph>SliderEventClickTarget.TRACK</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#SliderEventClickTarget"><linktext>mx.events.SliderEventClickTarget</linktext></link></related-links></apiValue><apiValue id="mx.events:SliderEvent:keyCode"><apiName>keyCode</apiName><shortdesc>
      Если событие запускалось нажатием клавиши, возвращается код клавиши.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Если событие запускалось нажатием клавиши, возвращается код клавиши.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:thumbIndex"><apiName>thumbIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс ползунка, расположение которого изменилось.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс ползунка, расположение которого изменилось. Если имеется только один ползунок, значение равно 0. Если имеется два ползунка, значение равно 0 или 1.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Указывает тип входного действия.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Указывает тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEvent:value"><apiName>value</apiName><shortdesc>
      Новое значение ползунка.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
      Новое значение ползунка.  
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DividerEvent"><apiName>DividerEvent</apiName><shortdesc>
  Представляет события, передаваемые при нажатии, перемещении или освобождении разделителя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет события, передаваемые при нажатии, перемещении или освобождении разделителя. Эти события передаются элементом управления DividedBox и его нижестоящими элементами.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.containers.xml#DividedBox"><linktext>mx.containers.DividedBox</linktext></link></related-links><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_DRAG_dividerDrag"><apiName>dividerDrag</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_DRAG</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_PRESS_dividerPress"><apiName>dividerPress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_PRESS</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DividerEvent:DIVIDER_RELEASE_dividerRelease"><apiName>dividerRelease</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DividerEvent:DIVIDER_RELEASE</apiEventType><adobeApiEventClassifier>mx.events:DividerEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DividerEvent:DividerEvent"><apiName>DividerEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>dividerIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Индекс разделителя, сгенерировавшего это событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Число пикселов, на которое был перемещен разделитель.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DividerEvent:DIVIDER_DRAG"><apiName>DIVIDER_DRAG</apiName><shortdesc>
	  Константа DividerEvent.DIVIDER_DRAG определяет значение свойства type объекта события dividerDrag.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerDrag</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DividerEvent. DIVIDER_DRAG</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>dividerDrag</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Содержит число пикселов, на которое был перемещен разделитель. Положительные числа указывают на перемещение вправо или вниз, отрицательные числа – на перемещение влево или вверх.</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>Содержит отсчитываемый от нуля индекс перемещаемого разделителя. Самый левый или самый верхний разделитель имеет <codeph>dividerIndex</codeph>, равный 0.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:DIVIDER_PRESS"><apiName>DIVIDER_PRESS</apiName><shortdesc>
	  Константа DividerEvent.DIVIDER_PRESS определяет значение свойства type объекта события dividerPress.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerPress</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DividerEvent. DIVIDER_PRESS</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>dividerPress</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Содержит число пикселов, на которое был перемещен разделитель. Положительные числа указывают на перемещение вправо или вниз, отрицательные числа – на перемещение влево или вверх.</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>Содержит отсчитываемый от нуля индекс перемещаемого разделителя. Самый левый или самый верхний разделитель имеет <codeph>dividerIndex</codeph>, равный 0.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:DIVIDER_RELEASE"><apiName>DIVIDER_RELEASE</apiName><shortdesc>
	  Константа DividerEvent.DIVIDER_RELEASE определяет значение свойства type объекта события dividerRelease.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dividerRelease</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DividerEvent. DIVIDER_RELEASE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>dividerRelease</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Содержит число пикселов, на которое был перемещен разделитель. Положительные числа указывают на перемещение вправо или вниз, отрицательные числа – на перемещение влево или вверх.</entry></row><row><entry><codeph>dividerIndex</codeph></entry><entry>Содержит отсчитываемый от нуля индекс перемещаемого разделителя. Самый левый или самый верхний разделитель имеет <codeph>dividerIndex</codeph>, равный 0.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:delta"><apiName>delta</apiName><shortdesc>
	  Число пикселов, на которые был перемещен разделитель.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Число пикселов, на которые был перемещен разделитель. Положительные числа указывают на перемещение вправо или вниз, отрицательные числа – на перемещение влево или вверх.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DividerEvent:dividerIndex"><apiName>dividerIndex</apiName><shortdesc>
	  Отсчитываемый от нуля индекс нажимаемого или перемещаемого разделителя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
	  Отсчитываемый от нуля индекс нажимаемого или перемещаемого разделителя. Самый левый или самый верхний разделитель имеет <codeph>dividerIndex</codeph>, равный 0.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEventDetail"><apiName>ScrollEventDetail</apiName><shortdesc>
  Константы для значений свойства detail события ScrollEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Константы для значений свойства <codeph>detail</codeph> события ScrollEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#ScrollEvent"><linktext>mx.events.ScrollEvent</linktext></link></related-links><apiValue id="mx.events:ScrollEventDetail:AT_BOTTOM"><apiName>AT_BOTTOM</apiName><shortdesc>
	  Указывает, что полоса прокрутки расположена снизу от диапазона прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atBottom</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки расположена снизу от диапазона прокрутки.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_LEFT"><apiName>AT_LEFT</apiName><shortdesc>
	  Указывает, что полоса прокрутки расположена слева от диапазона прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки расположена слева от диапазона прокрутки.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_RIGHT"><apiName>AT_RIGHT</apiName><shortdesc>
	  Указывает, что полоса прокрутки расположена справа от диапазона прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки расположена справа от диапазона прокрутки.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:AT_TOP"><apiName>AT_TOP</apiName><shortdesc>
	  Указывает, что полоса прокрутки расположена сверху от диапазона прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>atTop</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки расположена сверху от диапазона прокрутки.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_DOWN"><apiName>LINE_DOWN</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена вниз на одну строку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена вниз на одну строку.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_LEFT"><apiName>LINE_LEFT</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена влево на одну строку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена влево на одну строку.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_RIGHT"><apiName>LINE_RIGHT</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена вправо на одну строку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена вправо на одну строку.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:LINE_UP"><apiName>LINE_UP</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена вверх на одну строку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lineUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена вверх на одну строку.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_DOWN"><apiName>PAGE_DOWN</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена вниз на одну страницу.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageDown</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена вниз на одну страницу.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_LEFT"><apiName>PAGE_LEFT</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена влево на одну страницу.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageLeft</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена влево на одну страницу.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_RIGHT"><apiName>PAGE_RIGHT</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена вправо на одну страницу.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageRight</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена вправо на одну страницу.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:PAGE_UP"><apiName>PAGE_UP</apiName><shortdesc>
	  Указывает, что полоса прокрутки перемещена вверх на одну страницу.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>pageUp</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что полоса прокрутки перемещена вверх на одну страницу.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:THUMB_POSITION"><apiName>THUMB_POSITION</apiName><shortdesc>
	  Указывает, что ползунок полосы прокрутки перестал перемещаться.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbPosition</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что ползунок полосы прокрутки перестал перемещаться.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDetail:THUMB_TRACK"><apiName>THUMB_TRACK</apiName><shortdesc>
	  Указывает, что ползунок полосы прокрутки перемещается.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumbTrack</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что ползунок полосы прокрутки перемещается.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TreeEvent"><apiName>TreeEvent</apiName><shortdesc>
  Класс TreeEvent представляет объект события, передаваемый в прослушиватель событий, связанных с действиями в дереве, такими как открытие или закрытие ветвей дерева.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс TreeEvent представляет объект события, передаваемый в прослушиватель событий, связанных с действиями в дереве, такими как открытие или закрытие ветвей дерева.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#Tree"><linktext>mx.controls.Tree</linktext></link></related-links><adobeApiEvent id="mx.events:TreeEvent:ITEM_CLOSE_itemClose"><apiName>itemClose</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_CLOSE</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TreeEvent:ITEM_OPEN_itemOpen"><apiName>itemOpen</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_OPEN</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TreeEvent:ITEM_OPENING_itemOpening"><apiName>itemOpening</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TreeEvent:ITEM_OPENING</apiEventType><adobeApiEventClassifier>mx.events:TreeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:TreeEvent:TreeEvent"><apiName>TreeEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Узел Tree (элемент), к которому применяется это событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Объект средства визуализации элементов ячейки.
     
      </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Если узел открывался или закрывался в ответ на действие пользователя, указывает тип входного действия.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. Обычно вызывается элементом управления Flex Tree; не используется в коде приложения.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TreeEvent:ITEM_CLOSE"><apiName>ITEM_CLOSE</apiName><shortdesc>
      Константа типа события TreeEvent.ITEM_CLOSE указывает, что ветвь дерева закрыта или свернута.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClose</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа события TreeEvent.ITEM_CLOSE указывает, что ветвь дерева закрыта или свернута.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>ListItemRenderer для закрытого узла</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>Закрытие узла в ответ на действие пользователя идентифицируется как действие клавиатуры или мыши.</entry></row><row><entry><codeph>item</codeph></entry><entry>закрытый элемент Tree (узел)</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_CLOSE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:ITEM_OPEN"><apiName>ITEM_OPEN</apiName><shortdesc>
      Константа типа события TreeEvent.ITEM_OPEN указывает, что ветвь дерева открыта или развернута.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemOpen</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа события TreeEvent.ITEM_OPEN указывает, что ветвь дерева открыта или развернута.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>ListItemRenderer для открытого элемента (узла)</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>Открытие элемента (узла) в ответ на действие пользователя идентифицируется как действие клавиатуры или мыши.</entry></row><row><entry><codeph>item</codeph></entry><entry>открытый узел Tree.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_OPEN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:ITEM_OPENING"><apiName>ITEM_OPENING</apiName><shortdesc>
      Константа типа события TreeEvent.ITEM_OPENING передается сразу перед открытием или закрытием дерева.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemOpening</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа типа события TreeEvent.ITEM_OPENING передается сразу перед открытием или закрытием дерева.
     
      <p>Свойства объекта события для этого типа события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>animate</codeph></entry><entry>Следует ли анимировать операцию открытия или закрытия.</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton.</entry></row><row><entry><codeph>dispatchEvent</codeph></entry><entry>Указывает необходимость передачи события <codeph>ITEM_OPEN</codeph> или <codeph>ITEM_CLOSE</codeph> после завершения анимации открытия или закрытия. true</entry></row><row><entry><codeph>itemRenderer</codeph></entry>
             <entry>ListItemRenderer для открытого элемента (узла)</entry></row><row><entry><codeph>item</codeph></entry><entry>открытый узел Tree.</entry></row><row><entry><codeph>opening</codeph></entry><entry>значение равно true, если элемент открывается, и false, если закрывается.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>triggerEvent</codeph></entry>
             <entry>При открытии элемента в ответ на действие пользователя идентифицируется как действие клавиатуры или мыши.</entry></row><row><entry><codeph>type</codeph></entry><entry>TreeEvent.ITEM_OPENING</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:animate"><apiName>animate</apiName><shortdesc>
      Указывает на необходимость анимации операции открытия или закрытия; используется только для событий типа ITEM_OPENING.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Указывает на необходимость анимации операции открытия или закрытия; используется только для событий типа ITEM_OPENING.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
      Указывает на необходимость передачи события (ITEM_OPEN или ITEM_CLOSE) после завершения анимации открытия или закрытия.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Указывает на необходимость передачи события (<codeph>ITEM_OPEN</codeph> или <codeph>ITEM_CLOSE</codeph>) после завершения анимации открытия или закрытия. Используется только для событий типа ITEM_OPENING.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:item"><apiName>item</apiName><shortdesc>
      Хранение свойства элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Хранение свойства элемента. При заполнении Tree XML-данными доступ к свойствам узла можно получить посредством <codeph>event.item. @<i>имя_атрибута</i></codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      ListItemRenderer открытого или закрытого узла.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      ListItemRenderer открытого или закрытого узла.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:opening"><apiName>opening</apiName><shortdesc>
      Используется только для событий типа ITEM_OPENING.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Используется только для событий типа <codeph>ITEM_OPENING</codeph>. Указывает, является ли элемент открытым (значение <codeph>true</codeph>) или закрытым (значение <codeph>false</codeph>).
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TreeEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
      Возвращает низкоуровневое событие MouseEvent или KeyboardEvent, инициировавшее данное событие, или значение null, если событие запускалось программным образом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
      Возвращает низкоуровневое событие MouseEvent или KeyboardEvent, инициировавшее данное событие, или значение <codeph>null</codeph>, если событие запускалось программным образом.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
 Класс PropertyChangeEvent представляет объект события, передаваемый в прослушиватель событий при изменении одного из свойств объекта, и обеспечивает информацию об этом изменении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
 Класс PropertyChangeEvent представляет объект события, передаваемый в прослушиватель событий при изменении одного из свойств объекта, и обеспечивает информацию об этом изменении. Это событие используется классами коллекций и является единственным средством информирования коллекций об изменении представляемых ими данных. Это событие также используется механизмом привязки данных Flex.
 
 </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#PropertyChangeEventKind"><linktext>PropertyChangeEventKind</linktext></link></related-links><adobeApiEvent id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE_propertyChange"><apiName>propertyChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:PropertyChangeEvent:PROPERTY_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:PropertyChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:PropertyChangeEvent:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, инициировавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Указывает вид изменения. Возможными значениями являются <codeph>PropertyChangeEventKind.UPDATE</codeph>, <codeph>PropertyChangeEventKind.DELETE</codeph> и <codeph>null</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Значения String, QName или int, определяющие измененное свойство.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Значение свойства до изменения.
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Значение свойства после изменения.
     
      </apiDesc></apiParam><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, в котором произошло изменение.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.events:PropertyChangeEvent:createUpdateEvent"><apiName>createUpdateEvent</apiName><shortdesc>
      Возвращает новое значение PropertyChangeEvent вида PropertyChangeEventKind.UPDATE с указанными свойствами.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Заново созданный PropertyChangeEvent с указанными свойствами. 
      
      </apiDesc><apiOperationClassifier>mx.events:PropertyChangeEvent</apiOperationClassifier></apiReturn><apiParam><apiItemName>source</apiItemName><apiType value="Object"/><apiDesc>Объект, в котором произошло изменение.
     
      </apiDesc></apiParam><apiParam><apiItemName>property</apiItemName><apiType value="Object"/><apiDesc>Значения String, QName, или int, определяющие измененное свойство,
     
      </apiDesc></apiParam><apiParam><apiItemName>oldValue</apiItemName><apiType value="Object"/><apiDesc>Значение свойства до изменения.
     
      </apiDesc></apiParam><apiParam><apiItemName>newValue</apiItemName><apiType value="Object"/><apiDesc>Значение свойства после изменения.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает новое значение PropertyChangeEvent вида <codeph>PropertyChangeEventKind.UPDATE</codeph> с указанными свойствами. Это стандартный метод.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.events:PropertyChangeEvent:PROPERTY_CHANGE"><apiName>PROPERTY_CHANGE</apiName><shortdesc>
      Константа PropertyChangeEvent.PROPERTY_CHANGE определяет значение свойства type объекта события PropertyChange.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>propertyChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа <codeph>PropertyChangeEvent.PROPERTY_CHANGE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>PropertyChange</codeph>.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>Определяется конструктором; по умолчанию содержит значение false.</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>Определяется конструктором; по умолчанию содержит значение false.</entry></row><row><entry><codeph>kind</codeph></entry><entry>Вид изменения; PropertyChangeEventKind.UPDATE или PropertyChangeEventKind.DELETE.</entry></row><row><entry><codeph>oldValue</codeph></entry><entry>Исходное значение свойства.</entry></row><row><entry><codeph>newValue</codeph></entry><entry>Новое значение свойства, если имеется.</entry></row><row><entry><codeph>property</codeph></entry><entry>Измененное свойство.</entry></row><row><entry><codeph>source</codeph></entry><entry>Объект, содержащий измененное свойство.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:kind"><apiName>kind</apiName><shortdesc>
      Указывает вид изменения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Указывает вид изменения. Возможными значениями являются <codeph>PropertyChangeEventKind.UPDATE</codeph>, <codeph>PropertyChangeEventKind.DELETE</codeph> и <codeph>null</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:newValue"><apiName>newValue</apiName><shortdesc>
      Значение свойства после изменения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Значение свойства после изменения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:oldValue"><apiName>oldValue</apiName><shortdesc>
      Значение свойства до изменения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Значение свойства до изменения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:property"><apiName>property</apiName><shortdesc>
      Значения String, QName или int, определяющие измененное свойство.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Значения String, QName или int, определяющие измененное свойство.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:PropertyChangeEvent:source"><apiName>source</apiName><shortdesc>
      Объект, в котором произошло изменение.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
      Объект, в котором произошло изменение.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
  Представляет объекты события, передаваемые при изменении размера компонента Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет объекты события, передаваемые при изменении размера компонента Flex.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ResizeEvent:RESIZE_resize"><apiName>resize</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ResizeEvent:RESIZE</apiEventType><adobeApiEventClassifier>mx.events:ResizeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ResizeEvent:ResizeEvent"><apiName>ResizeEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldWidth</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Предыдущее значение width объекта в пикселах.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldHeight</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Предыдущее значение height объекта в пикселях.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ResizeEvent:RESIZE"><apiName>RESIZE</apiName><shortdesc>
	  Константа ResizeEvent.RESIZE определяет значение свойства type объекта события resize.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resize</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ResizeEvent.RESIZE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>resize</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>oldHeight</codeph></entry><entry>Предыдущее значение height объекта в пикселах.</entry></row><row><entry><codeph>oldWidth</codeph></entry><entry>Предыдущее значение width объекта в пикселах.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldHeight"><apiName>oldHeight</apiName><shortdesc>
	  Предыдущее значение height объекта в пикселах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Предыдущее значение <codeph>height</codeph> объекта в пикселах.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ResizeEvent:oldWidth"><apiName>oldWidth</apiName><shortdesc>
	  Предыдущее значение width объекта в пикселах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Предыдущее значение <codeph>width</codeph> объекта в пикселах.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
  Класс DropdownEvent представляет объект события, передаваемый прослушивателю событий open и close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс DropdownEvent представляет объект события, передаваемый прослушивателю событий <codeph>open</codeph> и <codeph>close</codeph>.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:DropdownEvent:CLOSE_close"><apiName>close</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:CLOSE</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:DropdownEvent:OPEN_open"><apiName>open</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DropdownEvent:OPEN</apiEventType><adobeApiEventClassifier>mx.events:DropdownEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DropdownEvent:DropdownEvent"><apiName>DropdownEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Значение, указывающее тип входного действия, запустившего это событие
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DropdownEvent:CLOSE"><apiName>CLOSE</apiName><shortdesc>
	  Константа DropdownEvent.CLOSE определяет значение свойства type объекта события close.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DropdownEvent.CLOSE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>close</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Значение, указывающее тип входного действия, запустившего это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:OPEN"><apiName>OPEN</apiName><shortdesc>
	  Константа DropdownEvent.OPEN определяет значение свойства type объекта события open.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DropdownEvent.OPEN</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>open</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Значение, указывающее тип входного действия, запустившего это событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DropdownEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Если открытие иди закрытие элемента управления произошло в ответ на действие пользователя, это свойство содержит значение, указывающее тип входного действия.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Если открытие иди закрытие элемента управления произошло в ответ на действие пользователя, это свойство содержит значение, указывающее тип входного действия. Допустимы следующие значения: <codeph>InteractionInputType.MOUSE</codeph> или <codeph>InteractionInputType.KEYBOARD</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
  Представляет объекты события, специфические для анимационных эффектов Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет объекты события, специфические для анимационных эффектов Flex. В эффектах Flex передается два типа событий tween:
  <ul>
    <li><codeph>tweenUpdate</codeph></li>
    <li><codeph>tweenEnd</codeph></li>
  </ul>
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.effects.xml#Tween"><linktext>mx.effects.Tween</linktext></link></related-links><adobeApiEvent id="mx.events:TweenEvent:TWEEN_END_tweenEnd"><apiName>tweenEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_END</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_START_tweenStart"><apiName>tweenStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_START</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:TweenEvent:TWEEN_UPDATE_tweenUpdate"><apiName>tweenUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:TweenEvent:TWEEN_UPDATE</apiEventType><adobeApiEventClassifier>mx.events:TweenEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:TweenEvent:TweenEvent"><apiName>TweenEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Для события <codeph>tweenStart</codeph> или <codeph>tweenUpdate</codeph> возвращает значение, передаваемое в метод<codeph>onTweenUpdate()</codeph>; для события <codeph>tweenEnd</codeph> – значение, передаваемое в метод <codeph>onTweenEnd()</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:TweenEvent:TWEEN_END"><apiName>TWEEN_END</apiName><shortdesc>
	  Константа TweenEvent.TWEEN_END определяет значение свойства type объекта события tweenEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>TweenEvent.TWEEN_END</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>tweenEnd</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>value</codeph></entry><entry>Значение, передаваемое в метод <codeph>onTweenEnd()</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.xml#Effect"><linktext>mx.effects.Effect</linktext></link><link href="mx.effects.xml#TweenEffect"><linktext>mx.effects.TweenEffect</linktext></link><link href="mx.events.xml#EffectEvent"><linktext>mx.events.EffectEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_START"><apiName>TWEEN_START</apiName><shortdesc>
	  Константа TweenEvent.TWEEN_START определяет значение свойства type объекта события tweenStart.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenStart</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>TweenEvent.TWEEN_START</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>tweenStart</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>value</codeph></entry><entry>Значение, передаваемое в метод <codeph>onTweenUpdate()</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:TWEEN_UPDATE"><apiName>TWEEN_UPDATE</apiName><shortdesc>
	  Константа TweenEvent.TWEEN_UPDATE определяет значение свойства type объекта события tweenUpdate.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>tweenUpdate</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>TweenEvent.TWEEN_UPDATE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>tweenUpdate</codeph>. 
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>value</codeph></entry><entry>Значение, передаваемое в метод <codeph>onTweenUpdate()</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:TweenEvent:value"><apiName>value</apiName><shortdesc>
	  Для события tweenStart или tweenUpdate возвращает значение, передаваемое в методonTweenUpdate(); для события tweenEnd – значение, передаваемое в метод onTweenEnd().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc>
	  Для события <codeph>tweenStart</codeph> или <codeph>tweenUpdate</codeph> возвращает значение, передаваемое в метод<codeph>onTweenUpdate()</codeph>; для события <codeph>tweenEnd</codeph> – значение, передаваемое в метод <codeph>onTweenEnd()</codeph>.
	 
	  <p>Для получения точного значения данного свойства см. класс экземпляра для каждого эффекта анимации.</p>
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.effects.effectClasses.xml#ActionEffectInstance"><linktext>mx.effects.effectClasses.ActionEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#BlurInstance"><linktext>mx.effects.effectClasses.BlurInstance</linktext></link><link href="mx.effects.effectClasses.xml#DissolveInstance"><linktext>mx.effects.effectClasses.DissolveInstance</linktext></link><link href="mx.effects.effectClasses.xml#FadeInstance"><linktext>mx.effects.effectClasses.FadeInstance</linktext></link><link href="mx.effects.effectClasses.xml#GlowInstance"><linktext>mx.effects.effectClasses.GlowInstance</linktext></link><link href="mx.effects.effectClasses.xml#MaskEffectInstance"><linktext>mx.effects.effectClasses.MaskEffectInstance</linktext></link><link href="mx.effects.effectClasses.xml#MoveInstance"><linktext>mx.effects.effectClasses.MoveInstance</linktext></link><link href="mx.effects.effectClasses.xml#ResizeInstance"><linktext>mx.effects.effectClasses.ResizeInstance</linktext></link><link href="mx.effects.effectClasses.xml#RotateInstance"><linktext>mx.effects.effectClasses.RotateInstance</linktext></link><link href="mx.effects.effectClasses.xml#ZoomInstance"><linktext>mx.effects.effectClasses.ZoomInstance</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="mx.events:InvalidateRequestData"><apiName>InvalidateRequestData</apiName><shortdesc>
  Класс InvalidateRequestData определяет значения констант для свойства data объекта SWFBridgeRequest при его использовании с запросом SWFBridgeRequest.INVALIDATE_REQUEST.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс InvalidateRequestData определяет значения констант для свойства <codeph>data</codeph> объекта SWFBridgeRequest при его использовании с запросом <codeph>SWFBridgeRequest.INVALIDATE_REQUEST</codeph>.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.events:InvalidateRequestData:DISPLAY_LIST"><apiName>DISPLAY_LIST</apiName><shortdesc>
      Бит, указывающий обработчику запросов на необходимость аннулирования списка отображения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0001</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Бит, указывающий обработчику запросов на необходимость аннулирования списка отображения.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:PROPERTIES"><apiName>PROPERTIES</apiName><shortdesc>
      Бит, указывающий обработчику запросов на необходимость аннулирования свойств.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0002</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Бит, указывающий обработчику запросов на необходимость аннулирования свойств.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:InvalidateRequestData:SIZE"><apiName>SIZE</apiName><shortdesc>
      Бит, указывающий обработчику запросов на необходимость аннулирования размера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x0004</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Бит, указывающий обработчику запросов на необходимость аннулирования размера.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:SliderEventClickTarget"><apiName>SliderEventClickTarget</apiName><shortdesc>
  Класс SliderEventClickTarget определяет константы для значений свойства clickTarget класса SliderEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс SliderEventClickTarget определяет константы для значений свойства <codeph>clickTarget</codeph> класса SliderEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#SliderEvent"><linktext>mx.events.SliderEvent</linktext></link></related-links><apiValue id="mx.events:SliderEventClickTarget:THUMB"><apiName>THUMB</apiName><shortdesc>
	  Указывает, что пользователь выполнил щелчок по ползунку.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>thumb</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что пользователь выполнил щелчок по ползунку.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:SliderEventClickTarget:TRACK"><apiName>TRACK</apiName><shortdesc>
	  Указывает, что пользователь выполнил щелчок по полосе прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>track</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что пользователь выполнил щелчок по полосе прокрутки.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DateChooserEvent"><apiName>DateChooserEvent</apiName><shortdesc>
  Класс DateChooserEvent представляет объект события, передаваемый прослушивателю для события scroll, предназначенный для элементов управления DateChooser и DateField.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс DateChooserEvent представляет объект события, передаваемый прослушивателю для события <codeph>scroll</codeph>, предназначенный для элементов управления DateChooser и DateField.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#DateChooser"><linktext>mx.controls.DateChooser</linktext></link><link href="mx.controls.xml#DateField"><linktext>mx.controls.DateField</linktext></link><link href="mx.events.xml#DateChooserEventDetail"><linktext>mx.events.DateChooserEventDetail</linktext></link></related-links><adobeApiEvent id="mx.events:DateChooserEvent:SCROLL_scroll"><apiName>scroll</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:DateChooserEvent:SCROLL</apiEventType><adobeApiEventClassifier>mx.events:DateChooserEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:DateChooserEvent:DateChooserEvent"><apiName>DateChooserEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, инициировавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Указывает единицу измерения и направление прокрутки. Возможные значения: <codeph>DateChooserEventDetail.NEXT_MONTH</codeph>, <codeph>DateChooserEventDetail.NEXT_YEAR</codeph>, <codeph>DateChooserEventDetail.PREVIOUS_MONTH</codeph> или <codeph>DateChooserEventDetail.PREVIOUS_YEAR</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>triggerEvent</apiItemName><apiType value="flash.events:Event"/><apiData>null</apiData><apiDesc>Событие, инициирующее данное событие change; как правило, это событие <codeph>scroll</codeph>.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор. Как правило, вызывается объектом DateChooser и не используется в коде приложения.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:DateChooserEvent:SCROLL"><apiName>SCROLL</apiName><shortdesc>
	  Константа DateChooserEvent.SCROLL определяет значение свойства type объекта события scroll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>DateChooserEvent.SCROLL</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>scroll</codeph>.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>detail</codeph></entry><entry>Направление прокрутки.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>triggerEvent</codeph></entry><entry>Событие, инициирующее данное событие change; как правило, это событие <codeph>scroll</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEvent:detail"><apiName>detail</apiName><shortdesc>
      Указывает направление прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Указывает направление прокрутки. Значения определены классом DateChooserEventDetail. Возможные значения: <codeph>DateChooserEventDetail.NEXT_MONTH</codeph>, <codeph>DateChooserEventDetail.NEXT_YEAR</codeph>, <codeph>DateChooserEventDetail.PREVIOUS_MONTH</codeph> или <codeph>DateChooserEventDetail.PREVIOUS_YEAR</codeph>.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#DateChooserEventDetail"><linktext>mx.events.DateChooserEventDetail</linktext></link></related-links></apiValue><apiValue id="mx.events:DateChooserEvent:triggerEvent"><apiName>triggerEvent</apiName><shortdesc>
	  Событие, инициирующее данное изменение; как правило, это событие scroll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.events:Event"/></apiValueDef><apiDesc>
	  Событие, инициирующее данное изменение; как правило, это событие <codeph>scroll</codeph>.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
  Класс mx.events.CollectionEvent представляет событие, передаваемое при изменении связанной коллекции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс mx.events.CollectionEvent представляет событие, передаваемое при изменении связанной коллекции.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#FlexEvent/CURSOR_UPDATE"><linktext>FlexEvent.CURSOR_UPDATE</linktext></link></related-links><adobeApiEvent id="mx.events:CollectionEvent:COLLECTION_CHANGE_collectionChange"><apiName>collectionChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:CollectionEvent:COLLECTION_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:CollectionEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:CollectionEvent:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, инициировавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Указывает вид произошедшего события. Значение параметра может быть равно одному из значений в классе CollectionEventKind или <codeph>null</codeph>, если вид неизвестен.
     
      </apiDesc></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.ADD</codeph>, <codeph>CollectionEventKind.MOVE</codeph>, <codeph>CollectionEventKind.REMOVE</codeph> или <codeph>CollectionEventKind.REPLACE</codeph>, оно указывает, где в целевой коллекции находятся элементы, указанные в свойстве <codeph>items</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>oldLocation</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.MOVE</codeph>, оно определяет прежнее местоположение в целевой коллекции элементов, указанных свойством <codeph>items</codeph>.
      
      </apiDesc></apiParam><apiParam><apiItemName>items</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>Массив объектов с информацией об элементах, задействованных событием, как указано в свойстве <codeph>items</codeph>. Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.REFRESH</codeph> или <codeph>CollectionEventKind.RESET</codeph>, этот массив имеет нулевую длину.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор.
	 
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:CollectionEvent:COLLECTION_CHANGE"><apiName>COLLECTION_CHANGE</apiName><shortdesc>
      Константа CollectionEvent.COLLECTION_CHANGE определяет значение свойства type объекта события, передаваемого при изменении коллекции.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>collectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа CollectionEvent.COLLECTION_CHANGE определяет значение свойства <codeph>type</codeph> объекта события, передаваемого при изменении коллекции.
     
      <p>Свойства объекта события имеют следующие значения. Не все свойства являются значимыми для каждого из видов событий. Дополнительную информацию см. в подробных описаниях свойств.</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>items</codeph></entry><entry>Массив объектов с информацией об элементах, задействованных этим событием. Содержимое этого поля зависит от вида события; для получения подробной информации см. описание свойства <codeph>items</codeph></entry></row><row><entry><codeph>kind</codeph></entry><entry>Вид события. Допустимые значения определены в классе CollectionEventKind как константы.</entry></row><row><entry><codeph>location</codeph></entry><entry>Местоположение внутри целевой коллекции элементов, указанное в свойстве <codeph>items</codeph>.</entry></row><row><entry><codeph>oldLocation</codeph></entry><entry>прежнее местоположение элемента в коллекции, указанное в свойстве <codeph>items</codeph>.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>CollectionEvent.COLLECTION_CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:CollectionEvent:items"><apiName>items</apiName><shortdesc>
	  Если значение kind равно CollectionEventKind.ADD или CollectionEventKind.REMOVE, свойство items представляет собой массив добавленных/удаленных элементов.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/><apiDefaultValue>[ ]
     
      </apiDefaultValue></apiValueDef><apiDesc>
	  Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.ADD</codeph> или <codeph>CollectionEventKind.REMOVE </codeph>, свойство <codeph>items</codeph> представляет собой массив добавленных/удаленных элементов. Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.REPLACE</codeph> или <codeph>CollectionEventKind.UPDATE</codeph>, свойство <codeph>items</codeph> представляет собой массив объектов PropertyChangeEvent с информацией об элементах, задействованных событием. Если значение изменяется, следует запросить поля <codeph>newValue</codeph> и <codeph>oldValue</codeph> объектов PropertyChangeEvent для определения старых и новых значений. Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.REFRESH</codeph> или <codeph>CollectionEventKind.RESET</codeph>, этот массив имеет нулевую длину.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#PropertyChangeEvent"><linktext>PropertyChangeEvent</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:kind"><apiName>kind</apiName><shortdesc>
      Указывает вид произошедшего события.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/><apiDefaultValue>null
	 
	  </apiDefaultValue></apiValueDef><apiDesc>
      Указывает вид произошедшего события. Значение свойства может быть равно одному из значений класса CollectionEventKind или <codeph>null</codeph>, если вид неизвестен.
	 
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:location"><apiName>location</apiName><shortdesc>
      Если значение kind равно CollectionEventKind.ADD, CollectionEventKind.MOVE, CollectionEventKind.REMOVE или CollectionEventKind.REPLACE, это свойство представляет собой отсчитываемый от нуля индекс коллекции элементов, указанных в свойствеitems.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.ADD</codeph>, <codeph>CollectionEventKind.MOVE</codeph>, <codeph>CollectionEventKind.REMOVE</codeph> или <codeph>CollectionEventKind.REPLACE</codeph>, это свойство представляет собой отсчитываемый от нуля индекс коллекции элементов, указанных в свойстве<codeph>items</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#CollectionEventKind"><linktext>CollectionEventKind</linktext></link></related-links></apiValue><apiValue id="mx.events:CollectionEvent:oldLocation"><apiName>oldLocation</apiName><shortdesc>
      Если значение kind равно CollectionEventKind.MOVE, это свойство представляет собой отсчитываемый от нуля индекс в целевой коллекции предыдущего местоположения элементов, указанных свойством items.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/><apiDefaultValue>-1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Если значение <codeph>kind</codeph> равно <codeph>CollectionEventKind.MOVE</codeph>, это свойство представляет собой отсчитываемый от нуля индекс в целевой коллекции предыдущего местоположения элементов, указанных свойством <codeph>items</codeph>.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
  Класс FlexMouseEvent представляет собой объект события, передаваемый прослушивателю событий действий мыши, специфичных для Flex.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс FlexMouseEvent представляет собой объект события, передаваемый прослушивателю событий действий мыши, специфичных для Flex.
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE_mouseDownOutside"><apiName>mouseDownOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE_mouseWheelOutside"><apiName>mouseWheelOutside</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE</apiEventType><adobeApiEventClassifier>mx.events:FlexMouseEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:FlexMouseEvent:FlexMouseEvent"><apiName>FlexMouseEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
      </apiDesc></apiParam><apiParam><apiItemName>localX</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Позиция по горизонтали, где произошло событие.
	 
      </apiDesc></apiParam><apiParam><apiItemName>localY</apiItemName><apiType value="Number"/><apiData>0</apiData><apiDesc>Позиция по вертикали, где произошло событие.
	 
      </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:InteractiveObject"/><apiData>null</apiData><apiDesc>Объект списка отображения, связанный с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>ctrlKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, нажата ли клавиша Control.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>altKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, нажата ли клавиша Alt.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>shiftKey</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, нажата ли клавиша Shift.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>buttonDown</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, нажата ли клавиша Control.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Указывает количество прокручиваемых строк при каждой прокрутке пользователем колесика мыши.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:FlexMouseEvent:MOUSE_DOWN_OUTSIDE"><apiName>MOUSE_DOWN_OUTSIDE</apiName><shortdesc>
	  Константа FlexMouseEvent.MOUSE_DOWN_OUTSIDE определяет значение свойства type объекта события mouseDownOutside.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseDownOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>FlexMouseEvent.MOUSE_DOWN_OUTSIDE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>mouseDownOutside</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Указывает, нажата клавиша Alt (<codeph>true</codeph>) или нет (<codeph>false</codeph>).</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>Указывает, нажата главная кнопка мыши (<codeph>true</codeph>) или нет (<codeph>false</codeph>).</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Указывает, нажата клавиша Ctrl (<codeph>true</codeph>) или нет (<codeph>false</codeph>).</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. Для событий PopUpManager объектом является всплывающее окно.</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>Указывает количество прокручиваемых строк при каждой прокрутке пользователем колесика мыши. Для событий PopUpManager это значение равно 0.</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>Позиция по горизонтали, где произошло событие. Для событий PopUpManager значение определяется относительно элементов управления всплывающего меню.</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>Позиция по вертикали, где произошло событие. Для событий PopUpManager значение определяется относительно элементов управления всплывающего меню.</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>Ссылка на объект списка отображения, связанный с событием. Для событий PopUpManager объектом является контейнер, на который наведен указатель мыши.</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Указывает, нажата клавиша Shift (<codeph>true</codeph>) или нет(<codeph>false</codeph>).</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие. Для событий PopUpManager объектом является всплывающее окно.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:FlexMouseEvent:MOUSE_WHEEL_OUTSIDE"><apiName>MOUSE_WHEEL_OUTSIDE</apiName><shortdesc>
	  Константа FlexMouseEvent.MOUSE_WHEEL_OUTSIDE определяет значение свойства type объекта события mouseWheelOutside.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseWheelOutside</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>FlexMouseEvent.MOUSE_WHEEL_OUTSIDE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>mouseWheelOutside</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>altKey</codeph></entry>
	         <entry>Указывает, нажата клавиша Alt (<codeph>true</codeph>) или нет (<codeph>false</codeph>).</entry></row><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>buttonDown</codeph></entry>
	         <entry>Указывает, нажата главная кнопка мыши (<codeph>true</codeph>) или нет (<codeph>false</codeph>).</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>ctrlKey</codeph></entry>
	         <entry>Указывает, нажата клавиша Ctrl (<codeph>true</codeph>) или нет (<codeph>false</codeph>).</entry></row><row><entry><codeph>currentTarget</codeph></entry>
	         <entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. Для событий PopUpManager объектом является всплывающее окно.</entry></row><row><entry><codeph>delta</codeph></entry>
	         <entry>Указывает количество прокручиваемых строк при каждой прокрутке пользователем колесика мыши. Для событий PopUpManager это значение равно 0.</entry></row><row><entry><codeph>localX</codeph></entry>
	         <entry>Позиция по горизонтали, где произошло событие. Для событий PopUpManager значение определяется относительно элементов управления всплывающего меню.</entry></row><row><entry><codeph>localY</codeph></entry>
	         <entry>Позиция по вертикали, где произошло событие. Для событий PopUpManager значение определяется относительно элементов управления всплывающего меню.</entry></row><row><entry><codeph>relatedObject</codeph></entry>
	         <entry>Ссылка на объект списка отображения, связанный с событием. Для событий PopUpManager объектом является контейнер, на который наведен указатель мыши.</entry></row><row><entry><codeph>shiftKey</codeph></entry>
	         <entry>Указывает, нажата клавиша Shift (<codeph>true</codeph>) или нет(<codeph>false</codeph>).</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие. Для событий PopUpManager объектом является всплывающее окно.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ListEvent"><apiName>ListEvent</apiName><shortdesc>
   Класс ListEvent представляет события, связанные с элементами в элементах управления, представленных в виде списка, таких как List, Tree, Menu и DataGrid.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
   Класс ListEvent представляет события, связанные с элементами в элементах управления, представленных в виде списка, таких как List, Tree, Menu и DataGrid.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.controls.xml#List"><linktext>mx.controls.List</linktext></link><link href="mx.controls.listClasses.xml#ListBase"><linktext>mx.controls.listClasses.ListBase</linktext></link></related-links><adobeApiEvent id="mx.events:ListEvent:CHANGE_change"><apiName>change</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:CHANGE</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_CLICK_itemClick"><apiName>itemClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_DOUBLE_CLICK_itemDoubleClick"><apiName>itemDoubleClick</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_DOUBLE_CLICK</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_BEGIN_itemEditBegin"><apiName>itemEditBegin</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_BEGIN</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_BEGINNING_itemEditBeginning"><apiName>itemEditBeginning</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_BEGINNING</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_EDIT_END_itemEditEnd"><apiName>itemEditEnd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_EDIT_END</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_FOCUS_IN_itemFocusIn"><apiName>itemFocusIn</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_FOCUS_IN</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_FOCUS_OUT_itemFocusOut"><apiName>itemFocusOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_FOCUS_OUT</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_ROLL_OUT_itemRollOut"><apiName>itemRollOut</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_ROLL_OUT</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ListEvent:ITEM_ROLL_OVER_itemRollOver"><apiName>itemRollOver</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ListEvent:ITEM_ROLL_OVER</apiEventType><adobeApiEventClassifier>mx.events:ListEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ListEvent:ListEvent"><apiName>ListEvent</apiName><shortdesc>
      Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
     
      </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
     
      </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
     
      </apiDesc></apiParam><apiParam><apiItemName>columnIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс столбца, содержащего средство визуализации.
     
      </apiDesc></apiParam><apiParam><apiItemName>rowIndex</apiItemName><apiType value="int"/><apiData>-1</apiData><apiDesc>Отсчитываемый от нуля индекс строки, содержащей средство визуализации, или индекс редактируемого элемента в поставщике данных для событий редактирования
     
      </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Причина для события <codeph>itemEditEnd</codeph>.
     
      </apiDesc></apiParam><apiParam><apiItemName>itemRenderer</apiItemName><apiOperationClassifier>mx.controls.listClasses:IListItemRenderer</apiOperationClassifier><apiData>null</apiData><apiDesc>Cредства визуализации элементов для элемента поставщика данных.
      
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
      Конструктор. Как правило, вызывается управляющим элементом Flex и не используется в коде приложения.
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ListEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc>
      Константа ListEvent.CHANGE определяет значение свойства type объекта ListEvent для события change, указывающего, что выбор изменялся в результате действий пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.CHANGE определяет значение свойства <codeph>type</codeph> объекта ListEvent для события <codeph>change</codeph>, указывающего, что выбор изменялся в результате действий пользователя.
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Произведен щелчок средства визуализации элементов.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.CHANGE</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_CLICK"><apiName>ITEM_CLICK</apiName><shortdesc>
      Константа ListEvent.ITEM_CLICK определяет значение свойства type объекта ListEvent для события itemClick, указывающего на выполнение пользователем щелчка кнопкой мыши по видимому элементу в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_CLICK определяет значение свойства <codeph>type</codeph> объекта ListEvent для события <codeph>itemClick</codeph>, указывающего на выполнение пользователем щелчка кнопкой мыши по видимому элементу в элементе управления.
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Произведен щелчок средства визуализации элементов.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent. ITEM_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_DOUBLE_CLICK"><apiName>ITEM_DOUBLE_CLICK</apiName><shortdesc>
      Константа ListEvent.ITEM_DOUBLE_CLICK определяет значение свойства type объекта ListEvent для события itemDoubleClick, указывающего на выполнение пользователем двойного щелчка кнопкой мыши по видимому элементу в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemDoubleClick</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_DOUBLE_CLICK определяет значение свойства <codeph>type</codeph> объекта ListEvent для события <codeph>itemDoubleClick</codeph>, указывающего на выполнение пользователем двойного щелчка кнопкой мыши по видимому элементу в элементе управления.
     
      <p>Для получения событий itemDoubleClick следует установить свойство <codeph>doubleClickEnabled</codeph> компонента равным <codeph>true</codeph>.</p>
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Выбираемое двойным щелчком мыши средство визуализации элементов.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_DOUBLE_CLICK</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_BEGIN"><apiName>ITEM_EDIT_BEGIN</apiName><shortdesc>
      Константа ListEvent.ITEM_EDIT_BEGIN определяет значение свойства type объекта события itemEditBegin, указывающего, что элемент готов к редактированию.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBegin</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_EDIT_BEGIN определяет значение свойства <codeph>type</codeph> объекта события <codeph>itemEditBegin</codeph>, указывающего, что элемент готов к редактированию. 
     
      <p>Прослушиватель по умолчанию для этого события выполняет следующие действия:</p>
     
      <ul>
        <li>Создает объект редактора элементов посредством вызова метода <codeph>createItemEditor()</codeph>.</li>
        <li>Копирует свойство <codeph>data</codeph> из элемента в редактор. По умолчанию объект редактора элементов является экземпляром элемента управления TextInput. Свойство <codeph>itemEditor</codeph> элемента управления List используется для указания пользовательского класса редактора элементов.</li>
     
        <li>Настройка свойства <codeph>itemEditorInstance</codeph> элемента управления List для ссылки на экземпляр редактора элементов.</li>
      </ul>
     
      <p>Для изменения данных, передаваемых в редактор элементов, можно создать прослушиватель события для этого события. Например, могли измениться данные, формат или другая информация, используемая редактором элементов.</p>
     
      <p>Кроме того, можно создать прослушиватель события для указания редактора элементов, используемого для изменения элемента. Например, могут существовать два различных редактора элементов. В прослушивателе события можно просматривать редактируемые данные или другую информацию и открывать соответствующий редактор элементов путем выполнения действий, описанных ниже.</p>
     
      <ol>
         <li>Можно вызвать метод <codeph>preventDefault()</codeph> для предотвращения выполнения вызова метода <codeph>createItemEditor()</codeph> в качестве части прослушивателя события по умолчанию.</li>
         <li>Можно настроить свойства <codeph>itemEditor</codeph> в соответствии с редактором.</li>
         <li>Можно вызвать метод <codeph>createItemEditor()</codeph>.</li>
      </ol>
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации элементов для редактируемого элемента.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_BEGINNING"><apiName>ITEM_EDIT_BEGINNING</apiName><shortdesc>
      Константа ListEvent.ITEM_EDIT_BEGINNING определяет значение type свойства объекта ListEvent для события itemEditBeginning, указывающего на готовность пользователя к редактированию элемента, например, отпустил кнопку мыши на элементе.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditBeginning</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_EDIT_BEGINNING определяет значение <codeph>type</codeph> свойства объекта ListEvent для события <codeph>itemEditBeginning</codeph>, указывающего на готовность пользователя к редактированию элемента, например, отпустил кнопку мыши на элементе. 
     
      <p>Прослушиватель по умолчанию для этого события устанавливает в качестве значения свойства <codeph>List.editedItemPosition</codeph> элемент, на который переключен фокус, что позволяет начать сеанс редактирования элемента.</p>
     
      <p>Как правило, для запрещения редактирования определенного элемента или элементов пользователь создает собственный прослушиватель события для этого события. Для предотвращения выполнения прослушивателя по умолчанию выполняется вызов метода <codeph>preventDefault()</codeph> из собственного прослушивателя события для этого события.</p>
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации элементов для редактируемого элемента. Это свойство имеет значение null, если указанное событие генерируется клавиатурой, поскольку элемент, подлежащий редактированию, может в данный момент времени не отображаться на экране.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_EDIT_BEGIN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_EDIT_END"><apiName>ITEM_EDIT_END</apiName><shortdesc>
      Константа ListEvent.ITEM_EDIT_END определяет значение type свойства объекта ListEvent для события itemEditEnd, указывающего на завершение сеанса редактирования.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemEditEnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_EDIT_END определяет значение <codeph>type </codeph> свойства объекта ListEvent для события <codeph>itemEditEnd</codeph>, указывающего на завершение сеанса редактирования. 
     
      <p>Компоненты списка имеют средство обработки по умолчанию для этого события, которое копирует данные из редактора элементов в поставщик данных элемента управления List. Прослушиватель события по умолчанию выполняет следующие действия:</p>
     
      <ul>
        <li>Использует свойство <codeph>editorDataField</codeph> элемента управления List для определения свойств редактора элементов, содержащего новые данные, и обновляет элемент поставщика данных в соответствии с новыми данными. Поскольку редактор элементов по умолчанию является элементом управления TextInput, значением по умолчанию для свойства <codeph>editorDataField</codeph> является <codeph>text</codeph>, указывающее, что свойство <codeph>text</codeph> элемента управления TextInput содержит новые данные элемента.</li>
     
        <li>Выполняет вызов метода <codeph>destroyItemEditor()</codeph> для закрытия редактора элементов.</li>
      </ul>
     
      <p>Как правило, пользователь создает прослушиватель события для этого события в целях выполнения следующих действий:</p>
      <ul>
        <li>В прослушивателе события можно изменять данные, возвращаемые редактором в компонент списка. Например, можно переформатировать данные перед их возвратом в элемент управления List. По умолчанию редактор элементов может возвращать только отдельное значение. Если требуется возврат нескольких значений, необходимо создать прослушиватель события для события <codeph>itemEditEnd</codeph>.</li> 
     
        <li>В прослушивателе события можно просматривать данные, введенные в редактор элементов. Если данные являются неправильными, можно выполнить вызов метода <codeph>preventDefault()</codeph>, что позволит предотвратить возврат новых данных в элемент управления List и закрытие редактора. </li>
      </ul>
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации редактируемого элемента.</entry></row><row><entry><codeph>reason</codeph></entry><entry>Константа, определяющая причину события. Значение должно принадлежать классу <codeph>ListEventReson</codeph>.</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_EDIT_END</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_FOCUS_IN"><apiName>ITEM_FOCUS_IN</apiName><shortdesc>
      Константа ListEvent ITEM_FOCUS_IN определяет значение свойства type объекта ListEvent для события itemFocusIn, указывающего на перемещение фокуса на элемент.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent ITEM_FOCUS_IN определяет значение свойства <codeph>type</codeph> объекта ListEvent для события <codeph>itemFocusIn</codeph>, указывающего на перемещение фокуса на элемент.
     
      <p>Свойства объекта события имеют следующие значения:</p>
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>true</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Экземпляр редактора элементов для редактируемого элемента.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_FOCUS_IN</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_FOCUS_OUT"><apiName>ITEM_FOCUS_OUT</apiName><shortdesc>
      Константа ListEvent.ITEM_FOCUS_OUT определяет значение свойства type объекта ListEvent для события itemFocusOut, указывающего на перемещение фокуса за пределы элемента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_FOCUS_OUT определяет значение свойства <codeph>type</codeph> объекта ListEvent для события <codeph>itemFocusOut</codeph>, указывающего на перемещение фокуса за пределы элемента.
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Экземпляр редактора элементов для редактируемого элемента.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_FOCUS_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_ROLL_OUT"><apiName>ITEM_ROLL_OUT</apiName><shortdesc>
      Константа ListEvent.ITEM_ROLL_OUT определяет значение свойства type объекта ListEvent для события itemRollOut, указывающего, что пользователь переместил указатель мыши за пределы области видимого элемента в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_ROLL_OUT определяет значение свойства <codeph>type</codeph> объекта ListEvent для события <codeph>itemRollOut</codeph>, указывающего, что пользователь переместил указатель мыши за пределы области видимого элемента в элементе управления.
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации, с которого пользователь убрал указатель мыши.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_ROLL_OUT</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:ITEM_ROLL_OVER"><apiName>ITEM_ROLL_OVER</apiName><shortdesc>
      Константа ListEvent.ITEM_ROLL_OVER определяет значение свойства type объекта ListEvent для события itemRollOver, указывающего, что пользователь провел указатель мыши над видимым элементом в элементе управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>itemRollOver</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Константа ListEvent.ITEM_ROLL_OVER определяет значение свойства <codeph>type </codeph> объекта ListEvent для события <codeph>itemRollOver</codeph>, указывающего, что пользователь провел указатель мыши над видимым элементом в элементе управления.
     
      <p>Свойства объекта события имеют следующие значения:</p>
     
      <adobetable class="innertable">
         
         
         
         
         
         
         
         
         
         
      <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>columnIndex</codeph></entry><entry> Отсчитываемый от нуля индекс столбца, связанного с событием.</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>itemRenderer</codeph></entry><entry>Средство визуализации, над которым пользователь провел указатель мыши.</entry></row><row><entry><codeph>reason</codeph></entry><entry>null</entry></row><row><entry><codeph>rowIndex</codeph></entry><entry>Отсчитываемый от нуля индекс элемента, связанного с событием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>Тип</codeph></entry><entry>ListEvent.ITEM_ROLL_OVER</entry></row></tbody></tgroup></adobetable>
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:columnIndex"><apiName>columnIndex</apiName><shortdesc>
      Отсчитываемый от нуля индекс столбца, содержащий средство визуализации элементов, где произошло событие.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Отсчитываемый от нуля индекс столбца, содержащий средство визуализации элементов, где произошло событие.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:itemRenderer"><apiName>itemRenderer</apiName><shortdesc>
      Средство визуализации элементов, где произошло событие.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>mx.controls.listClasses:IListItemRenderer</apiValueClassifier></apiValueDef><apiDesc>
      Средство визуализации элементов, где произошло событие. Это свойств позволяет получать доступ к элементу поставщика данных. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ListEvent:reason"><apiName>reason</apiName><shortdesc>
      Причина, по которой было передано событие itemEditEnd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
      Причина, по которой было передано событие <codeph>itemEditEnd</codeph>. Допустимо только для событий, относящихся к типу <codeph>ITEM_EDIT_END</codeph>. Возможные значения определены в классе ListEventReason.
     
      </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ListEventReason"><linktext>ListEventReason</linktext></link></related-links></apiValue><apiValue id="mx.events:ListEvent:rowIndex"><apiName>rowIndex</apiName><shortdesc>
      Используется в отсчитываемом от нуля индексе строки, содержащей средство визуализации элементов, где произошло событие, или для редактирования событий с индексом элемента, который предполагается редактировать в поставщике данных.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
      Используется в отсчитываемом от нуля индексе строки, содержащей средство визуализации элементов, где произошло событие, или для редактирования событий с индексом элемента, который предполагается редактировать в поставщике данных.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:DateChooserEventDetail"><apiName>DateChooserEventDetail</apiName><shortdesc>
  Константы, определяющие значения свойства detail объекта DateChooserEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Константы, определяющие значения свойства <codeph>detail</codeph> объекта DateChooserEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#DateChooserEvent"><linktext>mx.events.DateChooserEvent</linktext></link></related-links><apiValue id="mx.events:DateChooserEventDetail:NEXT_MONTH"><apiName>NEXT_MONTH</apiName><shortdesc>
	  Указывает, что пользователь прокручивал календарь к следующему месяцу.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>nextMonth</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что пользователь прокручивал календарь к следующему месяцу.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:NEXT_YEAR"><apiName>NEXT_YEAR</apiName><shortdesc>
	  Указывает, что пользователь прокручивал календарь к следующему году.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>nextYear</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что пользователь прокручивал календарь к следующему году.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:PREVIOUS_MONTH"><apiName>PREVIOUS_MONTH</apiName><shortdesc>
	  Указывает, что пользователь прокручивал календарь к предыдущему месяцу.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>previousMonth</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что пользователь прокручивал календарь к предыдущему месяцу.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:DateChooserEventDetail:PREVIOUS_YEAR"><apiName>PREVIOUS_YEAR</apiName><shortdesc>
	  Указывает, что пользователь прокручивал календарь к предыдущему году.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>previousYear</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Указывает, что пользователь прокручивал календарь к предыдущему году.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
  Представляет события, передаваемые при создании или удалении нижестоящего элемента управления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет события, передаваемые при создании или удалении нижестоящего элемента управления. 
  
  </apiDesc></apiClassifierDetail><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_ADD_childAdd"><apiName>childAdd</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_ADD</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE_childRemove"><apiName>childRemove</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:CHILD_REMOVE</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED_overlayCreated"><apiName>overlayCreated</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED</apiEventType><adobeApiEventClassifier>mx.events:ChildExistenceChangedEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ChildExistenceChangedEvent:ChildExistenceChangedEvent"><apiName>ChildExistenceChangedEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>relatedObject</apiItemName><apiType value="flash.display:DisplayObject"/><apiData>null</apiData><apiDesc>Ссылка на нижестоящий созданный или удаленный объект.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_ADD"><apiName>CHILD_ADD</apiName><shortdesc>
	  Константа ChildExistenceChangedEvent.CHILD_ADD определяет значение свойства type объекта события childAdd.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childAdd</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ChildExistenceChangedEvent.CHILD_ADD</codeph> определяет значение свойства <codeph>type </codeph> объекта события <codeph>childAdd</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Содержит ссылку на нижестоящий создаваемый объект.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:CHILD_REMOVE"><apiName>CHILD_REMOVE</apiName><shortdesc>
	  Константа ChildExistenceChangedEvent. CHILD_REMOVE определяет значение свойства type объекта события childRemove.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>childRemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ChildExistenceChangedEvent. CHILD_REMOVE</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>childRemove</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Содержит ссылку на нижестоящий объект, который предполагается удалить.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:OVERLAY_CREATED"><apiName>OVERLAY_CREATED</apiName><shortdesc>
	  Константа ChildExistenceChangedEvent. OVERLAY_CREATED определяет значение свойства type объекта события overlayCreated.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>overlayCreated</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ChildExistenceChangedEvent. OVERLAY_CREATED</codeph> определяет значение свойства <codeph>type</codeph> объекта события <codeph>overlayCreated</codeph>.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
	     
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>relatedObject</codeph></entry><entry>Содержит ссылку на нижестоящий объект, созданный с перекрытием.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ChildExistenceChangedEvent:relatedObject"><apiName>relatedObject</apiName><shortdesc>
	  Ссылка на нижестоящий созданный или удаленный объект.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
	  Ссылка на нижестоящий созданный или удаленный объект.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
  Класс StateChangeEvent представляет событие, передаваемое при изменении свойства currentState компонента.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс StateChangeEvent представляет событие, передаваемое при изменении свойства <codeph>currentState</codeph> компонента.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link><link href="mx.states.xml#State"><linktext>mx.states.State</linktext></link></related-links><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE_currentStateChange"><apiName>currentStateChange</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGE</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING_currentStateChanging"><apiName>currentStateChanging</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:StateChangeEvent:CURRENT_STATE_CHANGING</apiEventType><adobeApiEventClassifier>mx.events:StateChangeEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:StateChangeEvent:StateChangeEvent"><apiName>StateChangeEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>oldState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Имя состояния представления для выходящего компонента.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>newState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Имя состояния представления для входящего компонента.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор. Как правило, вызывается элементом управления Flex и не используется в коде приложения.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGE"><apiName>CURRENT_STATE_CHANGE</apiName><shortdesc>
	  Константа StateChangeEvent.CURRENT_STATE_CHANGE определяет значение свойства type события, передаваемого при изменении состояние представления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа StateChangeEvent.CURRENT_STATE_CHANGE определяет значение свойства <codeph>type</codeph> события, передаваемого при изменении состояние представления. Эта константа имеет значение currentStateChange.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>newState</codeph></entry><entry>Имя введенного состояния представления.</entry></row><row><entry><codeph>oldState</codeph></entry><entry>Имя выходящего состояния представления.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent. CURRENT_STATE_CHANGE</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:CURRENT_STATE_CHANGING"><apiName>CURRENT_STATE_CHANGING</apiName><shortdesc>
	  Константа StateChangeEvent.CURRENT_STATE_CHANGING определяет значение свойства type события, передаваемого перед изменением состояния представления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>currentStateChanging</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа StateChangeEvent.CURRENT_STATE_CHANGING определяет значение свойства <codeph>type</codeph> события, передаваемого перед изменением состояния представления. Эта константа имеет значение currentStateChanging.
	 
	  <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
         
         
         
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>newState</codeph></entry><entry>Имя введенного состояния представления.</entry></row><row><entry><codeph>oldState</codeph></entry><entry>Имя выходящего состояния представления.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row><row><entry><codeph>type</codeph></entry><entry>StateChangeEvent. CURRENT_STATE_CHANGING</entry></row></tbody></tgroup></adobetable>
	 
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:newState"><apiName>newState</apiName><shortdesc>
	  Имя входящего состояния представления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Имя входящего состояния представления.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:StateChangeEvent:oldState"><apiName>oldState</apiName><shortdesc>
	  Имя выходящего состояния представления.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Имя выходящего состояния представления.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEventDirection"><apiName>ScrollEventDirection</apiName><shortdesc>
  Константы для значений свойства direction события ScrollEvent.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Константы для значений свойства <codeph>direction</codeph> события ScrollEvent.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.events.xml#ScrollEvent"><linktext>mx.events.ScrollEvent</linktext></link></related-links><apiValue id="mx.events:ScrollEventDirection:HORIZONTAL"><apiName>HORIZONTAL</apiName><shortdesc>
	  Выполняется прокрутка в горизонтальном направлении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>horizontal</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Выполняется прокрутка в горизонтальном направлении.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEventDirection:VERTICAL"><apiName>VERTICAL</apiName><shortdesc>
	  Выполняется прокрутка в вертикальном направлении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vertical</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Выполняется прокрутка в вертикальном направлении.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.events:ScrollEvent"><apiName>ScrollEvent</apiName><shortdesc>
  Представляет события, передаваемые классом ScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
  Представляет события, передаваемые классом ScrollBar.
 
  </apiDesc></apiClassifierDetail><related-links><link href="mx.core.xml#UIComponent"><linktext>mx.core.UIComponent</linktext></link></related-links><adobeApiEvent id="mx.events:ScrollEvent:SCROLL_scroll"><apiName>scroll</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events:ScrollEvent:SCROLL</apiEventType><adobeApiEventClassifier>mx.events:ScrollEvent</adobeApiEventClassifier><apiDefinedEvent/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="mx.events:ScrollEvent:ScrollEvent"><apiName>ScrollEvent</apiName><shortdesc>
	  Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>Тип события; указывает действие, вызвавшее событие.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, может ли событие передаваться вверх по иерархии списка отображения.
         
          </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Указывает, существует ли возможность предотвращения поведения, связанного с событием.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>detail</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Предоставляет специальную информацию о типе действия прокрутки. Константы для возможных значений предоставляются в классе ScrollEventDetail.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>position</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Новое положение прокрутки.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>direction</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Направление прокрутки – либо <codeph>ScrollEventDirection.HORIZONTAL</codeph>, либо <codeph>ScrollEventDirection.VERTICAL</codeph>.
	 
	  </apiDesc></apiParam><apiParam><apiItemName>delta</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>Изменение в положении прокрутки определяются в пикселах.
	  
	  </apiDesc></apiParam></apiConstructorDef><apiDesc>
	  Конструктор.
	 
	  </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="mx.events:ScrollEvent:SCROLL"><apiName>SCROLL</apiName><shortdesc>
	  Константа ScrollEvent.SCROLL определяет значение свойства type объекта события scroll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
	  Константа <codeph>ScrollEvent.SCROLL</codeph> определяет значение свойства <codeph>type</codeph> объекта события scroll.
	 
     <p>Свойства объекта события имеют следующие значения:</p>
	  <adobetable class="innertable">
	     
         
         
         
 	       
	       
 	       
         
	  <tgroup cols="2"><thead><row><entry>Свойство</entry><entry>Значение</entry></row></thead><tbody><row><entry><codeph>bubbles</codeph></entry><entry>false</entry></row><row><entry><codeph>cancelable</codeph></entry><entry>false</entry></row><row><entry><codeph>currentTarget</codeph></entry><entry>Объект, определяющий прослушиватель события, который выполняет обработку события. Например, если используется <codeph>myButton.addEventListener()</codeph> для регистрации прослушивателя события, значением <codeph>currentTarget</codeph> является myButton. </entry></row><row><entry><codeph>delta</codeph></entry><entry>Содержит изменение в положении прокрутки, выраженное в пикселах. Положительное значение указывает, что прокрутка производилась вниз или направо Отрицательное значение указывает, что прокрутка производилась вверх или налево</entry></row><row><entry><codeph>direction</codeph></entry><entry>Содержит направление прокрутки – либо <codeph>ScrollEventDirection.HORIZONTAL</codeph>, либо <codeph>ScrollEventDirection.VERTICAL</codeph>.</entry></row><row><entry><codeph>position</codeph></entry><entry>Содержит новое положение прокрутки.</entry></row><row><entry><codeph>target</codeph></entry><entry>Объект, отправивший событие. Это не всегда тот объект, который прослушивает событие. Свойство <codeph>currentTarget</codeph> всегда используется для получения доступа к объекту, прослушивающему событие.</entry></row></tbody></tgroup></adobetable>
         
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEvent:delta"><apiName>delta</apiName><shortdesc>
	  Изменение в значении положения прокрутки, определяемое прокруткой.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Изменение в значении положения прокрутки, определяемое прокруткой. Значение выражено в пикселах. Положительное значение указывает, что прокрутка производилась вниз или направо Отрицательное значение указывает, что прокрутка производилась вверх или налево
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="mx.events:ScrollEvent:detail"><apiName>detail</apiName><shortdesc>
	  Предоставляет подробную информацию о действии прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Предоставляет подробную информацию о действии прокрутки. Константы для возможных значений предоставляются в классе ScrollEventDetail.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ScrollEventDetail"><linktext>mx.events. ScrollEventDetail</linktext></link></related-links></apiValue><apiValue id="mx.events:ScrollEvent:direction"><apiName>direction</apiName><shortdesc>
	  Направление движения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
	  Направление движения. Возможные значения – <codeph>ScrollEventDirection.VERTICAL</codeph> или <codeph>ScrollEventDirection.HORIZONTAL</codeph>.
	 
	  </apiDesc></apiValueDetail><related-links><link href="mx.events.xml#ScrollEventDirection"><linktext>mx.events. ScrollEventDirection</linktext></link></related-links></apiValue><apiValue id="mx.events:ScrollEvent:position"><apiName>position</apiName><shortdesc>
	  Новое положение прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef><apiDesc>
	  Новое положение прокрутки.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>