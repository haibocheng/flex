<?xml version="1.0"?>
<apiPackage id="flash.html"><apiName>flash.html</apiName><apiDetail/><apiClassifier id="flash.html:HTMLHistoryItem"><apiName>HTMLHistoryItem</apiName><shortdesc>
 Un objet HTMLHistoryItem décrit un emplacement dans l’historique de navigation d’un objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Un objet HTMLHistoryItem décrit un emplacement dans l’historique de navigation d’un objet HTMLLoader.
 
 </apiDesc></apiClassifierDetail><related-links><link href="HTMLLoader.html"><linktext>HTMLLoader</linktext></link><link href="HTMLWindowCreateOptions.html"><linktext>HTMLWindowCreateOptions</linktext></link></related-links><apiValue id="flash.html:HTMLHistoryItem:isPost:get"><apiName>isPost</apiName><shortdesc>
	Indique si la page HTML comprend des données POST.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
	Indique si la page HTML comprend des données POST.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLHistoryItem:originalUrl:get"><apiName>originalUrl</apiName><shortdesc>
	URL originale de la page HTML, avant toute redirection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	URL originale de la page HTML, avant toute redirection.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLHistoryItem:title:get"><apiName>title</apiName><shortdesc>
	Titre de la page HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	Titre de la page HTML.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLHistoryItem:url:get"><apiName>url</apiName><shortdesc>
	URL de la page HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	URL de la page HTML.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLHost"><apiName>HTMLHost</apiName><shortdesc>
 Un objet HTMLHost définit le comportement d’un objet HTMLLoader pour les éléments de l’interface utilisateur pouvant être contrôlés en définissant divers paramètres ou en appelant diverses méthodes de l’objet window de la page HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Un objet HTMLHost définit le comportement d’un objet HTMLLoader pour les éléments de l’interface utilisateur pouvant être contrôlés en définissant divers paramètres ou en appelant diverses méthodes de l’objet <codeph>window</codeph> de la page HTML. Ces méthodes et propriétés sont :
 
 <ul>
 
 		<li><codeph>window.blur()</codeph></li>
 		<li><codeph>window.focus()</codeph></li>
 		<li><codeph>window.moveBy()</codeph></li>
 		<li><codeph>window.moveTo()</codeph></li>
 		<li><codeph>window.location</codeph></li>
 		<li><codeph>window.close()</codeph></li>
 		<li><codeph>window.open()</codeph></li>
 		<li><codeph>window.resizeBy()</codeph></li>
 		<li><codeph>window.resizeTo()</codeph></li>
 		<li><codeph>window.status</codeph></li>
 		<li><codeph>window.document.title</codeph></li>
 </ul>
 
 <p>Les méthodes de la classe HTMLHost permettent de gérer les modifications apportées à chacun de ces paramètres <codeph>window</codeph>. Pour utiliser cette classe, créez une nouvelle classe (une sous-classe) qui étende la classe HTMLHost et qui remplace les méthodes pour lesquelles vous souhaitez définir des comportements. Les méthodes de la classe HTMLHost gèrent les propriétés et les méthodes JavaScript comme suit :</p>
 
 <adobetable class="innertable">
 
 
 
 
 
 
 
 
 
 <tgroup cols="2"><thead><row><entry>Propriété ou méthode JavaScript</entry><entry>Méthode HTMLHost</entry></row></thead><tbody><row>
 		<entry><codeph>window.blur()</codeph></entry>
 		<entry><codeph>windowBlur()</codeph></entry>
 </row><row>
 		<entry><codeph>window.focus()</codeph></entry>
 		<entry><codeph>windowFocus</codeph></entry>
 </row><row>
 		<entry><codeph>window.location</codeph></entry>
 		<entry><codeph>updateLocation</codeph></entry>
 </row><row>
 		<entry><codeph>window.close()</codeph></entry>
 		<entry><codeph>windowClose</codeph></entry>
 </row><row>
 		<entry><codeph>window.open()</codeph></entry>
 		<entry><codeph>createWindow</codeph></entry>
 </row><row>
 		<entry><codeph>window.status</codeph></entry>
 		<entry><codeph>updateStatus</codeph></entry>
 </row><row>
 		<entry><codeph>window.document.title</codeph></entry>
 		<entry><codeph>updateTitle</codeph></entry>
 </row></tbody></tgroup></adobetable>
 
 <p>Pour répondre aux modifications des méthodes <codeph>window.moveBy()</codeph>, <codeph>window.moveTo()</codeph>, <codeph>window.resizeBy()</codeph> et <codeph>window.resizeTo()</codeph>, remplacez la méthode <codeph>set windowRect()</codeph> dans la sous-classe de HTMLHost.</p>
 
 <p>Chaque objet HTMLHost peut être associé à au moins un objet HTMLLoader. L’affectation d’une occurrence HTMLHost à la propriété <codeph>htmlHost</codeph> de l’objet HTMLLoader établit cette relation. Affecter <codeph>null</codeph> à la propriété <codeph>htmlHost</codeph> de l’objet HTMLLoader ou définir l’objet HTMLHost comme propriété <codeph>htmlHost</codeph> d’un autre objet HTMLLoader supprime l’occurrence HTMLHost du premier objet HTMLLoader.</p>
 
 </apiDesc><example conref="examples\HTMLHost.1.as"> Le code suivant définit CustomHost, une sous-classe de HTMLHost. Les méthodes de la classe CustomHost remplacent les méthodes héritées de la classe HTMLHost pour définir les actions prises lorsque le code JavaScript de la page HTMLLoader définit des propriétés ou appelle des méthodes de l’objet <codeph>window</codeph> :
<codeblock>
package
{
    import flash.html.HTMLHost;
    import flash.html.HTMLLoader;
    import flash.display.NativeWindow;
    import flash.display.NativeWindowInitOptions;
    import flash.display.StageScaleMode;
    import flash.geom.Rectangle;
    import flash.text.TextField;

    public class CustomHost extends HTMLHost
    {
        import flash.html.*;
        public var statusField:TextField;
        public function CustomHost(defaultBehaviors:Boolean=true)
        {
            super(defaultBehaviors);
        }
        override public function windowClose():void
        {
            htmlLoader.stage.window.close();
        }
        override public function createWindow(windowCreateOptions:HTMLWindowCreateOptions):HTMLLoader
        {
            var initOptions:NativeWindowInitOptions = new NativeWindowInitOptions();
            var window:NativeWindow = new NativeWindow(initOptions);
            window.visible = true;
            var htmlLoader2:HTMLLoader = new HTMLLoader();
            htmlLoader2.width = window.width;
            htmlLoader2.height = window.height;
            window.stage.scaleMode = StageScaleMode.NO_SCALE;
            window.stage.addChild(htmlLoader2);
            return htmlLoader2;
        }
        override public function updateLocation(locationURL:String):void
        {
            trace(locationURL);
        }        
        override public function set windowRect(value:Rectangle):void
        {
            htmlLoader.stage.nativeWindow.bounds = value;
        }
        override public function updateStatus(status:String):void
        {
            statusField.text = status;
        }        
        override public function updateTitle(title:String):void
        {
            htmlLoader.stage.nativeWindow.title = title + "- Example Application";
        }
        override public function windowBlur():void
        {
            htmlLoader.alpha = 0.5;
        }
        override public function windowFocus():void
        {
            htmlLoader.alpha = 1;
        }
    }
}
</codeblock> Créez la classe suivante, qui ajoute un objet HTMLLoader sur la scène, ainsi qu’un objet TextField nommé <codeph>statusBar</codeph>. L’objet HTMLLoader définit un objet CustomHost pour sa propriété <codeph>htmlHost</codeph> :
 
 <codeblock>package
 {
     import flash.display.Sprite;
 
     public class SimpleHTMLBox extends Sprite
     {
         import mx.controls.HTML;
         import flash.html.HTMLLoader;
         import flash.text.TextField;
         import flash.net.URLRequest;
         import CustomHost;
         private var host:CustomHost;
         private var statusField:TextField;
         private var html:HTMLLoader;
         
         public function SimpleHTMLBox()
         {
             html = new HTMLLoader();
             var url:String = "Test.html";
             var urlReq:URLRequest = new URLRequest(url); 
             html.load(urlReq);
             
             host = new CustomHost();
             html.htmlHost = host;
             statusField = new TextField();
             host.statusField = statusField;
             
             configureUI();
         }
         private function configureUI():void
         {
             html.width = 400;
             html.height = 200;
             statusField.width = 400;
             statusField.height = 24;
             statusField.border = true;
             statusField.y = 200;
             
             addChild(html);
             addChild(statusField);                
         }
         
     }
 }</codeblock>
 
 <p>Développez une application AIR qui ajoute un objet défini par cette classe sur la scène de la fenêtre principale.</p>
 
 <p>Créez une page HTML nommée Test.html dans le répertoire des ressources de l’application (le répertoire contenant le fichier descripteur d’application), puis ajoutez-y le contenu suivant :</p>
 
 <codeblock>&lt;html>
     &lt;head>
         &lt;title>Test&lt;/title>
     &lt;/head>
     &lt;body>
         &lt;a href="#" onclick="window.open('Test.html')">window.open('Test.html')&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.document.location = 'www.adobe.com'">window.document.location = 'www.adobe.com'&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.moveBy(6, 12)">moveBy(6, 12)&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.close()">window.close()&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.blur()">window.blur()&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.focus()">window.focus()&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.status = new Date().toString()">window.status = new Date().toString()&lt;/a>
     &lt;/body>
 &lt;/html></codeblock>
 
 <p>Lorsque vous testez l’application, la classe CustomHost gère l’interface utilisateur liée aux paramètres JavaScript de la page HTML.</p>
</example></apiClassifierDetail><related-links><link href="HTMLLoader.html"><linktext>HTMLLoader</linktext></link><link href="HTMLWindowCreateOptions.html"><linktext>HTMLWindowCreateOptions</linktext></link></related-links><apiConstructor id="flash.html:HTMLHost:HTMLHost"><apiName>HTMLHost</apiName><shortdesc>
	 Crée un objet HTMLHost.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>defaultBehaviors</apiItemName><apiOperationClassifier>Boolean</apiOperationClassifier><apiData>true</apiData><apiDesc>Indique si les comportements du contenu racine doivent être fournis par défaut.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
	 Crée un objet HTMLHost.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.html:HTMLHost:createWindow"><apiName>createWindow</apiName><shortdesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode window.open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Objet HTMLLoader contenant la nouvelle page HTML. En général, vous créez un nouvel objet HTMLLoader dans cette méthode, vous l’ajoutez sur la scène d’un nouvel objet NativeWindow, puis vous le renvoyez.
	
	</apiDesc><apiOperationClassifier>flash.html:HTMLLoader</apiOperationClassifier></apiReturn><apiParam><apiItemName>windowCreateOptions</apiItemName><apiOperationClassifier>flash.html:HTMLWindowCreateOptions</apiOperationClassifier><apiDesc>Objet contenant les propriétés de la chaîne transmise en tant que paramètre <codeph>features</codeph> de l’appel à la méthode <codeph>window.open()</codeph>.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode <codeph>window.open()</codeph>. 
	
	<p>Par défaut, un appel JavaScript à la méthode <codeph>window.open()</codeph> dans la page HTML d’un objet HTMLLoader n’ouvre <i>pas</i> de nouvel objet NativeWindow dans le moteur d’exécution. Vous pouvez ouvrir un nouvel objet NativeWindow dans le moteur d’exécution en créant un nouvel objet NativeWindow dans la méthode <codeph>createWindow</codeph> remplacée dans la sous-classe de la classe HTMLHost.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:updateLocation"><apiName>updateLocation</apiName><shortdesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader définit la propriété window.location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>locationURL</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Valeur sur laquelle est définie la propriété <codeph>location</codeph> de la propriété <codeph>window</codeph> de l’objet HTMLLoader.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader définit la propriété <codeph>window.location</codeph>. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:updateStatus"><apiName>updateStatus</apiName><shortdesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader définit la propriété window.status.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>status</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Valeur sur laquelle est définie la propriété <codeph>status</codeph> de la propriété <codeph>window</codeph> de l’objet HTMLLoader.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader définit la propriété <codeph>window.status</codeph>. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:updateTitle"><apiName>updateTitle</apiName><shortdesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader définit la propriété window.document.title, ou lorsque l’élément title change, via le DOM ou du fait du chargement d’une nouvelle page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Valeur sur laquelle est définie la propriété <codeph>window.document.title</codeph> de l’objet HTMLLoader.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader définit la propriété <codeph>window.document.title</codeph>, ou lorsque l’élément <codeph>title</codeph> change, via le DOM ou du fait du chargement d’une nouvelle page.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:windowBlur"><apiName>windowBlur</apiName><shortdesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode window.blur().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode <codeph>window.blur()</codeph>.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:windowClose"><apiName>windowClose</apiName><shortdesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode window.close().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode <codeph>window.close()</codeph>. 
	
	<p>Par défaut, un appel JavaScript à la méthode <codeph>window.close()</codeph> dans la page HTML d’un objet HTMLLoader ferme les fenêtres contenant l’objet HTMLLoader.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:windowFocus"><apiName>windowFocus</apiName><shortdesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode window.focus().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	Fonction appelée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode <codeph>window.focus()</codeph>.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.html:HTMLHost:htmlLoader:get"><apiName>htmlLoader</apiName><shortdesc>
	Objet HTMLLoader auquel s’applique cet objet HostControl.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flash.html:HTMLLoader</apiValueClassifier></apiValueDef><apiDesc>
	Objet HTMLLoader auquel s’applique cet objet HostControl. La propriété <codeph>htmlHost</codeph> de cet objet HTMLLoader est définie sur cet objet HostControl.
	
	</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#htmlHost"><linktext>HTMLLoader.htmlHost</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLHost:windowRect:get"><apiName>windowRect</apiName><shortdesc>
	Propriété modifiée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode window.moveBy(), window.moveTo(), window.resizeBy() ou window.resizeTo().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc>
	Propriété modifiée lorsque le code JavaScript de l’objet HTMLLoader appelle la méthode <codeph>window.moveBy()</codeph>, <codeph>window.moveTo()</codeph>, <codeph>window.resizeBy()</codeph> ou <codeph>window.resizeTo()</codeph>. 
	
	<p>Dans la sous-classe de HTMLHost, remplacez la méthode <codeph>set windowRect()</codeph> pour gérer les nouvelles limites de la fenêtre, selon les besoins.</p>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLPDFCapability"><apiName>HTMLPDFCapability</apiName><shortdesc>
	La classe HTMLPDFCapability contient les valeurs possibles de la propriété pdfCapability d’un objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	La classe HTMLPDFCapability contient les valeurs possibles de la propriété <codeph>pdfCapability</codeph> d’un objet HTMLLoader. Elle définit également les valeurs de la propriété <codeph>errorID</codeph> d’un objet ErrorEvent distribué lors d’un échec de tentative de chargement du contenu PDF.
	
	</apiDesc></apiClassifierDetail><related-links><link href="HTMLLoader.html#pdfCapability"><linktext>HTMLLoader.pdfCapability</linktext></link></related-links><apiValue id="flash.html:HTMLPDFCapability:ERROR_CANNOT_LOAD_READER"><apiName>ERROR_CANNOT_LOAD_READER</apiName><shortdesc>
				Le système d’exploitation a renvoyé une erreur lors de la tentative de chargement de l’application Reader ou Adobe Acrobat ou de l’une de leurs bibliothèques nécessaires.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3204</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Le système d’exploitation a renvoyé une erreur lors de la tentative de chargement de l’application Reader ou Adobe Acrobat ou de l’une de leurs bibliothèques nécessaires.
		
              <p><i>Remarque :</i> cette erreur n’est pas renvoyée par <codeph>HTMLLoader.pdfCapability</codeph>, mais en tant que propriété <codeph>errorID</codeph> d’un objet ErrorEvent distribué lorsqu’un objet HTMLLoader tente de charger le contenu PDF et que le système d’exploitation renvoie une erreur. <codeph>HTMLLoader.pdfCapability</codeph> peut renvoyer <codeph>PDFCapability.STATUS_OK</codeph> puisqu’il examine uniquement la configuration et ne tente pas de charger des bibliothèques.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:ERROR_INSTALLED_READER_NOT_FOUND"><apiName>ERROR_INSTALLED_READER_NOT_FOUND</apiName><shortdesc>
				Aucune version d’Adobe Reader n’est détectée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3201</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Aucune version d’Adobe Reader n’est détectée. Un objet HTMLLoader ne peut pas afficher de contenu PDF.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:ERROR_INSTALLED_READER_TOO_OLD"><apiName>ERROR_INSTALLED_READER_TOO_OLD</apiName><shortdesc>
				Adobe Reader a bien été détecté, mais la version est trop ancienne.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3202</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Adobe Reader a bien été détecté, mais la version est trop ancienne. Un objet HTMLLoader ne peut pas afficher de contenu PDF.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:ERROR_PREFERRED_READER_TOO_OLD"><apiName>ERROR_PREFERRED_READER_TOO_OLD</apiName><shortdesc>
				Une version appropriée d’Adobe Reader ou Acrobat (8.1 ou ultérieure) a bien été détectée, mais la version d’Adobe Reader configurée pour gérer le contenu PDF est antérieure à Adobe Reader ou Acrobat 8.1.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3203</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Une version appropriée d’Adobe Reader (8.1 ou ultérieure) ou Acrobat a bien été détectée, mais la version d’Adobe Reader configurée pour gérer le contenu PDF est antérieure à Adobe Reader ou Acrobat 8.1. Un objet HTMLLoader ne peut pas afficher du contenu PDF.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:STATUS_OK"><apiName>STATUS_OK</apiName><shortdesc>
				Une version appropriée d’Adobe Reader (8.1 ou ultérieure) est détectée et le contenu PDF peut être chargé dans un objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Une version appropriée d’Adobe Reader (8.1 ou ultérieure) est détectée et le contenu PDF peut être chargé dans un objet HTMLLoader.
		
				<p><i>Remarque :</i> sous Windows, si une version antérieure d’Acrobat est installée et s’exécute sur le système de l’utilisateur, la version d’Acrobat ou d’Adobe Reader, 7.x ou ultérieure, en cours d’exécution est utilisée même lorsqu’une version ultérieure est installée. Dans ce cas, si la valeur de la propriété <codeph>pdfCapability</codeph> est <codeph>PDFCapability.STATUS_OK</codeph> lorsqu’une application AIR tente de charger le contenu PDF dans un objet HTMLLoader, l’ancienne version d’Acrobat ou d’Adobe Reader affiche une alerte, sans qu’un message d’erreur n’apparaisse dans le moteur d’exécution AIR. Si vos utilisateurs se retrouvent dans cette situation, envisagez de leur demander de fermer Acrobat ou Adobe Reader lorsqu’ils exécutent votre application. Vous pouvez également envisager d’afficher ces instructions si le contenu PDF ne se charge pas dans un délai acceptable.</p>
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLLoader"><apiName>HTMLLoader</apiName><shortdesc>
    La classe HTMLLoader définit un type d’objet d’affichage correspondant à un conteneur du contenu HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.display:Sprite</apiBaseClassifier></apiClassifierDef><apiDesc>
    La classe HTMLLoader définit un type d’objet d’affichage correspondant à un conteneur du contenu HTML. 
	
    <p platform="actionscript">Les dimensions par défaut d’un objet HTMLLoader sont 0 x 0 pixels. Définissez les propriétés <codeph>width</codeph> et <codeph>height</codeph> pour que l’objet HTMLLoader devienne visible.</p>
	
    	<p platform="actionscript">
	La taille maximale d’un objet HTMLLoader est de 2 880 pixels de haut sur 2 880 pixels de large. Si vous définissez la propriété <codeph>width</codeph> ou <codeph>height</codeph> d’un objet HTMLLoader sur une valeur supérieure à cette limite, l’objet HTMLLoader renvoie une exception ArgumentError.
	</p>
	
	<p platform="javascript">Dans JavaScript, vous pouvez accéder à l’objet HTMLLoader d’une page HTML en obtenant la propriété <codeph>runtime.htmlLoader</codeph>. Cette propriété n’est disponible que pour le contenu s’exécutant dans le sandbox de sécurité de l’application.</p>
	
	<p platform="javascript">De nombreuses propriétés et méthodes HTMLLoader héritées d’autres classes appartiennent aux objets HTMLLoader s’exécutant dans des fichiers SWF (qui utilisent la liste d’affichage d’ActionScript 3.0). Ces propriétés et méthodes ne sont pas aussi utiles au code JavaScript s’exécutant dans des applications AIR basées sur HTML. Pour plus d’informations sur ces propriétés et méthodes, voir le <xref href="http://www.adobe.com/go/learn_flex3_aslr_fr" scope="external">Guide de référence du langage ActionScript 3.0</xref>.</p>
	
    </apiDesc><example conref="examples\HTMLLoader.1.as"> Le code suivant initialise un objet HTMLLoader, configure ses propriétés width et height, charge l’URL http://www.adobe.com et ajoute l’objet dans la liste d’affichage :
<codeblock>
package {
    import flash.display.Sprite;
    import flash.html.HTMLLoader;
    import flash.net.URLRequest;

    public class HTMLLoaderExample extends Sprite
    {
        public function HTMLLoaderExample()
        {
            var html:HTMLLoader = new HTMLLoader();
            var urlReq:URLRequest = new URLRequest("http://www.adobe.com/");
            html.width = stage.stageWidth;
            html.height = stage.stageHeight;
            html.load(urlReq); 
            addChild(html);
        }
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.HTML_DOM_INITIALIZE_htmlDOMInitialize"><apiName>htmlDOMInitialize</apiName><shortdesc>
 Signale que le DOM HTML a été créé en réponse à une opération de chargement.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_DOM_INITIALIZE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Signale que le DOM HTML a été créé en réponse à une opération de chargement. Les méthodes <codeph>load()</codeph> et <codeph>loadString()</codeph> de l’objet HTMLLoader renvoient une exception lorsque cet événement est distribué. Toute propriété ou méthode d’un objet JavaScript accessible depuis la propriété <codeph>window</codeph> de l’objet HTMLLoader qui contrôle l’URL chargée dans cet objet HTMLLoader renvoie une exception lorsqu’elle est définie ou appelée pendant le déclenchement de cet événement. Par exemple la définition de <codeph>window.location</codeph> via la propriété <codeph>window</codeph> de l’objet HTMLLoader résulte en une exception JavaScript.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION_uncaughtScriptException"><apiName>uncaughtScriptException</apiName><shortdesc>
 Signale qu’une exception JavaScript non interceptée s’est produite dans l’objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION</apiEventType><adobeApiEventClassifier>flash.events.HTMLUncaughtScriptExceptionEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Signale qu’une exception JavaScript non interceptée s’est produite dans l’objet HTMLLoader. Les gestionnaires d’événement peuvent appeler toute méthode ou accéder à toute propriété de l’objet HTMLLoader. L’événement peut être annulé et le comportement par défaut lors d’une exécution dans l’application de débogage du lanceur AIR consiste à envoyer la pile JavaScript pour effectuer le suivi du résultat.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
 Signale que la propriété scrollH ou scrollV a été modifiée par l’objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.SCROLL</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Signale que la propriété <codeph>scrollH</codeph> ou <codeph>scrollV</codeph> a été modifiée par l’objet HTMLLoader. L’objet HTMLLoader distribue cet événement lorsque le code JavaScript s’exécutant dans l’objet HTMLLoader invoque la méthode <codeph>scrollTo()</codeph> de l’objet <codeph>window</codeph> et que l’emplacement désiré n’est pas encore visible. L’événement n’est pas déclenché lorsque le code ActionScript modifie la propriété <codeph>scrollH</codeph> ou <codeph>scrollV</codeph>. Les gestionnaires d’événement peuvent appeler n’importe quelle méthode ou accéder à n’importe quelle propriété de l’objet HTMLLoader. 
 
 <p>Les gestionnaires de cet événement peuvent vérifier les propriétés <codeph>scrollH</codeph> et <codeph>scrollV</codeph> pour mettre à jour les barres de défilement associées à l’objet HTMLLoader.</p>
 
 <p>L’objet HTMLLoader peut déclencher cet événement à tout moment après l’initiation d’une opération de chargement, même après que l’objet ait déclenché l’événement <codeph>complete</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.HTML_BOUNDS_CHANGE_htmlBoundsChange"><apiName>htmlBoundsChange</apiName><shortdesc>
 Signale que l’une des propriétés contentWidth et contentHeight, ou les deux, ont été modifiées.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_BOUNDS_CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Signale que l’une des propriétés <codeph>contentWidth</codeph> et <codeph>contentHeight</codeph>, ou les deux, ont été modifiées. Cela peut être le résultat du chargement d’une nouvelle image ou d’un autre contenu, par exemple. Les gestionnaires d’événement peuvent appeler n’importe quelle méthode ou accéder à n’importe quelle propriété de l’objet HTMLLoader. 
 
 <p>L’objet HTMLLoader peut déclencher cet événement à tout moment après l’initiation d’une opération de chargement, même après que l’objet ait déclenché l’événement <codeph>complete</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#contentWidth"><linktext>contentWidth</linktext></link><link href="HTMLLoader.html#contentHeight"><linktext>contentHeight</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.LOCATION_CHANGE_locationChange"><apiName>locationChange</apiName><shortdesc>
 Signale que la propriété location de l’objet HTMLLoader a été modifiée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.LOCATION_CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>Signale que la propriété location de l’objet HTMLLoader a été modifiée.
 
 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
 Signale que la propriété <codeph>location</codeph> de l’objet HTMLLoader a été modifiée. Le gestionnaire de cet événement peut appeler toute méthode ou accéder à toute propriété de l’objet HTMLLoader.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.HTML_RENDER_htmlRender"><apiName>htmlRender</apiName><shortdesc>
 Signale que le rendu du contenu de l’objet HTMLLoader est entièrement à jour.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_RENDER</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Signale que le rendu du contenu de l’objet HTMLLoader est entièrement à jour. Cet événement peut être déclenché assez fréquemment, à chaque modification du rendu du contenu HTML. Par exemple, cet événement est déclenché lorsqu’un nouveau contenu apparaît car l’utilisateur a cliqué sur un lien ou lorsque le code JavaScript de la page est restitué sous forme HTML. Les écouteurs d’événement peuvent appeler toute méthode ou accéder à toute propriété de l’objet HTMLLoader. 
 
 <p>Les gestionnaires de cet événement peuvent vérifier les propriétés <codeph>contentWidth</codeph> et <codeph>contentHeight</codeph> de l’objet HTMLLoader pour mettre à jour ses barres de défilement.</p>
 
 <p>L’objet HTMLLoader peut déclencher cet événement à tout moment après l’initiation d’une opération de chargement, même après que l’objet ait déclenché l’événement <codeph>complete</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
 Signale que la dernière opération de chargement demandée par la méthode loadString ou load est terminée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Signale que la dernière opération de chargement demandée par la méthode <codeph>loadString</codeph> ou <codeph>load</codeph> est terminée. L’événement est déclenché <i>après</i> que l’événement <codeph>load</codeph> JavaScript ait été déclenché sur le DOM HTML dans l’objet HTMLLoader. Cet événement est toujours distribué de façon asynchrone. Le gestionnaire de cet événement peut appeler toute méthode ou accéder à toute propriété de l’objet HTMLLoader.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.html:HTMLLoader:HTMLLoader"><apiName>HTMLLoader</apiName><shortdesc>
        Crée un objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
        Crée un objet HTMLLoader. 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.html:HTMLLoader:cancelLoad"><apiName>cancelLoad</apiName><shortdesc>
		 Annule les opérations de chargement en cours.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Annule les opérations de chargement en cours.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLLoader:createRootWindow"><apiName>createRootWindow</apiName><shortdesc>
         Crée un nouvel objet NativeWindow contenant un objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Nouvel objet HTMLLoader situé sur la scène du nouvel objet NativeWindow.
		 
		 </apiDesc><apiOperationClassifier>flash.html:HTMLLoader</apiOperationClassifier></apiReturn><apiParam><apiItemName>visible</apiItemName><apiOperationClassifier>Boolean</apiOperationClassifier><apiData>true</apiData><apiDesc>Spécifie si la fenêtre est visible.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>windowInitOptions</apiItemName><apiOperationClassifier>flash.display:NativeWindowInitOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Spécifie les options d’initialisation de la fenêtre ; si <codeph>null</codeph> utilise les valeurs <codeph>NativeWindowInitOptions</codeph> par défaut.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>scrollBarsVisible</apiItemName><apiOperationClassifier>Boolean</apiOperationClassifier><apiData>true</apiData><apiDesc>Indique si la fenêtre fournit des barres de défilement.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>bounds</apiItemName><apiOperationClassifier>flash.geom:Rectangle</apiOperationClassifier><apiData>null</apiData><apiDesc>Si non <codeph>null</codeph>, spécifie les limites de la fenêtre. Si l’un des paramètres <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> ou <codeph>height</codeph> est <codeph>NaN</codeph>, la dimension correspondante de la fenêtre conserve sa valeur par défaut.
		 
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Crée un nouvel objet NativeWindow contenant un objet HTMLLoader. Utilisez l’objet HTMLLoader renvoyé par cette méthode pour charger du contenu HTML.
		 
		 <p>Par défaut, (lorsque vous ne définissez pas de paramètres lors de l’appel à cette méthode), la nouvelle fenêtre utilise le chrome système standard et comprend des contrôles de barres de défilement pour le contenu. Vous pouvez définir les paramètres pour modifier les propriétés de la nouvelle fenêtre.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLLoader:getHistoryAt"><apiName>getHistoryAt</apiName><shortdesc>
		 Renvoie l’entrée de l’historique à la position spécifiée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Objet URLRequest pour l’entrée de l’historique à la position spécifiée.
		 
		 </apiDesc><apiOperationClassifier>flash.html:HTMLHistoryItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>position</apiItemName><apiOperationClassifier>uint</apiOperationClassifier><apiDesc>Position dans la liste de l’historique.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Renvoie l’entrée de l’historique à la position spécifiée.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:historyBack"><apiName>historyBack</apiName><shortdesc>
		 Revient en arrière dans l’historique du navigateur, si possible.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Revient en arrière dans l’historique du navigateur, si possible.
		 
         <p>Un appel à cette méthode de l’objet HTMLLoader revient à appeler la méthode <codeph>back()</codeph> de la propriété <codeph>window.history</codeph> dans le code JavaScript de la page HTML.</p>
		 
		 <p>Cette fonction ne renvoie pas d’erreur.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:historyForward"><apiName>historyForward</apiName><shortdesc>
		 Avance dans l’historique du navigateur, si possible.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Avance dans l’historique du navigateur, si possible.
		 
         <p>Un appel à cette méthode de l’objet HTMLLoader revient à appeler la méthode <codeph>forward()</codeph> de la propriété <codeph>window.history</codeph> dans le code JavaScript de la page HTML.</p>
		 
		 <p>Cette fonction ne renvoie pas d’erreur.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:historyGo"><apiName>historyGo</apiName><shortdesc>
		 Navigue parmi le nombre d’étapes spécifiées dans l’historique du navigateur.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>steps</apiItemName><apiOperationClassifier>int</apiOperationClassifier><apiDesc>Nombre d’étapes dans la liste de l’historique à parcourir vers l’avant (positif) ou vers l’arrière (négatif).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Navigue parmi le nombre d’étapes spécifiées dans l’historique du navigateur. Navigue vers l’avant si positif, vers l’arrière si négatif. Une navigation par zéro impose un nouveau chargement.
		 
		 <p>Cette méthode équivaut à appeler la méthode <codeph>go()</codeph> de la propriété <codeph>window.history</codeph> dans le code JavaScript de la page HTML.</p>
		 
		 <p>Cette fonction ne renvoie pas d’erreur.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:load"><apiName>load</apiName><shortdesc>
         Charge l’objet HTMLLoader avec les données provenant du site spécifié par le paramètre urlRequestToLoad.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>urlRequestToLoad</apiItemName><apiOperationClassifier>flash.net:URLRequest</apiOperationClassifier><apiDesc>Objet URLRequest contenant des informations sur l’URL à charger. En plus de l’URL à charger, un objet URLRequest contient les propriétés qui définissent la méthode de soumission du formulaire HTTP (GET ou POST), toutes les données à transmettre avec la requête et les en-têtes de la requête.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
         Charge l’objet HTMLLoader avec les données provenant du site spécifié par le paramètre <codeph>urlRequestToLoad</codeph>. Un appel à cette méthode définit initialement la propriété <codeph>loaded</codeph> sur <codeph>false</codeph>. Cette méthode déclenche une opération qui se termine toujours de façon asynchrone.
		 
		 <p>Un appel à cette méthode annule implicitement toute opération de chargement en attente et initiée précédemment avec cette méthode ou avec la méthode <codeph>loadString()</codeph>. L’événement <codeph>complete</codeph> de l’opération de chargement précédente ne sera jamais distribué.</p>
		 
		 <p>Il est possible que l’événement <codeph>complete</codeph> ne soit jamais distribué. Cela arrive lorsque le contenu HTML chargé dans l’objet HTMLLoader n’est jamais entièrement téléchargé. Ceci peut se produire si le contenu HTML fait référence à une URL qui dirige vers un script CGI générant du contenu indéfiniment et répétitivement.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flash.net.xml#URLRequest"><linktext>flash.net.URLRequest</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:loadString"><apiName>loadString</apiName><shortdesc>
         Charge l’objet HTMLLoader avec le contenu HTML renfermé dans la chaîne HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>htmlContent</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Chaîne contenant le contenu HTML à charger dans l’objet HTMLLoader.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
         Charge l’objet HTMLLoader avec le contenu HTML renfermé dans la chaîne HTML. Lorsque la restitution du code HTML de la chaîne est terminé, l’événement <codeph>complete</codeph> est déclenché. L’événement <codeph>complete</codeph> est toujours distribué de façon asynchrone.
		 
		 <p>Un appel à cette méthode annule implicitement toute opération de chargement en attente et initiée précédemment avec cette méthode ou avec la méthode <codeph>load</codeph>. L’événement <codeph>complete</codeph> de l’opération de chargement précédente ne sera jamais distribué.</p>
		 
		 <p>Si le code HTML spécifié dans la chaîne ne fait pas référence à des ressources externes, cette méthode restitue le code HTML de façon synchrone. Toutefois, l’événement <codeph>complete</codeph> est toujours distribué de façon asynchrone. Si la propriété <codeph>loaded</codeph> de cette classe est <codeph>true</codeph> immédiatement après un appel à cette fonction, le contenu HTML spécifié dans l’argument <codeph>htmlContent</codeph> a été restitué de façon synchrone.</p>
		 
		 <p>Il est possible que l’événement <codeph>complete</codeph> ne soit jamais distribué. Cela arrive lorsque le contenu HTML chargé dans l’objet HTMLLoader n’est jamais entièrement téléchargé. Ceci peut se produire si le contenu HTML fait référence à une URL qui dirige vers un script CGI générant du contenu indéfiniment et répétitivement.</p>
		 
		 <p>Le contenu chargé à l’aide de la méthode <codeph>loadString()</codeph> est placé dans le sandbox de sécurité de l’application uniquement si la propriété <codeph>placeLoadStringContentInApplicationSandbox</codeph> est définie sur <codeph>true</codeph>.</p>
		 
         </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#placeLoadStringContentInApplicationSandbox"><linktext>placeLoadStringContentInApplicationSandbox</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:reload"><apiName>reload</apiName><shortdesc>
		 Recharge la page à partir de l’emplacement en cours.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Recharge la page à partir de l’emplacement en cours.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.html:HTMLLoader:authenticate:get"><apiName>authenticate</apiName><shortdesc>
		Spécifie si les requêtes d’authentification doivent être gérées (true) ou non (false) pour les requêtes HTTP publiées par cet objet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.authenticate
		
        </apiDefaultValue></apiValueDef><apiDesc>
		Spécifie si les requêtes d’authentification doivent être gérées (<codeph>true</codeph>) ou non (<codeph>false</codeph>) pour les requêtes HTTP publiées par cet objet. Si la valeur est <codeph>false</codeph>, les requêtes d’authentification renvoient une erreur HTTP.  
		
        </apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/authenticate"><linktext>flash.net.URLRequest.authenticate</linktext></link><link href="flash.net.xml#URLRequestDefaults/authenticate"><linktext>flash.net.URLRequestDefaults.authenticate</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:cacheResponse:get"><apiName>cacheResponse</apiName><shortdesc>
		Spécifie si les données de réponse doivent être mises en cache pour les requêtes HTTP publiées par cet objet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.cacheResponse
		
        </apiDefaultValue></apiValueDef><apiDesc>
		Spécifie si les données de réponse doivent être mises en cache pour les requêtes HTTP publiées par cet objet. Si cette propriété est définie sur <codeph>true</codeph>, l’objet HTMLLoader utilise le cache HTTP du système d’exploitation.
		
        </apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequestDefaults/cacheResponse"><linktext>flash.net.URLRequestDefaults.cacheResponse</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
		 Hauteur, en pixels, du contenu HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Hauteur, en pixels, du contenu HTML. Cette propriété peut changer lorsque les dimensions de l’objet HTMLLoader sont modifiées. Par exemple, une page HTML utilise souvent la totalité de la hauteur de l’objet HTMLLoader, et la propriété <codeph>contentHeight</codeph> peut changer si vous modifiez la hauteur de l’objet HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
		 Largeur, en pixels, du contenu HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Largeur, en pixels, du contenu HTML. Cette propriété peut changer lorsque les dimensions de l’objet HTMLLoader sont modifiées. Par exemple, une page HTML utilise souvent la totalité de la largeur de l’objet HTMLLoader, et la propriété <codeph>contentWidth</codeph> peut changer si vous modifiez la largeur de l’objet HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:hasFocusableContent:get"><apiName>hasFocusableContent</apiName><shortdesc>
		Indique si tout contenu de l’objet HTMLLoader peut recevoir le focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		Indique si tout contenu de l’objet HTMLLoader peut recevoir le focus. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:height:set"><apiName>height</apiName><shortdesc>
		 Spécifie la hauteur du rectangle des canevas HTML restitués.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Spécifie la hauteur du rectangle des canevas HTML restitués. Il s’agit de la hauteur de l’objet d’affichage HTMLLoader, en pixels. Si cette propriété est modifiée, l’objet HTMLLoader restitue à nouveau le document HTML. La modification de cette propriété peut entraîner le déclenchement d’événements <codeph>htmlBoundsChanged</codeph>. Lorsque vous définissez la propriété <codeph>width</codeph> ou <codeph>height</codeph> d’un objet HTMLLoader, les limites de l’objet changent, mais son contenu n’est pas mis à l’échelle (comme dans le cas des autres types d’objets d’affichage).
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:historyLength:get"><apiName>historyLength</apiName><shortdesc>
		 Longueur totale de la liste de l’historique, avec les entrées précédentes et suivantes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>uint</apiValueClassifier></apiValueDef><apiDesc>
		 Longueur totale de la liste de l’historique, avec les entrées précédentes et suivantes. Cette propriété a la même valeur que la propriété JavaScript <codeph>window.history.length</codeph> de la page HTML.
		 
		 </apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:historyPosition:get"><apiName>historyPosition</apiName><shortdesc>
		 Position actuelle dans la liste de l’historique.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>uint</apiValueClassifier></apiValueDef><apiDesc>
		 Position actuelle dans la liste de l’historique. La liste de l’historique correspond à l’objet <codeph>window.history</codeph> de la page HTML. Les entrées inférieures à la position actuelle sont les entrées « précédentes » de la liste ; les entrées supérieures sont les entrées « suivantes ». Lorsque vous tentez de définir la position au-delà de la fin, elle est définie sur la fin.
		 
		 </apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#getHistoryAt()"><linktext>getHistoryAt()</linktext></link><link href="HTMLLoader.html#historyBack()"><linktext>historyBack()</linktext></link><link href="HTMLLoader.html#historyGo()"><linktext>historyGo()</linktext></link><link href="HTMLLoader.html#historyForward()"><linktext>historyForward()</linktext></link><link href="HTMLLoader.html#historyLength"><linktext>historyLength</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:htmlHost:get"><apiName>htmlHost</apiName><shortdesc>
		Objet HTMLHost employé pour gérer les modifications apportées à certains éléments de l’interface utilisateur, par exemple à la propriété window.document.title de l’objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.html:HTMLHost</apiValueClassifier><apiTipTexts><apiTipText>Objet HTMLHost employé pour gérer les modifications apportées à certains éléments de l’interface utilisateur, par exemple à la propriété window.document.title de l’objet HTMLLoader.
		
		</apiTipText></apiTipTexts></apiValueDef><apiDesc>
		Objet HTMLHost employé pour gérer les modifications apportées à certains éléments de l’interface utilisateur, par exemple à la propriété <codeph>window.document.title</codeph> de l’objet HTMLLoader. <ph platform="javascript">Cette propriété ne s’applique qu’au contenu SWF qui utilise la classe HTMLLoader ; elle n’est pas utile pour le code JavaScript.</ph> <ph platform="actionscript">Pour remplacer les comportements par défaut de l’objet HTMLLoader, créez une sous-classe de la classe HTMLHost et remplacez ses fonctions de membre pour gérer les différentes modifications de l’interface utilisateur apportées au contenu HTML.</ph>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLHost.html"><linktext>Classe HTMLHost</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:loaded:get"><apiName>loaded</apiName><shortdesc>
		 Indique si l’événement JavaScript load correspondant à l’appel précédent de la méthode load() ou loadString() a été délivré au DOM HTML dans l’objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		 Indique si l’événement JavaScript load correspondant à l’appel précédent de la méthode <codeph>load()</codeph> ou <codeph>loadString()</codeph> a été délivré au DOM HTML dans l’objet HTMLLoader. Cette propriété est <codeph>true</codeph> avant le déclenchement de l’événement <codeph>complete</codeph>. Il est possible que cette propriété ne devienne jamais <codeph>true</codeph>. Cela se produit comme lorsque l’événement <codeph>complete</codeph> n’est jamais déclenché.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:location:get"><apiName>location</apiName><shortdesc>
        URL du contenu chargé dans l’objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
        URL du contenu chargé dans l’objet HTMLLoader. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:manageCookies:get"><apiName>manageCookies</apiName><shortdesc>
		Spécifie si la pile de protocoles HTTP doit gérer les cookies pour cet objet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.manageCookies
		
		</apiDefaultValue></apiValueDef><apiDesc>
		Spécifie si la pile de protocoles HTTP doit gérer les cookies pour cet objet. Si la valeur <codeph>true</codeph> est définie, les cookies sont ajoutés à la requête et les cookies de réponse sont mémorisés. Si la valeur est <codeph>false</codeph>, les cookies ne sont <i>pas</i> ajoutés à la requête et les cookies de réponse ne sont <i>pas</i> mémorisés. 
		
		</apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/manageCookies"><linktext>flash.net.URLRequest.manageCookies</linktext></link><link href="flash.net.xml#URLRequestDefaults/manageCookies"><linktext>flash.net.URLRequestDefaults.manageCookies</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:navigateInSystemBrowser:get"><apiName>navigateInSystemBrowser</apiName><shortdesc>
		Indique si la navigation de l’image racine du contenu HTML (par exemple lorsque l’utilisateur clique sur un lien, lorsque la propriété window.location est définie ou lors d’un appel à window.open()) entraîne une navigation dans l’objet HTMLLoader (false) ou dans le navigateur Web par défaut du système (true).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>false
		
		</apiDefaultValue><apiTipTexts><apiTipText>Indique si la navigation de l’image racine du contenu HTML entraîne une navigation dans l’objet HTMLLoader (false) ou dans le navigateur Web par défaut du système (true).
		
		</apiTipText></apiTipTexts></apiValueDef><apiDesc>
		Indique si la navigation de l’image racine du contenu HTML (par exemple lorsque l’utilisateur clique sur un lien, lorsque la propriété <codeph>window.location</codeph> est définie ou lors d’un appel à <codeph>window.open()</codeph>) entraîne une navigation dans l’objet HTMLLoader (<codeph>false</codeph>) ou dans le navigateur Web par défaut du système (<codeph>true</codeph>). Définissez cette propriété sur <codeph>true</codeph> pour que toute la navigation se produise dans le navigateur Web du système (pas dans l’objet HTMLLoader).
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:paintsDefaultBackground:set"><apiName>paintsDefaultBackground</apiName><shortdesc>
        Spécifie si l’arrière-plan du document HTMLLoader est blanc opaque (true) ou non (false).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiTipTexts><apiTipText>Détermine si l’arrière-plan du document HTMLLoader est blanc opaque (true) ou non (false). 
		
		</apiTipText></apiTipTexts></apiValueDef><apiDesc>
        Spécifie si l’arrière-plan du document HTMLLoader est blanc opaque (<codeph>true</codeph>) ou non (<codeph>false</codeph>). Lorsque cette propriété est définie sur <codeph>false</codeph>, l’objet HTMLLoader utilise son conteneur d’objet d’affichage comme arrière-plan pour le code HTML et utilise l’opacité (valeur <codeph>alpha</codeph>) du conteneur d’objet d’affichage comme arrière-plan HTML. Toutefois, si l’élément <codeph>body</codeph> ou tout autre élément du document HTML a une couleur d’arrière-plan opaque (spécifiée par <codeph>style="background-color:gray"</codeph>, par exemple), cette partie du rendu HTML utilise la couleur d’arrière-plan opaque spécifiée.
		
        </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:pdfCapability:get"><apiName>pdfCapability</apiName><shortdesc>
		 Type de prise en charge PDF dans le système de l’utilisateur, définie sous forme de valeur de code d’entier.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
		 Type de prise en charge PDF dans le système de l’utilisateur, définie sous forme de valeur de code d’entier. Un objet HTMLLoader ne peut afficher du contenu PDF que si la valeur de cette propriété est <codeph>PDFCapability.STATUS_OK</codeph>. La classe PDFCapability définit des constantes pour les valeurs possibles de la propriété <codeph>pdfCapability</codeph>, comme suit :
		 
		 <adobetable class="innertable">
		 
		 	
		 
		 	
		 
		 	
		 
		 	
		 
		 	
		 
		 <tgroup cols="2"><thead><row><entry>Constante PDFCapability</entry><entry>Signification</entry></row></thead><tbody><row>
		 		<entry><codeph>STATUS_OK</codeph></entry>
		 		<entry>Une version appropriée d’Acrobat ou Adobe Reader (8.1 ou ultérieure) est détectée et le contenu PDF peut être chargé dans un objet HTMLLoader.
		 
		 		<p><i>Remarque :</i> sous Windows, si une version Acrobat ou Adobe Reader 7.x ou antérieure est en cours d’exécution sur le système de l’utilisateur, cette version est utilisée même lorsqu’une version ultérieure prenant en charge le chargement PDF dans un objet HTMLLoader est installée. Dans ce cas, si la valeur de la propriété <codeph>pdfCapability</codeph> est <codeph>PDFCapability.STATUS_OK</codeph>, lorsqu’une application AIR tente de charger du contenu PDF, l’ancienne version d’Acrobat ou d’Adobe Reader affiche une alerte, sans qu’un message d’erreur n’apparaisse dans le moteur d’exécution AIR. Si vos utilisateurs se retrouvent dans cette situation, envisagez de leur demander de fermer Acrobat ou Adobe Reader lorsqu’ils exécutent votre application. Vous pouvez également envisager d’afficher ces instructions si le contenu PDF ne se charge pas dans un délai acceptable.</p></entry>
		 	</row><row>
		 		<entry><codeph>ERROR_INSTALLED_READER_NOT_FOUND</codeph></entry>
		 		<entry>Aucune version d’Acrobat ou d’Adobe Reader n’est détectée. Un objet HTMLLoader ne peut pas afficher de contenu PDF.</entry>
		 	</row><row>
		 		<entry><codeph>ERROR_INSTALLED_READER_TOO_OLD</codeph></entry>
		 		<entry>Acrobat ou Adobe Reader a bien été détecté, mais la version est trop ancienne. Un objet HTMLLoader ne peut pas afficher de contenu PDF.</entry>
		 	</row><row>
		 		<entry><codeph>ERROR_PREFERED_READER_TOO_OLD</codeph></entry>
		 		<entry>Une version appropriée d’Acrobat ou d’Adobe Reader (8.1 ou ultérieure) a bien été détectée, mais la version configurée pour gérer le contenu PDF est antérieure à 8.1. Un objet HTMLLoader ne peut pas afficher de contenu PDF.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
 		 </apiDesc></apiValueDetail><related-links><link href="HTMLPDFCapability.html"><linktext>Classe HTMLPDFCapability</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:placeLoadStringContentInApplicationSandbox:get"><apiName>placeLoadStringContentInApplicationSandbox</apiName><shortdesc>
		Spécifie si le contenu chargé via la méthode loadString() est placé dans le sandbox de l’application (true) ou dans un sandbox non-applicatif (false).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>false
		
		</apiDefaultValue></apiValueDef><apiDesc>
		Spécifie si le contenu chargé à l’aide de la méthode <codeph>loadString()</codeph> est placé dans le sandbox de l’application (<codeph>true</codeph>) ou dans un sandbox non-applicatif (<codeph>false</codeph>).
		
		<p>Lorsque cette propriété est définie sur <codeph>false</codeph>, le contenu chargé à l’aide de la méthode <codeph>loadString()</codeph> est placé dans un sandbox non-applicatif avec les caractéristiques suivantes :</p>
		
		<ul>
			<li>Il est autorisé à charger du contenu depuis le réseau (mais pas depuis le système de fichiers).</li>
			<li>Il ne peut pas charger des données à l’aide de XMLHttpRequest.</li>
		<li>La propriété <codeph>window.location</codeph> est définie sur <codeph>"about:blank"</codeph>.</li>
		<li>Le contenu ne peut pas accéder à la propriété <codeph>window.runtime</codeph> (comme le contenu se trouvant dans un sandbox non-applicatif).</li>
		</ul>
		
		<p>Lorsque cette propriété est définie sur <codeph>true</codeph>, le contenu chargé à l’aide de la méthode <codeph>loadString()</codeph> est placé dans le sandbox de l’application et peut accéder à la propriété <codeph>window.runtime</codeph>, ainsi qu’à toutes les API d’AIR. Vérifiez la fiabilité de la source de données d’une chaîne utilisée lors d’un appel à la méthode <codeph>loadString()</codeph>. Les instructions de code dans la chaîne HTML sont exécutées avec des privilèges d’application complets lorsque cette propriété est définie sur <codeph>true</codeph>. Définissez cette propriété sur <codeph>true</codeph> uniquement si vous êtes certain que la chaîne ne contient aucun code néfaste. </p>
		
		<p>Dans les applications compilées avec les kits de développement AIR 1.0 ou AIR 1.1, le contenu chargé à l’aide de la méthode <codeph>loadString()</codeph> est placé dans le sandbox de l’application.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:runtimeApplicationDomain:get"><apiName>runtimeApplicationDomain</apiName><shortdesc>
		 Domaine d’application à utiliser pour l’objet window.runtime dans le code JavaScript de la page HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.system:ApplicationDomain</apiValueClassifier><apiException><apiDesc>Si l’objet ApplicationDomain ne provient pas du domaine de sécurité de l’appelant.
		 
         </apiDesc><apiItemName>SecurityError</apiItemName><apiOperationClassifier>SecurityError</apiOperationClassifier></apiException><apiTipTexts><apiTipText>Domaine d’application à utiliser pour l’objet window.runtime dans le code JavaScript de la page HTML.
		 
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Domaine d’application à utiliser pour l’objet <codeph>window.runtime</codeph> dans le code JavaScript de la page HTML. <ph platform="javascript">Cette propriété ne s’applique qu’au contenu SWF qui utilise la classe HTMLLoader ; elle n’est pas utile dans le code JavaScript.</ph>
		 
		 <p platform="actionscript">Si cette propriété est <codeph>null</codeph>, ou si le contenu HTML provient d’un autre domaine de sécurité que le contenu SWF contenant l’objet HTMLLoader, la page utilise un domaine d’application par défaut comme domaine.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flash.system.xml#ApplicationDomain"><linktext>flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain"><linktext>flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:scrollH:get"><apiName>scrollH</apiName><shortdesc>
         Position de défilement horizontal du contenu HTML dans l’objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
         Position de défilement horizontal du contenu HTML dans l’objet HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:scrollV:get"><apiName>scrollV</apiName><shortdesc>
         Position de défilement vertical du contenu HTML dans l’objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
         Position de défilement vertical du contenu HTML dans l’objet HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:textEncodingFallback:set"><apiName>textEncodingFallback</apiName><shortdesc>
        Codage de caractères utilisé par le contenu HTMLLoader lorsque la page HTML ne spécifie aucun codage de caractères.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
        Codage de caractères utilisé par le contenu HTMLLoader lorsque la page HTML ne spécifie aucun codage de caractères. Une page HTML définit le codage de caractères dans une balise <codeph>meta</codeph>, comme dans l’exemple suivant :
		
		<codeblock>&lt;meta http-equiv="content-type" content="text/html" charset="ISO-8859-1"></codeblock>
		
		<p>Les valeurs sont définies dans la liste IANA des <xref href="http://www.iana.org/assignments/character-sets" scope="external">jeux de caractères valides</xref>.
		</p>
		
		<p>Lorsque aucun encodage n’est spécifié par la page HTML, par la propriété <codeph>textEncodingFallback</codeph> ou par la propriété <codeph>textEncodingOverride</codeph>, le contenu HTML utilise l’encodage ISO-8859-1.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#textEncodingOverride"><linktext>textEncodingOverride</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:textEncodingOverride:set"><apiName>textEncodingOverride</apiName><shortdesc>
        Codage de caractères utilisé par le contenu HTMLLoader, remplaçant tous les paramètres de la page HTML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
        Codage de caractères utilisé par le contenu HTMLLoader, remplaçant tous les paramètres de la page HTML. Une page HTML définit le codage de caractères dans une balise <codeph>meta</codeph>, comme dans l’exemple suivant :
		
		<codeblock>&lt;meta http-equiv="content-type" content="text/html" charset="ISO-8859-1"></codeblock>
		
		<p>Ce paramètre remplace également tous les paramètres de la propriété <codeph>textEncodingFallback</codeph>. </p>
		
		<p>Les valeurs sont définies dans la liste IANA des <xref href="http://www.iana.org/assignments/character-sets" scope="external">jeux de caractères valides</xref>.
		</p>
		
		<p>Définissez la propriété <codeph>textEncodingOverride</codeph> après le chargement du contenu HTML pour que AIR actualise le contenu HTML à l’aide de l’encodage spécifié. Lorsque HTMLLoader navigue vers une nouvelle page, vous devez redéfinir cette propriété pour que cette nouvelle page utilise un encodage spécifique.</p>
		
		<p>Lorsque aucun encodage n’est spécifié par la page HTML, par la propriété <codeph>textEncodingFallback</codeph> ou <codeph>textEncodingOverride</codeph>, le contenu HTML utilise l’encodage ISO-8859-1.</p>
		
		<p>La définition de la propriété <codeph>textEncodingOverride</codeph> sur <codeph>null</codeph> restaure le comportement par défaut.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#textEncodingFallback"><linktext>textEncodingFallback</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:useCache:get"><apiName>useCache</apiName><shortdesc>
		Spécifie si le cache local doit être consulté avant que les requêtes HTTP publiées par cet objet ne récupèrent des données.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.useCache
		
		</apiDefaultValue></apiValueDef><apiDesc>
		Spécifie si le cache local doit être consulté avant que les requêtes HTTP publiées par cet objet ne récupèrent des données. 
		
		</apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/useCache"><linktext>flash.net.URLRequest.useCache</linktext></link><link href="flash.net.xml#URLRequestDefaults/useCache"><linktext>flash.net.URLRequestDefaults.useCache</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:userAgent:get"><apiName>userAgent</apiName><shortdesc>
		 Chaîne d’agent utilisateur à utiliser dans les requêtes de contenu entrantes provenant de cet objet HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 Chaîne d’agent utilisateur à utiliser dans les requêtes de contenu entrantes provenant de cet objet HTMLLoader. 
		 
		 <p>Pour définir la chaîne d’agent utilisateur, définissez la propriété <codeph>userAgent</codeph> de l’objet HTMLLoader avant d’appeler la méthode <codeph>load()</codeph>. La propriété <codeph>userAgent</codeph> de l’objet URLRequest transmis à la méthode <codeph>load()</codeph>n’est <i>pas</i> utilisée.</p>
		 
		 <p>En définissant la propriété <codeph>URLRequestDefaults.userAgent</codeph>, vous pouvez définir la chaîne d’agent utilisateur par défaut employée par tous les objets HTMLLoader dans un domaine d’application. Lorsque aucune valeur n’est définie pour la propriété <codeph>userAgent</codeph> de l’objet HTMLLoader (ou si la valeur est définie sur <codeph>null</codeph>), la chaîne d’agent utilisateur est définie sur la valeur de la propriété statique <codeph>URLRequestDefaults.userAgent</codeph>. </p>
		 
		 <p>Lorsque aucune valeur n’est définie pour la propriété <codeph>userAgent</codeph> de l’objet HTMLLoader et pour <codeph>URLRequestDefaults.userAgent</codeph>, une valeur par défaut est employée comme chaîne d’agent utilisateur. Cette valeur par défaut varie selon le système d’exploitation du moteur d’exécution (par exemple, Mac OS, Linux ou Windows), ainsi que du langage et de la version du moteur d’exécution, comme le montrent les exemples suivants :</p>
		 
		 <ul>
		 
		 	<li><codeph>"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5"</codeph></li>
		 	<li><codeph>"Mozilla/5.0 (Windows; U; en) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5"</codeph></li>
		  <li><codeph>"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5"</codeph></li>
		 </ul>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/userAgent"><linktext>flash.net.URLRequest.userAgent</linktext></link><link href="flash.net.xml#URLRequestDefaults/userAgent"><linktext>flash.net.URLRequestDefaults.userAgent</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:width:set"><apiName>width</apiName><shortdesc>
		 Spécifie la largeur du rectangle des canevas HTML restitués.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Spécifie la largeur du rectangle des canevas HTML restitués. Il s’agit de la largeur de l’objet d’affichage HTMLLoader, en pixels. Si cette propriété est modifiée, l’objet HTMLLoader restitue à nouveau le document HTML. La modification de cette propriété peut entraîner le déclenchement d’événements <codeph>htmlBoundsChange</codeph>. Lorsque vous définissez les propriétés <codeph>width</codeph> et <codeph>height</codeph> d’un objet HTMLLoader, les limites de l’objet changent, mais son contenu n’est pas mis à l’échelle (comme dans le cas des autres types d’objets d’affichage).
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:window:get"><apiName>window</apiName><shortdesc>
		 Objet JavaScript global du contenu chargé dans le contrôle HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Object</apiValueClassifier></apiValueDef><apiDesc>
		 Objet JavaScript global du contenu chargé dans le contrôle HTML.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLWindowCreateOptions"><apiName>HTMLWindowCreateOptions</apiName><shortdesc>
	 Cette classe définit les options qui peuvent être spécifiées lorsque du code JavaScript s’exécutant dans un objet HTMLLoader tente de créer une nouvelle fenêtre HTML en appelant la méthode window.open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Cette classe définit les options qui peuvent être spécifiées lorsque du code JavaScript s’exécutant dans un objet HTMLLoader tente de créer une nouvelle fenêtre HTML en appelant la méthode <codeph>window.open()</codeph>. 
	 
	 <p>Cette classe définit les propriétés et les méthodes qui correspondent aux options du paramètre <codeph>features</codeph> transmis à la méthode <codeph>window.open()</codeph> dans JavaScript.</p>
	 
	 <p>Par exemple, le code JavaScript d’un document HTML (dans un objet HTMLLoader) peut inclure l’appel suivant à <codeph>window.open()</codeph>, dans lequel le paramètre <codeph>features</codeph> (le troisième) énumère certaines options :</p>
	 
	 <codeblock>window.open("http://www.adobe.com", "AdobeWindow", "scrollbars=1,menubar=1,location=0,status=0")</codeblock>
	 
	 <p>Utilisez la classe HTMLWindowCreateOptions pour remplacer la méthode <codeph>createWindow()</codeph> d’une sous-classe de la classe HTMLHost. L’objet HTMLLoader transmet un objet HTMLWindowCreateOptions en tant que paramètre <codeph>windowCreateOptions</codeph> de la méthode <codeph>createWindow()</codeph> de l’objet HTMLHost.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="HTMLHost.html#createWindow()"><linktext>HTMLHost#createWindow()</linktext></link></related-links><apiValue id="flash.html:HTMLWindowCreateOptions:fullscreen"><apiName>fullscreen</apiName><shortdesc>
    	 Indique si la fenêtre doit être affichée en plein écran.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Indique si la fenêtre doit être affichée en plein écran. Cette propriété est définie sur <codeph>true</codeph> si la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph> inclut <codeph>"fullscreen"</codeph>, <codeph>"fullscreen=1"</codeph> ou <codeph>"fullscreen=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:height"><apiName>height</apiName><shortdesc>
		 Spécifie la hauteur initiale de la nouvelle fenêtre.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Spécifie la hauteur initiale de la nouvelle fenêtre. La hauteur est définie sur la valeur <codeph>height</codeph> dans la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph>. Si la valeur est <codeph>NaN</codeph>, paramètre par défaut lorsque aucune valeur <codeph>height</codeph> n’est spécifiée dans la chaîne <codeph>features</codeph>, la hauteur de la fenêtre par défaut est utilisée.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:locationBarVisible"><apiName>locationBarVisible</apiName><shortdesc>
    	 Indique si une barre d’emplacement doit être affichée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Indique si une barre d’emplacement doit être affichée. Cette propriété est définie sur <codeph>true</codeph> si la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph> inclut <codeph>"location"</codeph>, <codeph>"location=1"</codeph> ou <codeph>"location=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:menuBarVisible"><apiName>menuBarVisible</apiName><shortdesc>
    	 Indique si une barre de menus doit être affichée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Indique si une barre de menus doit être affichée. Cette propriété est définie sur <codeph>true</codeph> si la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph> inclut <codeph>"menubar"</codeph>, <codeph>"menubar=1"</codeph> ou <codeph>"menubar=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:resizable"><apiName>resizable</apiName><shortdesc>
    	 Indique si la taille de la fenêtre est modifiable.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Indique si la taille de la fenêtre est modifiable. Cette propriété est définie sur <codeph>true</codeph> si la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph> inclut <codeph>"resizable"</codeph>, <codeph>"resizable=1"</codeph> ou <codeph>"resizable=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:scrollBarsVisible"><apiName>scrollBarsVisible</apiName><shortdesc>
    	 Indique si des barres de défilement doivent être affichées.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Indique si des barres de défilement doivent être affichées. Cette propriété est définie sur <codeph>true</codeph> si la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph> inclut <codeph>"scrollbars"</codeph>, <codeph>"scrollbars=1"</codeph> ou <codeph>"scrollbars=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:statusBarVisible"><apiName>statusBarVisible</apiName><shortdesc>
    	 Indique si une barre d’état doit être affichée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Indique si une barre d’état doit être affichée. Cetxte propriété est définie sur <codeph>true</codeph> si la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph> inclut <codeph>"status"</codeph>, <codeph>"status=1"</codeph> ou <codeph>"status=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:toolBarVisible"><apiName>toolBarVisible</apiName><shortdesc>
    	 Indique si une barre d’outils doit être affichée.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Indique si une barre d’outils doit être affichée. Cette propriété est définie sur <codeph>true</codeph> si la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph> inclut <codeph>"toolbar"</codeph>, <codeph>"toolbar=1"</codeph> ou <codeph>"toolbar=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:width"><apiName>width</apiName><shortdesc>
		 Spécifie la largeur initiale de la nouvelle fenêtre.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Spécifie la largeur initiale de la nouvelle fenêtre. La largeur est définie sur la valeur <codeph>width</codeph> dans la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph>. Si la valeur est <codeph>NaN</codeph>, paramètre par défaut lorsque aucune valeur <codeph>width</codeph> n’est spécifiée dans la chaîne <codeph>features</codeph>, la largeur de la fenêtre par défaut est utilisée.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:x"><apiName>x</apiName><shortdesc>
		 Spécifie la position x initiale désirée de la nouvelle fenêtre à l’écran.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Spécifie la position <i>x</i> initiale désirée de la nouvelle fenêtre à l’écran. Cette position est définie sur la valeur spécifiée pour <codeph>left</codeph> ou <codeph>screenX</codeph> dans la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph>. Si la valeur est <codeph>NaN</codeph>, paramètre par défaut lorsque aucune valeur <codeph>left</codeph> ou <codeph>screenX</codeph> n’est spécifiée dans la chaîne <codeph>features</codeph>, la position <i>x</i> de la fenêtre par défaut est utilisée.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:y"><apiName>y</apiName><shortdesc>
		 Spécifie la position y initiale désirée de la nouvelle fenêtre à l’écran.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Spécifie la position <i>y</i> initiale désirée de la nouvelle fenêtre à l’écran. Cette position est définie sur la valeur spécifiée pour <codeph>top</codeph> ou <codeph>screenY</codeph> dans la chaîne <codeph>features</codeph> de l’appel JavaScript à la méthode <codeph>window.open()</codeph>. Si la valeur est <codeph>NaN</codeph>, paramètre par défaut lorsque aucune valeur <codeph>left</codeph> ou <codeph>screenX</codeph> n’est spécifiée dans la chaîne <codeph>features</codeph>, la position <i>x</i> de la fenêtre par défaut est utilisée.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>