<?xml version="1.0"?>
<apiPackage id="air.update"><apiName>air.update</apiName><apiDetail/><apiClassifier id="air.update:ApplicationUpdater"><apiName>ApplicationUpdater</apiName><shortdesc>
	ApplicationUpdater クラスは、デフォルトのユーザーインターフェイスを提供せずに、Adobe&amp;#xAE; AIR&amp;#xAE; アプリケーションの更新フレームワークの基本機能を定義します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	ApplicationUpdater クラスは、デフォルトのユーザーインターフェイスを提供せずに、Adobe<sup>®</sup> AIR<sup>®</sup> アプリケーションの更新フレームワークの基本機能を定義しますApplicationUpdaterUI クラスには、更新機能とデフォルトのユーザーインターフェイスが含まれます。<i/> 
		
	<p product="flex">このクラスは、applicationupdater.swc ファイルに含まれます。Adobe AIR のプロジェクトを作成すると、Adobe<sup>®</sup> Flex™ Builder™ によってこのクラスが自動的にロードされます。この applicationupdater.swc ファイルは Adobe<sup>®</sup> Flex™ SDK にも含まれています。アプリケーションをコンパイルするときに Flex SDK を使用している場合は、このファイルを含める必要があります。</p>
	
	<p product="flash">このクラスは、Adobe <sup>®</sup> Flex™ SDK に含まれる applicationupdater_ui.swc ファイルに含まれています。 </p>
	
	<p platform="javascript">JavaScript のコードでこのクラスを使用するには、次のように applicationupdater.swf ファイル（AIR SDK にあります）をロードします。</p>
	
	<codeblock platform="javascript">&lt;script src="applicationupdater.swf" type="application/x-shockwave-flash"></codeblock>
		
	<p>アプリケーションの更新の管理は、複雑になる場合があります。AIR 更新フレームワークには、開発者が AIR アプリケーションの優れた更新機能を提供するために役立つ API が用意されています。AIR 更新フレームワークの機能は、以下の開発作業に役立ちます。</p>
	
	<ul><li>
	<p>時間間隔やユーザーの要求に基づいて、更新を周期的にチェックします。</p>
	</li>
	<li>
	<p>Web ソースから AIR ファイル（更新）をダウンロードします。</p>
	</li>
	<li>
	<p>新しくインストールされたバージョンの初回実行時にユーザーに警告します。</p>
	</li>
	<li>
	<p>ユーザーによる更新のチェックの必要性を確認します。</p>
	</li>
	<li>
	<p>新しい更新バージョンの情報をユーザーに表示します。</p>
	</li>
	<li>
	<p>ダウンロードの進行状況とエラー情報をユーザーに表示します。</p>
	</li></ul>
	
	<p>AIR 更新フレームワークでは、AIR アプリケーションの更新バージョンに関する情報を、単純な XML 設定ファイルに保存できます。ほとんどのアプリケーションで、これらの設定ファイルを設定し一部の基本コードを含めることで、エンドユーザーが使いやすい更新機能になります。</p>
	
	<p>AIR 更新フレームワークで使用する独自のユーザーインターフェイスを定義する場合は、AIRUpdater クラスを使用します。</p>
	
	<p>更新処理には、一連の状態が含まれています。Updater オブジェクトの <codeph>currentState</codeph> プロパティは、Updater の現在の状態を反映します。</p>
	
	<p><adobetable class="innertable">
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<tgroup cols="2"><thead><row><entry>
	currentState の値
	</entry><entry>
	説明
	</entry></row></thead><tbody><row><entry>"UNINITIALIZED"</entry>
	<entry>Updater は初期化されていません。</entry>
	</row><row><entry>"INITIALIZING"</entry>
	<entry>Updater は初期化中です。</entry>
	</row><row><entry>"READY"</entry>
	<entry>Updater は初期化が済んでいます。</entry>
	</row><row><entry>"BEFORE_CHECKING"</entry>
	<entry>Updater はまだ更新記述ファイルを検査していません。</entry>
	</row><row><entry>"CHECKING"</entry>
	<entry>Updater は更新記述ファイルを検査しています。</entry>
	</row><row><entry>"AVAILABLE"</entry>
	<entry>更新記述ファイルは使用できます。</entry>
	</row><row><entry>"DOWNLOADING"</entry>
	<entry>Updater は AIR ファイルをダウンロードしています。</entry>
	</row><row><entry>"DOWNLOADED"</entry>
	<entry>Updater は AIR ファイルをダウンロードしました。</entry>
	</row><row><entry>"INSTALLING"</entry>
	<entry>Updater は AIR ファイルをインストールしています。</entry>
	</row><row><entry>"PENDING_INSTALLING"</entry>
	<entry>Updater は初期化を終了し、保留状態の更新があります。</entry>
	</row></tbody></tgroup></adobetable></p>
	
	<p>AIR Debug Launcher（ADL）アプリケーションを使用してアプリケーションをテストしている場合は、アプリケーションの更新を試みると IllegalOperationError 例外が発生します。</p>
	
	<p product="flex">AIR 更新フレームワークの使用について詳しくは、<xref href="http://www.adobe.com/go/learn_air_flex3">『Adobe Flex での Adobe AIR アプリケーションの開発』</xref>の「AIR アプリケーションのアップデート」の章を参照してください。</p> 
	
	<p product="flash">AIR 更新フレームワークの使用について詳しくは、『<xref href="http://www.adobe.com/go/learn_air_flash">Adobe Flash での Adobe AIR アプリケーションの開発</xref>』の「AIR アプリケーションのアップデート」の章を参照してください。</p> 
	
	<p platform="javascript">AIR 更新フレームワークの使用について詳しくは、『<xref href="http://www.adobe.com/go/learn_air_html">HTML および Ajax での Adobe AIR アプリケーションの開発</xref>』の「AIR アプリケーションの更新」の章を参照してください。</p> 
	
	</apiDesc></apiClassifierDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI"><linktext>ApplicationUpdaterUI</linktext></link><link href="flash.desktop.xml#Updater"><linktext>flash.desktop.Updater</linktext></link></related-links><adobeApiEvent id="air.update:ApplicationUpdater_flash.events.ErrorEvent.ERROR_error"><apiName>error</apiName><shortdesc> 
	初期化中または更新処理中にエラーが発生した場合（何か予期しないことが発生した場合）に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ErrorEvent.ERROR</apiEventType><adobeApiEventClassifier>flash.events.ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	初期化中または更新処理中にエラーが発生した場合（何か予期しないことが発生した場合）に送出されます。
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc> 
	初期化が完了した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	初期化が完了した後に送出されます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR_fileUpdateError"><apiName>fileUpdateError</apiName><shortdesc> 
	 airFile パラメーター（installFromAIRFile() メソッドの呼び出し）として渡されたファイルの検証でエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR</apiEventType><adobeApiEventClassifier>air.update.events.StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 <codeph>airFile</codeph> パラメーター（<codeph>installFromAIRFile()</codeph> メソッドの呼び出し）として渡されたファイルの検証でエラーが発生した場合に送出されます。
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS_fileUpdateStatus"><apiName>fileUpdateStatus</apiName><shortdesc> 
	installFromAIRFile() メソッドの呼び出しで Updater がファイルの検証に成功した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS</apiEventType><adobeApiEventClassifier>air.update.events.StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	<codeph>installFromAIRFile()</codeph> メソッドの呼び出しで Updater がファイルの検証に成功した後に送出されます。
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR_downloadError"><apiName>downloadError</apiName><shortdesc> 
	接続中または更新ファイルのダウンロード中にエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR</apiEventType><adobeApiEventClassifier>air.update.events.DownloadErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	接続中または更新ファイルのダウンロード中にエラーが発生した場合に送出されます。無効な HTTP ステータス（404 - File not found など）に対しても送出されます。
	
	<p>このイベントが送出されると、周期的なタイマーは自動的に再起動されます（遅延が 0 より大きい場合）。 </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR_updateError"><apiName>updateError</apiName><shortdesc> 
	更新記述ファイルをダウンロードまたは解析しようとしてエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR</apiEventType><adobeApiEventClassifier>air.update.events.StatusUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	更新記述ファイルをダウンロードまたは解析しようとしてエラーが発生した場合に送出されます。
	
	<p>Updater がこのイベントを送出すると、周期的なタイマーは自動的に再起動されます（遅延の設定が 0 より大きい場合）。Updater が新しい <codeph>checkForUpdate</codeph> イベントを送出した場合、アプリケーションではすべてのエラーダイアログボックスを非表示にすることを検討する必要があります。 </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusUpdateEvent.UPDATE_STATUS_updateStatus"><apiName>updateStatus</apiName><shortdesc> 
	Updater が更新記述ファイルを正常にダウンロードして解釈した後で送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusUpdateEvent.UPDATE_STATUS</apiEventType><adobeApiEventClassifier>air.update.events.StatusUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	Updater が更新記述ファイルを正常にダウンロードして解釈した後で送出されます。 
	
	<p>StatusUpdateEvent オブジェクトの available プロパティが <codeph>true</codeph> に設定されている場合、デフォルトの動作では更新のダウンロードが開始されます。ApplicationUpdater クラスを使用している場合にのみ、デフォルトの動作を実行しないようにできます。ApplicationUpdatorUI クラスの使用中は、デフォルトの動作を防ぐことができません。</p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.BEFORE_INSTALL_beforeInstall"><apiName>beforeInstall</apiName><shortdesc> 
	 更新をインストールする直前で、installUpdate() メソッドを呼び出した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.BEFORE_INSTALL</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 更新をインストールする直前で、<codeph>installUpdate()</codeph> メソッドを呼び出した後に送出されます。更新をインストールするためにランタイムがアプリケーションを終了するとユーザーが行っている現在の作業が失われることがあるので、このイベントの時点で更新のインストールを中止すると便利な場合があります。 
	 
	 <p>このイベントの <codeph>preventDefault()</codeph> メソッドを呼び出すと、インストールは次の再起動まで延期されます。<codeph>preventDefault()</codeph> メソッドを呼び出すと、このアプリケーションのセッションの間は（<codeph>installUpdate()</codeph> メソッドの呼び出しまたは周期的なチェックによる）追加の更新処理が開始されません。 </p>
	 
	 <p>ApplicationUpdater ライブラリのデフォルトの動作では、更新記述ファイルがダウンロードされます。<codeph>preventDefault()</codeph> メソッドを呼び出して、この動作をキャンセルできます。</p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.DOWNLOAD_COMPLETE_downloadComplete"><apiName>downloadComplete</apiName><shortdesc> 
	更新ファイルのダウンロードが完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.DOWNLOAD_COMPLETE</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	更新ファイルのダウンロードが完了すると送出されます。
	
	<p>通常、このイベントは、更新のインストールを続けるかどうかをユーザーに確認するメッセージの表示に使用されます。 </p>
	
	<p>ApplicationUpdater ライブラリのデフォルトの動作では、<codeph>installUpdate()</codeph> メソッドが自動的に呼び出されます。</p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.DOWNLOAD_START_downloadStart"><apiName>downloadStart</apiName><shortdesc> 
	 downloadUpdate() メソッドが呼び出されてサーバーへの接続が確立された後で送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.DOWNLOAD_START</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 <codeph>downloadUpdate()</codeph> メソッドが呼び出されてサーバーへの接続が確立された後で送出されます。ApplicationUpdater ライブラリを使用しているときは、このイベントのイベントハンドラーを使用して、ダウンロードの進捗をユーザーに示すプログレスバーを表示できます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.CHECK_FOR_UPDATE_checkForUpdate"><apiName>checkForUpdate</apiName><shortdesc> 
	更新処理が始まる前、Updater が更新記述ファイルをダウンロードする直前に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.CHECK_FOR_UPDATE</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	更新処理が始まる前、Updater が更新記述ファイルをダウンロードする直前に送出されます。Updater は、<codeph>checkNow()</codeph> メソッドの直接呼び出しの結果として、または周期的なチェックタイマーが時間切れになった場合に、このイベントを送出できます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.INITIALIZED_initialized"><apiName>initialized</apiName><shortdesc> 
	初期化が完了した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.INITIALIZED</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	初期化が完了した後に送出されます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="air.update:ApplicationUpdater:ApplicationUpdater"><apiName>ApplicationUpdater</apiName><shortdesc>
		コンストラクター関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		コンストラクター関数です。 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.update:ApplicationUpdater:cancelUpdate"><apiName>cancelUpdate</apiName><shortdesc>
		更新処理をキャンセルします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		更新処理をキャンセルします。このメソッドを呼び出すと、保留状態のダウンロードがキャンセルされ、完全にダウンロードされていないファイルが削除され、周期的なチェックタイマーが再起動されます。
		
		<p>更新処理は、状態マシンが「UNINITIALIZED」または「INITIALIZING」状態のときを除き、いつでもキャンセルできます。「UNINITIALIZED」または「INITIALIZING」状態のときに更新処理をキャンセルしても、何も行われません。</p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.update:ApplicationUpdater:checkForUpdate"><apiName>checkForUpdate</apiName><shortdesc>
		更新記述ファイルを非同期にダウンロードして解釈します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		更新記述ファイルを非同期にダウンロードして解釈します。このメソッドを呼び出すと、更新状態は「CHECKING」に移行します。このメソッドは、<codeph>checkForUpdate</codeph> イベントをキャンセルした場合にのみ呼び出してください。
		
		<p>このメソッドは、Updater が「BEFORE_CHECKING」状態の場合にのみ動作します。 </p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:checkForUpdate_updateStatus"><apiName>updateStatus</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:StatusUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>Updater により更新記述ファイルが正常にダウンロードおよび解釈されました。
		
		</apiDesc></adobeApiEventDetail><shortdesc>Updater により更新記述ファイルが正常にダウンロードおよび解釈されました。</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:checkForUpdate_updateError"><apiName>updateError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:StatusUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>更新記述ファイルをダウンロードまたは解析しようとしてエラーが発生しました。
		
		</apiDesc></adobeApiEventDetail><shortdesc>更新記述ファイルをダウンロードまたは解析しようとしてエラーが発生しました。</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:checkNow"><apiName>checkNow</apiName><shortdesc>
		更新処理を開始します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		更新処理を開始します。このメソッドを呼び出しても、周期的なタイマーはキャンセルされません。ただし、実行中の更新処理を検出し、現在の反復をスキップします。
		
		<p>このメソッドは、現在の状態が「READY」の場合にのみ動作します。 </p>
		
		<p>このメソッドを呼び出すと、Updater オブジェクトが次のイベントを送出する場合があります。</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:checkNow_checkForUpdate"><apiName>checkForUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>更新処理が開始する直前に送出されます。
		
		</apiDesc></adobeApiEventDetail><shortdesc>更新処理が開始する直前に送出されます。</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:downloadUpdate"><apiName>downloadUpdate</apiName><shortdesc>
		更新ファイルを非同期にダウンロードします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		更新ファイルを非同期にダウンロードします。このメソッドを呼び出すと、状態マシンは「DOWNLOADING」に移行します。このメソッドは、イベントの available プロパティが true のときに StatusUpdateEvent.UPDATE_STATUS イベントをキャンセルした場合にのみ、呼び出す必要があります。
		
		<p>このメソッドは、現在の状態が「AVAILABLE」の場合にのみ動作します。</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:downloadUpdate_downloadStart"><apiName>downloadStart</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>サーバーへの接続が確立された後に送出されます。 
		
		</apiDesc></adobeApiEventDetail><shortdesc>サーバーへの接続が確立された後に送出されます。</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:downloadUpdate_progress"><apiName>progress</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>初期化が完了した後に送出されます。
		
		</apiDesc></adobeApiEventDetail><shortdesc>初期化が完了した後に送出されます。</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:downloadUpdate_downloadError"><apiName>downloadError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:DownloadErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>接続中または更新ファイルのダウンロード中にエラーが発生した場合に送出されます。無効な HTTP ステータス（404 - File not found など）に対しても送出されます。
		
		</apiDesc></adobeApiEventDetail><shortdesc>接続中または更新ファイルのダウンロード中にエラーが発生した場合に送出されます。</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:initialize"><apiName>initialize</apiName><shortdesc>
		 Updater を初期化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Updater を初期化します。このメソッドを呼び出すと、次のことが行われます。 
		
		<p><ol><li>
		<p>更新フレームワークが初期化され、保留されているすべての更新がサイレントで（かつ同期的に）インストールされます。このメソッドは、アプリケーションを再起動する場合があるので、アプリケーションの起動時に呼び出す必要があります。</p>
		</li><li>
		
		<p>延期されている更新があるかどうかをチェックし、ある場合はインストールします。</p>
		</li><li>
		<p>前の更新がうまくいかなかった場合は、更新ファイルとバージョン情報を記憶域からクリアします。</p>
		</li><li>
		<p>周期的なタイマーの遅延時間が経過した場合は、更新処理を開始します。それ以外の場合は、周期的なタイマーを開始します。ただし、AIR Debug Launcher（ADL）アプリケーションを使用してアプリケーションをテストしている場合は、アプリケーションの更新を試みると IllegalOperationError 例外が発生します。</p>
		</li>
		</ol></p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:initialize_initialized"><apiName>initialized</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>初期化が完了しました。 
		
		</apiDesc></adobeApiEventDetail><shortdesc>初期化が完了しました。</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:initialize_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flash.events:ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>初期化中にエラーが発生しました。
		
		</apiDesc></adobeApiEventDetail><shortdesc>初期化中にエラーが発生しました。</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:installFromAIRFile"><apiName>installFromAIRFile</apiName><shortdesc>
		ローカル AIR ファイルを使用して Update プロセスを開始します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>file</apiItemName><apiOperationClassifier>flash.filesystem:File</apiOperationClassifier><apiDesc>インストールするローカル AIR ファイル。
		
		</apiDesc></apiParam></apiOperationDef><apiDesc>
		ローカル AIR ファイルを使用して Update プロセスを開始します。 
		
		<p>更新処理が実行中の場合（状態が「<codeph>DOWNLOADED</codeph>」でない場合）は、このメソッドを呼び出しても何も行われません。</p>
		
		<p>この機能は、アプリケーション記述ファイルで <codeph>customUpdateUI</codeph> 要素が <codeph>true</codeph> に設定されているアプリケーションに対して役に立ちます。</p>
		
		<p>AIR Debug Launcher（ADL）アプリケーションを使用してアプリケーションをテストしているときに、このメソッドを呼び出すと、IllegalOperationError 例外が発生します。</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:installFromAIRFile_fileUpdateStatus"><apiName>fileUpdateStatus</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>Updater による AIR ファイルの検証が成功した後で送出されます。
		
		</apiDesc></adobeApiEventDetail><shortdesc>Updater による AIR ファイルの検証が成功した後で送出されます。</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:installFromAIRFile_updateError"><apiName>updateError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>更新記述ファイルを解析しようとしてエラーが発生した場合に送出されます。
		
		</apiDesc></adobeApiEventDetail><shortdesc>更新記述ファイルを解析しようとしてエラーが発生した場合に送出されます。</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:installUpdate"><apiName>installUpdate</apiName><shortdesc>
		更新ファイルをインストールします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		更新ファイルをインストールします。このメソッドを呼び出すと状態マシンは「INSTALLING」に進みます。このメソッドは、<codeph>downLoadComplete</codeph> イベントをキャンセルした場合にのみ呼び出す必要があります。
		
		<p>このメソッドは、Updater が「DOWNLOADED」状態のときに呼び出します。他の状態で呼び出しても何も行いません。</p>
		
		<p>AIR Debug Launcher（ADL）アプリケーションを使用してアプリケーションをテストしているときに、このメソッドを呼び出すと、IllegalOperationError 例外が発生します。</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:installUpdate_beforeInstall"><apiName>beforeInstall</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>更新をインストールする直前に送出されます。更新のインストールのためにランタイムがアプリケーションを終了するとユーザーが現在行っている作業が失われる可能性があるため、この時点で更新のインストールを中止すると便利な場合があります。
		 
		</apiDesc></adobeApiEventDetail><shortdesc>更新をインストールする直前に送出されます。</shortdesc></adobeApiEvent></apiOperation><apiValue id="air.update:ApplicationUpdater:configurationFile:get"><apiName>configurationFile</apiName><shortdesc>
		delay プロパティと updateURL プロパティの値を設定する設定ファイルの場所。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc>
		<codeph>delay</codeph> プロパティと <codeph>updateURL</codeph> プロパティの値を設定する設定ファイルの場所。このプロパティで指定したファイルが存在しない場合は、<codeph>initialize()</codeph> メソッドを呼び出すと Error がスローされます。
		
		<p>設定ファイルのサンプルを次に示します。</p>
		
		<codeblock> &lt;?xml version="1.0" encoding="utf-8"?> 
 		&lt;configuration xmlns="http://ns.adobe.com/air/framework/update/configuration/1.0" >
 		  &lt;url>app:/server/update.xml&lt;/url>
 		  &lt;delay>1&lt;/delay>
		&lt;/configuration></codeblock>
		
		<p>設定ファイルを読み込む代わりに、<ph platform="actionscript">ActionScript</ph> <ph platform="javascript">JavaScript</ph> コードを使用して、<codeph>delay</codeph> プロパティと <codeph>updateURL</codeph> プロパティを設定できます。</p> 
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdater/delay"><linktext>delay</linktext></link><link href="air.update.xml#ApplicationUpdater/updateURL"><linktext>updateURL</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdater:currentState:get"><apiName>currentState</apiName><shortdesc>
		Updater の内部状態。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		Updater の内部状態。プロパティは、次の値に設定できます。
		
		<p><ul><li>
		<p><codeph>"UNINITIALIZED"</codeph> — Updater は初期化されていません。</p>
		</li><li>
		<p><codeph>"INITIALIZING"</codeph> — Updater は初期化中です。</p>
		</li><li>
		<p><codeph>"READY"</codeph> — Updater は初期化が済んでいます。</p>
		</li><li>
		<p><codeph>"BEFORE_CHECKING"</codeph> — Updater はまだ更新記述ファイルを検査していません。</p>
		</li><li>
		<p><codeph>"CHECKING"</codeph> — Updater は更新記述ファイルを検査しています。</p>
		</li><li>
		<p><codeph>"AVAILABLE"</codeph> — 更新記述ファイルは使用できます。</p>
		</li><li>
		<p><codeph>"DOWNLOADING"</codeph> — Updater は AIR ファイルをダウンロードしています。</p>
		</li><li>
		<p><codeph>"DOWNLOADED"</codeph> — Updater は AIR ファイルをダウンロードしました。</p>
		</li><li>
		<p><codeph>"INSTALLING"</codeph> — Updater は AIR ファイルをインストールしています。</p>
		</li><li>
		<p><codeph>"PENDING_INSTALLING"</codeph> — Updater は初期化を終了し、保留状態の更新があります。</p>
		</li></ul></p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:currentVersion:get"><apiName>currentVersion</apiName><shortdesc>
		アプリケーションの現在のバージョン。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		アプリケーションの現在のバージョン。このプロパティは、<codeph>initialize()</codeph> メソッドの呼び出し時に設定されます。これは、アプリケーション記述ファイルのバージョンに設定されます。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:delay:get"><apiName>delay</apiName><shortdesc>
		新しい更新の周期的チェックの間隔（日数単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier><apiDefaultValue>0
		
		</apiDefaultValue></apiValueDef><apiDesc>
		新しい更新の周期的チェックの間隔（日数単位）。
		
		<p>値が 0 （デフォルト値）の場合、タイマーがアクティブでないことを示し、周期的なチェックは実行されません。この値は、このプロパティまたは設定ファイルを使用して設定できます。両方の方法を使用して値を設定すると、プロパティを使用して設定した値が使用されます。</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:isFirstRun:get"><apiName>isFirstRun</apiName><shortdesc>
		正常な更新後の最初の実行の場合は true を返し、それ以外の場合は false を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		正常な更新後の最初の実行の場合は <codeph>true</codeph> を返し、それ以外の場合は <codeph>false</codeph> を返します。Updater は、<codeph>initialize()</codeph> メソッドの呼び出し時にこの値を設定します。あるバージョンから別のバージョンにデータを移行する必要がある場合、開発者は <codeph>isFirstRun</codeph> が <codeph>true</codeph> に設定されているかどうかを検査する必要があります。
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdater/wasPendingUpdate"><linktext>wasPendingUpdate</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdater:isNewerVersionFunction:get"><apiName>isNewerVersionFunction</apiName><shortdesc>
		Updater がバージョン比較を実行するために使用する必要がある関数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Function</apiValueClassifier></apiValueDef><apiDesc>
		Updater がバージョン比較を実行するために使用する必要がある関数。デフォルトでは、更新フレームワークがバージョンの比較を行って、リモートサイトからのバージョンがインストールされているアプリケーションのバージョンより新しいかどうかを判定します。ただし、デフォルトの比較が開発者のバージョン管理方式と一致しない場合があります。このプロパティを設定して、比較を行う新しい関数を提供します。 
		
		<p>デフォルトの比較関数は、<i>x.y.z</i> のようなバージョンを受け付けます。x、y、z は文字または数字です。デフォルトの比較関数によって認識される特殊な条件が存在します。テスト関数では、バージョン文字列内に <codeph>"alpha"</codeph>、<codeph>"beta"</codeph>、または <codeph>"rc"</codeph> を検出した場合、<codeph>alpha</codeph> &lt; <codeph>beta</codeph> &lt; <codeph>rc</codeph> の順でバージョンが大きくなるものと見なします。</p>
		
		</apiDesc><example conref="examples\ApplicationUpdater.configurationFunction.1.as"> 以下のコードは、カスタム関数 <codeph>customFn</codeph> を定義しています。これは、<codeph>appUpdate</codeph> Updater オブジェクト用のカスタム関数です。サンプルの関数は、意図的に簡単なものになっています。バージョン管理方式の規則に基づいて、カスタム関数はブール値を返す必要があります。
<codeblock>
appUpdate.isNewerVersionFunction = customFn; 

function customFn (currentVersion:String, updateVersion:String):Boolean 
{
    return updateVersion > currentVersion;
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:previousApplicationStorageDirectory:get"><apiName>previousApplicationStorageDirectory</apiName><shortdesc>
		アプリケーション記憶領域ディレクトリの前の場所（更新後に変更されている場合）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc>
		アプリケーション記憶領域ディレクトリの前の場所（更新後に変更されている場合）。アプリケーション記憶領域ディレクトリの場所は、証明書の移行を伴うアップグレード後に変更されます。証明書の移行がない場合は、ユーザーがアプリケーションを更新してもアプリケーション記憶領域ディレクトリは変更されません。このプロパティは <codeph>null</codeph> に設定されます。このプロパティは、<codeph>initialize()</codeph> メソッドの呼び出し時に設定されます。 
		
		<p>AIR ファイルを ADT とパッケージ化するときに開発者が <codeph>-migrate</codeph> オプションを使用する場合、AIR アプリケーションの新しいバージョンに新しい証明書で署名できます。AIR アプリケーションの新しいバージョンが新しい署名の証明書を使用する場合、ユーザーが新しいバージョンをインストールすると、アプリケーションのローカルの記憶領域ディレクトリが変更されます。古いアプリケーション記憶領域ディレクトリから新しいアプリケーション記憶領域ディレクトリにデータを転送する場合は、このプロパティを使用します（<codeph>File.applicationStorageDirectory</codeph>）。詳細については、Adobe AIR 開発者ガイドの「コマンドラインツールを使用した AIR アプリケーションの作成」の章の「アプリケーション証明書を変更するための AIR ファイルへの署名」を参照してください。</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:previousVersion:get"><apiName>previousVersion</apiName><shortdesc>
		アプリケーションの前のバージョン。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		アプリケーションの前のバージョン。このプロパティは、<codeph>initialize()</codeph> メソッドの呼び出し時に設定されます。アプリケーションの、アップグレードする前のバージョン<i/>を返します。<codeph>isfirstRun</codeph> が <codeph>true</codeph> の場合にのみ設定され、それ以外の場合は <codeph>null</codeph> に設定されます。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:updateDescriptor:get"><apiName>updateDescriptor</apiName><shortdesc>
		更新 URL からダウンロードされた更新記述ファイルのコンテンツ。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>XML</apiValueClassifier></apiValueDef><apiDesc>
		更新 URL からダウンロードされた更新記述ファイルのコンテンツ。Updater オブジェクトが <codeph>updateStatus</codeph> イベントを送出するときにのみ、このプロパティは null 以外の値になります。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:updateURL:get"><apiName>updateURL</apiName><shortdesc>
		更新記述ファイルの場所。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		更新記述ファイルの場所。URLRequest のパスとして有効な任意の場所が受け付けられます。Updater に必要な必須の設定はこれだけです。更新 URL は、このプロパティまたは設定ファイルを使用して設定できます。両方の方法を使用して値を設定すると、Updater はこのプロパティを使用して設定した値を使用します。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:wasPendingUpdate:get"><apiName>wasPendingUpdate</apiName><shortdesc>
		インストールが失敗したかどうかに関係なく、延期された更新があった場合は true を返します。それ以外の場合は false を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		インストールが失敗したかどうかに関係なく、延期された更新があった場合は <codeph>true</codeph> を返します。それ以外の場合は <codeph>false</codeph> を返します。Updater は、<codeph>initialize()</codeph> メソッドの呼び出し時にこのプロパティを設定します。更新のインストールに失敗したかどうかを確認するには、<codeph>wasPendingUpdate</codeph> プロパティおよび <codeph>isFirstRun</codeph> プロパティを使用します（失敗した場合は <codeph>wasPendingUpdate</codeph> が <codeph>true</codeph> に、<codeph>isFirstRun</codeph> が <codeph>false</codeph> に設定されます）。
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdater/isFirstRun"><linktext>isFirstRun</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="air.update:ApplicationUpdaterUI"><apiName>ApplicationUpdaterUI</apiName><shortdesc>
	ApplicationUpdaterUI クラスでは、Adobe&amp;#xAE; AIR&amp;#xAE; アプリケーションの更新フレームワークの基本機能が定義され、デフォルトのユーザーインターフェイスが提供されています。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	ApplicationUpdaterUI クラスでは、Adobe<sup>®</sup> AIR<sup>®</sup> アプリケーションの更新フレームワークの基本機能が定義され、デフォルトのユーザーインターフェイスが提供されています。ApplicationUpdater クラスでは、更新機能のみが定義されており、デフォルトのユーザーインターフェイスは実装されていません。<i/> 
	
	<p product="flex">このクラスは、applicationupdater_ui.swc ファイルに含まれます。Adobe AIR のプロジェクトを作成すると、Adobe<sup>®</sup> Flex™ Builder™ によってこのクラスが自動的にロードされます。この applicationupdater_ui.swc ファイルは Adobe<sup>®</sup> Flex™ SDK にも含まれています。アプリケーションをコンパイルするときに Flex SDK を使用している場合は、このファイルを含める必要があります。</p>
	
	<p product="flash">このクラスは、Adobe <sup>®</sup> Flex™ SDK に含まれる applicationupdater_ui.swc ファイルに含まれています。 </p>
	
	<p platform="javascript">JavaScript のコードでこのクラスを使用するには、次のように applicationupdater_ui.swf ファイル（AIR SDK にあります）をロードします。</p>
	
	<codeblock platform="javascript">&lt;script src="applicationupdater_ui.swf" type="application/x-shockwave-flash"></codeblock>
		
	<p>アプリケーションの更新の管理は、複雑になる場合があります。AIR 更新フレームワークには、開発者が AIR アプリケーションの優れた更新機能を提供するために役立つ API が用意されています。AIR 更新フレームワークの機能は、以下の開発作業に役立ちます。</p>
	
	<ul><li>
	<p>時間間隔やユーザーの要求に基づいて、更新を周期的にチェックします。</p>
	</li>
	<li>
	<p>Web ソースから AIR ファイル（更新）をダウンロードします。</p>
	</li>
	<li>
	<p>新しくインストールされたバージョンの初回実行時にユーザーに警告します。</p>
	</li>
	<li>
	<p>ユーザーによる更新のチェックの必要性を確認します。</p>
	</li>
	<li>
	<p>新しい更新バージョンの情報をユーザーに表示します。</p>
	</li>
	<li>
	<p>ダウンロードの進行状況とエラー情報をユーザーに表示します。</p>
	</li></ul>
	
	<p>AIR 更新フレームワークでは、AIR アプリケーションの更新バージョンに関する情報を、単純な XML 設定ファイルに保存できます。ほとんどのアプリケーションで、これらの設定ファイルを設定し一部の基本コードを含めることで、エンドユーザーが使いやすい更新機能になります。</p>
	
	<p>AIRUpdateUI クラスでは、アプリケーションで使用できるデフォルトのユーザーインターフェイスが実装されています。アプリケーション更新に関連する基本情報とオプションをユーザーに提供します。</p>
	
	<p>更新処理は一連の状態を遷移しながら進められます。</p>
	
	<p><adobetable class="innertable">
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<tgroup cols="2"><thead><row><entry>
	状態
	</entry><entry>
	説明
	</entry></row></thead><tbody><row><entry>Uninitialized</entry>
	<entry>Updater は初期化されていません。</entry>
	</row><row><entry>Initializing</entry>
	<entry>Updater は初期化中です。</entry>
	</row><row><entry>Ready</entry>
	<entry>Updater は初期化が済んでいます。</entry>
	</row><row><entry>Before checking</entry>
	<entry>Updater はまだ更新記述ファイルを検査していません。</entry>
	</row><row><entry>Checking</entry>
	<entry>Updater は更新記述ファイルを検査しています。</entry>
	</row><row><entry>Available</entry>
	<entry>更新記述ファイルは使用できます。</entry>
	</row><row><entry>Downloading</entry>
	<entry>Updater は AIR ファイルをダウンロードしています。</entry>
	</row><row><entry>Downloaded</entry>
	<entry>Updater は AIR ファイルをダウンロードしました。</entry>
	</row><row><entry>インストール中</entry>
	<entry>Updater は AIR ファイルをインストールしています。</entry>
	</row><row><entry>Pending install</entry>
	<entry>Updater は初期化を終了し、保留状態の更新があります。</entry>
	</row></tbody></tgroup></adobetable></p>
	
	<p>AIR Debug Launcher（ADL）アプリケーションを使用してアプリケーションをテストしている場合は、アプリケーションの更新を試みると IllegalOperationError 例外が発生します。</p>
	
	<p product="flex">AIR 更新フレームワークの使用について詳しくは、<xref href="http://www.adobe.com/go/learn_air_flex3">『Adobe Flex での Adobe AIR アプリケーションの開発』</xref>の「AIR アプリケーションのアップデート」の章を参照してください。</p> 
	
	<p product="flash">AIR 更新フレームワークの使用について詳しくは、『<xref href="http://www.adobe.com/go/learn_air_flash">Adobe Flash での Adobe AIR アプリケーションの開発</xref>』の「AIR アプリケーションのアップデート」の章を参照してください。</p> 
	
	<p platform="javascript">AIR 更新フレームワークの使用について詳しくは、『<xref href="http://www.adobe.com/go/learn_air_html">HTML および Ajax での Adobe AIR アプリケーションの開発</xref>』の「AIR アプリケーションの更新」の章を参照してください。</p> 
	
	</apiDesc></apiClassifierDetail><related-links><link href="air.update.xml#ApplicationUpdater"><linktext>ApplicationUpdater</linktext></link><link href="flash.desktop.xml#Updater"><linktext>flash.desktop.Updater</linktext></link></related-links><adobeApiEvent id="air.update:ApplicationUpdaterUI_flash.events.ErrorEvent.ERROR_error"><apiName>error</apiName><shortdesc> 
	初期化中または更新処理中にエラーが発生した場合（何か予期しないことが発生した場合）に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ErrorEvent.ERROR</apiEventType><adobeApiEventClassifier>flash.events.ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	初期化中または更新処理中にエラーが発生した場合（何か予期しないことが発生した場合）に送出されます。
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc> 
	初期化が完了した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	初期化が完了した後に送出されます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR_fileUpdateError"><apiName>fileUpdateError</apiName><shortdesc> 
	 airFile パラメーター（installFromAIRFile() メソッドの呼び出し）として渡されたファイルの検証でエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR</apiEventType><adobeApiEventClassifier>air.update.events.StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 <codeph>airFile</codeph> パラメーター（<codeph>installFromAIRFile()</codeph> メソッドの呼び出し）として渡されたファイルの検証でエラーが発生した場合に送出されます。
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS_fileUpdateStatus"><apiName>fileUpdateStatus</apiName><shortdesc> 
	
	installFromAIRFile() メソッドの呼び出しで Updater がファイルの検証に成功した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS</apiEventType><adobeApiEventClassifier>air.update.events.StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	
	<codeph>installFromAIRFile()</codeph> メソッドの呼び出しで Updater がファイルの検証に成功した後に送出されます。
	
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR_downloadError"><apiName>downloadError</apiName><shortdesc> 
	接続中または更新ファイルのダウンロード中にエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR</apiEventType><adobeApiEventClassifier>air.update.events.DownloadErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	接続中または更新ファイルのダウンロード中にエラーが発生した場合に送出されます。無効な HTTP ステータス（404 - File not found など）に対しても送出されます。
	
	<p>このイベントが送出されると、周期的なタイマーは自動的に再起動されます（遅延が 0 より大きい場合）。 </p>
	
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR_updateError"><apiName>updateError</apiName><shortdesc> 
	
	更新記述ファイルをダウンロードまたは解析しようとしてエラーが発生した場合に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR</apiEventType><adobeApiEventClassifier>air.update.events.StatusUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	
	更新記述ファイルをダウンロードまたは解析しようとしてエラーが発生した場合に送出されます。
	
	<p>Updater がこのイベントを送出すると、周期的なタイマーは自動的に再起動されます（遅延の設定が 0 より大きい場合）。Updater が新しい <codeph>checkForUpdate</codeph> イベントを送出した場合、アプリケーションではすべてのエラーダイアログボックスを非表示にすることを検討する必要があります。 </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusUpdateEvent.UPDATE_STATUS_updateStatus"><apiName>updateStatus</apiName><shortdesc> 
	
	Updater が更新記述ファイルを正常にダウンロードして解釈した後で送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.StatusUpdateEvent.UPDATE_STATUS</apiEventType><adobeApiEventClassifier>air.update.events.StatusUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	
	Updater が更新記述ファイルを正常にダウンロードして解釈した後で送出されます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.BEFORE_INSTALL_beforeInstall"><apiName>beforeInstall</apiName><shortdesc> 
	 更新をインストールする直前で、installUpdate() メソッドを呼び出した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.BEFORE_INSTALL</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 更新をインストールする直前で、<codeph>installUpdate()</codeph> メソッドを呼び出した後に送出されます。更新をインストールするためにランタイムがアプリケーションを終了するとユーザーが行っている現在の作業が失われることがあるので、このイベントの時点で更新のインストールを中止すると便利な場合があります。 
	 
	 <p>このイベントの <codeph>preventDefault()</codeph> メソッドを呼び出すと、インストールは次の再起動まで延期されます。<codeph>preventDefault()</codeph> メソッドを呼び出すと、このアプリケーションのセッションの間は（<codeph>installUpdate()</codeph> メソッドの呼び出しまたは周期的なチェックによる）追加の更新処理が開始されません。 </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.DOWNLOAD_COMPLETE_downloadComplete"><apiName>downloadComplete</apiName><shortdesc> 
	
	更新ファイルのダウンロードが完了すると送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.DOWNLOAD_COMPLETE</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	
	更新ファイルのダウンロードが完了すると送出されます。
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.DOWNLOAD_START_downloadStart"><apiName>downloadStart</apiName><shortdesc> 
	
	 downloadUpdate() メソッドが呼び出されてサーバーへの接続が確立された後で送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.DOWNLOAD_START</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	
	 <codeph>downloadUpdate()</codeph> メソッドが呼び出されてサーバーへの接続が確立された後で送出されます。ApplicationUpdater ライブラリを使用しているときは、このイベントのイベントハンドラーを使用して、ダウンロードの進捗をユーザーに示すプログレスバーを表示できます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.CHECK_FOR_UPDATE_checkForUpdate"><apiName>checkForUpdate</apiName><shortdesc> 
	更新処理が始まる前、Updater が更新記述ファイルをダウンロードする直前に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.CHECK_FOR_UPDATE</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	更新処理が始まる前、Updater が更新記述ファイルをダウンロードする直前に送出されます。Updater は、<codeph>checkNow()</codeph> メソッドの直接呼び出しの結果として、または周期的なチェックタイマーが時間切れになった場合に、このイベントを送出できます。 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.INITIALIZED_initialized"><apiName>initialized</apiName><shortdesc> 
	
	初期化が完了した後に送出されます。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>air.update.events.UpdateEvent.INITIALIZED</apiEventType><adobeApiEventClassifier>air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	
	初期化が完了した後に送出されます。 
	 
	 <p>このイベントには、次の読み取り専用プロパティがあります。 </p>
	 <ul><li>
	 <p>	<codeph>isFirstRun</codeph>（Boolean）正常な更新の後で最初の実行の場合は <codeph>true</codeph>、それ以外の場合は <codeph>false</codeph>。</p>
	 </li><li>
	 <p>	<codeph>previousVersion</codeph>（String）アプリケーションのアップグレード前のバージョン（<codeph>isfirstRun</codeph> が <codeph>true</codeph> の場合にのみ設定されます）。 </p>
	 </li><li>
	 <p>	<codeph>currentVersion</codeph>（String）現在インストールされているアプリケーション記述ファイルのバージョン。</p>
	 </li>
	 </ul>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="air.update:ApplicationUpdaterUI:ApplicationUpdaterUI"><apiName>ApplicationUpdaterUI</apiName><shortdesc>
		コンストラクター関数です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		コンストラクター関数です。 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.update:ApplicationUpdaterUI:addResources"><apiName>addResources</apiName><shortdesc> 
		 指定した言語の新しいリソースバンドルを動的に追加します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>lang</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>言語コード（ルーマニア語の <codeph>"ro"</codeph> など）。
		 
		 </apiDesc></apiParam><apiParam><apiItemName>res</apiItemName><apiOperationClassifier>Object</apiOperationClassifier><apiDesc>オブジェクトには、変換のためのキーと値が含まれます。キーは言語プロパティファイルのものです。次の表では使用可能なキー（プロパティ名）の一覧を示します。
		 
		 <p>
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="4"><thead><row><entry> キー  </entry><entry> 英語の値  </entry><entry> ダイアログボックス </entry><entry> 説明  </entry></row></thead><tbody><row>
		 <entry> <codeph>appWidth </codeph> </entry>
		 <entry> 530  </entry>
		 <entry> すべて  </entry>
		 <entry> ダイアログボックスの幅。 </entry></row><row>
		 <entry> <codeph>titleWindow </codeph> </entry>
		 <entry> Updating:  </entry>
		 <entry> すべて  </entry>
		 <entry> ネイティブウィンドウタイトルバーのアプリケーション名の前に表示されます。 </entry></row><row>
		 <entry> <codeph>titleCheck </codeph> </entry>
		 <entry> Check for updates  </entry>
		 <entry> アップデートの有無をチェック  </entry>
		 <entry> ダイアログボックスのタイトル。  </entry></row><row>
		 <entry> <codeph>msgCheck </codeph> </entry>
		 <entry> Allow the application to check for updates?  </entry>
		 <entry> アップデートの有無をチェック  </entry>
		 <entry> ダイアログボックスのメッセージ。  </entry></row><row>
		 <entry> <codeph>btnCheck </codeph> </entry>
		 <entry> Check for Updates  </entry>
		 <entry> アップデートの有無をチェック  </entry>
		 <entry> 「アップデートの有無をチェック」ボタンのラベル。  </entry></row><row>
		 <entry> <codeph>btnCancel</codeph> </entry>
		 <entry> Cancel  </entry>
		 <entry> 「キャンセル」ボタンのあるすべてのダイアログボックス  </entry>
		 <entry> 「キャンセル」ボタンのラベル。 </entry></row><row>
		 <entry> <codeph>titleCheckNoUpdates </codeph> </entry>
		 <entry> No updates available  </entry>
		 <entry> CheckForUpdates - 利用可能なアップデートがありません  </entry>
		 <entry> ダイアログボックスのタイトル。 </entry></row><row>
		 <entry> <codeph>msgCheckNoUpdates </codeph> </entry>
		 <entry> There are no updates available for the application.  </entry>
		 <entry> アップデートの有無をチェック - 利用可能なアップデートがありません  </entry>
		 <entry> ダイアログボックスのメッセージ。  </entry></row><row>
		 <entry> <codeph>btnClose </codeph> </entry>
		 <entry> Close  </entry>
		 <entry> 「閉じる」ボタンのあるすべてのダイアログボックス  </entry>
		 <entry> 「閉じる」ボタンのラベル。 </entry></row><row>
		 <entry> <codeph>titleCheckError </codeph> </entry>
		 <entry> Update error  </entry>
		 <entry> アップデートの有無をチェック - 接続エラーが発生しました  </entry>
		 <entry> ダイアログボックスのタイトル。  </entry></row><row>
		 <entry> <codeph>msgCheckError </codeph> </entry>
		 <entry> There was an error checking for updates.Error# {0}  </entry>
		 <entry> アップデートの有無をチェック - 接続エラーが発生しました  </entry>
		 <entry> ダイアログボックスのメッセージ。 {0} はエラー ID に置き換えられます。 </entry></row><row>
		 <entry> <codeph>titleUpdate </codeph> </entry>
		 <entry> Update available  </entry>
		 <entry> 利用可能なアップデート  </entry>
		 <entry> ダイアログボックスのタイトル。 </entry></row><row>
		 <entry> <codeph>msgUpdate </codeph> </entry>
		 <entry> An updated version of the application is available for download.  </entry>
		 <entry> 利用可能なアップデート  </entry>
		 <entry> ダイアログボックスのメッセージ。 </entry></row><row>
		 <entry> <codeph>lblApplication </codeph> </entry>
		 <entry> Application:  </entry>
		 <entry> 利用可能なアップデート  </entry>
		 <entry> アプリケーション名の前に表示されるラベル。 </entry></row><row>
		 <entry> <codeph>lblInstalledVersion </codeph> </entry>
		 <entry> Installed Version:  </entry>
		 <entry> 利用可能なアップデート  </entry>
		 <entry> インストールされているバージョンの前に表示されるラベル。 </entry></row><row>
		 <entry> <codeph>lblAvailableVersion </codeph> </entry>
		 <entry> Update Version:  </entry>
		 <entry> 利用可能なアップデート  </entry>
		 <entry> 更新バージョンの前に表示されるラベル。 </entry></row><row>
		 <entry> <codeph>btnDownload </codeph> </entry>
		 <entry> Download now  </entry>
		 <entry> 利用可能なアップデート  </entry>
		 <entry> 「今すぐダウンロード」ボタンのラベル。  </entry></row><row>
		 <entry> <codeph>btnDownloadLater </codeph> </entry>
		 <entry> Download later  </entry>
		 <entry> 利用可能なアップデート  </entry>
		 <entry> 「後でダウンロード」ボタンのラベル。  </entry></row><row>
		 <entry> <codeph>lnkReleaseNotes </codeph> </entry>
		 <entry> Release notes  </entry>
		 <entry> リリースノートへのリンクがあるすべてのダイアログボックス  </entry>
		 <entry> "リリースノート" へのリンクの名前。  </entry></row><row>
		 <entry> <codeph>titleProgress </codeph> </entry>
		 <entry> Download progress...  </entry>
		 <entry> ダウンロードの進捗状況  </entry>
		 <entry> ダイアログボックスのタイトル。 </entry></row><row>
		 <entry> <codeph>msgProgress </codeph> </entry>
		 <entry> Downloading update  </entry>
		 <entry> ダウンロードの進捗状況  </entry>
		 <entry> ダイアログボックスのメッセージ。 </entry></row><row>
		 <entry> <codeph>titleDownloadError </codeph> </entry>
		 <entry> Download failed  </entry>
		 <entry> ダウンロードエラー  </entry>
		 <entry> ダイアログボックスのタイトル。 </entry></row><row>
		 <entry> <codeph>msgDownloadError </codeph> </entry>
		 <entry> There was an error downloading the update.Error# {0}  </entry>
		 <entry> ダウンロードエラー  </entry>
		 <entry> ダイアログボックスのメッセージ。 {0} はエラー ID に置き換えられます。  </entry></row><row>
		 <entry> <codeph>titleInstall </codeph> </entry>
		 <entry> Install update  </entry>
		 <entry> アップデートのインストール  </entry>
		 <entry> ダイアログボックスのタイトル。 </entry></row><row>
		 <entry> <codeph>msgInstall </codeph> </entry>
		 <entry> The update for the application is downloaded and ready to be installed.  </entry>
		 <entry> アップデートのインストール  </entry>
		 <entry> ダイアログボックスのメッセージ。 </entry></row><row>
		 <entry> <codeph>btnInstall </codeph> </entry>
		 <entry> Install now  </entry>
		 <entry> アップデートのインストール  </entry>
		 <entry> 「インストール」ボタンのラベル。  </entry></row><row>
		 <entry> <codeph>btnInstallLater </codeph> </entry>
		 <entry> Postpone until restart  </entry>
		 <entry> アップデートのインストール  </entry>
		 <entry> 「再起動時にインストール」ボタンのラベル。  </entry></row><row>
		 <entry> <codeph>titleFileUpdate </codeph> </entry>
		 <entry> Update available  </entry>
		 <entry> ファイル - 利用可能なアップデート  </entry>
		 <entry> ダイアログボックスのタイトル。  </entry></row><row>
		 <entry> <codeph>msgFileUpdate </codeph> </entry>
		 <entry> The file contains an updated version of the application.Install?  </entry>
		 <entry> ファイル - 利用可能なアップデート  </entry>
		 <entry> ダイアログボックスのメッセージ。 </entry></row><row>
		 <entry> <codeph>lblFile </codeph> </entry>
		 <entry> File:  </entry>
		 <entry> ファイル - 利用可能なアップデート  </entry>
		 <entry> ファイル名の前に表示されるラベル。  </entry></row><row>
		 <entry> <codeph>titleFileNoUpdate </codeph> </entry>
		 <entry> No update available  </entry>
		 <entry> ファイル - 利用可能なアップデートがありません  </entry>
		 <entry> ダイアログボックスのタイトル。 </entry></row><row>
		 <entry> <codeph>msgFileNoUpdate </codeph> </entry>
		 <entry> The file doesn't contain a newer version of the application.  </entry>
		 <entry> ファイル - 利用可能なアップデートがありません  </entry>
		 <entry> ダイアログボックスのメッセージ。 </entry></row><row>
		 <entry> <codeph>titleFileError </codeph> </entry>
		 <entry> File error  </entry>
		 <entry> ファイル - エラー  </entry>
		 <entry> ダイアログボックスのタイトル。  </entry></row><row>
		 <entry> <codeph>msgFileError </codeph> </entry>
		 <entry> An error occurred validating the update file.Error# {0}  </entry>
		 <entry> ファイル - エラー  </entry>
		 <entry> ダイアログボックスのメッセージ。 {0} はエラー ID に置き換えられます。 </entry></row><row>
		 <entry> <codeph>titleUnexpectedError </codeph> </entry>
		 <entry> Unexpected error  </entry>
		 <entry> 予期しないエラー  </entry>
		 <entry> ダイアログボックスのタイトル。 </entry></row><row>
		 <entry> <codeph>msgUnexpectedError </codeph> </entry>
		 <entry> An unexpected error occurred.Error# {0}  </entry>
		 <entry> 予期しないエラー  </entry>
		 <entry> ダイアログボックスのメッセージ。 {0} はエラー ID に置き換えられます。  </entry></row></tbody></tgroup></adobetable>
		 
		 </p>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc> 
		 指定した言語の新しいリソースバンドルを動的に追加します。JavaScript 開発者は、このメソッドを使用して、Application Updater の UI が表示するダイアログボックスに、新しい言語を動的に追加します。Flex を開発する場合は、新しい言語を「ApplicationUpdaterDialogs」リソースバンドルに直接追加できます。
		 
		 </apiDesc></apiOperationDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI/localeChain"><linktext>localeChain</linktext></link></related-links></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:cancelUpdate"><apiName>cancelUpdate</apiName><shortdesc>
		更新処理をキャンセルします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		更新処理をキャンセルします。このメソッドを呼び出すと、保留状態のダウンロードがキャンセルされ、完全にダウンロードされていないファイルが削除され、周期的なチェックタイマーが再起動されます。
		
		<p>更新処理は、状態マシンが「Unitialized」または「Initializing」状態のときを除き、いつでもキャンセルできます。「Unitialized」または「Initializing」状態のときに更新処理をキャンセルしても、何も行われません。</p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:checkNow"><apiName>checkNow</apiName><shortdesc>
		更新処理を開始します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		更新処理を開始します。このメソッドを呼び出しても、周期的なタイマーはキャンセルされません。ただし、実行中の更新処理を検出し、現在の反復をスキップします。
		
		<p>このメソッドは、現在の状態が「Ready」の場合にのみ動作します。 </p>
		
		<p>このメソッドを呼び出すと、Updater オブジェクトが次のイベントを送出する場合があります。</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdaterUI:checkNow_checkForUpdate"><apiName>checkForUpdate</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>更新処理が開始する直前に送出されます。
		
		</apiDesc></adobeApiEventDetail><shortdesc>更新処理が開始する直前に送出されます。</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:initialize"><apiName>initialize</apiName><shortdesc>
		 Updater を初期化します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Updater を初期化します。このメソッドを呼び出すと、次のことが行われます。 
		
		<p><ol><li>
		<p>更新フレームワークが初期化され、保留されているすべての更新がサイレントで（かつ同期的に）インストールされます。このメソッドは、アプリケーションを再起動する場合があるので、アプリケーションの起動時に呼び出す必要があります。</p>
		</li><li>
		
		<p>延期されている更新があるかどうかをチェックし、ある場合はインストールします。</p>
		</li><li>
		<p>前の更新がうまくいかなかった場合は、更新ファイルとバージョン情報を記憶域からクリアします。</p>
		</li><li>
		<p>周期的なタイマーの遅延時間が経過した場合は、更新処理を開始します。それ以外の場合は、周期的なタイマーを開始します。ただし、AIR Debug Launcher（ADL）アプリケーションを使用してアプリケーションをテストしている場合は、アプリケーションの更新を試みると IllegalOperationError 例外が発生します。</p>
		</li>
		</ol></p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdaterUI:initialize_initialized"><apiName>initialized</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>初期化が完了しました。 
		
		</apiDesc></adobeApiEventDetail><shortdesc>初期化が完了しました。</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI:initialize_error"><apiName>error</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>flash.events:ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>初期化中にエラーが発生しました。
		
		</apiDesc></adobeApiEventDetail><shortdesc>初期化中にエラーが発生しました。</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:installFromAIRFile"><apiName>installFromAIRFile</apiName><shortdesc>
		ローカル AIR ファイルを使用して Update プロセスを開始します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>file</apiItemName><apiOperationClassifier>flash.filesystem:File</apiOperationClassifier><apiDesc>インストールするローカル AIR ファイル。
		
		</apiDesc></apiParam></apiOperationDef><apiDesc>
		ローカル AIR ファイルを使用して Update プロセスを開始します。 
		
		<p>更新処理が実行中の場合（状態が <codeph>"Downloaded"</codeph> でない場合）、このメソッドを呼び出しても何も行われません。</p>
		
		<p>この機能は、アプリケーション記述ファイルで <codeph>customUpdateUI</codeph> 要素が <codeph>true</codeph> に設定されているアプリケーションに対して役に立ちます。</p>
		
		<p>AIR Debug Launcher（ADL）アプリケーションを使用してアプリケーションをテストしているときに、このメソッドを呼び出すと、IllegalOperationError 例外が発生します。</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdaterUI:installFromAIRFile_fileUpdateStatus"><apiName>fileUpdateStatus</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>Updater による AIR ファイルの検証が成功した後で送出されます。
		
		</apiDesc></adobeApiEventDetail><shortdesc>Updater による AIR ファイルの検証が成功した後で送出されます。</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI:installFromAIRFile_updateError"><apiName>updateError</apiName><prolog/><adobeApiEventDetail><adobeApiEventDef><adobeApiEventClassifier>air.update.events:StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>更新記述ファイルを解析しようとしてエラーが発生した場合に送出されます。
		 
		</apiDesc></adobeApiEventDetail><shortdesc>更新記述ファイルを解析しようとしてエラーが発生した場合に送出されます。</shortdesc></adobeApiEvent></apiOperation><apiValue id="air.update:ApplicationUpdaterUI:configurationFile:get"><apiName>configurationFile</apiName><shortdesc>
		delay プロパティと updateURL プロパティの値を設定する設定ファイルの場所。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc>
		<codeph>delay</codeph> プロパティと <codeph>updateURL</codeph> プロパティの値を設定する設定ファイルの場所。更新処理時にアプリケーションでさまざまな確認のダイアログボックスを表示するかどうかを決定する設定もあります。このプロパティで指定したファイルが存在しない場合は、<codeph>initialize()</codeph> メソッドを呼び出すと Error がスローされます。
		
		<p>設定ファイルのサンプルを次に示します。</p>
		
		<codeblock> &lt;?xml version="1.0" encoding="utf-8"?> 
 		&lt;configuration xmlns="http://ns.adobe.com/air/framework/update/configuration/1.0" >
 		  &lt;url>app:/server/update.xml&lt;/url>
 		  &lt;delay>1&lt;/delay>
		   &lt;defaultUI>
		      &lt;dialog name="checkForUpdate" visible="true" />
		       &lt;dialog name="downloadUpdate" visible="false" />
		       &lt;dialog name="downloadProgress" visible="true" />
		       &lt;dialog name="installUpdate" visible="true" />    
		   &lt;/defaultUI>
		&lt;/configuration></codeblock>
		
		<p>設定ファイルを読み込む代わりに、<ph platform="actionscript">ActionScript</ph> <ph platform="javascript">JavaScript</ph> コードを使用して、ApplicationUpdaterUI オブジェクトの <codeph>delay</codeph>、<codeph>isCheckForUpdateVisible</codeph>、<codeph>isDownloadProgressVisible</codeph>、<codeph>isDownloadUpdateVisible</codeph>、<codeph>isFileUpdateVisible</codeph>、<codeph>isInstallUpdateVisible</codeph> および <codeph>updateURL</codeph> の各プロパティを設定できます。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI/delay"><linktext>delay</linktext></link><link href="air.update.xml#ApplicationUpdaterUI/updateURL"><linktext>updateURL</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:currentVersion:get"><apiName>currentVersion</apiName><shortdesc>
		アプリケーションの現在のバージョン。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		アプリケーションの現在のバージョン。このプロパティは、<codeph>initialize()</codeph> メソッドの呼び出し時に設定されます。これは、アプリケーション記述ファイルのバージョンに設定されます。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:delay:get"><apiName>delay</apiName><shortdesc>
		新しい更新の周期的チェックの間隔（日数単位）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier><apiDefaultValue>0
		
		</apiDefaultValue></apiValueDef><apiDesc>
		新しい更新の周期的チェックの間隔（日数単位）。
		
		<p>値が 0 （デフォルト値）の場合、タイマーがアクティブでないことを示し、周期的なチェックは実行されません。遅延は、このプロパティまたは設定ファイルを使用して設定できます。両方の方法を使用して値を設定すると、このプロパティを使用して設定した値が使用されます。</p>
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI/configurationFile"><linktext>configurationFile</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isCheckForUpdateVisible:get"><apiName>isCheckForUpdateVisible</apiName><shortdesc>
		アップデートの有無をチェック、アップデートがありません、およびアップデートエラーダイアログボックスの表示を有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		アップデートの有無をチェック、アップデートがありません、およびアップデートエラーダイアログボックスの表示を有効にします。<codeph>true</codeph> に設定すると、Updater は更新処理の一部としてこれらのダイアログボックスを表示します。更新設定ファイルで設定することもできます。このプロパティを使用して設定した値は、更新設定ファイルでの設定をオーバーライドします。 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isDownloadProgressVisible:get"><apiName>isDownloadProgressVisible</apiName><shortdesc>
		
		アップデートのダウンロードダイアログボックスの表示を有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		
		アップデートのダウンロードダイアログボックスの表示を有効にします。<codeph>true</codeph> に設定すると、Updater は更新処理の一部としてこのダイアログボックスを表示します。更新設定ファイルで設定することもできます。このプロパティを使用して設定した値は、更新設定ファイルでの設定をオーバーライドします。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isDownloadUpdateVisible:get"><apiName>isDownloadUpdateVisible</apiName><shortdesc>
		アップデートのダウンロードダイアログボックスの表示を有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		アップデートのダウンロードダイアログボックスの表示を有効にします。<codeph>true</codeph> に設定すると、Updater は更新処理の一部としてこれらのダイアログボックスを表示します。更新設定ファイルで設定することもできます。このプロパティを使用して設定した値は、更新設定ファイルでの設定をオーバーライドします。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isFileUpdateVisible:get"><apiName>isFileUpdateVisible</apiName><shortdesc>
		
		ファイル - 利用可能なアップデート、ファイル - 利用可能なアップデートがありません、およびファイル - エラーダイアログボックスの表示を有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		
		ファイル - 利用可能なアップデート、ファイル - 利用可能なアップデートがありません、およびファイル - エラーダイアログボックスの表示を有効にします。<codeph>true</codeph> に設定すると、Updater は更新処理の一部としてこれらのダイアログボックスを表示します。更新設定ファイルで設定することもできます。このプロパティを使用して設定した値は、更新設定ファイルでの設定をオーバーライドします。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isFirstRun:get"><apiName>isFirstRun</apiName><shortdesc>
		正常な更新後の最初の実行の場合は true を返し、それ以外の場合は false を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		正常な更新後の最初の実行の場合は <codeph>true</codeph> を返し、それ以外の場合は <codeph>false</codeph> を返します。Updater は、<codeph>initialize()</codeph> メソッドの呼び出し時にこの値を設定します。あるバージョンから別のバージョンにデータを移行する必要がある場合、開発者は <codeph>isFirstRun</codeph> が <codeph>true</codeph> に設定されているかどうかを検査する必要があります。
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI/wasPendingUpdate"><linktext>wasPendingUpdate</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isInstallUpdateVisible:get"><apiName>isInstallUpdateVisible</apiName><shortdesc>
		アップデートのインストールダイアログボックスの表示を有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		アップデートのインストールダイアログボックスの表示を有効にします。<codeph>true</codeph> に設定すると、Updater は更新処理の一部としてこのダイアログボックスを表示します。更新設定ファイルで設定することもできます。このプロパティを使用して設定した値は、更新設定ファイルでの設定をオーバーライドします。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isNewerVersionFunction:get"><apiName>isNewerVersionFunction</apiName><shortdesc>
		Updater がバージョン比較を実行するために使用する必要がある関数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Function</apiValueClassifier></apiValueDef><apiDesc>
		Updater がバージョン比較を実行するために使用する必要がある関数。デフォルトでは、更新フレームワークがバージョンの比較を行って、リモートサイトからのバージョンがインストールされているアプリケーションのバージョンより新しいかどうかを判定します。ただし、デフォルトの比較が開発者のバージョン管理方式と一致しない場合があります。このプロパティを設定して、比較を行う新しい関数を提供します。 
		
		<p>デフォルトの比較関数は、<i>x.y.z</i> のようなバージョンを受け付けます。x、y、z は文字または数字です。デフォルトの比較関数によって認識される特殊な条件が存在します。テスト関数では、バージョン文字列内に <codeph>"alpha"</codeph>、<codeph>"beta"</codeph>、または <codeph>"rc"</codeph> を検出した場合、<codeph>alpha</codeph> &lt; <codeph>beta</codeph> &lt; <codeph>rc</codeph> の順でバージョンが大きくなるものと見なします。</p>
		
		</apiDesc><example conref="examples\ApplicationUpdater.configurationFunction.1.as"> 以下のコードは、カスタム関数 <codeph>customFn</codeph> を定義しています。これは、<codeph>appUpdate</codeph> Updater オブジェクト用のカスタム関数です。サンプルの関数は、意図的に簡単なものになっています。バージョン管理方式の規則に基づいて、カスタム関数はブール値を返す必要があります。
<codeblock>
appUpdate.isNewerVersionFunction = customFn; 

function customFn (currentVersion:String, updateVersion:String):Boolean 
{
    return updateVersion > currentVersion;
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isUnexpectedErrorVisible:get"><apiName>isUnexpectedErrorVisible</apiName><shortdesc>
		予期しないエラーダイアログボックスの表示を有効にします。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		予期しないエラーダイアログボックスの表示を有効にします。<codeph>true</codeph> に設定すると、Application Updater は更新処理の一部としてこのダイアログボックスを表示します。更新設定ファイルで設定することもできます。このプロパティを使用して設定した値は、更新設定ファイルでの設定をオーバーライドします。 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isUpdateInProgress:get"><apiName>isUpdateInProgress</apiName><shortdesc>
		Boolean プロパティ。更新が実行中の場合は true、それ以外の場合は false です。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		Boolean プロパティ。更新が実行中の場合は <codeph>true</codeph>、それ以外の場合は <codeph>false</codeph> です。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:localeChain:get"><apiName>localeChain</apiName><shortdesc>
		ユーザーインターフェイスが使用するロケールチェーンを定義する配列。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Array</apiValueClassifier></apiValueDef><apiDesc>
		ユーザーインターフェイスが使用するロケールチェーンを定義する配列。通常、このプロパティを使用するのは JavaScript（HTML）を開発する場合だけです。 
		
		<p>Flex を開発する場合は、ResourceManager を使用してロケールチェーンを処理できます。 </p>
		
		<p>HTML ベースのアプリケーションの場合、デフォルトでは、言語は <codeph>Capabilities.languages</codeph> 配列内のこれらの言語とユーザーインターフェイスでサポートされる 10 の言語の間でソートされます。一致が見つからない場合は、ユーザーインターフェイスで英語が使用されます。 </p>
		
		<p>この JavaScript の例では、AIR SDK に含まれる AIR HTML ローカライズフレームワークを使用しています。言語のリストと対照して言語をソートし、デフォルトのフォールバック言語として英語を設定しています。</p>
		
		<codeblock> appUpdater.addResources("ro_RO", {titleCheck: "Titlu", msgCheck: "Mesaj", btnCheck: "Buton"});
		appUpdater.addResources("hu", {titleCheck: "C�m", msgCheck: "�zenet"}); 
		var languages = ["ro", "hu"];
		languages = languages.concat(air.Capabilities.languages);
		var sortedLanguages = air.Localizer.sortLanguagesByPreference(languages, air.Capabilities.language, "en-US");  
		sortedLanguages.push("en-US");
		appUpdater.localeChain = sortedLanguages;</codeblock>
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI/addResources()"><linktext>addResources()</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:previousApplicationStorageDirectory:get"><apiName>previousApplicationStorageDirectory</apiName><shortdesc>
		アプリケーション記憶領域ディレクトリの前の場所（更新後に変更されている場合）。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc>
		アプリケーション記憶領域ディレクトリの前の場所（更新後に変更されている場合）。アプリケーション記憶領域ディレクトリの場所は、証明書の移行を伴うアップグレード後に変更されます。証明書の移行がない場合は、ユーザーがアプリケーションを更新してもアプリケーション記憶領域ディレクトリは変更されません。このプロパティは <codeph>null</codeph> に設定されます。このプロパティは、<codeph>initialize()</codeph> メソッドの呼び出し時に設定されます。 
		
		<p>AIR ファイルを ADT とパッケージ化するときに開発者が <codeph>-migrate</codeph> オプションを使用する場合、AIR アプリケーションの新しいバージョンに新しい証明書で署名できます。AIR アプリケーションの新しいバージョンが新しい署名の証明書を使用する場合、ユーザーが新しいバージョンをインストールすると、アプリケーションのローカルの記憶領域ディレクトリが変更されます。古いアプリケーション記憶領域ディレクトリから新しいアプリケーション記憶領域ディレクトリにデータを転送する場合は、このプロパティを使用します（<codeph>File.applicationStorageDirectory</codeph>）。詳細については、Adobe AIR 開発者ガイドの「コマンドラインツールを使用した AIR アプリケーションの作成」の章の「アプリケーション証明書を変更するための AIR ファイルへの署名」を参照してください。</p>
		
		 </apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:previousVersion:get"><apiName>previousVersion</apiName><shortdesc>
		アプリケーションの前のバージョン。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		アプリケーションの前のバージョン。このプロパティは、<codeph>initialize()</codeph> メソッドの呼び出し時に設定されます。アプリケーションの、アップグレードする前のバージョン<i/>を返します。<codeph>isfirstRun</codeph> が <codeph>true</codeph> の場合にのみ設定され、それ以外の場合は <codeph>null</codeph> に設定されます。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:updateDescriptor:get"><apiName>updateDescriptor</apiName><shortdesc>
		更新 URL からダウンロードされた更新記述ファイルのコンテンツ。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>XML</apiValueClassifier></apiValueDef><apiDesc>
		更新 URL からダウンロードされた更新記述ファイルのコンテンツ。Updater オブジェクトが <codeph>updateStatus</codeph> イベントを送出した後でのみ、このプロパティは null 以外の値になります。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:updateURL:get"><apiName>updateURL</apiName><shortdesc>
		更新記述ファイルの場所。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		更新記述ファイルの場所。URLRequest のパスとして有効な任意の場所が受け付けられます。Updater に必要な必須の設定はこれだけです。更新 URL は、このプロパティまたは設定ファイルを使用して設定できます。両方の方法を使用して値を設定すると、Updater はこのプロパティを使用して設定した値を使用します。
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI/configurationFile"><linktext>configurationFile</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:wasPendingUpdate:get"><apiName>wasPendingUpdate</apiName><shortdesc>
		インストールが失敗したかどうかに関係なく、延期された更新があった場合は true を返します。それ以外の場合は false を返します。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		インストールが失敗したかどうかに関係なく、延期された更新があった場合は <codeph>true</codeph> を返します。それ以外の場合は <codeph>false</codeph> を返します。Updater は、<codeph>initialize()</codeph> メソッドの呼び出し時にこのプロパティを設定します。更新のインストールに失敗したかどうかを確認するには、<codeph>wasPendingUpdate</codeph> プロパティおよび <codeph>isFirstRun</codeph> プロパティを使用します（失敗した場合は <codeph>wasPendingUpdate</codeph> が <codeph>true</codeph> に、<codeph>isFirstRun</codeph> が <codeph>false</codeph> に設定されます）。
		
		</apiDesc></apiValueDetail><related-links><link href="air.update.xml#ApplicationUpdaterUI/isFirstRun"><linktext>isFirstRun</linktext></link></related-links></apiValue></apiClassifier></apiPackage>