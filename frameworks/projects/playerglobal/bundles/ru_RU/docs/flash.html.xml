<?xml version="1.0"?>
<apiPackage id="flash.html"><apiName>flash.html</apiName><apiDetail/><apiClassifier id="flash.html:HTMLHistoryItem"><apiName>HTMLHistoryItem</apiName><shortdesc>
 Объект HTMLHistoryItem описывает расположение в журнале навигации объекта HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Объект HTMLHistoryItem описывает расположение в журнале навигации объекта HTMLLoader.
 
 </apiDesc></apiClassifierDetail><related-links><link href="HTMLLoader.html"><linktext>HTMLLoader</linktext></link><link href="HTMLWindowCreateOptions.html"><linktext>HTMLWindowCreateOptions</linktext></link></related-links><apiValue id="flash.html:HTMLHistoryItem:isPost:get"><apiName>isPost</apiName><shortdesc>
	Обозначает, включает ли страница HTML данные POST.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
	Обозначает, включает ли страница HTML данные POST.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLHistoryItem:originalUrl:get"><apiName>originalUrl</apiName><shortdesc>
	Исходный указатель URL страницы HTML (перед выполнением любых перенаправлений).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	Исходный указатель URL страницы HTML (перед выполнением любых перенаправлений).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLHistoryItem:title:get"><apiName>title</apiName><shortdesc>
	Заголовок страницы HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	Заголовок страницы HTML.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLHistoryItem:url:get"><apiName>url</apiName><shortdesc>
	URL-адрес страницы HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	URL-адрес страницы HTML.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLHost"><apiName>HTMLHost</apiName><shortdesc>
 Объект HTMLHost определяет поведение объекта HTMLLoader для элементов пользовательского интерфейса, которыми можно управлять путем задания различных свойств или вызова методов объекта window страницы HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Объект HTMLHost определяет поведение объекта HTMLLoader для элементов пользовательского интерфейса, которыми можно управлять путем задания различных свойств или вызова методов объекта <codeph>window</codeph> страницы HTML. Учитываются следующие методы и свойства:
 
 <ul>
 
 		<li><codeph>window.blur()</codeph></li>
 		<li><codeph>window.focus()</codeph></li>
 		<li><codeph>window.moveBy()</codeph></li>
 		<li><codeph>window.moveTo()</codeph></li>
 		<li><codeph>window.location</codeph></li>
 		<li><codeph>window.close()</codeph></li>
 		<li><codeph>window.open()</codeph></li>
 		<li><codeph>window.resizeBy()</codeph></li>
 		<li><codeph>window.resizeTo()</codeph></li>
 		<li><codeph>window.status</codeph></li>
 		<li><codeph>window.document.title</codeph></li>
 </ul>
 
 <p>Методы в классе HTMLHost предоставляют способы обработки изменений в каждом из этих параметров <codeph>window</codeph>. Для использования этого класса необходимо создать новый класс (подкласс), расширяющий класс HTMLHost и перезаписывающий методы, для которых необходимо определить поведение. Методы класса HTMLHost обрабатывают следующие свойства и методы JavaScript:</p>
 
 <adobetable class="innertable">
 
 
 
 
 
 
 
 
 
 <tgroup cols="2"><thead><row><entry>Свойство или метод JavaScript</entry><entry>Метод HTMLHost</entry></row></thead><tbody><row>
 		<entry><codeph>window.blur()</codeph></entry>
 		<entry><codeph>windowBlur()</codeph></entry>
 </row><row>
 		<entry><codeph>window.focus()</codeph></entry>
 		<entry><codeph>windowFocus</codeph></entry>
 </row><row>
 		<entry><codeph>window.location</codeph></entry>
 		<entry><codeph>updateLocation</codeph></entry>
 </row><row>
 		<entry><codeph>window.close()</codeph></entry>
 		<entry><codeph>windowClose</codeph></entry>
 </row><row>
 		<entry><codeph>window.open()</codeph></entry>
 		<entry><codeph>createWindow</codeph></entry>
 </row><row>
 		<entry><codeph>window.status</codeph></entry>
 		<entry><codeph>updateStatus</codeph></entry>
 </row><row>
 		<entry><codeph>window.document.title</codeph></entry>
 		<entry><codeph>updateTitle</codeph></entry>
 </row></tbody></tgroup></adobetable>
 
 <p>При изменении методов <codeph>window.moveBy()</codeph>, <codeph>window.moveTo()</codeph>, <codeph>window.resizeBy()</codeph> и <codeph>window.resizeTo()</codeph> перезаписывается метод <codeph>set windowRect()</codeph> в подклассе HTMLHost.</p>
 
 <p>Каждый объект HTMLHost можно связать только с одним объектом HTMLLoader. Эта взаимосвязь устанавливается путем назначения экземпляра HTMLHost свойству <codeph>htmlHost</codeph> объекта HTMLLoader. При присвоении значения <codeph>null</codeph> свойству <codeph>htmlHost</codeph> объекта HTMLLoader или объекта HTMLHost в качестве свойства <codeph>htmlHost</codeph> другого объекта HTMLLoader выполняется удаление HTMLHost из первого объекта HTMLLoader.</p>
 
 </apiDesc><example conref="examples\HTMLHost.1.as"> Следующий код определяет CustomHost, подкласс класса HTMLHost. Методы класса CustomHost переопределяют наследованные методы класса HTMLHost при определении действий, предпринимаемых, когда код JavaScript страницы HTMLLoader задает различные свойства или вызывает различные методы объекта <codeph>window</codeph>:
<codeblock>
package
{
    import flash.html.HTMLHost;
    import flash.html.HTMLLoader;
    import flash.display.NativeWindow;
    import flash.display.NativeWindowInitOptions;
    import flash.display.StageScaleMode;
    import flash.geom.Rectangle;
    import flash.text.TextField;

    public class CustomHost extends HTMLHost
    {
        import flash.html.*;
        public var statusField:TextField;
        public function CustomHost(defaultBehaviors:Boolean=true)
        {
            super(defaultBehaviors);
        }
        override public function windowClose():void
        {
            htmlLoader.stage.window.close();
        }
        override public function createWindow(windowCreateOptions:HTMLWindowCreateOptions):HTMLLoader
        {
            var initOptions:NativeWindowInitOptions = new NativeWindowInitOptions();
            var window:NativeWindow = new NativeWindow(initOptions);
            window.visible = true;
            var htmlLoader2:HTMLLoader = new HTMLLoader();
            htmlLoader2.width = window.width;
            htmlLoader2.height = window.height;
            window.stage.scaleMode = StageScaleMode.NO_SCALE;
            window.stage.addChild(htmlLoader2);
            return htmlLoader2;
        }
        override public function updateLocation(locationURL:String):void
        {
            trace(locationURL);
        }        
        override public function set windowRect(value:Rectangle):void
        {
            htmlLoader.stage.nativeWindow.bounds = value;
        }
        override public function updateStatus(status:String):void
        {
            statusField.text = status;
        }        
        override public function updateTitle(title:String):void
        {
            htmlLoader.stage.nativeWindow.title = title + "- Example Application";
        }
        override public function windowBlur():void
        {
            htmlLoader.alpha = 0.5;
        }
        override public function windowFocus():void
        {
            htmlLoader.alpha = 1;
        }
    }
}
</codeblock> Создайте следующий класс, который добавляет объект HTMLLoader в рабочую область, а также объект TextField с именем <codeph>statusBar</codeph>. Объект HTMLLoader определяет объект CustomHost в качестве своего свойства <codeph>htmlHost</codeph>:
 
 <codeblock>package
 {
     import flash.display.Sprite;
 
     public class SimpleHTMLBox extends Sprite
     {
         import mx.controls.HTML;
         import flash.html.HTMLLoader;
         import flash.text.TextField;
         import flash.net.URLRequest;
         import CustomHost;
         private var host:CustomHost;
         private var statusField:TextField;
         private var html:HTMLLoader;
         
         public function SimpleHTMLBox()
         {
             html = new HTMLLoader();
             var url:String = "Test.html";
             var urlReq:URLRequest = new URLRequest(url); 
             html.load(urlReq);
             
             host = new CustomHost();
             html.htmlHost = host;
             statusField = new TextField();
             host.statusField = statusField;
             
             configureUI();
         }
         private function configureUI():void
         {
             html.width = 400;
             html.height = 200;
             statusField.width = 400;
             statusField.height = 24;
             statusField.border = true;
             statusField.y = 200;
             
             addChild(html);
             addChild(statusField);                
         }
         
     }
 }</codeblock>
 
 <p>Создайте приложение AIR, которое добавляет объект, определенный этим классом, в рабочую область основного окна.</p>
 
 <p>Создайте страницу HTML с именем Test.html в каталоге ресурсов приложения (каталог, содержащий файл дескриптора приложения) и вставьте в нее следующее содержимое:</p>
 
 <codeblock>&lt;html>
     &lt;head>
         &lt;title>Test&lt;/title>
     &lt;/head>
     &lt;body>
         &lt;a href="#" onclick="window.open('Test.html')">window.open('Test.html')&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.document.location = 'www.adobe.com'">window.document.location = 'www.adobe.com'&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.moveBy(6, 12)">moveBy(6, 12)&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.close()">window.close()&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.blur()">window.blur()&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.focus()">window.focus()&lt;/a>
         &lt;br/>&lt;a href="#" onclick="window.status = new Date().toString()">window.status = new Date().toString()&lt;/a>
     &lt;/body>
 &lt;/html></codeblock>
 
 <p>При тестировании приложения класс CustomHost обрабатывает связанные с пользовательским интерфейсом настройки JavaScript страницы HTML.</p>
</example></apiClassifierDetail><related-links><link href="HTMLLoader.html"><linktext>HTMLLoader</linktext></link><link href="HTMLWindowCreateOptions.html"><linktext>HTMLWindowCreateOptions</linktext></link></related-links><apiConstructor id="flash.html:HTMLHost:HTMLHost"><apiName>HTMLHost</apiName><shortdesc>
	 Создает объект HTMLHost.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>defaultBehaviors</apiItemName><apiOperationClassifier>Boolean</apiOperationClassifier><apiData>true</apiData><apiDesc>Определяет необходимость предоставления вариантов поведения корневого содержимого по умолчанию.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
	 Создает объект HTMLHost.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.html:HTMLHost:createWindow"><apiName>createWindow</apiName><shortdesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод window.open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект HTMLLoader, содержащий новую страницу HTML. Обычно новый объект HTMLLoader создается в этом методе, добавляется при создании нового объекта NativeWindow, а затем возвращается.
	
	</apiDesc><apiOperationClassifier>flash.html:HTMLLoader</apiOperationClassifier></apiReturn><apiParam><apiItemName>windowCreateOptions</apiItemName><apiOperationClassifier>flash.html:HTMLWindowCreateOptions</apiOperationClassifier><apiDesc>Объект, содержащий свойства в строке, переданной в качестве параметра <codeph>features</codeph> при вызове метода <codeph>window.open()</codeph>.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод <codeph>window.open()</codeph>. 
	
	<p>По умолчанию во время выполнения при вызове в сценарии JavaScript метода <codeph>window.open()</codeph> на странице HTML объекта HTMLLoader новый объект NativeWindow <i>не</i> открывается. Новый объект NativeWindow можно открыть во время выполнения путем создания нового объекта NativeWindow в перезаписи метода <codeph>createWindow</codeph> в подклассе класса HTMLHost.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:updateLocation"><apiName>updateLocation</apiName><shortdesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader задает свойство window.location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>locationURL</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Значение, которое настроено для свойства <codeph>location</codeph> свойства <codeph>window</codeph> объекта HTMLLoader.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader задает свойство <codeph>window.location</codeph>. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:updateStatus"><apiName>updateStatus</apiName><shortdesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader задает свойство window.status.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>status</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Значение, которое настроено для свойства <codeph>status</codeph> свойства <codeph>window</codeph> объекта HTMLLoader.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader задает свойство <codeph>window.status</codeph>. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:updateTitle"><apiName>updateTitle</apiName><shortdesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader задает свойство window.document.title или изменяется элемент title с помощью элемента DOM или при загрузке новой страницы.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Значение, которое настроено для свойства <codeph>window.document.title</codeph> объекта HTMLLoader.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader задает свойство <codeph>window.document.title</codeph> или изменяется элемент <codeph>title</codeph> с помощью элемента DOM или при загрузке новой страницы.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:windowBlur"><apiName>windowBlur</apiName><shortdesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод window.blur().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод <codeph>window.blur()</codeph>.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:windowClose"><apiName>windowClose</apiName><shortdesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод window.close().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод <codeph>window.close()</codeph>. 
	
	<p>По умолчанию при вызове в сценарии JavaScript метода <codeph>window.close()</codeph> на странице HTML объекта HTMLLoader закрываются окна, в которых содержится объект HTMLLoader.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLHost:windowFocus"><apiName>windowFocus</apiName><shortdesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод window.focus().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	Обращение к функции происходит, когда код JavaScript в объекте HTMLLoader вызывает метод <codeph>window.focus()</codeph>.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.html:HTMLHost:htmlLoader:get"><apiName>htmlLoader</apiName><shortdesc>
	Объект HTMLLoader, к которому применяется данный объект HostControl.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flash.html:HTMLLoader</apiValueClassifier></apiValueDef><apiDesc>
	Объект HTMLLoader, к которому применяется данный объект HostControl. Свойство <codeph>htmlHost</codeph> этого объекта HTMLLoader настроено для данного объекта HostControl.
	
	</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#htmlHost"><linktext>HTMLLoader.htmlHost</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLHost:windowRect:get"><apiName>windowRect</apiName><shortdesc>
	Свойство, изменяющееся, когда код JavaScript в объекте HTMLLoader вызывает метод window.moveBy(), window.moveTo(), window.resizeBy() или window.resizeTo().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc>
	Свойство, изменяющееся, когда код JavaScript в объекте HTMLLoader вызывает метод <codeph>window.moveBy()</codeph>, <codeph>window.moveTo()</codeph>, <codeph>window.resizeBy()</codeph> или <codeph>window.resizeTo()</codeph>. 
	
	<p>В подклассе HTMLHost при необходимости перезапишите метод <codeph>set windowRect()</codeph> для обработки новых границ окна.</p>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLPDFCapability"><apiName>HTMLPDFCapability</apiName><shortdesc>
	Класс HTMLPDFCapability содержит возможные значения свойства pdfCapability объекта HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	Класс HTMLPDFCapability содержит возможные значения свойства <codeph>pdfCapability</codeph> объекта HTMLLoader. Он также определяет значения свойства <codeph>errorID</codeph> объекта ErrorEvent, диспетчеризация которого выполнена, если попытка загрузки содержимого PDF была неудачной.
	
	</apiDesc></apiClassifierDetail><related-links><link href="HTMLLoader.html#pdfCapability"><linktext>HTMLLoader.pdfCapability</linktext></link></related-links><apiValue id="flash.html:HTMLPDFCapability:ERROR_CANNOT_LOAD_READER"><apiName>ERROR_CANNOT_LOAD_READER</apiName><shortdesc>
				Ошибка возвращена ОС при попытке загрузить приложение Adobe Reader или Acrobat или одну из необходимых библиотек.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3204</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Ошибка возвращена ОС при попытке загрузить приложение Adobe Reader или Acrobat или одну из необходимых библиотек.
		
              <p><i>Примечание.</i> Ошибка не возвращается из объекта <codeph>HTMLLoader.pdfCapability</codeph>, она передается как свойство <codeph>errorID</codeph> объекта ErrorEvent, диспетчеризация которого выполняется, когда объект HTMLLoader пытается загрузить содержимое PDF, а операционная система возвращает ошибку. Объект <codeph>HTMLLoader.pdfCapability</codeph> может возвращать значение <codeph>PDFCapability.STATUS_OK</codeph>, поскольку он проверяет только конфигурацию и не пытается загружать библиотеки.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:ERROR_INSTALLED_READER_NOT_FOUND"><apiName>ERROR_INSTALLED_READER_NOT_FOUND</apiName><shortdesc>
				Версия Adobe Reader не обнаружена.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3201</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Версия Adobe Reader не обнаружена. Объекту HTMLLoader не удается отобразить содержимое PDF.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:ERROR_INSTALLED_READER_TOO_OLD"><apiName>ERROR_INSTALLED_READER_TOO_OLD</apiName><shortdesc>
				Приложение Adobe Reader обнаружено, но версия является слишком старой.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3202</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Приложение Adobe Reader обнаружено, но версия является слишком старой. Объекту HTMLLoader не удается отобразить содержимое PDF.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:ERROR_PREFERRED_READER_TOO_OLD"><apiName>ERROR_PREFERRED_READER_TOO_OLD</apiName><shortdesc>
				Необходимая версия (8.1 или более поздняя) приложения Adobe Reader или Acrobat обнаружена, но версия приложения Adobe Reader, настроенная для обработки содержимого PDF, является более ранней, чем 8.1.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3203</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Необходимая версия (8.1 или более поздняя) приложения Adobe Reader или Acrobat обнаружена, но версия приложения Adobe Reader, настроенная для обработки содержимого PDF, является более ранней, чем 8.1. Объекту HTMLLoader не удается отобразить содержимое PDF.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLPDFCapability:STATUS_OK"><apiName>STATUS_OK</apiName><shortdesc>
				Необходимая версия (8.1 или более поздняя) приложения Adobe Reader обнаружена, и содержимое PDF можно загрузить в объект HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
				Необходимая версия (8.1 или более поздняя) приложения Adobe Reader обнаружена, и содержимое PDF можно загрузить в объект HTMLLoader.
		
				<p><i>Примечание.</i> Если в системе Windows установлена и запущена более ранняя версия Acrobat, используется любая запущенная версия приложения Acrobat или Adobe Reader (7.x или более поздняя), даже если установлена более поздняя версия. В этом случае, если для свойства <codeph>pdfCapability</codeph> задано значение <codeph>PDFCapability.STATUS_OK</codeph>, когда приложение AIR пытается загрузить содержимое PDF в объект HTMLLoader, в более ранней версии Acrobat или Adobe Reader отображается предупреждение, а при выполнении AIR сообщение об ошибке не появляется. Если такая ситуация может возникнуть, проинструктируйте пользователей, что необходимо закрыть приложение Acrobat или Adobe Reader при запуске данного приложения. Или рассмотрите возможность отображения этих инструкций, если загрузка содержимого PDF не выполняется за приемлемое время.</p>
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLLoader"><apiName>HTMLLoader</apiName><shortdesc>
    Класс HTMLLoader определяет тип экранного объекта, который является контейнером содержимого HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.display:Sprite</apiBaseClassifier></apiClassifierDef><apiDesc>
    Класс HTMLLoader определяет тип экранного объекта, который является контейнером содержимого HTML. 
	
    <p platform="actionscript">Размером по умолчанию объекта HTMLLoader является 0 x 0 пикселей. Задайте свойства <codeph>width</codeph> и <codeph>height</codeph>, чтобы сделать объект HTMLLoader видимым.</p>
	
    	<p platform="actionscript">
	Максимальные размеры объекта HTMLLoader составляют 2 880 пикселей в высоту и 2 880 пикселей в ширину. Если для свойства <codeph>width</codeph> или <codeph>height</codeph> объекта HTMLLoader задать число, превышающее указанное ограничение, объект HTMLLoader выдаст исключение ArgumentError.
	</p>
	
	<p platform="javascript">В коде JavaScript можно получать доступ к объекту HTMLLoader для страницы HTML путем извлечения свойства <codeph>runtime.htmlLoader</codeph>. Данное свойство доступно только для содержимого, обрабатываемого в изолированной программной среде безопасности.</p>
	
	<p platform="javascript">Множество свойств и методов HTMLLoader, наследуемых от других классов, принадлежат объектам HTMLLoader, выполняемым в SWF-файлах (в которых используется список отображения ActionScript 3.0). Эти свойства и методы не настолько необходимы в коде JavaScript, выполняемом в приложениях AIR на основе HTML. Для получения сведений об этих свойствах и методах см. <xref href="http://www.adobe.com/go/learn_flex3_aslr_ru" scope="external">справочник по языку ActionScript 3.0</xref>.</p>
	
    </apiDesc><example conref="examples\HTMLLoader.1.as"> Следующий код создает объект HTMLLoader, задает его ширину и высоту, загружает URL-адрес http://www.adobe.com и добавляет объект в список отображения:
<codeblock>
package {
    import flash.display.Sprite;
    import flash.html.HTMLLoader;
    import flash.net.URLRequest;

    public class HTMLLoaderExample extends Sprite
    {
        public function HTMLLoaderExample()
        {
            var html:HTMLLoader = new HTMLLoader();
            var urlReq:URLRequest = new URLRequest("http://www.adobe.com/");
            html.width = stage.stageWidth;
            html.height = stage.stageHeight;
            html.load(urlReq); 
            addChild(html);
        }
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.HTML_DOM_INITIALIZE_htmlDOMInitialize"><apiName>htmlDOMInitialize</apiName><shortdesc>
 Сигнализирует, что при выполнении операции загрузки создана модель HTML DOM.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_DOM_INITIALIZE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Сигнализирует, что при выполнении операции загрузки создана модель HTML DOM. Методы <codeph>load()</codeph> и <codeph>loadString()</codeph> объекта HTMLLoader вызывают исключение во время отправки этого события. Любое свойство или метод любого объекта JavaScript, доступного в свойстве <codeph>window</codeph> объекта HTMLLoader, который управляет URL-адресом, загружаемым в объект HTMLLoader, вызывает исключение при отправке этого события. Например, настройка <codeph>window.location</codeph> путем задания свойства <codeph>window</codeph> объекта HTMLLoader вызывает исключение JavaScript.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION_uncaughtScriptException"><apiName>uncaughtScriptException</apiName><shortdesc>
 Сигнализирует, что в объекте HTMLLoader создано необрабатываемое исключение JavaScript.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION</apiEventType><adobeApiEventClassifier>flash.events.HTMLUncaughtScriptExceptionEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Сигнализирует, что в объекте HTMLLoader создано необрабатываемое исключение JavaScript. Обработчики событий могут вызывать любой метод или получать доступ к любому свойству объекта HTMLLoader. Событие можно отменить, и операцией по умолчанию при запуске в компоненте AIR Debug Launcher является отправка стека JavaScript для вывода трассировки.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.SCROLL_scroll"><apiName>scroll</apiName><shortdesc>
 Сигнализирует, что свойство scrollH или scrollV изменено объектом HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.SCROLL</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Сигнализирует, что свойство <codeph>scrollH</codeph> или <codeph>scrollV</codeph> изменено объектом HTMLLoader. Объект HTMLLoader выполняет диспетчеризацию этого события, если JavaScript, выполняющийся в объекте HTMLLoader, вызывает метод <codeph>scrollTo()</codeph> объекта <codeph>window</codeph> и необходимое положение уже невидимо. Диспетчеризация события не выполняется, если код ActionScript изменяет свойство <codeph>scrollH</codeph> или <codeph>scrollV</codeph>. Обработчики событий могут вызывать любой метод или получать доступ к любому свойству объекта HTMLLoader.
 
 <p>Обработчикам этого события следует проверить свойства <codeph>scrollH</codeph> и <codeph>scrollV</codeph> для обновления всех полос прокрутки, связанных с объектом HTMLLoader.</p>
 
 <p>Объект HTMLLoader может выполнить диспетчеризацию этого события в любое время после инициирования операции загрузки, даже после выполнения объектом диспетчеризации события <codeph>complete</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.HTML_BOUNDS_CHANGE_htmlBoundsChange"><apiName>htmlBoundsChange</apiName><shortdesc>
 Сигнализирует, что одно или оба свойства contentWidth и contentHeight объекта HTMLLoader изменены.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_BOUNDS_CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Сигнализирует, что одно или оба свойства <codeph>contentWidth</codeph> и <codeph>contentHeight</codeph> объекта HTMLLoader изменены. Причиной может быть, к примеру, загрузка нового изображения или другого содержимого. Обработчики событий могут вызывать любой метод или получать доступ к любому свойству объекта HTMLLoader.
 
 <p>Объект HTMLLoader может выполнить диспетчеризацию этого события в любое время после инициирования операции загрузки, даже после выполнения объектом диспетчеризации события <codeph>complete</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#contentWidth"><linktext>contentWidth</linktext></link><link href="HTMLLoader.html#contentHeight"><linktext>contentHeight</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.LOCATION_CHANGE_locationChange"><apiName>locationChange</apiName><shortdesc>
 Сигнализирует, что свойство location объекта HTMLLoader изменено.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.LOCATION_CHANGE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/><apiTipTexts><apiTipText>Сигнализирует, что свойство location объекта HTMLLoader изменено.
 
 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc>
 Сигнализирует, что свойство <codeph>location</codeph> объекта HTMLLoader изменено. Обработчик этого события может вызывать любой метод или получать доступ к любому свойству объекта HTMLLoader.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.HTML_RENDER_htmlRender"><apiName>htmlRender</apiName><shortdesc>
 Сигнализирует, что визуализация содержимого объекта HTMLLoader полностью обновлена.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.HTML_RENDER</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Сигнализирует, что визуализация содержимого объекта HTMLLoader полностью обновлена. Диспетчеризация этого события может выполняться довольно часто при любом изменении визуализации содержимого HTML. Например, диспетчеризация этого события выполняется при отображении нового содержимого после перехода по ссылке или визуализации содержимого HTML с помощью кода JavaScript. Слушатели событий могут вызывать любой метод или получать доступ к любому свойству объекта HTMLLoader.
 
 <p>Обработчикам этого события следует проверить свойства <codeph>contentWidth</codeph> и <codeph>contentHeight</codeph> объекта HTMLLoader для обновления всех полос прокрутки, связанных с эти объектом.</p>
 
 <p>Объект HTMLLoader может выполнить диспетчеризацию этого события в любое время после инициирования операции загрузки, даже после выполнения объектом диспетчеризации события <codeph>complete</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.html:HTMLLoader_flash.events.Event.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
 Сигнализирует, что последняя операция загрузки, запрошенная методом loadString или load, завершена.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Сигнализирует, что последняя операция загрузки, запрошенная методом <codeph>loadString</codeph> или <codeph>load</codeph>, завершена. Диспетчеризация события выполняется <i>после</i> запуска события <codeph>load</codeph> кода JavaScript в модели HTML DOM объекта HTMLLoader. Передача события всегда выполняется асинхронно. Обработчик этого события может вызывать любой метод или получать доступ к любому свойству объекта HTMLLoader.
 
 </apiDesc></adobeApiEventDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link><link href="HTMLLoader.html#load()"><linktext>load()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.html:HTMLLoader:HTMLLoader"><apiName>HTMLLoader</apiName><shortdesc>
        Создает объект HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
        Создает объект HTMLLoader. 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.html:HTMLLoader:cancelLoad"><apiName>cancelLoad</apiName><shortdesc>
		 Отменяет любую выполняющуюся операцию загрузки.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Отменяет любую выполняющуюся операцию загрузки.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLLoader:createRootWindow"><apiName>createRootWindow</apiName><shortdesc>
         Создает новый объект NativeWindow, который содержит объект HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Новый объект HTMLLoader на этапе создания объекта NativeWindow.
		 
		 </apiDesc><apiOperationClassifier>flash.html:HTMLLoader</apiOperationClassifier></apiReturn><apiParam><apiItemName>visible</apiItemName><apiOperationClassifier>Boolean</apiOperationClassifier><apiData>true</apiData><apiDesc>Указывает, является ли окно видимым.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>windowInitOptions</apiItemName><apiOperationClassifier>flash.display:NativeWindowInitOptions</apiOperationClassifier><apiData>null</apiData><apiDesc>Задает параметры инициализации окна; если задано значение <codeph>null</codeph>, используются значения <codeph>NativeWindowInitOptions</codeph> по умолчанию.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>scrollBarsVisible</apiItemName><apiOperationClassifier>Boolean</apiOperationClassifier><apiData>true</apiData><apiDesc>Задает, будут ли в окне доступны полосы прокрутки.
		 
		 </apiDesc></apiParam><apiParam><apiItemName>bounds</apiItemName><apiOperationClassifier>flash.geom:Rectangle</apiOperationClassifier><apiData>null</apiData><apiDesc>Если задано значение <codeph>null</codeph>, устанавливает границы окна. Если для любого свойства <codeph>x</codeph>, <codeph>y</codeph>, <codeph>width</codeph> или <codeph>height</codeph> задано значение <codeph>NaN</codeph>, для соответствующего измерения окна сохраняется значение по умолчанию.
		 
         </apiDesc></apiParam></apiOperationDef><apiDesc>
         Создает новый объект NativeWindow, который содержит объект HTMLLoader. Используйте объект HTMLLoader, возвращенный эти методом, для загрузки содержимого HTML.
		 
		 <p>По умолчанию (если при вызове этого метода параметры не передаются) в новом окне используется стандартные системные настройки цвета и добавляются полосы прокрутки содержимого. Можно настроить параметры для изменения свойств нового окна.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.html:HTMLLoader:getHistoryAt"><apiName>getHistoryAt</apiName><shortdesc>
		 Возвращает запись журнала в заданном положении.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Объект URLRequest для записи журнала в заданном положении.
		 
		 </apiDesc><apiOperationClassifier>flash.html:HTMLHistoryItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>position</apiItemName><apiOperationClassifier>uint</apiOperationClassifier><apiDesc>Позиция в журнале.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Возвращает запись журнала в заданном положении.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:historyBack"><apiName>historyBack</apiName><shortdesc>
		 По возможности выполняет обратный переход в журнале браузера.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 По возможности выполняет обратный переход в журнале браузера.
		 
         <p>Вызов этого метода объекта HTMLLoader аналогичен вызову метода <codeph>back()</codeph> свойства <codeph>window.history</codeph> в сценарии JavaScript на странице HTML.</p>
		 
		 <p>Эта функция не приводит к возникновению ошибок.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:historyForward"><apiName>historyForward</apiName><shortdesc>
		 По возможности выполняет переход вперед в журнале браузера.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 По возможности выполняет переход вперед в журнале браузера.
		 
         <p>Вызов этого метода объекта HTMLLoader аналогичен вызову метода <codeph>forward()</codeph> свойства <codeph>window.history</codeph> в сценарии JavaScript на странице HTML.</p>
		 
		 <p>Эта функция не приводит к возникновению ошибок.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:historyGo"><apiName>historyGo</apiName><shortdesc>
		 Выполняет переход на заданное число шагов в журнале браузера.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>steps</apiItemName><apiOperationClassifier>int</apiOperationClassifier><apiDesc>Число шагов в журнале, на которое необходимо выполнить переход вперед (положительное число) или назад (отрицательное число).
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Выполняет переход на заданное число шагов в журнале браузера. Если число положительное, выполняется переход вперед, если отрицательное – назад. Если для перехода указано нулевое число шагов, выполняется перезагрузка.
		 
		 <p>Вызов этого метода эквивалентен вызову метода <codeph>go()</codeph> свойства <codeph>window.history</codeph> в сценарии JavaScript на странице HTML.</p>
		 
		 <p>Эта функция не приводит к возникновению ошибок.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:load"><apiName>load</apiName><shortdesc>
         Загружает объект HTMLLoader с данными с узла, заданного параметром urlRequestToLoad.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>urlRequestToLoad</apiItemName><apiOperationClassifier>flash.net:URLRequest</apiOperationClassifier><apiDesc>Объект URLRequest, в котором содержатся данные о загружаемом указателе URL. Кроме загружаемого указателя URL, в объекте URLRequest содержатся свойства, которые определяют метод отправки формы HTTP (GET или POST), любые данные, которые будут переданы в запросе, и заголовки запросов.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
         Загружает объект HTMLLoader с данными с узла, заданного параметром <codeph>urlRequestToLoad</codeph>. При вызове этого метода для свойства <codeph>loaded</codeph> изначально настраивается значение <codeph>false</codeph>. Этот метод инициирует операцию, которая всегда выполняется асинхронно.
		 
		 <p>Вызов этого метода неявно отменяет любую предыдущую ожидающую операцию загрузки, инициированную этим методом или методом <codeph>loadString()</codeph>. Событие <codeph>complete</codeph> для предыдущей операции загрузки не будет доставлено.</p>
		 
		 <p>Возможно, что событие <codeph>complete</codeph> не будет доставлено. Это происходит, когда не удается полностью загрузить содержимое HTML в объект HTMLLoader. Причиной может быть то, что содержимое HTML ссылается на URL-адрес сценария CGI, постоянно создающий новое содержимое.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flash.net.xml#URLRequest"><linktext>flash.net.URLRequest</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:loadString"><apiName>loadString</apiName><shortdesc>
         Загружает объект HTMLLoader с содержимым HTML в строке HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>htmlContent</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Строка с содержимым HTML, которую необходимо загрузить в объект HTMLLoader.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
         Загружает объект HTMLLoader с содержимым HTML в строке HTML. По завершении визуализации содержимого HTML в строке выполняется диспетчеризация события <codeph>complete</codeph>. Диспетчеризация события <codeph>complete</codeph> всегда выполняется асинхронно.
		 
		 <p>Вызов этого метода неявно отменяет любую предыдущую ожидающую операцию загрузки, инициированную этим методом или методом <codeph>load()</codeph>. Событие <codeph>complete</codeph> для предыдущей операции загрузки не будет доставлено.</p>
		 
		 <p>Если в содержимом HTML, указанном в строке, отсутствует ссылка на внешние ресурсы, этот метод выполняет синхронную визуализацию содержимого HTML. Однако диспетчеризация события <codeph>complete</codeph> выполняется асинхронно. Если свойству <codeph>loaded</codeph> этого класса сразу после вызова этой функции задано значение <codeph>true</codeph>, это означает, что содержимое HTML, указанное в аргументе <codeph>htmlContent</codeph>, было отображено синхронно.</p>
		 
		 <p>Возможно, что событие <codeph>complete</codeph> не будет доставлено. Это происходит, когда не удается полностью загрузить содержимое HTML в объект HTMLLoader. Причиной может быть то, что содержимое HTML ссылается на URL-адрес сценария CGI, постоянно создающий новое содержимое.</p>
		 
		 <p>Содержимое, загруженное с помощью метода <codeph>loadString()</codeph>, помещается в изолированную программную среду безопасности приложения, только если свойство <codeph>placeLoadStringContentInApplicationSandbox</codeph> имеет значение <codeph>true</codeph>.</p>
		 
         </apiDesc></apiOperationDetail><related-links><link href="HTMLLoader.html#placeLoadStringContentInApplicationSandbox"><linktext>placeLoadStringContentInApplicationSandbox</linktext></link></related-links></apiOperation><apiOperation id="flash.html:HTMLLoader:reload"><apiName>reload</apiName><shortdesc>
		 Повторно загружает страницу из текущего положения.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Повторно загружает страницу из текущего положения.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.html:HTMLLoader:authenticate:get"><apiName>authenticate</apiName><shortdesc>
		Задает обработку запросов аутентификации (true) или ее отсутствие (false) для запросов HTTP, отправленных этим объектом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.authenticate
		
        </apiDefaultValue></apiValueDef><apiDesc>
		Задает обработку запросов аутентификации (<codeph>true</codeph>) или ее отсутствие (<codeph>false</codeph>) для запросов HTTP, отправленных этим объектом. Если задано значение <codeph>false</codeph>, при выполнении заданий аутентификации возвращается ошибка HTTP.  
		
        </apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/authenticate"><linktext>flash.net.URLRequest.authenticate</linktext></link><link href="flash.net.xml#URLRequestDefaults/authenticate"><linktext>flash.net.URLRequestDefaults.authenticate</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:cacheResponse:get"><apiName>cacheResponse</apiName><shortdesc>
		Задает необходимость кэширования данных успешных ответов для запросов HTTP, отправленных этим объектом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.cacheResponse
		
        </apiDefaultValue></apiValueDef><apiDesc>
		Задает необходимость кэширования данных успешных ответов для запросов HTTP, отправленных этим объектом. Если задано значение <codeph>true</codeph>, в объекте HTMLLoader используется кэш HTTP операционной системы.
		
        </apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequestDefaults/cacheResponse"><linktext>flash.net.URLRequestDefaults.cacheResponse</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
		 Высота содержимого HTML (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Высота содержимого HTML (в пикселях). Это свойство можно изменить аналогичным изменению размеров объекта HTMLLoader способом. Например, на странице HTML часто используется полное значение высоты объекта HTMLLoader, и свойство <codeph>contentHeight</codeph> может измениться при изменении высоты объекта HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
		 Ширина содержимого HTML (в пикселях).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Ширина содержимого HTML (в пикселях). Это свойство можно изменить аналогичным изменению размеров объекта HTMLLoader способом. Например, на странице HTML часто используется полное значение ширины объекта HTMLLoader, и свойство <codeph>contentWidth</codeph> может измениться при изменении ширины объекта HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:hasFocusableContent:get"><apiName>hasFocusableContent</apiName><shortdesc>
		Определяет, является ли какое-либо содержимое в объекте HTMLLoader фокусируемым.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		Определяет, является ли какое-либо содержимое в объекте HTMLLoader фокусируемым. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:height:set"><apiName>height</apiName><shortdesc>
		 Задает высоту прямоугольника холста HTML, подлежащего визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Задает высоту прямоугольника холста HTML, подлежащего визуализации. Это высота экранного объекта HTMLLoader в пикселях. При изменении этого свойства в объекте HTMLLoader выполняется повторная визуализация документа HTML. Диспетчеризация событий <codeph>htmlBoundsChanged</codeph> может выполняться при изменении этого свойства. При настройке свойства <codeph>width</codeph> или <codeph>height</codeph> объекта HTMLLoader границы объекта изменяются, но содержимое не масштабируется (так же происходит с другими типами экранных объектов).
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:historyLength:get"><apiName>historyLength</apiName><shortdesc>
		 Полная длина списка журнала, включая предыдущие и последующие записи.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>uint</apiValueClassifier></apiValueDef><apiDesc>
		 Полная длина списка журнала, включая предыдущие и последующие записи. Для этого свойства установлено такое же значение, что и для свойства <codeph>window.history.length</codeph> JavaScript страницы HTML.
		 
		 </apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#historyPosition"><linktext>historyPosition</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:historyPosition:get"><apiName>historyPosition</apiName><shortdesc>
		 Текущее положение в журнале.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>uint</apiValueClassifier></apiValueDef><apiDesc>
		 Текущее положение в журнале. Список журнала соответствует объекту <codeph>window.history</codeph> страницы HTML. Записи, расположенные перед текущим положением, называются предыдущим списком; записи после текущего положения называются последующим списком. При попытке настроить положение после конечных записей задается положение в конце списка.
		 
		 </apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#getHistoryAt()"><linktext>getHistoryAt()</linktext></link><link href="HTMLLoader.html#historyBack()"><linktext>historyBack()</linktext></link><link href="HTMLLoader.html#historyGo()"><linktext>historyGo()</linktext></link><link href="HTMLLoader.html#historyForward()"><linktext>historyForward()</linktext></link><link href="HTMLLoader.html#historyLength"><linktext>historyLength</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:htmlHost:get"><apiName>htmlHost</apiName><shortdesc>
		Объект HTMLHost, использующийся для обработки изменений определенных элементов пользовательского интерфейса, таких как свойство window.document.title объекта HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.html:HTMLHost</apiValueClassifier><apiTipTexts><apiTipText>Объект HTMLHost, использующийся для обработки изменений определенных элементов пользовательского интерфейса, таких как свойство window.document.title объекта HTMLLoader.
		
		</apiTipText></apiTipTexts></apiValueDef><apiDesc>
		Объект HTMLHost, использующийся для обработки изменений определенных элементов пользовательского интерфейса, таких как свойство <codeph>window.document.title</codeph> объекта HTMLLoader. <ph platform="javascript"> Это свойство применяется к содержимому SWF только с использованием класса HTMLLoader; оно не требуется в коде JavaScript. </ph> <ph platform="actionscript">Для переопределения поведения по умолчанию объекта HTMLLoader создайте подкласс класса HTMLHost и переопределите функции его членов для обработки различных изменений пользовательского интерфейса в содержимом HTML.</ph>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLHost.html"><linktext>Класс HTMLHost</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:loaded:get"><apiName>loaded</apiName><shortdesc>
		 Обозначает, было ли доставлено событие загрузки JavaScript, соответствующее предыдущему вызову метода load() или loadString(), в HTML DOM в объекте HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
		 Обозначает, было ли доставлено событие загрузки JavaScript, соответствующее предыдущему вызову метода <codeph>load()</codeph> или <codeph>loadString()</codeph>, в HTML DOM в объекте HTMLLoader. Это свойство имеет значение <codeph>true</codeph> перед передачей отправкой <codeph>complete.</codeph> Настройка для этого свойства значения <codeph>true</codeph> может быть невозможна. Причины аналогичны тем, по которым невозможно выполнить диспетчеризацию события <codeph>complete</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:location:get"><apiName>location</apiName><shortdesc>
        Указатель URL для содержимого, загруженного в объект HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
        Указатель URL для содержимого, загруженного в объект HTMLLoader. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:manageCookies:get"><apiName>manageCookies</apiName><shortdesc>
		Задает необходимость управления стеком протоколов HTTP файлами cookie для данного объекта.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.manageCookies
		
		</apiDefaultValue></apiValueDef><apiDesc>
		Задает необходимость управления стеком протоколов HTTP файлами cookie для данного объекта. Если задано значение <codeph>true</codeph>, файлы cookie добавляются в запрос, а файлы cookie, содержащиеся в ответе, сохраняются. Если задано значение <codeph>false</codeph>, файлы cookie <i>не</i> добавляются в запрос, а файлы cookie, содержащиеся в ответе, <i>не</i> сохраняются. 
		
		</apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/manageCookies"><linktext>flash.net.URLRequest.manageCookies</linktext></link><link href="flash.net.xml#URLRequestDefaults/manageCookies"><linktext>flash.net.URLRequestDefaults.manageCookies</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:navigateInSystemBrowser:get"><apiName>navigateInSystemBrowser</apiName><shortdesc>
		Задает, необходимо ли при переходе в корневом фрейме содержимого HTML (например, при переходе по ссылке, если задано свойство window.location, или вызове метода window.open()) выполнять переход в объекте HTMLLoader (false) или системном браузере по умолчанию (true).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>false
		
		</apiDefaultValue><apiTipTexts><apiTipText>Необходимо ли при переходе в корневом фрейме объекта HTML выполнять переход в объекте HTMLLoader (false) или системном браузере по умолчанию (true).
		
		</apiTipText></apiTipTexts></apiValueDef><apiDesc>
		Задает, необходимо ли при переходе в корневом фрейме содержимого HTML (например, при переходе по ссылке, если задано свойство <codeph>window.location</codeph>, или вызове метода <codeph>window.open()</codeph>) выполнять переход в объекте HTMLLoader (<codeph>false</codeph>) или системном браузере по умолчанию (<codeph>true</codeph>). При необходимости выполнения всех переходов в системном браузере (а не в объекте HTMLLoader) настройте для этого свойства значение <codeph>true</codeph>.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:paintsDefaultBackground:set"><apiName>paintsDefaultBackground</apiName><shortdesc>
        Определяет, является ли фон документа HTMLLoader белым непрозрачным (true) или нет (false).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiTipTexts><apiTipText>Определяет, является ли фон документа HTMLLoader белым непрозрачным (true) или нет (false). 
		
		</apiTipText></apiTipTexts></apiValueDef><apiDesc>
        Определяет, является ли фон документа HTMLLoader белым непрозрачным (<codeph>true</codeph>) или нет (<codeph>false</codeph>). Если для этого свойства задано значение <codeph>false</codeph>, в объекте HTMLLoader используются контейнер экранного объекта в качестве фона для содержимого HTML и свойство непрозрачности (значение <codeph>alpha</codeph>) контейнера экранного объекта в качестве фона содержимого HTML. Однако, если для элемента <codeph>body</codeph> или любого другого элемента документа HTML настроен непрозрачный цвет фона (может быть определен строкой <codeph>style="background-color:gray"</codeph>), для части представленного содержимого HTML используется заданный непрозрачный цвет фона.
		
        </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:pdfCapability:get"><apiName>pdfCapability</apiName><shortdesc>
		 Тип поддержки PDF в пользовательской системе, определенный как целочисленное кодовое значение.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>int</apiValueClassifier></apiValueDef><apiDesc>
		 Тип поддержки PDF в пользовательской системе, определенный как целочисленное кодовое значение. Содержимое PDF можно отобразить в объекте HTMLLoader только если для этого свойства задано значение <codeph>PDFCapability.STATUS_OK</codeph>. Класс PDFCapability определяет константы для возможных значений свойства <codeph>pdfCapability</codeph>, как показано ниже:
		 
		 <adobetable class="innertable">
		 
		 	
		 
		 	
		 
		 	
		 
		 	
		 
		 	
		 
		 <tgroup cols="2"><thead><row><entry>Константа PDFCapability</entry><entry>Значение</entry></row></thead><tbody><row>
		 		<entry><codeph>STATUS_OK</codeph></entry>
		 		<entry>Необходимая версия (8.1 или более поздняя) приложения Acrobat или Adobe Reader обнаружена, и содержимое PDF можно загрузить в объект HTMLLoader.
		 
		 		<p><i>Примечание.</i> Если в системе Windows в настоящее время запущено приложение Acrobat или Adobe Reader версии 7.x или более поздней версии, используется эта версия, даже если установлена более поздняя версия, поддерживающая загрузку содержимого PDF, загруженного в объект HTMLLoader. В этом случае, если для свойства <codeph>pdfCapability</codeph> задано значение <codeph>PDFCapability.STATUS_OK</codeph>, то при попытке загрузки приложением AIR содержимого PDF, Acrobat или Adobe Reader более ранней версии отображает предупреждение (в среде программы AIR сообщение об ошибке не отображается). При угрозе возникновения такой ситуации проинструктируйте пользователей, что при запуске данного приложения необходимо закрыть Acrobat или Adobe Reader. Рассмотрите возможность вывода этих инструкций на экран, если загрузка содержимого PDF не выполняется за приемлемое время.</p></entry>
		 	</row><row>
		 		<entry><codeph>ERROR_INSTALLED_READER_NOT_FOUND</codeph></entry>
		 		<entry>Версия Acrobat или Adobe Reader не обнаружена. Объекту HTMLLoader не удается отобразить содержимое PDF.</entry>
		 	</row><row>
		 		<entry><codeph>ERROR_INSTALLED_READER_TOO_OLD</codeph></entry>
		 		<entry>Приложение Acrobat или Adobe Reader обнаружено, но версия является слишком старой. Объекту HTMLLoader не удается отобразить содержимое PDF.</entry>
		 	</row><row>
		 		<entry><codeph>ERROR_PREFERED_READER_TOO_OLD</codeph></entry>
		 		<entry>Необходимая версия (8.1 или более поздняя) приложения Acrobat или Adobe Reader обнаружена, однако версия, настроенная для обработки содержимого PDF, является более ранней, чем 8.1. Объекту HTMLLoader не удается отобразить содержимое PDF.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
 		 </apiDesc></apiValueDetail><related-links><link href="HTMLPDFCapability.html"><linktext>Класс HTMLPDFCapability</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:placeLoadStringContentInApplicationSandbox:get"><apiName>placeLoadStringContentInApplicationSandbox</apiName><shortdesc>
		Указывает, куда будет помещено содержимое, загруженное с помощью метода loadString(): в изолированную программную среду приложения (true) или в другую изолированную программную среду (false).</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>false
		
		</apiDefaultValue></apiValueDef><apiDesc>
		Указывает, куда будет помещено содержимое, загруженное с помощью метода <codeph>loadString()</codeph>: в изолированную программную среду приложения (<codeph>true</codeph>) или в другую изолированную программную среду (<codeph>false</codeph>).
		
		<p>Если это свойство принимает значение <codeph>false</codeph>, содержимое, загруженное с помощью метода <codeph>loadString()</codeph>, помещается в изолированную программную среду, отличную от среды приложения, которая имеет перечисленные ниже особенности.</p>
		
		<ul>
			<li>Она позволяет загружать содержимое из сети (но не из файловой системы).</li>
			<li>Она не позволяет загружать данные с помощью XMLHttpRequest.</li>
		<li>Свойство <codeph>window.location</codeph> имеет значение <codeph>about:blank</codeph>.</li>
		<li>Содержимое в такой изолированной программной среде не имеет доступа к свойству <codeph>window.runtime</codeph>.</li>
		</ul>
		
		<p>Если это свойство имеет значение <codeph>true</codeph>, содержимое, загруженное с помощью метода <codeph>loadString()</codeph>, помещается в изолированную программную среду приложения и имеет доступ к свойству <codeph>window.runtime</codeph> и ко всем API-интерфейсам AIR. Необходимо сделать источник данных для строки, используемой в вызове метода <codeph>loadString()</codeph>, доверенным. Кодовые инструкции в строке HTML выполняются с применением всех привилегий приложения, если это свойство имеет значение <codeph>true</codeph>. Это свойство стоит устанавливать на значение <codeph>true</codeph>, только если вы уверены, что строка не содержит вредоносного кода. </p>
		
		<p>В приложениях, скомпилированных с помощью комплектов SDK AIR 1.0 или AIR 1.1, содержимое, загруженное с помощью метода <codeph>loadString()</codeph>, помещается в изолированную программную среду приложения.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#loadString()"><linktext>loadString()</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:runtimeApplicationDomain:get"><apiName>runtimeApplicationDomain</apiName><shortdesc>
		 Программный домен, который необходимо использовать для window.runtime в сценарии JavaScript на странице HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>flash.system:ApplicationDomain</apiValueClassifier><apiException><apiDesc>если объект ApplicationDomain находится в защищенном домене, отличном от домена вызывающего метода.
		 
         </apiDesc><apiItemName>SecurityError</apiItemName><apiOperationClassifier>SecurityError</apiOperationClassifier></apiException><apiTipTexts><apiTipText>Программный домен, который необходимо использовать для window.runtime в сценарии JavaScript на странице HTML.
		 
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc>
		 Программный домен, который необходимо использовать для <codeph>window.runtime</codeph> в сценарии JavaScript на странице HTML. <ph platform="javascript"> Это свойство применяется к содержимому SWF только с использованием класса HTMLLoader; оно не требуется в коде JavaScript.</ph>
		 
		 <p platform="actionscript">Если значение равно <codeph>null</codeph> или если HTML-содержимое происходит из домена защиты, отличного от домена защиты SWF-содержимого, содержащего объект HTMLLoader, для страницы используется домен приложений по умолчанию.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flash.system.xml#ApplicationDomain"><linktext>flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain"><linktext>flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:scrollH:get"><apiName>scrollH</apiName><shortdesc>
         Горизонтальное положение прокрутки содержимого HTML в объекте HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
         Горизонтальное положение прокрутки содержимого HTML в объекте HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:scrollV:get"><apiName>scrollV</apiName><shortdesc>
         Вертикальное положение прокрутки содержимого HTML в объекте HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
         Вертикальное положение прокрутки содержимого HTML в объекте HTMLLoader.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:textEncodingFallback:set"><apiName>textEncodingFallback</apiName><shortdesc>
        Кодировка символов, используемая содержимым HTMLLoader, если кодировка символов не задана страницей HTML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
        Кодировка символов, используемая содержимым HTMLLoader, если кодировка символов не задана страницей HTML. На странице HTML кодировка символов задается в теге <codeph>meta</codeph>, как показано ниже:
		
		<codeblock>&lt;meta http-equiv="content-type" content="text/html" charset="ISO-8859-1"></codeblock>
		
		<p>Значения указаны в списке действительных наборов символов IANA <xref href="http://www.iana.org/assignments/character-sets" scope="external"> </xref>.
		</p>
		
		<p>Если кодировка не задана страницей HTML, свойством <codeph>textEncodingFallback</codeph> или свойством <codeph>textEncodingOverride</codeph>, в содержимом HTML используется кодировка ISO-8859-1.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#textEncodingOverride"><linktext>textEncodingOverride</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:textEncodingOverride:set"><apiName>textEncodingOverride</apiName><shortdesc>
        Кодировка символов, используемая в содержимом HTMLLoader, перезаписывает любой параметр на странице HTML.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
        Кодировка символов, используемая в содержимом HTMLLoader, перезаписывает любой параметр на странице HTML. На странице HTML кодировка символов задается в теге <codeph>meta</codeph>, как показано ниже:
		
		<codeblock>&lt;meta http-equiv="content-type" content="text/html" charset="ISO-8859-1"></codeblock>
		
		<p>Этот параметр также перезаписывает любой параметр в свойстве <codeph>textEncodingFallback</codeph>. </p>
		
		<p>Значения указаны в списке действительных наборов символов IANA <xref href="http://www.iana.org/assignments/character-sets" scope="external"> </xref>.
		</p>
		
		<p>Настройте свойство <codeph>textEncodingOverride</codeph> после загрузки содержимого HTML для выполнения обновления AIR содержимого HTML с использованием заданной кодировки. После выполнения перехода к новой странице в объекте HTMLLoader необходимо повторно настроить это свойство, чтобы на новой странице использовалась заданная кодировка.</p>
		
		<p>Если кодировка не задана страницей HTML, свойством <codeph>textEncodingFallback</codeph> или свойством <codeph>textEncodingOverride</codeph>, в содержимом HTML используется кодировка ISO-8859-1.</p>
		
		<p>При настройке для свойства <codeph>textEncodingOverride</codeph> значения <codeph>null</codeph> восстанавливается режим по умолчанию.</p>
		
		</apiDesc></apiValueDetail><related-links><link href="HTMLLoader.html#textEncodingFallback"><linktext>textEncodingFallback</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:useCache:get"><apiName>useCache</apiName><shortdesc>
		Задает необходимость обращения к локальному кэшу перед тем, как запросы HTTP, отправленные этим объектом, начнут извлекать данные.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Boolean</apiValueClassifier><apiDefaultValue>initialized from URLRequestDefaults.useCache
		
		</apiDefaultValue></apiValueDef><apiDesc>
		Задает необходимость обращения к локальному кэшу перед тем, как запросы HTTP, отправленные этим объектом, начнут извлекать данные. 
		
		</apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/useCache"><linktext>flash.net.URLRequest.useCache</linktext></link><link href="flash.net.xml#URLRequestDefaults/useCache"><linktext>flash.net.URLRequestDefaults.useCache</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:userAgent:get"><apiName>userAgent</apiName><shortdesc>
		 Строка агента пользователя, которую необходимо использовать в любых последующих запросах содержимого из данного объекта HTMLLoader.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 Строка агента пользователя, которую необходимо использовать в любых последующих запросах содержимого из данного объекта HTMLLoader. 
		 
		 <p>Для настройки строки агента пользователя задайте свойство <codeph>userAgent</codeph> объекта HTMLLoader перед вызовом метода <codeph>load()</codeph>. Свойство <codeph>userAgent</codeph> объекта URLRequest, переданного в метод <codeph>load()</codeph>, <i>не</i> используется.</p>
		 
		 <p>Можно настроить строку агента пользователя по умолчанию, используемую всеми объектами HTMLLoader в программном домене, путем определения свойства <codeph>URLRequestDefaults.userAgent</codeph>. Если для свойства <codeph>userAgent</codeph> объекта HTMLLoader значение не настроено (или в качестве значения настроено <codeph>null</codeph>), строке агента пользователя назначается значение статического свойства <codeph>URLRequestDefaults.userAgent</codeph>. </p>
		 
		 <p>Если значение не задано как для свойства <codeph>userAgent</codeph> объекта HTMLLoader, так и для свойства <codeph>URLRequestDefaults.userAgent</codeph>, в качестве строки агента пользователя используется значение по умолчанию. Это значение по умолчанию зависит от конечной операционной системы (Mac OS, Linux или Windows), языка и версии, как указано в следующих примерах:</p>
		 
		 <ul>
		 
		 	<li><codeph>"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5"</codeph></li>
		 	<li><codeph>Mozilla/5.0 (Windows; U; en) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5</codeph></li>
		  <li><codeph>"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5</codeph></li>
		 </ul>
		 
		 </apiDesc></apiValueDetail><related-links><link href="flash.net.xml#URLRequest/userAgent"><linktext>flash.net.URLRequest.userAgent</linktext></link><link href="flash.net.xml#URLRequestDefaults/userAgent"><linktext>flash.net.URLRequestDefaults.userAgent</linktext></link></related-links></apiValue><apiValue id="flash.html:HTMLLoader:width:set"><apiName>width</apiName><shortdesc>
		 Задает ширину прямоугольника холста HTML, подлежащего визуализации.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Задает ширину прямоугольника холста HTML, подлежащего визуализации. Это ширина экранного объекта HTMLLoader в пикселях. При изменении этого свойства в объекте HTMLLoader выполняется повторная визуализация документа HTML. Диспетчеризация событий <codeph>htmlBoundsChange</codeph> может выполняться при изменении этого свойства. При настройке свойств <codeph>width</codeph> и <codeph>height</codeph> объекта HTMLLoader границы объекта изменяются, но содержимое не масштабируется (так же происходит с другими типами экранных объектов).
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLLoader:window:get"><apiName>window</apiName><shortdesc>
		 Глобальный объект JavaScript для содержимого, загруженного в управляющий элемент HTML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Object</apiValueClassifier></apiValueDef><apiDesc>
		 Глобальный объект JavaScript для содержимого, загруженного в управляющий элемент HTML.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.html:HTMLWindowCreateOptions"><apiName>HTMLWindowCreateOptions</apiName><shortdesc>
	 Этот класс определяет параметры, которые могут быть заданы, когда сценарий JavaScript, выполняющийся в объекте HTMLLoader, пытается создать новое окно HTML с помощью вызова метода window.open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Этот класс определяет параметры, которые могут быть заданы, когда сценарий JavaScript, выполняющийся в объекте HTMLLoader, пытается создать новое окно HTML с помощью вызова метода <codeph>window.open()</codeph>. 
	 
	 <p>Этот класс определяет свойства и методы, соответствующие параметрам в параметре <codeph>features</codeph>, передаваемом в метод <codeph>window.open()</codeph> в сценарии JavaScript.</p>
	 
	 <p>Например, в сценарии JavaScript в документе HTML (объект HTMLLoader) может содержаться следующий вызов метода <codeph>window.open()</codeph>, в котором в параметре <codeph>features</codeph> (третий параметр) перечислены несколько параметров:</p>
	 
	 <codeblock>window.open("http://www.adobe.com", "AdobeWindow", "scrollbars=1,menubar=1,location=0,status=0")</codeblock>
	 
	 <p>Класс HTMLWindowCreateOptions используется при перезаписи метода <codeph>createWindow()</codeph> подкласса класса HTMLHost. Объект HTMLLoader передает объект HTMLWindowCreateOptions в качестве параметра <codeph>windowCreateOptions</codeph> метода <codeph>createWindow()</codeph> объекта HTMLHost.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="HTMLHost.html#createWindow()"><linktext>HTMLHost#createWindow()</linktext></link></related-links><apiValue id="flash.html:HTMLWindowCreateOptions:fullscreen"><apiName>fullscreen</apiName><shortdesc>
    	 Задает необходимость отображения окна во весь экран.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Задает необходимость отображения окна во весь экран. Для этого свойства задано значение <codeph>true</codeph>, если в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>, содержится значение <codeph>"fullscreen"</codeph>, <codeph>"fullscreen=1"</codeph> или <codeph>"fullscreen=y"</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:height"><apiName>height</apiName><shortdesc>
		 Задает необходимую первоначальную высоту нового окна.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Задает необходимую первоначальную высоту нового окна. Настроено значение параметра <codeph>height</codeph> в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>. Если задано значение <codeph>NaN</codeph> (устанавливается по умолчанию, если значение <codeph>height</codeph> в строке <codeph>features</codeph> не задано), используется стандартная высота окна.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:locationBarVisible"><apiName>locationBarVisible</apiName><shortdesc>
    	 Задает необходимость отображения панели расположения.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Задает необходимость отображения панели расположения. Для этого свойства задано значение <codeph>true</codeph> если в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>, содержится значение <codeph>location</codeph>, <codeph>location=1</codeph> или <codeph>location=y</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:menuBarVisible"><apiName>menuBarVisible</apiName><shortdesc>
    	 Задает необходимость отображения строки меню.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Задает необходимость отображения строки меню. Для этого свойства задано значение <codeph>true</codeph> если в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>, содержится значение <codeph>menubar</codeph>, <codeph>menubar=1</codeph> или <codeph>menubar=y</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:resizable"><apiName>resizable</apiName><shortdesc>
    	 Определяет, можно ли изменять размер окна.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Определяет, можно ли изменять размер окна. Для этого свойства задано значение <codeph>true</codeph> если в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>, содержится значение <codeph>resizable</codeph>, <codeph>resizable=1</codeph> или <codeph>resizable=y</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:scrollBarsVisible"><apiName>scrollBarsVisible</apiName><shortdesc>
    	 Задает необходимость отображения полос прокрутки.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Задает необходимость отображения полос прокрутки. Для этого свойства задано значение <codeph>true</codeph>, если в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>, содержится значение <codeph>scrollbars</codeph>, <codeph>scrollbars=1</codeph> или <codeph>scrollbars=y</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:statusBarVisible"><apiName>statusBarVisible</apiName><shortdesc>
    	 Задает необходимость отображения строки состояния.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Задает необходимость отображения строки состояния. Для этого свойства задано значение <codeph>true</codeph> если в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>, содержится значение <codeph>status</codeph>, <codeph>status=1</codeph> или <codeph>status=y</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:toolBarVisible"><apiName>toolBarVisible</apiName><shortdesc>
    	 Задает необходимость отображения панели управления.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiValueClassifier>Boolean</apiValueClassifier></apiValueDef><apiDesc>
    	 Задает необходимость отображения панели управления. Для этого свойства задано значение <codeph>true</codeph> если в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>, содержится значение <codeph>toolbar</codeph>, <codeph>toolbar=1</codeph> или <codeph>toolbar=y</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:width"><apiName>width</apiName><shortdesc>
		 Задает необходимую первоначальную ширину нового окна.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Задает необходимую первоначальную ширину нового окна. Настроено значение параметра <codeph>width</codeph> в строке <codeph>features</codeph> сценария JavaScript, вызывающего метод <codeph>window.open()</codeph>. Если задано значение <codeph>NaN</codeph> (устанавливается по умолчанию, если значение <codeph>width</codeph> в строке <codeph>features</codeph> не задано), используется стандартная ширина окна.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:x"><apiName>x</apiName><shortdesc>
		 Задает необходимое первоначальное положение по оси x нового окна на экране.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Задает необходимое первоначальное положение нового окна на экране по оси <i>x</i>. Настроено значение, заданное для параметра <codeph>left</codeph> или <codeph>screenX</codeph> в строке <codeph>features</codeph> сценария JavaScript, в котором вызывается метод <codeph>window.open()</codeph>. Если задано значение <codeph>NaN</codeph>, по умолчанию, если значение <codeph>left</codeph> или <codeph>screenX</codeph> в строке <codeph>features</codeph> не настроено, для окна используется стандартное положение по оси <i>x</i>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.html:HTMLWindowCreateOptions:y"><apiName>y</apiName><shortdesc>
		 Задает необходимое первоначальное положение по оси y нового окна на экране.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="AIR" version="1.0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>NaN</apiData><apiValueClassifier>Number</apiValueClassifier></apiValueDef><apiDesc>
		 Задает необходимое первоначальное положение нового окна на экране по оси <i>y</i>. Настроено значение, заданное для параметра <codeph>top</codeph> или <codeph>screenY</codeph> в строке <codeph>features</codeph> сценария JavaScript, в котором вызывается метод <codeph>window.open()</codeph>. Если задано значение <codeph>NaN</codeph>, по умолчанию, если значение <codeph>left</codeph> или <codeph>screenX</codeph> в строке <codeph>features</codeph> не настроено, для окна используется стандартное положение по оси <i>x</i>.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>