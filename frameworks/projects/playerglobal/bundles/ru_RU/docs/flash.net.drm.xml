<?xml version="1.0"?>
<apiPackage id="flash.net.drm"><apiName>flash.net.drm</apiName><apiDetail/><apiClassifier id="flash.net.drm:DRMContentData"><apiName>DRMContentData</apiName><shortdesc>
	 Класс DRMContentData предоставляет информацию, необходимую для получения ваучера на просмотр содержимого с защитой по технологии DRM.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Класс DRMContentData предоставляет информацию, необходимую для получения ваучера на просмотр содержимого с защитой по технологии DRM.
	 
	 <p>Объект DRMContentData можно получить из экземпляра NetStream путем вызова метода NetStream <codeph>preloadEmbeddedContent()</codeph> и предоставления функции обратного вызова <codeph>onDRMContentData</codeph> для клиентского объекта NetStream. Используйте объект DRMContentData, переданный функции обратного вызова, в качестве параметра метода DRMManager <codeph>loadVoucher()</codeph>.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flash.net.xml#NetStream"><linktext>flash.net.NetStream</linktext></link><link href="flash.net.drm.xml#DRMManager"><linktext>flash.net.drm.DRMManager</linktext></link><link href="flash.net.drm.xml#DRMVoucher"><linktext>flash.net.drm.DRMVoucher</linktext></link></related-links><apiValue id="flash.net.drm:DRMContentData:authenticationMethod:get"><apiName>authenticationMethod</apiName><shortdesc>
		 Тип аутентификации, которую необходимо пройти для получения ваучера на просмотр соответствующего содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 Тип аутентификации, которую необходимо пройти для получения ваучера на просмотр соответствующего содержимого.
		 
		 <p>Поддерживаемые типы аутентификации:</p>
		 <ul>
		 <li>AuthenticationMethod.ANONYMOUS – любой может получить ваучер.</li>
		 <li>AuthenticationMethod.USERNAME_AND_PASSWORD – для получения ваучера необходимо предоставить имя пользователя и пароль учетной записи, имеющей право на просмотр соответствующего содержимого.</li>
		 </ul>
		 
		 <p>Класс AuthenticationMethod содержит строковые константы для свойства <codeph>authenticationMethod</codeph>.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMContentData:domain:get"><apiName>domain</apiName><shortdesc>
		 Домен содержимого на сервере управления правами доступа к содержимому, на котором пользователь должен пройти аутентификацию, чтобы получить ваучер на просмотр соответствующего содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 Домен содержимого на сервере управления правами доступа к содержимому, на котором пользователь должен пройти аутентификацию, чтобы получить ваучер на просмотр соответствующего содержимого.
		 
		 <p>Если аутентификация требуется для домена <i>по умолчанию</i> или не требуется вовсе, свойство <codeph>domainName</codeph> будет иметь значение <codeph>null</codeph>.</p>
		 
		 <p><b>Примечание.</b> Домен, возвращаемый этим свойством, не имеет ничего общего с именами сетевых или Интернет-доменов. В этом случае доменом является группа содержимого или учетных записей пользователей. Например, один сервер может поддерживать несколько доменов, каждый из которых имеет собственный набор каналов содержимого и подписчиков.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMContentData:licenseID:get"><apiName>licenseID</apiName><shortdesc>
		 Уникальный идентификатор содержимого, связанного с этими метаданными на сервере управления правами доступа к содержимому.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 Уникальный идентификатор содержимого, связанного с этими метаданными на сервере управления правами доступа к содержимому.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMContentData:serverURL:get"><apiName>serverURL</apiName><shortdesc>
		 URL-адрес сервера управления правами доступа к содержимому, который может предоставить ваучер на просмотр соответствующего содержимого.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 URL-адрес сервера управления правами доступа к содержимому, который может предоставить ваучер на просмотр соответствующего содержимого.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.net.drm:DRMVoucher"><apiName>DRMVoucher</apiName><shortdesc>
	 Класс DRMVoucher представляет маркер лицензии, позволяющей пользователю просматривать содержимое с защитой по технологии DRM.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Класс DRMVoucher представляет маркер лицензии, позволяющей пользователю просматривать содержимое с защитой по технологии DRM.
	 
	 <p>Свойства DRMVoucher описывают предоставленные ваучером права на просмотр. Ваучер можно получить с помощью метода <codeph>loadVoucher()</codeph> объекта DRMManager. Для этого метода, в свою очередь, требуется объект DRMContentData, который можно получить с помощью метода <codeph>preloadEmbeddedMetadata()</codeph> класса NetStream.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flash.net.drm.xml#DRMContentData"><linktext>flash.net.drm.DRMContentData</linktext></link><link href="flash.net.drm.xml#DRMManager/loadVoucher()"><linktext>flash.net.drm.DRMManager.loadVoucher()</linktext></link><link href="flash.net.xml#NetStream/preloadEmbeddedMetaData()"><linktext>flash.net.NetStream.preloadEmbeddedMetaData()</linktext></link></related-links><apiValue id="flash.net.drm:DRMVoucher:offlineLeaseEndDate:get"><apiName>offlineLeaseEndDate</apiName><shortdesc>
		 Дата и время окончания срока действия ваучера для автономного воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Date</apiValueClassifier></apiValueDef><apiDesc>
		 Дата и время окончания срока действия ваучера для автономного воспроизведения.
		 
		 <p>Если ваучер действует только на время текущего онлайн-сеанса, свойство <codeph>offlineLeaseStartDate</codeph> имеет значение <codeph>null</codeph>.</p>
		 
 		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMVoucher:offlineLeaseStartDate:get"><apiName>offlineLeaseStartDate</apiName><shortdesc>
		 Дата и время начала срока действия ваучера для автономного воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Date</apiValueClassifier></apiValueDef><apiDesc>
		 Дата и время начала срока действия ваучера для автономного воспроизведения.
		 
		 <p>Если ваучер действует только на время текущего онлайн-сеанса, свойство <codeph>offlineLeaseStartDate</codeph> имеет значение <codeph>null</codeph>.</p>
		 
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMVoucher:playbackTimeWindow:get"><apiName>playbackTimeWindow</apiName><shortdesc>
		 Период времени с момента первого просмотра, в течение которого можно просматривать соответствующее содержимое.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>flash.net.drm:DRMPlaybackTimeWindow</apiValueClassifier></apiValueDef><apiDesc>
		 Период времени с момента первого просмотра, в течение которого можно просматривать соответствующее содержимое.
		 
		 <p>Период воспроизведения начинается при первом просмотре содержимого пользователем и заканчивается по истечении разрешенного периода времени. Если период воспроизведения не разрешен, то свойство <codeph>playbackTimeWindow</codeph> имеет значение <codeph>null</codeph>. </p>
		 
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMVoucher:policies:get"><apiName>policies</apiName><shortdesc>
		 Динамический объект Object, передающий политики, определенные приложением.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Object</apiValueClassifier></apiValueDef><apiDesc>
		 Динамический объект Object, передающий политики, определенные приложением.
		 
		 <p>Объект политики содержит пару «имя-значение» для каждой действующей политики.</p>
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMVoucher:voucherEndDate:get"><apiName>voucherEndDate</apiName><shortdesc>
		 Дата окончания срока действия ваучера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Date</apiValueClassifier></apiValueDef><apiDesc>
		 Дата окончания срока действия ваучера.
		 
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMVoucher:voucherStartDate:get"><apiName>voucherStartDate</apiName><shortdesc>
		 Начало срока действия ваучера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Date</apiValueClassifier></apiValueDef><apiDesc>
		 Начало срока действия ваучера.
		    
	 	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.net.drm:DRMPlaybackTimeWindow"><apiName>DRMPlaybackTimeWindow</apiName><shortdesc>
	 Класс DRMPlaybackWindow представляет временной интервал, в течение которого действует ваучер DRM.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Класс DRMPlaybackWindow представляет временной интервал, в течение которого действует ваучер DRM.
	 
	 <p>Свойства <codeph>startDate</codeph> и <codeph>endDate</codeph> имеют значение <codeph>null</codeph> до первого просмотра содержимого пользователем.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flash.net.drm.xml#DRMVoucher"><linktext>flash.net.drm.DRMVoucher</linktext></link></related-links><apiValue id="flash.net.drm:DRMPlaybackTimeWindow:endDate:get"><apiName>endDate</apiName><shortdesc>
		 Дата окончания периода воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Date</apiValueClassifier></apiValueDef><apiDesc>
		 Дата окончания периода воспроизведения.
		 
		 <p>Свойство <codeph>endDate</codeph> будет иметь значение <codeph>null</codeph>, если период воспроизведения не был начат.</p> 
		 
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMPlaybackTimeWindow:period:get"><apiName>period</apiName><shortdesc>
		 Длительность временного интервала в миллисекундах.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>uint</apiValueClassifier></apiValueDef><apiDesc>
		 Длительность временного интервала в миллисекундах. 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:DRMPlaybackTimeWindow:startDate:get"><apiName>startDate</apiName><shortdesc>
		 Дата начала периода воспроизведения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>Date</apiValueClassifier></apiValueDef><apiDesc>
		 Дата начала периода воспроизведения.
		 
		 <p>Свойство <codeph>startDate</codeph> будет иметь значение <codeph>null</codeph>, если период воспроизведения не был начат.</p> 
		 
	 	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.net.drm:LoadVoucherSetting"><apiName>LoadVoucherSetting</apiName><shortdesc>
	 Класс LoadVoucherSetting содержит строковые константы, обозначающие различные варианты для параметра settings объекта DRMManager в методе loadVoucher().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Класс LoadVoucherSetting содержит строковые константы, обозначающие различные варианты для параметра <codeph>settings</codeph> объекта DRMManager в методе <codeph>loadVoucher()</codeph>.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="flash.net.drm:LoadVoucherSetting:ALLOW_SERVER"><apiName>ALLOW_SERVER</apiName><shortdesc>
	  Загружайте ваучер, по возможности, из локального кэша.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>allowServer</apiData><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	  Загружайте ваучер, по возможности, из локального кэша. Загружайте ваучер с сервера управления правами доступа к содержимому, только если отсутствует его копия в локальном кэше.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:LoadVoucherSetting:FORCE_REFRESH"><apiName>FORCE_REFRESH</apiName><shortdesc>
	  Загружайте ваучер только с сервера управления правами доступа к содержимому.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>forceRefresh</apiData><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	  Загружайте ваучер только с сервера управления правами доступа к содержимому. Не загружайте ваучер из локального кэша.
	  
	  </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:LoadVoucherSetting:LOCAL_ONLY"><apiName>LOCAL_ONLY</apiName><shortdesc>
	  Загружайте ваучер только из локального кэша.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>localOnly</apiData><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
	  Загружайте ваучер только из локального кэша. Не загружайте ваучер с сервера управления правами доступа к содержимому.
	  
	  </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.net.drm:AuthenticationMethod"><apiName>AuthenticationMethod</apiName><shortdesc>
	 Класс AuthenticationMethod содержит строковые константы, обозначающие различные типы аутентификации, используемые в свойстве authenticationMethod класса DRMContentData.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Класс AuthenticationMethod содержит строковые константы, обозначающие различные типы аутентификации, используемые в свойстве <codeph>authenticationMethod</codeph> класса DRMContentData.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flash.net.drm.xml#DRMContentData"><linktext>flash.net.drm.DRMContentData</linktext></link></related-links><apiValue id="flash.net.drm:AuthenticationMethod:ANONYMOUS"><apiName>ANONYMOUS</apiName><shortdesc>
		 Аутентификация не требуется.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>anonymous</apiData><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 Аутентификация не требуется.
		 
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net.drm:AuthenticationMethod:USERNAME_AND_PASSWORD"><apiName>USERNAME_AND_PASSWORD</apiName><shortdesc>
		 Требуется действительная учетная запись и пароль пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>usernameAndPassword</apiData><apiValueClassifier>String</apiValueClassifier></apiValueDef><apiDesc>
		 Требуется действительная учетная запись и пароль пользователя. 
		 
	 	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="flash.net.drm:DRMManager"><apiName>DRMManager</apiName><shortdesc>
	 DRMManager управляет получением и хранением ваучеров, необходимых для просмотра содержимого с защитой по технологии DRM.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 DRMManager управляет получением и хранением ваучеров, необходимых для просмотра содержимого с защитой по технологии DRM.
	 
	 <p>Можно предварительно загрузить ваучеры с сервера управления правами доступа к содержимому с помощью объекта DRMContentData, полученного из метаданных мультимедийного файла, защищенного по технологии DRM. Можно отправить в локальный кэш запрос на получение отдельного ваучера с помощью объекта DRMContentData. Также можно сбросить все ваучеры. Метода, с помощью которого можно получить список всех ваучеров в локальном кэше, не существует.</p>
	 
	 <p>Ваше приложение не должно создавать новые экземпляры класса DRMManager. С помощью статического метода <codeph>DRMManager.getDRMManager()</codeph> можно получить доступ к существующему объекту DRMManager.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="flash.net.xml#NetStream"><linktext>flash.net.NetStream</linktext></link><link href="flash.net.drm.xml#DRMVoucher"><linktext>flash.net.drm.DRMVoucher</linktext></link><link href="flash.net.drm.xml#DRMContentData"><linktext>flash.net.drm.DRMContentData</linktext></link></related-links><adobeApiEvent id="flash.net.drm:DRMManager_flash.events.DRMErrorEvent.LOAD_VOUCHER_ERROR_loadVoucherError"><apiName>loadVoucherError</apiName><shortdesc> 
	 DRMManager отправляет объект DRMErrorEvent, если запрошенный ваучер невозможно получить с сервера управления правами доступа к содержимому.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.DRMErrorEvent.LOAD_VOUCHER_ERROR</apiEventType><adobeApiEventClassifier>flash.events.DRMErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 DRMManager отправляет объект DRMErrorEvent, если запрошенный ваучер невозможно получить с сервера управления правами доступа к содержимому. 
	 
	 <p><b>Примечание.</b> В случае неудачной попытки загрузить ваучер из локального кэша (с использованием <codeph>localOnly</codeph> в качестве параметра <codeph>source</codeph>) объект DRMErrorEvent НЕ отправляется. Вместо этого отправляется объект DRMStatusEvent, свойство <codeph>voucher</codeph> которого имеет значение <codeph>null</codeph>.</p>
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net.drm:DRMManager_flash.events.DRMStatusEvent.LOAD_VOUCHER_COMPLETE_loadVoucherComplete"><apiName>loadVoucherComplete</apiName><shortdesc> 
	 DRMManager отправляет объект DRMStatusEvent, если запрошенный ваучер получен с сервера управления правами доступа к содержимому.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.DRMStatusEvent.LOAD_VOUCHER_COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.DRMStatusEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 DRMManager отправляет объект DRMStatusEvent, если запрошенный ваучер получен с сервера управления правами доступа к содержимому.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net.drm:DRMManager_flash.events.DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR_authenticationError"><apiName>authenticationError</apiName><shortdesc> 
	 DRMManager отправляет объект DRMAuthenticationErrorEvent, если пользователь не прошел аутентификацию на сервере управления правами доступа к содержимому после вызова метода authenticate().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.DRMAuthenticationErrorEvent.AUTHENTICATION_ERROR</apiEventType><adobeApiEventClassifier>flash.events.DRMAuthenticationErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 DRMManager отправляет объект DRMAuthenticationErrorEvent, если пользователь не прошел аутентификацию на сервере управления правами доступа к содержимому после вызова метода <codeph>authenticate()</codeph>.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net.drm:DRMManager_flash.events.DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE_authenticationComplete"><apiName>authenticationComplete</apiName><shortdesc> 
	 DRMManager отправляет объект DRMAuthenticationCompleteEvent, если пользователь прошел аутентификацию на сервере управления правами доступа к содержимому после вызова метода authenticate().</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.DRMAuthenticationCompleteEvent.AUTHENTICATION_COMPLETE</apiEventType><adobeApiEventClassifier>flash.events.DRMAuthenticationCompleteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc> 
	 DRMManager отправляет объект DRMAuthenticationCompleteEvent, если пользователь прошел аутентификацию на сервере управления правами доступа к содержимому после вызова метода <codeph>authenticate()</codeph>.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net.drm:DRMManager:authenticate"><apiName>authenticate</apiName><shortdesc>
		 Выполняет аутентификацию пользователя.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>serverURL</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>URL-адрес сервера управления правами доступа к содержимому, который может предоставить ваучер на просмотр защищенного содержимого.
		 </apiDesc></apiParam><apiParam><apiItemName>domain</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Домен на сервере (не имя сетевого или Интернет-домена)
		 </apiDesc></apiParam><apiParam><apiItemName>username</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Имя учетной записи пользователя
		 </apiDesc></apiParam><apiParam><apiItemName>password</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Пароль учетной записи пользователя
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Выполняет аутентификацию пользователя.
		 
		 <p>Чтобы узнать о результате предпринятой попытки аутентификации, необходимо прослушивать события <codeph>authenticationComplete</codeph> и <codeph>authenticationError</codeph>. Из нескольких вызовов метода <codeph>authenticate()</codeph> образуется очередь. Объект AuthenticationCompleteEvent, отправляемый для события <codeph>authenticationComplete</codeph>, содержит маркер аутентификации, который может сохранить приложение.</p> 
		 
		 <p>Сохраненный или загруженный иным образом маркер аутентификации можно использовать в будущем для создания проверенного сеанса на сервере управления правами доступа к содержимому. Для создания сеанса с помощью маркера необходимо вызвать метод <codeph>setAuthenticationToken()</codeph> объекта DRMManager. Свойства маркера, такие как дата окончания срока действия, определяются настройками сервера, создавшего маркер.</p>
		 
		 <p><b>Важно!</b> Вызов метода <codeph>authenticate()</codeph> не будет успешным, если Интернет-подключение пользователя осуществляется через прокси-сервер, запрашивающий аутентификацию. Несмотря на то, что такие пользователи не могут предварительно загрузить ваучер DRM, требующий аутентификации, приложение может получить такой ваучер, начав воспроизведение и использовав метод NetStream <codeph>setAuthenticationCredentials()</codeph> для регистрации пользователя, как на прокси-сервере, так и на сервере управления правами доступа к содержимому. После получения ваучера пользователь может просматривать содержимое автономно (в течение времени, предусмотренного лицензией, представленной ваучером).</p>
		  
		 </apiDesc></apiOperationDetail><related-links><link href="flash.net.xml#NetStream/setAuthenticationCredentials()"><linktext>flash.net.NetStream.setAuthenticationCredentials()</linktext></link><link href="flash.net.drm.xml#DRMManager/setAuthenticationToken()"><linktext>setAuthenticationToken()</linktext></link></related-links></apiOperation><apiOperation id="flash.net.drm:DRMManager:getDRMManager"><apiName>getDRMManager</apiName><shortdesc>
		 Возвращает экземпляр единственного объекта DRMManager.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>flash.net.drm:DRMManager</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Возвращает экземпляр единственного объекта DRMManager.
		 
		 <p>Для каждого домена защиты существует один экземпляр DRMManager.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="flash.system.xml#SecurityDomain"><linktext>flash.system.SecurityDomain</linktext></link></related-links></apiOperation><apiOperation id="flash.net.drm:DRMManager:loadVoucher"><apiName>loadVoucher</apiName><shortdesc>
		 Загружает ваучер с сервера управления правами доступа к содержимому или из локального кэша ваучеров.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>contentData</apiItemName><apiOperationClassifier>flash.net.drm:DRMContentData</apiOperationClassifier><apiDesc>Объект DRMContentData из мультимедийного файла, защищенного по технологии DRM
		 </apiDesc></apiParam><apiParam><apiItemName>setting</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Определяет, загружается ваучер из локального ваучера или с сервера управления правами доступа к содержимому
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Загружает ваучер с сервера управления правами доступа к содержимому или из локального кэша ваучеров.
		 
		 <p>Ваучер загружается согласно значению параметра <codeph>setting</codeph>:</p>
		 <ul>
		 <li>LoadVoucherSetting.FORCE_REFRESH: ваучер всегда загружается с сервера управления правами доступа к содержимому.</li>
		 <li>LoadVoucherSetting.LOCAL_ONLY: ваучер загружается только из локального кэша.</li>
		 <li>LoadVoucherSetting.ALLOW_SERVER: по возможности, ваучер загружается из локального кэша. Если это невозможно, то он загружается с сервера.</li>
		 </ul>
		 <p>Класс LoadVoucherSetting определяет строковые константы, используемые в качестве значений параметра <codeph>setting</codeph>.</p>
		 
		 <p>После успешной загрузки ваучера DRMManager отправляет событие DRM status. Приложение может начать воспроизведение сразу после загрузки ваучера. Загруженный ваучер доступен в свойстве <codeph>voucher</codeph> отправленного объекта DRMStatusEvent. С помощью этого объекта ваучера можно показать пользователю соответствующую информацию о правах доступа к содержимому. </p>
		 
		 <p>Если не удалось загрузить ваучер с сервера управления правами доступа к содержимому, то отправляется событие ошибки DRM. Свойство <codeph>errorID</codeph> отправленного объекта DRMErrorEvent указывает на причину ошибки. Типичной причиной ошибки является попытка подключения к серверу FMRMS, когда пользователь находится не в сети, а также попытка загрузить ваучер, когда пользователь не выполнил вход. Приложение может ответить на эти ошибки и выполнить корректирующее действие. Например, если для загрузки ваучера необходимо предоставить учетные данные аутентификации, можно запросить пользователя предоставить имя пользователя и пароль, вызвать метод DRMManager <codeph>authenticate()</codeph> и попытаться загрузить ваучер снова.</p>
		 
		 <p>Если при использовании настройки <codeph>localOnly</codeph> не удается получить ваучер из локального кэша, объект DRMErrorEvent не отправляется. Вместо этого отправляется событие DRM status. Свойство <codeph>detail</codeph> этого объекта DRMStatusEvent все еще имеет значение <codeph>DRM.voucherObtained</codeph>, но свойство <codeph>voucher</codeph> имеет значение <codeph>null</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net.drm:DRMManager:resetDRMVouchers"><apiName>resetDRMVouchers</apiName><shortdesc>
	    Удаляет все данные ваучера DRM из локального кэша.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata><asCustoms><keyword>DRMManager, resetDRMVouchers
	    
	    </keyword></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>Невозможно удалить данные ваучера.
	    
	    </apiDesc><apiItemName>IOError</apiItemName><apiOperationClassifier>flash.errors:IOError</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
	    Удаляет все данные ваучера DRM из локального кэша.
	    <p>
	    Чтобы пользователь мог снова получить доступ к зашифрованному содержимому, приложение должно снова загрузить необходимые ваучеры. Вызов этой функции равнозначен вызову <codeph>Netstream.resetDRMVouchers()</codeph>.</p>
	    
	    </apiDesc></apiOperationDetail><related-links><link href="flash.net.xml#NetStream/resetDRMVouchers()"><linktext>flash.net.NetStream.resetDRMVouchers()</linktext></link></related-links></apiOperation><apiOperation id="flash.net.drm:DRMManager:setAuthenticationToken"><apiName>setAuthenticationToken</apiName><shortdesc>
		 Задает маркер аутентификации для использования при обмене данными с указанным сервером и доменом.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="AIR" version="1.5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>serverUrl</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>URL-адрес сервера управления правами доступа к содержимому
		 </apiDesc></apiParam><apiParam><apiItemName>domain</apiItemName><apiOperationClassifier>String</apiOperationClassifier><apiDesc>Домен сервера управления правами доступа к содержимому.
		 </apiDesc></apiParam><apiParam><apiItemName>token</apiItemName><apiOperationClassifier>flash.utils:ByteArray</apiOperationClassifier><apiDesc>Маркер аутентификации 
		  
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Задает маркер аутентификации для использования при обмене данными с указанным сервером и доменом.
		 
		 <p>Маркеры аутентификации указаны в свойстве <codeph>token</codeph> объекта DRMAuthenticationCompleteEvent, отправляемого при успешном вызове метода <codeph>authenticate()</codeph>. Маркер сеанса записывается в кэш автоматически, но с помощью метода <codeph>setAuthenticationToken()</codeph> можно напрямую управлять маркерами.</p>
		 
		 <p>Если задать маркер таким образом, он перезапишет существующий в кэше маркер для сервера и домена. Для очистки кэшированного маркера задайте параметру <codeph>token</codeph> значение <codeph>null</codeph>.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>