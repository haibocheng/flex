<?xml version="1.0"?>
<apiPackage id="mx.rpc.mxml"><apiName>mx.rpc.mxml</apiName><apiDetail/><apiClassifier id="mx.rpc.mxml:IMXMLSupport"><apiName>IMXMLSupport</apiName><shortdesc>
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  
 
  </apiDesc></apiClassifierDetail><apiValue id="mx.rpc.mxml:IMXMLSupport:mx.rpc.mxml:IMXMLSupport:concurrency:get"><apiName>concurrency</apiName><shortdesc>
      Die Einstellung „Gleichzeitige Vorgänge“ für parallele Ausführung des RPC-Vorgangs oder des HTTPService.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Die Einstellung „Gleichzeitige Vorgänge“ für parallele Ausführung des RPC-Vorgangs oder des HTTPService. „multiple“,„last“ oder „single“.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.rpc.mxml:IMXMLSupport:mx.rpc.mxml:IMXMLSupport:showBusyCursor:get"><apiName>showBusyCursor</apiName><shortdesc>
      Gibt an, ob der RPC-Vorgang oder der HTTPService während der Ausführung den Aktivitäten-Cursor anzeigt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Gibt an, ob der RPC-Vorgang oder der HTTPService während der Ausführung den Aktivitäten-Cursor anzeigt.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.rpc.mxml:Concurrency"><apiName>Concurrency</apiName><shortdesc>
 Die Einstellung „Gleichzeitige Vorgänge“ wird über MXML-basierten Zugriff festgelegt und definiert die Vorgehensweise, wenn gleichzeitig mehrere Aufrufe an den gleichen Dienst eingehen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
 Die Einstellung „Gleichzeitige Vorgänge“ wird über MXML-basierten Zugriff festgelegt und definiert die Vorgehensweise, wenn gleichzeitig mehrere Aufrufe an den gleichen Dienst eingehen. Der standardmäßige Wert für gleichzeitige Vorgänge ist <codeph>multiple</codeph>.
  
  </apiDesc></apiClassifierDetail><apiValue id="mx.rpc.mxml:Concurrency:LAST"><apiName>LAST</apiName><shortdesc>
     Eine Anforderung führt dazu, dass der Client Ergebnisse oder Fehler für aktuell anstehende Anforderungen ignoriert.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>last</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Eine Anforderung führt dazu, dass der Client Ergebnisse oder Fehler für aktuell anstehende Anforderungen ignoriert. Nur das Ergebnis oder der Fehler der neuesten Anforderung wird auf dem Client ausgelöst. Dies kann die Ereignisverwaltung in der Clientanwendung vereinfachen, Sie sollten jedoch besonders darauf achten, dass dieser Modus nur dann verwendet wird, wenn Ergebnisse oder Fehler für Anforderungen gefahrlos ignoriert werden können.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.rpc.mxml:Concurrency:MULTIPLE"><apiName>MULTIPLE</apiName><shortdesc>
     Existierende Anforderungen werden nicht abgebrochen, der Entwickler ist dafür verantwortlich, durch sorgfältige Verwaltung des Event-Streams die Konsistenz der Daten sicherzustellen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>multiple</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Existierende Anforderungen werden nicht abgebrochen, der Entwickler ist dafür verantwortlich, durch sorgfältige Verwaltung des Event-Streams die Konsistenz der Daten sicherzustellen.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="mx.rpc.mxml:Concurrency:SINGLE"><apiName>SINGLE</apiName><shortdesc>
     Es ist jeweils nur eine einzelne Anforderung für die Methode zulässig; solange eine Anforderung ansteht, erzeugen weitere Anforderungen sofort einen Fehler auf dem Client, ohne dass sie an den Server übermittelt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>single</apiData><apiType value="String"/></apiValueDef><apiDesc>
     Es ist jeweils nur eine einzelne Anforderung für die Methode zulässig; solange eine Anforderung ansteht, erzeugen weitere Anforderungen sofort einen Fehler auf dem Client, ohne dass sie an den Server übermittelt werden.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>