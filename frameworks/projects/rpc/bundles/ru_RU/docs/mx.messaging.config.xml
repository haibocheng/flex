<?xml version="1.0"?>
<apiPackage id="mx.messaging.config"><apiName>mx.messaging.config</apiName><apiDetail/><apiClassifier id="mx.messaging.config:ConfigMap"><apiName>ConfigMap</apiName><shortdesc>
  Класс ConfigMap предоставляет механизм для сохранения свойств, возвращаемых сервером в указанном порядке.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseClassifier>flash.utils:Proxy</apiBaseClassifier></apiClassifierDef><apiDesc>
  Класс ConfigMap предоставляет механизм для сохранения свойств, возвращаемых сервером в указанном порядке. 
 
  </apiDesc></apiClassifierDetail><apiConstructor id="mx.messaging.config:ConfigMap:ConfigMap"><apiName>ConfigMap</apiName><shortdesc>
     Конструктор.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Объект, содержащий пары «имя/значение».
     
      </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Конструктор.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:callProperty"><apiName>callProperty</apiName><shortdesc>
      Возвращает значение метода объекта с прокси с указанным именем.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiDesc>Значение, возвращаемое вызываемым методом.
     
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value=""/><apiDesc>Имя вызываемого метода.
     
      </apiDesc></apiParam><apiParam><apiItemName>rest</apiItemName><apiType value="restParam"/><apiDesc>Массив аргументов вызываемого метода.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает значение метода объекта с прокси с указанным именем.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:deleteProperty"><apiName>deleteProperty</apiName><shortdesc>
      Удаляет указанное свойство объекта с прокси и передает уведомление об удалении обработчику.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiDesc>Логическое значение, указывающее на удаление свойства.
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value=""/><apiDesc>Как правило, строка, содержащая имя свойства или QName, причем имя свойства определяется при проверке свойства <codeph>localName</codeph>.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Удаляет указанное свойство объекта с прокси и передает уведомление об удалении обработчику.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:getProperty"><apiName>getProperty</apiName><shortdesc>
      Возвращает указанное значение свойства объекта прокси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiDesc>Значение свойства.
     
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value=""/><apiDesc>Как правило, строка, содержащая имя свойства или QName, причем имя свойства определяется при проверке свойства <codeph>localName</codeph>.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает указанное значение свойства объекта прокси.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:hasProperty"><apiName>hasProperty</apiName><shortdesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiDesc>Если свойство существует, указывается значение <codeph>true</codeph>; в противном случае выбирается значение <codeph>false</codeph>.
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value=""/><apiDesc>Имя свойства, наличие которого должно быть проверено.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.
      
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.utils.xml#Proxy/hasProperty()"><linktext>flash.utils.Proxy.hasProperty()</linktext></link></related-links></apiOperation><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:nextName"><apiName>nextName</apiName><shortdesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiDesc>Имя свойства.
     
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Отсчитываемый от нуля индекс свойства объекта.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.utils.xml#Proxy/nextName()"><linktext>flash.utils.Proxy.nextName()</linktext></link></related-links></apiOperation><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:nextNameIndex"><apiName>nextNameIndex</apiName><shortdesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiDesc>Отсчитываемый от нуля индекс следующего свойства.
     
      </apiDesc><apiType value="int"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Отсчитываемый от нуля индекс свойства объекта.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.utils.xml#Proxy/nextNameIndex()"><linktext>flash.utils.Proxy.nextNameIndex()</linktext></link></related-links></apiOperation><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:nextValue"><apiName>nextValue</apiName><shortdesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiDesc>Значение свойства.
     
      </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>Отсчитываемое от нуля значение индекса для свойства объекта.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Внутренняя функция, которая должна быть реализована подклассом flash.utils.Proxy.
     
      </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.utils.xml#Proxy/nextValue()"><linktext>flash.utils.Proxy.nextValue()</linktext></link></related-links></apiOperation><apiOperation id="mx.messaging.config:ConfigMap:flash_proxy:setProperty"><apiName>setProperty</apiName><shortdesc>
      Обновляет указанные свойства объекта прокси и передает обработчику уведомление об обновлении.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="flash_proxy"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value=""/><apiDesc>Объект, содержащий имя свойства, подлежащего обновлению в объекте прокси.
     
      </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value=""/><apiDesc>Значение, которое должно быть установлено в объекте прокси.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Обновляет указанные свойства объекта прокси и передает обработчику уведомление об обновлении.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.messaging.config:ConfigMap:object_proxy:propertyList"><apiName>propertyList</apiName><shortdesc>
      Содержит список всех имен свойств для объекта прокси.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="object_proxy"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
      Содержит список всех имен свойств для объекта прокси.
     
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="mx.messaging.config:ServerConfig"><apiName>ServerConfig</apiName><shortdesc>
  Этот класс предоставляет доступ к информации о конфигурации системы передачи сообщений сервера.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Этот класс предоставляет доступ к информации о конфигурации системы передачи сообщений сервера. Этот класс инкапсулирует информацию из файла services-config.xml в системе клиента и используется системой передачи сообщений для предоставления сконфигурированных каналов и наборов каналов для инфраструктуры передачи сообщений.
 
  <p>Исходный код XML предоставляется в ходе компиляции. Однако в настоящее время внутренние ограничения для предотвращения захвата этих XML-данных другими средствами, например, сетью, локальной файловой системой или совместно используемым объектом во время выполнения отсутствуют.</p>
  
  </apiDesc></apiClassifierDetail><apiOperation id="mx.messaging.config:ServerConfig:checkChannelConsistency"><apiName>checkChannelConsistency</apiName><shortdesc>
      Этот метод обеспечивает идентичные определения каналов в указанных адресах назначения.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata><asCustoms><throw>ArgumentError if the channel definitions of the specified
               destinations aren't identical.
      
      </throw></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>destinationA</apiItemName><apiType value="String"/><apiDesc>первый адрес назначения для сравнения
      </apiDesc></apiParam><apiParam><apiItemName>destinationB</apiItemName><apiType value="String"/><apiDesc>второй адрес назначения для сравнения каналов
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Этот метод обеспечивает идентичные определения каналов в указанных адресах назначения. Если определения каналов между двумя указанными адресами назначения не являются идентичными, данный метод выдает ошибку ArgumentError.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.messaging.config:ServerConfig:getChannel"><apiName>getChannel</apiName><shortdesc>
      Возвращает общий экземпляр сконфигурированного канала.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>Если ни для одного из каналов не указан идентификатор.
      
      </apiDesc><apiItemName>InvalidChannelError</apiItemName><apiOperationClassifier>mx.messaging.errors:InvalidChannelError</apiOperationClassifier></apiException><apiReturn><apiDesc>Экземпляр канала.
     
      </apiDesc><apiOperationClassifier>mx.messaging:Channel</apiOperationClassifier></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="String"/><apiDesc>Идентификатор требуемого канала.
     
      </apiDesc></apiParam><apiParam><apiItemName>clustered</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Значение равно true, если канал используется в кластерном режиме; в противном случае значение равно false.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает общий экземпляр сконфигурированного канала.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.messaging.config:ServerConfig:getChannelSet"><apiName>getChannelSet</apiName><shortdesc>
      Возвращает общий ChannelSet для использования с определенным адресом назначения, который принадлежит службе, выполняющей обработку сообщений указанного типа.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>Если для указанного адреса назначения каналы отсутствуют, а в приложении каналы не определены по умолчанию.
      
      </apiDesc><apiItemName>InvalidDestinationError</apiItemName><apiOperationClassifier>mx.messaging.errors:InvalidDestinationError</apiOperationClassifier></apiException><apiReturn><apiDesc>ChannelSet.
     
      </apiDesc><apiOperationClassifier>mx.messaging:ChannelSet</apiOperationClassifier></apiReturn><apiParam><apiItemName>destinationId</apiItemName><apiType value="String"/><apiDesc>Идентификатор целевого адреса.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает общий ChannelSet для использования с определенным адресом назначения, который принадлежит службе, выполняющей обработку сообщений указанного типа.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="mx.messaging.config:ServerConfig:getProperties"><apiName>getProperties</apiName><shortdesc>
      Возвращает информацию свойства для указанного адреса
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiException><apiDesc>Если указанный адрес назначения не найден.
      
      </apiDesc><apiItemName>InvalidDestinationError</apiItemName><apiOperationClassifier>mx.messaging.errors:InvalidDestinationError</apiOperationClassifier></apiException><apiReturn><apiDesc>XMLList, содержащий информацию с тегом &lt;property>.
     
      </apiDesc><apiType value="XMLList"/></apiReturn><apiParam><apiItemName>destinationId</apiItemName><apiType value="String"/><apiDesc>Идентификатор требуемого адреса назначения.
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Возвращает информацию свойства для указанного адреса
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="mx.messaging.config:ServerConfig:xml:get"><apiName>xml</apiName><shortdesc>
      XML-конфигурация; это значение должно содержать релевантное количество тегов &amp;lt;services&amp;gt; из файла services-config.xml.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="BlazeDS" version="4"/><apiTool name="LCDS" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef><apiDesc>
      XML-конфигурация; это значение должно содержать релевантное количество тегов &lt;services> из файла services-config.xml.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>