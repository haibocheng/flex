<?xml version="1.0"?>
<apiPackage id="spark.core"><apiName>spark.core</apiName><apiDetail/><apiClassifier id="spark.core:DisplayObjectSharingMode"><apiName>DisplayObjectSharingMode</apiName><shortdesc>
  Die DisplayObjectSharingMode-Klasse definiert die möglichen Werte für die displayObjectSharingMode-Eigenschaft der IGraphicElement-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die DisplayObjectSharingMode-Klasse definiert die möglichen Werte für die <codeph>displayObjectSharingMode</codeph>-Eigenschaft der IGraphicElement-Klasse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.core.xml#IGraphicElement/displayObjectSharingMode"><linktext>IGraphicElement.displayObjectSharingMode</linktext></link></related-links><apiValue id="spark.core:DisplayObjectSharingMode:OWNS_SHARED_OBJECT"><apiName>OWNS_SHARED_OBJECT</apiName><shortdesc>
      IGraphicElement besitzt ein DisplayObject, das vom übergeordneten Group-Container auch einem anderen IGraphicElement zugewiesen wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ownsSharedObject</apiData><apiType value="String"/></apiValueDef><apiDesc>
      IGraphicElement besitzt ein DisplayObject, das vom übergeordneten Group-Container auch einem anderen IGraphicElement zugewiesen wird.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:DisplayObjectSharingMode:OWNS_UNSHARED_OBJECT"><apiName>OWNS_UNSHARED_OBJECT</apiName><shortdesc>
      IGraphicElement ist ausschließlicher Besitzer eines DisplayObject.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ownsUnsharedObject</apiData><apiType value="String"/></apiValueDef><apiDesc>
      IGraphicElement ist ausschließlicher Besitzer eines DisplayObject.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:DisplayObjectSharingMode:USES_SHARED_OBJECT"><apiName>USES_SHARED_OBJECT</apiName><shortdesc>
      IGraphicElement wird vom zugehörigen übergeordneten Group-Container ein DisplayObject zugewiesen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>usesSharedObject</apiData><apiType value="String"/></apiValueDef><apiDesc>
      IGraphicElement wird vom zugehörigen übergeordneten Group-Container ein DisplayObject zugewiesen.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.core:IGraphicElement"><apiName>IGraphicElement</apiName><shortdesc>
  IGraphicElement wird durch IVisualElements implementiert, die die DisplayObject-Verwaltung der übergeordneten Group nutzen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IVisualElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  <codeph>IGraphicElement</codeph> wird durch IVisualElements implementiert, die die <codeph>DisplayObject</codeph>-Verwaltung der übergeordneten <codeph>Group</codeph> nutzen.
 
  <p>Ein typisches Verwendungsbeispiel ist die gemeinsame Verwendung von <codeph>DisplayObject</codeph>. <codeph>Group</codeph> organisiert die untergeordneten <codeph>IGraphicElement</codeph>-Elemente in Sequenzen, die dasselbe <codeph>DisplayObject</codeph> gemeinsam verwenden und zeichnen. Das <codeph>DisplayObject</codeph> wird vom ersten Element in der Sequenz erstellt.</p>
 
  <p>In einem weiteren Verwendungsbeispiel wird ein Element nicht von einem <codeph>DisplayObject</codeph> abgeleitet, sondern verwaltet, erstellt und/oder vernichtet das Element sein eigenes <codeph>DisplayObject</codeph>. Die <codeph>Group</codeph> stellt sicher, dass das Element aufgerufen wird, um das <codeph>DisplayObject</codeph> zu erstellen, das <codeph>DisplayObject</codeph> als sein untergeordnetes Element an der korrekten Indexposition aufzurufen sowie dessen Entfernen zu verarbeiten.</p> 
 
  Normalerweise erweitert ein Entwickler die <codeph>GraphicElement</codeph>-Klasse statt die <codeph>IGraphicElement</codeph>-Schnittstelle direkt zu implementieren, da <codeph>GraphicElement</codeph> bereits die meisten der erforderlichen Funktionen bereitstellt.
  
  </apiDesc></apiClassifierDetail><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:canShareWithNext"><apiName>canShareWithNext</apiName><shortdesc>
      Gibt „true“ zurück, wenn dieses IGraphicElement kompatibel ist und DisplayObjects mit dem nächsten IGraphicElement in der Sequenz gemeinsam verwenden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Gibt „true“ zurück, wenn dieses Element mit dem vorherigen Element in der Sequenz kompatibel ist.
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>spark.core:IGraphicElement</apiOperationClassifier><apiDesc>Das Element, das in der Sequenz auf dieses Element folgt.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt „true“ zurück, wenn dieses <codeph>IGraphicElement</codeph> kompatibel ist und DisplayObjects mit dem nächsten <codeph>IGraphicElement</codeph> in der Sequenz gemeinsam verwenden kann.
     
      </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#IGraphicElement/canShareWithPrevious"><linktext>canShareWithPrevious</linktext></link><link href="spark.core.xml#IGraphicElement/setSharedDisplayObject"><linktext>setSharedDisplayObject</linktext></link></related-links></apiOperation><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:canShareWithPrevious"><apiName>canShareWithPrevious</apiName><shortdesc>
      Gibt „true“ zurück, wenn dieses IGraphicElement kompatibel ist und DisplayObjects mit dem vorherigen IGraphicElement in der Sequenz gemeinsam verwenden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Gibt „true“ zurück, wenn dieses Element mit dem vorherigen Element in der Sequenz kompatibel ist.
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>spark.core:IGraphicElement</apiOperationClassifier><apiDesc>Das Element, das sich in der Sequenz vor diesem Element befindet.
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt „true“ zurück, wenn dieses <codeph>IGraphicElement</codeph> kompatibel ist und DisplayObjects mit dem vorherigen <codeph>IGraphicElement</codeph> in der Sequenz gemeinsam verwenden kann.
     
      <p>Beachten Sie, dass das Element in bestimmten Fällen an die übergeordnete <codeph>Group</codeph> übergeben wird, wenn <codeph>setSharedDisplayObject</codeph> aufgerufen wird. In diesen Fällen wird diese Methode nicht aufgerufen.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#IGraphicElement/canShareWithNext"><linktext>canShareWithNext</linktext></link><link href="spark.core.xml#IGraphicElement/setSharedDisplayObject"><linktext>setSharedDisplayObject</linktext></link></related-links></apiOperation><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:createDisplayObject"><apiName>createDisplayObject</apiName><shortdesc>
      Erstellt ein neues DisplayObject, in dem dieses IGraphicElement gezeichnet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Das DisplayObject wird erstellt.
      </apiDesc><apiType value="flash.display:DisplayObject"/></apiReturn></apiOperationDef><apiDesc>
      Erstellt ein neues <codeph>DisplayObject</codeph>, in dem dieses <codeph>IGraphicElement</codeph> gezeichnet wird. Nachfolgende Aufrufe der get-Methode für die <codeph>displayObject</codeph>-Eigenschaft müssen dasselbe Anzeigeobjekt zurückgeben. Nachdem das <codeph>DisplayObject</codeph> erstellt wurde, wird die übergeordnete <codeph>Group</codeph> über die Anzeigeobjekte an den Rest der Elemente in der Sequenz übergeben. <codeph>Group</codeph> stellt sicher, dass diese Methode nur bei Bedarf aufgerufen wird.
     
      <p>Wenn das Element an der gemeinsamen Verwendung von <codeph>DisplayObject</codeph> beteiligt werden möchte, muss das neue DisplayObject das <codeph>IShareableDisplayObject</codeph> implementieren. Diese Schnittstelle wird von der Group verwendet, um das Ungültigmachen und Neuzeichnen der grafischen Elementsequenz zu verwalten. Sie wird vom Entwickler nicht direkt verwendet.</p>
     
      Um die gemeinsam genutzten Sequenzen erneut auszuwerten, rufen Sie die übergeordnete <codeph>invalidateGraphicElementSharing()</codeph>-Methode der <codeph>Group</codeph> auf. Um zu erzwingen, dass <codeph>Group</codeph> das aktuelle <codeph>DisplayObject</codeph> des Elements aus der Anzeigeliste entfernt und die gemeinsame Verwendung der Anzeigeobjekte neu berechnet wird, rufen Sie die <codeph>discardDisplayObject()</codeph>-Methode der übergeordneten <codeph>Group</codeph> auf.
     
      </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#IGraphicElement/displayObject"><linktext>displayObject</linktext></link><link href="spark.components.xml#Group/invalidateGraphicElementSharing"><linktext>spark.components.Group.invalidateGraphicElementSharing</linktext></link><link href="spark.components.xml#Group/discardDisplayObject"><linktext>spark.components.Group.discardDisplayObject</linktext></link></related-links></apiOperation><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:parentChanged"><apiName>parentChanged</apiName><shortdesc>
      Aufgerufen von Group, wenn ein IGraphicElement zu einer Group hinzugefügt bzw. daraus entfernt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>parent</apiItemName><apiOperationClassifier>spark.components:Group</apiOperationClassifier><apiDesc>Die übergeordnete Gruppe dieses <codeph>IGraphicElement</codeph>.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Aufgerufen von <codeph>Group</codeph>, wenn ein <codeph>IGraphicElement</codeph> zu einer Group hinzugefügt bzw. aus einer <codeph>Group</codeph> entfernt wird. Entwickler müssen diese Methode normalerweise nicht direkt aufrufen.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:setSharedDisplayObject"><apiName>setSharedDisplayObject</apiName><shortdesc>
      Bestimmt, ob dieses Element sich selbst im sharedDisplayObject der Sequenz zeichnen kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Gibt „true“ zurück, wenn dieses <codeph>IGraphicElement</codeph> sich selbst im gemeinsam verwendeten <codeph>DisplayObject</codeph> der Sequenz zeichnen kann.
     
      </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>sharedDisplayObject</apiItemName><apiType value="flash.display:DisplayObject"/></apiParam></apiOperationDef><apiDesc>
      Bestimmt, ob dieses Element sich selbst im <codeph>sharedDisplayObject</codeph> der Sequenz zeichnen kann.
     
      <p>Implementierer geben normalerweise <codeph>true</codeph> zurück, wenn dieses <codeph>IGraphicElement</codeph> sich kumulativ in die <codeph>graphics</codeph>-Eigenschaft des gemeinsam verwendeten <codeph>DisplayObject</codeph> zeichnen kann. In allen Fällen, in denen <codeph>IGraphicElement</codeph> Eigenschaften für das <codeph>DisplayObject</codeph> einstellen muss, die nicht auf den Rest der Elemente in der Sequenz angewendet werden, muss diese Methode <codeph>false</codeph> zurückgeben. Beispiele für derartige Eigenschaften sind „rotation“, „scale“, „transform“, „mask“, „alpha“, „filters“, „color transform“, „3D“ und „layer“.</p>
     
      Wenn diese Methode „true“ zurückgibt, müssen nachfolgende Aufrufe der get-Methode für die <codeph>displayObject</codeph>-Eigenschaft dasselbe Anzeigeobjekt zurückgeben.
     
      <p>Beachten Sie, dass das <codeph>sharedDisplayObject</codeph> in bestimmten Fällen die übergeordnete <codeph>Group</codeph> sein kann. In allen anderen Fällen wird das <codeph>DisplayObject</codeph> durch das erste Element in der Sequenz erstellt.</p> 
      
      <p>Wenn dieses <codeph>IGraphicElement</codeph> die zugehörige Sequenz erneut erstellen muss, benachrichtigt es die übergeordnete <codeph>Group</codeph> durch Aufrufen der zugehörigen <codeph>invalidateGraphicElementSharing()</codeph>-Methode.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#IGraphicElement/canShareWithPrevious"><linktext>canShareWithPrevious</linktext></link><link href="spark.core.xml#IGraphicElement/canShareWithNext"><linktext>canShareWithNext</linktext></link><link href="spark.components.xml#Group/invalidateGraphicElementSharing"><linktext>spark.components.Group.invalidateGraphicElementSharing</linktext></link></related-links></apiOperation><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:validateDisplayList"><apiName>validateDisplayList</apiName><shortdesc>
      Wird durch die übergeordnete Group aufgerufen, um dieses Element in seiner displayObject-Eigenschaft neu zu zeichnen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird durch die übergeordnete <codeph>Group</codeph> aufgerufen, um dieses Element in seiner <codeph>displayObject</codeph>-Eigenschaft neu zu zeichnen.
     
      <p>Wenn es sich um das erste Element in der Sequenz handelt (<codeph>displayObjectSharingMode</codeph> ist auf <codeph>DisplayObjectSharingMode.OWNS_SHARED_OBJECT</codeph> gesetzt), muss die <codeph>displayObject</codeph>-Grafik deaktiviert und wie erforderlich zum Zeichnen der restlichen Elemente eingerichtet werden.</p>
     
      <p>Das Element muss immer neu gezeichnet werden, auch wenn es sich selbst nicht geändert hat, seitdem die <codeph>validateDisplayList()</codeph>-Methode das letzte Mal aufgerufen wurde, da die übergeordnete <codeph>Group</codeph> die gesamte Sequenz neu zeichnet, wenn ein beliebiges Element neu gezeichnet werden muss.</p>
     
      <p>Um sicherzustellen, dass diese Methode aufgerufen wurde, benachrichtigen Sie die übergeordnete <codeph>Group</codeph> durch Aufrufen der zugehörigen <codeph>invalidateGraphicElementSize()</codeph>-Methode.</p>  
     
      <p>Beachten Sie, dass diese Methode aufgerufen werden kann, auch wenn dieses Element nicht die übergeordnete <codeph>Group</codeph> benachrichtigt hat.</p>
     
      </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#IGraphicElement/displayObject"><linktext>displayObject</linktext></link><link href="spark.core.xml#IGraphicElement/validateProperties"><linktext>validateProperties</linktext></link><link href="spark.core.xml#IGraphicElement/validateSize"><linktext>validateSize</linktext></link></related-links></apiOperation><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:validateProperties"><apiName>validateProperties</apiName><shortdesc>
      Wird von der übergeordneten Group aufgerufen, um die Eigenschaften dieses Elements zu überprüfen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird von der übergeordneten <codeph>Group</codeph> aufgerufen, um die Eigenschaften dieses Elements zu überprüfen. Um sicherzustellen, dass diese Methode aufgerufen wurde, benachrichtigen Sie die übergeordnete <codeph>Group</codeph> durch Aufrufen der zugehörigen <codeph>invalidateGraphicElementProperties()</codeph>- Methode. Beachten Sie, dass diese Methode aufgerufen werden kann, auch wenn dieses Element nicht die übergeordnete <codeph>Group</codeph> benachrichtigt hat.
     
      </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#IGraphicElement/validateSize"><linktext>validateSize</linktext></link><link href="spark.core.xml#IGraphicElement/validateDisplayList"><linktext>validateDisplayList</linktext></link></related-links></apiOperation><apiOperation id="spark.core:IGraphicElement:spark.core:IGraphicElement:validateSize"><apiName>validateSize</apiName><shortdesc>
      Wird von der übergeordneten Group aufgerufen, um die Größe dieses Elements zu überprüfen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Wird von der übergeordneten <codeph>Group</codeph> aufgerufen, um die Größe dieses Elements zu überprüfen. Wenn sich die Größe des Elements ändert und sich diese Änderung auf das Layout der übergeordneten <codeph>Group</codeph> auswirkt, ist der Implementierer für das Ungültigmachen der Größe des übergeordneten Elements und der Anzeigeleiste verantwortlich. Um sicherzustellen, dass diese Methode aufgerufen wurde, benachrichtigen Sie die übergeordnete <codeph>Group</codeph> durch Aufrufen der zugehörigen <codeph>invalidateGraphicElementSize()</codeph>-Methode. Beachten Sie, dass diese Methode aufgerufen werden kann, auch wenn dieses Element nicht die übergeordnete <codeph>Group</codeph> benachrichtigt hat.
     
      </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#IGraphicElement/validateProperties"><linktext>validateProperties</linktext></link><link href="spark.core.xml#IGraphicElement/validateDisplayList"><linktext>validateDisplayList</linktext></link></related-links></apiOperation><apiValue id="spark.core:IGraphicElement:spark.core:IGraphicElement:displayObject:get"><apiName>displayObject</apiName><shortdesc>
      Das gemeinsam verwendete DisplayObject, in dem dieses IGraphicElement gezeichnet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.display:DisplayObject"/></apiValueDef><apiDesc>
      Das gemeinsam verwendete <codeph>DisplayObject</codeph>, in dem dieses <codeph>IGraphicElement</codeph> gezeichnet wird. Implementierer sollten das <codeph>DisplayObject</codeph> nicht an dieser Stelle erstellen, sondern in <codeph>createDisplayObject()</codeph>.
     
      </apiDesc></apiValueDetail><related-links><link href="spark.core.xml#IGraphicElement/createDisplayObject"><linktext>createDisplayObject</linktext></link><link href="spark.core.xml#IGraphicElement/validateDisplayList"><linktext>validateDisplayList</linktext></link><link href="spark.core.xml#IGraphicElement/displayObjectSharingMode"><linktext>displayObjectSharingMode</linktext></link></related-links></apiValue><apiValue id="spark.core:IGraphicElement:spark.core:IGraphicElement:displayObjectSharingMode:get"><apiName>displayObjectSharingMode</apiName><shortdesc>
      Gibt die Verknüpfung zwischen diesem IGraphicElement und den zugehörigen Anzeigeobjekten an.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      Gibt die Verknüpfung zwischen diesem IGraphicElement und den zugehörigen Anzeigeobjekten an. Die Gruppe verwaltet diese Eigenschaft und die Werte entsprechen denen der <codeph>DisplayObjectSharingMode</codeph>-enum-Klasse.
     
      <ul> 
        <li>Ein Wert von <codeph>DisplayObjectSharingMode.OWNS_UNSHARED_OBJECT</codeph> gibt an, dass das IGraphicElement im ausschließlichen Besitz des DisplayObject entsprechend der zugehörigen <codeph>displayObject</codeph>-Eigenschaft ist.</li>
     
        <li>Ein Wert von <codeph>DisplayObjectSharingMode.OWNS_SHARED_OBJECT</codeph> gibt an, dass das IGraphicElement im Besitz des DisplayObject entsprechend der zugehörigen <codeph>displayObject</codeph>-Eigenschaft ist, aber ein anderes IGraphicElement ebenfalls dieses Anzeigeobjekt verwendet bzw. darauf zeichnet. Je nach der entsprechenden Implementierung kann das IGraphicElement eine bestimmte Verwaltung des Anzeigeobjekts durchführen. Beispielsweise werden durch die Basisklasse <codeph>GraphicElement</codeph> die Transformation des Anzeigeobjekts deaktiviert, die Eigenschaften für Sichtbarkeit, Alpha usw. auf die Standardwerte zurückgesetzt und zusätzlich die Grafiken bei jedem <codeph>validateDisplayList()</codeph>-Aufruf deaktiviert.</li>
     
        <li>Ein Wert von <codeph>DisplayObjectSharingMode.USES_SHARED_OBJECT</codeph> gibt an, dass das IGraphicElement in dem DisplayObject zeichnet, das der zugehörigen <codeph>displayObject</codeph>-Eigenschaft entspricht. Es gibt weitere IGraphicElements, die im gleichen displayObject zeichnen. Bei dem ersten Element, das einen Zeichenvorgang durchführt, ist der Modus auf <codeph>DisplayObjectMode.OWNS_SHARED_OBJECT</codeph> gesetzt.</li>
      </ul>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.core:ISharedDisplayObject"><apiName>ISharedDisplayObject</apiName><shortdesc>
  Die ISharedDisplayObject-Schnittstelle definiert die Mindestanforderungen, die ein DisplayObject implementieren muss, damit es von IGraphicElement-Objekten gemeinsam genutzt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die ISharedDisplayObject-Schnittstelle definiert die Mindestanforderungen, die ein DisplayObject implementieren muss, damit es von <codeph>IGraphicElement</codeph>-Objekten gemeinsam genutzt werden kann. Die Group-Klasse verwendet ISharedDisplayObject, um das Ungültigmachen und Neuzeichnen von Sequenzen der IGraphicElement-Objekte zu verwalten, die ein DisplayObject gemeinsam nutzen.
 
  <p>Beim Implementieren einer benutzerdefinierten IGraphicElement-Klasse implementieren Sie auch diese Schnittstelle für das DisplayObject, das das benutzerdefinierte IGraphicElement-Objekt erstellt.</p>
  
  </apiDesc></apiClassifierDetail><apiValue id="spark.core:ISharedDisplayObject:spark.core:ISharedDisplayObject:redrawRequested:get"><apiName>redrawRequested</apiName><shortdesc>
      Enthält „true“, wenn beliebige IGraphicElement-Objekte, die dieses DisplayObject gemeinsam verwenden, neu gezeichnet werden müssen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Enthält <codeph>true</codeph>, wenn beliebige IGraphicElement-Objekte, die dieses DisplayObject gemeinsam verwenden, neu gezeichnet werden müssen. Diese Eigenschaft wird von der Group-Klasse intern verwendet; Sie verwenden sie normalerweise nicht. Die Group-Klasse stellt diese Eigenschaft ein und gibt sie zurück, um zu bestimmen, welche Grafikelemente zu überprüfen sind.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.core:NavigationUnit"><apiName>NavigationUnit</apiName><shortdesc>
  Die NavigationUnit-Klasse definiert die möglichen Werte für die getVerticalScrollPositionDelta()- und getHorizontalScrollPositionDelta()-Methoden der IViewport-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die NavigationUnit-Klasse definiert die möglichen Werte für die <codeph>getVerticalScrollPositionDelta()</codeph>- und <codeph>getHorizontalScrollPositionDelta()</codeph>-Methoden der IViewport-Klasse.
 
  <p>Alle diese Konstanten weisen dieselben Werte wie ihre flash.ui.Keyboard-Gegenstücke auf, mit Ausnahme von PAGE_LEFT und PAGE_RIGHT, für die keine entsprechenden Tasten auf der Tastatur existieren.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.ui.Keyboard.xml"><linktext>flash.ui.Keyboard</linktext></link><link href="spark.core.xml#IViewport/getVerticalScrollPositionDelta"><linktext>IViewport.getVerticalScrollPositionDelta</linktext></link><link href="spark.core.xml#IViewport/getHorizontalScrollPositionDelta"><linktext>IViewport.getHorizontalScrollPositionDelta</linktext></link></related-links><apiOperation id="spark.core:NavigationUnit:isNavigationUnit"><apiName>isNavigationUnit</apiName><shortdesc>
      Gibt „true“ zurück, wenn keyCode direkt einem NavigationUnit-Aufzählungswert zugeordnet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>keyCode</apiItemName><apiType value="uint"/></apiParam></apiOperationDef><apiDesc>
      Gibt „true“ zurück, wenn keyCode direkt einem NavigationUnit-Aufzählungswert zugeordnet wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.core:NavigationUnit:DOWN"><apiName>DOWN</apiName><shortdesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach unten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>40.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach unten.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:END"><apiName>END</apiName><shortdesc>
      Navigieren Sie an das Ende des Dokuments.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>35.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie an das Ende des Dokuments.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:HOME"><apiName>HOME</apiName><shortdesc>
      Navigieren Sie an den Anfang des Dokuments.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>36.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie an den Anfang des Dokuments.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:LEFT"><apiName>LEFT</apiName><shortdesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach links.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>37.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach links.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:PAGE_DOWN"><apiName>PAGE_DOWN</apiName><shortdesc>
      Navigieren Sie eine Seite nach unten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>34.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie eine Seite nach unten.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:PAGE_LEFT"><apiName>PAGE_LEFT</apiName><shortdesc>
      Navigieren Sie einen Seite nach links.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x2397</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie einen Seite nach links. Der Wert dieser Konstanten (0x2397) entspricht dem Unicode-Zeichen „Vorherige Seite“. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:PAGE_RIGHT"><apiName>PAGE_RIGHT</apiName><shortdesc>
      Navigieren Sie eine Seite nach rechts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0x2398</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie eine Seite nach rechts. Der Wert dieser Konstanten (0x2398) entspricht dem Unicode-Zeichen „Nächste Seite“. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:PAGE_UP"><apiName>PAGE_UP</apiName><shortdesc>
      Navigieren Sie eine Seite nach oben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>33.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie eine Seite nach oben.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:RIGHT"><apiName>RIGHT</apiName><shortdesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach rechts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>39.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach rechts.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:NavigationUnit:UP"><apiName>UP</apiName><shortdesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach oben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>38.0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
      Navigieren Sie eine Zeile oder einen Schritt („step“) nach oben.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.core:SpriteVisualElement"><apiName>SpriteVisualElement</apiName><shortdesc>
  Die SpriteVisualElement-Klasse ist eine leichte Sprite-basierte Implementierung von IVisualElement.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IVisualElement</apiBaseInterface><apiBaseInterface>mx.core:IID</apiBaseInterface><apiBaseInterface>mx.core:IFlexModule</apiBaseInterface><apiBaseClassifier>mx.core:FlexSprite</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die SpriteVisualElement-Klasse ist eine leichte Sprite-basierte Implementierung von IVisualElement. Sie kann in Spark-Containern abgelegt und korrekt angeordnet und gerendert werden.
   </apiDesc></apiClassifierDetail><apiConstructor id="spark.core:SpriteVisualElement:SpriteVisualElement"><apiName>SpriteVisualElement</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
           </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.core:SpriteVisualElement:getBoundsXAtSize"><apiName>getBoundsXAtSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getBoundsYAtSize"><apiName>getBoundsYAtSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getLayoutBoundsHeight"><apiName>getLayoutBoundsHeight</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getLayoutBoundsWidth"><apiName>getLayoutBoundsWidth</apiName><shortdesc conref="mx.core.ILayoutElement#getLayoutBoundsWidth()">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc conref="mx.core.ILayoutElement#getLayoutBoundsWidth()">
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getLayoutBoundsX"><apiName>getLayoutBoundsX</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getLayoutBoundsY"><apiName>getLayoutBoundsY</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getLayoutMatrix"><apiName>getLayoutMatrix</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.geom:Matrix"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getLayoutMatrix3D"><apiName>getLayoutMatrix3D</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.geom:Matrix3D"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getMaxBoundsHeight"><apiName>getMaxBoundsHeight</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getMaxBoundsWidth"><apiName>getMaxBoundsWidth</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getMinBoundsHeight"><apiName>getMinBoundsHeight</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getMinBoundsWidth"><apiName>getMinBoundsWidth</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getPreferredBoundsHeight"><apiName>getPreferredBoundsHeight</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:getPreferredBoundsWidth"><apiName>getPreferredBoundsWidth</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:protected:invalidateParentSizeAndDisplayList"><apiName>invalidateParentSizeAndDisplayList</apiName><shortdesc>
      Hebt die Gültigkeit der Größe und Anzeigeliste des übergeordneten Objekts auf, wenn sich dieses Objekt auf das Layout (includeInLayout ist „true“) auswirkt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Hebt die Gültigkeit der Größe und Anzeigeliste des übergeordneten Objekts auf, wenn sich dieses Objekt auf das Layout (includeInLayout ist „true“) auswirkt.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:setLayoutBoundsPosition"><apiName>setLayoutBoundsPosition</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newBoundsX</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>newBoundsY</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:setLayoutBoundsSize"><apiName>setLayoutBoundsSize</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:setLayoutMatrix"><apiName>setLayoutMatrix</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="flash.geom:Matrix"/></apiParam><apiParam><apiItemName>invalidateLayout</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:setLayoutMatrix3D"><apiName>setLayoutMatrix3D</apiName><shortdesc>
      Legt ähnlich wie die layoutMatrix3D-Eigenschaft das Matrix3D-Layout fest, löst jedoch keinene Layoutübergabe aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="flash.geom:Matrix3D"/></apiParam><apiParam><apiItemName>invalidateLayout</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
      Legt ähnlich wie die layoutMatrix3D-Eigenschaft das Matrix3D-Layout fest, löst jedoch keinene Layoutübergabe aus.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:transformAround"><apiName>transformAround</apiName><shortdesc conref="mx.core.ILayoutElement#transformAround">
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>transformCenter</apiItemName><apiType value="flash.geom:Vector3D"/></apiParam><apiParam><apiItemName>scale</apiItemName><apiType value="flash.geom:Vector3D"/><apiData>null</apiData></apiParam><apiParam><apiItemName>rotation</apiItemName><apiType value="flash.geom:Vector3D"/><apiData>null</apiData></apiParam><apiParam><apiItemName>translation</apiItemName><apiType value="flash.geom:Vector3D"/><apiData>null</apiData></apiParam><apiParam><apiItemName>postLayoutScale</apiItemName><apiType value="flash.geom:Vector3D"/><apiData>null</apiData></apiParam><apiParam><apiItemName>postLayoutRotation</apiItemName><apiType value="flash.geom:Vector3D"/><apiData>null</apiData></apiParam><apiParam><apiItemName>postLayoutTranslation</apiItemName><apiType value="flash.geom:Vector3D"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc conref="mx.core.ILayoutElement#transformAround">
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:protected:transformHeightForLayout"><apiName>transformHeightForLayout</apiName><shortdesc>
      Transformieren Sie die Größe des Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Gibt die transformierte Höhe zurück. Die Transformation wird in der Layout-Transformationsmatrix des Elements ausgeführt.
           </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die Zielbreite vor der Transformation.
           </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die Zielhöhe vor der Transformation.
           </apiDesc></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      Transformieren Sie die Größe des Elements.
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:transformPointToParent"><apiName>transformPointToParent</apiName><shortdesc>
     </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata><asCustoms><postLayoutPosition>A Vector3D point that will hold the post-layout
     result. If null, the parameter is ignored.
           </postLayoutPosition></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>localPosition</apiItemName><apiType value="flash.geom:Vector3D"/><apiDesc>
     </apiDesc></apiParam><apiParam><apiItemName>position</apiItemName><apiType value="flash.geom:Vector3D"/></apiParam><apiParam><apiItemName>postLayoutPosition</apiItemName><apiType value="flash.geom:Vector3D"/></apiParam></apiOperationDef><apiDesc>
      <codeph/><codeph/>
          </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.core:SpriteVisualElement:protected:transformWidthForLayout"><apiName>transformWidthForLayout</apiName><shortdesc>
      Transformieren Sie die Größe des Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>Gibt die transformierte Breite zurück. Die Transformation wird in der Layout-Transformationsmatrix des Elements ausgeführt.
           </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>Die Zielbreite vor der Transformation.
           </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>Die Zielhöhe vor der Transformation.
           </apiDesc></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      Transformieren Sie die Größe des Elements.
           </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.core:SpriteVisualElement:baseline:get"><apiName>baseline</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:baselinePosition:get"><apiName>baselinePosition</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:bottom:get"><apiName>bottom</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:depth:get"><apiName>depth</apiName><shortdesc conref="spark.primitives.supportClasses.GraphicElement#depth">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="spark.primitives.supportClasses.GraphicElement#depth">
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:designLayer:get"><apiName>designLayer</apiName><shortdesc conref="mx.core.IVisualElement#designLayer">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:DesignLayer"/></apiValueDef><apiDesc conref="mx.core.IVisualElement#designLayer">
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:hasLayoutMatrix3D:get"><apiName>hasLayoutMatrix3D</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:horizontalCenter:get"><apiName>horizontalCenter</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:id:get"><apiName>id</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:includeInLayout:get"><apiName>includeInLayout</apiName><shortdesc conref="mx.core.UIComponent#includeInLayout">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc conref="mx.core.UIComponent#includeInLayout">
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:is3D:get"><apiName>is3D</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:left:get"><apiName>left</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:moduleFactory:get"><apiName>moduleFactory</apiName><shortdesc>
      Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef><apiDesc>
      Eine Modul-Factory wird als Kontext für die Verwendung eingebetteter Schriftarten und für die Suche nach dem Stilmanager, der die Stile dieser Komponente steuert, verwendet.
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:owner:get"><apiName>owner</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.display:DisplayObjectContainer"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:percentHeight:get"><apiName>percentHeight</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:percentWidth:get"><apiName>percentWidth</apiName><shortdesc conref="mx.core.UIComponent#percentWidth">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="mx.core.UIComponent#percentWidth">
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:postLayoutTransformOffsets:get"><apiName>postLayoutTransformOffsets</apiName><shortdesc conref="mx.core.ILayoutElement#postLayoutTransformOffsets">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="mx.geom:TransformOffsets"/></apiValueDef><apiDesc conref="mx.core.ILayoutElement#postLayoutTransformOffsets">
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:right:get"><apiName>right</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:rotationX:get"><apiName>rotationX</apiName><shortdesc>
      Gibt die Drehung der x-Achse der DisplayObject-Instanz in Grad an, ausgehend von ihrer ursprünglichen Ausrichtung relativ zum übergeordneten 3D-Container.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Gibt die x-Achsendrehung der DisplayObject-Instanz in Grad an, und zwar bezogen auf die ursprüngliche Ausrichtung zum übergeordneten 3D-Container. Werte zwischen 0 und 180 geben eine Rechtsdrehung, Werte zwischen 0 und -180 eine Linksdrehung an. Werte außerhalb dieses Bereichs werden zu 360 addiert bzw. von 360 subtrahiert, damit sich ein Wert innerhalb des Bereichs ergibt. Diese Eigenschaft wird während der Berechnung von 2D-Layouts in Flex ignoriert.
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:rotationY:get"><apiName>rotationY</apiName><shortdesc>
      Gibt die y-Achsendrehung der DisplayObject-Instanz in Grad ab der ursprünglichen Ausrichtung relativ zum übergeordneten 3D-Container an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Gibt die y-Achsendrehung der DisplayObject-Instanz in Grad ab der ursprünglichen Ausrichtung relativ zum übergeordneten 3D-Container an. Werte zwischen 0 und 180 geben eine Rechtsdrehung, Werte zwischen 0 und -180 eine Linksdrehung an. Werte außerhalb dieses Bereichs werden zu 360 addiert bzw. von 360 subtrahiert, damit sich ein Wert innerhalb des Bereichs ergibt. Diese Eigenschaft wird während der Berechnung von 2D-Layouts in Flex ignoriert.
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:top:get"><apiName>top</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:transformX:get"><apiName>transformX</apiName><shortdesc>
      Legt die x-Koordinate für die Transformationsmitte der Komponente fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Legt die x-Koordinate für die Transformationsmitte der Komponente fest.
           <p>Wenn dieses Objekt das Ziel eines Spark-Transformationseffekts ist, können Sie diese Eigenschaft überschreiben, indem Sie die <codeph>AnimateTransform.autoCenterTransform</codeph>-Eigenschaft festlegen. Wenn <codeph>autoCenterTransform</codeph> den Wert <codeph>false</codeph> aufweist, wird die Transformationsmitte von den Eigenschaften <codeph>transformX</codeph>, <codeph>transformY</codeph> und <codeph>transformZ</codeph> des Effektziels bestimmt. Hat <codeph>autoCenterTransform</codeph> den Wert <codeph>true</codeph>, tritt der Effekt um die Mitte des Ziels auf, <codeph>(width/2, height/2)</codeph>.</p>
           <p>Durch Festlegen dieser Eigenschaft bei der Spark-Effect-Klasse wird die Eigenschaft des Zielobjekts überschrieben.</p>
           </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>spark.effects.AnimateTransform.autoCenterTransform</linktext></link><link href="spark.effects.xml#AnimateTransform/transformX"><linktext>spark.effects.AnimateTransform.transformX</linktext></link></related-links></apiValue><apiValue id="spark.core:SpriteVisualElement:transformY:get"><apiName>transformY</apiName><shortdesc>
      Legt die y-Koordinate für die Transformationsmitte der Komponente fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Legt die y-Koordinate für die Transformationsmitte der Komponente fest.
           <p>Wenn dieses Objekt das Ziel eines Spark-Transformationseffekts ist, können Sie diese Eigenschaft überschreiben, indem Sie die <codeph>AnimateTransform.autoCenterTransform</codeph>-Eigenschaft festlegen. Wenn <codeph>autoCenterTransform</codeph> den Wert <codeph>false</codeph> aufweist, wird die Transformationsmitte von den Eigenschaften <codeph>transformY</codeph>, <codeph>transformY</codeph> und <codeph>transformZ</codeph> des Effektziels bestimmt. Hat <codeph>autoCenterTransform</codeph> den Wert <codeph>true</codeph>, tritt der Effekt um die Mitte des Ziels auf, <codeph>(width/2, height/2)</codeph>.</p>
           <p>Durch Festlegen dieser Eigenschaft bei der Spark-Effect-Klasse wird die Eigenschaft des Zielobjekts überschrieben.</p>
           </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>spark.effects.AnimateTransform.autoCenterTransform</linktext></link><link href="spark.effects.xml#AnimateTransform/transformY"><linktext>spark.effects.AnimateTransform.transformY</linktext></link></related-links></apiValue><apiValue id="spark.core:SpriteVisualElement:transformZ:get"><apiName>transformZ</apiName><shortdesc>
      Legt die z-Koordinate für die Transformationsmitte der Komponente fest.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Legt die z-Koordinate für die Transformationsmitte der Komponente fest.
           <p>Wenn dieses Objekt das Ziel eines Spark-Transformationseffekts ist, können Sie diese Eigenschaft überschreiben, indem Sie die <codeph>AnimateTransform.autoCenterTransform</codeph>-Eigenschaft festlegen. Wenn <codeph>autoCenterTransform</codeph> den Wert <codeph>false</codeph> aufweist, wird die Transformationsmitte von den Eigenschaften <codeph>transformZ</codeph>, <codeph>transformY</codeph> und <codeph>transformZ</codeph> des Effektziels bestimmt. Hat <codeph>autoCenterTransform</codeph> den Wert <codeph>true</codeph>, tritt der Effekt um die Mitte des Ziels auf, <codeph>(width/2, height/2)</codeph>.</p>
           <p>Durch Festlegen dieser Eigenschaft bei der Spark-Effect-Klasse wird die Eigenschaft des Zielobjekts überschrieben.</p>
           </apiDesc></apiValueDetail><related-links><link href="spark.effects.xml#AnimateTransform/autoCenterTransform"><linktext>spark.effects.AnimateTransform.autoCenterTransform</linktext></link><link href="spark.effects.xml#AnimateTransform/transformZ"><linktext>spark.effects.AnimateTransform.transformZ</linktext></link></related-links></apiValue><apiValue id="spark.core:SpriteVisualElement:verticalCenter:get"><apiName>verticalCenter</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:visible:get"><apiName>visible</apiName><shortdesc>
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:z:get"><apiName>z</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:scaleY:set"><apiName>scaleY</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:protected:viewHeight:set"><apiName>viewHeight</apiName><shortdesc conref="spark.primitives.Graphic#viewHeight">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc conref="spark.primitives.Graphic#viewHeight">
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:SpriteVisualElement:protected:viewWidth:set"><apiName>viewWidth</apiName><shortdesc conref="spark.primitives.Graphic#viewWidth">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Number"/></apiValueDef><apiDesc conref="spark.primitives.Graphic#viewWidth">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.core:IViewport"><apiName>IViewport</apiName><shortdesc>
  Die IViewport-Schnittstelle wird von den Komponenten implementiert, die einen Viewport unterstützen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IVisualElement</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
  Die IViewport-Schnittstelle wird von den Komponenten implementiert, die einen Viewport unterstützen. Wenn die untergeordneten Elemente einer Komponente größer als die Komponente sind und Sie die untergeordneten Elemente auf die Begrenzungen der Komponente kürzen möchten, können Sie einen Viewport und Bildlaufleisten definieren. Bei einem Viewport handelt es sich um eine rechteckige Untergruppe des Bereichs einer Komponente, die Sie anzeigen möchten, und nicht um die Anzeige der gesamten Komponente.
   <p>Ein Viewport kann nicht durch den Anwendungsbenutzer bewegt werden. Sie können jedoch einen Viewport mit Bildlaufleisten kombinieren, sodass der Benutzer einen Bildlauf im Viewport durchführen kann, um den gesamten Inhalt der Komponente anzuzeigen. Verwenden Sie die Scroller-Komponente, um Bildlaufleisten zu der Komponente hinzuzufügen.</p>
   </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#Scroller"><linktext>spark.components.Scroller</linktext></link></related-links><apiOperation id="spark.core:IViewport:spark.core:IViewport:getHorizontalScrollPositionDelta"><apiName>getHorizontalScrollPositionDelta</apiName><shortdesc>
      Gibt die Anzahl zurück, die zur aktuellen horizontalScrollPosition des Viewports hinzuzufügen ist, um einen Bildlauf mit der angeforderten Bildlaufeinheit durchzuführen. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Anzahl an Pixeln, die zu <codeph>horizontalScrollPosition</codeph> hinzuzufügen ist.
     
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>navigationUnit</apiItemName><apiType value="uint"/><apiDesc>Die Anzahl für den Bildlauf. Der Wert der Einheit muss eine der folgenden spark.core.NavigationUnit-Konstanten sein: <codeph>LEFT</codeph>, <codeph>RIGHT</codeph>, <codeph>PAGE_LEFT</codeph>, <codeph>PAGE_RIGHT</codeph>, <codeph>HOME</codeph> oder <codeph>END</codeph>. Für einen Bildlauf über eine einzelne Spalte verwenden Sie <codeph>LEFT</codeph> oder <codeph>RIGHT</codeph>. Für einen Bildlauf zur ersten oder letzten Spalte verwenden Sie <codeph>HOME</codeph> oder <codeph>END</codeph>.
           </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die Anzahl zurück, die zur aktuellen <codeph>horizontalScrollPosition</codeph> des Viewports hinzuzufügen ist, um einen Bildlauf mit der angeforderten Bildlaufeinheit durchzuführen. 
           </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#NavigationUnit"><linktext>NavigationUnit</linktext></link></related-links></apiOperation><apiOperation id="spark.core:IViewport:spark.core:IViewport:getVerticalScrollPositionDelta"><apiName>getVerticalScrollPositionDelta</apiName><shortdesc>
      Gibt die Anzahl zurück, die zur aktuellen verticalScrollPosition des Viewports hinzuzufügen ist, um einen Bildlauf mit der angeforderten Bildlaufeinheit durchzuführen. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Die Anzahl an Pixeln, die zu <codeph>verticalScrollPosition</codeph> hinzuzufügen ist.
     
      </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>navigationUnit</apiItemName><apiType value="uint"/><apiDesc>Die Anzahl für den Bildlauf. Der Wert der Einheit muss eine der folgenden spark.core.NavigationUnit-Konstanten sein: <codeph>UP</codeph>, <codeph>DOWN</codeph>, <codeph>PAGE_UP</codeph>, <codeph>PAGE_DOWN</codeph>, <codeph>HOME</codeph> oder <codeph>END</codeph>. Für einen Bildlauf über eine einzelne Spalte verwenden Sie <codeph>UP</codeph> oder <codeph>DOWN</codeph>. Für einen Bildlauf zur ersten oder letzten Zeile verwenden Sie <codeph>HOME</codeph> oder <codeph>END</codeph>.
           </apiDesc></apiParam></apiOperationDef><apiDesc>
      Gibt die Anzahl zurück, die zur aktuellen <codeph>verticalScrollPosition</codeph> des Viewports hinzuzufügen ist, um einen Bildlauf mit der angeforderten Bildlaufeinheit durchzuführen. 
           </apiDesc></apiOperationDetail><related-links><link href="spark.core.xml#NavigationUnit"><linktext>NavigationUnit</linktext></link></related-links></apiOperation><apiValue id="spark.core:IViewport:spark.core:IViewport:clipAndEnableScrolling:get"><apiName>clipAndEnableScrolling</apiName><shortdesc>
      Mit „true“ wird angegeben, dass die untergeordneten Elemente auf die Begrenzungen des Viewports gekürzt werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
           </apiDefaultValue></apiValueDef><apiDesc>
      Mit <codeph>true</codeph> wird angegeben, dass die untergeordneten Elemente auf die Begrenzungen des Viewports gekürzt werden. Mit <codeph>false</codeph> wird angegeben, dass die untergeordneten Elemente des Containers über die Begrenzungen des Containers hinausragen, und zwar unabhängig von den Größenspezifikationen der Komponente. 
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="spark.core.xml#LayoutBase/updateScrollRect"><linktext>LayoutBase.updateScrollRect</linktext></link><link href="" invalidHref="spark.core.verticalScrollPosition.xml"><linktext>verticalScrollPosition</linktext></link><link href="" invalidHref="spark.core.horizontalScrollPosition.xml"><linktext>horizontalScrollPosition</linktext></link></related-links></apiValue><apiValue id="spark.core:IViewport:spark.core:IViewport:contentHeight:get"><apiName>contentHeight</apiName><shortdesc>
      Die Höhe des Inhalts des Viewports.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Höhe des Inhalts des Viewports. Wenn <codeph>clipAndEnabledScrolling</codeph> den Wert „true“ aufweist, wird durch <codeph>contentHeight</codeph> des Viewports die Begrenzung für den vertikalen Bildlauf bestimmt. Durch die tatsächliche Höhe des Viewports wird bestimmt, wie viel vom Inhalt sichtbar ist. Sie können vertikal durch den Inhalt blättern, indem Sie für <codeph>verticalScrollPosition</codeph> einen Wert zwischen 0 und <codeph>contentHeight - height</codeph> verwenden.  
           <p>Implementierungen dieser Eigenschaft müssen bindbar sein und müssen Ereignisse des Typs <codeph>propertyChange</codeph> generieren.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:IViewport:spark.core:IViewport:contentWidth:get"><apiName>contentWidth</apiName><shortdesc>
      Die Breite des Inhalts des Viewports.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
      Die Breite des Inhalts des Viewports. Wenn <codeph>clipAndEnabledScrolling</codeph> den Wert „true“ aufweist, wird durch <codeph>contentWidth</codeph> des Viewports die Begrenzung für den horizontalen Bildlauf bestimmt. Durch die tatsächliche Breite des Viewports wird bestimmt, wie viel vom Inhalt sichtbar ist. Sie können horizontal durch den Inhalt blättern, indem Sie für <codeph>horizontalScrollPosition</codeph> einen Wert zwischen 0 und <codeph>contentWidth - width</codeph> verwenden.  
     
      <p>Implementierungen dieser Eigenschaft müssen bindbar sein und müssen Ereignisse des Typs <codeph>propertyChange</codeph> generieren.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:IViewport:spark.core:IViewport:horizontalScrollPosition:get"><apiName>horizontalScrollPosition</apiName><shortdesc>
      Die x-Koordinate im Ursprung des Viewports im Koordinatensystem der Komponente. Der Standardwert lautet (0,0) und entspricht der linken oberen Ecke der Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Die x-Koordinate im Ursprung des Viewports im Koordinatensystem der Komponente. Der Standardwert lautet (0,0) und entspricht der linken oberen Ecke der Komponente. Wenn <codeph>clipAndEnableScrolling</codeph> auf <codeph>true</codeph> eingestellt ist, führt das Einstellen dieser Eigenschaft normalerweise dazu, dass für den Viewport Folgendes festgelegt wird:
      <pre>
      new Rectangle(horizontalScrollPosition, verticalScrollPosition, width, height)
      </pre>
     
      Implementierungen dieser Eigenschaft müssen bindbar sein und müssen Ereignisse des Typs <codeph>propertyChange</codeph> generieren.
       
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="spark.core.target.xml"><linktext>target</linktext></link><link href="" invalidHref="spark.core.verticalScrollPosition.xml"><linktext>verticalScrollPosition</linktext></link></related-links></apiValue><apiValue id="spark.core:IViewport:spark.core:IViewport:verticalScrollPosition:get"><apiName>verticalScrollPosition</apiName><shortdesc>
      Die y-Koordinate im Ursprung des Viewports im Koordinatensystem der Komponente. Der Standardwert lautet (0,0) und entspricht der linken oberen Ecke der Komponente.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Die y-Koordinate im Ursprung des Viewports im Koordinatensystem der Komponente. Der Standardwert lautet (0,0) und entspricht der linken oberen Ecke der Komponente. Wenn <codeph>clipAndEnableScrolling</codeph> auf <codeph>true</codeph> eingestellt ist, führt das Einstellen dieser Eigenschaft normalerweise dazu, dass für den Viewport Folgendes festgelegt wird:
      <pre>
      new Rectangle(horizontalScrollPosition, verticalScrollPosition, width, height)
      </pre>
     
      Implementierungen dieser Eigenschaft müssen bindbar sein und müssen Ereignisse des Typs <codeph>propertyChange</codeph> generieren.
       
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="spark.core.horizontalScrollPosition.xml"><linktext>horizontalScrollPosition</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.core:MaskType"><apiName>MaskType</apiName><shortdesc>
  Die MaskType-Klasse definiert die möglichen Werte für die MaskType-Eigenschaft der GraphicElement-Klasse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die MaskType-Klasse definiert die möglichen Werte für die <codeph>MaskType</codeph>-Eigenschaft der GraphicElement-Klasse.
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.primitives.supportClasses.xml#GraphicElement/maskType"><linktext>spark.primitives.supportClasses.GraphicElement.maskType</linktext></link></related-links><apiValue id="spark.core:MaskType:ALPHA"><apiName>ALPHA</apiName><shortdesc>
      Die Maske berücksichtigt die Deckkraft und verwendet die Striche und Bitmapfilter der Maske.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>alpha</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die Maske berücksichtigt die Deckkraft und verwendet die Striche und Bitmapfilter der Maske.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:MaskType:CLIP"><apiName>CLIP</apiName><shortdesc>
      Die Maske zeigt die Pixel entweder an oder auch nicht.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>clip</apiData><apiType value="String"/></apiValueDef><apiDesc>
      Die Maske zeigt die Pixel entweder an oder auch nicht. Striche und Bitmapfilter werden nicht verwendet. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.core:MaskType:LUMINOSITY"><apiName>LUMINOSITY</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>luminosity</apiData><apiType value="String"/></apiValueDef><apiDesc>
      
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>