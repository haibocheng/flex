<?xml version="1.0"?>
<apiPackage id="spark.primitives"><apiName>spark.primitives</apiName><apiDetail/><apiClassifier id="spark.primitives:Graphic"><apiName>Graphic</apiName><shortdesc>
  Das Graphic-Steuerelement zeigt eine Reihe von Zeichnungsbefehlen für Grafiken an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="property" name="tabEnabled"/><Exclude kind="property" name="mouseFocusEnabled"/><Exclude kind="property" name="layout"/><Exclude kind="property" name="focusPane"/><Exclude kind="property" name="focusEnabled"/><Exclude kind="method" name="setFocus"/><DefaultProperty name="mxmlContent"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Graphic&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Graphic
    <b>Properties</b>
    version
    viewHeight
    viewWidth
    &nbsp;
  /&gt;
  </pre>
 
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef><apiDesc>
  Das Graphic-Steuerelement zeigt eine Reihe von Zeichnungsbefehlen für Grafiken an.
 
  <p>Bei der Graphic-Klasse handelt es sich um das Haupt-Tag für alle Grafikelemente. Dieses Tag ist das Haupt-Tag für jedes beliebige FXG-Dokument. Es kann nicht an einer anderen Stelle in einem FXG-Dokument verwendet werden.</p>
  
  <p>Sie fügen eine Reihe von Element-Tags wie &lt;Rect>, &lt;Path> und &lt;Ellipse> zum Elementearray der Grafik hinzu, um den Inhalt der Grafik zu definieren.</p>
 
  <p>Graphic-Steuerelemente verfügen weder über Hintergründe noch über Rahmen und können nicht den Fokus erhalten.</p>
  
  <p>Eine in einem Container platzierte Grafik wird anhand der Regeln des Containers platziert. Die Grafiken im Graphics-Steuerelement werden immer relativ zur linken oberen Ecke des Graphics-Steuerelements platziert und größenmäßig angepasst.</p>
  
  <p>Das Grafikelement kann optional ein &lt;Group>-Element enthalten.</p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.graphics.Group.xml"><linktext>mx.graphics.Group</linktext></link></related-links><apiConstructor id="spark.primitives:Graphic:Graphic"><apiName>Graphic</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Graphic:protected:measure"><apiName>measure</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Graphic:version"><apiName>version</apiName><shortdesc>
        Gibt die FXG-Version an, die für dieses Graphic-Tag vorgesehen ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1.0</apiData><apiType value="Number"/><apiDefaultValue>1.0
      
      </apiDefaultValue></apiValueDef><apiDesc>
        Gibt die FXG-Version an, die für dieses Graphic-Tag vorgesehen ist.  
     
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Graphic:viewHeight:get"><apiName>viewHeight</apiName><shortdesc>
      Definiert den vertikalen Abstand für die Grafik im Layout.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Definiert den vertikalen Abstand für die Grafik im Layout. Wenn Sie diesen Wert einstellen, wird der Inhalt nicht skaliert. Wenn Sie jedoch einen Wert für die <codeph>height</codeph>-Eigenschaft angeben, wird der Inhalt skaliert. 
      
      <p>Es gibt zwei Fälle, in denen dies nützlich sein kann: 1) Geben Sie eine <codeph>viewHeight</codeph> an, die größer als die natürliche Größe des Inhalts ist. In diesem Fall nimmt die Grafik mehr Platz ein als ihre visuelle Größe. 2) Geben Sie eine <codeph>viewHeight</codeph> an, die kleiner als die natürliche Größe des Inhalts ist. Dies können Sie tun, wenn Ihre Grafik über einen zusätzlichen Hintergrund oder einen Rahmen verfügt, der über die Kanten der Grafik reicht. Stellen Sie in diesem Szenario sicher, dass Sie die Beschneidung für Layout deaktivieren.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Graphic:viewWidth:get"><apiName>viewWidth</apiName><shortdesc>
      Definiert den horizontalen Abstand der Grafik im Layout.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Definiert den horizontalen Abstand der Grafik im Layout. Wenn Sie diesen Wert einstellen, wird der Inhalt nicht skaliert. Wenn Sie im Gegensatz dazu einen Wert für die <codeph>width</codeph>-Eigenschaft angeben, wird der Inhalt skaliert. 
      
      <p>Es gibt zwei Fälle, in denen dies nützlich sein kann: 1) Geben Sie eine <codeph>viewWidth</codeph> an, die größer als die natürliche Größe des Inhalts ist. In diesem Fall nimmt die Grafik mehr Platz ein als ihre visuelle Größe. 2) Geben Sie eine <codeph>viewWidth</codeph> an, die kleiner als die natürliche Größe des Inhalts ist. Dies können Sie tun, wenn Ihre Grafik über einen zusätzlichen Hintergrund oder einen Rahmen verfügt, der über die Kanten der Grafik reicht. Stellen Sie in diesem Szenario sicher, dass Sie die Beschneidung für Layout deaktivieren.</p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:VideoElement"><apiName>VideoElement</apiName><shortdesc>
  Bei der VideoElement-Klasse handelt es sich um einen Videoplayer ohne Hintergrund, der progressive Downloads, Multibitrate-Streaming und Streaming-Videos unterstützt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="source"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  Bei der VideoElement-Klasse handelt es sich um einen Videoplayer ohne Hintergrund, der progressive Downloads, Multibitrate-Streaming und Streaming-Videos unterstützt.
 
  <p><codeph>VideoPlayer</codeph> ist die skinfähige Version.</p>
   </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.components.VideoPlayer.xml"><linktext>mx.components.VideoPlayer</linktext></link></related-links><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.READY_ready"><apiName>ready</apiName><shortdesc>
  Wird ausgelöst, wenn das Video geladen ist und angezeigt werden kann.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.READY</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn das Video geladen ist und angezeigt werden kann.
   <p>Dieses Ereignis wird ausgelöst, wenn das VideoPlayer-Steuerelement nach dem Laden einer neuen FLV-Datei mithilfe der <codeph>play()</codeph>- oder <codeph>load()</codeph>-Methode zum ersten Mal in den interaktiven Status geschaltet wird. Es wird für jede geladene FLV-Datei einmal ausgelöst.</p>
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Gibt den Fortschritt als Anzahl der heruntergeladenen Byte an.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Gibt den Fortschritt als Anzahl der heruntergeladenen Byte an. Wird ausgelöst, beginnend beim Aufruf von „load“ und bis zu dem Zeitpunkt, wenn alle Byte geladen wurden oder ein Netzwerkfehler aufgetreten ist. Wird jede Viertelsekunde ausgelöst, beginnend beim Aufruf von „load“ und bis zu dem Zeitpunkt, wenn alle Byte geladen wurden oder ein Netzwerkfehler aufgetreten ist. Verwenden Sie dieses Ereignis, um die Anzahl der geladenen Byte oder der Byte im Puffer zu überprüfen. 
   <p>Das Ereignis wird nur für progressive Downloads über HTTP ausgelöst. Es zeigt den Fortschritt als Anzahl der heruntergeladenen Byte an. Das event-Objekt verfügt über die Eigenschaften <codeph>bytesLoaded</codeph> und <codeph>bytesTotal</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><shortdesc>
  Wird jede Viertelsekunde ausgelöst, während das Video abgespielt wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird jede Viertelsekunde ausgelöst, während das Video abgespielt wird. Das Ereignis wird nicht ausgelöst, wenn das Video angehalten oder beendet wurde, es sei denn, es wird eine Suche ausgeführt.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><shortdesc>
  Wird ausgelöst, wenn die Metadaten der FLV-Datei zum ersten Mal erreicht werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn die Metadaten der FLV-Datei zum ersten Mal erreicht werden. Das Ereignisobjekt verfügt über die Eigenschaft <codeph>info</codeph>, die das info-Objekt enthält, das vom Rückruf des Ereignisses <codeph>NetStream.onMetaData</codeph> empfangen wurde.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
 Wird ausgelöst, wenn der Abspielvorgang abgeschlossen ist, weil der Player das Ende der FLV-Datei erreicht hat.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.COMPLETE</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Wird ausgelöst, wenn der Abspielvorgang abgeschlossen ist, weil der Player das Ende der FLV-Datei erreicht hat. Die Komponente löst dieses Ereignis nicht aus, wenn Sie die Methode <codeph>stop()</codeph> oder <codeph>pause()</codeph> aufrufen oder auf das entsprechende Steuerelement klicken. 
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Wird ausgelöst, wenn NetConnection beendet wird. Das Schließen kann durch Überschreiten des Zeitlimits, durch Aufrufen der close()-Methode oder durch das Laden eines neuen Videostreams erfolgt sein.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.CLOSE</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Wird ausgelöst, wenn <codeph>NetConnection</codeph> beendet wird. Das Schließen kann durch Überschreiten des Zeitlimits, durch Aufrufen der <codeph>close()</codeph>-Methode oder durch das Laden eines neuen Videostreams erfolgt sein. Dieses Ereignis wird nur mit RTMP-Streams und niemals mit HTTP-Streams ausgelöst.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.primitives:VideoElement:VideoElement"><apiName>VideoElement</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor.
       
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:VideoElement:pause"><apiName>pause</apiName><shortdesc>
      Hält die Wiedergabe an, ohne den Playhead zu verschieben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Hält die Wiedergabe an, ohne den Playhead zu verschieben. Wurde die Wiedergabe bereits angehalten oder beendet, hat diese Methode keine Wirkung.  
           <p>Um die Wiedergabe erneut zu starten, rufen Sie die <codeph>play()</codeph>-Methode auf.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:VideoElement:play"><apiName>play</apiName><shortdesc>
      Löst das Abspielen des Videos aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Löst das Abspielen des Videos aus. Kann aufgerufen werden, während das Video angehalten oder beendet wurde oder während es bereits abgespielt wird.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:VideoElement:seek"><apiName>seek</apiName><shortdesc>
      Führt einen Suchlauf bis zur angegebenen Sekunde in einem Video aus.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>time</apiItemName><apiType value="Number"/><apiDesc>seconds
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Führt einen Suchlauf bis zur angegebenen Sekunde in einem Video aus. Wird das Video gerade abgespielt, wird die Wiedergabe von diesem Punkt an fortgesetzt. Ist das Video angehalten, wird der Suchlauf bis zu diesem Punkt durchgeführt und bleibt das Video angehalten. Ist das Video beendet, wird der Suchlauf bis zu diesem Punkt durchgeführt und das Video dann angehalten. Hat keine Auswirkungen bei Live-Streams.
           <p>Wenn der Wert für „time“ kleiner 0 oder gleich NaN ist, wird ein Ausnahmefehler ausgegeben. Wenn der Wert für „time“ nach dem Ende des Steams oder des bereits heruntergeladenen Teils der Datei liegt, wird der Suchlauf dennoch ausgeführt und bei einem Fehler eine Wiederherstellung durchgeführt.</p>
     
      <p>Die Eigenschaft <codeph>playheadTime</codeph> hat u. U. nicht sofort nach dem Aufrufen einer der Suchmethoden oder dem Festlegen von <codeph>playheadTime</codeph> zum Auslösen eines Suchlaufs den erwarteten Wert. Bei einem progressiven Download können Sie nur nach einem Schlüsselbild suchen; deshalb bringt ein Suchlauf Sie zu der Zeit des ersten Schlüsselbilds nach der angegebenen Zeit.</p>
      
      <p><b>Hinweis</b>: Beim Streaming führt eine Suche immer zu der exakt angegebenen Zeit, selbst wenn die FLV-Quelldatei an dieser Stelle über kein Schlüsselbild verfügt.</p>
           <p>Die Suche ist asynchron, sodass beim Aufrufen einer Suchmethode oder beim Festlegen der Eigenschaft <codeph>playheadTime</codeph> der Wert von <codeph>playheadTime</codeph> nicht sofort aktualisiert wird. Um die Zeit nach dem Abschluss der Suche abzurufen, warten Sie auf das Ereignis <codeph>seek</codeph>, welches erst ausgelöst wird, wenn die Eigenschaft <codeph>playheadTime</codeph> aktualisiert wurde.</p>
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:VideoElement:stop"><apiName>stop</apiName><shortdesc>
      Beendet die Videowiedergabe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Beendet die Videowiedergabe. Wenn <codeph>autoRewind</codeph> auf <codeph>true</codeph> eingestellt ist, wird zum ersten Bild zurückgespult. Wenn das Video bereits beendet ist, hat dies keine Auswirkungen. Um die Wiedergabe erneut zu starten, rufen Sie <codeph>play()</codeph> auf. 
           </apiDesc></apiOperationDetail><related-links><link href="spark.primitives.xml#VideoElement/autoRewind"><linktext>autoRewind</linktext></link><link href="spark.primitives.xml#VideoElement/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiValue id="spark.primitives:VideoElement:autoPlay:get"><apiName>autoPlay</apiName><shortdesc>
      Legt fest, ob die Wiedergabe des Videos sofort nach Festlegen der source-Eigenschaft gestartet werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob die Wiedergabe des Videos sofort nach Festlegen der <codeph>source</codeph>-Eigenschaft gestartet werden soll. Ist der Wert <codeph>true</codeph>, wird die Videodatei sofort in den Puffer geladen und die Wiedergabe beginnt.
           <p>Auch wenn für <codeph>autoPlay</codeph> <codeph>false</codeph> festgelegt wird, beginnt Flex nach dem Aufruf der <codeph>initialize()</codeph>-Methode mit dem Laden des Videos. Für Flash Media Server bedeutet dies, dass der Stream erstellt und das erste Bild für die Anzeige geladen wird. Bei HTTP-Downloads beginnt Flex mit dem Herunterladen des Stream und zeigt das erste Bild an.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:autoRewind:get"><apiName>autoRewind</apiName><shortdesc>
      Bestimmt, ob die FLV-Datei beim Beenden der Wiedergabe zum ersten Bild zurückgespult wird. Die Wiedergabe kann durch Aufrufen der stop()-Methode oder durch Erreichen des Streamendes beendet werden.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Bestimmt, ob die FLV-Datei beim Beenden der Wiedergabe zum ersten Bild zurückgespult wird. Die Wiedergabe kann durch Aufrufen der <codeph>stop()</codeph>-Methode oder durch Erreichen des Streamendes beendet werden.
           <p>Diese Eigenschaft hat keine Wirkung für Live-Streaming-Video.</p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:loop:get"><apiName>loop</apiName><shortdesc>
      Gibt an, ob die Mediendatei nach Beenden der Wiedergabe erneut wiedergegeben werden soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gibt an, ob die Mediendatei nach Beenden der Wiedergabe erneut wiedergegeben werden soll. Die <codeph>loop</codeph>-Eigenschaft hat Vorrang vor der <codeph>autoRewind</codeph>-Eigenschaft; wenn also „loop“ auf <codeph>true</codeph> gesetzt ist, wird die <codeph>autoRewind</codeph>-Eigenschaft ignoriert. 
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      Legt fest, ob das Steuerelement beim Ändern der Größe des Videos das ursprüngliche Seitenverhältnis beibehalten soll.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Legt fest, ob das Steuerelement beim Ändern der Größe des Videos das ursprüngliche Seitenverhältnis beibehalten soll.
     
      <p>Wenn keine Breite, Höhe oder Beschränkungen für das VideoElement angegeben sind, hat diese Eigenschaft keine Auswirkungen.</p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:muted:get"><apiName>muted</apiName><shortdesc>
      Auf „true“ einstellen, um das Video stummzuschalten, und auf „false“ einstellen, um die Stummschaltung aufzuheben.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Auf <codeph>true</codeph> einstellen, um das Video stummzuschalten, und auf <codeph>false</codeph> einstellen, um die Stummschaltung aufzuheben.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:playWhenHidden:get"><apiName>playWhenHidden</apiName><shortdesc>
      Steuert, ob das Video weiterhin wiedergegeben wird, wenn es ausgeblendet ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Steuert, ob das Video weiterhin wiedergegeben wird, wenn es ausgeblendet ist. Das Video ist ausgeblendet, wenn <codeph>visible</codeph> auf <codeph>false</codeph> gesetzt ist oder das Video von der Anzeigeliste entfernt wird. Wenn die Einstellung <codeph>false</codeph> lautet, wird die Wiedergabe angehalten, bis das Video wieder sichtbar ist. Lautet die Einstellung <codeph>true</codeph>, wird das Video weiterhin abgespielt, wenn es ausgeblendet ist. Der Standardwert ist <codeph>false</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      Playhead-Position in Sekunden vom Start der Videowiedergabe.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Playhead-Position in Sekunden vom Start der Videowiedergabe. Die Ereignisobjekte für viele VideoPlay-Ereignisse enthalten die Playhead-Position, damit die Position in der Videodatei, an der das Ereignis eingetreten ist, ermittelt werden kann.
     
      <p>Wenn Sie für diese Eigenschaft einen Wert in Sekunden angeben, wird ein Suchvorgang ausgeführt. Wird das Video gerade abgespielt, wird die Wiedergabe von der neuen Playhead-Position an fortgesetzt. Ist das Video angehalten, springt es zur neuen Playhead-Position und bleibt angehalten. Wurde die Wiedergabe des Videos beendet, springt es zur neuen Playhead-Position und wird dort angehalten. Bei Video-Livestreams hat diese Eigenschaft keine Wirkung.</p>
           <p>Hat die neue Playhead-Position einen Wert kleiner 0 oder NaN, gibt das Steuerelement einen Ausnahmefehler aus. Liegt die neue Playhead-Position nach dem Ende des Videos oder des bereits heruntergeladenen Teils der der Videodatei, führt das Steuerelement die Suche dennoch durch.</p>
           <p>Bei FLV-Dateien bewirkt die <codeph>playheadTime</codeph>-Eigenschaft, dass das Video zu dem Schlüsselbild springt, das der angegebenen Position am nächsten liegt, sofern bei der Kodierung in der FLV-Datei Schlüsselbilder festgelegt wurden. Wenn für die gewünschte Position während der Kodierung kein Schlüsselbild angegeben wurde, führt die Suche daher nicht unbedingt genau an diese Position.</p>
           <p>Diese Eigenschaft gibt einen Ausnahmefehler aus, wenn sie eingestellt wird, ohne dass ein Stream verbunden ist. Bestimmen Sie mithilfe des <codeph>stateChange</codeph>-Ereignisses und der <codeph>connected</codeph>-Eigenschaft, wann es sicher ist, diese Eigenschaft festzulegen.</p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:playing:get"><apiName>playing</apiName><shortdesc>
      Gibt „true“ zurück, wenn das Video abgespielt bzw. versucht wird, es abzuspielen.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Gibt „true“ zurück, wenn das Video abgespielt bzw. versucht wird, es abzuspielen.
      
      <p>Das Video wird möglicherweise derzeit nicht abgespielt, da ein Suchlauf ausgeführt oder es gepuffert wird, aber es wird versucht, das Video abzuspielen.</p> 
           </apiDesc></apiValueDetail><related-links><link href="spark.primitives.xml#VideoElement/play()"><linktext>play()</linktext></link><link href="spark.primitives.xml#VideoElement/pause()"><linktext>pause()</linktext></link><link href="spark.primitives.xml#VideoElement/stop()"><linktext>stop()</linktext></link><link href="spark.primitives.xml#VideoElement/autoPlay"><linktext>autoPlay</linktext></link></related-links></apiValue><apiValue id="spark.primitives:VideoElement:source:get"><apiName>source</apiName><shortdesc>
      Für einen progressiven Download ist die Quelle nur ein Pfad oder eine URL, die auf die abzuspielende Videodatei verweist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Für einen progressiven Download ist die Quelle nur ein Pfad oder eine URL, die auf die abzuspielende Videodatei verweist. Für Streaming (Streaming, Live-Streaming oder Multibitrate-Streaming) ist die source-Eigenschaft ein StreamingVideoSource-Objekt.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:totalTime:get"><apiName>totalTime</apiName><shortdesc>
      Gesamtzeit für den Videofeed.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Gesamtzeit für den Videofeed. -1 bedeutet, dass die Eigenschaft nicht an <codeph>play()</codeph>-übergeben wurde oder die Gesamtzeit noch nicht automatisch erkannt werden konnte bzw. wurde.
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:videoObject:get"><apiName>videoObject</apiName><shortdesc>
      Das zugrunde liegende flash.media.Video-Objekt des Flash Players.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.media:Video"/></apiValueDef><apiDesc>
      Das zugrunde liegende flash.media.Video-Objekt des Flash Players.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:volume:get"><apiName>volume</apiName><shortdesc>
      Die Lautstärke als Wert zwischen 0 und 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Die Lautstärke als Wert zwischen 0 und 1.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:enabled:set"><apiName>enabled</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:Rect"><apiName>Rect</apiName><shortdesc>
  Die Rect-Klasse ist ein gefülltes Grafikelement, das ein Rechteck zeichnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata><asCustoms><includeExamples>examples/RectExample.mxml
  
  
  </includeExamples></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:FilledElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die Rect-Klasse ist ein gefülltes Grafikelement, das ein Rechteck zeichnet. Die Ecken des Rechtecks können abgerundet werden. Die <codeph>drawElementent()</codeph>-Methode ruft die Methoden <codeph>Graphics.drawRect()</codeph> und <codeph>Graphics.drawRoundRect()</codeph> auf.
  
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links><apiConstructor id="spark.primitives:Rect:Rect"><apiName>Rect</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Rect:protected:draw"><apiName>draw</apiName><shortdesc>
      
      Zeichnen Sie das Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
      
      Zeichnen Sie das Element. Dies ist der zweite der drei Schritte, die während des Zeichnungsprozesses ausgeführt werden. Überschreiben Sie diese Methode, um Ihre Zeichnung zu implementieren. Der Strich (und ggf. die Füllung) wurden mit der <codeph>beginDraw()</codeph>-Methode eingestellt. Ihre Überschreibung sollte nur Aufrufe von Zeichnungsmethoden wie <codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> und <codeph>drawRect()</codeph> enthalten.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Rect:getBoundsXAtSize"><apiName>getBoundsXAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Rect:getBoundsYAtSize"><apiName>getBoundsYAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Rect:bottomLeftRadiusX:get"><apiName>bottomLeftRadiusX</apiName><shortdesc>
      Der x-Radius der linken unteren Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der x-Radius der linken unteren Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:bottomLeftRadiusY:get"><apiName>bottomLeftRadiusY</apiName><shortdesc>
      Der y-Radius der linken unteren Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Der y-Radius der linken unteren Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:bottomRightRadiusX:get"><apiName>bottomRightRadiusX</apiName><shortdesc>
      Der x-Radius der rechten unteren Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der x-Radius der rechten unteren Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:bottomRightRadiusY:get"><apiName>bottomRightRadiusY</apiName><shortdesc>
      Der y-Radius der rechten unteren Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Der y-Radius der rechten unteren Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:radiusX:get"><apiName>radiusX</apiName><shortdesc>
      Der standardmäßige Eckenradius für die x-Achse bei allen Ecken.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der standardmäßige Eckenradius für die x-Achse bei allen Ecken. Die Eigenschaften <codeph>topLeftRadiusX</codeph>, <codeph>topRightRadiusX</codeph>, <codeph>bottomLeftRadiusX</codeph> und <codeph>bottomRightRadiusX</codeph> haben Vorrang vor diesen Eigenschaften.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:radiusY:get"><apiName>radiusY</apiName><shortdesc>
      Der standardmäßige Eckenradius für die y-Achse bei allen Ecken.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Der standardmäßige Eckenradius für die y-Achse bei allen Ecken. Die Eigenschaften <codeph>topLeftRadiusY</codeph>, <codeph>topRightRadiusY</codeph>, <codeph>bottomLeftRadiusY</codeph> und <codeph>bottomRightRadiusY</codeph> haben Vorrang vor diesen Eigenschaften.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topLeftRadiusX:get"><apiName>topLeftRadiusX</apiName><shortdesc>
      Der x-Radius der linken oberen Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der x-Radius der linken oberen Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topLeftRadiusY:get"><apiName>topLeftRadiusY</apiName><shortdesc>
      Der y-Radius der linken oberen Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Der y-Radius der linken oberen Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topRightRadiusX:get"><apiName>topRightRadiusX</apiName><shortdesc>
      Der x-Radius der rechten oberen Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der x-Radius der rechten oberen Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topRightRadiusY:get"><apiName>topRightRadiusY</apiName><shortdesc>
      Der y-Radius der rechten oberen Ecke des Rechtecks.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Der y-Radius der rechten oberen Ecke des Rechtecks.
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:RectangularDropShadow"><apiName>RectangularDropShadow</apiName><shortdesc>
      Diese Klasse optimiert Schlagschatten für den allgemeinen Fall.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
      <p>Diese Klasse optimiert Schlagschatten für den allgemeinen Fall. Wenn Sie einen Schlagschatten auf ein rechteckiges Objekt anwenden, dessen Kanten Pixelbegrenzungen entsprechen, sollten Sie diese Klasse der direkten Verwendung eines DropShadowFilter vorziehen.</p>
     
      <p>Diese Klasse akzeptiert die ersten vier Parameter, die an DropShadowFilter übergeben werden: <codeph>alpha</codeph>, <codeph>angle</codeph>, <codeph>color</codeph> und <codeph>distance</codeph>. Außerdem akzeptiert diese Klasse die Eckradien für die vier Ecken des rechteckigen Objekts, das einen Schatten wirft.</p>
     
      <p>Sobald diese acht Werte festgelegt sind, führt diese Klasse eine Vorabberechnung des Schlagschattens in einem Bitmap außerhalb des Bildschirms durch. Beim Aufruf der <codeph>drawShadow()</codeph>-Methode werden Teile des vorab berechneten Schlagschattens auf das übergebene Graphics-Objekt kopiert.</p>
      
      </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.filters.DropShadowFilter.xml"><linktext>flash.filters.DropShadowFilter</linktext></link><link href="" invalidHref="flash.display.DisplayObject.xml"><linktext>flash.display.DisplayObject</linktext></link></related-links><apiConstructor id="spark.primitives:RectangularDropShadow:RectangularDropShadow"><apiName>RectangularDropShadow</apiName><shortdesc>
          Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="4.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
          Konstruktor.
          
          </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.primitives:RectangularDropShadow:alpha:get"><apiName>alpha</apiName><shortdesc conref="flash.filters.DropShadowFilter#alpha">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#alpha">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:angle:get"><apiName>angle</apiName><shortdesc conref="flash.filters.DropShadowFilter#angle">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#angle">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:blRadius:get"><apiName>blRadius</apiName><shortdesc>
          Der Eckradius der linken unteren Ecke des abgerundeten Rechtecks, das den Schatten wirft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Der Eckradius der linken unteren Ecke des abgerundeten Rechtecks, das den Schatten wirft. Kann null für nicht abgerundete Rechtecke sein.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:blurX:get"><apiName>blurX</apiName><shortdesc>
          Der Grad der horizontalen Weichzeichnung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>4
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Der Grad der horizontalen Weichzeichnung.
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:blurY:get"><apiName>blurY</apiName><shortdesc>
          Der Grad der vertikalen Weichzeichnung.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>4
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Der Grad der vertikalen Weichzeichnung.
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:brRadius:get"><apiName>brRadius</apiName><shortdesc>
          Der Eckradius der rechten unteren Ecke des abgerundeten Rechtecks, das den Schatten wirft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Der Eckradius der rechten unteren Ecke des abgerundeten Rechtecks, das den Schatten wirft. Kann null für nicht abgerundete Rechtecke sein.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:color:get"><apiName>color</apiName><shortdesc conref="flash.filters.DropShadowFilter#color">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#color">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:distance:get"><apiName>distance</apiName><shortdesc conref="flash.filters.DropShadowFilter#distance">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#distance">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:tlRadius:get"><apiName>tlRadius</apiName><shortdesc>
          Der Eckradius der linken oberen Ecke des abgerundeten Rechtecks, das den Schatten wirft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Der Eckradius der linken oberen Ecke des abgerundeten Rechtecks, das den Schatten wirft. Kann null für nicht abgerundete Rechtecke sein.
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:trRadius:get"><apiName>trRadius</apiName><shortdesc>
          Der Eckradius der rechten oberen Ecke des abgerundeten Rechtecks, das den Schatten wirft.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Der Eckradius der rechten oberen Ecke des abgerundeten Rechtecks, das den Schatten wirft. Kann null für nicht abgerundete Rechtecke sein.
          
          </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:Line"><apiName>Line</apiName><shortdesc>
  Die Line-Klasse ist ein Grafikelement, das eine Linie zwischen zwei Punkten zeichnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:StrokedElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die Line-Klasse ist ein Grafikelement, das eine Linie zwischen zwei Punkten zeichnet.
  
  <p>Der Standardstrich für eine Linie ist nicht definiert; deshalb ist die Linie unsichtbar, wenn Sie keinen Strich angeben.</p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.graphics.Stroke.xml"><linktext>mx.graphics.Stroke</linktext></link></related-links><apiConstructor id="spark.primitives:Line:Line"><apiName>Line</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Line:protected:canSkipMeasurement"><apiName>canSkipMeasurement</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Line:protected:draw"><apiName>draw</apiName><shortdesc>
     
      Zeichnen Sie das Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
     
      Zeichnen Sie das Element. Dies ist der zweite der drei Schritte, die während des Zeichnungsprozesses ausgeführt werden. Überschreiben Sie diese Methode, um Ihre Zeichnung zu implementieren. Der Strich (und ggf. die Füllung) wurden mit der <codeph>beginDraw()</codeph>-Methode eingestellt. Ihre Überschreibung sollte nur Aufrufe von Zeichnungsmethoden wie <codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> und <codeph>drawRect()</codeph> enthalten.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Line:protected:measure"><apiName>measure</apiName><shortdesc>
      
      Berechnet die Standardgröße des Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Berechnet die Standardgröße des Elements. Dies ist eine erweiterte Methode, die Sie bei der Erstellung einer Unterklasse für ein GraphicElement überschreiben können.
     
      <p>Sie können diese Methode nicht direkt aufrufen. Flex ruft die <codeph>measure()</codeph>-Methode auf, wenn das Element mit der <codeph>addElement()</codeph>-Methode zu einer Gruppe hinzugefügt wird und wenn die <codeph>invalidateSize()</codeph>-Methode des Elements aufgerufen wird. </p>
     
      <p>Wenn Sie eine spezifische Höhe und Breite eines Elements festlegen, ruft Flex standardmäßig die <codeph>measure()</codeph>-Methode nicht auf, auch wenn Sie die <codeph>invalidateSize()</codeph>-Methode explizit aufrufen. Um dieses Standardverhalten zu überschreiben, überschreiben Sie die <codeph>skipMeasure()</codeph>-Methode.</p>
     
      <p>Für die Überschreibung dieser Methode müssen Sie die Eigenschaften <codeph>measuredWidth</codeph> und <codeph>measuredHeight</codeph> festlegen, um die Standardgröße zu definieren. Sie können optional die Eigenschaften <codeph>measuredX</codeph> und <codeph>measuredY</codeph> einstellen, um die standardmäßig gemessenen Grenzen der linken oberen Ecke relativ zum Ursprung des Elements zu definieren.</p>
     
      <p><codeph>measure()</codeph> wurde dazu konzipiert, dass das Element die eigenen natürlichen oder inhärenten Werte als Standard bereitstellt. Daher sollten die Eigenschaften <codeph>measuredWidth</codeph> und <codeph>measuredHeight</codeph> von Faktoren wie den folgenden bestimmt werden:</p>
      <ul>
         <li>Textmenge, die von der Komponente angezeigt werden muss.</li>
         <li>Die Größe eines JPEG-Bilds, das von der Komponente angezeigt wird.</li>
      </ul>
     
      <p>In einigen Fällen gibt es keine natürliche Art zur Bestimmung der Standardwerte. Beispielsweise kann ein einfaches GreenCircle-Element in der <codeph>measure()</codeph>-Methode für measuredWidth = 100 und measuredHeight = 100 festlegen, um eine angemessene Standardgröße anzugeben. In anderen Fällen, wie beispielsweise bei einem Textbereich, kann eine entsprechende Berechnung (wie die Suche nach der richtigen Breite und Höhe zur Anzeige des gesamten Texts im Seitenverhältnis eines Goldenen Rechtecks) zu zeitaufwendig sein.</p>
     
      <p>Die Standardimplementierung von <codeph>measure()</codeph> setzt die Werte für die Eigenschaften <codeph>measuredWidth</codeph>, <codeph>measuredHeight</codeph>, <codeph>measuredX</codeph> und <codeph>measuredY</codeph> auf <codeph>0</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Line:xFrom:get"><apiName>xFrom</apiName><shortdesc>
     Die x-Startposition für die Linie</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Die x-Startposition für die Linie
    
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Line:xTo:get"><apiName>xTo</apiName><shortdesc>
     Die x-Endposition für die Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Die x-Endposition für die Linie.
    
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Line:yFrom:get"><apiName>yFrom</apiName><shortdesc>
     Die y-Startposition für die Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Die y-Startposition für die Linie.
    
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Line:yTo:get"><apiName>yTo</apiName><shortdesc>
     Die y-Endposition für die Linie.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Die y-Endposition für die Linie.
    
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:BitmapImage"><apiName>BitmapImage</apiName><shortdesc>
  Ein BitmapImage-Element definiert einen rechteckigen Bereich im Koordinatenraum des übergeordneten Elements, der mit Bitmap-Daten aus einer Quelldatei gefüllt ist.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:GraphicElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Ein BitmapImage-Element definiert einen rechteckigen Bereich im Koordinatenraum des übergeordneten Elements, der mit Bitmap-Daten aus einer Quelldatei gefüllt ist.
  
  </apiDesc><example conref="BitmapImageExample.mxml"><swfblock conref="examples/BitmapImageExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.primitives:BitmapImage:BitmapImage"><apiName>BitmapImage</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:BitmapImage:protected:measure"><apiName>measure</apiName><shortdesc>
      
      Berechnet die Standardgröße des Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Berechnet die Standardgröße des Elements. Dies ist eine erweiterte Methode, die Sie bei der Erstellung einer Unterklasse für ein GraphicElement überschreiben können.
     
      <p>Sie können diese Methode nicht direkt aufrufen. Flex ruft die <codeph>measure()</codeph>-Methode auf, wenn das Element mit der <codeph>addElement()</codeph>-Methode zu einer Gruppe hinzugefügt wird und wenn die <codeph>invalidateSize()</codeph>-Methode des Elements aufgerufen wird. </p>
     
      <p>Wenn Sie eine spezifische Höhe und Breite eines Elements festlegen, ruft Flex standardmäßig die <codeph>measure()</codeph>-Methode nicht auf, auch wenn Sie die <codeph>invalidateSize()</codeph>-Methode explizit aufrufen. Um dieses Standardverhalten zu überschreiben, überschreiben Sie die <codeph>skipMeasure()</codeph>-Methode.</p>
     
      <p>Für die Überschreibung dieser Methode müssen Sie die Eigenschaften <codeph>measuredWidth</codeph> und <codeph>measuredHeight</codeph> festlegen, um die Standardgröße zu definieren. Sie können optional die Eigenschaften <codeph>measuredX</codeph> und <codeph>measuredY</codeph> einstellen, um die standardmäßig gemessenen Grenzen der linken oberen Ecke relativ zum Ursprung des Elements zu definieren.</p>
     
      <p><codeph>measure()</codeph> wurde dazu konzipiert, dass das Element die eigenen natürlichen oder inhärenten Werte als Standard bereitstellt. Daher sollten die Eigenschaften <codeph>measuredWidth</codeph> und <codeph>measuredHeight</codeph> von Faktoren wie den folgenden bestimmt werden:</p>
      <ul>
         <li>Textmenge, die von der Komponente angezeigt werden muss.</li>
         <li>Die Größe eines JPEG-Bilds, das von der Komponente angezeigt wird.</li>
      </ul>
     
      <p>In einigen Fällen gibt es keine natürliche Art zur Bestimmung der Standardwerte. Beispielsweise kann ein einfaches GreenCircle-Element in der <codeph>measure()</codeph>-Methode für measuredWidth = 100 und measuredHeight = 100 festlegen, um eine angemessene Standardgröße anzugeben. In anderen Fällen, wie beispielsweise bei einem Textbereich, kann eine entsprechende Berechnung (wie die Suche nach der richtigen Breite und Höhe zur Anzeige des gesamten Texts im Seitenverhältnis eines Goldenen Rechtecks) zu zeitaufwendig sein.</p>
     
      <p>Die Standardimplementierung von <codeph>measure()</codeph> setzt die Werte für die Eigenschaften <codeph>measuredWidth</codeph>, <codeph>measuredHeight</codeph>, <codeph>measuredX</codeph> und <codeph>measuredY</codeph> auf <codeph>0</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:BitmapImage:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      
      Zeichnet das Element und/oder die Größen und Positionen seines Inhalts.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Legt die Breite der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleX</codeph>-Eigenschaft der Komponente.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Legt die Höhe der Komponente in Pixeln und deren Koordinaten fest, unabhängig vom Wert der <codeph>scaleY</codeph>-Eigenschaft der Komponente.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Zeichnet das Element und/oder die Größen und Positionen seines Inhalts. Dies ist eine erweiterte Methode, die Sie bei der Erstellung einer Unterklasse für ein GraphicElement überschreiben können.
     
      <p>Sie können diese Methode nicht direkt aufrufen. Flex ruft die <codeph>updateDisplayList()</codeph>-Methode auf, wenn die Komponente mit der <codeph>addElement()</codeph>-Methode zu einer Gruppe hinzugefügt wird und wenn die <codeph>invalidateDisplayList()</codeph>-Methode des Elements aufgerufen wird. </p>
     
      <p>Dies ist die Methode, mit der Sie programmgesteuert zeichnen können, indem Sie Methoden wie <codeph>graphics.drawRect()</codeph> für das displayObject des Elements verwenden.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:BitmapImage:fillMode:get"><apiName>fillMode</apiName><shortdesc>
      Der fillMode bestimmt, wie die Bitmap die Abmessungen ausfüllt.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>&lt;code>BitmapFillMode.SCALE&lt;/code>
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Der fillMode bestimmt, wie die Bitmap die Abmessungen ausfüllt. Wenn Sie den Wert dieser Eigenschaft in einem Tag festlegen, verwenden Sie den String (z. B. „repeat“). Wenn Sie den Wert dieser Eigenschaft in ActionScript einstellen, verwenden Sie die Konstante (z. B. <codeph>BitmapFillMode.CLIP</codeph>). Bei Einstellung auf <codeph>BitmapFillMode.CLIP</codeph> („clip“) endet die Bitmap an der Kante des Bereichs. Wenn <codeph>BitmapFillMode.REPEAT</codeph> („repeat“) festgelegt ist, wird die Bitmap wiederholt, sodass der gesamte Bereich ausgefüllt wird. Wenn <codeph>BitmapFillMode.SCALE</codeph> („scale“) festgelegt ist, wird die Bitmap so gestreckt, dass sie den gesamten Bereich ausfüllt.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:BitmapImage:source:get"><apiName>source</apiName><shortdesc>
      Die Quelle, die für die Bitmap-Füllung verwendet wird.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Die Quelle, die für die Bitmap-Füllung verwendet wird. Die Füllung kann aus zahlreichen grafischen Quellen einschließlich der folgenden gerendert werden: 
      <ul>
       <li>Eine Bitmap- oder BitmapData-Instanz.</li>
       <li>Eine Klasse, die eine Unterklasse von DisplayObject darstellt. Die BitmapFill instanziiert die Klasse und erstellt auf deren Grundlage eine Bitmapdarstellung.</li>
       <li>Eine Instanz eines DisplayObject. Die BitmapFill kopiert das Objekt in eine Bitmap für die Füllung.</li>
      </ul>
      
      <p>Wenn Sie eine Bilddatei als Quelle verwenden, kann diese den Typ PNG, GIF oder JPG aufweisen.</p>
      
      <p>Um ein Bild als Quelle anzugeben, müssen Sie die @Embed-Direktive verwenden, wie das folgende Beispiel zeigt:
      <pre>
      source="@Embed('&lt;i>image_location&lt;/i>')"
      </pre>
      </p>
      
      <p>Der Speicherort des Bildes kann entweder über eine URL oder einen Dateiverweis angegeben werden. Wenn es sich dabei um eine Dateireferenz handelt, ist deren Position relativ zum Speicherort der Datei, die kompiliert wird.</p>
     
      <p> Wenn die BitmapData-Instanz von BitmapImage erstellt wurde, entfernt dieses BitmapData, sobald sich die Quelle geändert hat.</p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.Bitmap.xml"><linktext>flash.display.Bitmap</linktext></link><link href="" invalidHref="flash.display.BitmapData.xml"><linktext>flash.display.BitmapData</linktext></link><link href="" invalidHref="mx.graphics.BitmapFill.xml"><linktext>mx.graphics.BitmapFill</linktext></link></related-links></apiValue><apiValue id="spark.primitives:BitmapImage:smooth:set"><apiName>smooth</apiName><shortdesc conref="flash.display.GraphicsBitmapFill#smooth">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc conref="flash.display.GraphicsBitmapFill#smooth">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:Path"><apiName>Path</apiName><shortdesc>
  Die Path-Klasse ist ein gefülltes Grafikelement, das eine Reihe von Pfadsegmenten zeichnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:FilledElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die Path-Klasse ist ein gefülltes Grafikelement, das eine Reihe von Pfadsegmenten zeichnet. In Vektorgrafiken entspricht ein Pfad einer Reihe von Punkten, die durch gerade oder gekrümmte Liniensegmente verbunden sind. Zusammen bilden die Linien ein Bild. In Flex verwenden Sie die Path-Klasse, um eine komplexe Vektorform zu definieren, die aus einer Reihe von Liniensegmenten erstellt wurde. 
 
  <p>Normalerweise entspricht das erste Element einer Pfaddefinition einem Move-Segment, wodurch die Startposition des Stifts für die Grafik angegeben wird. Zum Zeichnen der Grafiklinien können Sie die Line-, CubicBezier- und QuadraticBezier-Segmente verwenden. Bei der Verwendung dieser Klassen geben Sie nur die x- und y-Koordinaten des Endpunkts der Linie an; die x- und y-Koordinaten des Anfangspunkts werden durch die aktuelle Stiftposition definiert.</p>
  
  <p>Nachdem Sie ein Liniensegment gezeichnet haben, wird die aktuelle Stiftposition zu den x- und y-Koordinaten des Endpunkts der Linie. Sie können mehrere Move-Segmente in der Pfaddefinition verwenden, um den Stift neu zu platzieren.</p>
  
  <p>Die Syntax, die von der Path-Klasse zum Definieren der Form verwendet wird, entspricht der SVG-Pfadsyntax, wodurch SVG-Pfade problemlos in Flex-Pfade konvertiert werden können.</p>
  
  </apiDesc><example conref="ArrowExample.mxml"><swfblock conref="examples/ArrowExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.primitives:Path:Path"><apiName>Path</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Path:protected:draw"><apiName>draw</apiName><shortdesc>
     
      Zeichnen Sie das Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
     
      Zeichnen Sie das Element. Dies ist der zweite der drei Schritte, die während des Zeichnungsprozesses ausgeführt werden. Überschreiben Sie diese Methode, um Ihre Zeichnung zu implementieren. Der Strich (und ggf. die Füllung) wurden mit der <codeph>beginDraw()</codeph>-Methode eingestellt. Ihre Überschreibung sollte nur Aufrufe von Zeichnungsmethoden wie <codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> und <codeph>drawRect()</codeph> enthalten.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:protected:endDraw"><apiName>endDraw</apiName><shortdesc>
     
      
      Schließen Sie die Zeichnung für dieses Element ab.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Das Grafikelement zum Abschließen der Zeichnung.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
      
      Schließen Sie die Zeichnung für dieses Element ab. Dies ist der letzte der drei Schritte, die während des Zeichnungsprozesses ausgeführt werden. In diesem Schritt werden Füllungen eingeschlossen.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:getBoundsXAtSize"><apiName>getBoundsXAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:getBoundsYAtSize"><apiName>getBoundsYAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:protected:invalidateDisplayObjectSharing"><apiName>invalidateDisplayObjectSharing</apiName><shortdesc>
      
      Dienstprogrammmethode, die den Host benachrichtigt, dass dieses Element geändert wurde und dessen Ebene aktualisiert werden muss.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Dienstprogrammmethode, die den Host benachrichtigt, dass dieses Element geändert wurde und dessen Ebene aktualisiert werden muss.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:protected:measure"><apiName>measure</apiName><shortdesc>
      
      Berechnet die Standardgröße des Elements.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Berechnet die Standardgröße des Elements. Dies ist eine erweiterte Methode, die Sie bei der Erstellung einer Unterklasse für ein GraphicElement überschreiben können.
     
      <p>Sie können diese Methode nicht direkt aufrufen. Flex ruft die <codeph>measure()</codeph>-Methode auf, wenn das Element mit der <codeph>addElement()</codeph>-Methode zu einer Gruppe hinzugefügt wird und wenn die <codeph>invalidateSize()</codeph>-Methode des Elements aufgerufen wird. </p>
     
      <p>Wenn Sie eine spezifische Höhe und Breite eines Elements festlegen, ruft Flex standardmäßig die <codeph>measure()</codeph>-Methode nicht auf, auch wenn Sie die <codeph>invalidateSize()</codeph>-Methode explizit aufrufen. Um dieses Standardverhalten zu überschreiben, überschreiben Sie die <codeph>skipMeasure()</codeph>-Methode.</p>
     
      <p>Für die Überschreibung dieser Methode müssen Sie die Eigenschaften <codeph>measuredWidth</codeph> und <codeph>measuredHeight</codeph> festlegen, um die Standardgröße zu definieren. Sie können optional die Eigenschaften <codeph>measuredX</codeph> und <codeph>measuredY</codeph> einstellen, um die standardmäßig gemessenen Grenzen der linken oberen Ecke relativ zum Ursprung des Elements zu definieren.</p>
     
      <p><codeph>measure()</codeph> wurde dazu konzipiert, dass das Element die eigenen natürlichen oder inhärenten Werte als Standard bereitstellt. Daher sollten die Eigenschaften <codeph>measuredWidth</codeph> und <codeph>measuredHeight</codeph> von Faktoren wie den folgenden bestimmt werden:</p>
      <ul>
         <li>Textmenge, die von der Komponente angezeigt werden muss.</li>
         <li>Die Größe eines JPEG-Bilds, das von der Komponente angezeigt wird.</li>
      </ul>
     
      <p>In einigen Fällen gibt es keine natürliche Art zur Bestimmung der Standardwerte. Beispielsweise kann ein einfaches GreenCircle-Element in der <codeph>measure()</codeph>-Methode für measuredWidth = 100 und measuredHeight = 100 festlegen, um eine angemessene Standardgröße anzugeben. In anderen Fällen, wie beispielsweise bei einem Textbereich, kann eine entsprechende Berechnung (wie die Suche nach der richtigen Breite und Höhe zur Anzeige des gesamten Texts im Seitenverhältnis eines Goldenen Rechtecks) zu zeitaufwendig sein.</p>
     
      <p>Die Standardimplementierung von <codeph>measure()</codeph> setzt die Werte für die Eigenschaften <codeph>measuredWidth</codeph>, <codeph>measuredHeight</codeph>, <codeph>measuredX</codeph> und <codeph>measuredY</codeph> auf <codeph>0</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Path:data:set"><apiName>data</apiName><shortdesc>
      Ein String, der eine kompakte Darstellung der Pfadsegmente enthält.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Ein String, der eine kompakte Darstellung der Pfadsegmente enthält. Dies ist eine alternative Möglichkeit für das Einstellen der segments-Eigenschaft. Durch das Einstellen dieser Eigenschaft werden alle Werte überschrieben, die in der Eigenschaft für das Segmentearray gespeichert sind.
     
      <p>Der Wert entspricht einem durch Leerzeichen getrennten String, der jedes Pfadsegment beschreibt. Jeder Segmenteintrag weist ein einzelnes Zeichen auf, das den Segmenttyp angibt, sowie zwei oder mehr Segmentparameter.</p>
     
      <p>Wenn der Segmentbefehl in Großbuchstaben angegeben ist, handelt es sich bei den Parametern um absolute Werte. Wenn der Segmentbefehl in Kleinbuchstaben angegeben ist, handelt es sich bei den Parametern um relative Werte.</p>
     
      <p>Der folgenden Tabelle können Sie die Syntax für die Segment entnehmen:
      
      
      <adobetable class="innertable">
        
        
        
        
        
        
        
        
      <tgroup cols="4"><thead><row><entry>Segmenttyp</entry><entry>Befehl</entry><entry>Parameter</entry><entry>Beispiel</entry></row></thead><tbody><row>
          <entry>Move</entry>
          <entry>M/m</entry>
          <entry>x y</entry>
          <entry><codeph>M 10 20</codeph> - Linie zu 10, 20 verschieben.</entry>
        </row><row>
          <entry>Line</entry>
          <entry>L/l</entry>
          <entry>x y</entry>
          <entry><codeph>L 50 30</codeph> - Linie zu 50, 30.</entry>
        </row><row>
          <entry>Horizontale Linie</entry>
          <entry>H/h</entry>
          <entry>x</entry>
          <entry><codeph>H 40</codeph> = Horizontale Linie zu 40.</entry>
        </row><row>
          <entry>Vertikale Linie</entry>
          <entry>V/v</entry>
          <entry>y</entry>
          <entry><codeph>V 100</codeph> - Vertikale Linie zu 100.</entry>
        </row><row>
          <entry>QuadraticBezier</entry>
          <entry>Q/q</entry>
          <entry>controlX controlY x y</entry>
          <entry><codeph>Q 110 45 90 30</codeph> - Kurve zu 90, 30 mit dem Kontrollpunkt an 110, 45.</entry>
        </row><row>
          <entry>CubicBezier</entry>
          <entry>C/c</entry>
          <entry>control1X control1Y control2X control2Y x y</entry>
          <entry><codeph>C 45 50 20 30 10 20</codeph> - Kurve zu 10, 20 mit dem ersten Kontrollpunkt an 45, 50 und dem zweiten Kontrollpunkt an 20, 30.</entry>
        </row><row>
          <entry>Pfad schließen</entry>
          <entry>Z/z</entry>
          <entry>–</entry>
          <entry>Beendet den Pfad.</entry>
        </row></tbody></tgroup></adobetable>
      </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Path:winding:set"><apiName>winding</apiName><shortdesc>
      Füllregel für das Schneiden oder Überlappen von Pfadsegmenten.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>evenOdd
      </apiDefaultValue></apiValueDef><apiDesc>
      Füllregel für das Schneiden oder Überlappen von Pfadsegmenten. Mögliche Werte sind GraphicsPathWinding.EVEN_ODD und GraphicsPathWinding.NON_ZERO.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.GraphicPathWinding.xml"><linktext>flash.display.GraphicPathWinding</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.primitives:Ellipse"><apiName>Ellipse</apiName><shortdesc>
  Die Ellipse-Klasse ist ein gefülltes Grafikelement, das eine Ellipse zeichnet.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:FilledElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Die Ellipse-Klasse ist ein gefülltes Grafikelement, das eine Ellipse zeichnet. Zum Zeichnen der Ellipse ruft diese Klasse die <codeph>Graphics.drawEllipse()</codeph>-Methode auf.
  
  </apiDesc><example conref="EllipseExample.mxml"><swfblock conref="examples/EllipseExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links><apiConstructor id="spark.primitives:Ellipse:Ellipse"><apiName>Ellipse</apiName><shortdesc>
      Konstruktor.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Konstruktor. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Ellipse:protected:draw"><apiName>draw</apiName><shortdesc>
      
      Zeichnen Sie das Element.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
      
      Zeichnen Sie das Element. Dies ist der zweite der drei Schritte, die während des Zeichnungsprozesses ausgeführt werden. Überschreiben Sie diese Methode, um Ihre Zeichnung zu implementieren. Der Strich (und ggf. die Füllung) wurden mit der <codeph>beginDraw()</codeph>-Methode eingestellt. Ihre Überschreibung sollte nur Aufrufe von Zeichnungsmethoden wie <codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> und <codeph>drawRect()</codeph> enthalten.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Ellipse:getBoundsXAtSize"><apiName>getBoundsXAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Ellipse:getBoundsYAtSize"><apiName>getBoundsYAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>