<?xml version="1.0"?>
<apiPackage id="spark.primitives"><apiName>spark.primitives</apiName><apiDetail/><apiClassifier id="spark.primitives:Graphic"><apiName>Graphic</apiName><shortdesc>
  Le contrôle Graphic affiche un jeu de commandes de traçage graphique. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusSkin"/><Exclude kind="style" name="focusBlendMode"/><Exclude kind="property" name="tabEnabled"/><Exclude kind="property" name="mouseFocusEnabled"/><Exclude kind="property" name="layout"/><Exclude kind="property" name="focusPane"/><Exclude kind="property" name="focusEnabled"/><Exclude kind="method" name="setFocus"/><DefaultProperty name="mxmlContent"/></asMetadata><asCustoms><mxml><![CDATA[
 
  <p>The <code>&lt;s:Graphic&gt;</code> tag inherits all of the tag attributes
  of its superclass, and adds the following tag attributes:</p>
 
  <pre>
  &lt;s:Graphic
    <b>Properties</b>
    version
    viewHeight
    viewWidth
    &nbsp;
  /&gt;
  </pre>
 
  
  ]]></mxml></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components:Group</apiBaseClassifier></apiClassifierDef><apiDesc>
  Le contrôle Graphic affiche un jeu de commandes de traçage graphique. 
 
  <p>La classe Graphic est la balise racine de tous les éléments graphiques. Cette balise est la racine des documents FXG. Elle ne peut pas apparaître ailleurs dans un document FXG. </p>
  
  <p>Vous ajoutez une série de balises d’éléments (par exemple, &lt;Rect>, &lt;Path> et &lt;Ellipse>) au tableau d’éléments du graphique pour définir le contenu du graphique.</p>
 
  <p>Les contrôles Graphic ne comportent pas d’arrière-plans ou de bordures et ne peuvent pas être mis en focus.</p>
  
  <p>Lorsqu’il est placé dans un conteneur, un graphique est positionné par les règles du conteneur. Toutefois, les graphiques dans le contrôle Graphic sont toujours dimensionnés et positionnés par rapport au coin supérieur gauche du contrôle Graphic. </p>
  
  <p>L’élément Graphic peut éventuellement contenir un élément &lt;Group>. </p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.graphics.Group.xml"><linktext>mx.graphics.Group</linktext></link></related-links><apiConstructor id="spark.primitives:Graphic:Graphic"><apiName>Graphic</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Graphic:protected:measure"><apiName>measure</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Graphic:version"><apiName>version</apiName><shortdesc>
        Spécifie la version FXG que cette balise Graphic cible.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>1.0</apiData><apiType value="Number"/><apiDefaultValue>1.0
      
      </apiDefaultValue></apiValueDef><apiDesc>
        Spécifie la version FXG que cette balise Graphic cible.  
     
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Graphic:viewHeight:get"><apiName>viewHeight</apiName><shortdesc>
      Définit l’espace vertical que le graphique utilise dans la présentation. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Définit l’espace vertical que le graphique utilise dans la présentation. Lorsque vous définissez cette valeur, le contenu n’est pas mis à l’échelle. Mais si vous spécifiez la valeur de la propriété <codeph>height</codeph>, le contenu est mis à l’échelle. 
      
      <p>Il existe deux cas où ceci peut être utile : 1) Vous spécifiez une hauteur <codeph>viewHeight</codeph> supérieure à la taille naturelle du contenu. Vous pouvez effectuer cela afin que le graphique occupe plus d’espace que sa taille visuelle. 2) Vous spécifiez une hauteur <codeph>viewHeight</codeph> inférieure à la taille naturelle du contenu. Vous pouvez effectuer cette opération si votre graphique comporte du chrome supplémentaire ou une bordure qui s’étend au-delà du contour du graphique. Dans ce cas de figure, assurez-vous de désactiver l’écrêtage dans votre présentation. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Graphic:viewWidth:get"><apiName>viewWidth</apiName><shortdesc>
      Définit l’espace horizontal que le graphique utilise dans la présentation.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Définit l’espace horizontal que le graphique utilise dans la présentation. Lorsque vous définissez cette valeur, le contenu n’est pas mis à l’échelle. Mais si vous spécifiez la valeur de la propriété <codeph>width</codeph>, le contenu est mis à l’échelle. 
      
      <p>Il existe deux cas où ceci peut être utile : 1) Vous spécifiez une largeur <codeph>viewWidth</codeph> supérieure à la taille naturelle du contenu. Vous pouvez effectuer cela afin que le graphique occupe plus d’espace que sa taille visuelle. 2) Vous spécifiez une largeur <codeph>viewWidth</codeph> inférieure à la taille naturelle du contenu. Vous pouvez effectuer cette opération si votre graphique comporte du chrome supplémentaire ou une bordure qui s’étend au-delà du contour du graphique. Dans ce cas de figure, assurez-vous de désactiver l’écrêtage dans votre présentation. </p>
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:VideoElement"><apiName>VideoElement</apiName><shortdesc>
  La classe VideoElement est un lecteur vidéo sans chrome qui prend en charge le téléchargement progressif, le taux multibits et la vidéo en diffusion à flux continu. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="source"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe VideoElement est un lecteur vidéo sans chrome qui prend en charge le téléchargement progressif, le taux multibits et la vidéo en diffusion à flux continu. 
 
  <p><codeph>VideoPlayer</codeph> est la version habillable.</p>
   </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.components.VideoPlayer.xml"><linktext>mx.components.VideoPlayer</linktext></link></related-links><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.READY_ready"><apiName>ready</apiName><shortdesc>
  Distribué lorsque la vidéo est chargée et prête à s’afficher. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.READY</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque la vidéo est chargée et prête à être affichée.
   <p>Cet événement est distribué lorsque l’objet VideoPlayer entre pour la première fois dans un état réactif après le chargement d’un nouveau fichier FLV par le biais des méthodes <codeph>play()</codeph> ou <codeph>load()</codeph>. Il est distribué une seule fois pour chaque fichier FLV chargé.</p>
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_flash.events.ProgressEvent.PROGRESS_progress"><apiName>progress</apiName><shortdesc>
  Indique la progression, en nombre d’octets téléchargés.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier>flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Indique la progression, en nombre d’octets téléchargés. Distribué à partir du début du chargement et jusqu’à ce que tous les octets aient été téléchargés, ainsi qu’en cas d’erreur réseau. Distribué tous les quarts de seconde à partir du début du chargement et jusqu’à ce que tous les octets aient été téléchargés, ainsi qu’en cas d’erreur réseau. Utilisez cet événement pour contrôler le nombre d’octets chargés ou présents dans le tampon. 
   <p>Il est distribué uniquement s’il s’agit d’un téléchargement HTTP progressif. Il indique la progression en nombre d’octets téléchargés. L’objet event possède les propriétés <codeph>bytesLoaded</codeph> et <codeph>bytesTotal</codeph>.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.PLAYHEAD_UPDATE_playheadUpdate"><apiName>playheadUpdate</apiName><shortdesc>
  Distribué chaque 0.25 secondes lors de la lecture de la vidéo. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.PLAYHEAD_UPDATE</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué tous les quarts de seconde pendant la lecture de la vidéo. Cet événement n’est pas distribué lorsque la lecture est en pause ou arrêtée, sauf si une recherche est effectuée.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.METADATA_RECEIVED_metadataReceived"><apiName>metadataReceived</apiName><shortdesc>
  Distribué la première fois que les métadonnées du fichier FLV sont atteintes.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.METADATA_RECEIVED</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué la première fois que les métadonnées du fichier FLV sont atteintes. L’objet d’événement possède une propriété <codeph>info</codeph> contenant l’objet d’informations reçu par le rappel de l’événement <codeph>NetStream.onMetaData</codeph>.
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.COMPLETE_complete"><apiName>complete</apiName><shortdesc>
 Distribué à la fin de la lecture, lorsque le lecteur atteint la fin du fichier FLV.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.COMPLETE</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
 Distribué à la fin de la lecture, lorsque le lecteur atteint la fin du fichier FLV. Le composant ne distribue pas l’événement si vous appelez les méthodes <codeph>stop()</codeph> ou <codeph>pause()</codeph>, ou si vous cliquez sur les commandes correspondantes. 
   </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="spark.primitives:VideoElement_spark.events.VideoEvent.CLOSE_close"><apiName>close</apiName><shortdesc>
  Distribué lorsque l’objet NetConnection est fermé, en raison d’un dépassement de délai, d’un appel de la méthode close() ou du chargement d’un nouveau flux vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>spark.events.VideoEvent.CLOSE</apiEventType><adobeApiEventClassifier>spark.events.VideoEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque l’objet <codeph>NetConnection</codeph> est fermé, en raison d’un dépassement de délai, d’un appel de la méthode <codeph>close()</codeph> ou du chargement d’un nouveau flux vidéo. Cet événement est distribué uniquement pour les flux RTMP, jamais pour les flux HTTP.
   </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.primitives:VideoElement:VideoElement"><apiName>VideoElement</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
       
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:VideoElement:pause"><apiName>pause</apiName><shortdesc>
      Interrompt la lecture sans déplacer la tête de lecture.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Interrompt la lecture sans déplacer la tête de lecture. Si la lecture est déjà interrompue ou arrêtée, cette méthode n’a aucun effet.  
           <p>Pour relancer la lecture, appelez la méthode <codeph>play()</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:VideoElement:play"><apiName>play</apiName><shortdesc>
      Entraîne la lecture de la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Entraîne la lecture de la vidéo. Peut être appelé lorsque la vidéo est interrompue, arrêtée ou déjà en cours de lecture.
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:VideoElement:seek"><apiName>seek</apiName><shortdesc>
      Recherche la seconde spécifiée dans la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>time</apiItemName><apiType value="Number"/><apiDesc>secondes
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      Recherche la seconde spécifiée dans la vidéo. Si la vidéo est en cours de lecture, continue la lecture à partir de ce point. Si la vidéo est interrompue, recherche ce point et reste en pause. Si la vidéo est arrêtée, recherche ce point et passe à l’état de pause. Sans effet sur les flux vidéo en direct.
           <p>Si la durée est inférieure à 0 ou NaN, renvoie une exception. Si la durée dépasse la fin du flux ou le volume de fichier téléchargé jusque là, tente une recherche et, lors de l’échec, lance une reprise. </p>
     
      <p>La propriété <codeph>playheadTime</codeph> peut ne pas avoir la valeur attendue immédiatement après l’appel aux méthodes de recherche ou la définition de la propriété <codeph>playheadTime</codeph> pour provoquer une recherche. S’il s’agit d’un téléchargement progressif, vous pouvez rechercher uniquement une image-clé. Ainsi une recherche vous amène à l’heure de la première image-clé après l’heure spécifiée.</p>
      
      <p><b>Remarque </b>: en cas de diffusion à flux continu, une recherche vous conduit toujours à l’heure exacte spécifiée même si le fichier FLV source n’y possède pas d’image-clé.</p>
           <p>La recherche est asynchrone. Ainsi si vous appelez une méthode de recherche ou définissez la propriété <codeph>playheadTime</codeph>, celle-ci<codeph> </codeph>n’est pas immédiatement mise à jour. Pour obtenir l’heure à la fin de la recherche, écoutez l’événement <codeph>seek</codeph>, qui ne se déclenche pas tant que la propriété <codeph>playheadTime</codeph> n’a pas été mise à jour.</p>
           </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:VideoElement:stop"><apiName>stop</apiName><shortdesc>
      Arrête la lecture de la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      Arrête la lecture de la vidéo. Si <codeph>autoRewind</codeph> est défini sur <codeph>true</codeph>, revient à la première image. Si la vidéo est déjà arrêtée, n’a aucun effet. Pour relancer la lecture, appelez <codeph>play()</codeph>. 
           </apiDesc></apiOperationDetail><related-links><link href="spark.primitives.xml#VideoElement/autoRewind"><linktext>autoRewind</linktext></link><link href="spark.primitives.xml#VideoElement/play()"><linktext>play()</linktext></link></related-links></apiOperation><apiValue id="spark.primitives:VideoElement:autoPlay:get"><apiName>autoPlay</apiName><shortdesc>
      Indique si la vidéo doit se mettre en lecture immédiatement après la définition de la propriété source.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indique si la vidéo doit se mettre en lecture immédiatement après la définition de la propriété <codeph>source</codeph>. Si la valeur est <codeph>true</codeph>, le fichier vidéo est immédiatement placé en mémoire tampon et est lu.
           <p>Même si la propriété <codeph>autoPlay</codeph> est définie sur <codeph>false</codeph>, Flex commence à charger la vidéo après l’appel de la méthode <codeph>initialize()</codeph>. Pour Flash Media Server, cela signifie créer le flux et charger la première image à afficher. Dans le cas d’un téléchargement avec le protocole HTTP, Flex commence à télécharger le flux et affiche la première image.</p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:autoRewind:get"><apiName>autoRewind</apiName><shortdesc>
      Indique si le fichier FLV doit être rembobiné jusqu’à la première image lorsque la lecture s’arrête, soit en appelant la méthode stop(), soit en atteignant la fin du flux.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indique si le fichier FLV doit être rembobiné jusqu’à la première image lorsque la lecture s’arrête, soit en appelant la méthode <codeph>stop()</codeph>, soit en atteignant la fin du flux. 
           <p>Cette propriété n’a aucun effet pour la diffusion à flux continu en direct des vidéos.</p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:loop:get"><apiName>loop</apiName><shortdesc>
      Indique si les médias doivent recommencer la lecture une fois cette dernière terminée. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indique si les médias doivent recommencer la lecture une fois cette dernière terminée. La propriété <codeph>loop</codeph> est prioritaire par rapport la propriété <codeph>autoRewind</codeph>. Par conséquent, si boucle est définie sur <codeph>true</codeph>, la propriété <codeph>autoRewind</codeph> est ignorée.  
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:maintainAspectRatio:get"><apiName>maintainAspectRatio</apiName><shortdesc>
      Indique si le contrôle doit conserver la proportion d’origine lors du redimensionnement de la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Indique si le contrôle doit conserver la proportion d’origine lors du redimensionnement de la vidéo.
     
      <p>Si aucune valeur de largeur, de hauteur ou de contrainte n’est spécifiée sur l’objet VideoElement, cette propriété est sans effet. </p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:muted:get"><apiName>muted</apiName><shortdesc>
      Définissez cette valeur sur true pour désactiver le son de la vidéo et sur false pour le réactiver. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Définissez cette valeur sur <codeph>true</codeph> pour désactiver le son de la vidéo et sur <codeph>false</codeph> pour le réactiver.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:playWhenHidden:get"><apiName>playWhenHidden</apiName><shortdesc>
      Contrôle si la lecture de la vidéo continue lorsqu’elle est masquée. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Contrôle si la lecture de la vidéo continue lorsqu’elle est masquée. La vidéo est masqué lorsque la propriété <codeph>visible</codeph> est définie sur <codeph>false</codeph> ou lorsque la vidéo est supprimée de la liste d’affichage. Si elle est définie sur <codeph>false</codeph>, la vidéo interrompt la lecture jusqu’à ce que la vidéo soit à nouveau visible. Si elle est définie sur <codeph>true</codeph>, la lecture de la vidéo continue lorsqu’elle est masquée. La valeur par défaut est <codeph>false</codeph>.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:playheadTime:get"><apiName>playheadTime</apiName><shortdesc>
      Position de la tête de lecture, mesurée en secondes, depuis le début de la lecture de la vidéo.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Position de la tête de lecture, mesurée en secondes, depuis le début de la lecture de la vidéo. L’objet d’événement pour de nombreux événements VideoPlay inclut l’emplacement de la tête de lecture, de sorte que vous pouvez déterminer l’endroit dans le fichier vidéo où l’événement s’est produit.
     
      <p>Définir cette propriété sur une valeur en secondes lance une opération de recherche. Si la vidéo est en cours de lecture, elle continue à être lue à partir du nouvel emplacement de la tête de lecture. Si la vidéo est interrompue, elle recherche le nouvel emplacement de la tête de lecture et reste interrompue. Si la vidéo est arrêtée, elle recherche le nouvel emplacement de la tête de lecture et passe en état d’interruption. Définir cette propriété n’a aucun effet avec les diffusions en continu live.</p>
           <p>Si le nouvel emplacement de la tête de lecture est inférieur à 0 ou NaN, le contrôle génère une exception. Si le nouvel emplacement de la tête de lecture est au-delà de la fin de la vidéo ou a dépasse la quantité du fichier vidéo téléchargée jusque là, le contrôle tente tout de même la recherche.</p>
           <p>Pour un fichier FLV, définir la propriété <codeph>playheadTime</codeph> permet de rechercher l’image-clé la plus proche de la position spécifiée. Les images-clés sont spécifiées dans le fichier FLV au moment de l’encodage. Par conséquent, il est possible que vous ne recherchiez pas le moment correct si aucune image-clé n’est spécifiée à cette position.</p>
           <p>Cette propriété génère une exception si elle est définie lorsque aucun flux n’est connecté. Utilisez l’événement <codeph>stateChange</codeph> et la propriété <codeph>connected</codeph> pour savoir quand définir cette propriété en toute sécurité.</p>
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:playing:get"><apiName>playing</apiName><shortdesc>
      Renvoie true si la vidéo est en cours de lecture ou qu’une tentative de lecture de la vidéo a lieu. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      Renvoie true si la vidéo est en cours de lecture ou qu’une tentative de lecture de la vidéo a lieu. 
      
      <p>La vidéo peut ne pas être en cours de lecture, car il se peut qu’elle effectue une recherche ou une mise en mémoire tampon, mais une tentative de lecture de la vidéo a lieu. </p> 
           </apiDesc></apiValueDetail><related-links><link href="spark.primitives.xml#VideoElement/play()"><linktext>play()</linktext></link><link href="spark.primitives.xml#VideoElement/pause()"><linktext>pause()</linktext></link><link href="spark.primitives.xml#VideoElement/stop()"><linktext>stop()</linktext></link><link href="spark.primitives.xml#VideoElement/autoPlay"><linktext>autoPlay</linktext></link></related-links></apiValue><apiValue id="spark.primitives:VideoElement:source:get"><apiName>source</apiName><shortdesc>
      Pour un téléchargement progressif, la source est simplement un chemin ou une URL pointant vers le fichier vidéo à lire. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Pour un téléchargement progressif, la source est simplement un chemin ou une URL pointant vers le fichier vidéo à lire. Pour une diffusion à flux continu (diffusion à flux continu, diffusion à flux continu en direct ou diffusion à flux continu à taux multibits), la propriété source est un objet StreamingVideoSource. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:totalTime:get"><apiName>totalTime</apiName><shortdesc>
      Durée totale de l’écho vidéo. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiDefaultValue>0
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Durée totale de l’écho vidéo. -1 signifie que la propriété n’a pas été transmise dans <codeph>play()</codeph> ou que la durée totale n’a pas pu être détectée automatiquement ou ne l’a pas encore été.
           </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:videoObject:get"><apiName>videoObject</apiName><shortdesc>
      Objet flash player flash.media.Video sous-jacent.
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.media:Video"/></apiValueDef><apiDesc>
      Objet flash player flash.media.Video sous-jacent.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:volume:get"><apiName>volume</apiName><shortdesc>
      Niveau du volume, indiqué comme valeur comprise entre 0 et 1.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>1
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Niveau du volume, indiqué comme valeur comprise entre 0 et 1.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:VideoElement:enabled:set"><apiName>enabled</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:Rect"><apiName>Rect</apiName><shortdesc>
  La classe Rect est un élément graphique rempli qui trace un rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata><asCustoms><includeExamples>examples/RectExample.mxml
  
  
  </includeExamples></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:FilledElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe Rect est un élément graphique rempli qui trace un rectangle. Les angles du rectangle peuvent être arrondis. La méthode <codeph>drawElementent()</codeph> appelle les méthodes <codeph>Graphics.drawRect()</codeph> et <codeph>Graphics.drawRoundRect()</codeph>.
  
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links><apiConstructor id="spark.primitives:Rect:Rect"><apiName>Rect</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Rect:protected:draw"><apiName>draw</apiName><shortdesc>
      
      Trace l’élément. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
      
      Tracer l’élément. Il s’agit de la seconde étape parmi les trois étapes effectuées pendant le processus de traçage. Remplacez cette méthode pour implémenter votre dessin. Le trait (et le remplissage, le cas échéant) ont été définis dans la méthode <codeph>beginDraw()</codeph>. Votre remplacement ne doit contenir que des appels à des méthodes de traçage, telles que<codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> et <codeph>drawRect()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Rect:getBoundsXAtSize"><apiName>getBoundsXAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Rect:getBoundsYAtSize"><apiName>getBoundsYAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Rect:bottomLeftRadiusX:get"><apiName>bottomLeftRadiusX</apiName><shortdesc>
      Le rayon x de l’angle inférieur gauche du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon x de l’angle inférieur gauche du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:bottomLeftRadiusY:get"><apiName>bottomLeftRadiusY</apiName><shortdesc>
      Le rayon y de l’angle inférieur gauche du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon y de l’angle inférieur gauche du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:bottomRightRadiusX:get"><apiName>bottomRightRadiusX</apiName><shortdesc>
      Le rayon x de l’angle inférieur droit du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon x de l’angle inférieur droit du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:bottomRightRadiusY:get"><apiName>bottomRightRadiusY</apiName><shortdesc>
      Le rayon y de l’angle inférieur droit du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon y de l’angle inférieur droit du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:radiusX:get"><apiName>radiusX</apiName><shortdesc>
      Le rayon d’arrondi par défaut à utiliser pour l’axe des x sur tous les angles. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Le rayon d’arrondi par défaut à utiliser pour l’axe des x sur tous les angles. Les propriétés <codeph>topLeftRadiusX</codeph>, <codeph>topRightRadiusX</codeph>, <codeph>bottomLeftRadiusX</codeph> et <codeph>bottomRightRadiusX</codeph> ont la priorité sur cette propriété. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:radiusY:get"><apiName>radiusY</apiName><shortdesc>
      Le rayon d’arrondi par défaut à utiliser pour l’axe des y sur tous les angles. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
      Le rayon d’arrondi par défaut à utiliser pour l’axe des y sur tous les angles. Les propriétés <codeph>topLeftRadiusY</codeph>, <codeph>topRightRadiusY</codeph>, <codeph>bottomLeftRadiusY</codeph> et <codeph>bottomRightRadiusY</codeph> ont la priorité sur cette propriété. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topLeftRadiusX:get"><apiName>topLeftRadiusX</apiName><shortdesc>
      Le rayon x de l’angle supérieur gauche du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon x de l’angle supérieur gauche du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topLeftRadiusY:get"><apiName>topLeftRadiusY</apiName><shortdesc>
      Le rayon y de l’angle supérieur gauche du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon y de l’angle supérieur gauche du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topRightRadiusX:get"><apiName>topRightRadiusX</apiName><shortdesc>
      Le rayon x de l’angle supérieur droit du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon x de l’angle supérieur droit du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Rect:topRightRadiusY:get"><apiName>topRightRadiusY</apiName><shortdesc>
      Le rayon y de l’angle supérieur droit du rectangle. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>NaN
     
      </apiDefaultValue></apiValueDef><apiDesc>
      Le rayon y de l’angle supérieur droit du rectangle. 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:RectangularDropShadow"><apiName>RectangularDropShadow</apiName><shortdesc>
      Cette classe optimise les ombres portées dans la plupart des cas.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
      <p>Cette classe optimise les ombres portées dans la plupart des cas. Si vous appliquez un effet d’ombre portée à un objet rectangulaire dont les bords tombent sur les limites des pixels, il faut choisir cette classe au lieu d’utiliser le filtre DropShadowFilter directement. </p>
     
      <p>Cette classe accepte les quatre premiers paramètres qui sont transmis au filtre DropShadowFilter : <codeph>alpha</codeph>, <codeph>angle</codeph>, <codeph>color</codeph> et <codeph>distance</codeph>. En outre, cette classe accepte les rayons des angles pour chacun des quatre coins de l’objet rectangulaire qui projette une ombre. </p>
     
      <p>Une fois ces 8 valeurs définies, cette classe précalcule l’ombre portée dans une image bitmap hors écran. Lorsque la méthode <codeph>drawShadow()</codeph>est appelée, des morceaux de l’ombre portée précalculée sont copiés sur l’objet Graphics transmis. </p>
      
      </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="flash.filters.DropShadowFilter.xml"><linktext>flash.filters.DropShadowFilter</linktext></link><link href="" invalidHref="flash.display.DisplayObject.xml"><linktext>flash.display.DisplayObject</linktext></link></related-links><apiConstructor id="spark.primitives:RectangularDropShadow:RectangularDropShadow"><apiName>RectangularDropShadow</apiName><shortdesc>
          Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="4.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
          Constructeur.
          
          </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.primitives:RectangularDropShadow:alpha:get"><apiName>alpha</apiName><shortdesc conref="flash.filters.DropShadowFilter#alpha">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#alpha">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:angle:get"><apiName>angle</apiName><shortdesc conref="flash.filters.DropShadowFilter#angle">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#angle">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:blRadius:get"><apiName>blRadius</apiName><shortdesc>
          Rayon d’angle du coin inférieur gauche du rectangle arrondi projetant l’ombre. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Rayon d’angle du coin inférieur gauche du rectangle arrondi projetant l’ombre. Peut être zéro pour des rectangles non arrondis. 
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:blurX:get"><apiName>blurX</apiName><shortdesc>
          Quantité de flou horizontal.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>4
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Quantité de flou horizontal.
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:blurY:get"><apiName>blurY</apiName><shortdesc>
          Quantité de flou vertical.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>4
          
          </apiDefaultValue></apiValueDef><apiDesc>
          Quantité de flou vertical.
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:brRadius:get"><apiName>brRadius</apiName><shortdesc>
          Rayon d’angle du coin inférieur droit du rectangle arrondi projetant l’ombre. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Rayon d’angle du coin inférieur droit du rectangle arrondi projetant l’ombre. Peut être zéro pour des rectangles non arrondis. 
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:color:get"><apiName>color</apiName><shortdesc conref="flash.filters.DropShadowFilter#color">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#color">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:distance:get"><apiName>distance</apiName><shortdesc conref="flash.filters.DropShadowFilter#distance">
          </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc conref="flash.filters.DropShadowFilter#distance">
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:tlRadius:get"><apiName>tlRadius</apiName><shortdesc>
          Rayon d’angle du coin supérieur gauche du rectangle arrondi projetant l’ombre. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Rayon d’angle du coin supérieur gauche du rectangle arrondi projetant l’ombre. Peut être zéro pour des rectangles non arrondis. 
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:RectangularDropShadow:trRadius:get"><apiName>trRadius</apiName><shortdesc>
          Rayon d’angle du coin supérieur droit du rectangle arrondi projetant l’ombre. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
          Rayon d’angle du coin supérieur droit du rectangle arrondi projetant l’ombre. Peut être zéro pour des rectangles non arrondis. 
          
          </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:Line"><apiName>Line</apiName><shortdesc>
  La classe Line est un élément graphique qui trace une ligne entre deux points.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:StrokedElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe Line est un élément graphique qui trace une ligne entre deux points.
  
  <p>Le trait par défaut d’une ligne n’étant pas défini, si vous ne spécifiez pas le trait, la ligne est invisible. </p>
  
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.graphics.Stroke.xml"><linktext>mx.graphics.Stroke</linktext></link></related-links><apiConstructor id="spark.primitives:Line:Line"><apiName>Line</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Line:protected:canSkipMeasurement"><apiName>canSkipMeasurement</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Line:protected:draw"><apiName>draw</apiName><shortdesc>
     
      Trace l’élément. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
     
      Tracer l’élément. Il s’agit de la seconde étape parmi les trois étapes effectuées pendant le processus de traçage. Remplacez cette méthode pour implémenter votre dessin. Le trait (et le remplissage, le cas échéant) ont été définis dans la méthode <codeph>beginDraw()</codeph>. Votre remplacement ne doit contenir que des appels à des méthodes de traçage, telles que<codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> et <codeph>drawRect()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Line:protected:measure"><apiName>measure</apiName><shortdesc>
      
      Calcule la taille par défaut de l’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Calcule la taille par défaut de l’élément. Il s’agit d’une méthode avancée que vous pouvez remplacer lorsque vous créez une sous-classe de l’objet GraphicElement.
     
      <p>Vous n’appelez pas cette méthode directement. Flex appelle la méthode <codeph>measure()</codeph> lorsque l’élément est ajouté à un groupe par le biais de la méthode <codeph>addElement()</codeph> et lorsque la méthode <codeph>invalidateSize()</codeph> de l’élément est appelée. </p>
     
      <p>Par défaut, vous définissez une hauteur et une largeur explicites d’un élément, et Flex n’appelle pas la méthode <codeph>measure()</codeph>, même si vous appelez explicitement la méthode <codeph>invalidateSize()</codeph>. Pour remplacer ce comportement, remplacez la méthode <codeph>skipMeasure()</codeph>.</p>
     
      <p>Dans votre remplacement de cette méthode, vous devez spécifier les propriétés <codeph>measuredWidth</codeph> et <codeph>measuredHeight</codeph> pour définir la taille par défaut. Si vous le souhaitez, vous pouvez définir les propriétés <codeph>measuredX</codeph> et <codeph>measuredY</codeph> pour définir le coin supérieur gauche des limites mesurées par défaut par rapport à l’origine de l’élément.</p>
     
      <p>Le point de mesure conceptuel de la méthode <codeph>measure()</codeph> permet à l’élément de fournir ses propres limites naturelles ou intrinsèques comme valeur par défaut. Par conséquent, les propriétés <codeph>measuredWidth</codeph> et <codeph>measuredHeight</codeph> doivent être déterminées par des facteurs comme :</p>
      <ul>
         <li>La quantité de texte que le composant doit afficher.</li>
         <li>La taille d’une image JPEG affichée par le composant.</li>
      </ul>
     
      <p>Dans certains cas, aucune méthode intrinsèque ne permet de déterminer les valeurs par défaut. Par exemple, la méthode <codeph>measure()</codeph> d’un élément GreenCircle simple peut simplement définir measuredWidth = 100 et measuredHeight = 100 pour indiquer une taille par défaut raisonnable. Dans d’autres cas, comme le contrôle TextArea, un calcul approprié (comme rechercher la hauteur et la largeur correctes qui permettront d’afficher tout le texte et respecteront les proportions d’un rectangle d’or) peut s’avérer trop long pour que cela en vaille la peine.</p>
     
      <p>L’implémentation par défaut de <codeph>measure()</codeph> définit les valeurs des propriétés <codeph>measuredWidth</codeph>, <codeph>measuredHeight</codeph>, <codeph>measuredX</codeph> et <codeph>measuredY</codeph> sur <codeph>0</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Line:xFrom:get"><apiName>xFrom</apiName><shortdesc>
     Position x de début de la ligne. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Position x de début de la ligne. 
    
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Line:xTo:get"><apiName>xTo</apiName><shortdesc>
     Position x de fin de la ligne. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Position x de fin de la ligne. 
    
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Line:yFrom:get"><apiName>yFrom</apiName><shortdesc>
     Position y de début de la ligne. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Position y de début de la ligne. 
    
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Line:yTo:get"><apiName>yTo</apiName><shortdesc>
     Position y de fin de la ligne. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc>
     Position y de fin de la ligne. 
    
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:BitmapImage"><apiName>BitmapImage</apiName><shortdesc>
  Un élément BitmapImage définit une région rectangulaire dans l’espace de coordonnées de son élément parent, rempli de données de bitmap tracées depuis un fichier source. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:GraphicElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  Un élément BitmapImage définit une région rectangulaire dans l’espace de coordonnées de son élément parent, rempli de données de bitmap tracées depuis un fichier source. 
  
  </apiDesc><example conref="BitmapImageExample.mxml"><swfblock conref="examples/BitmapImageExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.primitives:BitmapImage:BitmapImage"><apiName>BitmapImage</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:BitmapImage:protected:measure"><apiName>measure</apiName><shortdesc>
      
      Calcule la taille par défaut de l’élément. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Calcule la taille par défaut de l’élément. Il s’agit d’une méthode avancée que vous pouvez remplacer lorsque vous créez une sous-classe de l’objet GraphicElement.
     
      <p>Vous n’appelez pas cette méthode directement. Flex appelle la méthode <codeph>measure()</codeph> lorsque l’élément est ajouté à un groupe par le biais de la méthode <codeph>addElement()</codeph> et lorsque la méthode <codeph>invalidateSize()</codeph> de l’élément est appelée. </p>
     
      <p>Par défaut, vous définissez une hauteur et une largeur explicites d’un élément, et Flex n’appelle pas la méthode <codeph>measure()</codeph>, même si vous appelez explicitement la méthode <codeph>invalidateSize()</codeph>. Pour remplacer ce comportement, remplacez la méthode <codeph>skipMeasure()</codeph>.</p>
     
      <p>Dans votre remplacement de cette méthode, vous devez spécifier les propriétés <codeph>measuredWidth</codeph> et <codeph>measuredHeight</codeph> pour définir la taille par défaut. Si vous le souhaitez, vous pouvez définir les propriétés <codeph>measuredX</codeph> et <codeph>measuredY</codeph> pour définir le coin supérieur gauche des limites mesurées par défaut par rapport à l’origine de l’élément.</p>
     
      <p>Le point de mesure conceptuel de la méthode <codeph>measure()</codeph> permet à l’élément de fournir ses propres limites naturelles ou intrinsèques comme valeur par défaut. Par conséquent, les propriétés <codeph>measuredWidth</codeph> et <codeph>measuredHeight</codeph> doivent être déterminées par des facteurs comme :</p>
      <ul>
         <li>La quantité de texte que le composant doit afficher.</li>
         <li>La taille d’une image JPEG affichée par le composant.</li>
      </ul>
     
      <p>Dans certains cas, aucune méthode intrinsèque ne permet de déterminer les valeurs par défaut. Par exemple, la méthode <codeph>measure()</codeph> d’un élément GreenCircle simple peut simplement définir measuredWidth = 100 et measuredHeight = 100 pour indiquer une taille par défaut raisonnable. Dans d’autres cas, comme le contrôle TextArea, un calcul approprié (comme rechercher la hauteur et la largeur correctes qui permettront d’afficher tout le texte et respecteront les proportions d’un rectangle d’or) peut s’avérer trop long pour que cela en vaille la peine.</p>
     
      <p>L’implémentation par défaut de <codeph>measure()</codeph> définit les valeurs des propriétés <codeph>measuredWidth</codeph>, <codeph>measuredHeight</codeph>, <codeph>measuredX</codeph> et <codeph>measuredY</codeph> sur <codeph>0</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:BitmapImage:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
      
      Trace l’élément et/ou dimensionne et positionne son contenu.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/><apiDesc>Indique la largeur du composant, en pixels, des coordonnées du composant, quelle que soit la valeur de la propriété <codeph>scaleX</codeph> du composant.
     
      </apiDesc></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/><apiDesc>Indique la hauteur du composant, en pixels, des coordonnées du composant, quelle que soit la valeur de la propriété <codeph>scaleY</codeph> du composant.
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      Trace l’élément et/ou dimensionne et positionne son contenu. Il s’agit d’une méthode avancée que vous pouvez remplacer lorsque vous créez une sous-classe de l’objet GraphicElement.
     
      <p>Vous n’appelez pas cette méthode directement. Flex appelle la méthode <codeph>updateDisplayList()</codeph> lorsque le composant est ajouté à un groupe par le biais de la méthode <codeph>addElement()</codeph> et lorsque la méthode <codeph>invalidateDisplayList()</codeph> de l’élément est appelée. </p>
     
      <p>Cette méthode est celle où vous procéderiez au traçage par programmation à l’aide des méthodes sur l’objet displayObject de l’élément telles que <codeph>graphics.drawRect()</codeph>.</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:BitmapImage:fillMode:get"><apiName>fillMode</apiName><shortdesc>
      Le mode fillMode détermine la manière dont le bitmap remplit les dimensions.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>&lt;code>BitmapFillMode.SCALE&lt;/code>
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Le mode fillMode détermine la manière dont le bitmap remplit les dimensions. Si vous définissez la valeur de cette propriété dans une balise, utilisez la chaîne (par exemple, « repeat »). Si vous définissez la valeur de cette propriété dans ActionScript, utilisez la constante (par exemple, <codeph>BitmapFillMode.CLIP</codeph>). Lorsque cette valeur est définie sur <codeph>BitmapFillMode.CLIP</codeph> (« clip »), le bitmap se termine sur le bord de la région. Lorsque cette valeur est définie sur <codeph>BitmapFillMode.REPEAT</codeph> (« repeat »), l’image bitmap se répète pour remplir la région. Lorsque cette valeur est définie sur <codeph>BitmapFillMode.SCALE</codeph> (« scale »), l’image bitmap s’étire pour remplir la région.
     
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:BitmapImage:source:get"><apiName>source</apiName><shortdesc>
      Source utilisée pour le remplissage de bitmap. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Source utilisée pour le remplissage bitmap. Le remplissage permet d’effectuer un rendu à partir de différentes sources graphiques, dont les suivantes :  
      <ul>
       <li>Une occurrence Bitmap ou BitmapData. </li>
       <li>Une classe représentant une sous-classe de l’objet DisplayObject. L’objet BitmapFill instancie la classe et crée un rendu de bitmap. </li>
       <li>Une occurrence d’objet DisplayObject. L’objet BitmapFill le copie dans un bitmap à des fins de remplissage. </li>
      </ul>
      
      <p>Si vous utilisez un fichier image pour la source, il peut être de type PNG, GIF ou JPG. </p>
      
      <p>Pour spécifier une image en tant que source, vous devez utiliser la directive @Embed, comme l’illustre l’exemple suivant : 
      <pre>
      source="@Embed('&lt;i>image_location&lt;/i>')"
      </pre>
      </p>
      
      <p>L’emplacement de l’image peut être une URL ou une référence de fichier. S’il s’agit d’une référence de fichier, son emplacement est relatif à l’emplacement du fichier en cours de compilation. </p>
     
      <p> Si BitmapImage crée l’occurrence BitmapData, il supprimera cette dernière une fois la source modifiée. </p>
      
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.Bitmap.xml"><linktext>flash.display.Bitmap</linktext></link><link href="" invalidHref="flash.display.BitmapData.xml"><linktext>flash.display.BitmapData</linktext></link><link href="" invalidHref="mx.graphics.BitmapFill.xml"><linktext>mx.graphics.BitmapFill</linktext></link></related-links></apiValue><apiValue id="spark.primitives:BitmapImage:smooth:set"><apiName>smooth</apiName><shortdesc conref="flash.display.GraphicsBitmapFill#smooth">
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
      
      </apiDefaultValue></apiValueDef><apiDesc conref="flash.display.GraphicsBitmapFill#smooth">
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.primitives:Path"><apiName>Path</apiName><shortdesc>
  La classe Path est un élément graphique rempli qui trace une série de segments de chemin.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:FilledElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe Path est un élément graphique rempli qui trace une série de segments de chemin. Dans les images vectorielles, un chemin est une série de points reliés par des segments de ligne droits ou courbes. Ensemble, les lignes constituent une image. Dans Flex, vous utilisez la classe Path pour définir une forme vectorielle complexe construite à partir d’un ensemble de segments de ligne.  
 
  <p>En règle générale, le premier élément d’une définition de chemin est un segment Move spécifiant la position de départ de la plume du graphique. Vous pouvez ensuite utiliser les segments Line, CubicBezier et QuadraticBezier pour tracer les lignes du graphique. Lorsque vous utilisez ces classes, vous spécifiez uniquement les coordonnées x et y du point de fin de la ligne. Les coordonnées x et y du point de départ sont définies par la position courante de la plume. </p>
  
  <p>Après avoir tracé un segment de ligne, la position courante de la plume devient les coordonnées x et y du point de fin de la ligne. Vous pouvez utiliser plusieurs segments Move dans la définition de chemin pour repositionner la plume. </p>
  
  <p>La syntaxe utilisée par la classe Path pour définir la forme est la même que la syntaxe de chemin SVG, qui rend aisée la conversion de chemins SVG en chemins Flex. </p>
  
  </apiDesc><example conref="ArrowExample.mxml"><swfblock conref="examples/ArrowExample.swf"/></example></apiClassifierDetail><apiConstructor id="spark.primitives:Path:Path"><apiName>Path</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Path:protected:draw"><apiName>draw</apiName><shortdesc>
     
      Trace l’élément. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
     
      Tracer l’élément. Il s’agit de la seconde étape parmi les trois étapes effectuées pendant le processus de traçage. Remplacez cette méthode pour implémenter votre dessin. Le trait (et le remplissage, le cas échéant) ont été définis dans la méthode <codeph>beginDraw()</codeph>. Votre remplacement ne doit contenir que des appels à des méthodes de traçage, telles que<codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> et <codeph>drawRect()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:protected:endDraw"><apiName>endDraw</apiName><shortdesc>
     
      
      Finalisez le traçage de cet élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/><apiDesc>Elément graphique pour terminer le traçage. 
      
      </apiDesc></apiParam></apiOperationDef><apiDesc>
     
      
      Finalisez le traçage de cet élément. Il s’agit de la dernière étape parmi les trois étapes effectuées pendant le processus de traçage. Dans cette étape, les remplissages sont fermés. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:getBoundsXAtSize"><apiName>getBoundsXAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:getBoundsYAtSize"><apiName>getBoundsYAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:protected:invalidateDisplayObjectSharing"><apiName>invalidateDisplayObjectSharing</apiName><shortdesc>
      
      Méthode d’utilitaire qui avertit l’hôte que cet élément a changé et que son calque doit être mis à jour. </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Méthode d’utilitaire qui avertit l’hôte que cet élément a changé et que son calque doit être mis à jour. 
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Path:protected:measure"><apiName>measure</apiName><shortdesc>
      
      Calcule la taille par défaut de l’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
      
      Calcule la taille par défaut de l’élément. Il s’agit d’une méthode avancée que vous pouvez remplacer lorsque vous créez une sous-classe de l’objet GraphicElement.
     
      <p>Vous n’appelez pas cette méthode directement. Flex appelle la méthode <codeph>measure()</codeph> lorsque l’élément est ajouté à un groupe par le biais de la méthode <codeph>addElement()</codeph> et lorsque la méthode <codeph>invalidateSize()</codeph> de l’élément est appelée. </p>
     
      <p>Par défaut, vous définissez une hauteur et une largeur explicites d’un élément, et Flex n’appelle pas la méthode <codeph>measure()</codeph>, même si vous appelez explicitement la méthode <codeph>invalidateSize()</codeph>. Pour remplacer ce comportement, remplacez la méthode <codeph>skipMeasure()</codeph>.</p>
     
      <p>Dans votre remplacement de cette méthode, vous devez spécifier les propriétés <codeph>measuredWidth</codeph> et <codeph>measuredHeight</codeph> pour définir la taille par défaut. Si vous le souhaitez, vous pouvez définir les propriétés <codeph>measuredX</codeph> et <codeph>measuredY</codeph> pour définir le coin supérieur gauche des limites mesurées par défaut par rapport à l’origine de l’élément.</p>
     
      <p>Le point de mesure conceptuel de la méthode <codeph>measure()</codeph> permet à l’élément de fournir ses propres limites naturelles ou intrinsèques comme valeur par défaut. Par conséquent, les propriétés <codeph>measuredWidth</codeph> et <codeph>measuredHeight</codeph> doivent être déterminées par des facteurs comme :</p>
      <ul>
         <li>La quantité de texte que le composant doit afficher.</li>
         <li>La taille d’une image JPEG affichée par le composant.</li>
      </ul>
     
      <p>Dans certains cas, aucune méthode intrinsèque ne permet de déterminer les valeurs par défaut. Par exemple, la méthode <codeph>measure()</codeph> d’un élément GreenCircle simple peut simplement définir measuredWidth = 100 et measuredHeight = 100 pour indiquer une taille par défaut raisonnable. Dans d’autres cas, comme le contrôle TextArea, un calcul approprié (comme rechercher la hauteur et la largeur correctes qui permettront d’afficher tout le texte et respecteront les proportions d’un rectangle d’or) peut s’avérer trop long pour que cela en vaille la peine.</p>
     
      <p>L’implémentation par défaut de <codeph>measure()</codeph> définit les valeurs des propriétés <codeph>measuredWidth</codeph>, <codeph>measuredHeight</codeph>, <codeph>measuredX</codeph> et <codeph>measuredY</codeph> sur <codeph>0</codeph>.</p>
      
      </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.primitives:Path:data:set"><apiName>data</apiName><shortdesc>
      Chaîne contenant une représentation compacte des segments de chemin. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>null
      
      </apiDefaultValue></apiValueDef><apiDesc>
      Chaîne contenant une représentation compacte des segments de chemin. Il s’agit d’une autre méthode permettant de définir la propriété segments. La définition de cette propriété remplace les valeurs stockées dans la propriété de tableau de segments. 
     
      <p>La valeur est une chaîne séparée par des espaces décrivant chaque segment de chemin. Chaque entrée de segment possède un seul caractère qui indique le type de segment et deux ou plusieurs paramètres de segment. </p>
     
      <p>Si la commande de segment est en majuscules, les paramètres sont des valeurs absolues. Si la commande de segment est en minuscules, les paramètres sont des valeurs relatives. </p>
     
      <p>Le tableau suivant présente la syntaxe des segments : 
      
      
      <adobetable class="innertable">
        
        
        
        
        
        
        
        
      <tgroup cols="4"><thead><row><entry>Type de segment </entry><entry>Commande</entry><entry>Paramètres</entry><entry>Exemple</entry></row></thead><tbody><row>
          <entry>Move</entry>
          <entry>M/m</entry>
          <entry>x y</entry>
          <entry><codeph>M 10 20</codeph> - Déplace la ligne sur 10, 20.</entry>
        </row><row>
          <entry>Ligne</entry>
          <entry>L/l</entry>
          <entry>x y</entry>
          <entry><codeph>L 50 30</codeph> - Ligne sur 50, 30.</entry>
        </row><row>
          <entry>Ligne horizontale </entry>
          <entry>H/h</entry>
          <entry>x</entry>
          <entry><codeph>H 40</codeph> = Ligne horizontale sur 40.</entry>
        </row><row>
          <entry>Ligne verticale </entry>
          <entry>V/v</entry>
          <entry>y</entry>
          <entry><codeph>V 100</codeph> - Ligne verticale sur 100.</entry>
        </row><row>
          <entry>QuadraticBezier</entry>
          <entry>Q/q</entry>
          <entry>controlX controlY x y</entry>
          <entry><codeph>Q 110 45 90 30</codeph> - Courbe sur 90, 30 avec le point de contrôle sur 110, 45.</entry>
        </row><row>
          <entry>CubicBezier</entry>
          <entry>C/c</entry>
          <entry>control1X control1Y control2X control2Y x y</entry>
          <entry><codeph>C 45 50 20 30 10 20</codeph> - Courbe sur 10, 20 avec le premier point de contrôle sur 45, 50 et le second point de contrôle sur 20, 30.</entry>
        </row><row>
          <entry>Fermer le chemin</entry>
          <entry>Z/z</entry>
          <entry>sans objet</entry>
          <entry>Ferme le chemin. </entry>
        </row></tbody></tgroup></adobetable>
      </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.primitives:Path:winding:set"><apiName>winding</apiName><shortdesc>
      Règle de remplissage d’intersection ou de chevauchement de segments de chemin. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>evenOdd
      </apiDefaultValue></apiValueDef><apiDesc>
      Règle de remplissage d’intersection ou de chevauchement de segments de chemin. Les valeurs possibles sont GraphicsPathWinding.EVEN_ODD ou GraphicsPathWinding.NON_ZERO
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="flash.display.GraphicPathWinding.xml"><linktext>flash.display.GraphicPathWinding</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="spark.primitives:Ellipse"><apiName>Ellipse</apiName><shortdesc>
  La classe Ellipse est un élément graphique rempli qui trace une ellipse.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.primitives.supportClasses:FilledElement</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe Ellipse est un élément graphique rempli qui trace une ellipse. Pour tracer l’ellipse, cette classe appelle la méthode <codeph>Graphics.drawEllipse()</codeph>.
  
  </apiDesc><example conref="EllipseExample.mxml"><swfblock conref="examples/EllipseExample.swf"/></example></apiClassifierDetail><related-links><link href="" invalidHref="flash.display.Graphics.xml"><linktext>flash.display.Graphics</linktext></link></related-links><apiConstructor id="spark.primitives:Ellipse:Ellipse"><apiName>Ellipse</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur. 
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.primitives:Ellipse:protected:draw"><apiName>draw</apiName><shortdesc>
      
      Trace l’élément. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>g</apiItemName><apiType value="flash.display:Graphics"/></apiParam></apiOperationDef><apiDesc>
      
      Tracer l’élément. Il s’agit de la seconde étape parmi les trois étapes effectuées pendant le processus de traçage. Remplacez cette méthode pour implémenter votre dessin. Le trait (et le remplissage, le cas échéant) ont été définis dans la méthode <codeph>beginDraw()</codeph>. Votre remplacement ne doit contenir que des appels à des méthodes de traçage, telles que<codeph>moveTo()</codeph>, <codeph>curveTo()</codeph> et <codeph>drawRect()</codeph>.
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Ellipse:getBoundsXAtSize"><apiName>getBoundsXAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.primitives:Ellipse:getBoundsYAtSize"><apiName>getBoundsYAtSize</apiName><shortdesc>
      
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>postLayoutTransform</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef><apiDesc>
      
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>