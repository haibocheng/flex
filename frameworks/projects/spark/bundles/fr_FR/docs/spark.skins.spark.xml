<?xml version="1.0"?>
<apiPackage id="spark.skins.spark"><apiName>spark.skins.spark</apiName><apiDetail/><apiClassifier id="spark.skins.spark:ButtonBarSkin"><apiName>ButtonBarSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark ButtonBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark ButtonBar. Les boutons sur le composant ButtonBar utilisent les classes ButtonBarLastButtonSkin, ButtonBarFirstButtonSkin et ButtonBarMiddleButtonSkin.  
    
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link></related-links><apiConstructor id="spark.skins.spark:ButtonBarSkin:ButtonBarSkin"><apiName>ButtonBarSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonBarSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:firstButton"><apiName>firstButton</apiName><shortdesc>Spécifie la classe d’habillage du premier bouton sur le composant ButtonBar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarFirstButtonSkin</apiDefaultValue></apiValueDef><apiDesc>Spécifie la classe d’habillage du premier bouton sur le composant ButtonBar.
            </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:lastButton"><apiName>lastButton</apiName><shortdesc>Spécifie la classe d’habillage du dernier bouton sur le composant ButtonBar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarLastButtonSkin</apiDefaultValue></apiValueDef><apiDesc>Spécifie la classe d’habillage du dernier bouton sur le composant ButtonBar.
            </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:middleButton"><apiName>middleButton</apiName><shortdesc>Spécifie la classe d’habillage du ou des boutons de milieu sur le composant ButtonBar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarMiddleButtonSkin</apiDefaultValue></apiValueDef><apiDesc>Spécifie la classe d’habillage du ou des boutons de milieu sur le composant ButtonBar.
            </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TextInputSkin"><apiName>TextInputSkin</apiName><shortdesc>Classe d’habillage par défaut d’un composant Spark TextInput.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un composant Spark TextInput.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:TextInputSkin:TextInputSkin"><apiName>TextInputSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TextInputSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect de l’arrière-plan du composant TextInput. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de l’arrière-plan du composant TextInput. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Définit la couleur de remplissage d’arrière-plan. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit la couleur de remplissage d’arrière-plan. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:contentItems:get"><apiName>contentItems</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. Seuls les éléments de type DisplayObject ou GraphicElement doivent être exclus. Les autres types d’éléments seront ignorés. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonSkin"><apiName>ButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark Button.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark Button.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonSkin:ButtonSkin"><apiName>ButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarThumbSkin"><apiName>VScrollBarThumbSkin</apiName><shortdesc>Classe d’habillage par défaut du curseur d’un composant Spark VScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du curseur d’un composant Spark VScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VScrollBarThumbSkin:VScrollBarThumbSkin"><apiName>VScrollBarThumbSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultComplexItemRenderer"><apiName>DefaultComplexItemRenderer</apiName><shortdesc/><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components.supportClasses:ItemRenderer</apiBaseClassifier></apiClassifierDef><apiDesc>    
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:DefaultComplexItemRenderer:DefaultComplexItemRenderer"><apiName>DefaultComplexItemRenderer</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultComplexItemRenderer:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultComplexItemRenderer:data:set"><apiName>data</apiName><shortdesc conref="spark.components.DataRenderer#data">
            </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc conref="spark.components.DataRenderer#data">
            </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:CheckBoxSkin"><apiName>CheckBoxSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark CheckBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark CheckBox.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:CheckBoxSkin:CheckBoxSkin"><apiName>CheckBoxSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:CheckBoxSkin:check"><apiName>check</apiName><shortdesc>Coche dans la zone de cet habillage. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Coche dans la zone de cet habillage. Pour créer une coche personnalisée, créez une Classe d’habillage personnalisée. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:checkMarkFill"><apiName>checkMarkFill</apiName><shortdesc>Remplissage de couleur unie de la coche du composant CheckBox. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Remplissage de couleur unie de la coche du composant CheckBox. L’alpha par défaut est .9. et la couleur de remplissage par défaut 0x000000. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:CheckBox</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. Seuls les éléments de type DisplayObject ou GraphicElement doivent être exclus. Les autres types d’éléments seront ignorés. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VideoPlayerSkin"><apiName>VideoPlayerSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark VideoPlayer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark VideoPlayer.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VideoPlayerSkin:VideoPlayerSkin"><apiName>VideoPlayerSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VideoPlayerSkin:fullScreenButton"><apiName>fullScreenButton</apiName><shortdesc>Définit le libellé et l’aspect du bouton plein écran. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit le libellé et l’aspect du bouton plein écran. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoPlayer</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playPauseButton"><apiName>playPauseButton</apiName><shortdesc>Définit le libellé et l’aspect du bouton de lecture/pause. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ToggleButton</apiValueClassifier></apiValueDef><apiDesc>Définit le libellé et l’aspect du bouton de lecture/pause. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playerControls"><apiName>playerControls</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playheadTimeDisplay"><apiName>playheadTimeDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:scrubBar"><apiName>scrubBar</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:ScrubBar</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:timeDivider"><apiName>timeDivider</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:totalTimeDisplay"><apiName>totalTimeDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:videoElement"><apiName>videoElement</apiName><shortdesc>Sous-composant qui charge la vidéo mais ne définit pas l’aspect du composant VideoPlayer. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:VideoElement</apiValueClassifier></apiValueDef><apiDesc>Sous-composant qui charge la vidéo mais ne définit pas l’aspect du composant VideoPlayer. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:volumeBar"><apiName>volumeBar</apiName><shortdesc>Définit l’aspect de la barre de volume. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:VolumeBar</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la barre de volume. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TitleWindowCloseButtonSkin"><apiName>TitleWindowCloseButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton vers le haut du composant Spark TitleWindow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton vers le haut du composant Spark TitleWindow.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.skins.spark.xml#TitleWindowSkin"><linktext>spark.skins.spark.TitleWindowSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:TitleWindowCloseButtonSkin:TitleWindowCloseButtonSkin"><apiName>TitleWindowCloseButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:cbshad"><apiName>cbshad</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:xSymbol"><apiName>xSymbol</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:colorizeExclusions:get"><apiName>colorizeExclusions</apiName><shortdesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:symbolItems:get"><apiName>symbolItems</apiName><shortdesc>
         
     Noms des éléments dont la propriété color doit être définie par le style symbolColor. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
     Noms des éléments dont la propriété <codeph>color</codeph> doit être définie par le style <codeph>symbolColor</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxSkin"><apiName>ComboBoxSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark ComboBox. L’habillage pour le bouton d’ancrage pour un composant ComboBox est défini par la classe ComboBoxButtonSkin. L’habillage de l’entrée de texte est défini par la classe ComboBoxTextInputSkin. 
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.skins.spark.xml#ComboBoxButtonSkin"><linktext>spark.skins.spark.ComboBoxButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:ComboBoxSkin:ComboBoxSkin"><apiName>ComboBoxSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect du remplissage d’arrière-plan de la liste déroulante. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du remplissage d’arrière-plan de la liste déroulante. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Couleur du remplissage d’arrière-plan de la zone déroulante. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Couleur du remplissage d’arrière-plan de la zone déroulante. La couleur par défaut est 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc>Le conteneur pour les éléments de données dans la liste déroulante.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc>Le conteneur pour les éléments de données dans la liste déroulante.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dropDown"><apiName>dropDown</apiName><shortdesc>Zone déroulante de l’habillage. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Zone déroulante de l’habillage. Ceci inclut des bordures, les couleurs d’arrière-plan, les barres de défilement et les filtres.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ComboBox</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:openButton"><apiName>openButton</apiName><shortdesc>Bouton d’ancrage utilisé par le contrôle ComboBox.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Bouton d’ancrage utilisé par le contrôle ComboBox. L’habillage par défaut est ComboBoxButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:popUp"><apiName>popUp</apiName><shortdesc>Contrôle PopUpAnchor qui ouvre la liste déroulante. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:PopUpAnchor</apiValueClassifier></apiValueDef><apiDesc>Contrôle PopUpAnchor qui ouvre la liste déroulante. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:scroller"><apiName>scroller</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:textInput"><apiName>textInput</apiName><shortdesc>Zone d’entrée de texte de ComboBox. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc>Zone d’entrée de texte de ComboBox. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxTextInputSkin"><apiName>ComboBoxTextInputSkin</apiName><shortdesc>Classe d’habillage par défaut du curseur d’un composant Spark ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du curseur d’un composant Spark ComboBox.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ComboBoxTextInputSkin:ComboBoxTextInputSkin"><apiName>ComboBoxTextInputSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect de l’arrière-plan du composant TextInput. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de l’arrière-plan du composant TextInput. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Définit la couleur de remplissage d’arrière-plan. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit la couleur de remplissage d’arrière-plan. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:contentItems:get"><apiName>contentItems</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. Seuls les éléments de type DisplayObject ou GraphicElement doivent être exclus. Les autres types d’éléments seront ignorés. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarMiddleButtonSkin"><apiName>ButtonBarMiddleButtonSkin</apiName><shortdesc>Classe d’habillage par défaut des boutons de milieu sur un composant Spark ButtonBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut des boutons de milieu sur un composant Spark ButtonBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonBarMiddleButtonSkin:ButtonBarMiddleButtonSkin"><apiName>ButtonBarMiddleButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>Ceci définit l’aspect de la ou des étiquettes du ou des boutons de milieu sur le composant ButtonBar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Ceci définit l’aspect de la ou des étiquettes du ou des boutons de milieu sur le composant ButtonBar.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TitleWindowSkin"><apiName>TitleWindowSkin</apiName><shortdesc>Classe d’habillage par défaut d’un conteneur Spark TitleWindow.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un conteneur Spark TitleWindow.  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.skins.spark.xml#TitleWindowCloseButtonSkin"><linktext/></link></related-links><apiConstructor id="spark.skins.spark:TitleWindowSkin:TitleWindowSkin"><apiName>TitleWindowSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TitleWindowSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect d’arrière-plan de la classe TitleWindowSkin. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect d’arrière-plan de la classe TitleWindowSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:backgroundFill"><apiName>backgroundFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc> La couleur par défaut est 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc> La valeur par défaut est 1.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:closeButton"><apiName>closeButton</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:contents"><apiName>contents</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TitleWindow</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:moveArea"><apiName>moveArea</apiName><shortdesc>Définit la zone où l’utilisateur peut faire glisser le composant TitleWindow. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Définit la zone où l’utilisateur peut faire glisser le composant TitleWindow. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:titleDisplay"><apiName>titleDisplay</apiName><shortdesc>Définit l’aspect de la barre de titre de la classe TitleWindowSkin. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la barre de titre de la classe TitleWindowSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarTrackSkin"><apiName>VScrollBarTrackSkin</apiName><shortdesc>Classe d’habillage par défaut de la piste d’un composant Spark VScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut de la piste d’un composant Spark VScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VScrollBarTrackSkin:VScrollBarTrackSkin"><apiName>VScrollBarTrackSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ListDropIndicator"><apiName>ListDropIndicator</apiName><shortdesc>
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.skins:ProgrammaticSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  <codeph/>
 
  </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ListDropIndicator:ListDropIndicator"><apiName>ListDropIndicator</apiName><shortdesc>
	  Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  Constructeur.
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:ErrorSkin"><apiName>ErrorSkin</apiName><shortdesc>
  La classe ErrorSkin définit l’habillage d’erreur des composants Spark. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins.spark:HighlightBitmapCaptureSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  La classe ErrorSkin définit l’habillage d’erreur des composants Spark. Flex affiche l’habillahe d’erreur lorsqu’une erreur de validation se produit. 
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.validators.Validator.xml"><linktext>mx.validators.Validator</linktext></link></related-links><apiConstructor id="spark.skins.spark:ErrorSkin:ErrorSkin"><apiName>ErrorSkin</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:ErrorSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="spark.skins.spark:ToggleButtonSkin"><apiName>ToggleButtonSkin</apiName><shortdesc>Classe d’habillage par défaut d’un composant Spark ToggleButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un composant Spark ToggleButton.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ToggleButtonSkin:ToggleButtonSkin"><apiName>ToggleButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ToggleButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ToggleButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarSkin"><apiName>VScrollBarSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark VScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark VScrollBar. Les habillages de curseur et de piste sont définis respectivement par les classes VScrollBarThumbSkin et VScrollBarTrackSkin.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VScrollBarSkin:VScrollBarSkin"><apiName>VScrollBarSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>Définit la classe d’habillage du bouton vers le haut de la classe VScrollBarSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du bouton vers le haut de la classe VScrollBarSkin. La classe d’habillage par défaut est ScrollBarUpButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VScrollBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>Définit la classe d’habillage du bouton vers le bas de la classe VScrollBarSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du bouton vers le bas de la classe VScrollBarSkin. La classe d’habillage par défaut est ScrollBarDownButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:thumb"><apiName>thumb</apiName><shortdesc>Définit la classe d’habillage du curseur de la classe VScrollBarSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du curseur de la classe VScrollBarSkin. La classe d’habillage par défaut est VScrollBarThumbSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:track"><apiName>track</apiName><shortdesc>Définit la classe d’habillage de la piste de la classe VScrollBarSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage de la piste de la classe VScrollBarSkin. La classe d’habillage par défaut est VScrollBarTrackSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperTextInputSkin"><apiName>NumericStepperTextInputSkin</apiName><shortdesc>Classe d’habillage par défaut du champ de saisie de texte d’un composant Spark NumericStepper.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du champ de saisie de texte d’un composant Spark NumericStepper.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:NumericStepperTextInputSkin:NumericStepperTextInputSkin"><apiName>NumericStepperTextInputSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect de l’arrière-plan du composant NumericStepper. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de l’arrière-plan du composant NumericStepper. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Définit le remplissage d’arrière-plan du composant NumericStepper. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit le remplissage d’arrière-plan du composant NumericStepper. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderThumbSkin"><apiName>VSliderThumbSkin</apiName><shortdesc>Classe d’habillage par défaut du curseur d’un composant Spark VSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du curseur d’un composant Spark VSlider.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VSliderThumbSkin:VSliderThumbSkin"><apiName>VSliderThumbSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarRightButtonSkin"><apiName>ScrollBarRightButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton droit du composant Spark ScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton droit du composant Spark ScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarRightButtonSkin:ScrollBarRightButtonSkin"><apiName>ScrollBarRightButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Définit l’aspect de la flèche droite sur le composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la flèche droite sur le composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>Définit la première couleur de remplissage sur la flèche droite du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la première couleur de remplissage sur la flèche droite du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>Définit la seconde couleur de remplissage sur la flèche droite du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la seconde couleur de remplissage sur la flèche droite du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VideoPlayerSkin2"><apiName>VideoPlayerSkin2</apiName><shortdesc>Classe d’habillage par défaut du composant Spark VideoPlayer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark VideoPlayer.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VideoPlayerSkin2:VideoPlayerSkin2"><apiName>VideoPlayerSkin2</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VideoPlayerSkin2:currentTimeDisplay"><apiName>currentTimeDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:durationDisplay"><apiName>durationDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:fullScreenButton"><apiName>fullScreenButton</apiName><shortdesc>Définit le libellé et l’aspect du bouton plein écran. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit le libellé et l’aspect du bouton plein écran. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:hostComponent"><apiName>hostComponent</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoPlayer2</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:playPauseButton"><apiName>playPauseButton</apiName><shortdesc>Définit le libellé et l’aspect du bouton de lecture/pause. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ToggleButton</apiValueClassifier></apiValueDef><apiDesc>Définit le libellé et l’aspect du bouton de lecture/pause. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:playerControls"><apiName>playerControls</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:scrubBar"><apiName>scrubBar</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:ScrubBar</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:timeDivider"><apiName>timeDivider</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:videoDisplay"><apiName>videoDisplay</apiName><shortdesc>Sous-composant qui charge la vidéo mais ne définit pas l’aspect du composant VideoPlayer. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoDisplay</apiValueClassifier></apiValueDef><apiDesc>Sous-composant qui charge la vidéo mais ne définit pas l’aspect du composant VideoPlayer. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:volumeBar"><apiName>volumeBar</apiName><shortdesc>Définit l’aspect de la barre de volume. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:VolumeBar</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la barre de volume. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderSkin"><apiName>VSliderSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark VSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark VSlider. Les habillages de curseur et de piste sont définis respectivement par les classes VSliderThumbSkin et VSliderTrackSkin.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VSliderSkin:VSliderSkin"><apiName>VSliderSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderSkin:dataTip"><apiName>dataTip</apiName><shortdesc>Définit l’aspect de la propriété DataTip du composant Slider. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Définit l’aspect de la propriété DataTip du composant Slider. Pour personnaliser l’aspect du composant DataTip, créez une classe VSliderSkin personnalisée. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VSlider</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:thumb"><apiName>thumb</apiName><shortdesc>Définit la classe d’habillage du curseur de la classe VSliderSkin. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du curseur de la classe VSliderSkin. La classe d’habillage par défaut est VSliderThumbSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:track"><apiName>track</apiName><shortdesc>Définit la classe d’habillage de la piste de la classe VSliderSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage de la piste de la classe VSliderSkin. La classe d’habillage par défaut est VSliderTrackSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderTrackSkin"><apiName>VSliderTrackSkin</apiName><shortdesc>Classe d’habillage par défaut de la piste d’un composant Spark VSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut de la piste d’un composant Spark VSlider.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VSliderTrackSkin:VSliderTrackSkin"><apiName>VSliderTrackSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DropDownListSkin"><apiName>DropDownListSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark DropDownList.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark DropDownList. L’habillage pour le bouton d’ancrage pour un composant DropDownList est défini par la classe DropDownListButtonSkin.   
        
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DropDownList"><linktext>spark.components.DropDownList</linktext></link><link href="spark.skins.spark.xml#DropDownListButtonSkin"><linktext>spark.skins.spark.DropDownListButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:DropDownListSkin:DropDownListSkin"><apiName>DropDownListSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DropDownListSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect du remplissage d’arrière-plan de la liste déroulante. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du remplissage d’arrière-plan de la liste déroulante. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Couleur du remplissage d’arrière-plan de la zone déroulante. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Couleur du remplissage d’arrière-plan de la zone déroulante. La couleur par défaut est 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc>Le conteneur pour les éléments de données dans la liste déroulante.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc>Le conteneur pour les éléments de données dans la liste déroulante.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dropDown"><apiName>dropDown</apiName><shortdesc>Zone déroulante de l’habillage. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Zone déroulante de l’habillage. Ceci inclut des bordures, les couleurs d’arrière-plan, les barres de défilement et les filtres.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DropDownList</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>La zone d’invite du contrôle DropDownList. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>La zone d’invite du contrôle DropDownList. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:openButton"><apiName>openButton</apiName><shortdesc>Bouton d’ancrage utilisé par le contrôle DropDownList.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Bouton d’ancrage utilisé par le contrôle DropDownList. L’habillage par défaut est DropDownListButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:popUp"><apiName>popUp</apiName><shortdesc>Contrôle PopUpAnchor qui ouvre la liste déroulante. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:PopUpAnchor</apiValueClassifier></apiValueDef><apiDesc>Contrôle PopUpAnchor qui ouvre la liste déroulante. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:scroller"><apiName>scroller</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:BorderSkin"><apiName>BorderSkin</apiName><shortdesc>
  Classe d’habillage par défaut d’un conteneur Spark Border.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Classe d’habillage par défaut d’un conteneur Spark Border.
 
  </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:BorderSkin:BorderSkin"><apiName>BorderSkin</apiName><shortdesc>
      Constructeur 
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:BorderSkin:contentGroup:get"><apiName>contentGroup</apiName><shortdesc>
      Habillage requis pour SkinnableContainer  
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>
      Habillage requis pour SkinnableContainer  
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:BorderSkin:hostComponent:get"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Border</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TextAreaSkin"><apiName>TextAreaSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark TextArea.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark TextArea.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:TextAreaSkin:TextAreaSkin"><apiName>TextAreaSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TextAreaSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect de l’arrière-plan du composant TextArea. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de l’arrière-plan du composant TextArea. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Définit la couleur de remplissage d’arrière-plan. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit la couleur de remplissage d’arrière-plan. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextArea</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:scroller"><apiName>scroller</apiName><shortdesc>Définit le défilement utilisé pour faire défiler le texte RichEditableText. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc>Définit le défilement utilisé pour faire défiler le texte RichEditableText. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:contentItems:get"><apiName>contentItems</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. Seuls les éléments de type DisplayObject ou GraphicElement doivent être exclus. Les autres types d’éléments seront ignorés. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TabBarButtonSkin"><apiName>TabBarButtonSkin</apiName><shortdesc/><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TabBar"><linktext/></link><link href="spark.skins.spark.xml#TabBarSkin"><linktext/></link></related-links><apiConstructor id="spark.skins.spark:TabBarButtonSkin:TabBarButtonSkin"><apiName>TabBarButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TabBarButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:selectedHighlightH1"><apiName>selectedHighlightH1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:selectedHighlightH2"><apiName>selectedHighlightH2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:selectedHighlightV"><apiName>selectedHighlightV</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderTrackSkin"><apiName>HSliderTrackSkin</apiName><shortdesc>Classe d’habillage par défaut de la piste d’un composant Spark HSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut de la piste d’un composant Spark HSlider.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HSliderTrackSkin:HSliderTrackSkin"><apiName>HSliderTrackSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HighlightBitmapCaptureSkin"><apiName>HighlightBitmapCaptureSkin</apiName><shortdesc>
      Classe de base pour les habillages qui effectuent une capture des composants cibles et appliquent un filtre à l’image bitmap. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
      Classe de base pour les habillages qui effectuent l’acquisition au format bitmap des composants cibles et appliquent un filtre à l’image bitmap. Il s’agit de la classe de base pour ErrorSkin et FocusSkin. 
      
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HighlightBitmapCaptureSkin:HighlightBitmapCaptureSkin"><apiName>HighlightBitmapCaptureSkin</apiName><shortdesc>
         Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
         Constructeur.
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:processBitmap"><apiName>processBitmap</apiName><shortdesc>
          Appliquez les post-traitements au bitmap acquis. </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          Appliquez les post-traitements au bitmap acquis. 
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:bitmap"><apiName>bitmap</apiName><shortdesc>
          Acquisition Bitmap du composant cible. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Bitmap"/></apiValueDef><apiDesc>
          Acquisition Bitmap du composant cible.  
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:borderWeight:get"><apiName>borderWeight</apiName><shortdesc>
          Nombre de pixels de remplissage à placer autour du bitmap. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
          Nombre de pixels de remplissage à placer autour du bitmap. 
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:target:get"><apiName>target</apiName><shortdesc>
          Objet à cibler. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.components.supportClasses:SkinnableComponent</apiValueClassifier></apiValueDef><apiDesc>
          Objet à cibler. 
          
          </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarLeftButtonSkin"><apiName>ScrollBarLeftButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton gauche du composant Spark ScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton gauche du composant Spark ScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarLeftButtonSkin:ScrollBarLeftButtonSkin"><apiName>ScrollBarLeftButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Définit l’aspect de la flèche gauche sur le composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la flèche gauche sur le composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>Définit la première couleur de remplissage sur la flèche gauche du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la première couleur de remplissage sur la flèche gauche du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>Définit la seconde couleur de remplissage sur la flèche gauche du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la seconde couleur de remplissage sur la flèche gauche du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultItemRenderer"><apiName>DefaultItemRenderer</apiName><shortdesc>
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusBlendMode"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Couleur du symbole d’un composant. Les exemples incluent la coche d’un composant CheckBox ou la flèche d’un bouton de défilement
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Couleur de surbrillance lorsque la souris survole le composant.
   
  </description>
<default>0xCEDBEF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="uint">
<description>
  Couleur de l’anneau de sélection lorsque le composant a le focus.
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="Array">
<description>
  Couleurs à utiliser pour les arrière-plans des éléments de la liste. La valeur est un tableau de deux couleurs ou plus. Les arrière-plans des éléments de liste prennent les couleurs du tableau par alternance. 
 
  </description>
<default>undefined
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="unfocusedTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Couleur du texte lorsque le composant est activé mais n’a pas le focus.
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="inactiveTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Couleur du texte lorsque le composant est désactivé.
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusedTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  Couleur du texte lorsque le composant est activé et a le focus.
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="collapse,preserve" inherit="yes" name="whiteSpaceCollapse" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#whiteSpaceCollapse">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,rotate0,rotate90,rotate180,rotate270" inherit="yes" name="textRotation" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textRotation">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textIndent">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="tabStops" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#tabStops">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphStartIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphStartIndent">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphSpaceBefore" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphSpaceBefore">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphSpaceAfter" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphSpaceAfter">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphEndIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphEndIndent">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,romanUp,ideographicTopUp,ideographicCenterUp,ideographicTopDown,ideographicCenterDown,ascentDescentUp" inherit="yes" name="leadingModel" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#leadingModel">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="firstBaselineOffset" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#firstBaselineOffset">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,all,any,none" inherit="yes" name="breakOpportunity" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#breakOpportunity">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="tb,rl" inherit="yes" name="blockProgression" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#blockProgression">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="default,capsToSmallCaps,uppercase,lowercase,lowercaseToSmallCaps" inherit="yes" name="typographicCase" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#typographicCase">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="trackingRight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#trackingRight">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="trackingLeft" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#trackingLeft">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="interWord,distribute" inherit="yes" name="textJustify" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textJustify">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textDecoration">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="textAlpha" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textAlpha">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="start,end,left,right,center,justify" inherit="yes" name="textAlignLast" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textAlignLast">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="start,end,left,right,center,justify" inherit="yes" name="textAlign" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textAlign">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="cff,normal" inherit="yes" name="renderingMode" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#renderingMode">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#locale">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="lineThrough" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Boolean">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#lineThrough">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="lineHeight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#lineHeight">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="common,minimum,uncommon,exotic" inherit="yes" name="ligatureLevel" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#ligatureLevel">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,on,off" inherit="yes" name="kerning" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#kerning">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,prioritizeLeastAdjustment,pushInKinsoku,pushOutOnly" inherit="yes" name="justificationStyle" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#justificationStyle">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,space,eastAsian" inherit="yes" name="justificationRule" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#justificationRule">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontWeight">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontStyle">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontSize">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,device,embeddedCFF" inherit="yes" name="fontLookup" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontLookup">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontFamily" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontFamily">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,roman,ascent,descent,ideographicTop,ideographicCenter,ideographicBottom" inherit="yes" name="dominantBaseline" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#dominantBaseline">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#direction">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="default,proportional,tabular" inherit="yes" name="digitWidth" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#digitWidth">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="default,lining,oldStyle" inherit="yes" name="digitCase" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#digitCase">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#color">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="horizontalStem,none" inherit="yes" name="cffHinting" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#cffHinting">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="superscript,subscript,inherit" inherit="yes" name="baselineShift" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#baselineShift">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="useDominantBaseline,roman,ascent,descent,ideographicTop,ideographicCenter,ideographicBottom" inherit="yes" name="alignmentBaseline" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#alignmentBaseline">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>spark.components:IItemRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
   
 
  <p>Vous pouvez remplacer le rendu d’élément par défaut en créant un rendu d’élément personnalisé.</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer</linktext></link><link href="spark.components.xml#IItemRenderer"><linktext>spark.components.IItemRenderer</linktext></link><link href="spark.components.supportClasses.xml#ItemRenderer"><linktext/></link></related-links><adobeApiEvent id="spark.skins.spark:DefaultItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  Distribué lorsque la propriété data change.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  Distribué lorsque la propriété <codeph>data</codeph> change.
 
  <p>Lorsque vous utilisez un composant comme rendu d’élément, la propriété <codeph>data</codeph> contient les données à afficher. Vous pouvez écouter cet événement et mettre à jour le composant lorsque la propriété <codeph>data</codeph> change.</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.skins.spark:DefaultItemRenderer:DefaultItemRenderer"><apiName>DefaultItemRenderer</apiName><shortdesc>
      Constructeur.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      Constructeur.
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultItemRenderer:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>
      Composant facultatif d’étiquette de fonctionnalité de rendu d’élément.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.supportClasses:TextBase</apiValueClassifier></apiValueDef><apiDesc>
      Composant facultatif d’étiquette de fonctionnalité de rendu d’élément. Ce composant est utilisé pour déterminer la valeur de la propriété <codeph>baselinePosition</codeph> dans le composant hôte de la fonctionnalité de rendu d’élément. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      Implémentation de la propriété data, telle que définie par l’interface IDataRenderer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      Implémentation de la propriété <codeph>data</codeph>, telle que définie par l’interface IDataRenderer. Quand elle est définie, elle stocke la valeur et annule le composant pour déclencher sa redisposition.
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:dragging:get"><apiName>dragging</apiName><shortdesc>
      
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      <codeph/>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:itemIndex:get"><apiName>itemIndex</apiName><shortdesc>
      
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     </apiDefaultValue></apiValueDef><apiDesc>
      
      
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:label:get"><apiName>label</apiName><shortdesc>
      
      Chaîne à afficher dans la fonctionnalité de rendu d’élément.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""    
     </apiDefaultValue></apiValueDef><apiDesc>
      
      Chaîne à afficher dans la fonctionnalité de rendu d’élément. 
           <p>Le composant hôte de la fonctionnalité de rendu d’élément peut utiliser la méthode <codeph>itemToLabel()</codeph> pour convertir l’élément de données en une chaîne devant être affichée par la fonctionnalité de rendu d’élément. </p>
     
      <p>Pour les contrôles tels que List et ButtonBar, vous pouvez utiliser les propriétés <codeph>labelField</codeph> ou <codeph>labelFunction</codeph> pour spécifier le champ de l’élément de données contenant la chaîne. Dans tous les autres cas, le composant hôte utilise la méthode <codeph>toString()</codeph> pour convertir l’élément de données en chaîne. </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:selected:get"><apiName>selected</apiName><shortdesc>
      
      Contient true si la fonctionnalité de rendu d’élément peut s’afficher comme étant sélectionnée.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     </apiDefaultValue></apiValueDef><apiDesc>
      
      Contient <codeph>true</codeph> si la fonctionnalité de rendu d’élément peut s’afficher comme étant sélectionnée.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:showsCaret:get"><apiName>showsCaret</apiName><shortdesc>
      
      Contient true si le rendu d’élément peut s’afficher comme focus. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false  
     </apiDefaultValue></apiValueDef><apiDesc>
      
      Contient <codeph>true</codeph> si le rendu d’élément peut s’afficher comme focus.  
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarTrackSkin"><apiName>HScrollBarTrackSkin</apiName><shortdesc>Classe d’habillage par défaut de la piste sur un composant Spark HScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut de la piste sur un composant Spark HScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HScrollBarTrackSkin:HScrollBarTrackSkin"><apiName>HScrollBarTrackSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxButtonSkin"><apiName>ComboBoxButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton d’ancrage sur un composant Spark ComboBox.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton d’ancrage sur un composant Spark ComboBox.  
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.skins.spark.xml#ComboBoxSkin"><linktext>spark.skins.spark.ComboBoxSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:ComboBoxButtonSkin:ComboBoxButtonSkin"><apiName>ComboBoxButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>L’image flèche affichée dans le bouton d’ancrage. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>L’image flèche affichée dans le bouton d’ancrage. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>Première partie du fond en dégradé de la flèche. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Première partie du fond en dégradé de la flèche. L’alpha par défaut est .6. La couleur par défaut est 0x000000. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>Seconde partie du fond en dégradé de la flèche.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Seconde partie du fond en dégradé de la flèche. L’alpha par défaut est .6. La couleur par défaut est 0x000000. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:colorizeExclusions:get"><apiName>colorizeExclusions</apiName><shortdesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:symbolItems:get"><apiName>symbolItems</apiName><shortdesc>
         
     Noms des éléments dont la propriété color doit être définie par le style symbolColor. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
     Noms des éléments dont la propriété <codeph>color</codeph> doit être définie par le style <codeph>symbolColor</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarDownButtonSkin"><apiName>ScrollBarDownButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton vers le bas du composant Spark ScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton vers le bas du composant Spark ScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarDownButtonSkin:ScrollBarDownButtonSkin"><apiName>ScrollBarDownButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Définit l’aspect de la flèche vers le bas sur le composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la flèche vers le bas sur le composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>Définit la première couleur de remplissage sur la flèche vers le bas du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la première couleur de remplissage sur la flèche vers le bas du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>Définit la seconde couleur de remplissage sur la flèche vers le bas du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la seconde couleur de remplissage sur la flèche vers le bas du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerIncrementButtonSkin"><apiName>SpinnerIncrementButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton vers le haut d’un composant Spark Spinner.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton vers le haut d’un composant Spark Spinner.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SpinnerIncrementButtonSkin:SpinnerIncrementButtonSkin"><apiName>SpinnerIncrementButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Définit l’aspect de la flèche vers le haut. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la flèche vers le haut. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:arrowFill"><apiName>arrowFill</apiName><shortdesc>Définit le remplissage de la flèche vers le haut. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit le remplissage de la flèche vers le haut. La couleur par défaut est 0x000000. L’alpha par défaut est .8. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:symbolItems:get"><apiName>symbolItems</apiName><shortdesc>
         
     Noms des éléments dont la propriété color doit être définie par le style symbolColor. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
     Noms des éléments dont la propriété <codeph>color</codeph> doit être définie par le style <codeph>symbolColor</codeph>.
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollerSkin"><apiName>ScrollerSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark Scroller.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark Scroller. 
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollerSkin:ScrollerSkin"><apiName>ScrollerSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:ScrollerSkin:beginHighlightBitmapCapture"><apiName>beginHighlightBitmapCapture</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="spark.skins.spark:ScrollerSkin:endHighlightBitmapCapture"><apiName>endHighlightBitmapCapture</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:ScrollerSkin:horizontalScrollBar"><apiName>horizontalScrollBar</apiName><shortdesc>Détermine si la barre de défilement horizontal est visible dans l’habillage ScrollerSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HScrollBar</apiValueClassifier></apiValueDef><apiDesc>Détermine si la barre de défilement horizontal est visible dans l’habillage ScrollerSkin.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:verticalScrollBar"><apiName>verticalScrollBar</apiName><shortdesc>Détermine si la barre de défilement vertical est visible dans l’habillage ScrollerSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VScrollBar</apiValueClassifier></apiValueDef><apiDesc>Détermine si la barre de défilement vertical est visible dans l’habillage ScrollerSkin.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SkinnableDataContainerSkin"><apiName>SkinnableDataContainerSkin</apiName><shortdesc>Classe d’habillage par défaut du conteneur Spark SkinnableDataContainer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du conteneur Spark SkinnableDataContainer.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SkinnableDataContainerSkin:SkinnableDataContainerSkin"><apiName>SkinnableDataContainerSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:SkinnableDataContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarSkin"><apiName>HScrollBarSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark HScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark HScrollBar. Les habillages de curseur et de piste sont définis respectivement par les classes HScrollBarThumbSkin et HScrollBarTrackSkin.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HScrollBarSkin:HScrollBarSkin"><apiName>HScrollBarSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>Définit la classe d’habillage du bouton gauche de la classe HScrollBarSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du bouton gauche de la classe HScrollBarSkin. La classe d’habillage par défaut est ScrollBarLeftButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HScrollBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>Définit la classe d’habillage du bouton droit de la classe HScrollBarSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du bouton droit de la classe HScrollBarSkin. La classe d’habillage par défaut est ScrollBarRightButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:thumb"><apiName>thumb</apiName><shortdesc>Définit la classe d’habillage du curseur de la classe HScrollBarSkin. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du curseur de la classe HScrollBarSkin. La classe d’habillage par défaut est HScrollBarThumbSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:track"><apiName>track</apiName><shortdesc>Définit la classe d’habillage de la piste de la classe HScrollBarSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage de la piste de la classe HScrollBarSkin. La classe d’habillage par défaut est HScrollBarTrackSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerSkin"><apiName>SpinnerSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark Spinner.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark Spinner. Les habillages des boutons vers le bas et vers le haut du composant Spinner sont définis respectivement par les classes SpinnerDecrButtonSkin et SpinnerIncrButtonSkin.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SpinnerSkin:SpinnerSkin"><apiName>SpinnerSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>Définit l’aspect du bouton vers le bas. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du bouton vers le bas. La classe d’habillage par défaut est SpinnerDecrementButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Spinner</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>Définit l’aspect du bouton vers le haut. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du bouton vers le haut. La classe d’habillage par défaut est SpinnerIncrementButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperSkin"><apiName>NumericStepperSkin</apiName><shortdesc>Classe d’habillage par défaut d’un composant Spark NumericStepper.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un composant Spark NumericStepper. L’habillage pour le champ de saisie de texte sur un composant NumericStepper est défini par la classe NumericStepperTextInputSkin.   
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:NumericStepperSkin:NumericStepperSkin"><apiName>NumericStepperSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>Définit l’aspect du bouton vers le bas du composant NumericStepper. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du bouton vers le bas du composant NumericStepper. La classe par défaut est SpinnerDecrementButtonSkin.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:NumericStepper</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>Définit l’aspect du bouton vers le haut du composant NumericStepper.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du bouton vers le haut du composant NumericStepper. La classe par défaut est SpinnerIncrementButtonSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc>Définit l’aspect du sous-composant TextInput du composant NumericStepper.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du sous-composant TextInput du composant NumericStepper. La classe par défaut est NumericStepperTextInputSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarThumbSkin"><apiName>HScrollBarThumbSkin</apiName><shortdesc>Classe d’habillage par défaut du curseur d’un composant Spark HScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du curseur d’un composant Spark HScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HScrollBarThumbSkin:HScrollBarThumbSkin"><apiName>HScrollBarThumbSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:RadioButtonSkin"><apiName>RadioButtonSkin</apiName><shortdesc>Classe d’habillage par défaut d’un composant Spark RadioButton.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un composant Spark RadioButton.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:RadioButtonSkin:RadioButtonSkin"><apiName>RadioButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:RadioButtonSkin:dot"><apiName>dot</apiName><shortdesc>Définit l’aspect du point du composant RadioButton. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect du point du composant RadioButton. Pour personnaliser l’aspect du point, créez une classe RadioButtonSkin personnalisée. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:dotFill"><apiName>dotFill</apiName><shortdesc>Définit l’aspect du remplissage du point. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit l’aspect du remplissage du point. La couleur par défaut est 0x000000. L’alpha par défaut est .9. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RadioButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>Définit le texte en regard du point sur un composant RadioButton. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Définit le texte en regard du point sur un composant RadioButton. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      éléments à inclure lors du rendu de l’anneau de focus. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      éléments qui doivent être inclus lorsque du rendu de l’anneau de focus. Seuls les éléments de type DisplayObject ou GraphicElement doivent être exclus. Les autres types d’éléments seront ignorés. 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ApplicationSkin"><apiName>ApplicationSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark Application.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark Application. 
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ApplicationSkin:ApplicationSkin"><apiName>ApplicationSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>Rectangle avec remplissage de couleur unie formant l’arrière-plan de l’application. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Rectangle avec remplissage de couleur unie formant l’arrière-plan de l’application. La couleur du remplissage est définie sur la propriété backgroundColor de l’application. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:bgRectFill"><apiName>bgRectFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:controlBarGroup"><apiName>controlBarGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc> 
     Propriété fortement typée faisant référence au composant auquel cet habillage est appliqué. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Application</apiValueClassifier></apiValueDef><apiDesc> 
     Propriété fortement typée faisant référence au composant auquel cet habillage est appliqué. 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:topGroup"><apiName>topGroup</apiName><shortdesc>Barre de contrôle de l’application</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Barre de contrôle de l’application</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderSkin"><apiName>HSliderSkin</apiName><shortdesc>Classe d’habillage par défaut du composant Spark HSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du composant Spark HSlider. Les habillages de curseur et de piste sont définis respectivement par les classes HSliderThumbSkin et HSliderTrackSkin.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HSliderSkin:HSliderSkin"><apiName>HSliderSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderSkin:dataTip"><apiName>dataTip</apiName><shortdesc>Définit l’aspect de la propriété DataTip du composant Slider. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>Définit l’aspect de la propriété DataTip du composant Slider. Pour personnaliser l’aspect du composant DataTip, créez une classe HSliderSkin personnalisée. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HSlider</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:thumb"><apiName>thumb</apiName><shortdesc>Définit la classe d’habillage du curseur de la classe HSliderSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage du curseur de la classe HSliderSkin. La classe d’habillage par défaut est HSliderThumbSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:track"><apiName>track</apiName><shortdesc>Définit la classe d’habillage de la piste de la classe HSliderSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>Définit la classe d’habillage de la piste de la classe HSliderSkin. La classe d’habillage par défaut est HSliderTrackSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerDecrementButtonSkin"><apiName>SpinnerDecrementButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton vers le bas d’un composant Spark Spinner.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton vers le bas d’un composant Spark Spinner.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SpinnerDecrementButtonSkin:SpinnerDecrementButtonSkin"><apiName>SpinnerDecrementButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Définit l’aspect de la flèche vers le bas. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la flèche vers le bas. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:arrowFill"><apiName>arrowFill</apiName><shortdesc>Définit le remplissage de la flèche vers le bas.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit le remplissage de la flèche vers le bas. La couleur par défaut est 0x000000. L’alpha par défaut est .8. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SkinnableContainerSkin"><apiName>SkinnableContainerSkin</apiName><shortdesc>Classe d’habillage par défaut d’un conteneur Spark SkinnableContainer.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un conteneur Spark SkinnableContainer.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SkinnableContainerSkin:SkinnableContainerSkin"><apiName>SkinnableContainerSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SkinnableContainerSkin:bgFill"><apiName>bgFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:SkinnableContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarUpButtonSkin"><apiName>ScrollBarUpButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton vers le haut du composant Spark ScrollBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton vers le haut du composant Spark ScrollBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarUpButtonSkin:ScrollBarUpButtonSkin"><apiName>ScrollBarUpButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>Définit l’aspect de la flèche vers le haut sur le composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la flèche vers le haut sur le composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>Définit la première couleur de remplissage sur la flèche vers le haut du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la première couleur de remplissage sur la flèche vers le haut du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>Définit la seconde couleur de remplissage sur la flèche vers le haut du composant ScrollBar. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Définit la seconde couleur de remplissage sur la flèche vers le haut du composant ScrollBar. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:PanelSkin"><apiName>PanelSkin</apiName><shortdesc>Classe d’habillage par défaut d’un conteneur Spark Panel.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un conteneur Spark Panel.  
</apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:PanelSkin:PanelSkin"><apiName>PanelSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:PanelSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect d’arrière-plan de la classe PanelSkin. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect d’arrière-plan de la classe PanelSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:backgroundFill"><apiName>backgroundFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:bottomGroup"><apiName>bottomGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:bottomGroupMask"><apiName>bottomGroupMask</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:bottomMaskRect"><apiName>bottomMaskRect</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:contents"><apiName>contents</apiName><shortdesc>Contient la pile verticale de contenu de barre de titre et de contrôle </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>Contient la pile verticale de contenu de barre de titre et de contrôle </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:controlBarGroup"><apiName>controlBarGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Panel</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:tbDiv"><apiName>tbDiv</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:tbFill"><apiName>tbFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:tbHilite"><apiName>tbHilite</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:titleDisplay"><apiName>titleDisplay</apiName><shortdesc>Définit l’aspect de la barre de titre de la classe PanelSkin. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect de la barre de titre de la classe PanelSkin. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:topGroup"><apiName>topGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:topGroupMask"><apiName>topGroupMask</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:topMaskRect"><apiName>topMaskRect</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:FocusSkin"><apiName>FocusSkin</apiName><shortdesc>
  Habillages de focus des composants Spark. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins.spark:HighlightBitmapCaptureSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Habillages de focus des composants Spark. 
  
  </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:FocusSkin:FocusSkin"><apiName>FocusSkin</apiName><shortdesc>
     Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
     Constructeur.
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:FocusSkin:protected:borderWeight:get"><apiName>borderWeight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultButtonSkin"><apiName>DefaultButtonSkin</apiName><shortdesc>Classe d’habillage par défaut d’un composant Spark DefaultButton. </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un composant Spark DefaultButton. Le composant DefaultButton est utilisé dans les panneaux tels que les panneaux d’alerte. Il est défini par la propriété defaultButton sur un conteneur.   
</apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:DefaultButtonSkin:DefaultButtonSkin"><apiName>DefaultButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarFirstButtonSkin"><apiName>ButtonBarFirstButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du premier bouton sur un composant Spark ButtonBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du premier bouton sur un composant Spark ButtonBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonBarFirstButtonSkin:ButtonBarFirstButtonSkin"><apiName>ButtonBarFirstButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>Ceci définit l’aspect de l’étiquette du premier bouton sur le composant ButtonBar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Ceci définit l’aspect de l’étiquette du premier bouton sur le composant ButtonBar.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DropDownListButtonSkin"><apiName>DropDownListButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du bouton d’ancrage sur un composant Spark DropDownList.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du bouton d’ancrage sur un composant Spark DropDownList.  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DropDownList"><linktext>spark.components.DropDownList</linktext></link><link href="spark.skins.spark.xml#DropDownListSkin"><linktext>spark.skins.spark.DropDownListSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:DropDownListButtonSkin:DropDownListButtonSkin"><apiName>DropDownListButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DropDownListButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>L’image flèche affichée dans le bouton d’ancrage. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>L’image flèche affichée dans le bouton d’ancrage. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>Première partie du fond en dégradé de la flèche. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Première partie du fond en dégradé de la flèche. L’alpha par défaut est .6. La couleur par défaut est 0x000000. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>Seconde partie du fond en dégradé de la flèche.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>Seconde partie du fond en dégradé de la flèche. L’alpha par défaut est .6. La couleur par défaut est 0x000000. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderThumbSkin"><apiName>HSliderThumbSkin</apiName><shortdesc>Classe d’habillage par défaut du curseur d’un composant Spark HSlider.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du curseur d’un composant Spark HSlider.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HSliderThumbSkin:HSliderThumbSkin"><apiName>HSliderThumbSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ListSkin"><apiName>ListSkin</apiName><shortdesc>Classe d’habillage par défaut d’un composant Spark List.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut d’un composant Spark List.  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link></related-links><apiConstructor id="spark.skins.spark:ListSkin:ListSkin"><apiName>ListSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ListSkin:background"><apiName>background</apiName><shortdesc>Définit l’aspect d’arrière-plan du composant de liste. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>Définit l’aspect d’arrière-plan du composant de liste. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:bgFill"><apiName>bgFill</apiName><shortdesc>Définit la couleur de l’arrière-plan. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>Définit la couleur de l’arrière-plan. La couleur par défaut est 0xFFFFFF.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc>Le conteneur pour les éléments de données.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc>Le conteneur pour les éléments de données.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:dropIndicator"><apiName>dropIndicator</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>   <codeph/>  <codeph/><codeph/><codeph/><codeph/></apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:List</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:scroller"><apiName>scroller</apiName><shortdesc>Le composant Scroller pour ajouter des barres de défilement à la liste. </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc>Le composant Scroller pour ajouter des barres de défilement à la liste. </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TabBarSkin"><apiName>TabBarSkin</apiName><shortdesc/><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>   
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TabBar"><linktext/></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link><link href="spark.skins.spark.xml#TabBarButtonSkin"><linktext/></link></related-links><apiConstructor id="spark.skins.spark:TabBarSkin:TabBarSkin"><apiName>TabBarSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TabBarSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TabBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarLastButtonSkin"><apiName>ButtonBarLastButtonSkin</apiName><shortdesc>Classe d’habillage par défaut du dernier bouton sur un composant Spark ButtonBar.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Classe d’habillage par défaut du dernier bouton sur un composant Spark ButtonBar.  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonBarLastButtonSkin:ButtonBarLastButtonSkin"><apiName>ButtonBarLastButtonSkin</apiName><shortdesc>Constructeur.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Constructeur.</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:ButtonBarLastButtonSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
         </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaleHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
         </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>Ceci définit l’aspect de l’étiquette du dernier bouton sur le composant ButtonBar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>Ceci définit l’aspect de l’étiquette du dernier bouton sur le composant ButtonBar.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:colorizeExclusions:get"><apiName>colorizeExclusions</apiName><shortdesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>