<?xml version="1.0"?>
<apiPackage id="spark.skins.spark"><apiName>spark.skins.spark</apiName><apiDetail/><apiClassifier id="spark.skins.spark:ButtonBarSkin"><apiName>ButtonBarSkin</apiName><shortdesc>Spark ButtonBar 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ButtonBar 组件的默认外观类。ButtonBar 组件上的按钮使用 ButtonBarLastButtonSkin、ButtonBarFirstButtonSkin 和 ButtonBarMiddleButtonSkin 类。  
    
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ButtonBar"><linktext>spark.components.ButtonBar</linktext></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link></related-links><apiConstructor id="spark.skins.spark:ButtonBarSkin:ButtonBarSkin"><apiName>ButtonBarSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonBarSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:firstButton"><apiName>firstButton</apiName><shortdesc>为 ButtonBar 上的第一个按钮指定外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarFirstButtonSkin</apiDefaultValue></apiValueDef><apiDesc>为 ButtonBar 上的第一个按钮指定外观类。
            </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:lastButton"><apiName>lastButton</apiName><shortdesc>为 ButtonBar 上的最后一个按钮指定外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarLastButtonSkin</apiDefaultValue></apiValueDef><apiDesc>为 ButtonBar 上的最后一个按钮指定外观类。
            </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:middleButton"><apiName>middleButton</apiName><shortdesc>为 ButtonBar 上的中间按钮指定外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/><apiDefaultValue> spark.skins.spark.ButtonBarMiddleButtonSkin</apiDefaultValue></apiValueDef><apiDesc>为 ButtonBar 上的中间按钮指定外观类。
            </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TextInputSkin"><apiName>TextInputSkin</apiName><shortdesc>Spark TextInput 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark TextInput 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:TextInputSkin:TextInputSkin"><apiName>TextInputSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TextInputSkin:background"><apiName>background</apiName><shortdesc>定义 TextInput 组件的背景外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义 TextInput 组件的背景外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:bgFill"><apiName>bgFill</apiName><shortdesc>定义背景填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义背景填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:contentItems:get"><apiName>contentItems</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      呈示焦点外框时应该包含的项。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      呈示焦点外框时应该包含的项。仅应该排除类型为 DisplayObject 或 GraphicElement 的项。将忽略其他类型的项。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextInputSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonSkin"><apiName>ButtonSkin</apiName><shortdesc>Spark Button 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark Button 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonSkin:ButtonSkin"><apiName>ButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarThumbSkin"><apiName>VScrollBarThumbSkin</apiName><shortdesc>Spark VScrollBar 组件的缩略图的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VScrollBar 组件的缩略图的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VScrollBarThumbSkin:VScrollBarThumbSkin"><apiName>VScrollBarThumbSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultComplexItemRenderer"><apiName>DefaultComplexItemRenderer</apiName><shortdesc/><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components.supportClasses:ItemRenderer</apiBaseClassifier></apiClassifierDef><apiDesc>  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:DefaultComplexItemRenderer:DefaultComplexItemRenderer"><apiName>DefaultComplexItemRenderer</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultComplexItemRenderer:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultComplexItemRenderer:data:set"><apiName>data</apiName><shortdesc conref="spark.components.DataRenderer#data">
            </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc conref="spark.components.DataRenderer#data">
            </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:CheckBoxSkin"><apiName>CheckBoxSkin</apiName><shortdesc>Spark CheckBox 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark CheckBox 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:CheckBoxSkin:CheckBoxSkin"><apiName>CheckBoxSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:CheckBoxSkin:check"><apiName>check</apiName><shortdesc>此外观的框中的复选标记。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>此外观的框中的复选标记。若要创建自定义复选标记，请创建自定义外观类。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:checkMarkFill"><apiName>checkMarkFill</apiName><shortdesc>CheckBox 的复选标记的实色填充。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>CheckBox 的复选标记的实色填充。默认的 Alpha 为 0.9，而默认的填充颜色为 0x000000。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:CheckBox</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      呈示焦点外框时应该包含的项。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      呈示焦点外框时应该包含的项。仅应该排除类型为 DisplayObject 或 GraphicElement 的项。将忽略其他类型的项。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:CheckBoxSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VideoPlayerSkin"><apiName>VideoPlayerSkin</apiName><shortdesc>Spark VideoPlayer 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VideoPlayer 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VideoPlayerSkin:VideoPlayerSkin"><apiName>VideoPlayerSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VideoPlayerSkin:fullScreenButton"><apiName>fullScreenButton</apiName><shortdesc>定义全屏按钮的标签和外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义全屏按钮的标签和外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoPlayer</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playPauseButton"><apiName>playPauseButton</apiName><shortdesc>定义播放/暂停按钮的标签和外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ToggleButton</apiValueClassifier></apiValueDef><apiDesc>定义播放/暂停按钮的标签和外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playerControls"><apiName>playerControls</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:playheadTimeDisplay"><apiName>playheadTimeDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:scrubBar"><apiName>scrubBar</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:ScrubBar</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:timeDivider"><apiName>timeDivider</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:totalTimeDisplay"><apiName>totalTimeDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:videoElement"><apiName>videoElement</apiName><shortdesc>加载视频但不定义 VideoPlayer 组件的外观的子组件。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:VideoElement</apiValueClassifier></apiValueDef><apiDesc>加载视频但不定义 VideoPlayer 组件的外观的子组件。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:volumeBar"><apiName>volumeBar</apiName><shortdesc>定义音量条的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:VolumeBar</apiValueClassifier></apiValueDef><apiDesc>定义音量条的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TitleWindowCloseButtonSkin"><apiName>TitleWindowCloseButtonSkin</apiName><shortdesc>Spark TitleWindow 组件的关闭按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark TitleWindow 组件的关闭按钮的默认外观类。  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.skins.spark.xml#TitleWindowSkin"><linktext>spark.skins.spark.TitleWindowSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:TitleWindowCloseButtonSkin:TitleWindowCloseButtonSkin"><apiName>TitleWindowCloseButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:cbshad"><apiName>cbshad</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:xSymbol"><apiName>xSymbol</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:colorizeExclusions:get"><apiName>colorizeExclusions</apiName><shortdesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:symbolItems:get"><apiName>symbolItems</apiName><shortdesc>
         
     应该由 symbolColor 样式定义其 color 属性的项目的名称。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
     应该由 <codeph>symbolColor</codeph> 样式定义其 <codeph>color</codeph> 属性的项目的名称。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowCloseButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxSkin"><apiName>ComboBoxSkin</apiName><shortdesc>Spark ComboBox 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ComboBox 组件的默认外观类。ComboBox 组件的锚点按钮的外观由 ComboBoxButtonSkin 类定义。文本输入的外观是由 ComboBoxTextInputSkin 类定义的。
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.skins.spark.xml#ComboBoxButtonSkin"><linktext>spark.skins.spark.ComboBoxButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:ComboBoxSkin:ComboBoxSkin"><apiName>ComboBoxSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxSkin:background"><apiName>background</apiName><shortdesc>定义下拉列表的背景填充的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义下拉列表的背景填充的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:bgFill"><apiName>bgFill</apiName><shortdesc>下拉列表的背景填充的颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>下拉列表的背景填充的颜色。默认颜色为 0xFFFFFF。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc>下拉列表中数据项目的容器。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc>下拉列表中数据项目的容器。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dropDown"><apiName>dropDown</apiName><shortdesc>外观的下拉区域。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>外观的下拉区域。这包含边框、背景颜色、滑动条和滤镜。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ComboBox</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:openButton"><apiName>openButton</apiName><shortdesc>ComboBox 所用的锚点按钮。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>ComboBox 所用的锚点按钮。默认外观为 ComboBoxButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:popUp"><apiName>popUp</apiName><shortdesc>打开下拉列表的 PopUpAnchor 控件。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:PopUpAnchor</apiValueClassifier></apiValueDef><apiDesc>打开下拉列表的 PopUpAnchor 控件。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:scroller"><apiName>scroller</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:textInput"><apiName>textInput</apiName><shortdesc>ComboBox 的文本输入区域。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc>ComboBox 的文本输入区域。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxTextInputSkin"><apiName>ComboBoxTextInputSkin</apiName><shortdesc>Spark ComboBox 组件的 textInput 的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ComboBox 组件的 textInput 的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ComboBoxTextInputSkin:ComboBoxTextInputSkin"><apiName>ComboBoxTextInputSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:background"><apiName>background</apiName><shortdesc>定义 TextInput 组件的背景外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义 TextInput 组件的背景外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:bgFill"><apiName>bgFill</apiName><shortdesc>定义背景填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义背景填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:contentItems:get"><apiName>contentItems</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      呈示焦点外框时应该包含的项。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      呈示焦点外框时应该包含的项。仅应该排除类型为 DisplayObject 或 GraphicElement 的项。将忽略其他类型的项。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxTextInputSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarMiddleButtonSkin"><apiName>ButtonBarMiddleButtonSkin</apiName><shortdesc>Spark ButtonBar 组件中的中间按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ButtonBar 组件中的中间按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonBarMiddleButtonSkin:ButtonBarMiddleButtonSkin"><apiName>ButtonBarMiddleButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>定义 ButtonBar 组件中的中间按钮的标签的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>定义 ButtonBar 组件中的中间按钮的标签的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarMiddleButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TitleWindowSkin"><apiName>TitleWindowSkin</apiName><shortdesc>Spark TitleWindow 容器的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark TitleWindow 容器的默认外观类。  
     </apiDesc></apiClassifierDetail><related-links><link href="spark.skins.spark.xml#TitleWindowCloseButtonSkin"><linktext/></link></related-links><apiConstructor id="spark.skins.spark:TitleWindowSkin:TitleWindowSkin"><apiName>TitleWindowSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TitleWindowSkin:background"><apiName>background</apiName><shortdesc>定义 TitleWindowSkin 类的背景的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义 TitleWindowSkin 类的背景的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:backgroundFill"><apiName>backgroundFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>默认颜色为 0xFFFFFF。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc>默认值为 1。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:closeButton"><apiName>closeButton</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:contents"><apiName>contents</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TitleWindow</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:moveArea"><apiName>moveArea</apiName><shortdesc>定义用户可以拖动 TitleWindow 的区域。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>定义用户可以拖动 TitleWindow 的区域。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:titleDisplay"><apiName>titleDisplay</apiName><shortdesc>定义 TitleWindowSkin 类的标题栏的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>定义 TitleWindowSkin 类的标题栏的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TitleWindowSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarTrackSkin"><apiName>VScrollBarTrackSkin</apiName><shortdesc>Spark VScrollBar 组件的滑块轨道的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VScrollBar 组件的滑块轨道的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VScrollBarTrackSkin:VScrollBarTrackSkin"><apiName>VScrollBarTrackSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ListDropIndicator"><apiName>ListDropIndicator</apiName><shortdesc>
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.skins:ProgrammaticSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  <codeph/>
 
  </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ListDropIndicator:ListDropIndicator"><apiName>ListDropIndicator</apiName><shortdesc>
	  构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
	  构造函数。
	  
	  </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="spark.skins.spark:ErrorSkin"><apiName>ErrorSkin</apiName><shortdesc>
  ErrorSkin 类定义 Spark 组件的错误外观。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins.spark:HighlightBitmapCaptureSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  ErrorSkin 类定义 Spark 组件的错误外观。Flex 显示发生验证错误时的错误外观。
 
  </apiDesc></apiClassifierDetail><related-links><link href="" invalidHref="mx.validators.Validator.xml"><linktext>mx.validators.Validator</linktext></link></related-links><apiConstructor id="spark.skins.spark:ErrorSkin:ErrorSkin"><apiName>ErrorSkin</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      构造函数。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:ErrorSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
     </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="spark.skins.spark:ToggleButtonSkin"><apiName>ToggleButtonSkin</apiName><shortdesc>Spark ToggleButton 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ToggleButton 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ToggleButtonSkin:ToggleButtonSkin"><apiName>ToggleButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ToggleButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ToggleButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ToggleButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VScrollBarSkin"><apiName>VScrollBarSkin</apiName><shortdesc>Spark VScrollBar 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VScrollBar 组件的默认外观类。缩略图外观和滑块轨道外观是分别由 VScrollBarThumbSkin 和 VScrollBarTrackSkin 类定义的。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VScrollBarSkin:VScrollBarSkin"><apiName>VScrollBarSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VScrollBarSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>定义 VScrollBarSkin 的向上按钮的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 VScrollBarSkin 的向上按钮的外观类。默认外观类为 ScrollBarUpButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VScrollBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>定义 VScrollBarSkin 的向下按钮的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 VScrollBarSkin 的向下按钮的外观类。默认外观类为 ScrollBarDownButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:thumb"><apiName>thumb</apiName><shortdesc>定义 VScrollBarSkin 的缩略图的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 VScrollBarSkin 的缩略图的外观类。默认外观类为 VScrollBarThumbSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:track"><apiName>track</apiName><shortdesc>定义 VScrollBarSkin 的滑块轨道的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 VScrollBarSkin 的滑块轨道的外观类。默认外观类为 VScrollBarTrackSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VScrollBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperTextInputSkin"><apiName>NumericStepperTextInputSkin</apiName><shortdesc>Spark NumericStepper 组件的文本输入字段的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark NumericStepper 组件的文本输入字段的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:NumericStepperTextInputSkin:NumericStepperTextInputSkin"><apiName>NumericStepperTextInputSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:background"><apiName>background</apiName><shortdesc>定义 NumericStepper 组件的背景外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义 NumericStepper 组件的背景外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:bgFill"><apiName>bgFill</apiName><shortdesc>定义 NumericStepper 组件的背景的背景填充。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义 NumericStepper 组件的背景的背景填充。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperTextInputSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderThumbSkin"><apiName>VSliderThumbSkin</apiName><shortdesc>Spark VSlider 组件的缩略图的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VSlider 组件的缩略图的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VSliderThumbSkin:VSliderThumbSkin"><apiName>VSliderThumbSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarRightButtonSkin"><apiName>ScrollBarRightButtonSkin</apiName><shortdesc>Spark ScrollBar 组件的向右按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ScrollBar 组件的向右按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarRightButtonSkin:ScrollBarRightButtonSkin"><apiName>ScrollBarRightButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>定义 ScrollBar 组件中的向右箭头的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>定义 ScrollBar 组件中的向右箭头的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>定义 ScrollBar 组件的向右箭头中的第一种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向右箭头中的第一种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>定义 ScrollBar 组件的向右箭头中的第二种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向右箭头中的第二种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarRightButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VideoPlayerSkin2"><apiName>VideoPlayerSkin2</apiName><shortdesc>Spark VideoPlayer 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VideoPlayer 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VideoPlayerSkin2:VideoPlayerSkin2"><apiName>VideoPlayerSkin2</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VideoPlayerSkin2:currentTimeDisplay"><apiName>currentTimeDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:durationDisplay"><apiName>durationDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:fullScreenButton"><apiName>fullScreenButton</apiName><shortdesc>定义全屏按钮的标签和外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义全屏按钮的标签和外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:hostComponent"><apiName>hostComponent</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoPlayer2</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:playPauseButton"><apiName>playPauseButton</apiName><shortdesc>定义播放/暂停按钮的标签和外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ToggleButton</apiValueClassifier></apiValueDef><apiDesc>定义播放/暂停按钮的标签和外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:playerControls"><apiName>playerControls</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:scrubBar"><apiName>scrubBar</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:ScrubBar</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:timeDivider"><apiName>timeDivider</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:videoDisplay"><apiName>videoDisplay</apiName><shortdesc>加载视频但不定义 VideoPlayer 组件的外观的子组件。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VideoDisplay</apiValueClassifier></apiValueDef><apiDesc>加载视频但不定义 VideoPlayer 组件的外观的子组件。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:volumeBar"><apiName>volumeBar</apiName><shortdesc>定义音量条的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.mediaClasses:VolumeBar</apiValueClassifier></apiValueDef><apiDesc>定义音量条的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VideoPlayerSkin2:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderSkin"><apiName>VSliderSkin</apiName><shortdesc>Spark VSlider 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VSlider 组件的默认外观类。缩略图外观和滑块轨道外观分别由 VSliderThumbSkin 和 VSliderTrackSkin 类定义。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VSliderSkin:VSliderSkin"><apiName>VSliderSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderSkin:dataTip"><apiName>dataTip</apiName><shortdesc>定义 Slider 的 DataTip 的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>定义 Slider 的 DataTip 的外观。若要自定义 DataTip 的外观，请创建自定义 VSliderSkin 类。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VSlider</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:thumb"><apiName>thumb</apiName><shortdesc>定义 VSliderSkin 的缩略图的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 VSliderSkin 的缩略图的外观类。默认外观类为 VSliderThumbSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:track"><apiName>track</apiName><shortdesc>定义 VSliderSkin 的滑块轨道的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 VSliderSkin 的滑块轨道的外观。默认外观类为 VSliderTrackSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:VSliderTrackSkin"><apiName>VSliderTrackSkin</apiName><shortdesc>Spark VSlider 组件的滑块轨道的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark VSlider 组件的滑块轨道的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:VSliderTrackSkin:VSliderTrackSkin"><apiName>VSliderTrackSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:VSliderTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:VSliderTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DropDownListSkin"><apiName>DropDownListSkin</apiName><shortdesc>Spark DropDownList 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark DropDownList 组件的默认外观类。DropDownList 组件的锚点按钮的外观由 DropDownListButtonSkin 类定义。  
        
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DropDownList"><linktext>spark.components.DropDownList</linktext></link><link href="spark.skins.spark.xml#DropDownListButtonSkin"><linktext>spark.skins.spark.DropDownListButtonSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:DropDownListSkin:DropDownListSkin"><apiName>DropDownListSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DropDownListSkin:background"><apiName>background</apiName><shortdesc>定义下拉列表的背景填充的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义下拉列表的背景填充的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:bgFill"><apiName>bgFill</apiName><shortdesc>下拉列表的背景填充的颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>下拉列表的背景填充的颜色。默认颜色为 0xFFFFFF。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc>下拉列表中数据项目的容器。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc>下拉列表中数据项目的容器。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dropDown"><apiName>dropDown</apiName><shortdesc>外观的下拉区域。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>外观的下拉区域。这包含边框、背景颜色、滑动条和滤镜。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DropDownList</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>DropDownList 的提示区域。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>DropDownList 的提示区域。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:openButton"><apiName>openButton</apiName><shortdesc>DropDownList 所用的锚点按钮。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>DropDownList 所用的锚点按钮。默认外观为 DropDownListButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:popUp"><apiName>popUp</apiName><shortdesc>打开下拉列表的 PopUpAnchor 控件。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:PopUpAnchor</apiValueClassifier></apiValueDef><apiDesc>打开下拉列表的 PopUpAnchor 控件。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:scroller"><apiName>scroller</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:BorderSkin"><apiName>BorderSkin</apiName><shortdesc>
  Spark Border 容器的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Spark Border 容器的默认外观类。
 
  </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:BorderSkin:BorderSkin"><apiName>BorderSkin</apiName><shortdesc>
      构造函数 
     
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      构造函数 
     
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:BorderSkin:contentGroup:get"><apiName>contentGroup</apiName><shortdesc>
      SkinnableContainer 的必需外观部分 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>
      SkinnableContainer 的必需外观部分 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:BorderSkin:hostComponent:get"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>spark.components:Border</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TextAreaSkin"><apiName>TextAreaSkin</apiName><shortdesc>Spark TextArea 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark TextArea 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:TextAreaSkin:TextAreaSkin"><apiName>TextAreaSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TextAreaSkin:background"><apiName>background</apiName><shortdesc>定义 TextArea 组件的背景的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义 TextArea 组件的背景的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:bgFill"><apiName>bgFill</apiName><shortdesc>定义背景填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义背景填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextArea</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:scroller"><apiName>scroller</apiName><shortdesc>定义用于滚动 RichEditableText 的 Scroller。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc>定义用于滚动 RichEditableText 的 Scroller。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RichEditableText</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:contentItems:get"><apiName>contentItems</apiName><shortdesc>
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      呈示焦点外框时应该包含的项。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      呈示焦点外框时应该包含的项。仅应该排除类型为 DisplayObject 或 GraphicElement 的项。将忽略其他类型的项。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TextAreaSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TabBarButtonSkin"><apiName>TabBarButtonSkin</apiName><shortdesc/><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TabBar"><linktext/></link><link href="spark.skins.spark.xml#TabBarSkin"><linktext/></link></related-links><apiConstructor id="spark.skins.spark:TabBarButtonSkin:TabBarButtonSkin"><apiName>TabBarButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TabBarButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:selectedHighlightH1"><apiName>selectedHighlightH1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:selectedHighlightH2"><apiName>selectedHighlightH2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:selectedHighlightV"><apiName>selectedHighlightV</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderTrackSkin"><apiName>HSliderTrackSkin</apiName><shortdesc>Spark HSlider 组件的滑块轨道的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark HSlider 组件的滑块轨道的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HSliderTrackSkin:HSliderTrackSkin"><apiName>HSliderTrackSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HighlightBitmapCaptureSkin"><apiName>HighlightBitmapCaptureSkin</apiName><shortdesc>
      执行目标组件的位图捕获并向位图应用滤镜的外观的基类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
      执行目标组件的位图捕获并向位图应用滤镜的外观的基类。这是 FocusSkin 和 ErrorSkin 的基类。
      
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HighlightBitmapCaptureSkin:HighlightBitmapCaptureSkin"><apiName>HighlightBitmapCaptureSkin</apiName><shortdesc>
         构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
         构造函数。
         </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:processBitmap"><apiName>processBitmap</apiName><shortdesc>
          向捕获的位图应用任何后期处理。</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
          向捕获的位图应用任何后期处理。
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaledHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:bitmap"><apiName>bitmap</apiName><shortdesc>
          目标组件的位图捕获。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.display:Bitmap"/></apiValueDef><apiDesc>
          目标组件的位图捕获。 
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:protected:borderWeight:get"><apiName>borderWeight</apiName><shortdesc>
          要放置在位图周围的填充像素数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
          要放置在位图周围的填充像素数。
          
          </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HighlightBitmapCaptureSkin:target:get"><apiName>target</apiName><shortdesc>
          要作为目标的对象。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>spark.components.supportClasses:SkinnableComponent</apiValueClassifier></apiValueDef><apiDesc>
          要作为目标的对象。
          
          </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarLeftButtonSkin"><apiName>ScrollBarLeftButtonSkin</apiName><shortdesc>Spark ScrollBar 组件的向左按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ScrollBar 组件的向左按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarLeftButtonSkin:ScrollBarLeftButtonSkin"><apiName>ScrollBarLeftButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>定义 ScrollBar 组件中的向左箭头的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>定义 ScrollBar 组件中的向左箭头的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>定义 ScrollBar 组件的向左箭头中的第一种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向左箭头中的第一种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>定义 ScrollBar 组件的向左箭头中的第二种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向左箭头中的第二种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarLeftButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultItemRenderer"><apiName>DefaultItemRenderer</apiName><shortdesc>
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion><Exclude kind="style" name="focusThickness"/><Exclude kind="style" name="focusBlendMode"/><styles><style format="Color" inherit="yes" name="symbolColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="uint">
<description>
  组件的任何符号的颜色。示例包括 CheckBox 的复选标记或滚动按钮的箭头。
   
  </description>
<default>0x000000
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="rollOverColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="uint">
<description>
  鼠标位于组件上时加亮的颜色
   
  </description>
<default>0xCEDBEF
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="uint">
<description>
  组件对焦时，对焦环的颜色
   
  </description>
<default>0x70B2EE
  
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style arrayType="uint" format="Color" inherit="yes" name="alternatingItemColors" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" theme="spark" type="Array">
<description>
  列表中项目使用的背景色。此值是由两种或更多种颜色组成的数组。列表项目的背景色将从数组中的各种颜色之间选取。 
 
  </description>
<default>undefined
 
  </default>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="unfocusedTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  组件已启用但没有焦点时文本的颜色。
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="inactiveTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  禁用组件时文本的颜色。
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="focusedTextSelectionColor" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description>
  组件已启用且有焦点时文本的颜色。
  
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="collapse,preserve" inherit="yes" name="whiteSpaceCollapse" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#whiteSpaceCollapse">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,rotate0,rotate90,rotate180,rotate270" inherit="yes" name="textRotation" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textRotation">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="textIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textIndent">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="tabStops" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#tabStops">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphStartIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphStartIndent">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphSpaceBefore" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphSpaceBefore">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphSpaceAfter" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphSpaceAfter">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="length" inherit="yes" name="paragraphEndIndent" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#paragraphEndIndent">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,romanUp,ideographicTopUp,ideographicCenterUp,ideographicTopDown,ideographicCenterDown,ascentDescentUp" inherit="yes" name="leadingModel" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#leadingModel">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="firstBaselineOffset" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#firstBaselineOffset">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,all,any,none" inherit="yes" name="breakOpportunity" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#breakOpportunity">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="tb,rl" inherit="yes" name="blockProgression" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#blockProgression">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="default,capsToSmallCaps,uppercase,lowercase,lowercaseToSmallCaps" inherit="yes" name="typographicCase" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#typographicCase">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="trackingRight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#trackingRight">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="trackingLeft" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#trackingLeft">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="interWord,distribute" inherit="yes" name="textJustify" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textJustify">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="none,underline" inherit="yes" name="textDecoration" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textDecoration">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="textAlpha" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textAlpha">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="start,end,left,right,center,justify" inherit="yes" name="textAlignLast" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textAlignLast">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="start,end,left,right,center,justify" inherit="yes" name="textAlign" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#textAlign">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="cff,normal" inherit="yes" name="renderingMode" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#renderingMode">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="locale" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#locale">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="lineThrough" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Boolean">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#lineThrough">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="lineHeight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#lineHeight">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="common,minimum,uncommon,exotic" inherit="yes" name="ligatureLevel" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#ligatureLevel">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,on,off" inherit="yes" name="kerning" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#kerning">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,prioritizeLeastAdjustment,pushInKinsoku,pushOutOnly" inherit="yes" name="justificationStyle" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#justificationStyle">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,space,eastAsian" inherit="yes" name="justificationRule" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#justificationRule">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="normal,bold" inherit="yes" name="fontWeight" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontWeight">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="normal,italic" inherit="yes" name="fontStyle" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontStyle">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Length" inherit="yes" name="fontSize" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Number">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontSize">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,device,embeddedCFF" inherit="yes" name="fontLookup" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontLookup">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style inherit="yes" name="fontFamily" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#fontFamily">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="auto,roman,ascent,descent,ideographicTop,ideographicCenter,ideographicBottom" inherit="yes" name="dominantBaseline" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#dominantBaseline">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="ltr,rtl,inherit" inherit="yes" name="direction" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#direction">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="default,proportional,tabular" inherit="yes" name="digitWidth" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#digitWidth">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="default,lining,oldStyle" inherit="yes" name="digitCase" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#digitCase">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style format="Color" inherit="yes" name="color" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="uint">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#color">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="horizontalStem,none" inherit="yes" name="cffHinting" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#cffHinting">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="superscript,subscript,inherit" inherit="yes" name="baselineShift" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="Object">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#baselineShift">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style><style enumeration="useDominantBaseline,roman,ascent,descent,ideographicTop,ideographicCenter,ideographicBottom" inherit="yes" name="alignmentBaseline" owner="spark.skins.spark:DefaultItemRenderer" playerVersion="Flash10" type="String">
<description conref="flashx.textLayout.formats.ITextLayoutFormat#alignmentBaseline">
  </description>

<playerversion>AIR 1.5
  </playerversion>
	<prolog><asCustoms><langversion>3.0
  </langversion><productversion>Flex 4
 </productversion></asCustoms></prolog></style></styles></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IDataRenderer</apiBaseInterface><apiBaseInterface>spark.components:IItemRenderer</apiBaseInterface><apiBaseClassifier>mx.core:UIComponent</apiBaseClassifier></apiClassifierDef><apiDesc>
  
 
  <p>通过创建自定义的项呈示器，您可以覆盖默认项呈示器。</p>
 
  </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer</linktext></link><link href="spark.components.xml#IItemRenderer"><linktext>spark.components.IItemRenderer</linktext></link><link href="spark.components.supportClasses.xml#ItemRenderer"><linktext/></link></related-links><adobeApiEvent id="spark.skins.spark:DefaultItemRenderer_mx.events.FlexEvent.DATA_CHANGE_dataChange"><apiName>dataChange</apiName><shortdesc>
  当 data 属性更改时进行分派。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><adobeApiEventDetail><adobeApiEventDef><apiEventType>mx.events.FlexEvent.DATA_CHANGE</apiEventType><adobeApiEventClassifier>mx.events.FlexEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
  当 <codeph>data</codeph> 属性更改时进行分派。
 
  <p>当您使用组件作为项呈示器时，<codeph>data</codeph> 属性将包含要显示的数据。您可以侦听此事件，并在 <codeph>data</codeph> 属性更改时更新组件。</p>
 
  </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="spark.skins.spark:DefaultItemRenderer:DefaultItemRenderer"><apiName>DefaultItemRenderer</apiName><shortdesc>
      构造函数。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
      构造函数。
      
      </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultItemRenderer:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>
      可选项呈示器标签组件。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.supportClasses:TextBase</apiValueClassifier></apiValueDef><apiDesc>
      可选项呈示器标签组件。此组件用于确定项呈示器的主机组件中 <codeph>baselinePosition</codeph> 属性的值。 
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:data:get"><apiName>data</apiName><shortdesc>
      由 IDataRenderer 接口定义的 data 属性实现。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="9"/><apiPlatform description="" name="AIR" version="1.1"/><apiTool name="Flex" version="3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef><apiDesc>
      由 IDataRenderer 接口定义的 <codeph>data</codeph> 属性实现。设置此属性后，它将存储值并使组件失效以触发组件重新布局。
     
      </apiDesc></apiValueDetail><related-links><link href="" invalidHref="mx.core.IDataRenderer.xml"><linktext>mx.core.IDataRenderer</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:dragging:get"><apiName>dragging</apiName><shortdesc>
      
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
      
      <codeph/>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:itemIndex:get"><apiName>itemIndex</apiName><shortdesc>
      
      </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/><apiDefaultValue>0
     </apiDefaultValue></apiValueDef><apiDesc>
      
      
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:label:get"><apiName>label</apiName><shortdesc>
      
      要在项呈示器中显示的 String。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>""    
     </apiDefaultValue></apiValueDef><apiDesc>
      
      要在项呈示器中显示的 String。 
           <p>项呈示器的主机组件可以使用 <codeph>itemToLabel()</codeph> 方法将数据项目转换为 String 以便项呈示器可以将其显示。 </p>
     
      <p>对于诸如 List 和 ButtonBar 等控件，可以使用 <codeph>labelField</codeph> 或 <codeph>labelFunction</codeph> 属性指定包含 String 的数据项目的字段。否则，主机组件使用 <codeph>toString()</codeph> 方法将数据项目转换为 String。 </p>
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:selected:get"><apiName>selected</apiName><shortdesc>
      
      如果项呈示器可以将其自身显示为已选中，则包含 true。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
     </apiDefaultValue></apiValueDef><apiDesc>
      
      如果项呈示器可以将其自身显示为已选中，则包含 <codeph>true</codeph>。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultItemRenderer:showsCaret:get"><apiName>showsCaret</apiName><shortdesc>
      
      如果项目渲染器可以将其自身显示为已获取焦点，则包含 true。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false  
     </apiDefaultValue></apiValueDef><apiDesc>
      
      如果项目渲染器可以将其自身显示为已获取焦点，则包含 <codeph>true</codeph>。 
      
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarTrackSkin"><apiName>HScrollBarTrackSkin</apiName><shortdesc>Spark HScrollBar 组件上的滑块轨道的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark HScrollBar 组件上的滑块轨道的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HScrollBarTrackSkin:HScrollBarTrackSkin"><apiName>HScrollBarTrackSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarTrackSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarTrackSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ComboBoxButtonSkin"><apiName>ComboBoxButtonSkin</apiName><shortdesc>Spark ComboBox 组件上的锚点按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ComboBox 组件上的锚点按钮的默认外观类。  
    </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#ComboBox"><linktext>spark.components.ComboBox</linktext></link><link href="spark.skins.spark.xml#ComboBoxSkin"><linktext>spark.skins.spark.ComboBoxSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:ComboBoxButtonSkin:ComboBoxButtonSkin"><apiName>ComboBoxButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ComboBoxButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>在锚点按钮中显示的箭头图形。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>在锚点按钮中显示的箭头图形。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>箭头的渐变填充的第一部分。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>箭头的渐变填充的第一部分。默认 Alpha 为 0.6。默认颜色（如果 0x000000）。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>箭头的渐变填充的第二部分。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>箭头的渐变填充的第二部分。默认 Alpha 为 0.6。默认颜色（如果 0x000000）。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:colorizeExclusions:get"><apiName>colorizeExclusions</apiName><shortdesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:symbolItems:get"><apiName>symbolItems</apiName><shortdesc>
         
     应该由 symbolColor 样式定义其 color 属性的项目的名称。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
     应该由 <codeph>symbolColor</codeph> 样式定义其 <codeph>color</codeph> 属性的项目的名称。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ComboBoxButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarDownButtonSkin"><apiName>ScrollBarDownButtonSkin</apiName><shortdesc>Spark ScrollBar 组件的向下按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ScrollBar 组件的向下按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarDownButtonSkin:ScrollBarDownButtonSkin"><apiName>ScrollBarDownButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>定义 ScrollBar 组件中的向下箭头的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>定义 ScrollBar 组件中的向下箭头的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>定义 ScrollBar 组件的向下箭头中的第一种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向下箭头中的第一种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>定义 ScrollBar 组件的向下箭头中的第二种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向下箭头中的第二种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarDownButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerIncrementButtonSkin"><apiName>SpinnerIncrementButtonSkin</apiName><shortdesc>Spark Spinner 组件的向上按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark Spinner 组件的向上按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SpinnerIncrementButtonSkin:SpinnerIncrementButtonSkin"><apiName>SpinnerIncrementButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>定义向上箭头的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>定义向上箭头的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:arrowFill"><apiName>arrowFill</apiName><shortdesc>定义向上箭头的填充。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义向上箭头的填充。默认颜色为 0x000000。默认 Alpha 为 0.8。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:symbolItems:get"><apiName>symbolItems</apiName><shortdesc>
         
     应该由 symbolColor 样式定义其 color 属性的项目的名称。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
     应该由 <codeph>symbolColor</codeph> 样式定义其 <codeph>color</codeph> 属性的项目的名称。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerIncrementButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollerSkin"><apiName>ScrollerSkin</apiName><shortdesc>Spark Scroller 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark Scroller 组件的默认外观类。 
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollerSkin:ScrollerSkin"><apiName>ScrollerSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:ScrollerSkin:beginHighlightBitmapCapture"><apiName>beginHighlightBitmapCapture</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="spark.skins.spark:ScrollerSkin:endHighlightBitmapCapture"><apiName>endHighlightBitmapCapture</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:ScrollerSkin:horizontalScrollBar"><apiName>horizontalScrollBar</apiName><shortdesc>确定水平 ScrollBar 是否在 ScrollerSkin 中可见。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HScrollBar</apiValueClassifier></apiValueDef><apiDesc>确定水平 ScrollBar 是否在 ScrollerSkin 中可见。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:verticalScrollBar"><apiName>verticalScrollBar</apiName><shortdesc>确定垂直 ScrollBar 是否在 ScrollerSkin 中可见。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:VScrollBar</apiValueClassifier></apiValueDef><apiDesc>确定垂直 ScrollBar 是否在 ScrollerSkin 中可见。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SkinnableDataContainerSkin"><apiName>SkinnableDataContainerSkin</apiName><shortdesc>Spark SkinnableDataContainer 容器的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark SkinnableDataContainer 容器的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SkinnableDataContainerSkin:SkinnableDataContainerSkin"><apiName>SkinnableDataContainerSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:SkinnableDataContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableDataContainerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarSkin"><apiName>HScrollBarSkin</apiName><shortdesc>Spark HScrollBar 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark HScrollBar 组件的默认外观类。缩略图外观和滑块轨道外观分别由 HScrollBarThumbSkin 和 HScrollBarTrackSkin 类定义。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HScrollBarSkin:HScrollBarSkin"><apiName>HScrollBarSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>定义 HScrollBarSkin 的向左按钮的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 HScrollBarSkin 的向左按钮的外观类。默认外观类为 ScrollBarLeftButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HScrollBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>定义 HScrollBarSkin 的向右按钮的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 HScrollBarSkin 的向右按钮的外观类。默认外观类为 ScrollBarRightButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:thumb"><apiName>thumb</apiName><shortdesc>定义 HScrollBarSkin 的缩略图的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 HScrollBarSkin 的缩略图的外观类。默认外观类为 HScrollBarThumbSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:track"><apiName>track</apiName><shortdesc>定义 HScrollBarSkin 的滑块轨道的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 HScrollBarSkin 的滑块轨道的外观类。默认外观类为 HScrollBarTrackSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerSkin"><apiName>SpinnerSkin</apiName><shortdesc>Spark Spinner 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark Spinner 组件的默认外观类。Spinner 组件上的向下按钮和向上按钮的外观分别由 SpinnerDecrementButtonSkin 和 SpinnerIncrementButtonSkin 类定义。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SpinnerSkin:SpinnerSkin"><apiName>SpinnerSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>定义向下按钮的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义向下按钮的外观。默认外观类为 SpinnerDecrementButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Spinner</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>定义向上按钮的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义向上按钮的外观。默认外观类为 SpinnerIncrementButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:NumericStepperSkin"><apiName>NumericStepperSkin</apiName><shortdesc>Spark NumericStepper 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark NumericStepper 组件的默认外观类。NumericStepper 组件上的文本输入字段的外观由 NumericStepperTextInputSkin 类定义。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:NumericStepperSkin:NumericStepperSkin"><apiName>NumericStepperSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:NumericStepperSkin:decrementButton"><apiName>decrementButton</apiName><shortdesc>定义 NumericStepper 组件的向下按钮的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 NumericStepper 组件的向下按钮的外观。默认类为 SpinnerDecrementButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:NumericStepper</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:incrementButton"><apiName>incrementButton</apiName><shortdesc>定义 NumericStepper 组件的向上按钮的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 NumericStepper 组件的向上按钮的外观。默认类为 SpinnerIncrementButtonSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:textDisplay"><apiName>textDisplay</apiName><shortdesc>定义 NumericStepper 组件的 TextInput 子组件的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TextInput</apiValueClassifier></apiValueDef><apiDesc>定义 NumericStepper 组件的 TextInput 子组件的外观。默认的类为 NumericStepperTextInputSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:NumericStepperSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HScrollBarThumbSkin"><apiName>HScrollBarThumbSkin</apiName><shortdesc>Spark HScrollBar 组件的缩略图的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark HScrollBar 组件的缩略图的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HScrollBarThumbSkin:HScrollBarThumbSkin"><apiName>HScrollBarThumbSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HScrollBarThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HScrollBarThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:RadioButtonSkin"><apiName>RadioButtonSkin</apiName><shortdesc>Spark RadioButton 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark RadioButton 组件的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:RadioButtonSkin:RadioButtonSkin"><apiName>RadioButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:RadioButtonSkin:dot"><apiName>dot</apiName><shortdesc>定义 RadioButton 的点的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>定义 RadioButton 的点的外观。若要自定义点的外观，请创建自定义 RadioButtonSkin 类。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:dotFill"><apiName>dotFill</apiName><shortdesc>定义点的填充的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义点的填充的外观。默认颜色为 0x000000。默认的 Alpha 为 0.9。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:RadioButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>定义 RadioButton 组件中点旁边的文本。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>定义 RadioButton 组件中点旁边的文本。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:focusSkinExclusions:get"><apiName>focusSkinExclusions</apiName><shortdesc>
         
      呈示焦点外框时应该包含的项。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
         
      呈示焦点外框时应该包含的项。仅应该排除类型为 DisplayObject 或 GraphicElement 的项。将忽略其他类型的项。
      
      </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:RadioButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ApplicationSkin"><apiName>ApplicationSkin</apiName><shortdesc>Spark Application 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark Application 组件的默认外观类。 
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ApplicationSkin:ApplicationSkin"><apiName>ApplicationSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>使用构成应用程序的背景的实色填充的矩形。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>使用构成应用程序的背景的实色填充的矩形。可以将填充的颜色设置为 Application 的 backgroundColor 属性。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:bgRectFill"><apiName>bgRectFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:controlBarGroup"><apiName>controlBarGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc> 
     引用此外观所应用到的组件的强类型属性。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Application</apiValueClassifier></apiValueDef><apiDesc> 
     引用此外观所应用到的组件的强类型属性。
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:topGroup"><apiName>topGroup</apiName><shortdesc>应用程序控件栏</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>应用程序控件栏</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ApplicationSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderSkin"><apiName>HSliderSkin</apiName><shortdesc>Spark HSlider 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark HSlider 组件的默认外观类。缩略图外观和滑块轨道外观分别由 HSliderThumbSkin 和 HSliderTrackSkin 类定义。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HSliderSkin:HSliderSkin"><apiName>HSliderSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderSkin:dataTip"><apiName>dataTip</apiName><shortdesc>定义 Slider 的 DataTip 的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc>定义 Slider 的 DataTip 的外观。若要自定义 DataTip 的外观，请创建自定义 HSliderSkin 类。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:HSlider</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:thumb"><apiName>thumb</apiName><shortdesc>定义 HSliderSkin 的缩略图的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 HSliderSkin 的缩略图的外观类。默认外观类为 HSliderThumbSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:track"><apiName>track</apiName><shortdesc>定义 HSliderSkin 的滑块轨道的外观类。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc>定义 HSliderSkin 的滑块轨道的外观类。默认外观类为 HSliderTrackSkin。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SpinnerDecrementButtonSkin"><apiName>SpinnerDecrementButtonSkin</apiName><shortdesc>Spark Spinner 组件的向下按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark Spinner 组件的向下按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SpinnerDecrementButtonSkin:SpinnerDecrementButtonSkin"><apiName>SpinnerDecrementButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>定义向下箭头的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>定义向下箭头的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:arrowFill"><apiName>arrowFill</apiName><shortdesc>定义向下箭头的填充。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义向下箭头的填充。默认颜色为 0x000000。默认 Alpha 为 0.8。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SpinnerDecrementButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:SkinnableContainerSkin"><apiName>SkinnableContainerSkin</apiName><shortdesc>Spark SkinnableContainer 容器的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark SkinnableContainer 容器的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:SkinnableContainerSkin:SkinnableContainerSkin"><apiName>SkinnableContainerSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SkinnableContainerSkin:bgFill"><apiName>bgFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:SkinnableContainer</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SkinnableContainerSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ScrollBarUpButtonSkin"><apiName>ScrollBarUpButtonSkin</apiName><shortdesc>Spark ScrollBar 组件的向上按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ScrollBar 组件的向上按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ScrollBarUpButtonSkin:ScrollBarUpButtonSkin"><apiName>ScrollBarUpButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>定义 ScrollBar 组件中的向上箭头的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>定义 ScrollBar 组件中的向上箭头的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>定义 ScrollBar 组件的向上箭头中的第一种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向上箭头中的第一种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>定义 ScrollBar 组件的向上箭头中的第二种填充颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>定义 ScrollBar 组件的向上箭头中的第二种填充颜色。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ScrollBarUpButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:PanelSkin"><apiName>PanelSkin</apiName><shortdesc>Spark Panel 容器的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark Panel 容器的默认外观类。  
</apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:PanelSkin:PanelSkin"><apiName>PanelSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:PanelSkin:background"><apiName>background</apiName><shortdesc>定义 PanelSkin 类的背景的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义 PanelSkin 类的背景的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:backgroundFill"><apiName>backgroundFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:bottomGroup"><apiName>bottomGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:bottomGroupMask"><apiName>bottomGroupMask</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:bottomMaskRect"><apiName>bottomMaskRect</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:contents"><apiName>contents</apiName><shortdesc>包含标题栏内容和控件栏的垂直堆栈</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc>包含标题栏内容和控件栏的垂直堆栈</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:controlBarGroup"><apiName>controlBarGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:dropShadow"><apiName>dropShadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:RectangularDropShadow</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Panel</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:tbDiv"><apiName>tbDiv</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:tbFill"><apiName>tbFill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:tbHilite"><apiName>tbHilite</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:titleDisplay"><apiName>titleDisplay</apiName><shortdesc>定义 PanelSkin 类的标题栏的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>定义 PanelSkin 类的标题栏的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:topGroup"><apiName>topGroup</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:topGroupMask"><apiName>topGroupMask</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Group</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:topMaskRect"><apiName>topMaskRect</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:PanelSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:FocusSkin"><apiName>FocusSkin</apiName><shortdesc>
  Spark 组件的焦点外观。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>spark.skins.spark:HighlightBitmapCaptureSkin</apiBaseClassifier></apiClassifierDef><apiDesc>
  Spark 组件的焦点外观。
  
  </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:FocusSkin:FocusSkin"><apiName>FocusSkin</apiName><shortdesc>
     构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
     构造函数。
     </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:FocusSkin:protected:borderWeight:get"><apiName>borderWeight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DefaultButtonSkin"><apiName>DefaultButtonSkin</apiName><shortdesc>Spark DefaultButton 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark DefaultButton 组件的默认外观类。DefaultButton 组件是在诸如 Alert 的面板中使用的。它由容器上的 defaultButton 属性定义。  
</apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:DefaultButtonSkin:DefaultButtonSkin"><apiName>DefaultButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DefaultButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.supportClasses.ButtonBase#labelDisplay"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DefaultButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarFirstButtonSkin"><apiName>ButtonBarFirstButtonSkin</apiName><shortdesc>Spark ButtonBar 组件中第一个按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ButtonBar 组件中第一个按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonBarFirstButtonSkin:ButtonBarFirstButtonSkin"><apiName>ButtonBarFirstButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>可以定义 ButtonBar 组件中的第一个按钮的标签的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>可以定义 ButtonBar 组件中的第一个按钮的标签的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarFirstButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:DropDownListButtonSkin"><apiName>DropDownListButtonSkin</apiName><shortdesc>Spark DropDownList 组件上的锚点按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark DropDownList 组件上的锚点按钮的默认外观类。  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#DropDownList"><linktext>spark.components.DropDownList</linktext></link><link href="spark.skins.spark.xml#DropDownListSkin"><linktext>spark.skins.spark.DropDownListSkin</linktext></link></related-links><apiConstructor id="spark.skins.spark:DropDownListButtonSkin:DropDownListButtonSkin"><apiName>DropDownListButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:DropDownListButtonSkin:arrow"><apiName>arrow</apiName><shortdesc>在锚点按钮中显示的箭头图形。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Path</apiValueClassifier></apiValueDef><apiDesc>在锚点按钮中显示的箭头图形。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:arrowFill1"><apiName>arrowFill1</apiName><shortdesc>箭头的渐变填充的第一部分。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>箭头的渐变填充的第一部分。默认 Alpha 为 0.6。默认颜色（如果 0x000000）。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:arrowFill2"><apiName>arrowFill2</apiName><shortdesc>箭头的渐变填充的第二部分。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:GradientEntry"/></apiValueDef><apiDesc>箭头的渐变填充的第二部分。默认 Alpha 为 0.6。默认颜色（如果 0x000000）。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:DropDownListButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:HSliderThumbSkin"><apiName>HSliderThumbSkin</apiName><shortdesc>Spark HSlider 组件的缩略图的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark HSlider 组件的缩略图的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:HSliderThumbSkin:HSliderThumbSkin"><apiName>HSliderThumbSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:HSliderThumbSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Button</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:HSliderThumbSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ListSkin"><apiName>ListSkin</apiName><shortdesc>Spark List 组件的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark List 组件的默认外观类。  
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#List"><linktext>spark.components.List</linktext></link></related-links><apiConstructor id="spark.skins.spark:ListSkin:ListSkin"><apiName>ListSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:ListSkin:background"><apiName>background</apiName><shortdesc>定义基于列表的组件的背景外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc>定义基于列表的组件的背景外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:bgFill"><apiName>bgFill</apiName><shortdesc>定义背景的颜色。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColor"/></apiValueDef><apiDesc>定义背景的颜色。默认颜色为 0xFFFFFF。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:borderStroke"><apiName>borderStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.graphics:SolidColorStroke"/></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc>数据项目的容器。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc>数据项目的容器。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:dropIndicator"><apiName>dropIndicator</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiType value="mx.core:ClassFactory"/></apiValueDef><apiDesc><codeph/><codeph/><codeph/><codeph/><codeph/></apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:List</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
     </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:scroller"><apiName>scroller</apiName><shortdesc>要将滚动条添加到列表中的 Scroller 组件。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Scroller</apiValueClassifier></apiValueDef><apiDesc>要将滚动条添加到列表中的 Scroller 组件。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ListSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:TabBarSkin"><apiName>TabBarSkin</apiName><shortdesc/><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.components.supportClasses:Skin</apiBaseClassifier></apiClassifierDef><apiDesc>  
</apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#TabBar"><linktext/></link><link href="spark.components.xml#ButtonBarButton"><linktext>spark.components.ButtonBarButton</linktext></link><link href="spark.skins.spark.xml#TabBarButtonSkin"><linktext/></link></related-links><apiConstructor id="spark.skins.spark:TabBarSkin:TabBarSkin"><apiName>TabBarSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:TabBarSkin:dataGroup"><apiName>dataGroup</apiName><shortdesc conref="spark.components.SkinnableDataContainer#dataGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:DataGroup</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.SkinnableDataContainer#dataGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:TabBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:TabBarSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:ButtonBarLastButtonSkin"><apiName>ButtonBarLastButtonSkin</apiName><shortdesc>Spark ButtonBar 组件中最后一个按钮的默认外观类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark ButtonBar 组件中最后一个按钮的默认外观类。  
        
      </apiDesc></apiClassifierDetail><apiConstructor id="spark.skins.spark:ButtonBarLastButtonSkin:ButtonBarLastButtonSkin"><apiName>ButtonBarLastButtonSkin</apiName><shortdesc>构造函数。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>构造函数。</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="spark.skins.spark:ButtonBarLastButtonSkin:protected:updateDisplayList"><apiName>updateDisplayList</apiName><shortdesc>
         </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unscaledWidth</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>unscaleHeight</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
         </apiDesc></apiOperationDetail></apiOperation><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:border"><apiName>border</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:fill"><apiName>fill</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:highlight"><apiName>highlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:highlightStroke"><apiName>highlightStroke</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:hldownstroke1"><apiName>hldownstroke1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:hldownstroke2"><apiName>hldownstroke2</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:ButtonBarButton</apiValueClassifier></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
         </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:labelDisplay"><apiName>labelDisplay</apiName><shortdesc>可以定义 ButtonBar 组件中最后一个按钮的标签的外观。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components:Label</apiValueClassifier></apiValueDef><apiDesc>可以定义 ButtonBar 组件中最后一个按钮的标签的外观。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:lowlight"><apiName>lowlight</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:shadow"><apiName>shadow</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.primitives:Rect</apiValueClassifier></apiValueDef><apiDesc/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:colorizeExclusions:get"><apiName>colorizeExclusions</apiName><shortdesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc conref="spark.skins.SparkSkin#colorizeExclusions"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:ButtonBarLastButtonSkin:moduleFactory:set"><apiName>moduleFactory</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="mx.core:IFlexModuleFactory"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>