<?xml version="1.0"?>
<apiPackage id="spark.utils"><apiName>spark.utils</apiName><apiDetail/><apiClassifier id="spark.utils:TextFlowUtil"><apiName>TextFlowUtil</apiName><shortdesc>
  TextFlowUtil 是提供用于导入和导出 TextFlow 方法以及 Text Layout Framework 所用的标记语言的实用程序类。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  TextFlowUtil 是提供用于导入和导出 TextFlow 方法以及 Text Layout Framework 所用的标记语言的实用程序类。
  
  </apiDesc></apiClassifierDetail><apiOperation id="spark.utils:TextFlowUtil:export"><apiName>export</apiName><shortdesc>
      使用 XML 的形式，将 TextFlow 导入到 Text Layout Framework 所用的标记语言中。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>包含 Text Layout Framework 标记语言的 XML。
      
      </apiDesc><apiType value="XML"/></apiReturn><apiParam><apiItemName>textFlow</apiItemName><apiType value="flashx.textLayout.elements:TextFlow"/><apiDesc>要使用 Text Layout Framework 标记语言进行导出的 TextFlow。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      使用 XML 的形式，将 TextFlow 导入到 Text Layout Framework 所用的标记语言中。
     
      <p>导出的 XML 的根标签将是
      <pre>
      &lt;TextFlow xmlns="http://ns.adobe.com/textLayout/2008" ...>
      </pre>
      </p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.utils:TextFlowUtil:importFromString"><apiName>importFromString</apiName><shortdesc>
      通过导入（即，分析）包含 Text Layout Framework 所用的标记语言的 String，创建 TextFlow。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>根据该标记创建的新 TextFlow 实例。
      
      </apiDesc><apiType value="flashx.textLayout.elements:TextFlow"/></apiReturn><apiParam><apiItemName>markup</apiItemName><apiType value="String"/><apiDesc>要导入的标记 String。
     
      </apiDesc></apiParam><apiParam><apiItemName>whiteSpaceCollapse</apiItemName><apiType value="String"/><apiData>collapse</apiData><apiDesc>指示是否应折叠或保留标记中的空白的 String。可能的值为 flashx.textLayout.formats.WhiteSpaceCollapse 类中的 <codeph>WhiteSpaceCollapse.COLLAPSE</codeph> 和 <codeph>WhiteSpaceCollapse.PRESERVE</codeph>。默认值为 <codeph>WhiteSpaceCollapse.COLLAPSE</codeph>。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      通过导入（即，分析）包含 Text Layout Framework 所用的标记语言的 String，创建 TextFlow。
      
      <p>标记字符串的一个示例是
      <pre>
      "&lt;TextFlow xmlns='http://ns.adobe.com/textLayout/2008'>
      <p><ph>Hello, </ph><ph fontWeight="bold">World!</ph></p>&lt;/TextFlow>"
      </pre>
      </p>
     
      <p>但是，您可以使用 terser 标记，例如
      <pre>"Hello, <ph fontWeight="bold">World!</ph>"</pre>。在正确的命名空间中，将使用 TextFlow 标签回绕它，并在需要时自动插入跨距和段落标签，以遵守 TextFlow 的结构。</p>
     
      <p>如果您自己指定 TextFlow 标签，则它必须处于运行时 Text Layout Framework 标记（即<codeph>“http://ns.adobe.com/textLayout/2008”</codeph>）的正确的 XML 命名空间中。</p>
     
      <p>不正确的标记将导致此方法引发各种异常。该错误消息将包含关于无法分析它的原因的信息。</p>
     
      </apiDesc></apiOperationDetail></apiOperation><apiOperation id="spark.utils:TextFlowUtil:importFromXML"><apiName>importFromXML</apiName><shortdesc>
      </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>根据该标记创建的新 TextFlow 实例。
      
      </apiDesc><apiType value="flashx.textLayout.elements:TextFlow"/></apiReturn><apiParam><apiItemName>markup</apiItemName><apiType value="XML"/><apiDesc>要导入的标记 XML。
     
      </apiDesc></apiParam><apiParam><apiItemName>whiteSpaceCollapse</apiItemName><apiType value="String"/><apiData>collapse</apiData><apiDesc>指示是否应折叠或保留标记中的空白的 String。可能的值为 flashx.textLayout.formats.WhiteSpaceCollapse 类中的 <codeph>WhiteSpaceCollapse.COLLAPSE</codeph> 和 <codeph>WhiteSpaceCollapse.PRESERVE</codeph>。默认值为 <codeph>WhiteSpaceCollapse.COLLAPSE</codeph>。
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      
      
      <p>标记 XML 的一个示例是
      <pre>
      &lt;TextFlow xmlns='http://ns.adobe.com/textLayout/2008'>
        <p><ph>Hello, </ph><ph fontWeight="bold">World!</ph></p>
      &lt;/TextFlow>
      </pre>
      </p>
     
      <p>
      <pre>
      "Hello, &lt;span fontWeight='bold'>World!&lt;/span>"
      </pre>
      <codeph/></p>
     
      <p>如果您自己指定 TextFlow 标签，则它必须处于运行时 Text Layout Framework 标记（即<codeph>“http://ns.adobe.com/textLayout/2008”</codeph>）的正确的 XML 命名空间中。</p>
     
      <p/>
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="spark.utils:LabelUtil"><apiName>LabelUtil</apiName><shortdesc>
  LabelUtil 类供组件使用，用于确定要为其呈示器或子部件显示的正确文本。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  LabelUtil 类供组件使用，用于确定要为其呈示器或子部件显示的正确文本。 
  
  </apiDesc></apiClassifierDetail><apiOperation id="spark.utils:LabelUtil:itemToLabel"><apiName>itemToLabel</apiName><shortdesc>
      支持项呈示器的组件所用的函数，用于确定项呈示器应该为某个数据项目显示的正确文本。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>数据项目的 String 表示形式 
     
      </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="Object"/><apiDesc>数据项目。Null 项目返回空字符串。 
     
      </apiDesc></apiParam><apiParam><apiItemName>labelField</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>要返回的数据项目中的字段。
     
      </apiDesc></apiParam><apiParam><apiItemName>labelFunction</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>将数据项目当作单一参数并返回一个 String 的函数。 
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      支持项呈示器的组件所用的函数，用于确定项呈示器应该为某个数据项目显示的正确文本。如果未指定 <codeph>labelField</codeph> 或 <codeph>labelFunction</codeph> 参数，则会调用数据项目的 <codeph>toString()</codeph> 方法以返回数据项目的字符串表示形式。
      
      <p><codeph>labelFunction</codeph> 属性采用对函数的引用。 函数仅使用数据提供程序中的某个项目作为唯一参数，并返回一个 String：</p>
      <pre>
      myLabelFunction(item:Object):String</pre>
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="spark.utils:BitmapUtil"><apiName>BitmapUtil</apiName><shortdesc>
  此类提供与位图相关的实用程序函数 
  
  </shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
  此类提供与位图相关的实用程序函数 
  
  </apiDesc></apiClassifierDetail><apiOperation id="spark.utils:BitmapUtil:getSnapshot"><apiName>getSnapshot</apiName><shortdesc>
      创建目标对象的 BitmapData 表示形式。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool name="Flex" version="4"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>包含该图像的 BitmapData 对象。
      
      </apiDesc><apiType value="flash.display:BitmapData"/></apiReturn><apiParam><apiItemName>target</apiItemName><apiType value="mx.core:IUIComponent"/><apiDesc>在结果 BitmapData 中要捕获的对象  
     
      </apiDesc></apiParam></apiOperationDef><apiDesc>
      创建目标对象的 BitmapData 表示形式。
     
      </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>