////////////////////////////////////////////////////////////////////////////////
//
//  ADOBE SYSTEMS INCORPORATED
//  Copyright 2009 Adobe Systems Incorporated
//  All Rights Reserved.
//
//  NOTICE: Adobe permits you to use, modify, and distribute this file
//  in accordance with the terms of the license agreement accompanying it.
//
////////////////////////////////////////////////////////////////////////////////

package spark.accessibility
{

import flash.accessibility.Accessibility;
import flash.events.Event;

import mx.accessibility.AccImpl;
import mx.core.UIComponent;
import mx.core.mx_internal;

import spark.components.Spinner;

use namespace mx_internal;


/**
 *  SpinnerAccImpl is a subclass of AccessibilityImplementation
 *  which implements accessibility for the Spinner class.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 */
public class SpinnerAccImpl extends AccImpl
{
    include "../core/Version.as";

    //--------------------------------------------------------------------------
    //
    //  Class constants
    //
    //--------------------------------------------------------------------------

    /**
     *  @private
     */
    private static const EVENT_OBJECT_VALUECHANGE:uint = 0x800E;

    /**
     *  @private
     */
    private static const EVENT_OBJECT_STATECHANGE:uint = 0x800a;

    /**
     *  @private
     */
    private static const ROLE_SYSTEM_PUSHBUTTON:uint = 0x2B;

    //--------------------------------------------------------------------------
    //
    //  Class methods
    //
    //--------------------------------------------------------------------------

    /**
     *  Enables accessibility in the Spinner class.
     *
     *  <p>This method is called by application startup code
     *  that is autogenerated by the MXML compiler.
     *  Afterwards, when instances of Spinner are initialized,
     *  their <code>accessibilityImplementation</code> property
     *  will be set to an instance of this class.</p>
     *
     *  @langversion 3.0
     *  @playerversion Flash 10
     *  @playerversion AIR 1.5
     *  @productversion Flex 4
     */
    public static function enableAccessibility():void
    {
        Spinner.createAccessibilityImplementation = 
            createAccessibilityImplementation;
    }

    /**
     *  @private
     *  Creates a Spinner's AccessibilityImplementation object.
     *  This method is called from UIComponent's
     *  initializeAccessibility() method.
     */
    mx_internal static function createAccessibilityImplementation(
                                component:UIComponent):void
    {
        component.accessibilityImplementation =
            new SpinnerAccImpl(component);
    }

    //--------------------------------------------------------------------------
    //
    //  Constructor
    //
    //--------------------------------------------------------------------------

    /**
     *  Constructor.
     *
     *  @param master The UIComponent instance that this AccImpl instance
     *  is making accessible.
     *
     *  @langversion 3.0
     *  @playerversion Flash 10
     *  @playerversion AIR 1.5
     *  @productversion Flex 4
     */
    public function SpinnerAccImpl(master:UIComponent)
    {
        super(master);

        role = 0x34; //ROLE_SYSTEM_SPINBUTTON
    }

    //--------------------------------------------------------------------------
    //
    //  Overridden properties: AccImpl
    //
    //--------------------------------------------------------------------------

    //----------------------------------
    //  eventsToHandle
    //----------------------------------

    /**
     *  @private
     *    Array of events that we should listen for from the master component.
     */
    override protected function get eventsToHandle():Array
    {
        return super.eventsToHandle.concat(["change"]);
    }

    //--------------------------------------------------------------------------
    //
    //  Overridden methods: AccessibilityImplementation
    //
    //--------------------------------------------------------------------------

    /**
     *  @private
     *  Gets the role for the component.
     *
     *  @param childID children of the component
     */
    override public function get_accRole(childID:uint):uint
    {
        return childID == 0 ? role : ROLE_SYSTEM_PUSHBUTTON;
    }

     /**
     *  @private
     *  Method to return an array of childIDs. For the Spinner component the IDs
     *  for the decrement and increment buttons are returned.
     *
     *  @return Array
     */
    override public function getChildIDArray():Array
    {
        return createChildIDArray(2);
    }

    /**
     *  @private
     *  IAccessible method for returning the bounding box of the spinbutton parts.
     *
     *  @param childID uint
     *
     *  @return Location Object
     */
    override public function accLocation(childID:uint):*
    {
        switch(childID)
        {
            case 0:
            {
                return master;
                break;
            }
            case 1:
            {
                return Spinner(master).incrementButton;
                break
            }
            case 2:
            {
                return Spinner(master).decrementButton;
                break
            }
        }
    }

    /**
     *  @private
     *  IAccessible method for returning the state of the SPinner.
     *  States are predefined for all the components in MSAA.
     *  Values are assigned to each state.
     *
     *  @param childID uint
     *
     *  @return State uint
     */
    override public function get_accState(childID:uint):uint
    {
        var accState:uint = getState(childID);
        return accState;
    }


    /**
     *  @private
     *  IAccessible method for returning the numeric value of the Spinner
     *
     *  @param childID uint
     *
     *  @return Value String
     */
    override public function get_accValue(childID:uint):String
    {
        return Spinner(master).value.toString();
    }

    //--------------------------------------------------------------------------
    //
    //  Overridden event handlers: AccImpl
    //
    //--------------------------------------------------------------------------

     /**
     *  Returns the name of the accessible component.
     *  All subclasses must implement this
     *  instead of implementing get_accName().
     *
     *  @langversion 3.0
     *  @playerversion Flash 10
     *  @playerversion AIR 1.5
     *  @productversion Flex 4
     */
    override protected function getName(childID:uint):String
    {
        if (childID == 1)
            return "More";
        if (childID == 2)
            return "Less";
        else
            return "";
    }

    /**
     *  @private
     *  Override the generic event handler.
     *  All AccImpl must implement this
     *  to listen for events from its master component.
     */
    override protected function eventHandler(event:Event):void
    {
        // Let AccImpl class handle the events
        // that all accessible UIComponents understand.
        $eventHandler(event);

        switch (event.type)
        {
            case "change":
            {
                Accessibility.sendEvent(master, 0,
                                        EVENT_OBJECT_VALUECHANGE, true);
                Accessibility.sendEvent(master, 0,
                                        EVENT_OBJECT_STATECHANGE, true);
                break;
            }
        }
    }
}

}
