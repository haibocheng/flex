<?xml version="1.0"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2006-2007 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<project name="sparkskins" default="main" basedir=".">

	<property name="FLEX_HOME" location="${basedir}/../../.."/>

	<property file="${FLEX_HOME}/build.properties"/>

    <!-- If you change this, update <target-player/> in the <compc/> tasks. -->
    <property name="local.playerglobal.version" value="10"/>

	<target name="main" depends="clean,compile" description="Clean build of sparkskins.swc"/>

	<target name="clean">
		<delete failonerror="false">
			<fileset file="${basedir}/bundles.properties"/>
			<fileset dir="${FLEX_HOME}/frameworks/libs">
				<include name="sparkskins.swc"/>
				<include name="sparkskins.swc.incr"/>
			</fileset>
		</delete>
	</target>

	<target name="compile" description="Compiles sparkskins.swc">
		<echo message="Compiling frameworks/libs/sparkskins.swc"/>
		<!-- Load the <compc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>
		<!--
			This project builds a theme SWC containing skin classes.
			It has no MXML tags and therefore no manifest.
			Link in the classes (and their dependencies)
			listed in SparkSkinsClasses.as.
			Compile against framework.swc, but don't link it into sparkskins.swc.
			Link in accessibility support.
			Include various CSS and asset files in the SWC.
			Don't put any resources into the SWC. (The classes don't require any.)
			Write a bundle list of referenced resource bundles
			into the file bundles.properties in this directory.
			(This should be an empty list.)
		-->
		<compc fork="true"
			   output="${FLEX_HOME}/frameworks/libs/sparkskins.swc"
			   resource-bundle-list="${basedir}/bundles.properties">
            <!-- If you change this, update ${local.playerglobal.version} above. -->
            <target-player>10</target-player>
			<jvmarg line="${compc.jvm.args}"/>
			<include-classes>SparkSkinsClasses</include-classes>
			<source-path path-element="${basedir}/src"/>
			<library-path/>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs">
                <include name="player/${local.playerglobal.version}/playerglobal.swc"/>
				<include name="framework.swc"/>
				<include name="spark.swc" />
                <include name="textLayout.swc"/>
			</external-library-path>
			<locale/>
			<accessible>true</accessible>
		</compc>
	</target>

	<target name="doc" depends="clean-temp-docs" description="updates sparkskins.swc with asdoc xml">
		<!-- Load the <asdoc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>

	    <condition property="asdoc.jvm.args" value="-Xmx384m">
	        <os family="windows"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="mac"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="unix"/>
	    </condition>

		<!-- Call asdoc to generate dita xml files -->
		<asdoc output="${FLEX_HOME}/tempDoc" lenient="true" failonerror="true" keep-xml="true" skip-xsl="true" >
		    <compiler.source-path path-element="${basedir}/src"/>
		    <doc-classes class="SparkSkinsClasses"/>
		    <external-library-path dir="${FLEX_HOME}/frameworks/libs/player/${local.playerglobal.version}">
		    	<include name="playerglobal.swc" />
		    </external-library-path>
		    <external-library-path dir="${FLEX_HOME}/frameworks/libs">
		    	<include name="framework.swc" />
				<include name="spark.swc" />
		    </external-library-path>
		    <jvmarg line="${asdoc.jvm.args}"/>
		</asdoc>

		<!-- updates sparkskins.swc with asdoc xml -->
		<zip destfile="${FLEX_HOME}/frameworks/libs/sparkskins.swc" update="true">
		    <zipfileset dir="${FLEX_HOME}/tempDoc/tempdita" prefix="docs">
			    <include name="*.*"/>
				<exclude name="ASDoc_Config.xml"/>
				<exclude name="overviews.xml"/>
		    </zipfileset>
		</zip>
	</target>

	<target name="clean-temp-docs">
		<delete dir="${FLEX_HOME}/tempDoc" failonerror="false" includeEmptyDirs="true"/>
	</target>

</project>
