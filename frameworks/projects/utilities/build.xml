<?xml version="1.0"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2006-2007 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<project name="utilities" default="main" basedir=".">
	<property name="FLEX_HOME" location="${basedir}/../../.."/>

	<property file="${FLEX_HOME}/build.properties"/>

	<target name="main" depends="clean,compile" description="Clean build of utilities.swc"/>

	<target name="clean">
		<delete failonerror="false">
			<fileset file="${basedir}/bundles.properties"/>
			<fileset dir="${FLEX_HOME}/frameworks/libs">
				<include name="utilities.swc"/>
				<include name="utilities.swc.incr"/>
			</fileset>
		</delete>
	</target>

	<target name="compile" description="Compiles utilities.swc">
		<echo message="Compiling frameworks/libs/utilities.swc"/>
		<!-- Load the <compc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>
		<!--
			This project has no MXML tags and therefore no manifest.
			Link in the classes (and their dependencies)
			listed in UtilitiesClasses.as.
			Link in accessibility support.
			Don't put any resources into the SWC.
			Write a bundle list of referenced resource bundles
			into the file bundles.properties in this directory.
			(This should be an empty list.)
		-->
		<compc fork="true"
			   output="${FLEX_HOME}/frameworks/libs/utilities.swc"
			   resource-bundle-list="${basedir}/bundles.properties">
			<jvmarg line="${compc.jvm.args}"/>
			<include-classes>UtilitiesClasses</include-classes>
			<source-path path-element="${basedir}/src"/>
            <include-file name="manifest.xml" path="${basedir}/manifest.xml"/>
			<library-path dir="${FLEX_HOME}/frameworks/projects/flash-integration/libs/">
				<include name="FlexComponentBase.swc"/>
			</library-path>
            <library-path dir="${basedir}/libs/">
				<include name="FlexContentHolderThumbnail.swc"/>
			</library-path>
            <external-library-path dir="${FLEX_HOME}/frameworks/libs">
                <include name="player/${global.playerglobal.version}/playerglobal.swc"/>
				<include name="framework.swc"/>
                <include name="textLayout.swc"/>
			</external-library-path>
			<locale/>
			<accessible>true</accessible>
		</compc>
	</target>

	<target name="doc" depends="clean-temp-docs" description="updates utilities.swc with asdoc xml">
		<!-- Load the <asdoc> task. We can't do this at the <project> level -->
		<!-- because targets that run before flexTasks.jar gets built would fail. -->
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/lib/flexTasks.jar"/>

	    <condition property="asdoc.jvm.args" value="-Xmx384m">
	        <os family="windows"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="mac"/>
	    </condition>

	    <condition property="asdoc.jvm.args" value="-Xmx512m">
	        <os family="unix"/>
	    </condition>


		<!-- Call asdoc to generate dita xml files -->
		<asdoc output="${FLEX_HOME}/tempDoc" lenient="true" failonerror="true" keep-xml="true" skip-xsl="true" fork="true">
		    <compiler.source-path path-element="${basedir}/src"/>
		    <doc-classes class="UtilitiesClasses"/>
		    <external-library-path dir="${FLEX_HOME}/frameworks/libs/player/${global.playerglobal.version}">
		    	<include name="playerglobal.swc" />
		    </external-library-path>
		    <external-library-path dir="${FLEX_HOME}/frameworks/libs">
		    	<include name="framework.swc" />
		    	<include name="textLayout.swc" />
		    </external-library-path>
            <library-path dir="${basedir}/libs/">
				<include name="FlexContentHolderThumbnail.swc"/>
			</library-path>
		    <library-path dir="${FLEX_HOME}/frameworks/projects/flash-integration/libs/">
				<include name="FlexComponentBase.swc"/>
			</library-path>
		    <jvmarg line="${asdoc.jvm.args}"/>
		</asdoc>

		<!-- updates utilities.swc with asdoc xml -->
		<zip destfile="${FLEX_HOME}/frameworks/libs/utilities.swc" update="true">
		    <zipfileset dir="${FLEX_HOME}/tempDoc/tempdita" prefix="docs">
			    <include name="*.*"/>
				<exclude name="ASDoc_Config.xml"/>
				<exclude name="overviews.xml"/>
		    </zipfileset>
		</zip>
	</target>

	<target name="clean-temp-docs">
		<delete dir="${FLEX_HOME}/tempDoc" failonerror="false" includeEmptyDirs="true"/>
	</target>

</project>
