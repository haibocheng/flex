################################################################################
##
##  ADOBE SYSTEMS INCORPORATED
##  Copyright 2006-2008 Adobe Systems Incorporated
##  All Rights Reserved.
##
##  NOTICE: Adobe permits you to use, modify, and distribute this file
##  in accordance with the terms of the license agreement accompanying it.
##
################################################################################

benchmark=Ma\u00dfstab f\u00fcr Ausgabeleistung
compiler.accessible=erstellt eine barrierefreie SWF-Datei
compiler.source-path=Liste der Pfadelemente, die die Grundlage der ActionSkript-Klassenhierarchien darstellen
compiler.actionscript-file-encoding=legt ActionScript-Dateikodierung fest. Wenn es in den AS3-Quelldateien keine BOM gibt, verwendet der Kompilierer diese Dateikodierung.
compiler.create-style-manager=Nqs\u00fc_enables the compiled application or module to create a style manager to manage its styles
compiler.context-root=Pfad zum Ersetzen von {context.root}-Tokens f\u00fcr Dienstkanal-Endpunkte
compiler.external-library-path=f\u00fchrt die SWC-Dateien oder Verzeichnisse auf, die bei der Kompilierung verwendet, aber beim Verkn\u00fcpfen weggelassen werden sollen
compiler.fonts.languages.language-range=dient zur Einschr\u00e4nkung der in die SWF-Datei eingebetteten Schriftzeichen
compiler.fonts.managers=Schriftmanagerklassen des Kompilierers, in der Reihenfolge der Aufl\u00f6sungsrichtlinien
compiler.fonts.local-fonts-snapshot=Datei mit Systemschriftdaten von flex2.tools.FontSnapshot.
compiler.headless-server=Flag, das gesetzt werden muss, wenn Flex auf einem Server ohne Anzeige ausgef\u00fchrt wird
compiler.include-libraries=Liste der Bibliotheken (SWCs), die in der SWF-Datei vollst\u00e4ndig ber\u00fccksichtigt werden sollen
compiler.incremental=aktiviert die inkrementelle Kompilierung
compiler.keep-all-type-selectors=deaktiviert die L\u00f6schung nicht verwendeter CSS-Typselektoren
compiler.keep-generated-actionscript=speichert tempor\u00e4re Quelldateien, die bei der MXML-Kompilierung generiert wurden
compiler.keep-generated-signatures=speichert w\u00e4hrend der AS3-Kompilierung erzeugte Signaturdateien
compiler.keep-as3-metadata=beh\u00e4lt die angegebenen Metadaten in der SWF-Datei bei
compiler.library-path=Liste der SWC-Dateien oder Verzeichnisse, die SWC-Dateien enthalten
compiler.locale=gibt die Sprache f\u00fcr die Internationalisierung an
compiler.mxml.compatibility-version=gibt eine Kompatibilit\u00e4tsversion an, z. B.: -compatibility-version=2.0.1
compiler.namespaces.namespace=gibt eine URI zur Verkn\u00fcpfung mit einem Manifest von Komponenten an, die als MXML-Elemente verwendet werden sollen
compiler.optimize=aktiviert die SWF-Optimierung nach der Verkn\u00fcpfung
compiler.profile=erzeugt einen Film, der zur Erstellung von Leistungs- und Speicherprofilen geeignet ist
compiler.services=Pfad zur Flex Data Services-Konfigurationsdatei
compiler.show-binding-warnings=aktiviert bzw. deaktiviert die Anzeige von Warnungen, die vom Datenbindungscode generiert werden
compiler.show-actionscript-warnings=f\u00fchrt den AS3-Kompilierer in einem Modus aus, der zul\u00e4ssigen, aber m\u00f6glicherweise falschen Code erkennt
compiler.show-dependency-warnings=zeigt Warnungen an, wenn Abh\u00e4ngigkeiten bei der Kompilierung nicht ermittelt werden k\u00f6nnen
compiler.show-deprecation-warnings=aktiviert bzw. deaktiviert die Ausgabe einer Warnung bei der Verwendung von veralteten APIs
compiler.show-shadowed-device-font-warnings=aktiviert bzw. deaktiviert Warnungen, die ausgegeben werden, wenn eine eingebettete Schrift einer Ger\u00e4teschrift entspricht
compiler.show-unused-type-selector-warnings=aktiviert bzw. deaktiviert die Anzeige von Warnungen zu nicht verwendeten CSS-Typselektoren
compiler.signature-directory=[relatives/absolutes] Verzeichnis, in dem as3-Signaturen gespeichert werden
compiler.strict=f\u00fchrt den AS3-Kompilierer im strengen Fehlerpr\u00fcfmodus aus.
compiler.as3=verwendet das klassenbasierte Objektmodell von ActionScript 3, um eine h\u00f6here Leistung und eine bessere Fehlerberichterstattung zu erm\u00f6glichen. Im klassenbasierten Objektmodell werden die meisten integrierten Funktionen als fixierte Methoden von Klassen implementiert.
compiler.es=verwendet das prototypbasierte Objektmodell von ECMAScript Edition 3, um eine dynamische \u00dcberschreribung von Prototypeigenschaften zu erm\u00f6glichen. Im prototypbasierten Objektmodell werden integrierte Funktionen als dynamische Eigenschaften von Prototypobjekten implementiert.
compiler.theme=Liste der CSS- oder SWC-Dateien, die als Thema angewendet werden sollen
compiler.verbose-stacktraces=speichert Callstack-Informationen in der SWF zum Debugging
compiler.memory-usage-factor=gibt die Speichernutzung des Kompilierers an. Der Standardwert ist 1000.
compiler.conservative=verwendet den konservativen Algorithmus zur Kompilierung. F\u00fcr gro\u00dfe Anwendungen nicht empfehlenswert. Standardeinstellung ist 'false'.
compiler.warn-array-tostring-changes=Array.toString()-Format hat sich ge\u00e4ndert.
compiler.warn-assignment-within-conditional=Zuweisung in 'conditional'.
compiler.warn-bad-array-cast=M\u00f6glicherweise ung\u00fcltiger Konvertierungsvorgang f\u00fcr Array.
compiler.warn-bad-bool-assignment=Ein nicht boolescher Wert wurde an einer Stelle verwendet, an der ein boolescher Wert erwartet wurde.
compiler.warn-bad-date-cast=Ung\u00fcltiger Konvertierungsvorgang f\u00fcr Datum.
compiler.warn-bad-es3-type-method=Unbekannte Methode.
compiler.warn-bad-es3-type-prop=Unbekannte Eigenschaft.
compiler.warn-bad-nan-comparison=Unlogischer Vergleich mit NaN. Alle Vergleiche mit NaN werden als 'false' ausgewertet, weil NaN != NaN.
compiler.warn-bad-null-assignment=Unm\u00f6gliche Zuweisung zu null.
compiler.warn-bad-null-comparison=Unlogischer Vergleich mit null.
compiler.warn-bad-undefined-comparison=Unlogischer Vergleich mit 'undefined'. Nur typenlose Variablen (oder Variablen des Typs *) d\u00fcrfen undefiniert sein.
compiler.warn-boolean-constructor-with-no-args=Boolean() ohne Argumente gibt in ActionScript 3.0 'false' zur\u00fcck. Boolean() gab in ActionScript 2.0 'undefined' zur\u00fcck.
compiler.warn-changes-in-resolve=__resolve wird nicht mehr unterst\u00fctzt.
compiler.warn-class-is-sealed=Die Klasse ist gesperrt. Es ist nicht m\u00f6glich, ihr auf dynamische Weise weitere Mitglieder hinzuzuf\u00fcgen.
compiler.warn-const-not-initialized=Konstante nicht initialisiert.
compiler.warn-constructor-returns-value=In einem neuen Ausdruck verwendete Funktion gibt einen Wert zur\u00fcck. Das Ergebnis ist keine neue Instanz der Funktion, sondern der R\u00fcckgabewert der Funktion.
compiler.warn-deprecated-event-handler-error=EventHandler wurde nicht als Listener hinzugef\u00fcgt.
compiler.warn-deprecated-function-error=Nicht unterst\u00fctzte ActionScript 2.0-Funktion.
compiler.warn-deprecated-property-error=Nicht unterst\u00fctzte ActionScript 2.0-Eigenschaft.
compiler.warn-duplicate-argument-names=Mehrere gleichnamige Argumente.
compiler.warn-for-var-in-changes=ActionScript 3.0 iteriert in willk\u00fcrlicher Reihenfolge \u00fcber die Eigenschaften eines Objekts in einer Anweisung des Typs "for x in Ziel".
compiler.warn-import-hides-class=Durch den Import eines Pakets, das den gleichen Namen wie die aktuelle Klasse tr\u00e4gt, wird dieser Klassenbezeichner in diesem Bereich verborgen.
compiler.warn-instance-of-changes=Verwendung des instanceof-Operators
compiler.warn-internal-error=Interner Kompilierer-Fehler.
compiler.warn-level-not-supported=_level wird nicht mehr unterst\u00fctzt. Weitere Informationen siehe flash.display package.
compiler.warn-missing-namespace-decl=Fehlende Namespace-Deklaration (z.B. die Variable ist nicht als \u00f6ffentlich, privat usw. definiert).
compiler.warn-negative-uint-literal=Ein negativer Wert wird durch die Zuweisung zu einem uint-Datentyp zu einem gro\u00dfen positiven Wert.
compiler.warn-no-constructor=Fehlender Konstruktor.
compiler.warn-no-explicit-super-call-in-constructor=Die Anweisung super() wurde nicht im Konstruktor aufgerufen.
compiler.warn-no-type-decl=Fehlende Typdeklaration.
compiler.warn-number-from-string-changes=In ActionScript 3.0 werden Leerzeichen ignoriert und '' gibt 0 zur\u00fcck. Number() gibt in ActionScript 2.0 NaN zur\u00fcck, wenn der Parameter '' ist oder Leerzeichen enth\u00e4lt.
compiler.warn-scoping-change-in-this=Der G\u00fcltigskeitsbereich f\u00fcr das Stichwort 'this' hat sich ge\u00e4ndert. Klassenmethoden, die aus einer Instanz einer Klasse extrahiert wurden, l\u00f6sen 'this' immer zu dieser Instanz auf. In ActionScript 2.0 wird 'this' dynamisch anhand der Stelle gesucht, von der aus die Methode aufgerufen wird.
compiler.warn-slow-text-field-addition=Ineffiziente Verwendung von += in TextField.
compiler.warn-unlikely-function-value=M\u00f6glicherweise fehlen Klammern.
compiler.warn-xml-class-has-changed=M\u00f6gliche Verwendung der XML-Klasse von ActionScript 2.0.
debug-password=das in f\u00fcr Debugging geeignete SWF-Dateien einzuschlie\u00dfende Kennwort
default-background-color=standardm\u00e4\u00dfige Hintergrundfarbe (kann vom Anwendungscode \u00fcberschrieben werden)
default-frame-rate=in der SWF zu verwendende standardm\u00e4\u00dfige Frame-Rate.
default-script-limits=standardm\u00e4\u00dfige Skriptausf\u00fchrungsgrenzen (k\u00f6nnen durch Stammattribute \u00fcberschrieben werden)
default-size=standardm\u00e4\u00dfige Anwendungsgr\u00f6\u00dfe (kann von Stammattributen in der Anwendung \u00fcberschrieben werden)
dependency-info=Informationen zur Abh\u00e4ngigkeit der Ausgabeklassen
dependency.minimize-dependency-set=entfernt eine SWC aus der Abh\u00e4ngigkeitsgruppe, wenn die in der SWC aufgel\u00f6sten Skripten eine Untergruppe der in einer anderen abh\u00e4ngigen SWC aufgel\u00f6sten Skripten sind.  
dependency.show-external-classes=auf \u201etrue\u201c setzen, um die Skriptklassen anzuzeigen, die die Abh\u00e4ngigkeiten zwischen den SWC-Dateien verursachen (Standardeinstellung ist \u201efalse\u201c).
dependency.show-swcs=Liste der SWC-Namen, ein vollst\u00e4ndiger Pfad ist nicht erforderlich. Abh\u00e4ngigkeitsinformationen werden nur f\u00fcr die angegebenen SWC-Dateien angezeigt; hat keinen Einfluss auf die Abh\u00e4ngigkeitsanalyse.
dependency.show-types=auf \u201etrue\u201c setzen, um die Abh\u00e4ngigkeitstypen von Skriptklassen anzuzeigen (Standardeinstellung ist \u201efalse\u201c).
dependency.types=eine Liste der Abh\u00e4ngigkeitstypen zur Eingrenzung der verwendeten Klassen, um SWC-Abh\u00e4ngigkeiten zu ermitteln. M\u00f6gliche Werte sind i,s,n und e. In der Standardeinstellung werden alle Abh\u00e4ngigkeitstypen verwendet.
digest.rsl-file=Speicherort der RSL-Datei f\u00fcr die Berechnung des Digest von
digest.swc-path=Pfad der SWC-Datei oder des Verzeichnisses, in dem das Digest aktualisiert wird
directory=gibt die Bibliothek als offenes Verzeichnis und nicht als SWC-Datei aus
dump-config=schreibt eine Datei, die alle gegenw\u00e4rtig festgelegten Konfigurationswerte enth\u00e4lt, in einem Format, das f\u00fcr den Einsatz als Flex-Konfigurationsdatei geeignet ist
externs=eine Liste der Symbole, die beim Erstellen einer SWF-Datei in Verkn\u00fcpfungen weggelassen werden sollen
includes=eine Liste der Symbole, die beim Erstellen einer SWF immer verkn\u00fcpft werden sollen
include-classes=Liste der in die ausgegebene SWC-Datei aufzunehmenden Klassen
include-file=Liste der in die ausgegebene SWC-Datei aufzunehmenden benannten Dateien
include-lookup-only=bei 'true' werden Manifest-Eintr\u00e4ge mit lookupOnly=true in den SWC-Katalog aufgenommen. Die Standardeinstellung ist 'false'.
include-namespaces=alle Klassen in den aufgef\u00fchrten Namespaces werden in die ausgegebene SWC-Datei aufgenommen.
include-resource-bundles=Liste der in die ausgegebene SWC-Datei aufzunehmenden Ressourcen-Bundles
include-sources=Liste der in die ausgegebene SWC-Datei aufzunehmenden Verzeichnisse und Quelldateien
include-stylesheet=Liste der in die ausgegebene SWC-Datei aufzunehmenden Stylesheet-Ressourcen
file-specs=eine Liste der zu kompilierenden Quelldateien, die letzte angegebene Datei wird als Zielanwendung verwendet
frames.frame=SWF-Frame-Beschriftung mit einer Abfolge von Klassennamen, die mit dem Frame verkn\u00fcpft werden.
generate-frame-loader=aktiviert bzw. deaktiviert die Erstellung einer von IFlexModuleFactory abgeleiteten Loader-Klasse
help=Um Informationen zur Befehlszeilensyntax und Beschreibungen der Konfigurationsvariablen zu erhalten, geben Sie eine Suchzeichenfolge oder eines der folgenden speziellen Schl\u00fcsselw\u00f6rter ein:\n\ \ \ syntax - beschreibt die allgemeine Befehlszeilensyntax\n\ \ \ list - zeigt eine Liste aller grundlegender Konfigurationsvariablen an\n\ \ \ advanced - zeigt auch erweiterte Konfigurationsvariablen an\n\ \ \ aliases - sortiert mithilfe der Aliaskurzform f\u00fcr die Variable\n\ \ \ details - zeigt immer die vollst\u00e4ndigen Informationen f\u00fcr jedes Element an\nAlle anderen Hilfeschl\u00fcsselw\u00f6rter entsprechen vollst\u00e4ndigen oder teilweisen Konfigurationsvariablen, Aliasen oder Texten, die in der Beschreibung der Konfigurationsvariablen gesucht werden sollen.\n\nBeispielsweise w\u00fcrden mit \u201e-help advanced aliases foo\u201c alle Konfigurationsoptionen (grundlegende und erweiterte Optionen) angezeigt, die den Text \u201efoo\u201c enthalten, und zwar sortiert nach dem Aliasnamen.\n\nIn der Beschreibung einzelner Konfigurationsvariablen sind erforderliche Werte durch geschweifte Klammern bzw. optionale Werte durch eckige Klammern gekennzeichnet. [...] ist ein Hinweis darauf, dass es sich um eine beliebig lange Liste mit Werten handelt.
lazy-init=Aktiviert bzw. deaktiviert die bei Bedarf erfolgende ABC-Bytecode-Initialisierung
link-report=Gibt einen XML-formatierten Bericht aller mit der Anwendung verkn\u00fcpften Definitionen aus.
load-config=l\u00e4dt eine Datei mit Konfigurationsoptionen
load-externs=eine XML-Datei mit den Symbolen <def>, <pre> und <ext>, die beim Erstellen einer SWF-Datei in Verkn\u00fcpfungen weggelassen werden sollen
metadata.contributor=Der Name eines Mitarbeiters, der in den SWF-Metadaten gespeichert werden soll
metadata.creator=Der Name eines Verfassers, der in den SWF-Metadaten gespeichert werden soll
metadata.date=Das Erstellungsdatum, das in den SWF-Metadaten gespeichert werden soll
metadata.description=Die Standardbeschreibung, die in den SWF-Metadaten gespeichert werden soll
metadata.language=Die Sprache, die in den SWF-Metadaten gespeichert werden soll (z.B. EN, DE)
metadata.localized-description=Eine lokalisierte RDF/XMP-Beschreibung, die in den SWF-Metadaten gespeichert werden soll
metadata.localized-title=Ein lokalisierter RDF/XMP-Titel, der in den SWF-Metadaten gespeichert werden soll
metadata.publisher=Der Name eines Herausgebers, der in den SWF-Metadaten gespeichert werden soll
metadata.title=Der Standardtitel, der in den SWF-Metadaten gespeichert werden soll
output=der Dateiname des zu erstellenden SWF-Films
raw-metadata=XML-Text, der in den SWF-Metadaten gespeichert werden soll (\u00fcberschreibt metadata.*-Konfiguration)
runtime-shared-libraries=eine Liste der URLs der zur Laufzeit verf\u00fcgbaren gemeinsamen Bibliotheken, die vor dem Anwendungsstart geladen werden sollen
use-network=aktiviert bzw. deaktiviert die Kennzeichnung der SWF-Datei f\u00fcr den Zugriff auf Netzwerkressourcen
version=zeigt die Build-Version des Programms an
warnings=aktiviert bzw. deaktiviert die Anzeige von Warnungen

Syntax=Verwendung: ${program} [configuration options] [default arguments]\n\nKonfigurationsoptionen k\u00f6nnen in der Befehlszeile als \u201e-variable=value,value,value\u201c festgelegt werden. (Die Anzahl der erforderlichen Werte h\u00e4ngt von der jeweiligen Variable ab.) Boolesche Optionen k\u00f6nnen mit \u201e-variable=true\u201c aktiviert und mit \u201e-variable=false\u201c deaktiviert werden, wobei \u201e-variable\u201c die Kurzform f\u00fcr \u201e-variable=true\u201c ist. Variablen k\u00f6nnen durch Festlegung von \u201e-variable=\u201c ohne Wert nach dem Gleichheitszeichen gel\u00f6scht werden.\n\nDie Standardargumentliste entspricht der Festlegung der Variablen \u201e${defaultVar}\u201c. Mithilfe der Sonderzeichenfolge \u201e--\u201c kann die Verarbeitung benannter Konfigurationsoptionen beendet und die Interpretation verbleibender Werte in der Befehlszeile als Standardargumente erzwungen werden.\n\nIm Allgemeinen kann eine bestimmte Variable nur einmal festgelegt werden. Einige Variablen k\u00f6nnen jedoch mehrmals festgelegt werden, wenn sie in der Beschreibung als \u201erepeatable\u201c definiert sind; Beispiel: \u201e-a=x,y,z\u201c kann auch als \u201e-a=x -a=y -a=z\u201c festgelegt werden, wenn \u201ea\u201c wiederholbar ist. Ein hilfreicheres Merkmal wiederholbarer Variablen ist, dass durch die Verwendung der speziellen Syntax \u201e-variable+=value,value\u201c die festgelegten neuen Werte an den aktuellen Wert angef\u00fcgt werden, anstatt die aktuelle Werteliste zu ersetzen.\n\nKonfigurationsvariablen weisen manchmal verk\u00fcrzte Aliase auf, um die Eingabe zu vereinfachen. F\u00fcr hierarchische gepunktete Variablennamen wird automatisch ein Alias f\u00fcr den \u201eBlattnamen\u201c generiert, falls er eindeutig ist.\n\nIn der Befehlszeile eingegebene Dateinamen m\u00fcssen ein absoluter Pfad sein oder einen relativen Bezug zum aktuellen Verzeichnis aufweisen.\n\nMithilfe von \u201e${program} -help list\u201c k\u00f6nnen Sie die verf\u00fcgbaren Konfigurationsvariablen anzeigen.

AdvancedSyntax=Verwendung: ${program} [configuration options] [default arguments]\n\nKonfigurationsoptionen k\u00f6nnen in der Befehlszeile als \u201e-variable=value,value,value\u201c oder \u201e-variable value value\u201c festgelegt werden. (Die Anzahl der erforderlichen Werte h\u00e4ngt von der jeweiligen Variable ab.) Boolesche Optionen k\u00f6nnen mit \u201e-variable=true\u201c aktiviert und mit \u201e-variable=false\u201c deaktiviert werden, wobei \u201e-variable\u201c die Kurzform f\u00fcr \u201e-variable=true\u201c ist. Variablen k\u00f6nnen durch Festlegung von \u201e-variable=\u201c ohne Wert nach dem Gleichheitszeichen gel\u00f6scht werden.\n\nDie Standardargumentliste entspricht der Festlegung der Variablen \u201e${defaultVar}\u201c. Mithilfe der Sonderzeichenfolge \u201e--\u201c kann die Verarbeitung benannter Konfigurationsoptionen beendet und die Interpretation verbleibender Werte in der Befehlszeile als Standardargumente erzwungen werden.\n\nIm Allgemeinen kann eine bestimmte Variable nur einmal festgelegt werden. Einige Variablen k\u00f6nnen jedoch mehrmals festgelegt werden, wenn sie in der Beschreibung als \u201erepeatable\u201c definiert sind; Beispiel: \u201e-a=x,y,z\u201c kann auch als \u201e-a=x -a=y -a=z\u201c festgelegt werden, wenn \u201ea\u201c wiederholbar ist. Ein hilfreicheres Merkmal wiederholbarer Variablen ist, dass durch die Verwendung der speziellen Syntax \u201e-variable+=value,value\u201c die festgelegten neuen Werte an den aktuellen Wert angef\u00fcgt werden, anstatt die aktuelle Werteliste zu ersetzen.\n\nKonfigurationsvariablen weisen manchmal verk\u00fcrzte Aliase auf, um die Eingabe zu vereinfachen. F\u00fcr hierarchische gepunktete Variablennamen wird automatisch ein Alias f\u00fcr den \u201eBlattnamen\u201c generiert, falls er eindeutig ist.\n\nFalls eine als $${token} formatierte Sequenz in einem Konfigurationswert gefunden wird, wird sie auf den Wert des Tokens erweitert. Alle Java-Eigenschaften werden als Token behandelt, aber Token k\u00f6nnen auch mithilfe von \u201e+token=Wert\u201c in der Befehlszeile festgelegt werden. Die Token-Ersetzung ist auf einfache Zeichenfolgen beschr\u00e4nkt, kann aber rekursiv definiert werden.\n\nIn der Befehlszeile eingegebene Dateinamen m\u00fcssen ein absoluter Pfad sein oder einen relativen Bezug zum aktuellen Verzeichnis aufweisen.\n\nMithilfe von \u201e${program} -help list\u201c k\u00f6nnen Sie die verf\u00fcgbaren Konfigurationsvariablen anzeigen.

HelpKeywords=die Stichw\u00f6rter lauten 'syntax', 'list', 'advanced', 'aliases', 'details'. Sie k\u00f6nnen auch einen Suchbegriff eingeben
Advanced=erweitert
Repeatable=wiederholbar
Default=Standardvariable
Alias=Alias
FullName=vollst\u00e4ndiger Name
NoKeywordsMatched=keine \u00fcbereinstimmenden Stichw\u00f6rter.
# note: do not localize the string -help, it has syntactic significance
Brief=${program} [Optionen] [defaultVar]\nWeitere Informationen erhalten Sie, wenn Sie '${program} -help' eingeben.\n\n

compiler.allow-source-path-overlap=pr\u00fcft, ob ein Quellpfadeintrag ein Unterverzeichnis eines anderen Quellpfadeintrags ist. Dadurch werden die Paketnamen von MXML-Komponenten eindeutig.
compiler.debug=generiert einen Film, der zum Debugging geeignet ist
compiler.define=definiert eine globale bedingte AS3-Kompilierungsdefinition, z. B. -define=CONFIG::debugging,true oder -define+=CONFIG::debugging,true. (zum Anh\u00e4ngen an bestehende Definitionen in flex-config.xml) 
compiler.defaults-css-url=definiert den Speicherort des Standard-Stylesheets. Die Einstellung dieser Option bewirkt, dass das normalerweise verwendete Stylesheet 'defaults.css' in der Datei 'framework.swc' \u00fcberschrieben wird.
compiler.fonts.max-cached-fonts=legt fest, wie viele Schriften sich maximal im Server-Cache befinden d\u00fcrfen. Der Standardwert ist 20.
compiler.fonts.max-glyphs-per-face=legt fest, wie viele Schriftzeichenkonturen der Server-Cache maximal f\u00fcr jede Schrift enthalten darf. Der Standardwert ist 1000.
compiler.fonts.flash-type=aktiviert FlashType f\u00fcr eingebettete Schriften, wodurch kleinere Schriften klarer wirken.
compiler.fonts.advanced-anti-aliasing=aktiviert erweitertes Anti-Aliasing f\u00fcr eingebettete Schriften, wodurch kleinere Schriften klarer wirken
compiler.use-resource-bundle-metadata=bestimmt, ob Ressourcen-Bundles in die Anwendung eingeschlossen werden.
compiler.warn-duplicate-variable-def=Doppelte Variablendefinition 
resource-bundle-list=druckt eine Liste der Ressourcen-Bundles in eine Datei zur Eingabe im compc-Kompilierer, um eine Ressourcen-Bundle-SWC-Datei zu erstellen. 
licenses.license=gibt ein Produkt und eine Seriennummer an. 
runtime-shared-libraries-path=gibt eine SWC-Datei oder ein Verzeichnis f\u00fcr die Verkn\u00fcpfung an sowie eine zu ladende RSL-URL mit optionalen Failover-URLs 
compute-digest=schreibt ein Digest in die catalog.xml einer Bibliothek. Dies ist notwendig, wenn die Bibliothek in der -runtime-shared-libraries-path-Option verwendet wird.
static-link-runtime-shared-libraries=erzeugt eine statische Verkn\u00fcpfung der in der -runtime-shared-libraries-path-Option angegebenen Bibliotheken
verify-digests=\u00fcberpr\u00fcft die Richtigkeit der zur Laufzeit geladenen Bibliotheken
target-player=gibt die Version des Players an, den die Anwendung zum Ziel hat; Funktionen, die eine h\u00f6here Version erfordern, werden nicht in die Anwendung kompiliert; der unterst\u00fctzte Mindestwert ist "9.0.0".

# asdoc options
doc-classes=Liste der Klassen, die in die Dokumentation aufgenommen werden sollen.
doc-namespaces=Liste der Namensr\u00e4ume, die in die Dokumentation aufgenommen werden sollen.
doc-sources=Liste der Quelldateien, die in die Dokumentation aufgenommen werden sollen.
exclude-classes=Liste der Klassen, die aus der Dokumentation ausgeschlossen werden sollen.
exclude-dependencies=Boolescher Wert zur Angabe, ob Abh\u00e4ngigkeiten ausgeschlossen werden sollen.
footer=Fu\u00dfzeilenzeichenfolge, die in der Dokumentation angezeigt werden soll.
left-frameset-width=Breite des linken Frames.
main-title=Titel, der in der Titelleiste angezeigt werden soll.
templates-path=Pfad f\u00fcr benutzerdefinierte Vorlagen.
window-title=Titel, der im Browserfenster angezeigt werden soll.
lenient=Wohlgeformte HTML-Fehler als Warnungen melden.
packages.package=gibt eine Beschreibung f\u00fcr einen Paketnamen an.
exclude-sources=Liste der Quelldateien, die aus der Dokumentation ausgeschlossen werden sollen.
examples-path=Pfad, in dem nach den Beispieldateien gesucht werden soll.
date-in-footer=legt fest, ob das Datum mit in die Fu\u00dfzeile aufgenommen werden soll.
package-description-file=Datei mit Beschreibung f\u00fcr Pakete.
